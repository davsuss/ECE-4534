

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Feb  6 17:56:00 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  001828                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _j
    70  001828  0064               	dw	100
    71  0000                     _INTCONbits	set	4082
    72  0000                     _IPR1bits	set	3999
    73  0000                     _LATB	set	3978
    74  0000                     _LATBbits	set	3978
    75  0000                     _OSCCON	set	4051
    76  0000                     _OSCCONbits	set	4051
    77  0000                     _OSCTUNEbits	set	3995
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PIR1bits	set	3998
    80  0000                     _RCONbits	set	4048
    81  0000                     _RCREG	set	4014
    82  0000                     _RCSTAbits	set	4011
    83  0000                     _SSPADD	set	4040
    84  0000                     _SSPBUF	set	4041
    85  0000                     _SSPCON1	set	4038
    86  0000                     _SSPCON1bits	set	4038
    87  0000                     _SSPCON2	set	4037
    88  0000                     _SSPCON2bits	set	4037
    89  0000                     _SSPSTAT	set	4039
    90  0000                     _SSPSTATbits	set	4039
    91  0000                     _T0CON	set	4053
    92  0000                     _T0CONbits	set	4053
    93  0000                     _TMR0H	set	4055
    94  0000                     _TMR0L	set	4054
    95  0000                     _TMR1H	set	4047
    96  0000                     _TMR1L	set	4046
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISCbits	set	3988
    99                           
   100                           	psect	nvCOMRAM
   101  00004E                     __pnvCOMRAM:
   102                           	opt stack 0
   103  00004E                     _uc_ptr:
   104                           	opt stack 0
   105  00004E                     	ds	2
   106                           
   107                           	psect	nvBANK0
   108  0000E1                     __pnvBANK0:
   109                           	opt stack 0
   110  0000E1                     _ic_ptr:
   111                           	opt stack 0
   112  0000E1                     	ds	2
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  001404                     __pcinit:
   118                           	opt stack 0
   119  001404                     start_initialization:
   120                           	opt stack 0
   121  001404                     __initialization:
   122                           	opt stack 0
   123                           
   124                           ; Clear objects allocated to BANK1 (162 bytes)
   125  001404  EE01  F000         	lfsr	0,__pbssBANK1
   126  001408  0EA2               	movlw	162
   127  00140A                     clear_0:
   128  00140A  6AEE               	clrf	postinc0,c
   129  00140C  06E8               	decf	wreg,f,c
   130  00140E  E1FD               	bnz	clear_0
   131                           
   132                           ; Clear objects allocated to BANK0 (58 bytes)
   133  001410  EE00  F080         	lfsr	0,__pbssBANK0
   134  001414  0E3A               	movlw	58
   135  001416                     clear_1:
   136  001416  6AEE               	clrf	postinc0,c
   137  001418  06E8               	decf	wreg,f,c
   138  00141A  E1FD               	bnz	clear_1
   139                           
   140                           ; Clear objects allocated to COMRAM (8 bytes)
   141  00141C  EE00  F046         	lfsr	0,__pbssCOMRAM
   142  001420  0E08               	movlw	8
   143  001422                     clear_2:
   144  001422  6AEE               	clrf	postinc0,c
   145  001424  06E8               	decf	wreg,f,c
   146  001426  E1FD               	bnz	clear_2
   147                           
   148                           ; Initialize objects allocated to COMRAM (2 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  001428  0E28               	movlw	low __pidataCOMRAM
   151  00142A  6EF6               	movwf	tblptrl,c
   152  00142C  0E18               	movlw	high __pidataCOMRAM
   153  00142E  6EF7               	movwf	tblptrh,c
   154  001430  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  001432  6EF8               	movwf	tblptru,c
   156  001434  0009               	tblrd		*+	;fetch initializer
   157  001436  CFF5 F050          	movff	tablat,__pdataCOMRAM
   158  00143A  0009               	tblrd		*+	;fetch initializer
   159  00143C  CFF5 F051          	movff	tablat,__pdataCOMRAM+1
   160  001440                     end_of_initialization:
   161                           	opt stack 0
   162  001440                     __end_of__initialization:
   163                           	opt stack 0
   164  001440  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165  001442  6EF8               	movwf	tblptru,c
   166  001444  0100               	movlb	0
   167  001446  EF7A  F004         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssCOMRAM
   176  000046                     __pbssCOMRAM:
   177                           	opt stack 0
   178  000046                     _length:
   179                           	opt stack 0
   180  000046                     	ds	2
   181  000048                     _swit:
   182                           	opt stack 0
   183  000048                     	ds	2
   184  00004A                     _x:
   185                           	opt stack 0
   186  00004A                     	ds	2
   187  00004C                     _MQ_Main_Willing_to_block:
   188                           	opt stack 0
   189  00004C                     	ds	1
   190  00004D                     _USART_Status:
   191                           	opt stack 0
   192  00004D                     	ds	1
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	dataCOMRAM
   201  000050                     __pdataCOMRAM:
   202                           	opt stack 0
   203  000050                     _j:
   204                           	opt stack 0
   205  000050                     	ds	2
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           
   213                           	psect	bssBANK0
   214  000080                     __pbssBANK0:
   215                           	opt stack 0
   216  000080                     _Send:
   217                           	opt stack 0
   218  000080                     	ds	2
   219  000082                     _i:
   220                           	opt stack 0
   221  000082                     	ds	2
   222  000084                     _ToMainHigh_MQ:
   223                           	opt stack 0
   224  000084                     	ds	54
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           
   232                           	psect	bssBANK1
   233  000100                     __pbssBANK1:
   234                           	opt stack 0
   235  000100                     _FromMainHigh_MQ:
   236                           	opt stack 0
   237  000100                     	ds	54
   238  000136                     _FromMainLow_MQ:
   239                           	opt stack 0
   240  000136                     	ds	54
   241  00016C                     _ToMainLow_MQ:
   242                           	opt stack 0
   243  00016C                     	ds	54
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           
   251                           	psect	cstackBANK1
   252  0001A2                     __pcstackBANK1:
   253                           	opt stack 0
   254  0001A2                     send_msg@qptr:
   255                           	opt stack 0
   256  0001A2                     recv_msg@qptr:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x0
   260  0001A2                     	ds	2
   261  0001A4                     send_msg@length:
   262                           	opt stack 0
   263  0001A4                     recv_msg@maxlength:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x2
   267  0001A4                     	ds	1
   268  0001A5                     send_msg@msgtype:
   269                           	opt stack 0
   270  0001A5                     recv_msg@msgtype:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x3
   274  0001A5                     	ds	1
   275  0001A6                     send_msg@data:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x4
   279  0001A6                     	ds	1
   280  0001A7                     recv_msg@data:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x5
   284  0001A7                     	ds	1
   285  0001A8                     ??_send_msg:
   286                           
   287                           ; 0 bytes @ 0x6
   288  0001A8                     	ds	1
   289  0001A9                     ??_recv_msg:
   290  0001A9                     send_msg@tlength:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x7
   294  0001A9                     	ds	2
   295  0001AB                     send_msg@slot:
   296                           	opt stack 0
   297  0001AB                     recv_msg@slot:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x9
   301  0001AB                     	ds	1
   302  0001AC                     send_msg@qmsg:
   303                           	opt stack 0
   304  0001AC                     recv_msg@tlength:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0xA
   308  0001AC                     	ds	2
   309  0001AE                     ToMainHigh_sendmsg@msgtype:
   310                           	opt stack 0
   311  0001AE                     recv_msg@qmsg:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xC
   315  0001AE                     	ds	1
   316  0001AF                     ToMainHigh_sendmsg@data:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xD
   320  0001AF                     	ds	1
   321  0001B0                     ToMainHigh_recvmsg@msgtype:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0xE
   325  0001B0                     	ds	1
   326  0001B1                     ToMainHigh_sendmsg@length:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0xF
   330  0001B1                     	ds	1
   331  0001B2                     ToMainHigh_recvmsg@data:
   332                           	opt stack 0
   333  0001B2                     timer0_lthread@tptr:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x10
   337  0001B2                     	ds	2
   338  0001B4                     ToMainHigh_recvmsg@maxlength:
   339                           	opt stack 0
   340  0001B4                     timer0_lthread@msgtype:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x12
   344  0001B4                     	ds	2
   345  0001B6                     timer0_lthread@length:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x14
   349  0001B6                     	ds	2
   350  0001B8                     timer0_lthread@msgbuffer:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x16
   354  0001B8                     	ds	2
   355  0001BA                     ??_timer0_lthread:
   356                           
   357                           ; 0 bytes @ 0x18
   358  0001BA                     	ds	1
   359  0001BB                     timer0_lthread@msgval:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x19
   363  0001BB                     	ds	2
   364  0001BD                     timer0_lthread@val:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x1B
   368  0001BD                     	ds	2
   369  0001BF                     main@msgbuffer:
   370                           	opt stack 0
   371                           
   372                           ; 11 bytes @ 0x1D
   373  0001BF                     	ds	11
   374  0001CA                     main@last_reg_recvd:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x28
   378  0001CA                     	ds	1
   379  0001CB                     main@t0thread_data:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x29
   383  0001CB                     	ds	2
   384  0001CD                     main@t1thread_data:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x2B
   388  0001CD                     	ds	2
   389  0001CF                     main@length:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x2D
   393  0001CF                     	ds	1
   394  0001D0                     main@msgtype:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x2E
   398  0001D0                     	ds	1
   399  0001D1                     main@uc:
   400                           	opt stack 0
   401                           
   402                           ; 5 bytes @ 0x2F
   403  0001D1                     	ds	5
   404  0001D6                     main@ic:
   405                           	opt stack 0
   406                           
   407                           ; 40 bytes @ 0x34
   408  0001D6                     	ds	40
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416                           	psect	cstackBANK0
   417  0000BA                     __pcstackBANK0:
   418                           	opt stack 0
   419  0000BA                     i2ToMainHigh_sendmsg@msgtype:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x0
   423  0000BA                     	ds	1
   424  0000BB                     i2ToMainHigh_sendmsg@data:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x1
   428  0000BB                     	ds	2
   429  0000BD                     ??_i2c_int_handler:
   430  0000BD                     ??_timer0_int_handler:
   431                           
   432                           ; 0 bytes @ 0x3
   433  0000BD                     	ds	1
   434  0000BE                     timer0_int_handler@val:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x4
   438  0000BE                     	ds	1
   439  0000BF                     i2c_int_handler@error_buf:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x5
   443  0000BF                     	ds	3
   444  0000C2                     i2c_int_handler@data_written:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x8
   448  0000C2                     	ds	1
   449  0000C3                     i2c_int_handler@overrun_error:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x9
   453  0000C3                     	ds	1
   454  0000C4                     i2c_int_handler@i2c_data:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xA
   458  0000C4                     	ds	1
   459  0000C5                     i2c_int_handler@msg_to_send:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463  0000C5                     	ds	1
   464  0000C6                     i2c_int_handler@msg_ready:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0xC
   468  0000C6                     	ds	1
   469  0000C7                     i2c_int_handler@data_read:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xD
   473  0000C7                     	ds	1
   474  0000C8                     ??_InterruptHandlerHigh:
   475                           
   476                           ; 0 bytes @ 0xE
   477  0000C8                     	ds	15
   478  0000D7                     ?_in_high_int:
   479                           	opt stack 0
   480  0000D7                     i2c_configure_slave@addr:
   481                           	opt stack 0
   482  0000D7                     OpenTimer0@config:
   483                           	opt stack 0
   484  0000D7                     Delay1KTCYx@unit:
   485                           	opt stack 0
   486  0000D7                     init_queue@qptr:
   487                           	opt stack 0
   488  0000D7                     check_msg@qptr:
   489                           	opt stack 0
   490  0000D7                     Handle_i2c_data_save@msg:
   491                           	opt stack 0
   492  0000D7                     start_i2c_slave_reply@msg:
   493                           	opt stack 0
   494  0000D7                     init_i2c@ic:
   495                           	opt stack 0
   496  0000D7                     init_uart_recv@uc:
   497                           	opt stack 0
   498  0000D7                     init_timer1_lthread@tptr:
   499                           	opt stack 0
   500  0000D7                     memcpy@d1:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x1D
   504  0000D7                     	ds	2
   505  0000D9                     ??_start_i2c_slave_reply:
   506  0000D9                     ??_Handle_i2c_data_save:
   507  0000D9                     ??_init_queue:
   508  0000D9                     ??_check_msg:
   509  0000D9                     ?_in_low_int:
   510                           	opt stack 0
   511  0000D9                     memcpy@s1:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x1F
   515  0000D9                     	ds	1
   516  0000DA                     init_queue@i:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x20
   520  0000DA                     	ds	1
   521  0000DB                     ??_init_queues:
   522  0000DB                     ?_in_main:
   523                           	opt stack 0
   524  0000DB                     memcpy@n:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x21
   528  0000DB                     	ds	1
   529  0000DC                     start_i2c_slave_reply@length:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x22
   533  0000DC                     	ds	1
   534  0000DD                     ??_block_on_To_msgqueues:
   535  0000DD                     memcpy@d:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x23
   539  0000DD                     	ds	2
   540  0000DF                     memcpy@s:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x25
   544  0000DF                     	ds	2
   545  0000E1                     tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           
   552                           ; 0 bytes @ 0x27
   553                           
   554                           	psect	cstackCOMRAM
   555  000001                     __pcstackCOMRAM:
   556                           	opt stack 0
   557  000001                     ?_ReadTimer1:
   558                           	opt stack 0
   559  000001                     ReadUSART@data:
   560                           	opt stack 0
   561  000001                     WriteTimer1@timer1:
   562                           	opt stack 0
   563  000001                     i1memcpy@d1:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x0
   567  000001                     	ds	2
   568  000003                     ReadTimer1@timer:
   569                           	opt stack 0
   570  000003                     WriteTimer1@timer:
   571                           	opt stack 0
   572  000003                     i1memcpy@s1:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x2
   576  000003                     	ds	2
   577  000005                     i1memcpy@n:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x4
   581  000005                     	ds	2
   582  000007                     i1memcpy@d:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x6
   586  000007                     	ds	2
   587  000009                     i1memcpy@s:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x8
   591  000009                     	ds	2
   592  00000B                     i1send_msg@qptr:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0xA
   596  00000B                     	ds	2
   597  00000D                     i1send_msg@length:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0xC
   601  00000D                     	ds	1
   602  00000E                     i1send_msg@msgtype:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0xD
   606  00000E                     	ds	1
   607  00000F                     i1send_msg@data:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xE
   611  00000F                     	ds	2
   612  000011                     ??i1_send_msg:
   613                           
   614                           ; 0 bytes @ 0x10
   615  000011                     	ds	1
   616  000012                     i1send_msg@tlength:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x11
   620  000012                     	ds	2
   621  000014                     i1send_msg@slot:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x13
   625  000014                     	ds	1
   626  000015                     i1send_msg@qmsg:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x14
   630  000015                     	ds	2
   631  000017                     ToMainLow_sendmsg@msgtype:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x16
   635  000017                     	ds	1
   636  000018                     ToMainLow_sendmsg@data:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x17
   640  000018                     	ds	2
   641  00001A                     ToMainLow_sendmsg@length:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x19
   645  00001A                     	ds	1
   646  00001B                     ??_timer1_int_handler:
   647  00001B                     ??_uart_recv_int_handler:
   648                           
   649                           ; 0 bytes @ 0x1A
   650  00001B                     	ds	1
   651  00001C                     timer1_int_handler@result:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x1B
   655  00001C                     	ds	2
   656  00001E                     ??_InterruptHandlerLow:
   657                           
   658                           ; 0 bytes @ 0x1D
   659  00001E                     	ds	17
   660  00002F                     ?i2_in_high_int:
   661                           	opt stack 0
   662  00002F                     handle_start@data_read:
   663                           	opt stack 0
   664  00002F                     WriteTimer0@timer0:
   665                           	opt stack 0
   666  00002F                     i2check_msg@qptr:
   667                           	opt stack 0
   668  00002F                     i2memcpy@d1:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x2E
   672  00002F                     	ds	2
   673  000031                     ??i2_check_msg:
   674  000031                     ?i2_in_low_int:
   675                           	opt stack 0
   676  000031                     WriteTimer0@timer:
   677                           	opt stack 0
   678  000031                     i2memcpy@s1:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x30
   682  000031                     	ds	2
   683  000033                     i2memcpy@n:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x32
   687  000033                     	ds	2
   688  000035                     i2memcpy@d:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x34
   692  000035                     	ds	2
   693  000037                     i2memcpy@s:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x36
   697  000037                     	ds	2
   698  000039                     i2send_msg@qptr:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x38
   702  000039                     	ds	2
   703  00003B                     i2send_msg@length:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x3A
   707  00003B                     	ds	1
   708  00003C                     i2send_msg@msgtype:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x3B
   712  00003C                     	ds	1
   713  00003D                     i2send_msg@data:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x3C
   717  00003D                     	ds	2
   718  00003F                     ??i2_send_msg:
   719                           
   720                           ; 0 bytes @ 0x3E
   721  00003F                     	ds	1
   722  000040                     i2send_msg@tlength:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x3F
   726  000040                     	ds	2
   727  000042                     i2send_msg@slot:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x41
   731  000042                     	ds	1
   732  000043                     i2send_msg@qmsg:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x42
   736  000043                     	ds	2
   737  000045                     i2ToMainHigh_sendmsg@length:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x44
   741  000045                     	ds	1
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 186 in file "../src/main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  ic             40   52[BANK1 ] struct __i2c_comm
   759 ;;  msgbuffer      11   29[BANK1 ] unsigned char [11]
   760 ;;  uc              5   47[BANK1 ] struct __uart_comm
   761 ;;  t1thread_dat    2   43[BANK1 ] struct __timer1_thread_s
   762 ;;  t0thread_dat    2   41[BANK1 ] struct __timer0_thread_s
   763 ;;  uthread_data    2    0        struct __uart_thread_str
   764 ;;  msgtype         1   46[BANK1 ] unsigned char 
   765 ;;  length          1   45[BANK1 ] char 
   766 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
   767 ;;  i               1    0        unsigned char 
   768 ;;  c               1    0        unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;		None               void
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0      63       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       0      63       0       0
   782 ;;Total ram usage:       63 bytes
   783 ;; Hardware stack levels required when called:   14
   784 ;; This function calls:
   785 ;;		_Handle_i2c_data_save
   786 ;;		_OpenTimer0
   787 ;;		_ToMainHigh_recvmsg
   788 ;;		_block_on_To_msgqueues
   789 ;;		_enable_interrupts
   790 ;;		_i2c_configure_slave
   791 ;;		_init_i2c
   792 ;;		_init_queues
   793 ;;		_init_timer1_lthread
   794 ;;		_init_uart_recv
   795 ;;		_start_i2c_slave_reply
   796 ;;		_timer0_lthread
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text0
   803  0008F4                     __ptext0:
   804                           	opt stack 0
   805  0008F4                     _main:
   806                           	opt stack 17
   807                           
   808                           ;main.c: 187: char c;
   809                           ;main.c: 188: signed char length;
   810                           ;main.c: 189: unsigned char msgtype;
   811                           ;main.c: 190: unsigned char last_reg_recvd;
   812                           ;main.c: 191: uart_comm uc;
   813                           ;main.c: 192: i2c_comm ic;
   814                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   815                           ;main.c: 194: unsigned char i;
   816                           ;main.c: 195: uart_thread_struct uthread_data;
   817                           ;main.c: 196: timer1_thread_struct t1thread_data;
   818                           ;main.c: 197: timer0_thread_struct t0thread_data;
   819                           ;main.c: 205: OSCCON = 0x82;
   820                           
   821                           ;incstack = 0
   822  0008F4  0E82               	movlw	130
   823  0008F6  6ED3               	movwf	4051,c	;volatile
   824                           
   825                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
   826  0008F8  9C9B               	bcf	3995,6,c	;volatile
   827                           
   828                           ;main.c: 224: init_uart_recv(&uc);
   829  0008FA  0101               	movlb	1	; () banked
   830  0008FC  0E01               	movlw	high main@uc
   831  0008FE  0100               	movlb	0	; () banked
   832  000900  0100               	movlb	0	; () banked
   833  000902  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   834  000904  0101               	movlb	1	; () banked
   835  000906  0ED1               	movlw	low main@uc
   836  000908  0100               	movlb	0	; () banked
   837  00090A  0100               	movlb	0	; () banked
   838  00090C  6FD7               	movwf	init_uart_recv@uc& (0+255),b
   839  00090E  ECB1  F00B         	call	_init_uart_recv	;wreg free
   840                           
   841                           ;main.c: 227: init_i2c(&ic);
   842  000912  0101               	movlb	1	; () banked
   843  000914  0E01               	movlw	high main@ic
   844  000916  0100               	movlb	0	; () banked
   845  000918  0100               	movlb	0	; () banked
   846  00091A  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
   847  00091C  0101               	movlb	1	; () banked
   848  00091E  0ED6               	movlw	low main@ic
   849  000920  0100               	movlb	0	; () banked
   850  000922  0100               	movlb	0	; () banked
   851  000924  6FD7               	movwf	init_i2c@ic& (0+255),b
   852  000926  EC4C  F006         	call	_init_i2c	;wreg free
   853                           
   854                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   855  00092A  0101               	movlb	1	; () banked
   856  00092C  0E01               	movlw	high main@t1thread_data
   857  00092E  0100               	movlb	0	; () banked
   858  000930  0100               	movlb	0	; () banked
   859  000932  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   860  000934  0101               	movlb	1	; () banked
   861  000936  0ECD               	movlw	low main@t1thread_data
   862  000938  0100               	movlb	0	; () banked
   863  00093A  0100               	movlb	0	; () banked
   864  00093C  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
   865  00093E  ECDA  F00B         	call	_init_timer1_lthread	;wreg free
   866                           
   867                           ;main.c: 233: init_queues();
   868  000942  EC75  F009         	call	_init_queues	;wreg free
   869                           
   870                           ;main.c: 237: TRISB = 0x0;
   871  000946  0E00               	movlw	0
   872  000948  6E93               	movwf	3987,c	;volatile
   873                           
   874                           ;main.c: 238: LATB = 0x0;
   875  00094A  0E00               	movlw	0
   876  00094C  6E8A               	movwf	3978,c	;volatile
   877                           
   878                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11111111);
   879  00094E  0E9F               	movlw	159
   880  000950  EC4E  F00B         	call	_OpenTimer0
   881                           
   882                           ;main.c: 267: IPR1bits.TMR1IP = 0;
   883  000954  909F               	bcf	3999,0,c	;volatile
   884                           
   885                           ;main.c: 269: IPR1bits.RCIP = 0;
   886  000956  9A9F               	bcf	3999,5,c	;volatile
   887                           
   888                           ;main.c: 271: IPR1bits.SSPIP = 1;
   889  000958  869F               	bsf	3999,3,c	;volatile
   890                           
   891                           ;main.c: 280: i2c_configure_slave(0x9E);
   892  00095A  0E9E               	movlw	158
   893  00095C  EC78  F00B         	call	_i2c_configure_slave
   894                           
   895                           ;main.c: 295: PIE1bits.SSPIE = 1;
   896  000960  869D               	bsf	3997,3,c	;volatile
   897                           
   898                           ;main.c: 313: enable_interrupts();
   899  000962  EC0D  F00C         	call	_enable_interrupts	;wreg free
   900  000966                     l2783:
   901                           
   902                           ;main.c: 337: block_on_To_msgqueues();
   903  000966  ECBB  F008         	call	_block_on_To_msgqueues	;wreg free
   904                           
   905                           ;main.c: 344: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   906  00096A  0101               	movlb	1	; () banked
   907  00096C  0E01               	movlw	high main@msgtype
   908  00096E  0101               	movlb	1	; () banked
   909  000970  0101               	movlb	1	; () banked
   910  000972  6FB1               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   911  000974  0101               	movlb	1	; () banked
   912  000976  0ED0               	movlw	low main@msgtype
   913  000978  0101               	movlb	1	; () banked
   914  00097A  0101               	movlb	1	; () banked
   915  00097C  6FB0               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   916  00097E  0101               	movlb	1	; () banked
   917  000980  0E01               	movlw	high main@msgbuffer
   918  000982  0101               	movlb	1	; () banked
   919  000984  0101               	movlb	1	; () banked
   920  000986  6FB3               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   921  000988  0101               	movlb	1	; () banked
   922  00098A  0EBF               	movlw	low main@msgbuffer
   923  00098C  0101               	movlb	1	; () banked
   924  00098E  0101               	movlb	1	; () banked
   925  000990  6FB2               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   926  000992  0E0A               	movlw	10
   927  000994  EC6A  F00A         	call	_ToMainHigh_recvmsg
   928  000998  0101               	movlb	1	; () banked
   929  00099A  0101               	movlb	1	; () banked
   930  00099C  6FCF               	movwf	main@length& (0+255),b
   931                           
   932                           ; BSR set to: 1
   933                           ;main.c: 345: if (length < 0) {
   934  00099E  0101               	movlb	1	; () banked
   935  0009A0  0101               	movlb	1	; () banked
   936  0009A2  BFCF               	btfsc	main@length& (0+255),7,b
   937  0009A4  D7E0               	goto	l2783
   938  0009A6  D048               	goto	l2799
   939  0009A8                     l2791:
   940                           
   941                           ; BSR set to: 1
   942                           ;main.c: 353: {
   943                           ;main.c: 354: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
   944  0009A8  0101               	movlb	1	; () banked
   945  0009AA  0E01               	movlw	high main@t0thread_data
   946  0009AC  0101               	movlb	1	; () banked
   947  0009AE  0101               	movlb	1	; () banked
   948  0009B0  6FB3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
   949  0009B2  0101               	movlb	1	; () banked
   950  0009B4  0ECB               	movlw	low main@t0thread_data
   951  0009B6  0101               	movlb	1	; () banked
   952  0009B8  0101               	movlb	1	; () banked
   953  0009BA  6FB2               	movwf	timer0_lthread@tptr& (0+255),b
   954  0009BC  0101               	movlb	1	; () banked
   955  0009BE  0101               	movlb	1	; () banked
   956  0009C0  C1D0  F1B4         	movff	main@msgtype,timer0_lthread@msgtype
   957  0009C4  0101               	movlb	1	; () banked
   958  0009C6  0101               	movlb	1	; () banked
   959  0009C8  6BB5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
   960  0009CA  0101               	movlb	1	; () banked
   961  0009CC  0101               	movlb	1	; () banked
   962  0009CE  51CF               	movf	main@length& (0+255),w,b
   963  0009D0  0101               	movlb	1	; () banked
   964  0009D2  0101               	movlb	1	; () banked
   965  0009D4  6FB6               	movwf	timer0_lthread@length& (0+255),b
   966  0009D6  0101               	movlb	1	; () banked
   967  0009D8  6BB7               	clrf	(timer0_lthread@length+1)& (0+255),b
   968  0009DA  0101               	movlb	1	; () banked
   969  0009DC  BFB6               	btfsc	timer0_lthread@length& (0+255),7,b
   970  0009DE  07B7               	decf	(timer0_lthread@length+1)& (0+255),f,b
   971  0009E0  0101               	movlb	1	; () banked
   972  0009E2  0E01               	movlw	high main@msgbuffer
   973  0009E4  0101               	movlb	1	; () banked
   974  0009E6  0101               	movlb	1	; () banked
   975  0009E8  6FB9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
   976  0009EA  0101               	movlb	1	; () banked
   977  0009EC  0EBF               	movlw	low main@msgbuffer
   978  0009EE  0101               	movlb	1	; () banked
   979  0009F0  0101               	movlb	1	; () banked
   980  0009F2  6FB8               	movwf	timer0_lthread@msgbuffer& (0+255),b
   981  0009F4  ECFA  F008         	call	_timer0_lthread	;wreg free
   982                           
   983                           ;main.c: 355: break;
   984  0009F8  D7B6               	goto	l2783
   985  0009FA                     l96:
   986                           
   987                           ;main.c: 358: case 41:
   988                           ;main.c: 359: {
   989                           ;main.c: 362: last_reg_recvd = msgbuffer[0];
   990  0009FA  C1BF  F1CA         	movff	main@msgbuffer,main@last_reg_recvd
   991                           
   992                           ;main.c: 363: break;
   993  0009FE  D7B3               	goto	l2783
   994  000A00                     l2793:
   995                           
   996                           ;main.c: 366: {
   997                           ;main.c: 375: start_i2c_slave_reply(6, msgbuffer);
   998  000A00  0101               	movlb	1	; () banked
   999  000A02  0E01               	movlw	high main@msgbuffer
  1000  000A04  0100               	movlb	0	; () banked
  1001  000A06  0100               	movlb	0	; () banked
  1002  000A08  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1003  000A0A  0101               	movlb	1	; () banked
  1004  000A0C  0EBF               	movlw	low main@msgbuffer
  1005  000A0E  0100               	movlb	0	; () banked
  1006  000A10  0100               	movlb	0	; () banked
  1007  000A12  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1008  000A14  0E06               	movlw	6
  1009  000A16  EC8A  F003         	call	_start_i2c_slave_reply
  1010                           
  1011                           ;main.c: 376: break;
  1012  000A1A  D7A5               	goto	l2783
  1013  000A1C                     l2795:
  1014                           
  1015                           ;main.c: 379: {
  1016                           ;main.c: 380: Handle_i2c_data_save(1,msgbuffer);
  1017  000A1C  0101               	movlb	1	; () banked
  1018  000A1E  0E01               	movlw	high main@msgbuffer
  1019  000A20  0100               	movlb	0	; () banked
  1020  000A22  0100               	movlb	0	; () banked
  1021  000A24  6FD8               	movwf	(Handle_i2c_data_save@msg+1)& (0+255),b
  1022  000A26  0101               	movlb	1	; () banked
  1023  000A28  0EBF               	movlw	low main@msgbuffer
  1024  000A2A  0100               	movlb	0	; () banked
  1025  000A2C  0100               	movlb	0	; () banked
  1026  000A2E  6FD7               	movwf	Handle_i2c_data_save@msg& (0+255),b
  1027  000A30  0E01               	movlw	1
  1028  000A32  EC17  F007         	call	_Handle_i2c_data_save
  1029                           
  1030                           ;main.c: 381: break;
  1031  000A36  D797               	goto	l2783
  1032  000A38                     l2799:
  1033  000A38  0101               	movlb	1	; () banked
  1034  000A3A  0101               	movlb	1	; () banked
  1035  000A3C  51D0               	movf	main@msgtype& (0+255),w,b
  1036                           
  1037                           ; Switch size 1, requested type "space"
  1038                           ; Number of cases is 5, Range of values is 10 to 47
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte           16     9 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043  000A3E  0A0A               	xorlw	10	; case 10
  1044  000A40  B4D8               	btfsc	status,2,c
  1045  000A42  D7B2               	goto	l2791
  1046  000A44  0A22               	xorlw	34	; case 40
  1047  000A46  B4D8               	btfsc	status,2,c
  1048  000A48  D7D8               	goto	l96
  1049  000A4A  0A01               	xorlw	1	; case 41
  1050  000A4C  B4D8               	btfsc	status,2,c
  1051  000A4E  D7D5               	goto	l96
  1052  000A50  0A03               	xorlw	3	; case 42
  1053  000A52  B4D8               	btfsc	status,2,c
  1054  000A54  D7D5               	goto	l2793
  1055  000A56  0A05               	xorlw	5	; case 47
  1056  000A58  B4D8               	btfsc	status,2,c
  1057  000A5A  D7E0               	goto	l2795
  1058  000A5C  D784               	goto	l2783
  1059  000A5E                     __end_of_main:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           status	equ	0xFD8
  1068                           
  1069 ;; *************** function _timer0_lthread *****************
  1070 ;; Defined at:
  1071 ;;		line 12 in file "../src/timer0_thread.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  tptr            2   16[BANK1 ] PTR struct __timer0_thre
  1074 ;;		 -> main@t0thread_data(2), 
  1075 ;;  msgtype         2   18[BANK1 ] int 
  1076 ;;  length          2   20[BANK1 ] int 
  1077 ;;  msgbuffer       2   22[BANK1 ] PTR unsigned char 
  1078 ;;		 -> main@msgbuffer(11), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  val             2   27[BANK1 ] unsigned int 
  1081 ;;  msgval          2   25[BANK1 ] PTR unsigned int 
  1082 ;;		 -> main@msgbuffer(11), 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2   16[BANK1 ] int 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1092 ;;      Params:         0       0       8       0       0
  1093 ;;      Locals:         0       0       4       0       0
  1094 ;;      Temps:          0       0       1       0       0
  1095 ;;      Totals:         0       0      13       0       0
  1096 ;;Total ram usage:       13 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:   13
  1099 ;; This function calls:
  1100 ;;		_ToMainHigh_sendmsg
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text1
  1107  0011F4                     __ptext1:
  1108                           	opt stack 0
  1109  0011F4                     _timer0_lthread:
  1110                           	opt stack 17
  1111                           
  1112                           ;timer0_thread.c: 13: unsigned int *msgval;
  1113                           ;timer0_thread.c: 14: unsigned int val = 0;
  1114                           
  1115                           ; BSR set to: 1
  1116                           ;incstack = 0
  1117  0011F4  0E00               	movlw	0
  1118  0011F6  0101               	movlb	1	; () banked
  1119  0011F8  0101               	movlb	1	; () banked
  1120  0011FA  6FBE               	movwf	(timer0_lthread@val+1)& (0+255),b
  1121  0011FC  0E00               	movlw	0
  1122  0011FE  0101               	movlb	1	; () banked
  1123  001200  6FBD               	movwf	timer0_lthread@val& (0+255),b
  1124                           
  1125                           ; BSR set to: 1
  1126                           ;timer0_thread.c: 16: val = i++;
  1127  001202  C082  F1BD         	movff	_i,timer0_lthread@val
  1128  001206  C083  F1BE         	movff	_i+1,timer0_lthread@val+1
  1129                           
  1130                           ; BSR set to: 1
  1131  00120A  0100               	movlb	0	; () banked
  1132  00120C  0100               	movlb	0	; () banked
  1133  00120E  4B82               	infsnz	_i& (0+255),f,b
  1134  001210  2B83               	incf	(_i+1)& (0+255),f,b
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;timer0_thread.c: 18: if(i > 255)
  1138  001212  0100               	movlb	0	; () banked
  1139  001214  0100               	movlb	0	; () banked
  1140  001216  5183               	movf	(_i+1)& (0+255),w,b
  1141  001218  0A80               	xorlw	128
  1142  00121A  0F7F               	addlw	-129
  1143  00121C  0E00               	movlw	0
  1144  00121E  B4D8               	btfsc	status,2,c
  1145  001220  5D82               	subwf	_i& (0+255),w,b
  1146  001222  A0D8               	btfss	status,0,c
  1147  001224  D007               	goto	l2815
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;timer0_thread.c: 19: {
  1151                           ;timer0_thread.c: 20: i = 0;
  1152  001226  0E00               	movlw	0
  1153  001228  0100               	movlb	0	; () banked
  1154  00122A  0100               	movlb	0	; () banked
  1155  00122C  6F83               	movwf	(_i+1)& (0+255),b
  1156  00122E  0E00               	movlw	0
  1157  001230  0100               	movlb	0	; () banked
  1158  001232  6F82               	movwf	_i& (0+255),b
  1159  001234                     l2815:
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;timer0_thread.c: 21: }
  1163                           ;timer0_thread.c: 23: msgval = (unsigned int *) msgbuffer;
  1164  001234  0101               	movlb	1	; () banked
  1165  001236  0101               	movlb	1	; () banked
  1166  001238  C1B9  F1BC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1167  00123C  0101               	movlb	1	; () banked
  1168  00123E  0101               	movlb	1	; () banked
  1169  001240  C1B8  F1BB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1170                           
  1171                           ; BSR set to: 1
  1172                           ;timer0_thread.c: 24: ToMainHigh_sendmsg(sizeof(i),47,(void*)&val);
  1173  001244  0101               	movlb	1	; () banked
  1174  001246  6FBA               	movwf	??_timer0_lthread& (0+255),b
  1175  001248  0E2F               	movlw	47
  1176  00124A  0101               	movlb	1	; () banked
  1177  00124C  0101               	movlb	1	; () banked
  1178  00124E  6FAE               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  1179  001250  0101               	movlb	1	; () banked
  1180  001252  51BA               	movf	??_timer0_lthread& (0+255),w,b
  1181  001254  0101               	movlb	1	; () banked
  1182  001256  0E01               	movlw	high timer0_lthread@val
  1183  001258  0101               	movlb	1	; () banked
  1184  00125A  0101               	movlb	1	; () banked
  1185  00125C  6FB0               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  1186  00125E  0101               	movlb	1	; () banked
  1187  001260  0EBD               	movlw	low timer0_lthread@val
  1188  001262  0101               	movlb	1	; () banked
  1189  001264  0101               	movlb	1	; () banked
  1190  001266  6FAF               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  1191  001268  0E02               	movlw	2
  1192  00126A  ECE9  F00A         	call	_ToMainHigh_sendmsg
  1193  00126E  0012               	return	
  1194  001270                     __end_of_timer0_lthread:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _ToMainHigh_sendmsg *****************
  1205 ;; Defined at:
  1206 ;;		line 126 in file "../src/messages.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  length          1    wreg     unsigned char 
  1209 ;;  msgtype         1   12[BANK1 ] unsigned char 
  1210 ;;  data            2   13[BANK1 ] PTR void 
  1211 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  1212 ;;		 -> main@ic(40), 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  length          1   15[BANK1 ] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      char 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1224 ;;      Params:         0       0       3       0       0
  1225 ;;      Locals:         0       0       1       0       0
  1226 ;;      Temps:          0       0       0       0       0
  1227 ;;      Totals:         0       0       4       0       0
  1228 ;;Total ram usage:        4 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:   12
  1231 ;; This function calls:
  1232 ;;		_send_msg
  1233 ;; This function is called by:
  1234 ;;		_timer0_lthread
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text2
  1239  0015D2                     __ptext2:
  1240                           	opt stack 0
  1241  0015D2                     _ToMainHigh_sendmsg:
  1242                           	opt stack 17
  1243                           
  1244                           ;incstack = 0
  1245                           ;ToMainHigh_sendmsg@length stored from wreg
  1246  0015D2  CFE8 F1B1          	movff	wreg,ToMainHigh_sendmsg@length
  1247                           
  1248                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  1249                           ;	Return value of _ToMainHigh_sendmsg is never used
  1250  0015D6  0100               	movlb	0	; () banked
  1251  0015D8  0E00               	movlw	high _ToMainHigh_MQ
  1252  0015DA  0101               	movlb	1	; () banked
  1253  0015DC  0101               	movlb	1	; () banked
  1254  0015DE  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1255  0015E0  0100               	movlb	0	; () banked
  1256  0015E2  0E84               	movlw	low _ToMainHigh_MQ
  1257  0015E4  0101               	movlb	1	; () banked
  1258  0015E6  0101               	movlb	1	; () banked
  1259  0015E8  6FA2               	movwf	send_msg@qptr& (0+255),b
  1260  0015EA  C1B1  F1A4         	movff	ToMainHigh_sendmsg@length,send_msg@length
  1261  0015EE  C1AE  F1A5         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  1262  0015F2  0101               	movlb	1	; () banked
  1263  0015F4  0101               	movlb	1	; () banked
  1264  0015F6  C1B0  F1A7         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  1265  0015FA  0101               	movlb	1	; () banked
  1266  0015FC  0101               	movlb	1	; () banked
  1267  0015FE  C1AF  F1A6         	movff	ToMainHigh_sendmsg@data,send_msg@data
  1268  001602  ECCA  F005         	call	_send_msg	;wreg free
  1269  001606  0012               	return	
  1270  001608                     __end_of_ToMainHigh_sendmsg:
  1271                           	opt stack 0
  1272                           tblptru	equ	0xFF8
  1273                           tblptrh	equ	0xFF7
  1274                           tblptrl	equ	0xFF6
  1275                           tablat	equ	0xFF5
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _send_msg *****************
  1281 ;; Defined at:
  1282 ;;		line 24 in file "../src/messages.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1285 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1286 ;;  length          1    2[BANK1 ] unsigned char 
  1287 ;;  msgtype         1    3[BANK1 ] unsigned char 
  1288 ;;  data            2    4[BANK1 ] PTR void 
  1289 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  1290 ;;		 -> main@ic(40), main@uc(5), 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  1293 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1294 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1295 ;;  tlength         2    7[BANK1 ] unsigned int 
  1296 ;;  slot            1    9[BANK1 ] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      char 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1306 ;;      Params:         0       0       6       0       0
  1307 ;;      Locals:         0       0       5       0       0
  1308 ;;      Temps:          0       0       1       0       0
  1309 ;;      Totals:         0       0      12       0       0
  1310 ;;Total ram usage:       12 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:   11
  1313 ;; This function calls:
  1314 ;;		_memcpy
  1315 ;; This function is called by:
  1316 ;;		_ToMainHigh_sendmsg
  1317 ;;		_FromMainLow_sendmsg
  1318 ;;		_FromMainHigh_sendmsg
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text3
  1323  000B94                     __ptext3:
  1324                           	opt stack 0
  1325  000B94                     _send_msg:
  1326                           	opt stack 17
  1327                           
  1328                           ;messages.c: 25: unsigned char slot;
  1329                           ;messages.c: 27: msg *qmsg;
  1330                           ;messages.c: 28: size_t tlength = length;
  1331                           
  1332                           ;incstack = 0
  1333  000B94  0101               	movlb	1	; () banked
  1334  000B96  0101               	movlb	1	; () banked
  1335  000B98  C1A4  F1A9         	movff	send_msg@length,send_msg@tlength
  1336  000B9C  0101               	movlb	1	; () banked
  1337  000B9E  0101               	movlb	1	; () banked
  1338  000BA0  6BAA               	clrf	(send_msg@tlength+1)& (0+255),b
  1339                           
  1340                           ; BSR set to: 1
  1341                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1342  000BA2  0101               	movlb	1	; () banked
  1343  000BA4  EE20 F034          	lfsr	2,52
  1344  000BA8  0101               	movlb	1	; () banked
  1345  000BAA  51A2               	movf	send_msg@qptr& (0+255),w,b
  1346  000BAC  26D9               	addwf	fsr2l,f,c
  1347  000BAE  0101               	movlb	1	; () banked
  1348  000BB0  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1349  000BB2  22DA               	addwfc	fsr2h,f,c
  1350  000BB4  50DF               	movf	indf2,w,c
  1351  000BB6  0101               	movlb	1	; () banked
  1352  000BB8  0101               	movlb	1	; () banked
  1353  000BBA  6FAB               	movwf	send_msg@slot& (0+255),b
  1354                           
  1355                           ; BSR set to: 1
  1356                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1357  000BBC  0101               	movlb	1	; () banked
  1358  000BBE  0101               	movlb	1	; () banked
  1359  000BC0  51AB               	movf	send_msg@slot& (0+255),w,b
  1360  000BC2  0D0D               	mullw	13
  1361  000BC4  50F3               	movf	prodl,w,c
  1362  000BC6  0101               	movlb	1	; () banked
  1363  000BC8  0101               	movlb	1	; () banked
  1364  000BCA  25A2               	addwf	send_msg@qptr& (0+255),w,b
  1365  000BCC  0101               	movlb	1	; () banked
  1366  000BCE  0101               	movlb	1	; () banked
  1367  000BD0  6FAC               	movwf	send_msg@qmsg& (0+255),b
  1368  000BD2  50F4               	movf	prodh,w,c
  1369  000BD4  0101               	movlb	1	; () banked
  1370  000BD6  0101               	movlb	1	; () banked
  1371  000BD8  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1372  000BDA  0101               	movlb	1	; () banked
  1373  000BDC  6FAD               	movwf	(send_msg@qmsg+1)& (0+255),b
  1374                           
  1375                           ; BSR set to: 1
  1376                           ;messages.c: 41: if (qmsg->full != 0) {
  1377  000BDE  C1AC  FFD9         	movff	send_msg@qmsg,fsr2l
  1378  000BE2  C1AD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1379  000BE6  50DF               	movf	indf2,w,c
  1380  000BE8  B4D8               	btfsc	status,2,c
  1381  000BEA  D002               	goto	l2831
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;messages.c: 42: return (-1);
  1385  000BEC  0EFF               	movlw	255
  1386  000BEE  0012               	return	
  1387  000BF0                     l2831:
  1388                           
  1389                           ; BSR set to: 1
  1390                           ;messages.c: 43: }
  1391                           ;messages.c: 46: qmsg->length = length;
  1392  000BF0  0101               	movlb	1	; () banked
  1393  000BF2  EE20 F001          	lfsr	2,1
  1394  000BF6  0101               	movlb	1	; () banked
  1395  000BF8  51AC               	movf	send_msg@qmsg& (0+255),w,b
  1396  000BFA  26D9               	addwf	fsr2l,f,c
  1397  000BFC  0101               	movlb	1	; () banked
  1398  000BFE  51AD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1399  000C00  22DA               	addwfc	fsr2h,f,c
  1400  000C02  0101               	movlb	1	; () banked
  1401  000C04  C1A4  FFDF         	movff	send_msg@length,indf2
  1402                           
  1403                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1404  000C08  0101               	movlb	1	; () banked
  1405  000C0A  EE20 F002          	lfsr	2,2
  1406  000C0E  0101               	movlb	1	; () banked
  1407  000C10  51AC               	movf	send_msg@qmsg& (0+255),w,b
  1408  000C12  26D9               	addwf	fsr2l,f,c
  1409  000C14  0101               	movlb	1	; () banked
  1410  000C16  51AD               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1411  000C18  22DA               	addwfc	fsr2h,f,c
  1412  000C1A  0101               	movlb	1	; () banked
  1413  000C1C  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  1414                           
  1415                           ; BSR set to: 1
  1416                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1417  000C20  0E03               	movlw	3
  1418  000C22  0101               	movlb	1	; () banked
  1419  000C24  0101               	movlb	1	; () banked
  1420  000C26  25AC               	addwf	send_msg@qmsg& (0+255),w,b
  1421  000C28  0100               	movlb	0	; () banked
  1422  000C2A  0100               	movlb	0	; () banked
  1423  000C2C  6FD7               	movwf	memcpy@d1& (0+255),b
  1424  000C2E  0E00               	movlw	0
  1425  000C30  0101               	movlb	1	; () banked
  1426  000C32  0101               	movlb	1	; () banked
  1427  000C34  21AD               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1428  000C36  0100               	movlb	0	; () banked
  1429  000C38  6FD8               	movwf	(memcpy@d1+1)& (0+255),b
  1430  000C3A  0101               	movlb	1	; () banked
  1431  000C3C  0100               	movlb	0	; () banked
  1432  000C3E  C1A7  F0DA         	movff	send_msg@data+1,memcpy@s1+1
  1433  000C42  0101               	movlb	1	; () banked
  1434  000C44  0100               	movlb	0	; () banked
  1435  000C46  C1A6  F0D9         	movff	send_msg@data,memcpy@s1
  1436  000C4A  C1A9  F0DB         	movff	send_msg@tlength,memcpy@n
  1437  000C4E  C1AA  F0DC         	movff	send_msg@tlength+1,memcpy@n+1
  1438  000C52  ECAC  F009         	call	_memcpy	;wreg free
  1439                           
  1440                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1441  000C56  0101               	movlb	1	; () banked
  1442  000C58  EE20 F034          	lfsr	2,52
  1443  000C5C  0101               	movlb	1	; () banked
  1444  000C5E  51A2               	movf	send_msg@qptr& (0+255),w,b
  1445  000C60  26D9               	addwf	fsr2l,f,c
  1446  000C62  0101               	movlb	1	; () banked
  1447  000C64  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1448  000C66  22DA               	addwfc	fsr2h,f,c
  1449  000C68  0101               	movlb	1	; () banked
  1450  000C6A  EE10 F034          	lfsr	1,52
  1451  000C6E  0101               	movlb	1	; () banked
  1452  000C70  51A2               	movf	send_msg@qptr& (0+255),w,b
  1453  000C72  26E1               	addwf	fsr1l,f,c
  1454  000C74  0101               	movlb	1	; () banked
  1455  000C76  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  1456  000C78  22E2               	addwfc	fsr1h,f,c
  1457  000C7A  50E7               	movf	indf1,w,c
  1458  000C7C  0101               	movlb	1	; () banked
  1459  000C7E  6FA8               	movwf	??_send_msg& (0+255),b
  1460  000C80  0101               	movlb	1	; () banked
  1461  000C82  29A8               	incf	??_send_msg& (0+255),w,b
  1462  000C84  0B03               	andlw	3
  1463  000C86  6EDF               	movwf	indf2,c
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;messages.c: 59: qmsg->full = 1;
  1467  000C88  C1AC  FFD9         	movff	send_msg@qmsg,fsr2l
  1468  000C8C  C1AD  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1469  000C90  0E01               	movlw	1
  1470  000C92  6EDF               	movwf	indf2,c
  1471                           
  1472                           ; BSR set to: 1
  1473                           ;messages.c: 60: return (1);
  1474  000C94  0E01               	movlw	1
  1475  000C96  0012               	return	
  1476  000C98                     __end_of_send_msg:
  1477                           	opt stack 0
  1478                           tblptru	equ	0xFF8
  1479                           tblptrh	equ	0xFF7
  1480                           tblptrl	equ	0xFF6
  1481                           tablat	equ	0xFF5
  1482                           prodh	equ	0xFF4
  1483                           prodl	equ	0xFF3
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           indf1	equ	0xFE7
  1487                           fsr1h	equ	0xFE2
  1488                           fsr1l	equ	0xFE1
  1489                           indf2	equ	0xFDF
  1490                           fsr2h	equ	0xFDA
  1491                           fsr2l	equ	0xFD9
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function _start_i2c_slave_reply *****************
  1495 ;; Defined at:
  1496 ;;		line 72 in file "../src/my_i2c.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  length          1    wreg     unsigned char 
  1499 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  1500 ;;		 -> main@msgbuffer(11), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  length          1   34[BANK0 ] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1512 ;;      Params:         0       2       0       0       0
  1513 ;;      Locals:         0       1       0       0       0
  1514 ;;      Temps:          0       3       0       0       0
  1515 ;;      Totals:         0       6       0       0       0
  1516 ;;Total ram usage:        6 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:   10
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text4
  1527  000714                     __ptext4:
  1528                           	opt stack 0
  1529  000714                     _start_i2c_slave_reply:
  1530                           	opt stack 20
  1531                           
  1532                           ; BSR set to: 1
  1533                           ;incstack = 0
  1534                           ;start_i2c_slave_reply@length stored from wreg
  1535  000714  CFE8 F0DC          	movff	wreg,start_i2c_slave_reply@length
  1536                           
  1537                           ;my_i2c.c: 74: Send =1;
  1538  000718  0E00               	movlw	0
  1539  00071A  0100               	movlb	0	; () banked
  1540  00071C  0100               	movlb	0	; () banked
  1541  00071E  6F81               	movwf	(_Send+1)& (0+255),b
  1542  000720  0E01               	movlw	1
  1543  000722  0100               	movlb	0	; () banked
  1544  000724  6F80               	movwf	_Send& (0+255),b
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;my_i2c.c: 76: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1548  000726  0100               	movlb	0	; () banked
  1549  000728  EE20 F019          	lfsr	2,25
  1550  00072C  0100               	movlb	0	; () banked
  1551  00072E  51E1               	movf	_ic_ptr& (0+255),w,b
  1552  000730  26D9               	addwf	fsr2l,f,c
  1553  000732  0100               	movlb	0	; () banked
  1554  000734  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1555  000736  22DA               	addwfc	fsr2h,f,c
  1556  000738  0E00               	movlw	0
  1557  00073A  6EDF               	movwf	indf2,c
  1558  00073C  D09D               	goto	l2273
  1559  00073E                     l2261:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;my_i2c.c: 79: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  1563  00073E  0100               	movlb	0	; () banked
  1564  000740  EE20 F019          	lfsr	2,25
  1565  000744  0100               	movlb	0	; () banked
  1566  000746  51E1               	movf	_ic_ptr& (0+255),w,b
  1567  000748  26D9               	addwf	fsr2l,f,c
  1568  00074A  0100               	movlb	0	; () banked
  1569  00074C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1570  00074E  22DA               	addwfc	fsr2h,f,c
  1571  000750  50DF               	movf	indf2,w,c
  1572  000752  0100               	movlb	0	; () banked
  1573  000754  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1574  000756  0100               	movlb	0	; () banked
  1575  000758  EE20 F026          	lfsr	2,38
  1576  00075C  0100               	movlb	0	; () banked
  1577  00075E  51E1               	movf	_ic_ptr& (0+255),w,b
  1578  000760  26D9               	addwf	fsr2l,f,c
  1579  000762  0100               	movlb	0	; () banked
  1580  000764  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1581  000766  22DA               	addwfc	fsr2h,f,c
  1582  000768  50DF               	movf	indf2,w,c
  1583  00076A  0100               	movlb	0	; () banked
  1584  00076C  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1585  00076E  B0D8               	btfsc	status,0,c
  1586  000770  D004               	goto	l2265
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;my_i2c.c: 80: {
  1590                           ;my_i2c.c: 81: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen];
  1591  000772  0100               	movlb	0	; () banked
  1592  000774  EE20 F019          	lfsr	2,25
  1593  000778  D03C               	goto	L3
  1594  00077A                     l2265:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;my_i2c.c: 83: else if(ic_ptr->sendBufLen != 0)
  1598  00077A  0100               	movlb	0	; () banked
  1599  00077C  EE20 F026          	lfsr	2,38
  1600  000780  0100               	movlb	0	; () banked
  1601  000782  51E1               	movf	_ic_ptr& (0+255),w,b
  1602  000784  26D9               	addwf	fsr2l,f,c
  1603  000786  0100               	movlb	0	; () banked
  1604  000788  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1605  00078A  22DA               	addwfc	fsr2h,f,c
  1606  00078C  50DF               	movf	indf2,w,c
  1607  00078E  B4D8               	btfsc	status,2,c
  1608  000790  D02D               	goto	l2269
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;my_i2c.c: 84: {
  1612                           ;my_i2c.c: 85: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLen
      +                          -1];
  1613  000792  0100               	movlb	0	; () banked
  1614  000794  EE20 F026          	lfsr	2,38
  1615  000798  0100               	movlb	0	; () banked
  1616  00079A  51E1               	movf	_ic_ptr& (0+255),w,b
  1617  00079C  26D9               	addwf	fsr2l,f,c
  1618  00079E  0100               	movlb	0	; () banked
  1619  0007A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1620  0007A2  22DA               	addwfc	fsr2h,f,c
  1621  0007A4  50DF               	movf	indf2,w,c
  1622  0007A6  0100               	movlb	0	; () banked
  1623  0007A8  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1624  0007AA  6BDA               	clrf	(??_start_i2c_slave_reply+1)& (0+255),b
  1625  0007AC  0E1B               	movlw	27
  1626  0007AE  0100               	movlb	0	; () banked
  1627  0007B0  27D9               	addwf	??_start_i2c_slave_reply& (0+255),f,b
  1628  0007B2  0E00               	movlw	0
  1629  0007B4  23DA               	addwfc	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1630  0007B6  0100               	movlb	0	; () banked
  1631  0007B8  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1632  0007BA  0100               	movlb	0	; () banked
  1633  0007BC  0100               	movlb	0	; () banked
  1634  0007BE  25E1               	addwf	_ic_ptr& (0+255),w,b
  1635  0007C0  6ED9               	movwf	fsr2l,c
  1636  0007C2  0100               	movlb	0	; () banked
  1637  0007C4  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1638  0007C6  0100               	movlb	0	; () banked
  1639  0007C8  0100               	movlb	0	; () banked
  1640  0007CA  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1641  0007CC  6EDA               	movwf	fsr2h,c
  1642  0007CE  0100               	movlb	0	; () banked
  1643  0007D0  EE10 F019          	lfsr	1,25
  1644  0007D4  0100               	movlb	0	; () banked
  1645  0007D6  51E1               	movf	_ic_ptr& (0+255),w,b
  1646  0007D8  26E1               	addwf	fsr1l,f,c
  1647  0007DA  0100               	movlb	0	; () banked
  1648  0007DC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1649  0007DE  22E2               	addwfc	fsr1h,f,c
  1650  0007E0  50E7               	movf	indf1,w,c
  1651  0007E2  0100               	movlb	0	; () banked
  1652  0007E4  6FDB               	movwf	(??_start_i2c_slave_reply+2)& (0+255),b
  1653  0007E6  0100               	movlb	0	; () banked
  1654  0007E8  51DB               	movf	(??_start_i2c_slave_reply+2)& (0+255),w,b
  1655  0007EA  D02B               	goto	L2
  1656  0007EC                     l2269:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;my_i2c.c: 87: else
  1660                           ;my_i2c.c: 88: {
  1661                           ;my_i2c.c: 89: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLen
      +                          ];
  1662  0007EC  0100               	movlb	0	; () banked
  1663  0007EE  EE20 F026          	lfsr	2,38
  1664  0007F2                     L3:
  1665  0007F2  0100               	movlb	0	; () banked
  1666  0007F4  51E1               	movf	_ic_ptr& (0+255),w,b
  1667  0007F6  26D9               	addwf	fsr2l,f,c
  1668  0007F8  0100               	movlb	0	; () banked
  1669  0007FA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1670  0007FC  22DA               	addwfc	fsr2h,f,c
  1671  0007FE  50DF               	movf	indf2,w,c
  1672  000800  0100               	movlb	0	; () banked
  1673  000802  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1674  000804  0100               	movlb	0	; () banked
  1675  000806  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1676  000808  0D01               	mullw	1
  1677  00080A  0E1C               	movlw	28
  1678  00080C  26F3               	addwf	prodl,f,c
  1679  00080E  0E00               	movlw	0
  1680  000810  22F4               	addwfc	prodh,f,c
  1681  000812  50F3               	movf	prodl,w,c
  1682  000814  0100               	movlb	0	; () banked
  1683  000816  0100               	movlb	0	; () banked
  1684  000818  25E1               	addwf	_ic_ptr& (0+255),w,b
  1685  00081A  6ED9               	movwf	fsr2l,c
  1686  00081C  50F4               	movf	prodh,w,c
  1687  00081E  0100               	movlb	0	; () banked
  1688  000820  0100               	movlb	0	; () banked
  1689  000822  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1690  000824  6EDA               	movwf	fsr2h,c
  1691  000826  0100               	movlb	0	; () banked
  1692  000828  EE10 F019          	lfsr	1,25
  1693  00082C  0100               	movlb	0	; () banked
  1694  00082E  51E1               	movf	_ic_ptr& (0+255),w,b
  1695  000830  26E1               	addwf	fsr1l,f,c
  1696  000832  0100               	movlb	0	; () banked
  1697  000834  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1698  000836  22E2               	addwfc	fsr1h,f,c
  1699  000838  50E7               	movf	indf1,w,c
  1700  00083A  0100               	movlb	0	; () banked
  1701  00083C  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1702  00083E  0100               	movlb	0	; () banked
  1703  000840  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1704  000842                     L2:
  1705  000842  0D01               	mullw	1
  1706  000844  0E0F               	movlw	15
  1707  000846  26F3               	addwf	prodl,f,c
  1708  000848  0E00               	movlw	0
  1709  00084A  22F4               	addwfc	prodh,f,c
  1710  00084C  50F3               	movf	prodl,w,c
  1711  00084E  0100               	movlb	0	; () banked
  1712  000850  0100               	movlb	0	; () banked
  1713  000852  25E1               	addwf	_ic_ptr& (0+255),w,b
  1714  000854  6EE1               	movwf	fsr1l,c
  1715  000856  50F4               	movf	prodh,w,c
  1716  000858  0100               	movlb	0	; () banked
  1717  00085A  0100               	movlb	0	; () banked
  1718  00085C  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1719  00085E  6EE2               	movwf	fsr1h,c
  1720  000860  CFDF FFE7          	movff	indf2,indf1
  1721                           
  1722                           ; BSR set to: 0
  1723                           
  1724                           ; BSR set to: 0
  1725                           
  1726                           ; BSR set to: 0
  1727  000864  0100               	movlb	0	; () banked
  1728  000866  EE20 F019          	lfsr	2,25
  1729  00086A  0100               	movlb	0	; () banked
  1730  00086C  51E1               	movf	_ic_ptr& (0+255),w,b
  1731  00086E  26D9               	addwf	fsr2l,f,c
  1732  000870  0100               	movlb	0	; () banked
  1733  000872  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1734  000874  22DA               	addwfc	fsr2h,f,c
  1735  000876  2ADF               	incf	indf2,f,c
  1736  000878                     l2273:
  1737                           
  1738                           ; BSR set to: 0
  1739  000878  0100               	movlb	0	; () banked
  1740  00087A  EE20 F019          	lfsr	2,25
  1741  00087E  0100               	movlb	0	; () banked
  1742  000880  51E1               	movf	_ic_ptr& (0+255),w,b
  1743  000882  26D9               	addwf	fsr2l,f,c
  1744  000884  0100               	movlb	0	; () banked
  1745  000886  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1746  000888  22DA               	addwfc	fsr2h,f,c
  1747  00088A  50DF               	movf	indf2,w,c
  1748  00088C  0100               	movlb	0	; () banked
  1749  00088E  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1750  000890  0100               	movlb	0	; () banked
  1751  000892  0100               	movlb	0	; () banked
  1752  000894  51DC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1753  000896  0100               	movlb	0	; () banked
  1754  000898  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1755  00089A  A0D8               	btfss	status,0,c
  1756  00089C  D750               	goto	l2261
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;my_i2c.c: 90: }
  1760                           ;my_i2c.c: 92: }
  1761                           ;my_i2c.c: 93: Send = 0;
  1762                           
  1763                           ; BSR set to: 0
  1764  00089E  0E00               	movlw	0
  1765  0008A0  0100               	movlb	0	; () banked
  1766  0008A2  0100               	movlb	0	; () banked
  1767  0008A4  6F81               	movwf	(_Send+1)& (0+255),b
  1768  0008A6  0E00               	movlw	0
  1769  0008A8  0100               	movlb	0	; () banked
  1770  0008AA  6F80               	movwf	_Send& (0+255),b
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;my_i2c.c: 94: ic_ptr->outbuflen = length;
  1774  0008AC  0100               	movlb	0	; () banked
  1775  0008AE  EE20 F019          	lfsr	2,25
  1776  0008B2  0100               	movlb	0	; () banked
  1777  0008B4  51E1               	movf	_ic_ptr& (0+255),w,b
  1778  0008B6  26D9               	addwf	fsr2l,f,c
  1779  0008B8  0100               	movlb	0	; () banked
  1780  0008BA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1781  0008BC  22DA               	addwfc	fsr2h,f,c
  1782  0008BE  0100               	movlb	0	; () banked
  1783  0008C0  C0DC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;my_i2c.c: 95: ic_ptr->outbufind = 1;
  1787  0008C4  0100               	movlb	0	; () banked
  1788  0008C6  EE20 F01A          	lfsr	2,26
  1789  0008CA  0100               	movlb	0	; () banked
  1790  0008CC  51E1               	movf	_ic_ptr& (0+255),w,b
  1791  0008CE  26D9               	addwf	fsr2l,f,c
  1792  0008D0  0100               	movlb	0	; () banked
  1793  0008D2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1794  0008D4  22DA               	addwfc	fsr2h,f,c
  1795  0008D6  0E01               	movlw	1
  1796  0008D8  6EDF               	movwf	indf2,c
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;my_i2c.c: 98: SSPBUF = ic_ptr->outbuffer[0];
  1800  0008DA  0100               	movlb	0	; () banked
  1801  0008DC  EE20 F00F          	lfsr	2,15
  1802  0008E0  0100               	movlb	0	; () banked
  1803  0008E2  51E1               	movf	_ic_ptr& (0+255),w,b
  1804  0008E4  26D9               	addwf	fsr2l,f,c
  1805  0008E6  0100               	movlb	0	; () banked
  1806  0008E8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  1807  0008EA  22DA               	addwfc	fsr2h,f,c
  1808  0008EC  50DF               	movf	indf2,w,c
  1809  0008EE  6EC9               	movwf	4041,c	;volatile
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;my_i2c.c: 101: SSPCON1bits.CKP = 1;
  1813  0008F0  88C6               	bsf	4038,4,c	;volatile
  1814                           
  1815                           ; BSR set to: 0
  1816  0008F2  0012               	return	
  1817  0008F4                     __end_of_start_i2c_slave_reply:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           indf1	equ	0xFE7
  1828                           fsr1h	equ	0xFE2
  1829                           fsr1l	equ	0xFE1
  1830                           indf2	equ	0xFDF
  1831                           fsr2h	equ	0xFDA
  1832                           fsr2l	equ	0xFD9
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _init_uart_recv *****************
  1836 ;; Defined at:
  1837 ;;		line 49 in file "../src/my_uart.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  1840 ;;		 -> main@uc(5), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;		None               void
  1845 ;; Registers used:
  1846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1852 ;;      Params:         0       2       0       0       0
  1853 ;;      Locals:         0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0
  1855 ;;      Totals:         0       2       0       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:   10
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text5
  1867  001762                     __ptext5:
  1868                           	opt stack 0
  1869  001762                     _init_uart_recv:
  1870                           	opt stack 20
  1871                           
  1872                           ;my_uart.c: 50: uc_ptr = uc;
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;incstack = 0
  1876  001762  0100               	movlb	0	; () banked
  1877  001764  C0D8  F04F         	movff	init_uart_recv@uc+1,_uc_ptr+1
  1878  001768  0100               	movlb	0	; () banked
  1879  00176A  C0D7  F04E         	movff	init_uart_recv@uc,_uc_ptr
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  1883  00176E  EE20 F004          	lfsr	2,4
  1884  001772  504E               	movf	_uc_ptr,w,c
  1885  001774  26D9               	addwf	fsr2l,f,c
  1886  001776  504F               	movf	_uc_ptr+1,w,c
  1887  001778  22DA               	addwfc	fsr2h,f,c
  1888  00177A  0E00               	movlw	0
  1889  00177C  6EDF               	movwf	indf2,c
  1890                           
  1891                           ; BSR set to: 0
  1892  00177E  0012               	return	
  1893  001780                     __end_of_init_uart_recv:
  1894                           	opt stack 0
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           prodh	equ	0xFF4
  1900                           prodl	equ	0xFF3
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           indf1	equ	0xFE7
  1904                           fsr1h	equ	0xFE2
  1905                           fsr1l	equ	0xFE1
  1906                           indf2	equ	0xFDF
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _init_timer1_lthread *****************
  1912 ;; Defined at:
  1913 ;;		line 6 in file "../src/timer1_thread.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  1916 ;;		 -> main@t1thread_data(2), 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;		None               void
  1921 ;; Registers used:
  1922 ;;		wreg, fsr2l, fsr2h
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1928 ;;      Params:         0       2       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       2       0       0       0
  1932 ;;Total ram usage:        2 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:   10
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text6
  1943  0017B4                     __ptext6:
  1944                           	opt stack 0
  1945  0017B4                     _init_timer1_lthread:
  1946                           	opt stack 20
  1947                           
  1948                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;incstack = 0
  1952  0017B4  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  1953  0017B8  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  1954  0017BC  0E00               	movlw	0
  1955  0017BE  6EDE               	movwf	postinc2,c
  1956  0017C0  0E00               	movlw	0
  1957  0017C2  6EDD               	movwf	postdec2,c
  1958  0017C4  0012               	return	
  1959  0017C6                     __end_of_init_timer1_lthread:
  1960                           	opt stack 0
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           indf1	equ	0xFE7
  1970                           fsr1h	equ	0xFE2
  1971                           fsr1l	equ	0xFE1
  1972                           indf2	equ	0xFDF
  1973                           postinc2	equ	0xFDE
  1974                           postdec2	equ	0xFDD
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _init_queues *****************
  1980 ;; Defined at:
  1981 ;;		line 194 in file "../src/messages.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;		None               void
  1988 ;; Registers used:
  1989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1995 ;;      Params:         0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0
  1997 ;;      Temps:          0       1       0       0       0
  1998 ;;      Totals:         0       1       0       0       0
  1999 ;;Total ram usage:        1 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:   11
  2002 ;; This function calls:
  2003 ;;		_init_queue
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text7
  2010  0012EA                     __ptext7:
  2011                           	opt stack 0
  2012  0012EA                     _init_queues:
  2013                           	opt stack 19
  2014                           
  2015                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2016                           
  2017                           ;incstack = 0
  2018  0012EA  0100               	movlb	0	; () banked
  2019  0012EC  6FDB               	movwf	??_init_queues& (0+255),b
  2020  0012EE  0E00               	movlw	0
  2021  0012F0  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  2022  0012F2  0100               	movlb	0	; () banked
  2023  0012F4  51DB               	movf	??_init_queues& (0+255),w,b
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2027  0012F6  0101               	movlb	1	; () banked
  2028  0012F8  0E01               	movlw	high _ToMainLow_MQ
  2029  0012FA  0100               	movlb	0	; () banked
  2030  0012FC  0100               	movlb	0	; () banked
  2031  0012FE  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2032  001300  0101               	movlb	1	; () banked
  2033  001302  0E6C               	movlw	low _ToMainLow_MQ
  2034  001304  0100               	movlb	0	; () banked
  2035  001306  0100               	movlb	0	; () banked
  2036  001308  6FD7               	movwf	init_queue@qptr& (0+255),b
  2037  00130A  EC38  F009         	call	_init_queue	;wreg free
  2038                           
  2039                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2040  00130E  0100               	movlb	0	; () banked
  2041  001310  0E00               	movlw	high _ToMainHigh_MQ
  2042  001312  0100               	movlb	0	; () banked
  2043  001314  0100               	movlb	0	; () banked
  2044  001316  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2045  001318  0100               	movlb	0	; () banked
  2046  00131A  0E84               	movlw	low _ToMainHigh_MQ
  2047  00131C  0100               	movlb	0	; () banked
  2048  00131E  0100               	movlb	0	; () banked
  2049  001320  6FD7               	movwf	init_queue@qptr& (0+255),b
  2050  001322  EC38  F009         	call	_init_queue	;wreg free
  2051                           
  2052                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2053  001326  0101               	movlb	1	; () banked
  2054  001328  0E01               	movlw	high _FromMainLow_MQ
  2055  00132A  0100               	movlb	0	; () banked
  2056  00132C  0100               	movlb	0	; () banked
  2057  00132E  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2058  001330  0101               	movlb	1	; () banked
  2059  001332  0E36               	movlw	low _FromMainLow_MQ
  2060  001334  0100               	movlb	0	; () banked
  2061  001336  0100               	movlb	0	; () banked
  2062  001338  6FD7               	movwf	init_queue@qptr& (0+255),b
  2063  00133A  EC38  F009         	call	_init_queue	;wreg free
  2064                           
  2065                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2066  00133E  0101               	movlb	1	; () banked
  2067  001340  0E01               	movlw	high _FromMainHigh_MQ
  2068  001342  0100               	movlb	0	; () banked
  2069  001344  0100               	movlb	0	; () banked
  2070  001346  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2071  001348  0101               	movlb	1	; () banked
  2072  00134A  0E00               	movlw	low _FromMainHigh_MQ
  2073  00134C  0100               	movlb	0	; () banked
  2074  00134E  0100               	movlb	0	; () banked
  2075  001350  6FD7               	movwf	init_queue@qptr& (0+255),b
  2076  001352  EC38  F009         	call	_init_queue	;wreg free
  2077  001356  0012               	return	
  2078  001358                     __end_of_init_queues:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           indf1	equ	0xFE7
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           indf2	equ	0xFDF
  2092                           postinc2	equ	0xFDE
  2093                           postdec2	equ	0xFDD
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _init_queue *****************
  2099 ;; Defined at:
  2100 ;;		line 14 in file "../src/messages.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  2103 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  i               1   32[BANK0 ] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;		None               void
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2115 ;;      Params:         0       2       0       0       0
  2116 ;;      Locals:         0       1       0       0       0
  2117 ;;      Temps:          0       1       0       0       0
  2118 ;;      Totals:         0       4       0       0       0
  2119 ;;Total ram usage:        4 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:   10
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_init_queues
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text8
  2130  001270                     __ptext8:
  2131                           	opt stack 0
  2132  001270                     _init_queue:
  2133                           	opt stack 19
  2134                           
  2135                           ;messages.c: 15: unsigned char i;
  2136                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2137                           
  2138                           ;incstack = 0
  2139  001270  0100               	movlb	0	; () banked
  2140  001272  EE20 F034          	lfsr	2,52
  2141  001276  0100               	movlb	0	; () banked
  2142  001278  51D7               	movf	init_queue@qptr& (0+255),w,b
  2143  00127A  26D9               	addwf	fsr2l,f,c
  2144  00127C  0100               	movlb	0	; () banked
  2145  00127E  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2146  001280  22DA               	addwfc	fsr2h,f,c
  2147  001282  0E00               	movlw	0
  2148  001284  6EDF               	movwf	indf2,c
  2149                           
  2150                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2151  001286  0100               	movlb	0	; () banked
  2152  001288  EE20 F035          	lfsr	2,53
  2153  00128C  0100               	movlb	0	; () banked
  2154  00128E  51D7               	movf	init_queue@qptr& (0+255),w,b
  2155  001290  26D9               	addwf	fsr2l,f,c
  2156  001292  0100               	movlb	0	; () banked
  2157  001294  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2158  001296  22DA               	addwfc	fsr2h,f,c
  2159  001298  0E00               	movlw	0
  2160  00129A  6EDF               	movwf	indf2,c
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2164  00129C  0100               	movlb	0	; () banked
  2165  00129E  6FD9               	movwf	??_init_queue& (0+255),b
  2166  0012A0  0E00               	movlw	0
  2167  0012A2  0100               	movlb	0	; () banked
  2168  0012A4  0100               	movlb	0	; () banked
  2169  0012A6  6FDA               	movwf	init_queue@i& (0+255),b
  2170  0012A8  0100               	movlb	0	; () banked
  2171  0012AA  51D9               	movf	??_init_queue& (0+255),w,b
  2172                           
  2173                           ; BSR set to: 0
  2174  0012AC  0E03               	movlw	3
  2175  0012AE  0100               	movlb	0	; () banked
  2176  0012B0  0100               	movlb	0	; () banked
  2177  0012B2  65DA               	cpfsgt	init_queue@i& (0+255),b
  2178  0012B4  D001               	goto	l2305
  2179  0012B6  0012               	return	
  2180  0012B8                     l2305:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;messages.c: 20: qptr->queue[i].full = 0;
  2184  0012B8  0100               	movlb	0	; () banked
  2185  0012BA  0100               	movlb	0	; () banked
  2186  0012BC  51DA               	movf	init_queue@i& (0+255),w,b
  2187  0012BE  0D0D               	mullw	13
  2188  0012C0  50F3               	movf	prodl,w,c
  2189  0012C2  0100               	movlb	0	; () banked
  2190  0012C4  0100               	movlb	0	; () banked
  2191  0012C6  25D7               	addwf	init_queue@qptr& (0+255),w,b
  2192  0012C8  6ED9               	movwf	fsr2l,c
  2193  0012CA  50F4               	movf	prodh,w,c
  2194  0012CC  0100               	movlb	0	; () banked
  2195  0012CE  0100               	movlb	0	; () banked
  2196  0012D0  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2197  0012D2  6EDA               	movwf	fsr2h,c
  2198  0012D4  0E00               	movlw	0
  2199  0012D6  6EDF               	movwf	indf2,c
  2200                           
  2201                           ; BSR set to: 0
  2202  0012D8  0100               	movlb	0	; () banked
  2203  0012DA  0100               	movlb	0	; () banked
  2204  0012DC  2BDA               	incf	init_queue@i& (0+255),f,b
  2205                           
  2206                           ; BSR set to: 0
  2207  0012DE  0E03               	movlw	3
  2208  0012E0  0100               	movlb	0	; () banked
  2209  0012E2  0100               	movlb	0	; () banked
  2210  0012E4  65DA               	cpfsgt	init_queue@i& (0+255),b
  2211  0012E6  D7E8               	goto	l2305
  2212  0012E8  0012               	return	
  2213  0012EA                     __end_of_init_queue:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           prodh	equ	0xFF4
  2220                           prodl	equ	0xFF3
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           indf1	equ	0xFE7
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           indf2	equ	0xFDF
  2227                           postinc2	equ	0xFDE
  2228                           postdec2	equ	0xFDD
  2229                           fsr2h	equ	0xFDA
  2230                           fsr2l	equ	0xFD9
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _init_i2c *****************
  2234 ;; Defined at:
  2235 ;;		line 306 in file "../src/my_i2c.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  2238 ;;		 -> main@ic(40), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;		None               void
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2250 ;;      Params:         0       2       0       0       0
  2251 ;;      Locals:         0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0
  2253 ;;      Totals:         0       2       0       0       0
  2254 ;;Total ram usage:        2 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:   10
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text9
  2265  000C98                     __ptext9:
  2266                           	opt stack 0
  2267  000C98                     _init_i2c:
  2268                           	opt stack 20
  2269                           
  2270                           ;my_i2c.c: 307: ic_ptr = ic;
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;incstack = 0
  2274  000C98  0100               	movlb	0	; () banked
  2275  000C9A  0100               	movlb	0	; () banked
  2276  000C9C  C0D8  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  2277  000CA0  0100               	movlb	0	; () banked
  2278  000CA2  0100               	movlb	0	; () banked
  2279  000CA4  C0D7  F0E1         	movff	init_i2c@ic,_ic_ptr
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;my_i2c.c: 308: ic_ptr->buffer[0] = 0;
  2283  000CA8  C0E1  FFD9         	movff	_ic_ptr,fsr2l
  2284  000CAC  C0E2  FFDA         	movff	_ic_ptr+1,fsr2h
  2285  000CB0  0E00               	movlw	0
  2286  000CB2  6EDF               	movwf	indf2,c
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;my_i2c.c: 309: ic_ptr->buffer[1] = 0;
  2290  000CB4  0100               	movlb	0	; () banked
  2291  000CB6  EE20 F001          	lfsr	2,1
  2292  000CBA  0100               	movlb	0	; () banked
  2293  000CBC  51E1               	movf	_ic_ptr& (0+255),w,b
  2294  000CBE  26D9               	addwf	fsr2l,f,c
  2295  000CC0  0100               	movlb	0	; () banked
  2296  000CC2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2297  000CC4  22DA               	addwfc	fsr2h,f,c
  2298  000CC6  0E00               	movlw	0
  2299  000CC8  6EDF               	movwf	indf2,c
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;my_i2c.c: 310: ic_ptr->buffer[2] = 0;
  2303  000CCA  0100               	movlb	0	; () banked
  2304  000CCC  EE20 F002          	lfsr	2,2
  2305  000CD0  0100               	movlb	0	; () banked
  2306  000CD2  51E1               	movf	_ic_ptr& (0+255),w,b
  2307  000CD4  26D9               	addwf	fsr2l,f,c
  2308  000CD6  0100               	movlb	0	; () banked
  2309  000CD8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2310  000CDA  22DA               	addwfc	fsr2h,f,c
  2311  000CDC  0E00               	movlw	0
  2312  000CDE  6EDF               	movwf	indf2,c
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;my_i2c.c: 311: ic_ptr->buflen = 0;
  2316  000CE0  0100               	movlb	0	; () banked
  2317  000CE2  EE20 F00A          	lfsr	2,10
  2318  000CE6  0100               	movlb	0	; () banked
  2319  000CE8  51E1               	movf	_ic_ptr& (0+255),w,b
  2320  000CEA  26D9               	addwf	fsr2l,f,c
  2321  000CEC  0100               	movlb	0	; () banked
  2322  000CEE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2323  000CF0  22DA               	addwfc	fsr2h,f,c
  2324  000CF2  0E00               	movlw	0
  2325  000CF4  6EDF               	movwf	indf2,c
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;my_i2c.c: 312: ic_ptr->event_count = 0;
  2329  000CF6  0100               	movlb	0	; () banked
  2330  000CF8  EE20 F00B          	lfsr	2,11
  2331  000CFC  0100               	movlb	0	; () banked
  2332  000CFE  51E1               	movf	_ic_ptr& (0+255),w,b
  2333  000D00  26D9               	addwf	fsr2l,f,c
  2334  000D02  0100               	movlb	0	; () banked
  2335  000D04  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2336  000D06  22DA               	addwfc	fsr2h,f,c
  2337  000D08  0E00               	movlw	0
  2338  000D0A  6EDF               	movwf	indf2,c
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;my_i2c.c: 313: ic_ptr->status = 0x5;
  2342  000D0C  0100               	movlb	0	; () banked
  2343  000D0E  EE20 F00C          	lfsr	2,12
  2344  000D12  0100               	movlb	0	; () banked
  2345  000D14  51E1               	movf	_ic_ptr& (0+255),w,b
  2346  000D16  26D9               	addwf	fsr2l,f,c
  2347  000D18  0100               	movlb	0	; () banked
  2348  000D1A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2349  000D1C  22DA               	addwfc	fsr2h,f,c
  2350  000D1E  0E05               	movlw	5
  2351  000D20  6EDF               	movwf	indf2,c
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;my_i2c.c: 314: ic_ptr->error_count = 0;
  2355  000D22  0100               	movlb	0	; () banked
  2356  000D24  EE20 F00E          	lfsr	2,14
  2357  000D28  0100               	movlb	0	; () banked
  2358  000D2A  51E1               	movf	_ic_ptr& (0+255),w,b
  2359  000D2C  26D9               	addwf	fsr2l,f,c
  2360  000D2E  0100               	movlb	0	; () banked
  2361  000D30  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2362  000D32  22DA               	addwfc	fsr2h,f,c
  2363  000D34  0E00               	movlw	0
  2364  000D36  6EDF               	movwf	indf2,c
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;my_i2c.c: 315: ic_ptr->sendBufInd = 0;
  2368  000D38  0100               	movlb	0	; () banked
  2369  000D3A  EE20 F027          	lfsr	2,39
  2370  000D3E  0100               	movlb	0	; () banked
  2371  000D40  51E1               	movf	_ic_ptr& (0+255),w,b
  2372  000D42  26D9               	addwf	fsr2l,f,c
  2373  000D44  0100               	movlb	0	; () banked
  2374  000D46  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2375  000D48  22DA               	addwfc	fsr2h,f,c
  2376  000D4A  0E00               	movlw	0
  2377  000D4C  6EDF               	movwf	indf2,c
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;my_i2c.c: 316: ic_ptr->sendBufLen = 0;
  2381  000D4E  0100               	movlb	0	; () banked
  2382  000D50  EE20 F026          	lfsr	2,38
  2383  000D54  0100               	movlb	0	; () banked
  2384  000D56  51E1               	movf	_ic_ptr& (0+255),w,b
  2385  000D58  26D9               	addwf	fsr2l,f,c
  2386  000D5A  0100               	movlb	0	; () banked
  2387  000D5C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2388  000D5E  22DA               	addwfc	fsr2h,f,c
  2389  000D60  0E00               	movlw	0
  2390  000D62  6EDF               	movwf	indf2,c
  2391                           
  2392                           ; BSR set to: 0
  2393  000D64  0012               	return	
  2394  000D66                     __end_of_init_i2c:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           prodh	equ	0xFF4
  2401                           prodl	equ	0xFF3
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           indf1	equ	0xFE7
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           indf2	equ	0xFDF
  2408                           postinc2	equ	0xFDE
  2409                           postdec2	equ	0xFDD
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           status	equ	0xFD8
  2413                           
  2414 ;; *************** function _i2c_configure_slave *****************
  2415 ;; Defined at:
  2416 ;;		line 322 in file "../src/my_i2c.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  addr            1    wreg     unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  addr            1   29[BANK0 ] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;		None               void
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       1       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         0       1       0       0       0
  2434 ;;Total ram usage:        1 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:   10
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text10
  2445  0016F0                     __ptext10:
  2446                           	opt stack 0
  2447  0016F0                     _i2c_configure_slave:
  2448                           	opt stack 20
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;incstack = 0
  2452                           ;i2c_configure_slave@addr stored from wreg
  2453  0016F0  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  2454                           
  2455                           ;my_i2c.c: 334: TRISCbits.TRISC3 = 1;
  2456  0016F4  8694               	bsf	3988,3,c	;volatile
  2457                           
  2458                           ;my_i2c.c: 335: TRISCbits.TRISC4 = 1;
  2459  0016F6  8894               	bsf	3988,4,c	;volatile
  2460                           
  2461                           ;my_i2c.c: 340: SSPADD = addr;
  2462  0016F8  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2463                           
  2464                           ;my_i2c.c: 342: SSPSTAT = 0x0;
  2465  0016FC  0E00               	movlw	0
  2466  0016FE  6EC7               	movwf	4039,c	;volatile
  2467                           
  2468                           ;my_i2c.c: 343: SSPCON1 = 0x0;
  2469  001700  0E00               	movlw	0
  2470  001702  6EC6               	movwf	4038,c	;volatile
  2471                           
  2472                           ;my_i2c.c: 344: SSPCON2 = 0x0;
  2473  001704  0E00               	movlw	0
  2474  001706  6EC5               	movwf	4037,c	;volatile
  2475                           
  2476                           ;my_i2c.c: 345: SSPCON1 |= 0x0E;
  2477  001708  0E0E               	movlw	14
  2478  00170A  12C6               	iorwf	4038,f,c	;volatile
  2479                           
  2480                           ;my_i2c.c: 346: SSPSTAT |= 0b10000000;
  2481  00170C  8EC7               	bsf	4039,7,c	;volatile
  2482                           
  2483                           ;my_i2c.c: 349: TRISCbits.TRISC3 = 1;
  2484  00170E  8694               	bsf	3988,3,c	;volatile
  2485                           
  2486                           ;my_i2c.c: 350: TRISCbits.TRISC4 = 1;
  2487  001710  8894               	bsf	3988,4,c	;volatile
  2488                           
  2489                           ;my_i2c.c: 371: SSPCON2bits.SEN = 1;
  2490  001712  80C5               	bsf	4037,0,c	;volatile
  2491                           
  2492                           ;my_i2c.c: 372: SSPCON1 |= 0b00100000;
  2493  001714  8AC6               	bsf	4038,5,c	;volatile
  2494  001716  0012               	return	
  2495  001718                     __end_of_i2c_configure_slave:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           prodh	equ	0xFF4
  2502                           prodl	equ	0xFF3
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           indf1	equ	0xFE7
  2506                           fsr1h	equ	0xFE2
  2507                           fsr1l	equ	0xFE1
  2508                           indf2	equ	0xFDF
  2509                           postinc2	equ	0xFDE
  2510                           postdec2	equ	0xFDD
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _enable_interrupts *****************
  2516 ;; Defined at:
  2517 ;;		line 14 in file "../src/interrupts.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		None
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:   10
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text11
  2546  00181A                     __ptext11:
  2547                           	opt stack 0
  2548  00181A                     _enable_interrupts:
  2549                           	opt stack 20
  2550                           
  2551                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2552                           
  2553                           ;incstack = 0
  2554  00181A  8ED0               	bsf	4048,7,c	;volatile
  2555                           
  2556                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2557  00181C  8EF2               	bsf	intcon,7,c	;volatile
  2558                           
  2559                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2560  00181E  8CF2               	bsf	intcon,6,c	;volatile
  2561  001820  0012               	return	
  2562  001822                     __end_of_enable_interrupts:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           prodh	equ	0xFF4
  2569                           prodl	equ	0xFF3
  2570                           intcon	equ	0xFF2
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           indf1	equ	0xFE7
  2574                           fsr1h	equ	0xFE2
  2575                           fsr1l	equ	0xFE1
  2576                           indf2	equ	0xFDF
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _block_on_To_msgqueues *****************
  2584 ;; Defined at:
  2585 ;;		line 258 in file "../src/messages.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;		None               void
  2592 ;; Registers used:
  2593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2599 ;;      Params:         0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0
  2601 ;;      Temps:          0       1       0       0       0
  2602 ;;      Totals:         0       1       0       0       0
  2603 ;;Total ram usage:        1 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:   13
  2606 ;; This function calls:
  2607 ;;		_Delay1KTCYx
  2608 ;;		_check_msg
  2609 ;;		_in_main
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text12
  2616  001176                     __ptext12:
  2617                           	opt stack 0
  2618  001176                     _block_on_To_msgqueues:
  2619                           	opt stack 17
  2620                           
  2621                           ;messages.c: 259: if (!in_main()) {
  2622                           
  2623                           ;incstack = 0
  2624  001176  EC48  F00A         	call	_in_main	;wreg free
  2625  00117A  0100               	movlb	0	; () banked
  2626  00117C  0100               	movlb	0	; () banked
  2627  00117E  51DC               	movf	(?_in_main+1)& (0+255),w,b
  2628  001180  0100               	movlb	0	; () banked
  2629  001182  11DB               	iorwf	?_in_main& (0+255),w,b
  2630  001184  B4D8               	btfsc	status,2,c
  2631  001186  0012               	return	
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;messages.c: 261: }
  2635                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2636                           
  2637                           ; BSR set to: 0
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;messages.c: 260: return;
  2641  001188  0100               	movlb	0	; () banked
  2642  00118A  6FDD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2643  00118C  0E01               	movlw	1
  2644  00118E  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  2645  001190  0100               	movlb	0	; () banked
  2646  001192  51DD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2647  001194                     l2225:
  2648                           
  2649                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2650  001194  0100               	movlb	0	; () banked
  2651  001196  0E00               	movlw	high _ToMainHigh_MQ
  2652  001198  0100               	movlb	0	; () banked
  2653  00119A  0100               	movlb	0	; () banked
  2654  00119C  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  2655  00119E  0100               	movlb	0	; () banked
  2656  0011A0  0E84               	movlw	low _ToMainHigh_MQ
  2657  0011A2  0100               	movlb	0	; () banked
  2658  0011A4  0100               	movlb	0	; () banked
  2659  0011A6  6FD7               	movwf	check_msg@qptr& (0+255),b
  2660  0011A8  EC04  F00B         	call	_check_msg	;wreg free
  2661  0011AC  0900               	iorlw	0
  2662  0011AE  B4D8               	btfsc	status,2,c
  2663  0011B0  D007               	goto	l2231
  2664                           
  2665                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2666  0011B2  0100               	movlb	0	; () banked
  2667  0011B4  6FDD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2668  0011B6  0E00               	movlw	0
  2669  0011B8  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  2670  0011BA  0100               	movlb	0	; () banked
  2671  0011BC  51DD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2672  0011BE  0012               	return	
  2673  0011C0                     l2231:
  2674                           
  2675                           ;messages.c: 271: }
  2676                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2677  0011C0  0101               	movlb	1	; () banked
  2678  0011C2  0E01               	movlw	high _ToMainLow_MQ
  2679  0011C4  0100               	movlb	0	; () banked
  2680  0011C6  0100               	movlb	0	; () banked
  2681  0011C8  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  2682  0011CA  0101               	movlb	1	; () banked
  2683  0011CC  0E6C               	movlw	low _ToMainLow_MQ
  2684  0011CE  0100               	movlb	0	; () banked
  2685  0011D0  0100               	movlb	0	; () banked
  2686  0011D2  6FD7               	movwf	check_msg@qptr& (0+255),b
  2687  0011D4  EC04  F00B         	call	_check_msg	;wreg free
  2688  0011D8  0900               	iorlw	0
  2689  0011DA  B4D8               	btfsc	status,2,c
  2690  0011DC  D007               	goto	l2237
  2691                           
  2692                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2693  0011DE  0100               	movlb	0	; () banked
  2694  0011E0  6FDD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2695  0011E2  0E00               	movlw	0
  2696  0011E4  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  2697  0011E6  0100               	movlb	0	; () banked
  2698  0011E8  51DD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2699  0011EA  0012               	return	
  2700  0011EC                     l2237:
  2701                           
  2702                           ;messages.c: 278: }
  2703                           ;messages.c: 279: Delay1KTCYx(10);
  2704  0011EC  0E0A               	movlw	10
  2705  0011EE  ECCF  F00B         	call	_Delay1KTCYx
  2706  0011F2  D7D0               	goto	l2225
  2707  0011F4                     __end_of_block_on_To_msgqueues:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           intcon	equ	0xFF2
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           indf1	equ	0xFE7
  2719                           fsr1h	equ	0xFE2
  2720                           fsr1l	equ	0xFE1
  2721                           indf2	equ	0xFDF
  2722                           postinc2	equ	0xFDE
  2723                           postdec2	equ	0xFDD
  2724                           fsr2h	equ	0xFDA
  2725                           fsr2l	equ	0xFD9
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _in_main *****************
  2729 ;; Defined at:
  2730 ;;		line 40 in file "../src/interrupts.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2   33[BANK0 ] int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2744 ;;      Params:         0       2       0       0       0
  2745 ;;      Locals:         0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       2       0       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:   12
  2751 ;; This function calls:
  2752 ;;		_in_high_int
  2753 ;;		_in_low_int
  2754 ;; This function is called by:
  2755 ;;		_block_on_To_msgqueues
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text13
  2760  001490                     __ptext13:
  2761                           	opt stack 0
  2762  001490                     _in_main:
  2763                           	opt stack 17
  2764                           
  2765                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  2766                           
  2767                           ;incstack = 0
  2768  001490  EC25  F00A         	call	_in_low_int	;wreg free
  2769  001494  0100               	movlb	0	; () banked
  2770  001496  0100               	movlb	0	; () banked
  2771  001498  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  2772  00149A  0100               	movlb	0	; () banked
  2773  00149C  11D9               	iorwf	?_in_low_int& (0+255),w,b
  2774  00149E  A4D8               	btfss	status,2,c
  2775  0014A0  D011               	goto	l1911
  2776                           
  2777                           ; BSR set to: 0
  2778  0014A2  ECE3  F00B         	call	_in_high_int	;wreg free
  2779  0014A6  0100               	movlb	0	; () banked
  2780  0014A8  0100               	movlb	0	; () banked
  2781  0014AA  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  2782  0014AC  0100               	movlb	0	; () banked
  2783  0014AE  11D7               	iorwf	?_in_high_int& (0+255),w,b
  2784  0014B0  A4D8               	btfss	status,2,c
  2785  0014B2  D008               	goto	l1911
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;interrupts.c: 42: return (1);
  2789  0014B4  0E00               	movlw	0
  2790  0014B6  0100               	movlb	0	; () banked
  2791  0014B8  0100               	movlb	0	; () banked
  2792  0014BA  6FDC               	movwf	(?_in_main+1)& (0+255),b
  2793  0014BC  0E01               	movlw	1
  2794  0014BE  0100               	movlb	0	; () banked
  2795  0014C0  6FDB               	movwf	?_in_main& (0+255),b
  2796  0014C2  0012               	return	
  2797  0014C4                     l1911:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;interrupts.c: 44: return (0);
  2801  0014C4  0E00               	movlw	0
  2802  0014C6  0100               	movlb	0	; () banked
  2803  0014C8  0100               	movlb	0	; () banked
  2804  0014CA  6FDC               	movwf	(?_in_main+1)& (0+255),b
  2805  0014CC  0E00               	movlw	0
  2806  0014CE  0100               	movlb	0	; () banked
  2807  0014D0  6FDB               	movwf	?_in_main& (0+255),b
  2808  0014D2  0012               	return	
  2809  0014D4                     __end_of_in_main:
  2810                           	opt stack 0
  2811                           tblptru	equ	0xFF8
  2812                           tblptrh	equ	0xFF7
  2813                           tblptrl	equ	0xFF6
  2814                           tablat	equ	0xFF5
  2815                           prodh	equ	0xFF4
  2816                           prodl	equ	0xFF3
  2817                           intcon	equ	0xFF2
  2818                           postinc0	equ	0xFEE
  2819                           wreg	equ	0xFE8
  2820                           indf1	equ	0xFE7
  2821                           fsr1h	equ	0xFE2
  2822                           fsr1l	equ	0xFE1
  2823                           indf2	equ	0xFDF
  2824                           postinc2	equ	0xFDE
  2825                           postdec2	equ	0xFDD
  2826                           fsr2h	equ	0xFDA
  2827                           fsr2l	equ	0xFD9
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _in_low_int *****************
  2831 ;; Defined at:
  2832 ;;		line 30 in file "../src/interrupts.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2   31[BANK0 ] int 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2846 ;;      Params:         0       2       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       2       0       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:   11
  2853 ;; This function calls:
  2854 ;;		_in_high_int
  2855 ;; This function is called by:
  2856 ;;		_in_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text14
  2861  00144A                     __ptext14:
  2862                           	opt stack 0
  2863  00144A                     _in_low_int:
  2864                           	opt stack 17
  2865                           
  2866                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;incstack = 0
  2870  00144A  ACF2               	btfss	intcon,6,c	;volatile
  2871  00144C  D008               	goto	l1889
  2872                           
  2873                           ;interrupts.c: 32: return (0);
  2874  00144E  0E00               	movlw	0
  2875  001450  0100               	movlb	0	; () banked
  2876  001452  0100               	movlb	0	; () banked
  2877  001454  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  2878  001456  0E00               	movlw	0
  2879  001458  0100               	movlb	0	; () banked
  2880  00145A  6FD9               	movwf	?_in_low_int& (0+255),b
  2881  00145C  0012               	return	
  2882  00145E                     l1889:
  2883  00145E  ECE3  F00B         	call	_in_high_int	;wreg free
  2884  001462  0100               	movlb	0	; () banked
  2885  001464  0100               	movlb	0	; () banked
  2886  001466  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  2887  001468  0100               	movlb	0	; () banked
  2888  00146A  11D7               	iorwf	?_in_high_int& (0+255),w,b
  2889  00146C  B4D8               	btfsc	status,2,c
  2890  00146E  D008               	goto	l1897
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;interrupts.c: 34: return (0);
  2894  001470  0E00               	movlw	0
  2895  001472  0100               	movlb	0	; () banked
  2896  001474  0100               	movlb	0	; () banked
  2897  001476  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  2898  001478  0E00               	movlw	0
  2899  00147A  0100               	movlb	0	; () banked
  2900  00147C  6FD9               	movwf	?_in_low_int& (0+255),b
  2901  00147E  0012               	return	
  2902  001480                     l1897:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;interrupts.c: 36: return (1);
  2906  001480  0E00               	movlw	0
  2907  001482  0100               	movlb	0	; () banked
  2908  001484  0100               	movlb	0	; () banked
  2909  001486  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  2910  001488  0E01               	movlw	1
  2911  00148A  0100               	movlb	0	; () banked
  2912  00148C  6FD9               	movwf	?_in_low_int& (0+255),b
  2913  00148E  0012               	return	
  2914  001490                     __end_of_in_low_int:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           postinc0	equ	0xFEE
  2924                           wreg	equ	0xFE8
  2925                           indf1	equ	0xFE7
  2926                           fsr1h	equ	0xFE2
  2927                           fsr1l	equ	0xFE1
  2928                           indf2	equ	0xFDF
  2929                           postinc2	equ	0xFDE
  2930                           postdec2	equ	0xFDD
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function _in_high_int *****************
  2936 ;; Defined at:
  2937 ;;		line 22 in file "../src/interrupts.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  2   29[BANK0 ] int 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2951 ;;      Params:         0       2       0       0       0
  2952 ;;      Locals:         0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0
  2954 ;;      Totals:         0       2       0       0       0
  2955 ;;Total ram usage:        2 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:   10
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_in_low_int
  2962 ;;		_in_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text15
  2967  0017C6                     __ptext15:
  2968                           	opt stack 0
  2969  0017C6                     _in_high_int:
  2970                           	opt stack 17
  2971                           
  2972                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;incstack = 0
  2976  0017C6  0E00               	movlw	0
  2977  0017C8  AEF2               	btfss	intcon,7,c	;volatile
  2978  0017CA  0E01               	movlw	1
  2979  0017CC  0100               	movlb	0	; () banked
  2980  0017CE  0100               	movlb	0	; () banked
  2981  0017D0  6FD7               	movwf	?_in_high_int& (0+255),b
  2982  0017D2  0100               	movlb	0	; () banked
  2983  0017D4  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  2984  0017D6  0012               	return	
  2985  0017D8                     __end_of_in_high_int:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           postinc0	equ	0xFEE
  2995                           wreg	equ	0xFE8
  2996                           indf1	equ	0xFE7
  2997                           fsr1h	equ	0xFE2
  2998                           fsr1l	equ	0xFE1
  2999                           indf2	equ	0xFDF
  3000                           postinc2	equ	0xFDE
  3001                           postdec2	equ	0xFDD
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _check_msg *****************
  3007 ;; Defined at:
  3008 ;;		line 222 in file "../src/messages.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3011 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      unsigned char 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3023 ;;      Params:         0       2       0       0       0
  3024 ;;      Locals:         0       0       0       0       0
  3025 ;;      Temps:          0       1       0       0       0
  3026 ;;      Totals:         0       3       0       0       0
  3027 ;;Total ram usage:        3 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:   10
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_block_on_To_msgqueues
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text16
  3038  001608                     __ptext16:
  3039                           	opt stack 0
  3040  001608                     _check_msg:
  3041                           	opt stack 19
  3042                           
  3043                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;incstack = 0
  3047  001608  0100               	movlb	0	; () banked
  3048  00160A  EE20 F035          	lfsr	2,53
  3049  00160E  0100               	movlb	0	; () banked
  3050  001610  51D7               	movf	check_msg@qptr& (0+255),w,b
  3051  001612  26D9               	addwf	fsr2l,f,c
  3052  001614  0100               	movlb	0	; () banked
  3053  001616  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  3054  001618  22DA               	addwfc	fsr2h,f,c
  3055  00161A  50DF               	movf	indf2,w,c
  3056  00161C  0100               	movlb	0	; () banked
  3057  00161E  6FD9               	movwf	??_check_msg& (0+255),b
  3058  001620  0100               	movlb	0	; () banked
  3059  001622  51D9               	movf	??_check_msg& (0+255),w,b
  3060  001624  0D0D               	mullw	13
  3061  001626  50F3               	movf	prodl,w,c
  3062  001628  0100               	movlb	0	; () banked
  3063  00162A  0100               	movlb	0	; () banked
  3064  00162C  25D7               	addwf	check_msg@qptr& (0+255),w,b
  3065  00162E  6ED9               	movwf	fsr2l,c
  3066  001630  50F4               	movf	prodh,w,c
  3067  001632  0100               	movlb	0	; () banked
  3068  001634  0100               	movlb	0	; () banked
  3069  001636  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3070  001638  6EDA               	movwf	fsr2h,c
  3071  00163A  50DF               	movf	indf2,w,c
  3072  00163C  0012               	return	
  3073  00163E                     __end_of_check_msg:
  3074                           	opt stack 0
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           intcon	equ	0xFF2
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           indf1	equ	0xFE7
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _Delay1KTCYx *****************
  3095 ;; Defined at:
  3096 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  unit            1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  unit            1   29[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;		None               void
  3103 ;; Registers used:
  3104 ;;		wreg
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         0       1       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       1       0       0       0
  3114 ;;Total ram usage:        1 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:   10
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_block_on_To_msgqueues
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text17
  3125  00179E                     __ptext17:
  3126                           	opt stack 0
  3127  00179E                     _Delay1KTCYx:
  3128                           	opt stack 19
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;incstack = 0
  3132                           ;Delay1KTCYx@unit stored from wreg
  3133  00179E  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  3134  0017A2                     l639:
  3135  0017A2  0EFA               	movlw	250
  3136  0017A4                     u2027:
  3137  0017A4  F000               	nop	
  3138  0017A6  2EE8               	decfsz	wreg,f,c
  3139  0017A8  D7FD               	goto	u2027
  3140  0017AA  0100               	movlb	0	; () banked
  3141  0017AC  0100               	movlb	0	; () banked
  3142  0017AE  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3143  0017B0  D7F8               	goto	l639
  3144  0017B2  0012               	return	
  3145  0017B4                     __end_of_Delay1KTCYx:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           intcon	equ	0xFF2
  3154                           postinc0	equ	0xFEE
  3155                           wreg	equ	0xFE8
  3156                           indf1	equ	0xFE7
  3157                           fsr1h	equ	0xFE2
  3158                           fsr1l	equ	0xFE1
  3159                           indf2	equ	0xFDF
  3160                           postinc2	equ	0xFDE
  3161                           postdec2	equ	0xFDD
  3162                           fsr2h	equ	0xFDA
  3163                           fsr2l	equ	0xFD9
  3164                           status	equ	0xFD8
  3165                           
  3166 ;; *************** function _ToMainHigh_recvmsg *****************
  3167 ;; Defined at:
  3168 ;;		line 135 in file "../src/messages.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  maxlength       1    wreg     unsigned char 
  3171 ;;  msgtype         2   14[BANK1 ] PTR unsigned char 
  3172 ;;		 -> main@msgtype(1), 
  3173 ;;  data            2   16[BANK1 ] PTR void 
  3174 ;;		 -> main@msgbuffer(11), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  maxlength       1   18[BANK1 ] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      char 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3186 ;;      Params:         0       0       4       0       0
  3187 ;;      Locals:         0       0       1       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       5       0       0
  3190 ;;Total ram usage:        5 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:   12
  3193 ;; This function calls:
  3194 ;;		_recv_msg
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text18
  3201  0014D4                     __ptext18:
  3202                           	opt stack 0
  3203  0014D4                     _ToMainHigh_recvmsg:
  3204                           	opt stack 18
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;incstack = 0
  3208                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3209  0014D4  CFE8 F1B4          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3210                           
  3211                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3212  0014D8  0100               	movlb	0	; () banked
  3213  0014DA  0E00               	movlw	high _ToMainHigh_MQ
  3214  0014DC  0101               	movlb	1	; () banked
  3215  0014DE  0101               	movlb	1	; () banked
  3216  0014E0  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3217  0014E2  0100               	movlb	0	; () banked
  3218  0014E4  0E84               	movlw	low _ToMainHigh_MQ
  3219  0014E6  0101               	movlb	1	; () banked
  3220  0014E8  0101               	movlb	1	; () banked
  3221  0014EA  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3222  0014EC  C1B4  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3223  0014F0  0101               	movlb	1	; () banked
  3224  0014F2  0101               	movlb	1	; () banked
  3225  0014F4  C1B1  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3226  0014F8  0101               	movlb	1	; () banked
  3227  0014FA  0101               	movlb	1	; () banked
  3228  0014FC  C1B0  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3229  001500  0101               	movlb	1	; () banked
  3230  001502  0101               	movlb	1	; () banked
  3231  001504  C1B3  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3232  001508  0101               	movlb	1	; () banked
  3233  00150A  0101               	movlb	1	; () banked
  3234  00150C  C1B2  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3235  001510  EC2F  F005         	call	_recv_msg	;wreg free
  3236  001514  0012               	return	
  3237  001516                     __end_of_ToMainHigh_recvmsg:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           prodh	equ	0xFF4
  3244                           prodl	equ	0xFF3
  3245                           intcon	equ	0xFF2
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           indf1	equ	0xFE7
  3249                           fsr1h	equ	0xFE2
  3250                           fsr1l	equ	0xFE1
  3251                           indf2	equ	0xFDF
  3252                           postinc2	equ	0xFDE
  3253                           postdec2	equ	0xFDD
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function _recv_msg *****************
  3259 ;; Defined at:
  3260 ;;		line 63 in file "../src/messages.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3263 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3264 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3265 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3266 ;;		 -> main@msgtype(1), 
  3267 ;;  data            2    5[BANK1 ] PTR void 
  3268 ;;		 -> main@msgbuffer(11), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  qmsg            2   12[BANK1 ] PTR struct __msg
  3271 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3272 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3273 ;;  tlength         2   10[BANK1 ] unsigned int 
  3274 ;;  slot            1    9[BANK1 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      char 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3284 ;;      Params:         0       0       7       0       0
  3285 ;;      Locals:         0       0       5       0       0
  3286 ;;      Temps:          0       0       2       0       0
  3287 ;;      Totals:         0       0      14       0       0
  3288 ;;Total ram usage:       14 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:   11
  3291 ;; This function calls:
  3292 ;;		_memcpy
  3293 ;; This function is called by:
  3294 ;;		_ToMainHigh_recvmsg
  3295 ;;		_ToMainLow_recvmsg
  3296 ;;		_FromMainLow_recvmsg
  3297 ;;		_FromMainHigh_recvmsg
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text19
  3302  000A5E                     __ptext19:
  3303                           	opt stack 0
  3304  000A5E                     _recv_msg:
  3305                           	opt stack 18
  3306                           
  3307                           ;messages.c: 64: unsigned char slot;
  3308                           ;messages.c: 68: msg *qmsg;
  3309                           ;messages.c: 69: size_t tlength;
  3310                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3311                           
  3312                           ;incstack = 0
  3313  000A5E  0101               	movlb	1	; () banked
  3314  000A60  EE20 F035          	lfsr	2,53
  3315  000A64  0101               	movlb	1	; () banked
  3316  000A66  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3317  000A68  26D9               	addwf	fsr2l,f,c
  3318  000A6A  0101               	movlb	1	; () banked
  3319  000A6C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3320  000A6E  22DA               	addwfc	fsr2h,f,c
  3321  000A70  50DF               	movf	indf2,w,c
  3322  000A72  0101               	movlb	1	; () banked
  3323  000A74  0101               	movlb	1	; () banked
  3324  000A76  6FAB               	movwf	recv_msg@slot& (0+255),b
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3328  000A78  0101               	movlb	1	; () banked
  3329  000A7A  0101               	movlb	1	; () banked
  3330  000A7C  51AB               	movf	recv_msg@slot& (0+255),w,b
  3331  000A7E  0D0D               	mullw	13
  3332  000A80  50F3               	movf	prodl,w,c
  3333  000A82  0101               	movlb	1	; () banked
  3334  000A84  0101               	movlb	1	; () banked
  3335  000A86  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  3336  000A88  0101               	movlb	1	; () banked
  3337  000A8A  0101               	movlb	1	; () banked
  3338  000A8C  6FAE               	movwf	recv_msg@qmsg& (0+255),b
  3339  000A8E  50F4               	movf	prodh,w,c
  3340  000A90  0101               	movlb	1	; () banked
  3341  000A92  0101               	movlb	1	; () banked
  3342  000A94  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3343  000A96  0101               	movlb	1	; () banked
  3344  000A98  6FAF               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3345                           
  3346                           ; BSR set to: 1
  3347                           ;messages.c: 74: if (qmsg->full == 1) {
  3348  000A9A  0E01               	movlw	1
  3349  000A9C  C1AE  FFD9         	movff	recv_msg@qmsg,fsr2l
  3350  000AA0  C1AF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3351  000AA4  62DF               	cpfseq	indf2,c
  3352  000AA6  D074               	goto	l2881
  3353                           
  3354                           ; BSR set to: 1
  3355                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3356  000AA8  0101               	movlb	1	; () banked
  3357  000AAA  EE20 F001          	lfsr	2,1
  3358  000AAE  0101               	movlb	1	; () banked
  3359  000AB0  51AE               	movf	recv_msg@qmsg& (0+255),w,b
  3360  000AB2  26D9               	addwf	fsr2l,f,c
  3361  000AB4  0101               	movlb	1	; () banked
  3362  000AB6  51AF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3363  000AB8  22DA               	addwfc	fsr2h,f,c
  3364  000ABA  50DF               	movf	indf2,w,c
  3365  000ABC  0101               	movlb	1	; () banked
  3366  000ABE  0101               	movlb	1	; () banked
  3367  000AC0  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  3368  000AC2  B0D8               	btfsc	status,0,c
  3369  000AC4  D002               	goto	l2865
  3370                           
  3371                           ; BSR set to: 1
  3372                           ;messages.c: 77: return (-3);
  3373  000AC6  0EFD               	movlw	253
  3374  000AC8  0012               	return	
  3375  000ACA                     l2865:
  3376                           
  3377                           ; BSR set to: 1
  3378                           ;messages.c: 78: }
  3379                           ;messages.c: 80: tlength = qmsg->length;
  3380  000ACA  0101               	movlb	1	; () banked
  3381  000ACC  EE20 F001          	lfsr	2,1
  3382  000AD0  0101               	movlb	1	; () banked
  3383  000AD2  51AE               	movf	recv_msg@qmsg& (0+255),w,b
  3384  000AD4  26D9               	addwf	fsr2l,f,c
  3385  000AD6  0101               	movlb	1	; () banked
  3386  000AD8  51AF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3387  000ADA  22DA               	addwfc	fsr2h,f,c
  3388  000ADC  50DF               	movf	indf2,w,c
  3389  000ADE  0101               	movlb	1	; () banked
  3390  000AE0  6FA9               	movwf	??_recv_msg& (0+255),b
  3391  000AE2  0101               	movlb	1	; () banked
  3392  000AE4  51A9               	movf	??_recv_msg& (0+255),w,b
  3393  000AE6  0101               	movlb	1	; () banked
  3394  000AE8  0101               	movlb	1	; () banked
  3395  000AEA  6FAC               	movwf	recv_msg@tlength& (0+255),b
  3396  000AEC  0101               	movlb	1	; () banked
  3397  000AEE  6BAD               	clrf	(recv_msg@tlength+1)& (0+255),b
  3398                           
  3399                           ; BSR set to: 1
  3400                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3401  000AF0  0101               	movlb	1	; () banked
  3402  000AF2  0100               	movlb	0	; () banked
  3403  000AF4  C1A8  F0D8         	movff	recv_msg@data+1,memcpy@d1+1
  3404  000AF8  0101               	movlb	1	; () banked
  3405  000AFA  0100               	movlb	0	; () banked
  3406  000AFC  C1A7  F0D7         	movff	recv_msg@data,memcpy@d1
  3407  000B00  0E03               	movlw	3
  3408  000B02  0101               	movlb	1	; () banked
  3409  000B04  0101               	movlb	1	; () banked
  3410  000B06  25AE               	addwf	recv_msg@qmsg& (0+255),w,b
  3411  000B08  0101               	movlb	1	; () banked
  3412  000B0A  6FA9               	movwf	??_recv_msg& (0+255),b
  3413  000B0C  0E00               	movlw	0
  3414  000B0E  0101               	movlb	1	; () banked
  3415  000B10  0101               	movlb	1	; () banked
  3416  000B12  21AF               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3417  000B14  0101               	movlb	1	; () banked
  3418  000B16  6FAA               	movwf	(??_recv_msg+1)& (0+255),b
  3419  000B18  C1A9  F0D9         	movff	??_recv_msg,memcpy@s1
  3420  000B1C  C1AA  F0DA         	movff	??_recv_msg+1,memcpy@s1+1
  3421  000B20  C1AC  F0DB         	movff	recv_msg@tlength,memcpy@n
  3422  000B24  C1AD  F0DC         	movff	recv_msg@tlength+1,memcpy@n+1
  3423  000B28  ECAC  F009         	call	_memcpy	;wreg free
  3424                           
  3425                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3426  000B2C  0101               	movlb	1	; () banked
  3427  000B2E  EE20 F035          	lfsr	2,53
  3428  000B32  0101               	movlb	1	; () banked
  3429  000B34  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3430  000B36  26D9               	addwf	fsr2l,f,c
  3431  000B38  0101               	movlb	1	; () banked
  3432  000B3A  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3433  000B3C  22DA               	addwfc	fsr2h,f,c
  3434  000B3E  0101               	movlb	1	; () banked
  3435  000B40  EE10 F035          	lfsr	1,53
  3436  000B44  0101               	movlb	1	; () banked
  3437  000B46  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3438  000B48  26E1               	addwf	fsr1l,f,c
  3439  000B4A  0101               	movlb	1	; () banked
  3440  000B4C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3441  000B4E  22E2               	addwfc	fsr1h,f,c
  3442  000B50  50E7               	movf	indf1,w,c
  3443  000B52  0101               	movlb	1	; () banked
  3444  000B54  6FA9               	movwf	??_recv_msg& (0+255),b
  3445  000B56  0101               	movlb	1	; () banked
  3446  000B58  29A9               	incf	??_recv_msg& (0+255),w,b
  3447  000B5A  0B03               	andlw	3
  3448  000B5C  6EDF               	movwf	indf2,c
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3452  000B5E  0101               	movlb	1	; () banked
  3453  000B60  EE20 F002          	lfsr	2,2
  3454  000B64  0101               	movlb	1	; () banked
  3455  000B66  51AE               	movf	recv_msg@qmsg& (0+255),w,b
  3456  000B68  26D9               	addwf	fsr2l,f,c
  3457  000B6A  0101               	movlb	1	; () banked
  3458  000B6C  51AF               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3459  000B6E  22DA               	addwfc	fsr2h,f,c
  3460  000B70  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  3461  000B74  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3462  000B78  CFDF FFE7          	movff	indf2,indf1
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;messages.c: 91: qmsg->full = 0;
  3466  000B7C  C1AE  FFD9         	movff	recv_msg@qmsg,fsr2l
  3467  000B80  C1AF  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3468  000B84  0E00               	movlw	0
  3469  000B86  6EDF               	movwf	indf2,c
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;messages.c: 92: return (tlength);
  3473  000B88  0101               	movlb	1	; () banked
  3474  000B8A  0101               	movlb	1	; () banked
  3475  000B8C  51AC               	movf	recv_msg@tlength& (0+255),w,b
  3476  000B8E  0012               	return	
  3477  000B90                     l2881:
  3478                           
  3479                           ; BSR set to: 1
  3480                           ;messages.c: 94: return (-4);
  3481  000B90  0EFC               	movlw	252
  3482  000B92  0012               	return	
  3483  000B94                     __end_of_recv_msg:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           indf1	equ	0xFE7
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _memcpy *****************
  3505 ;; Defined at:
  3506 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  d1              2   29[BANK0 ] PTR void 
  3509 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3510 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3511 ;;		 -> main@msgbuffer(11), 
  3512 ;;  s1              2   31[BANK0 ] PTR const void 
  3513 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3514 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3515 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  3516 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3517 ;;		 -> main@ic(40), main@uc(5), 
  3518 ;;  n               2   33[BANK0 ] unsigned int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  3521 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3522 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3523 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  3524 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3525 ;;		 -> main@ic(40), main@uc(5), 
  3526 ;;  d               2   35[BANK0 ] PTR unsigned char 
  3527 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3528 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3529 ;;		 -> main@msgbuffer(11), 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2   29[BANK0 ] PTR void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3539 ;;      Params:         0       6       0       0       0
  3540 ;;      Locals:         0       4       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0      10       0       0       0
  3543 ;;Total ram usage:       10 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:   10
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_send_msg
  3550 ;;		_recv_msg
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text20
  3555  001358                     __ptext20:
  3556                           	opt stack 0
  3557  001358                     _memcpy:
  3558                           	opt stack 17
  3559                           
  3560                           ; BSR set to: 1
  3561                           ;incstack = 0
  3562  001358  0100               	movlb	0	; () banked
  3563  00135A  0100               	movlb	0	; () banked
  3564  00135C  C0DA  F0E0         	movff	memcpy@s1+1,memcpy@s+1
  3565  001360  0100               	movlb	0	; () banked
  3566  001362  0100               	movlb	0	; () banked
  3567  001364  C0D9  F0DF         	movff	memcpy@s1,memcpy@s
  3568  001368  0100               	movlb	0	; () banked
  3569  00136A  0100               	movlb	0	; () banked
  3570  00136C  C0D8  F0DE         	movff	memcpy@d1+1,memcpy@d+1
  3571  001370  0100               	movlb	0	; () banked
  3572  001372  0100               	movlb	0	; () banked
  3573  001374  C0D7  F0DD         	movff	memcpy@d1,memcpy@d
  3574  001378  D012               	goto	l2851
  3575  00137A                     l2845:
  3576                           
  3577                           ; BSR set to: 0
  3578  00137A  C0DF  FFD9         	movff	memcpy@s,fsr2l
  3579  00137E  C0E0  FFDA         	movff	memcpy@s+1,fsr2h
  3580  001382  C0DD  FFE1         	movff	memcpy@d,fsr1l
  3581  001386  C0DE  FFE2         	movff	memcpy@d+1,fsr1h
  3582  00138A  CFDF FFE7          	movff	indf2,indf1
  3583                           
  3584                           ; BSR set to: 0
  3585  00138E  0100               	movlb	0	; () banked
  3586  001390  0100               	movlb	0	; () banked
  3587  001392  4BDF               	infsnz	memcpy@s& (0+255),f,b
  3588  001394  2BE0               	incf	(memcpy@s+1)& (0+255),f,b
  3589                           
  3590                           ; BSR set to: 0
  3591  001396  0100               	movlb	0	; () banked
  3592  001398  0100               	movlb	0	; () banked
  3593  00139A  4BDD               	infsnz	memcpy@d& (0+255),f,b
  3594  00139C  2BDE               	incf	(memcpy@d+1)& (0+255),f,b
  3595  00139E                     l2851:
  3596                           
  3597                           ; BSR set to: 0
  3598  00139E  0100               	movlb	0	; () banked
  3599  0013A0  0100               	movlb	0	; () banked
  3600  0013A2  07DB               	decf	memcpy@n& (0+255),f,b
  3601  0013A4  A0D8               	btfss	status,0,c
  3602  0013A6  07DC               	decf	(memcpy@n+1)& (0+255),f,b
  3603  0013A8  0100               	movlb	0	; () banked
  3604  0013AA  29DB               	incf	memcpy@n& (0+255),w,b
  3605  0013AC  B4D8               	btfsc	status,2,c
  3606  0013AE  29DC               	incf	(memcpy@n+1)& (0+255),w,b
  3607  0013B0  B4D8               	btfsc	status,2,c
  3608                           
  3609                           ; BSR set to: 0
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;	Return value of _memcpy is never used
  3613  0013B2  0012               	return	
  3614  0013B4  D7E2               	goto	l2845
  3615  0013B6                     __end_of_memcpy:
  3616                           	opt stack 0
  3617                           tblptru	equ	0xFF8
  3618                           tblptrh	equ	0xFF7
  3619                           tblptrl	equ	0xFF6
  3620                           tablat	equ	0xFF5
  3621                           prodh	equ	0xFF4
  3622                           prodl	equ	0xFF3
  3623                           intcon	equ	0xFF2
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           indf1	equ	0xFE7
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           indf2	equ	0xFDF
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _OpenTimer0 *****************
  3637 ;; Defined at:
  3638 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  config          1    wreg     unsigned char 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  config          1   29[BANK0 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3652 ;;      Params:         0       0       0       0       0
  3653 ;;      Locals:         0       1       0       0       0
  3654 ;;      Temps:          0       0       0       0       0
  3655 ;;      Totals:         0       1       0       0       0
  3656 ;;Total ram usage:        1 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:   10
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text21
  3667  00169C                     __ptext21:
  3668                           	opt stack 0
  3669  00169C                     _OpenTimer0:
  3670                           	opt stack 20
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;incstack = 0
  3674                           ;OpenTimer0@config stored from wreg
  3675  00169C  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  3676  0016A0  0100               	movlb	0	; () banked
  3677  0016A2  0100               	movlb	0	; () banked
  3678  0016A4  51D7               	movf	OpenTimer0@config& (0+255),w,b
  3679  0016A6  0B7F               	andlw	127
  3680  0016A8  6ED5               	movwf	4053,c	;volatile
  3681                           
  3682                           ; BSR set to: 0
  3683  0016AA  0E00               	movlw	0
  3684  0016AC  6ED7               	movwf	4055,c	;volatile
  3685                           
  3686                           ; BSR set to: 0
  3687  0016AE  0E00               	movlw	0
  3688  0016B0  6ED6               	movwf	4054,c	;volatile
  3689                           
  3690                           ; BSR set to: 0
  3691  0016B2  94F2               	bcf	intcon,2,c	;volatile
  3692                           
  3693                           ; BSR set to: 0
  3694  0016B4  0100               	movlb	0	; () banked
  3695  0016B6  0100               	movlb	0	; () banked
  3696  0016B8  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  3697  0016BA  D002               	goto	l390
  3698                           
  3699                           ; BSR set to: 0
  3700  0016BC  8AF2               	bsf	intcon,5,c	;volatile
  3701  0016BE  D001               	goto	l391
  3702  0016C0                     l390:
  3703                           
  3704                           ; BSR set to: 0
  3705  0016C0  9AF2               	bcf	intcon,5,c	;volatile
  3706  0016C2                     l391:
  3707                           
  3708                           ; BSR set to: 0
  3709  0016C2  8ED5               	bsf	4053,7,c	;volatile
  3710                           
  3711                           ; BSR set to: 0
  3712  0016C4  0012               	return	
  3713  0016C6                     __end_of_OpenTimer0:
  3714                           	opt stack 0
  3715                           tblptru	equ	0xFF8
  3716                           tblptrh	equ	0xFF7
  3717                           tblptrl	equ	0xFF6
  3718                           tablat	equ	0xFF5
  3719                           prodh	equ	0xFF4
  3720                           prodl	equ	0xFF3
  3721                           intcon	equ	0xFF2
  3722                           postinc0	equ	0xFEE
  3723                           wreg	equ	0xFE8
  3724                           indf1	equ	0xFE7
  3725                           fsr1h	equ	0xFE2
  3726                           fsr1l	equ	0xFE1
  3727                           indf2	equ	0xFDF
  3728                           postinc2	equ	0xFDE
  3729                           postdec2	equ	0xFDD
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734 ;; *************** function _Handle_i2c_data_save *****************
  3735 ;; Defined at:
  3736 ;;		line 55 in file "../src/my_i2c.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  length          1    wreg     unsigned char 
  3739 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  3740 ;;		 -> main@msgbuffer(11), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  length          1    0[COMRAM] unsigned char 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;		None               void
  3745 ;; Registers used:
  3746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3752 ;;      Params:         0       2       0       0       0
  3753 ;;      Locals:         0       0       0       0       0
  3754 ;;      Temps:          0       1       0       0       0
  3755 ;;      Totals:         0       3       0       0       0
  3756 ;;Total ram usage:        3 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:   10
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text22
  3767  000E2E                     __ptext22:
  3768                           	opt stack 0
  3769  000E2E                     _Handle_i2c_data_save:
  3770                           	opt stack 20
  3771                           
  3772                           ;my_i2c.c: 57: if(ic_ptr->status != 0x8 && (Send == 0))
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;incstack = 0
  3776  000E2E  0100               	movlb	0	; () banked
  3777  000E30  EE20 F00C          	lfsr	2,12
  3778  000E34  0100               	movlb	0	; () banked
  3779  000E36  51E1               	movf	_ic_ptr& (0+255),w,b
  3780  000E38  26D9               	addwf	fsr2l,f,c
  3781  000E3A  0100               	movlb	0	; () banked
  3782  000E3C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3783  000E3E  22DA               	addwfc	fsr2h,f,c
  3784  000E40  50DF               	movf	indf2,w,c
  3785  000E42  0A08               	xorlw	8
  3786  000E44  B4D8               	btfsc	status,2,c
  3787  000E46  0012               	return	
  3788                           
  3789                           ; BSR set to: 0
  3790  000E48  0100               	movlb	0	; () banked
  3791  000E4A  0100               	movlb	0	; () banked
  3792  000E4C  5181               	movf	(_Send+1)& (0+255),w,b
  3793  000E4E  1180               	iorwf	_Send& (0+255),w,b
  3794  000E50  A4D8               	btfss	status,2,c
  3795  000E52  0012               	return	
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;my_i2c.c: 58: {
  3799                           ;my_i2c.c: 59: if(ic_ptr->sendBufLen <= 6)
  3800  000E54  0100               	movlb	0	; () banked
  3801  000E56  EE20 F026          	lfsr	2,38
  3802  000E5A  0100               	movlb	0	; () banked
  3803  000E5C  51E1               	movf	_ic_ptr& (0+255),w,b
  3804  000E5E  26D9               	addwf	fsr2l,f,c
  3805  000E60  0100               	movlb	0	; () banked
  3806  000E62  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3807  000E64  22DA               	addwfc	fsr2h,f,c
  3808  000E66  50DF               	movf	indf2,w,c
  3809  000E68  0100               	movlb	0	; () banked
  3810  000E6A  6FD9               	movwf	??_Handle_i2c_data_save& (0+255),b
  3811  000E6C  0E07               	movlw	7
  3812  000E6E  0100               	movlb	0	; () banked
  3813  000E70  5DD9               	subwf	??_Handle_i2c_data_save& (0+255),w,b
  3814  000E72  B0D8               	btfsc	status,0,c
  3815  000E74  D02E               	goto	l2295
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;my_i2c.c: 60: {
  3819                           ;my_i2c.c: 61: ic_ptr->sendBuf[ic_ptr->sendBufLen] = *msg;
  3820  000E76  C0D7  FFD9         	movff	Handle_i2c_data_save@msg,fsr2l
  3821  000E7A  C0D8  FFDA         	movff	Handle_i2c_data_save@msg+1,fsr2h
  3822  000E7E  0100               	movlb	0	; () banked
  3823  000E80  EE10 F026          	lfsr	1,38
  3824  000E84  0100               	movlb	0	; () banked
  3825  000E86  51E1               	movf	_ic_ptr& (0+255),w,b
  3826  000E88  26E1               	addwf	fsr1l,f,c
  3827  000E8A  0100               	movlb	0	; () banked
  3828  000E8C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3829  000E8E  22E2               	addwfc	fsr1h,f,c
  3830  000E90  50E7               	movf	indf1,w,c
  3831  000E92  0100               	movlb	0	; () banked
  3832  000E94  6FD9               	movwf	??_Handle_i2c_data_save& (0+255),b
  3833  000E96  0100               	movlb	0	; () banked
  3834  000E98  51D9               	movf	??_Handle_i2c_data_save& (0+255),w,b
  3835  000E9A  0D01               	mullw	1
  3836  000E9C  0E1C               	movlw	28
  3837  000E9E  26F3               	addwf	prodl,f,c
  3838  000EA0  0E00               	movlw	0
  3839  000EA2  22F4               	addwfc	prodh,f,c
  3840  000EA4  50F3               	movf	prodl,w,c
  3841  000EA6  0100               	movlb	0	; () banked
  3842  000EA8  0100               	movlb	0	; () banked
  3843  000EAA  25E1               	addwf	_ic_ptr& (0+255),w,b
  3844  000EAC  6EE1               	movwf	fsr1l,c
  3845  000EAE  50F4               	movf	prodh,w,c
  3846  000EB0  0100               	movlb	0	; () banked
  3847  000EB2  0100               	movlb	0	; () banked
  3848  000EB4  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3849  000EB6  6EE2               	movwf	fsr1h,c
  3850  000EB8  CFDF FFE7          	movff	indf2,indf1
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;my_i2c.c: 62: ic_ptr->sendBufLen++;
  3854  000EBC  0100               	movlb	0	; () banked
  3855  000EBE  EE20 F026          	lfsr	2,38
  3856  000EC2  0100               	movlb	0	; () banked
  3857  000EC4  51E1               	movf	_ic_ptr& (0+255),w,b
  3858  000EC6  26D9               	addwf	fsr2l,f,c
  3859  000EC8  0100               	movlb	0	; () banked
  3860  000ECA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3861  000ECC  22DA               	addwfc	fsr2h,f,c
  3862  000ECE  2ADF               	incf	indf2,f,c
  3863                           
  3864                           ;my_i2c.c: 63: }
  3865  000ED0  0012               	return	
  3866  000ED2                     l2295:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;my_i2c.c: 64: else
  3870                           ;my_i2c.c: 65: {
  3871                           ;my_i2c.c: 66: ic_ptr->sendBufLen = 0;
  3872  000ED2  0100               	movlb	0	; () banked
  3873  000ED4  EE20 F026          	lfsr	2,38
  3874  000ED8  0100               	movlb	0	; () banked
  3875  000EDA  51E1               	movf	_ic_ptr& (0+255),w,b
  3876  000EDC  26D9               	addwf	fsr2l,f,c
  3877  000EDE  0100               	movlb	0	; () banked
  3878  000EE0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3879  000EE2  22DA               	addwfc	fsr2h,f,c
  3880  000EE4  0E00               	movlw	0
  3881  000EE6  6EDF               	movwf	indf2,c
  3882  000EE8  0012               	return	
  3883  000EEA                     __end_of_Handle_i2c_data_save:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           indf1	equ	0xFE7
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _InterruptHandlerLow *****************
  3905 ;; Defined at:
  3906 ;;		line 124 in file "../src/interrupts.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3920 ;;      Params:         0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0
  3922 ;;      Temps:         17       0       0       0       0
  3923 ;;      Totals:        17       0       0       0       0
  3924 ;;Total ram usage:       17 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    9
  3927 ;; This function calls:
  3928 ;;		_timer1_int_handler
  3929 ;;		_uart_recv_int_handler
  3930 ;; This function is called by:
  3931 ;;		Interrupt level 1
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	intcodelo
  3936  000018                     __pintcodelo:
  3937                           	opt stack 0
  3938  000018                     _InterruptHandlerLow:
  3939                           	opt stack 17
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;incstack = 0
  3943  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  3944  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  3945  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  3946  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  3947  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  3948  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  3949  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  3950  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  3951  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  3952  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  3953  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  3954  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  3955  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  3956  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  3957  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  3958  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  3959  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  3960                           
  3961                           ;interrupts.c: 126: if (PIR1bits.TMR1IF) {
  3962  00005C  A09E               	btfss	3998,0,c	;volatile
  3963  00005E  D003               	goto	i1l3023
  3964                           
  3965                           ;interrupts.c: 127: PIR1bits.TMR1IF = 0;
  3966  000060  909E               	bcf	3998,0,c	;volatile
  3967                           
  3968                           ;interrupts.c: 128: timer1_int_handler();
  3969  000062  EC1F  F00B         	call	_timer1_int_handler	;wreg free
  3970  000066                     i1l3023:
  3971                           
  3972                           ;interrupts.c: 129: }
  3973                           ;interrupts.c: 132: if (PIR1bits.RCIF) {
  3974  000066  AA9E               	btfss	3998,5,c	;volatile
  3975  000068  D003               	goto	i1l49
  3976                           
  3977                           ;interrupts.c: 133: PIR1bits.RCIF = 0;
  3978  00006A  9A9E               	bcf	3998,5,c	;volatile
  3979                           
  3980                           ;interrupts.c: 134: uart_recv_int_handler();
  3981  00006C  EC1F  F008         	call	_uart_recv_int_handler	;wreg free
  3982  000070                     i1l49:
  3983  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  3984  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  3985  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  3986  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  3987  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  3988  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  3989  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  3990  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  3991  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  3992  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  3993  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  3994  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  3995  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  3996  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  3997  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  3998  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3999  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  4000  0000B4  0010               	retfie	
  4001  0000B6                     __end_of_InterruptHandlerLow:
  4002                           	opt stack 0
  4003                           pclatu	equ	0xFFB
  4004                           pclath	equ	0xFFA
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           intcon	equ	0xFF2
  4012                           postinc0	equ	0xFEE
  4013                           fsr0h	equ	0xFEA
  4014                           fsr0l	equ	0xFE9
  4015                           wreg	equ	0xFE8
  4016                           indf1	equ	0xFE7
  4017                           fsr1h	equ	0xFE2
  4018                           fsr1l	equ	0xFE1
  4019                           bsr	equ	0xFE0
  4020                           indf2	equ	0xFDF
  4021                           postinc2	equ	0xFDE
  4022                           postdec2	equ	0xFDD
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _uart_recv_int_handler *****************
  4028 ;; Defined at:
  4029 ;;		line 11 in file "../src/my_uart.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;		None               void
  4036 ;; Registers used:
  4037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4043 ;;      Params:         0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0
  4045 ;;      Temps:          1       0       0       0       0
  4046 ;;      Totals:         1       0       0       0       0
  4047 ;;Total ram usage:        1 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    8
  4050 ;; This function calls:
  4051 ;;		_ReadUSART
  4052 ;;		_ToMainLow_sendmsg
  4053 ;; This function is called by:
  4054 ;;		_InterruptHandlerLow
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text24
  4059  00103E                     __ptext24:
  4060                           	opt stack 0
  4061  00103E                     _uart_recv_int_handler:
  4062                           	opt stack 17
  4063                           
  4064                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4065                           
  4066                           ;incstack = 0
  4067  00103E  AA9E               	btfss	3998,5,c	;volatile
  4068  001040  D03C               	goto	i1l3011
  4069                           
  4070                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4071  001042  EE20 F004          	lfsr	2,4
  4072  001046  504E               	movf	_uc_ptr,w,c
  4073  001048  26D9               	addwf	fsr2l,f,c
  4074  00104A  504F               	movf	_uc_ptr+1,w,c
  4075  00104C  22DA               	addwfc	fsr2h,f,c
  4076  00104E  50DF               	movf	indf2,w,c
  4077  001050  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4078  001052  501B               	movf	??_uart_recv_int_handler,w,c
  4079  001054  0D01               	mullw	1
  4080  001056  50F3               	movf	prodl,w,c
  4081  001058  244E               	addwf	_uc_ptr,w,c
  4082  00105A  6ED9               	movwf	fsr2l,c
  4083  00105C  50F4               	movf	prodh,w,c
  4084  00105E  204F               	addwfc	_uc_ptr+1,w,c
  4085  001060  6EDA               	movwf	fsr2h,c
  4086  001062  ECC0  F00B         	call	_ReadUSART	;wreg free
  4087  001066  6EDF               	movwf	indf2,c
  4088                           
  4089                           ;my_uart.c: 25: uc_ptr->buflen++;
  4090  001068  EE20 F004          	lfsr	2,4
  4091  00106C  504E               	movf	_uc_ptr,w,c
  4092  00106E  26D9               	addwf	fsr2l,f,c
  4093  001070  504F               	movf	_uc_ptr+1,w,c
  4094  001072  22DA               	addwfc	fsr2h,f,c
  4095  001074  2ADF               	incf	indf2,f,c
  4096                           
  4097                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  4098  001076  EE20 F004          	lfsr	2,4
  4099  00107A  504E               	movf	_uc_ptr,w,c
  4100  00107C  26D9               	addwf	fsr2l,f,c
  4101  00107E  504F               	movf	_uc_ptr+1,w,c
  4102  001080  22DA               	addwfc	fsr2h,f,c
  4103  001082  0E04               	movlw	4
  4104  001084  62DF               	cpfseq	indf2,c
  4105  001086  D019               	goto	i1l3011
  4106                           
  4107                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4108  001088  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4109  00108A  0E1F               	movlw	31
  4110  00108C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4111  00108E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4112  001090  C04F  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4113  001094  C04E  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4114  001098  EE20 F004          	lfsr	2,4
  4115  00109C  504E               	movf	_uc_ptr,w,c
  4116  00109E  26D9               	addwf	fsr2l,f,c
  4117  0010A0  504F               	movf	_uc_ptr+1,w,c
  4118  0010A2  22DA               	addwfc	fsr2h,f,c
  4119  0010A4  50DF               	movf	indf2,w,c
  4120  0010A6  EC8C  F00B         	call	_ToMainLow_sendmsg
  4121                           
  4122                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  4123  0010AA  EE20 F004          	lfsr	2,4
  4124  0010AE  504E               	movf	_uc_ptr,w,c
  4125  0010B0  26D9               	addwf	fsr2l,f,c
  4126  0010B2  504F               	movf	_uc_ptr+1,w,c
  4127  0010B4  22DA               	addwfc	fsr2h,f,c
  4128  0010B6  0E00               	movlw	0
  4129  0010B8  6EDF               	movwf	indf2,c
  4130  0010BA                     i1l3011:
  4131                           
  4132                           ;my_uart.c: 30: }
  4133                           ;my_uart.c: 31: }
  4134                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  4135  0010BA  A64D               	btfss	_USART_Status,3,c
  4136  0010BC  0012               	return	
  4137                           
  4138                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  4139  0010BE  98AB               	bcf	4011,4,c	;volatile
  4140                           
  4141                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  4142  0010C0  88AB               	bsf	4011,4,c	;volatile
  4143                           
  4144                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  4145  0010C2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4146  0010C4  0E1E               	movlw	30
  4147  0010C6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4148  0010C8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4149  0010CA  0E00               	movlw	0
  4150  0010CC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4151  0010CE  0E00               	movlw	0
  4152  0010D0  6E18               	movwf	ToMainLow_sendmsg@data,c
  4153  0010D2  0E00               	movlw	0
  4154  0010D4  EC8C  F00B         	call	_ToMainLow_sendmsg
  4155  0010D8  0012               	return	
  4156  0010DA                     __end_of_uart_recv_int_handler:
  4157                           	opt stack 0
  4158                           pclatu	equ	0xFFB
  4159                           pclath	equ	0xFFA
  4160                           tblptru	equ	0xFF8
  4161                           tblptrh	equ	0xFF7
  4162                           tblptrl	equ	0xFF6
  4163                           tablat	equ	0xFF5
  4164                           prodh	equ	0xFF4
  4165                           prodl	equ	0xFF3
  4166                           intcon	equ	0xFF2
  4167                           postinc0	equ	0xFEE
  4168                           fsr0h	equ	0xFEA
  4169                           fsr0l	equ	0xFE9
  4170                           wreg	equ	0xFE8
  4171                           indf1	equ	0xFE7
  4172                           fsr1h	equ	0xFE2
  4173                           fsr1l	equ	0xFE1
  4174                           bsr	equ	0xFE0
  4175                           indf2	equ	0xFDF
  4176                           postinc2	equ	0xFDE
  4177                           postdec2	equ	0xFDD
  4178                           fsr2h	equ	0xFDA
  4179                           fsr2l	equ	0xFD9
  4180                           status	equ	0xFD8
  4181                           
  4182 ;; *************** function _ReadUSART *****************
  4183 ;; Defined at:
  4184 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  data            1    0[COMRAM] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      unsigned char 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4198 ;;      Params:         0       0       0       0       0
  4199 ;;      Locals:         1       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0
  4201 ;;      Totals:         1       0       0       0       0
  4202 ;;Total ram usage:        1 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    5
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_uart_recv_int_handler
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text25
  4213  001780                     __ptext25:
  4214                           	opt stack 0
  4215  001780                     _ReadUSART:
  4216                           	opt stack 19
  4217                           
  4218                           ;incstack = 0
  4219  001780  0EF2               	movlw	242
  4220  001782  164D               	andwf	_USART_Status,f,c
  4221  001784  ACAB               	btfss	4011,6,c	;volatile
  4222  001786  D003               	goto	i1l424
  4223  001788  904D               	bcf	_USART_Status,0,c
  4224  00178A  B0AB               	btfsc	4011,0,c	;volatile
  4225  00178C  804D               	bsf	_USART_Status,0,c
  4226  00178E                     i1l424:
  4227  00178E  B4AB               	btfsc	4011,2,c	;volatile
  4228  001790  844D               	bsf	_USART_Status,2,c
  4229  001792  B2AB               	btfsc	4011,1,c	;volatile
  4230  001794  864D               	bsf	_USART_Status,3,c
  4231  001796  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  4232  00179A  5001               	movf	ReadUSART@data,w,c
  4233  00179C  0012               	return	
  4234  00179E                     __end_of_ReadUSART:
  4235                           	opt stack 0
  4236                           pclatu	equ	0xFFB
  4237                           pclath	equ	0xFFA
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           intcon	equ	0xFF2
  4245                           postinc0	equ	0xFEE
  4246                           fsr0h	equ	0xFEA
  4247                           fsr0l	equ	0xFE9
  4248                           wreg	equ	0xFE8
  4249                           indf1	equ	0xFE7
  4250                           fsr1h	equ	0xFE2
  4251                           fsr1l	equ	0xFE1
  4252                           bsr	equ	0xFE0
  4253                           indf2	equ	0xFDF
  4254                           postinc2	equ	0xFDE
  4255                           postdec2	equ	0xFDD
  4256                           fsr2h	equ	0xFDA
  4257                           fsr2l	equ	0xFD9
  4258                           status	equ	0xFD8
  4259                           
  4260 ;; *************** function _timer1_int_handler *****************
  4261 ;; Defined at:
  4262 ;;		line 41 in file "../src/user_interrupts.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  result          2   27[COMRAM] unsigned int 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;		None               void
  4269 ;; Registers used:
  4270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4276 ;;      Params:         0       0       0       0       0
  4277 ;;      Locals:         2       0       0       0       0
  4278 ;;      Temps:          1       0       0       0       0
  4279 ;;      Totals:         3       0       0       0       0
  4280 ;;Total ram usage:        3 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    8
  4283 ;; This function calls:
  4284 ;;		_ReadTimer1
  4285 ;;		_ToMainLow_sendmsg
  4286 ;;		_WriteTimer1
  4287 ;; This function is called by:
  4288 ;;		_InterruptHandlerLow
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text26
  4293  00163E                     __ptext26:
  4294                           	opt stack 0
  4295  00163E                     _timer1_int_handler:
  4296                           	opt stack 17
  4297                           
  4298                           ;user_interrupts.c: 42: unsigned int result;
  4299                           ;user_interrupts.c: 49: result = ReadTimer1();
  4300                           
  4301                           ;incstack = 0
  4302  00163E  ECF5  F00B         	call	_ReadTimer1	;wreg free
  4303  001642  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  4304  001646  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4305                           
  4306                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  4307  00164A  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  4308  00164C  0E0B               	movlw	11
  4309  00164E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4310  001650  501B               	movf	??_timer1_int_handler& (0+255),w,c
  4311  001652  0E00               	movlw	0
  4312  001654  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4313  001656  0E00               	movlw	0
  4314  001658  6E18               	movwf	ToMainLow_sendmsg@data,c
  4315  00165A  0E00               	movlw	0
  4316  00165C  EC8C  F00B         	call	_ToMainLow_sendmsg
  4317                           
  4318                           ;user_interrupts.c: 53: WriteTimer1(0);
  4319  001660  0E00               	movlw	0
  4320  001662  6E02               	movwf	WriteTimer1@timer1+1,c
  4321  001664  0E00               	movlw	0
  4322  001666  6E01               	movwf	WriteTimer1@timer1,c
  4323  001668  ECEC  F00B         	call	_WriteTimer1	;wreg free
  4324  00166C  0012               	return	
  4325  00166E                     __end_of_timer1_int_handler:
  4326                           	opt stack 0
  4327                           pclatu	equ	0xFFB
  4328                           pclath	equ	0xFFA
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           prodh	equ	0xFF4
  4334                           prodl	equ	0xFF3
  4335                           intcon	equ	0xFF2
  4336                           postinc0	equ	0xFEE
  4337                           fsr0h	equ	0xFEA
  4338                           fsr0l	equ	0xFE9
  4339                           wreg	equ	0xFE8
  4340                           indf1	equ	0xFE7
  4341                           fsr1h	equ	0xFE2
  4342                           fsr1l	equ	0xFE1
  4343                           bsr	equ	0xFE0
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _WriteTimer1 *****************
  4352 ;; Defined at:
  4353 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  timer1          2    0[COMRAM] unsigned int 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  timer           2    2[COMRAM] struct Timers
  4358 ;; Return value:  Size  Location     Type
  4359 ;;		None               void
  4360 ;; Registers used:
  4361 ;;		None
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4367 ;;      Params:         2       0       0       0       0
  4368 ;;      Locals:         2       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0
  4370 ;;      Totals:         4       0       0       0       0
  4371 ;;Total ram usage:        4 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    5
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_timer1_int_handler
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text27
  4382  0017D8                     __ptext27:
  4383                           	opt stack 0
  4384  0017D8                     _WriteTimer1:
  4385                           	opt stack 19
  4386                           
  4387                           ;incstack = 0
  4388  0017D8  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4389  0017DC  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4390  0017E0  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4391  0017E4  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4392  0017E8  0012               	return	
  4393  0017EA                     __end_of_WriteTimer1:
  4394                           	opt stack 0
  4395                           pclatu	equ	0xFFB
  4396                           pclath	equ	0xFFA
  4397                           tblptru	equ	0xFF8
  4398                           tblptrh	equ	0xFF7
  4399                           tblptrl	equ	0xFF6
  4400                           tablat	equ	0xFF5
  4401                           prodh	equ	0xFF4
  4402                           prodl	equ	0xFF3
  4403                           intcon	equ	0xFF2
  4404                           postinc0	equ	0xFEE
  4405                           fsr0h	equ	0xFEA
  4406                           fsr0l	equ	0xFE9
  4407                           wreg	equ	0xFE8
  4408                           indf1	equ	0xFE7
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           bsr	equ	0xFE0
  4412                           indf2	equ	0xFDF
  4413                           postinc2	equ	0xFDE
  4414                           postdec2	equ	0xFDD
  4415                           fsr2h	equ	0xFDA
  4416                           fsr2l	equ	0xFD9
  4417                           status	equ	0xFD8
  4418                           
  4419 ;; *************** function _ToMainLow_sendmsg *****************
  4420 ;; Defined at:
  4421 ;;		line 103 in file "../src/messages.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  length          1    wreg     unsigned char 
  4424 ;;  msgtype         1   22[COMRAM] unsigned char 
  4425 ;;  data            2   23[COMRAM] PTR void 
  4426 ;;		 -> NULL(0), main@uc(5), 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  length          1   25[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      char 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4438 ;;      Params:         3       0       0       0       0
  4439 ;;      Locals:         1       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0
  4441 ;;      Totals:         4       0       0       0       0
  4442 ;;Total ram usage:        4 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    7
  4445 ;; This function calls:
  4446 ;;		i1_send_msg
  4447 ;; This function is called by:
  4448 ;;		_uart_recv_int_handler
  4449 ;;		_timer1_int_handler
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text28
  4454  001718                     __ptext28:
  4455                           	opt stack 0
  4456  001718                     _ToMainLow_sendmsg:
  4457                           	opt stack 17
  4458                           
  4459                           ;incstack = 0
  4460                           ;ToMainLow_sendmsg@length stored from wreg
  4461  001718  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  4462                           
  4463                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4464                           ;	Return value of _ToMainLow_sendmsg is never used
  4465  00171C  0101               	movlb	1	; () banked
  4466  00171E  0E01               	movlw	high _ToMainLow_MQ
  4467  001720  6E0C               	movwf	i1send_msg@qptr+1,c
  4468  001722  0101               	movlb	1	; () banked
  4469  001724  0E6C               	movlw	low _ToMainLow_MQ
  4470  001726  6E0B               	movwf	i1send_msg@qptr,c
  4471  001728  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4472  00172C  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4473  001730  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  4474  001734  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4475  001738  EC75  F007         	call	i1_send_msg	;wreg free
  4476  00173C  0012               	return	
  4477  00173E                     __end_of_ToMainLow_sendmsg:
  4478                           	opt stack 0
  4479                           pclatu	equ	0xFFB
  4480                           pclath	equ	0xFFA
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           intcon	equ	0xFF2
  4488                           postinc0	equ	0xFEE
  4489                           fsr0h	equ	0xFEA
  4490                           fsr0l	equ	0xFE9
  4491                           wreg	equ	0xFE8
  4492                           indf1	equ	0xFE7
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           bsr	equ	0xFE0
  4496                           indf2	equ	0xFDF
  4497                           postinc2	equ	0xFDE
  4498                           postdec2	equ	0xFDD
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           
  4503 ;; *************** function i1_send_msg *****************
  4504 ;; Defined at:
  4505 ;;		line 24 in file "../src/messages.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4508 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4509 ;;  length          1   12[COMRAM] unsigned char 
  4510 ;;  msgtype         1   13[COMRAM] unsigned char 
  4511 ;;  data            2   14[COMRAM] PTR void 
  4512 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  4513 ;;		 -> main@ic(40), main@uc(5), 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4516 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4517 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4518 ;;  send_msg        2   17[COMRAM] unsigned int 
  4519 ;;  send_msg        1   19[COMRAM] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      char 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4529 ;;      Params:         6       0       0       0       0
  4530 ;;      Locals:         5       0       0       0       0
  4531 ;;      Temps:          1       0       0       0       0
  4532 ;;      Totals:        12       0       0       0       0
  4533 ;;Total ram usage:       12 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    6
  4536 ;; This function calls:
  4537 ;;		i1_memcpy
  4538 ;; This function is called by:
  4539 ;;		_ToMainLow_sendmsg
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text29
  4544  000EEA                     __ptext29:
  4545                           	opt stack 0
  4546  000EEA                     i1_send_msg:
  4547                           	opt stack 17
  4548                           
  4549                           ;messages.c: 25: unsigned char slot;
  4550                           ;messages.c: 27: msg *qmsg;
  4551                           ;messages.c: 28: size_t tlength = length;
  4552                           
  4553                           ;incstack = 0
  4554  000EEA  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4555  000EEE  6A13               	clrf	i1send_msg@tlength+1,c
  4556                           
  4557                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4558  000EF0  EE20 F034          	lfsr	2,52
  4559  000EF4  500B               	movf	i1send_msg@qptr,w,c
  4560  000EF6  26D9               	addwf	fsr2l,f,c
  4561  000EF8  500C               	movf	i1send_msg@qptr+1,w,c
  4562  000EFA  22DA               	addwfc	fsr2h,f,c
  4563  000EFC  50DF               	movf	indf2,w,c
  4564  000EFE  6E14               	movwf	i1send_msg@slot,c
  4565                           
  4566                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4567  000F00  5014               	movf	i1send_msg@slot,w,c
  4568  000F02  0D0D               	mullw	13
  4569  000F04  50F3               	movf	prodl,w,c
  4570  000F06  240B               	addwf	i1send_msg@qptr,w,c
  4571  000F08  6E15               	movwf	i1send_msg@qmsg,c
  4572  000F0A  50F4               	movf	prodh,w,c
  4573  000F0C  200C               	addwfc	i1send_msg@qptr+1,w,c
  4574  000F0E  6E16               	movwf	i1send_msg@qmsg+1,c
  4575                           
  4576                           ;messages.c: 41: if (qmsg->full != 0) {
  4577  000F10  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4578  000F14  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4579  000F18  50DF               	movf	indf2,w,c
  4580  000F1A  B4D8               	btfsc	status,2,c
  4581  000F1C  D002               	goto	i1l2977
  4582                           
  4583                           ;messages.c: 42: return (-1);
  4584  000F1E  0EFF               	movlw	255
  4585  000F20  0012               	return	
  4586  000F22                     i1l2977:
  4587                           
  4588                           ;messages.c: 43: }
  4589                           ;messages.c: 46: qmsg->length = length;
  4590  000F22  EE20 F001          	lfsr	2,1
  4591  000F26  5015               	movf	i1send_msg@qmsg,w,c
  4592  000F28  26D9               	addwf	fsr2l,f,c
  4593  000F2A  5016               	movf	i1send_msg@qmsg+1,w,c
  4594  000F2C  22DA               	addwfc	fsr2h,f,c
  4595  000F2E  C00D  FFDF         	movff	i1send_msg@length,indf2
  4596                           
  4597                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4598  000F32  EE20 F002          	lfsr	2,2
  4599  000F36  5015               	movf	i1send_msg@qmsg,w,c
  4600  000F38  26D9               	addwf	fsr2l,f,c
  4601  000F3A  5016               	movf	i1send_msg@qmsg+1,w,c
  4602  000F3C  22DA               	addwfc	fsr2h,f,c
  4603  000F3E  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4604                           
  4605                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4606  000F42  0E03               	movlw	3
  4607  000F44  2415               	addwf	i1send_msg@qmsg,w,c
  4608  000F46  6E01               	movwf	i1memcpy@d1,c
  4609  000F48  0E00               	movlw	0
  4610  000F4A  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4611  000F4C  6E02               	movwf	i1memcpy@d1+1,c
  4612  000F4E  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  4613  000F52  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  4614  000F56  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  4615  000F5A  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  4616  000F5E  EC8B  F00A         	call	i1_memcpy	;wreg free
  4617                           
  4618                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4619  000F62  EE20 F034          	lfsr	2,52
  4620  000F66  500B               	movf	i1send_msg@qptr,w,c
  4621  000F68  26D9               	addwf	fsr2l,f,c
  4622  000F6A  500C               	movf	i1send_msg@qptr+1,w,c
  4623  000F6C  22DA               	addwfc	fsr2h,f,c
  4624  000F6E  EE10 F034          	lfsr	1,52
  4625  000F72  500B               	movf	i1send_msg@qptr,w,c
  4626  000F74  26E1               	addwf	fsr1l,f,c
  4627  000F76  500C               	movf	i1send_msg@qptr+1,w,c
  4628  000F78  22E2               	addwfc	fsr1h,f,c
  4629  000F7A  50E7               	movf	indf1,w,c
  4630  000F7C  6E11               	movwf	??i1_send_msg& (0+255),c
  4631  000F7E  2811               	incf	??i1_send_msg,w,c
  4632  000F80  0B03               	andlw	3
  4633  000F82  6EDF               	movwf	indf2,c
  4634                           
  4635                           ;messages.c: 59: qmsg->full = 1;
  4636  000F84  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4637  000F88  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4638  000F8C  0E01               	movlw	1
  4639  000F8E  6EDF               	movwf	indf2,c
  4640                           
  4641                           ;messages.c: 60: return (1);
  4642  000F90  0E01               	movlw	1
  4643  000F92  0012               	return	
  4644  000F94                     __end_ofi1_send_msg:
  4645                           	opt stack 0
  4646                           pclatu	equ	0xFFB
  4647                           pclath	equ	0xFFA
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           prodh	equ	0xFF4
  4653                           prodl	equ	0xFF3
  4654                           intcon	equ	0xFF2
  4655                           postinc0	equ	0xFEE
  4656                           fsr0h	equ	0xFEA
  4657                           fsr0l	equ	0xFE9
  4658                           wreg	equ	0xFE8
  4659                           indf1	equ	0xFE7
  4660                           fsr1h	equ	0xFE2
  4661                           fsr1l	equ	0xFE1
  4662                           bsr	equ	0xFE0
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function i1_memcpy *****************
  4671 ;; Defined at:
  4672 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  d1              2    0[COMRAM] PTR void 
  4675 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4676 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4677 ;;		 -> main@msgbuffer(11), 
  4678 ;;  s1              2    2[COMRAM] PTR const void 
  4679 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4680 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4681 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  4682 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4683 ;;		 -> main@ic(40), main@uc(5), 
  4684 ;;  n               2    4[COMRAM] unsigned int 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4687 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4688 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4689 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  4690 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4691 ;;		 -> main@ic(40), main@uc(5), 
  4692 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4693 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4694 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4695 ;;		 -> main@msgbuffer(11), 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  2    0[COMRAM] PTR void 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4705 ;;      Params:         6       0       0       0       0
  4706 ;;      Locals:         4       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0
  4708 ;;      Totals:        10       0       0       0       0
  4709 ;;Total ram usage:       10 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    5
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		i1_send_msg
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text30
  4720  001516                     __ptext30:
  4721                           	opt stack 0
  4722  001516                     i1_memcpy:
  4723                           	opt stack 17
  4724                           
  4725                           ;incstack = 0
  4726  001516  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4727  00151A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4728  00151E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4729  001522  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4730  001526  D00E               	goto	i1l2953
  4731  001528                     i1l2947:
  4732  001528  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4733  00152C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4734  001530  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4735  001534  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4736  001538  CFDF FFE7          	movff	indf2,indf1
  4737  00153C  4A09               	infsnz	i1memcpy@s,f,c
  4738  00153E  2A0A               	incf	i1memcpy@s+1,f,c
  4739  001540  4A07               	infsnz	i1memcpy@d,f,c
  4740  001542  2A08               	incf	i1memcpy@d+1,f,c
  4741  001544                     i1l2953:
  4742  001544  0605               	decf	i1memcpy@n,f,c
  4743  001546  A0D8               	btfss	status,0,c
  4744  001548  0606               	decf	i1memcpy@n+1,f,c
  4745  00154A  2805               	incf	i1memcpy@n& (0+255),w,c
  4746  00154C  B4D8               	btfsc	status,2,c
  4747  00154E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4748  001550  B4D8               	btfsc	status,2,c
  4749                           
  4750                           ;	Return value of i1_memcpy is never used
  4751  001552  0012               	return	
  4752  001554  D7E9               	goto	i1l2947
  4753  001556                     __end_ofi1_memcpy:
  4754                           	opt stack 0
  4755                           pclatu	equ	0xFFB
  4756                           pclath	equ	0xFFA
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           postinc0	equ	0xFEE
  4765                           fsr0h	equ	0xFEA
  4766                           fsr0l	equ	0xFE9
  4767                           wreg	equ	0xFE8
  4768                           indf1	equ	0xFE7
  4769                           fsr1h	equ	0xFE2
  4770                           fsr1l	equ	0xFE1
  4771                           bsr	equ	0xFE0
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           postdec2	equ	0xFDD
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function _ReadTimer1 *****************
  4780 ;; Defined at:
  4781 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  timer           2    2[COMRAM] struct Timers
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2    0[COMRAM] unsigned int 
  4788 ;; Registers used:
  4789 ;;		None
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4795 ;;      Params:         2       0       0       0       0
  4796 ;;      Locals:         2       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0
  4798 ;;      Totals:         4       0       0       0       0
  4799 ;;Total ram usage:        4 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_timer1_int_handler
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text31
  4810  0017EA                     __ptext31:
  4811                           	opt stack 0
  4812  0017EA                     _ReadTimer1:
  4813                           	opt stack 19
  4814                           
  4815                           ;incstack = 0
  4816  0017EA  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  4817  0017EE  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  4818  0017F2  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  4819  0017F6  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  4820  0017FA  0012               	return	
  4821  0017FC                     __end_of_ReadTimer1:
  4822                           	opt stack 0
  4823                           pclatu	equ	0xFFB
  4824                           pclath	equ	0xFFA
  4825                           tblptru	equ	0xFF8
  4826                           tblptrh	equ	0xFF7
  4827                           tblptrl	equ	0xFF6
  4828                           tablat	equ	0xFF5
  4829                           prodh	equ	0xFF4
  4830                           prodl	equ	0xFF3
  4831                           intcon	equ	0xFF2
  4832                           postinc0	equ	0xFEE
  4833                           fsr0h	equ	0xFEA
  4834                           fsr0l	equ	0xFE9
  4835                           wreg	equ	0xFE8
  4836                           indf1	equ	0xFE7
  4837                           fsr1h	equ	0xFE2
  4838                           fsr1l	equ	0xFE1
  4839                           bsr	equ	0xFE0
  4840                           indf2	equ	0xFDF
  4841                           postinc2	equ	0xFDE
  4842                           postdec2	equ	0xFDD
  4843                           fsr2h	equ	0xFDA
  4844                           fsr2l	equ	0xFD9
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _InterruptHandlerHigh *****************
  4848 ;; Defined at:
  4849 ;;		line 84 in file "../src/interrupts.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4863 ;;      Params:         0       0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0
  4865 ;;      Temps:          0      15       0       0       0
  4866 ;;      Totals:         0      15       0       0       0
  4867 ;;Total ram usage:       15 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    4
  4870 ;; This function calls:
  4871 ;;		_SleepIfOkay
  4872 ;;		_i2c_int_handler
  4873 ;;		_timer0_int_handler
  4874 ;; This function is called by:
  4875 ;;		Interrupt level 2
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	intcode
  4880  000008                     __pintcode:
  4881                           	opt stack 0
  4882  000008                     _InterruptHandlerHigh:
  4883                           	opt stack 17
  4884                           
  4885                           ;incstack = 0
  4886  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh+1
  4887  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+2
  4888  000010  EF6D  F008         	goto	int_func
  4889                           pclatu	equ	0xFFB
  4890                           pclath	equ	0xFFA
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           postinc0	equ	0xFEE
  4899                           fsr0h	equ	0xFEA
  4900                           fsr0l	equ	0xFE9
  4901                           wreg	equ	0xFE8
  4902                           indf1	equ	0xFE7
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           bsr	equ	0xFE0
  4906                           indf2	equ	0xFDF
  4907                           postinc2	equ	0xFDE
  4908                           postdec2	equ	0xFDD
  4909                           fsr2h	equ	0xFDA
  4910                           fsr2l	equ	0xFD9
  4911                           status	equ	0xFD8
  4912                           
  4913                           	psect	intcode_body
  4914  0010DA                     __pintcode_body:
  4915                           	opt stack 17
  4916  0010DA                     int_func:
  4917                           	opt stack 17
  4918  0010DA  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+3
  4919  0010DE  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+4
  4920  0010E2  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+5
  4921  0010E6  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+6
  4922  0010EA  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+7
  4923  0010EE  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+8
  4924  0010F2  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+9
  4925  0010F6  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+10
  4926  0010FA  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+11
  4927  0010FE  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+12
  4928  001102  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+13
  4929  001106  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+14
  4930                           
  4931                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  4932  00110A  A69E               	btfss	3998,3,c	;volatile
  4933  00110C  D003               	goto	i2l2595
  4934                           
  4935                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  4936  00110E  969E               	bcf	3998,3,c	;volatile
  4937                           
  4938                           ;interrupts.c: 93: i2c_int_handler();
  4939  001110  EC5D  F000         	call	_i2c_int_handler	;wreg free
  4940  001114                     i2l2595:
  4941                           
  4942                           ;interrupts.c: 94: }
  4943                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  4944  001114  A4F2               	btfss	intcon,2,c	;volatile
  4945  001116  D010               	goto	i2l2603
  4946                           
  4947                           ;interrupts.c: 98: LATBbits.LATB0 = !LATBbits.LATB0;
  4948  001118  B08A               	btfsc	3978,0,c	;volatile
  4949  00111A  D002               	goto	i2u159_40
  4950  00111C  0E01               	movlw	1
  4951  00111E  D001               	goto	i2u159_46
  4952  001120                     i2u159_40:
  4953  001120  0E00               	movlw	0
  4954  001122                     i2u159_46:
  4955  001122  0100               	movlb	0	; () banked
  4956  001124  6FC8               	movwf	??_InterruptHandlerHigh& (0+255),b
  4957  001126  508A               	movf	3978,w,c	;volatile
  4958  001128  0100               	movlb	0	; () banked
  4959  00112A  19C8               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  4960  00112C  0BFE               	andlw	-2
  4961  00112E  19C8               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  4962  001130  6E8A               	movwf	3978,c	;volatile
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  4966  001132  94F2               	bcf	intcon,2,c	;volatile
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;interrupts.c: 101: timer0_int_handler();
  4970  001134  ECCB  F00A         	call	_timer0_int_handler	;wreg free
  4971  001138                     i2l2603:
  4972                           
  4973                           ;interrupts.c: 102: }
  4974                           ;interrupts.c: 111: SleepIfOkay();
  4975  001138  ECDB  F009         	call	_SleepIfOkay	;wreg free
  4976  00113C  C0D6  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  4977  001140  C0D5  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  4978  001144  C0D4  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  4979  001148  C0D3  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  4980  00114C  C0D2  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  4981  001150  C0D1  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  4982  001154  C0D0  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  4983  001158  C0CF  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  4984  00115C  C0CE  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  4985  001160  C0CD  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  4986  001164  C0CC  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  4987  001168  C0CB  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  4988  00116C  C0CA  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  4989  001170  C0C9  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  4990  001174  0011               	retfie		f
  4991  001176                     __end_of_InterruptHandlerHigh:
  4992                           	opt stack 0
  4993                           pclatu	equ	0xFFB
  4994                           pclath	equ	0xFFA
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           postinc0	equ	0xFEE
  5003                           fsr0h	equ	0xFEA
  5004                           fsr0l	equ	0xFE9
  5005                           wreg	equ	0xFE8
  5006                           indf1	equ	0xFE7
  5007                           fsr1h	equ	0xFE2
  5008                           fsr1l	equ	0xFE1
  5009                           bsr	equ	0xFE0
  5010                           indf2	equ	0xFDF
  5011                           postinc2	equ	0xFDE
  5012                           postdec2	equ	0xFDD
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function _timer0_int_handler *****************
  5018 ;; Defined at:
  5019 ;;		line 18 in file "../src/user_interrupts.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  val             2    4[BANK0 ] unsigned int 
  5024 ;;  msgtype         2    0        int 
  5025 ;;  length          2    0        int 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;		None               void
  5028 ;; Registers used:
  5029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5035 ;;      Params:         0       0       0       0       0
  5036 ;;      Locals:         0       2       0       0       0
  5037 ;;      Temps:          0       1       0       0       0
  5038 ;;      Totals:         0       3       0       0       0
  5039 ;;Total ram usage:        3 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    3
  5042 ;; This function calls:
  5043 ;;		_WriteTimer0
  5044 ;;		i2_ToMainHigh_sendmsg
  5045 ;; This function is called by:
  5046 ;;		_InterruptHandlerHigh
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text33
  5051  001596                     __ptext33:
  5052                           	opt stack 0
  5053  001596                     _timer0_int_handler:
  5054                           	opt stack 17
  5055                           
  5056                           ;user_interrupts.c: 19: unsigned int val;
  5057                           ;user_interrupts.c: 20: int length, msgtype;
  5058                           ;user_interrupts.c: 21: LATBbits.LATB0 = 1;
  5059                           
  5060                           ;incstack = 0
  5061  001596  808A               	bsf	3978,0,c	;volatile
  5062                           
  5063                           ;user_interrupts.c: 22: LATBbits.LATB0 = 0;
  5064  001598  908A               	bcf	3978,0,c	;volatile
  5065                           
  5066                           ;user_interrupts.c: 28: WriteTimer0(0);
  5067  00159A  0E00               	movlw	0
  5068  00159C  6E30               	movwf	WriteTimer0@timer0+1,c
  5069  00159E  0E00               	movlw	0
  5070  0015A0  6E2F               	movwf	WriteTimer0@timer0,c
  5071  0015A2  ECFE  F00B         	call	_WriteTimer0	;wreg free
  5072                           
  5073                           ;user_interrupts.c: 34: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5074  0015A6  0100               	movlb	0	; () banked
  5075  0015A8  6FBD               	movwf	??_timer0_int_handler& (0+255),b
  5076  0015AA  0E0A               	movlw	10
  5077  0015AC  0100               	movlb	0	; () banked
  5078  0015AE  0100               	movlb	0	; () banked
  5079  0015B0  6FBA               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  5080  0015B2  0100               	movlb	0	; () banked
  5081  0015B4  51BD               	movf	??_timer0_int_handler& (0+255),w,b
  5082  0015B6  0100               	movlb	0	; () banked
  5083  0015B8  0E00               	movlw	high timer0_int_handler@val
  5084  0015BA  0100               	movlb	0	; () banked
  5085  0015BC  0100               	movlb	0	; () banked
  5086  0015BE  6FBC               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  5087  0015C0  0100               	movlb	0	; () banked
  5088  0015C2  0EBE               	movlw	low timer0_int_handler@val
  5089  0015C4  0100               	movlb	0	; () banked
  5090  0015C6  0100               	movlb	0	; () banked
  5091  0015C8  6FBB               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  5092  0015CA  0E02               	movlw	2
  5093  0015CC  EC63  F00B         	call	i2_ToMainHigh_sendmsg
  5094  0015D0  0012               	return	
  5095  0015D2                     __end_of_timer0_int_handler:
  5096                           	opt stack 0
  5097                           pclatu	equ	0xFFB
  5098                           pclath	equ	0xFFA
  5099                           tblptru	equ	0xFF8
  5100                           tblptrh	equ	0xFF7
  5101                           tblptrl	equ	0xFF6
  5102                           tablat	equ	0xFF5
  5103                           prodh	equ	0xFF4
  5104                           prodl	equ	0xFF3
  5105                           intcon	equ	0xFF2
  5106                           postinc0	equ	0xFEE
  5107                           fsr0h	equ	0xFEA
  5108                           fsr0l	equ	0xFE9
  5109                           wreg	equ	0xFE8
  5110                           indf1	equ	0xFE7
  5111                           fsr1h	equ	0xFE2
  5112                           fsr1l	equ	0xFE1
  5113                           bsr	equ	0xFE0
  5114                           indf2	equ	0xFDF
  5115                           postinc2	equ	0xFDE
  5116                           postdec2	equ	0xFDD
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _WriteTimer0 *****************
  5122 ;; Defined at:
  5123 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  timer0          2   46[COMRAM] unsigned int 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  timer           2   48[COMRAM] struct Timers
  5128 ;; Return value:  Size  Location     Type
  5129 ;;		None               void
  5130 ;; Registers used:
  5131 ;;		None
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5137 ;;      Params:         2       0       0       0       0
  5138 ;;      Locals:         2       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0
  5140 ;;      Totals:         4       0       0       0       0
  5141 ;;Total ram usage:        4 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_timer0_int_handler
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text34
  5151  0017FC                     __ptext34:
  5152                           	opt stack 0
  5153  0017FC                     _WriteTimer0:
  5154                           	opt stack 19
  5155                           
  5156                           ;incstack = 0
  5157  0017FC  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5158  001800  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5159  001804  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5160  001808  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5161  00180C  0012               	return	
  5162  00180E                     __end_of_WriteTimer0:
  5163                           	opt stack 0
  5164                           pclatu	equ	0xFFB
  5165                           pclath	equ	0xFFA
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           intcon	equ	0xFF2
  5173                           postinc0	equ	0xFEE
  5174                           fsr0h	equ	0xFEA
  5175                           fsr0l	equ	0xFE9
  5176                           wreg	equ	0xFE8
  5177                           indf1	equ	0xFE7
  5178                           fsr1h	equ	0xFE2
  5179                           fsr1l	equ	0xFE1
  5180                           bsr	equ	0xFE0
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188 ;; *************** function _i2c_int_handler *****************
  5189 ;; Defined at:
  5190 ;;		line 136 in file "../src/my_i2c.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  error_buf       3    5[BANK0 ] unsigned char [3]
  5195 ;;  data_read       1   13[BANK0 ] unsigned char 
  5196 ;;  msg_ready       1   12[BANK0 ] unsigned char 
  5197 ;;  msg_to_send     1   11[BANK0 ] unsigned char 
  5198 ;;  i2c_data        1   10[BANK0 ] unsigned char 
  5199 ;;  overrun_erro    1    9[BANK0 ] unsigned char 
  5200 ;;  data_written    1    8[BANK0 ] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;		None               void
  5203 ;; Registers used:
  5204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5210 ;;      Params:         0       0       0       0       0
  5211 ;;      Locals:         0       9       0       0       0
  5212 ;;      Temps:          0       2       0       0       0
  5213 ;;      Totals:         0      11       0       0       0
  5214 ;;Total ram usage:       11 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    3
  5217 ;; This function calls:
  5218 ;;		_handle_start
  5219 ;;		i2_ToMainHigh_sendmsg
  5220 ;; This function is called by:
  5221 ;;		_InterruptHandlerHigh
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text35
  5226  0000BA                     __ptext35:
  5227                           	opt stack 0
  5228  0000BA                     _i2c_int_handler:
  5229                           	opt stack 17
  5230                           
  5231                           ;my_i2c.c: 137: unsigned char i2c_data;
  5232                           ;my_i2c.c: 138: unsigned char data_read = 0;
  5233                           
  5234                           ;incstack = 0
  5235  0000BA  0100               	movlb	0	; () banked
  5236  0000BC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5237  0000BE  0E00               	movlw	0
  5238  0000C0  0100               	movlb	0	; () banked
  5239  0000C2  0100               	movlb	0	; () banked
  5240  0000C4  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  5241  0000C6  0100               	movlb	0	; () banked
  5242  0000C8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5243                           
  5244                           ;my_i2c.c: 139: unsigned char data_written = 0;
  5245  0000CA  0100               	movlb	0	; () banked
  5246  0000CC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5247  0000CE  0E00               	movlw	0
  5248  0000D0  0100               	movlb	0	; () banked
  5249  0000D2  0100               	movlb	0	; () banked
  5250  0000D4  6FC2               	movwf	i2c_int_handler@data_written& (0+255),b
  5251  0000D6  0100               	movlb	0	; () banked
  5252  0000D8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5253                           
  5254                           ;my_i2c.c: 140: unsigned char msg_ready = 0;
  5255  0000DA  0100               	movlb	0	; () banked
  5256  0000DC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5257  0000DE  0E00               	movlw	0
  5258  0000E0  0100               	movlb	0	; () banked
  5259  0000E2  0100               	movlb	0	; () banked
  5260  0000E4  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5261  0000E6  0100               	movlb	0	; () banked
  5262  0000E8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5263                           
  5264                           ;my_i2c.c: 141: unsigned char msg_to_send = 0;
  5265  0000EA  0100               	movlb	0	; () banked
  5266  0000EC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5267  0000EE  0E00               	movlw	0
  5268  0000F0  0100               	movlb	0	; () banked
  5269  0000F2  0100               	movlb	0	; () banked
  5270  0000F4  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5271  0000F6  0100               	movlb	0	; () banked
  5272  0000F8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5273                           
  5274                           ;my_i2c.c: 142: unsigned char overrun_error = 0;
  5275  0000FA  0100               	movlb	0	; () banked
  5276  0000FC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5277  0000FE  0E00               	movlw	0
  5278  000100  0100               	movlb	0	; () banked
  5279  000102  0100               	movlb	0	; () banked
  5280  000104  6FC3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5281  000106  0100               	movlb	0	; () banked
  5282  000108  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;my_i2c.c: 143: unsigned char error_buf[3];
  5286                           ;my_i2c.c: 146: if (SSPCON1bits.SSPOV == 1) {
  5287  00010A  ACC6               	btfss	4038,6,c	;volatile
  5288  00010C  D029               	goto	i2l2619
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;my_i2c.c: 147: SSPCON1bits.SSPOV = 0;
  5292  00010E  9CC6               	bcf	4038,6,c	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;my_i2c.c: 151: ic_ptr->status = 0x5;
  5296  000110  0100               	movlb	0	; () banked
  5297  000112  EE20 F00C          	lfsr	2,12
  5298  000116  0100               	movlb	0	; () banked
  5299  000118  51E1               	movf	_ic_ptr& (0+255),w,b
  5300  00011A  26D9               	addwf	fsr2l,f,c
  5301  00011C  0100               	movlb	0	; () banked
  5302  00011E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5303  000120  22DA               	addwfc	fsr2h,f,c
  5304  000122  0E05               	movlw	5
  5305  000124  6EDF               	movwf	indf2,c
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;my_i2c.c: 152: overrun_error = 1;
  5309  000126  0100               	movlb	0	; () banked
  5310  000128  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5311  00012A  0E01               	movlw	1
  5312  00012C  0100               	movlb	0	; () banked
  5313  00012E  0100               	movlb	0	; () banked
  5314  000130  6FC3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5315  000132  0100               	movlb	0	; () banked
  5316  000134  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;my_i2c.c: 153: ic_ptr->error_count++;
  5320  000136  0100               	movlb	0	; () banked
  5321  000138  EE20 F00E          	lfsr	2,14
  5322  00013C  0100               	movlb	0	; () banked
  5323  00013E  51E1               	movf	_ic_ptr& (0+255),w,b
  5324  000140  26D9               	addwf	fsr2l,f,c
  5325  000142  0100               	movlb	0	; () banked
  5326  000144  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5327  000146  22DA               	addwfc	fsr2h,f,c
  5328  000148  2ADF               	incf	indf2,f,c
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;my_i2c.c: 154: ic_ptr->error_code = 0x4;
  5332  00014A  0100               	movlb	0	; () banked
  5333  00014C  EE20 F00D          	lfsr	2,13
  5334  000150  0100               	movlb	0	; () banked
  5335  000152  51E1               	movf	_ic_ptr& (0+255),w,b
  5336  000154  26D9               	addwf	fsr2l,f,c
  5337  000156  0100               	movlb	0	; () banked
  5338  000158  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5339  00015A  22DA               	addwfc	fsr2h,f,c
  5340  00015C  0E04               	movlw	4
  5341  00015E  6EDF               	movwf	indf2,c
  5342  000160                     i2l2619:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;my_i2c.c: 155: }
  5346                           ;my_i2c.c: 157: if (SSPSTATbits.BF == 1) {
  5347  000160  A0C7               	btfss	4039,0,c	;volatile
  5348  000162  D00A               	goto	i2l2625
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;my_i2c.c: 158: i2c_data = SSPBUF;
  5352  000164  CFC9 F0C4          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;my_i2c.c: 159: data_read = 1;
  5356  000168  0100               	movlb	0	; () banked
  5357  00016A  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5358  00016C  0E01               	movlw	1
  5359  00016E  0100               	movlb	0	; () banked
  5360  000170  0100               	movlb	0	; () banked
  5361  000172  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  5362  000174  0100               	movlb	0	; () banked
  5363  000176  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5364  000178                     i2l2625:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;my_i2c.c: 160: }
  5368                           ;my_i2c.c: 162: if (!overrun_error) {
  5369  000178  0100               	movlb	0	; () banked
  5370  00017A  0100               	movlb	0	; () banked
  5371  00017C  67C3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  5372  00017E  D1CE               	goto	i2l255
  5373  000180  D1B7               	goto	i2l2713
  5374  000182                     i2l257:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;my_i2c.c: 165: {
  5378                           ;my_i2c.c: 167: if (SSPSTATbits.S == 1) {
  5379  000182  A6C7               	btfss	4039,3,c	;volatile
  5380  000184  D1CB               	goto	i2l255
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;my_i2c.c: 168: handle_start(data_read);
  5384  000186  0100               	movlb	0	; () banked
  5385  000188  0100               	movlb	0	; () banked
  5386  00018A  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  5387  00018C  ECB3  F006         	call	_handle_start
  5388                           
  5389                           ;my_i2c.c: 170: if (ic_ptr->status == 0x8) {
  5390  000190  0100               	movlb	0	; () banked
  5391  000192  EE20 F00C          	lfsr	2,12
  5392  000196  0100               	movlb	0	; () banked
  5393  000198  51E1               	movf	_ic_ptr& (0+255),w,b
  5394  00019A  26D9               	addwf	fsr2l,f,c
  5395  00019C  0100               	movlb	0	; () banked
  5396  00019E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5397  0001A0  22DA               	addwfc	fsr2h,f,c
  5398  0001A2  0E08               	movlw	8
  5399  0001A4  62DF               	cpfseq	indf2,c
  5400  0001A6  D1BA               	goto	i2l255
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;my_i2c.c: 171: data_read = 0;
  5404  0001A8  0100               	movlb	0	; () banked
  5405  0001AA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5406  0001AC  0E00               	movlw	0
  5407  0001AE  0100               	movlb	0	; () banked
  5408  0001B0  0100               	movlb	0	; () banked
  5409  0001B2  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  5410  0001B4  0100               	movlb	0	; () banked
  5411  0001B6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5412                           
  5413                           ;my_i2c.c: 172: msg_to_send = 1;
  5414  0001B8  0100               	movlb	0	; () banked
  5415  0001BA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5416  0001BC  0E01               	movlw	1
  5417  0001BE  0100               	movlb	0	; () banked
  5418  0001C0  0100               	movlb	0	; () banked
  5419  0001C2  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5420  0001C4  D187               	goto	L9
  5421  0001C6                     i2l261:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;my_i2c.c: 178: {
  5425                           ;my_i2c.c: 180: if (SSPSTATbits.P == 1) {
  5426  0001C6  A8C7               	btfss	4039,4,c	;volatile
  5427  0001C8  D030               	goto	i2l2645
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;my_i2c.c: 183: ic_ptr->event_count++;
  5431  0001CA  0100               	movlb	0	; () banked
  5432  0001CC  EE20 F00B          	lfsr	2,11
  5433  0001D0  0100               	movlb	0	; () banked
  5434  0001D2  51E1               	movf	_ic_ptr& (0+255),w,b
  5435  0001D4  26D9               	addwf	fsr2l,f,c
  5436  0001D6  0100               	movlb	0	; () banked
  5437  0001D8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5438  0001DA  22DA               	addwfc	fsr2h,f,c
  5439  0001DC  2ADF               	incf	indf2,f,c
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;my_i2c.c: 184: if (data_read) {
  5443  0001DE  0100               	movlb	0	; () banked
  5444  0001E0  0100               	movlb	0	; () banked
  5445  0001E2  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  5446  0001E4  B4D8               	btfsc	status,2,c
  5447  0001E6  D179               	goto	L11
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;my_i2c.c: 185: if (SSPSTATbits.D_A == 0) {
  5451  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  5452  0001EA  D009               	goto	i2l2643
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;my_i2c.c: 186: msg_ready = 1;
  5456  0001EC  0100               	movlb	0	; () banked
  5457  0001EE  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5458  0001F0  0E01               	movlw	1
  5459  0001F2  0100               	movlb	0	; () banked
  5460  0001F4  0100               	movlb	0	; () banked
  5461  0001F6  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5462  0001F8  0100               	movlb	0	; () banked
  5463  0001FA  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5464                           
  5465                           ;my_i2c.c: 187: } else {
  5466  0001FC  D16E               	goto	L11
  5467  0001FE                     i2l2643:
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;my_i2c.c: 188: ic_ptr->error_count++;
  5471  0001FE  0100               	movlb	0	; () banked
  5472  000200  EE20 F00E          	lfsr	2,14
  5473  000204  0100               	movlb	0	; () banked
  5474  000206  51E1               	movf	_ic_ptr& (0+255),w,b
  5475  000208  26D9               	addwf	fsr2l,f,c
  5476  00020A  0100               	movlb	0	; () banked
  5477  00020C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5478  00020E  22DA               	addwfc	fsr2h,f,c
  5479  000210  2ADF               	incf	indf2,f,c
  5480                           
  5481                           ;my_i2c.c: 189: ic_ptr->error_code = 0x6;
  5482  000212  0100               	movlb	0	; () banked
  5483  000214  EE20 F00D          	lfsr	2,13
  5484  000218  0100               	movlb	0	; () banked
  5485  00021A  51E1               	movf	_ic_ptr& (0+255),w,b
  5486  00021C  26D9               	addwf	fsr2l,f,c
  5487  00021E  0100               	movlb	0	; () banked
  5488  000220  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5489  000222  22DA               	addwfc	fsr2h,f,c
  5490  000224  0E06               	movlw	6
  5491  000226  6EDF               	movwf	indf2,c
  5492                           
  5493                           ; BSR set to: 0
  5494  000228  D158               	goto	L11
  5495  00022A                     i2l2645:
  5496                           
  5497                           ; BSR set to: 0
  5498  00022A  0100               	movlb	0	; () banked
  5499  00022C  0100               	movlb	0	; () banked
  5500  00022E  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  5501  000230  B4D8               	btfsc	status,2,c
  5502  000232  D174               	goto	i2l255
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;my_i2c.c: 194: ic_ptr->event_count++;
  5506  000234  0100               	movlb	0	; () banked
  5507  000236  EE20 F00B          	lfsr	2,11
  5508  00023A  0100               	movlb	0	; () banked
  5509  00023C  51E1               	movf	_ic_ptr& (0+255),w,b
  5510  00023E  26D9               	addwf	fsr2l,f,c
  5511  000240  0100               	movlb	0	; () banked
  5512  000242  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5513  000244  22DA               	addwfc	fsr2h,f,c
  5514  000246  2ADF               	incf	indf2,f,c
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 0) {
  5518  000248  BAC7               	btfsc	4039,5,c	;volatile
  5519  00024A  D019               	goto	i2l2661
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;my_i2c.c: 196: if (SSPSTATbits.R_W == 0) {
  5523  00024C  B4C7               	btfsc	4039,2,c	;volatile
  5524  00024E  D00B               	goto	i2l2655
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;my_i2c.c: 197: ic_ptr->status = 0x7;
  5528  000250  0100               	movlb	0	; () banked
  5529  000252  EE20 F00C          	lfsr	2,12
  5530  000256  0100               	movlb	0	; () banked
  5531  000258  51E1               	movf	_ic_ptr& (0+255),w,b
  5532  00025A  26D9               	addwf	fsr2l,f,c
  5533  00025C  0100               	movlb	0	; () banked
  5534  00025E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5535  000260  22DA               	addwfc	fsr2h,f,c
  5536  000262  0E07               	movlw	7
  5537  000264  D076               	goto	L8
  5538  000266                     i2l2655:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;my_i2c.c: 199: ic_ptr->status = 0x8;
  5542  000266  0100               	movlb	0	; () banked
  5543  000268  EE20 F00C          	lfsr	2,12
  5544  00026C  0100               	movlb	0	; () banked
  5545  00026E  51E1               	movf	_ic_ptr& (0+255),w,b
  5546  000270  26D9               	addwf	fsr2l,f,c
  5547  000272  0100               	movlb	0	; () banked
  5548  000274  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5549  000276  22DA               	addwfc	fsr2h,f,c
  5550  000278  0E08               	movlw	8
  5551  00027A  6EDF               	movwf	indf2,c
  5552  00027C  D11D               	goto	L12
  5553  00027E                     i2l2661:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;my_i2c.c: 205: ic_ptr->error_count++;
  5557  00027E  0100               	movlb	0	; () banked
  5558  000280  EE20 F00E          	lfsr	2,14
  5559  000284  0100               	movlb	0	; () banked
  5560  000286  51E1               	movf	_ic_ptr& (0+255),w,b
  5561  000288  26D9               	addwf	fsr2l,f,c
  5562  00028A  0100               	movlb	0	; () banked
  5563  00028C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5564  00028E  22DA               	addwfc	fsr2h,f,c
  5565  000290  2ADF               	incf	indf2,f,c
  5566                           
  5567                           ;my_i2c.c: 206: ic_ptr->status = 0x5;
  5568  000292  0100               	movlb	0	; () banked
  5569  000294  EE20 F00C          	lfsr	2,12
  5570  000298  0100               	movlb	0	; () banked
  5571  00029A  51E1               	movf	_ic_ptr& (0+255),w,b
  5572  00029C  26D9               	addwf	fsr2l,f,c
  5573  00029E  0100               	movlb	0	; () banked
  5574  0002A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5575  0002A2  22DA               	addwfc	fsr2h,f,c
  5576  0002A4  0E05               	movlw	5
  5577  0002A6  6EDF               	movwf	indf2,c
  5578                           
  5579                           ;my_i2c.c: 207: ic_ptr->error_code = 0x6;
  5580  0002A8  0100               	movlb	0	; () banked
  5581  0002AA  EE20 F00D          	lfsr	2,13
  5582  0002AE  0100               	movlb	0	; () banked
  5583  0002B0  51E1               	movf	_ic_ptr& (0+255),w,b
  5584  0002B2  26D9               	addwf	fsr2l,f,c
  5585  0002B4  0100               	movlb	0	; () banked
  5586  0002B6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5587  0002B8  22DA               	addwfc	fsr2h,f,c
  5588  0002BA  0E06               	movlw	6
  5589  0002BC  D04A               	goto	L8
  5590  0002BE                     i2l2663:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;my_i2c.c: 213: {
  5594                           ;my_i2c.c: 214: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  5595  0002BE  0100               	movlb	0	; () banked
  5596  0002C0  EE20 F01A          	lfsr	2,26
  5597  0002C4  0100               	movlb	0	; () banked
  5598  0002C6  51E1               	movf	_ic_ptr& (0+255),w,b
  5599  0002C8  26D9               	addwf	fsr2l,f,c
  5600  0002CA  0100               	movlb	0	; () banked
  5601  0002CC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5602  0002CE  22DA               	addwfc	fsr2h,f,c
  5603  0002D0  50DF               	movf	indf2,w,c
  5604  0002D2  0100               	movlb	0	; () banked
  5605  0002D4  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5606  0002D6  0100               	movlb	0	; () banked
  5607  0002D8  EE20 F019          	lfsr	2,25
  5608  0002DC  0100               	movlb	0	; () banked
  5609  0002DE  51E1               	movf	_ic_ptr& (0+255),w,b
  5610  0002E0  26D9               	addwf	fsr2l,f,c
  5611  0002E2  0100               	movlb	0	; () banked
  5612  0002E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5613  0002E6  22DA               	addwfc	fsr2h,f,c
  5614  0002E8  50DF               	movf	indf2,w,c
  5615  0002EA  0100               	movlb	0	; () banked
  5616  0002EC  5DBD               	subwf	??_i2c_int_handler& (0+255),w,b
  5617  0002EE  B0D8               	btfsc	status,0,c
  5618  0002F0  D0F4               	goto	L11
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;my_i2c.c: 215: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  5622  0002F2  0100               	movlb	0	; () banked
  5623  0002F4  EE20 F01A          	lfsr	2,26
  5624  0002F8  0100               	movlb	0	; () banked
  5625  0002FA  51E1               	movf	_ic_ptr& (0+255),w,b
  5626  0002FC  26D9               	addwf	fsr2l,f,c
  5627  0002FE  0100               	movlb	0	; () banked
  5628  000300  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5629  000302  22DA               	addwfc	fsr2h,f,c
  5630  000304  50DF               	movf	indf2,w,c
  5631  000306  0100               	movlb	0	; () banked
  5632  000308  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5633  00030A  0100               	movlb	0	; () banked
  5634  00030C  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5635  00030E  0D01               	mullw	1
  5636  000310  0E0F               	movlw	15
  5637  000312  26F3               	addwf	prodl,f,c
  5638  000314  0E00               	movlw	0
  5639  000316  22F4               	addwfc	prodh,f,c
  5640  000318  50F3               	movf	prodl,w,c
  5641  00031A  0100               	movlb	0	; () banked
  5642  00031C  0100               	movlb	0	; () banked
  5643  00031E  25E1               	addwf	_ic_ptr& (0+255),w,b
  5644  000320  6ED9               	movwf	fsr2l,c
  5645  000322  50F4               	movf	prodh,w,c
  5646  000324  0100               	movlb	0	; () banked
  5647  000326  0100               	movlb	0	; () banked
  5648  000328  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5649  00032A  6EDA               	movwf	fsr2h,c
  5650  00032C  50DF               	movf	indf2,w,c
  5651  00032E  6EC9               	movwf	4041,c	;volatile
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;my_i2c.c: 216: ic_ptr->outbufind++;
  5655  000330  0100               	movlb	0	; () banked
  5656  000332  EE20 F01A          	lfsr	2,26
  5657  000336  0100               	movlb	0	; () banked
  5658  000338  51E1               	movf	_ic_ptr& (0+255),w,b
  5659  00033A  26D9               	addwf	fsr2l,f,c
  5660  00033C  0100               	movlb	0	; () banked
  5661  00033E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5662  000340  22DA               	addwfc	fsr2h,f,c
  5663  000342  2ADF               	incf	indf2,f,c
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;my_i2c.c: 217: data_written = 1;
  5667  000344  0100               	movlb	0	; () banked
  5668  000346  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5669  000348  0E01               	movlw	1
  5670  00034A  0100               	movlb	0	; () banked
  5671  00034C  0100               	movlb	0	; () banked
  5672  00034E  6FC2               	movwf	i2c_int_handler@data_written& (0+255),b
  5673  000350  D0C1               	goto	L9
  5674  000352                     L8:
  5675  000352  6EDF               	movwf	indf2,c
  5676  000354  D0E3               	goto	i2l255
  5677  000356                     i2l275:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;my_i2c.c: 225: {
  5681                           ;my_i2c.c: 227: if (SSPSTATbits.P == 1) {
  5682  000356  A8C7               	btfss	4039,4,c	;volatile
  5683  000358  D062               	goto	i2l2691
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;my_i2c.c: 229: ic_ptr->event_count++;
  5687  00035A  0100               	movlb	0	; () banked
  5688  00035C  EE20 F00B          	lfsr	2,11
  5689  000360  0100               	movlb	0	; () banked
  5690  000362  51E1               	movf	_ic_ptr& (0+255),w,b
  5691  000364  26D9               	addwf	fsr2l,f,c
  5692  000366  0100               	movlb	0	; () banked
  5693  000368  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5694  00036A  22DA               	addwfc	fsr2h,f,c
  5695  00036C  2ADF               	incf	indf2,f,c
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;my_i2c.c: 230: if (data_read) {
  5699  00036E  0100               	movlb	0	; () banked
  5700  000370  0100               	movlb	0	; () banked
  5701  000372  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  5702  000374  B4D8               	btfsc	status,2,c
  5703  000376  D04A               	goto	i2l2687
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;my_i2c.c: 231: if (SSPSTATbits.D_A == 1) {
  5707  000378  AAC7               	btfss	4039,5,c	;volatile
  5708  00037A  D027               	goto	i2l2685
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;my_i2c.c: 232: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5712  00037C  0100               	movlb	0	; () banked
  5713  00037E  EE20 F00A          	lfsr	2,10
  5714  000382  0100               	movlb	0	; () banked
  5715  000384  51E1               	movf	_ic_ptr& (0+255),w,b
  5716  000386  26D9               	addwf	fsr2l,f,c
  5717  000388  0100               	movlb	0	; () banked
  5718  00038A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5719  00038C  22DA               	addwfc	fsr2h,f,c
  5720  00038E  50DF               	movf	indf2,w,c
  5721  000390  0100               	movlb	0	; () banked
  5722  000392  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5723  000394  0100               	movlb	0	; () banked
  5724  000396  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5725  000398  0D01               	mullw	1
  5726  00039A  50F3               	movf	prodl,w,c
  5727  00039C  0100               	movlb	0	; () banked
  5728  00039E  0100               	movlb	0	; () banked
  5729  0003A0  25E1               	addwf	_ic_ptr& (0+255),w,b
  5730  0003A2  6ED9               	movwf	fsr2l,c
  5731  0003A4  50F4               	movf	prodh,w,c
  5732  0003A6  0100               	movlb	0	; () banked
  5733  0003A8  0100               	movlb	0	; () banked
  5734  0003AA  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5735  0003AC  6EDA               	movwf	fsr2h,c
  5736  0003AE  0100               	movlb	0	; () banked
  5737  0003B0  C0C4  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;my_i2c.c: 233: ic_ptr->buflen++;
  5741  0003B4  0100               	movlb	0	; () banked
  5742  0003B6  EE20 F00A          	lfsr	2,10
  5743  0003BA  0100               	movlb	0	; () banked
  5744  0003BC  51E1               	movf	_ic_ptr& (0+255),w,b
  5745  0003BE  26D9               	addwf	fsr2l,f,c
  5746  0003C0  0100               	movlb	0	; () banked
  5747  0003C2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5748  0003C4  22DA               	addwfc	fsr2h,f,c
  5749  0003C6  2ADF               	incf	indf2,f,c
  5750  0003C8  D021               	goto	i2l2687
  5751  0003CA                     i2l2685:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;my_i2c.c: 236: ic_ptr->error_count++;
  5755  0003CA  0100               	movlb	0	; () banked
  5756  0003CC  EE20 F00E          	lfsr	2,14
  5757  0003D0  0100               	movlb	0	; () banked
  5758  0003D2  51E1               	movf	_ic_ptr& (0+255),w,b
  5759  0003D4  26D9               	addwf	fsr2l,f,c
  5760  0003D6  0100               	movlb	0	; () banked
  5761  0003D8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5762  0003DA  22DA               	addwfc	fsr2h,f,c
  5763  0003DC  2ADF               	incf	indf2,f,c
  5764                           
  5765                           ;my_i2c.c: 237: ic_ptr->error_code = 0x6;
  5766  0003DE  0100               	movlb	0	; () banked
  5767  0003E0  EE20 F00D          	lfsr	2,13
  5768  0003E4  0100               	movlb	0	; () banked
  5769  0003E6  51E1               	movf	_ic_ptr& (0+255),w,b
  5770  0003E8  26D9               	addwf	fsr2l,f,c
  5771  0003EA  0100               	movlb	0	; () banked
  5772  0003EC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5773  0003EE  22DA               	addwfc	fsr2h,f,c
  5774  0003F0  0E06               	movlw	6
  5775  0003F2  6EDF               	movwf	indf2,c
  5776                           
  5777                           ;my_i2c.c: 238: ic_ptr->status = 0x5;
  5778  0003F4  0100               	movlb	0	; () banked
  5779  0003F6  EE20 F00C          	lfsr	2,12
  5780  0003FA  0100               	movlb	0	; () banked
  5781  0003FC  51E1               	movf	_ic_ptr& (0+255),w,b
  5782  0003FE  26D9               	addwf	fsr2l,f,c
  5783  000400  0100               	movlb	0	; () banked
  5784  000402  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5785  000404  22DA               	addwfc	fsr2h,f,c
  5786  000406  0E05               	movlw	5
  5787  000408  6EDF               	movwf	indf2,c
  5788  00040A  D067               	goto	L11
  5789  00040C                     i2l2687:
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;my_i2c.c: 241: msg_ready = 1;
  5793  00040C  0100               	movlb	0	; () banked
  5794  00040E  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5795  000410  0E01               	movlw	1
  5796  000412  0100               	movlb	0	; () banked
  5797  000414  0100               	movlb	0	; () banked
  5798  000416  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5799  000418  0100               	movlb	0	; () banked
  5800  00041A  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5801                           
  5802                           ; BSR set to: 0
  5803  00041C  D05E               	goto	L11
  5804  00041E                     i2l2691:
  5805                           
  5806                           ; BSR set to: 0
  5807  00041E  0100               	movlb	0	; () banked
  5808  000420  0100               	movlb	0	; () banked
  5809  000422  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  5810  000424  B4D8               	btfsc	status,2,c
  5811  000426  D07A               	goto	i2l255
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;my_i2c.c: 245: ic_ptr->event_count++;
  5815  000428  0100               	movlb	0	; () banked
  5816  00042A  EE20 F00B          	lfsr	2,11
  5817  00042E  0100               	movlb	0	; () banked
  5818  000430  51E1               	movf	_ic_ptr& (0+255),w,b
  5819  000432  26D9               	addwf	fsr2l,f,c
  5820  000434  0100               	movlb	0	; () banked
  5821  000436  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5822  000438  22DA               	addwfc	fsr2h,f,c
  5823  00043A  2ADF               	incf	indf2,f,c
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;my_i2c.c: 246: if (SSPSTATbits.D_A == 1) {
  5827  00043C  AAC7               	btfss	4039,5,c	;volatile
  5828  00043E  D027               	goto	i2l283
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;my_i2c.c: 247: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5832  000440  0100               	movlb	0	; () banked
  5833  000442  EE20 F00A          	lfsr	2,10
  5834  000446  0100               	movlb	0	; () banked
  5835  000448  51E1               	movf	_ic_ptr& (0+255),w,b
  5836  00044A  26D9               	addwf	fsr2l,f,c
  5837  00044C  0100               	movlb	0	; () banked
  5838  00044E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5839  000450  22DA               	addwfc	fsr2h,f,c
  5840  000452  50DF               	movf	indf2,w,c
  5841  000454  0100               	movlb	0	; () banked
  5842  000456  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5843  000458  0100               	movlb	0	; () banked
  5844  00045A  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5845  00045C  0D01               	mullw	1
  5846  00045E  50F3               	movf	prodl,w,c
  5847  000460  0100               	movlb	0	; () banked
  5848  000462  0100               	movlb	0	; () banked
  5849  000464  25E1               	addwf	_ic_ptr& (0+255),w,b
  5850  000466  6ED9               	movwf	fsr2l,c
  5851  000468  50F4               	movf	prodh,w,c
  5852  00046A  0100               	movlb	0	; () banked
  5853  00046C  0100               	movlb	0	; () banked
  5854  00046E  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5855  000470  6EDA               	movwf	fsr2h,c
  5856  000472  0100               	movlb	0	; () banked
  5857  000474  C0C4  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;my_i2c.c: 248: ic_ptr->buflen++;
  5861  000478  0100               	movlb	0	; () banked
  5862  00047A  EE20 F00A          	lfsr	2,10
  5863  00047E  0100               	movlb	0	; () banked
  5864  000480  51E1               	movf	_ic_ptr& (0+255),w,b
  5865  000482  26D9               	addwf	fsr2l,f,c
  5866  000484  0100               	movlb	0	; () banked
  5867  000486  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5868  000488  22DA               	addwfc	fsr2h,f,c
  5869  00048A  2ADF               	incf	indf2,f,c
  5870                           
  5871                           ;my_i2c.c: 249: } else {
  5872  00048C  D047               	goto	i2l255
  5873  00048E                     i2l283:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;my_i2c.c: 250: if (SSPSTATbits.R_W == 1) {
  5877  00048E  A4C7               	btfss	4039,2,c	;volatile
  5878  000490  D6B6               	goto	i2l2643
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;my_i2c.c: 251: ic_ptr->status = 0x8;
  5882  000492  0100               	movlb	0	; () banked
  5883  000494  EE20 F00C          	lfsr	2,12
  5884  000498  0100               	movlb	0	; () banked
  5885  00049A  51E1               	movf	_ic_ptr& (0+255),w,b
  5886  00049C  26D9               	addwf	fsr2l,f,c
  5887  00049E  0100               	movlb	0	; () banked
  5888  0004A0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5889  0004A2  22DA               	addwfc	fsr2h,f,c
  5890  0004A4  0E08               	movlw	8
  5891  0004A6  6EDF               	movwf	indf2,c
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;my_i2c.c: 252: msg_ready = 1;
  5895  0004A8  0100               	movlb	0	; () banked
  5896  0004AA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5897  0004AC  0E01               	movlw	1
  5898  0004AE  0100               	movlb	0	; () banked
  5899  0004B0  0100               	movlb	0	; () banked
  5900  0004B2  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5901  0004B4  0100               	movlb	0	; () banked
  5902  0004B6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5903  0004B8                     L12:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;my_i2c.c: 253: msg_to_send = 1;
  5907  0004B8  0100               	movlb	0	; () banked
  5908  0004BA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5909  0004BC  0E01               	movlw	1
  5910  0004BE  0100               	movlb	0	; () banked
  5911  0004C0  0100               	movlb	0	; () banked
  5912  0004C2  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5913  0004C4  0100               	movlb	0	; () banked
  5914  0004C6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;my_i2c.c: 255: data_read = 0;
  5918  0004C8  0100               	movlb	0	; () banked
  5919  0004CA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  5920  0004CC  0E00               	movlw	0
  5921  0004CE  0100               	movlb	0	; () banked
  5922  0004D0  0100               	movlb	0	; () banked
  5923  0004D2  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  5924  0004D4                     L9:
  5925  0004D4  0100               	movlb	0	; () banked
  5926  0004D6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  5927                           
  5928                           ;my_i2c.c: 256: } else {
  5929  0004D8  D021               	goto	i2l255
  5930  0004DA                     L11:
  5931                           
  5932                           ;my_i2c.c: 259: ic_ptr->status = 0x5;
  5933  0004DA  0100               	movlb	0	; () banked
  5934  0004DC  EE20 F00C          	lfsr	2,12
  5935  0004E0  0100               	movlb	0	; () banked
  5936  0004E2  51E1               	movf	_ic_ptr& (0+255),w,b
  5937  0004E4  26D9               	addwf	fsr2l,f,c
  5938  0004E6  0100               	movlb	0	; () banked
  5939  0004E8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5940  0004EA  22DA               	addwfc	fsr2h,f,c
  5941  0004EC  0E05               	movlw	5
  5942  0004EE  D731               	goto	L8
  5943  0004F0                     i2l2713:
  5944                           
  5945                           ; BSR set to: 0
  5946  0004F0  0100               	movlb	0	; () banked
  5947  0004F2  EE20 F00C          	lfsr	2,12
  5948  0004F6  0100               	movlb	0	; () banked
  5949  0004F8  51E1               	movf	_ic_ptr& (0+255),w,b
  5950  0004FA  26D9               	addwf	fsr2l,f,c
  5951  0004FC  0100               	movlb	0	; () banked
  5952  0004FE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  5953  000500  22DA               	addwfc	fsr2h,f,c
  5954  000502  50DF               	movf	indf2,w,c
  5955                           
  5956                           ; Switch size 1, requested type "space"
  5957                           ; Number of cases is 4, Range of values is 5 to 8
  5958                           ; switch strategies available:
  5959                           ; Name         Instructions Cycles
  5960                           ; simple_byte           13     7 (average)
  5961                           ;	Chosen strategy is simple_byte
  5962  000504  0A05               	xorlw	5	; case 5
  5963  000506  B4D8               	btfsc	status,2,c
  5964  000508  D63C               	goto	i2l257
  5965  00050A  0A03               	xorlw	3	; case 6
  5966  00050C  B4D8               	btfsc	status,2,c
  5967  00050E  D65B               	goto	i2l261
  5968  000510  0A01               	xorlw	1	; case 7
  5969  000512  B4D8               	btfsc	status,2,c
  5970  000514  D720               	goto	i2l275
  5971  000516  0A0F               	xorlw	15	; case 8
  5972  000518  B4D8               	btfsc	status,2,c
  5973  00051A  D6D1               	goto	i2l2663
  5974  00051C                     i2l255:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;my_i2c.c: 266: }
  5978                           ;my_i2c.c: 269: if (data_read || data_written) {
  5979  00051C  0100               	movlb	0	; () banked
  5980  00051E  0100               	movlb	0	; () banked
  5981  000520  67C7               	tstfsz	i2c_int_handler@data_read& (0+255),b
  5982  000522  D005               	goto	i2l289
  5983                           
  5984                           ; BSR set to: 0
  5985  000524  0100               	movlb	0	; () banked
  5986  000526  0100               	movlb	0	; () banked
  5987  000528  51C2               	movf	i2c_int_handler@data_written& (0+255),w,b
  5988  00052A  B4D8               	btfsc	status,2,c
  5989  00052C  D002               	goto	i2l2719
  5990  00052E                     i2l289:
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;my_i2c.c: 271: if (SSPCON1bits.CKP == 0) {
  5994  00052E  A8C6               	btfss	4038,4,c	;volatile
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;my_i2c.c: 272: SSPCON1bits.CKP = 1;
  5998  000530  88C6               	bsf	4038,4,c	;volatile
  5999  000532                     i2l2719:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;my_i2c.c: 273: }
  6003                           ;my_i2c.c: 274: }
  6004                           ;my_i2c.c: 277: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6005  000532  0100               	movlb	0	; () banked
  6006  000534  EE20 F00A          	lfsr	2,10
  6007  000538  0100               	movlb	0	; () banked
  6008  00053A  51E1               	movf	_ic_ptr& (0+255),w,b
  6009  00053C  26D9               	addwf	fsr2l,f,c
  6010  00053E  0100               	movlb	0	; () banked
  6011  000540  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6012  000542  22DA               	addwfc	fsr2h,f,c
  6013  000544  0E08               	movlw	8
  6014  000546  64DF               	cpfsgt	indf2,c
  6015  000548  D024               	goto	i2l2725
  6016                           
  6017                           ; BSR set to: 0
  6018  00054A  0100               	movlb	0	; () banked
  6019  00054C  0100               	movlb	0	; () banked
  6020  00054E  67C6               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6021  000550  D020               	goto	i2l2725
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;my_i2c.c: 278: ic_ptr->status = 0x5;
  6025  000552  0100               	movlb	0	; () banked
  6026  000554  EE20 F00C          	lfsr	2,12
  6027  000558  0100               	movlb	0	; () banked
  6028  00055A  51E1               	movf	_ic_ptr& (0+255),w,b
  6029  00055C  26D9               	addwf	fsr2l,f,c
  6030  00055E  0100               	movlb	0	; () banked
  6031  000560  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6032  000562  22DA               	addwfc	fsr2h,f,c
  6033  000564  0E05               	movlw	5
  6034  000566  6EDF               	movwf	indf2,c
  6035                           
  6036                           ;my_i2c.c: 279: ic_ptr->error_count++;
  6037  000568  0100               	movlb	0	; () banked
  6038  00056A  EE20 F00E          	lfsr	2,14
  6039  00056E  0100               	movlb	0	; () banked
  6040  000570  51E1               	movf	_ic_ptr& (0+255),w,b
  6041  000572  26D9               	addwf	fsr2l,f,c
  6042  000574  0100               	movlb	0	; () banked
  6043  000576  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6044  000578  22DA               	addwfc	fsr2h,f,c
  6045  00057A  2ADF               	incf	indf2,f,c
  6046                           
  6047                           ;my_i2c.c: 280: ic_ptr->error_code = 0x7;
  6048  00057C  0100               	movlb	0	; () banked
  6049  00057E  EE20 F00D          	lfsr	2,13
  6050  000582  0100               	movlb	0	; () banked
  6051  000584  51E1               	movf	_ic_ptr& (0+255),w,b
  6052  000586  26D9               	addwf	fsr2l,f,c
  6053  000588  0100               	movlb	0	; () banked
  6054  00058A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6055  00058C  22DA               	addwfc	fsr2h,f,c
  6056  00058E  0E07               	movlw	7
  6057  000590  6EDF               	movwf	indf2,c
  6058  000592                     i2l2725:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;my_i2c.c: 281: }
  6062                           ;my_i2c.c: 283: if (msg_ready) {
  6063  000592  0100               	movlb	0	; () banked
  6064  000594  0100               	movlb	0	; () banked
  6065  000596  51C6               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6066  000598  B4D8               	btfsc	status,2,c
  6067  00059A  D048               	goto	i2l2733
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;my_i2c.c: 284: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6071  00059C  0100               	movlb	0	; () banked
  6072  00059E  EE20 F00B          	lfsr	2,11
  6073  0005A2  0100               	movlb	0	; () banked
  6074  0005A4  51E1               	movf	_ic_ptr& (0+255),w,b
  6075  0005A6  26D9               	addwf	fsr2l,f,c
  6076  0005A8  0100               	movlb	0	; () banked
  6077  0005AA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6078  0005AC  22DA               	addwfc	fsr2h,f,c
  6079  0005AE  0100               	movlb	0	; () banked
  6080  0005B0  EE10 F00A          	lfsr	1,10
  6081  0005B4  0100               	movlb	0	; () banked
  6082  0005B6  51E1               	movf	_ic_ptr& (0+255),w,b
  6083  0005B8  26E1               	addwf	fsr1l,f,c
  6084  0005BA  0100               	movlb	0	; () banked
  6085  0005BC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6086  0005BE  22E2               	addwfc	fsr1h,f,c
  6087  0005C0  50E7               	movf	indf1,w,c
  6088  0005C2  0100               	movlb	0	; () banked
  6089  0005C4  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6090  0005C6  0100               	movlb	0	; () banked
  6091  0005C8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6092  0005CA  0D01               	mullw	1
  6093  0005CC  50F3               	movf	prodl,w,c
  6094  0005CE  0100               	movlb	0	; () banked
  6095  0005D0  0100               	movlb	0	; () banked
  6096  0005D2  25E1               	addwf	_ic_ptr& (0+255),w,b
  6097  0005D4  6EE1               	movwf	fsr1l,c
  6098  0005D6  50F4               	movf	prodh,w,c
  6099  0005D8  0100               	movlb	0	; () banked
  6100  0005DA  0100               	movlb	0	; () banked
  6101  0005DC  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6102  0005DE  6EE2               	movwf	fsr1h,c
  6103  0005E0  CFDF FFE7          	movff	indf2,indf1
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;my_i2c.c: 285: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6107  0005E4  0100               	movlb	0	; () banked
  6108  0005E6  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6109  0005E8  0E28               	movlw	40
  6110  0005EA  0100               	movlb	0	; () banked
  6111  0005EC  0100               	movlb	0	; () banked
  6112  0005EE  6FBA               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6113  0005F0  0100               	movlb	0	; () banked
  6114  0005F2  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6115  0005F4  0100               	movlb	0	; () banked
  6116  0005F6  0100               	movlb	0	; () banked
  6117  0005F8  C0E2  F0BC         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  6118  0005FC  0100               	movlb	0	; () banked
  6119  0005FE  0100               	movlb	0	; () banked
  6120  000600  C0E1  F0BB         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  6121  000604  0100               	movlb	0	; () banked
  6122  000606  EE20 F00A          	lfsr	2,10
  6123  00060A  0100               	movlb	0	; () banked
  6124  00060C  51E1               	movf	_ic_ptr& (0+255),w,b
  6125  00060E  26D9               	addwf	fsr2l,f,c
  6126  000610  0100               	movlb	0	; () banked
  6127  000612  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6128  000614  22DA               	addwfc	fsr2h,f,c
  6129  000616  50DF               	movf	indf2,w,c
  6130  000618  0100               	movlb	0	; () banked
  6131  00061A  6FBE               	movwf	(??_i2c_int_handler+1)& (0+255),b
  6132  00061C  0100               	movlb	0	; () banked
  6133  00061E  29BE               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  6134  000620  EC63  F00B         	call	i2_ToMainHigh_sendmsg
  6135                           
  6136                           ;my_i2c.c: 286: ic_ptr->buflen = 0;
  6137  000624  0100               	movlb	0	; () banked
  6138  000626  EE20 F00A          	lfsr	2,10
  6139  00062A  D04B               	goto	L10
  6140  00062C                     i2l2733:
  6141                           
  6142                           ; BSR set to: 0
  6143  00062C  0100               	movlb	0	; () banked
  6144  00062E  EE20 F00E          	lfsr	2,14
  6145  000632  0100               	movlb	0	; () banked
  6146  000634  51E1               	movf	_ic_ptr& (0+255),w,b
  6147  000636  26D9               	addwf	fsr2l,f,c
  6148  000638  0100               	movlb	0	; () banked
  6149  00063A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6150  00063C  22DA               	addwfc	fsr2h,f,c
  6151  00063E  50DF               	movf	indf2,w,c
  6152  000640  B4D8               	btfsc	status,2,c
  6153  000642  D047               	goto	i2l2741
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;my_i2c.c: 288: error_buf[0] = ic_ptr->error_count;
  6157  000644  0100               	movlb	0	; () banked
  6158  000646  EE20 F00E          	lfsr	2,14
  6159  00064A  0100               	movlb	0	; () banked
  6160  00064C  51E1               	movf	_ic_ptr& (0+255),w,b
  6161  00064E  26D9               	addwf	fsr2l,f,c
  6162  000650  0100               	movlb	0	; () banked
  6163  000652  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6164  000654  22DA               	addwfc	fsr2h,f,c
  6165  000656  50DF               	movf	indf2,w,c
  6166  000658  0100               	movlb	0	; () banked
  6167  00065A  0100               	movlb	0	; () banked
  6168  00065C  6FBF               	movwf	i2c_int_handler@error_buf& (0+255),b
  6169                           
  6170                           ;my_i2c.c: 289: error_buf[1] = ic_ptr->error_code;
  6171  00065E  0100               	movlb	0	; () banked
  6172  000660  EE20 F00D          	lfsr	2,13
  6173  000664  0100               	movlb	0	; () banked
  6174  000666  51E1               	movf	_ic_ptr& (0+255),w,b
  6175  000668  26D9               	addwf	fsr2l,f,c
  6176  00066A  0100               	movlb	0	; () banked
  6177  00066C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6178  00066E  22DA               	addwfc	fsr2h,f,c
  6179  000670  50DF               	movf	indf2,w,c
  6180  000672  0100               	movlb	0	; () banked
  6181  000674  0100               	movlb	0	; () banked
  6182  000676  6FC0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6183                           
  6184                           ;my_i2c.c: 290: error_buf[2] = ic_ptr->event_count;
  6185  000678  0100               	movlb	0	; () banked
  6186  00067A  EE20 F00B          	lfsr	2,11
  6187  00067E  0100               	movlb	0	; () banked
  6188  000680  51E1               	movf	_ic_ptr& (0+255),w,b
  6189  000682  26D9               	addwf	fsr2l,f,c
  6190  000684  0100               	movlb	0	; () banked
  6191  000686  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6192  000688  22DA               	addwfc	fsr2h,f,c
  6193  00068A  50DF               	movf	indf2,w,c
  6194  00068C  0100               	movlb	0	; () banked
  6195  00068E  0100               	movlb	0	; () banked
  6196  000690  6FC1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;my_i2c.c: 291: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6200  000692  0100               	movlb	0	; () banked
  6201  000694  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6202  000696  0E29               	movlw	41
  6203  000698  0100               	movlb	0	; () banked
  6204  00069A  0100               	movlb	0	; () banked
  6205  00069C  6FBA               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6206  00069E  0100               	movlb	0	; () banked
  6207  0006A0  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6208  0006A2  0100               	movlb	0	; () banked
  6209  0006A4  0E00               	movlw	high i2c_int_handler@error_buf
  6210  0006A6  0100               	movlb	0	; () banked
  6211  0006A8  0100               	movlb	0	; () banked
  6212  0006AA  6FBC               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  6213  0006AC  0100               	movlb	0	; () banked
  6214  0006AE  0EBF               	movlw	low i2c_int_handler@error_buf
  6215  0006B0  0100               	movlb	0	; () banked
  6216  0006B2  0100               	movlb	0	; () banked
  6217  0006B4  6FBB               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  6218  0006B6  0E03               	movlw	3
  6219  0006B8  EC63  F00B         	call	i2_ToMainHigh_sendmsg
  6220                           
  6221                           ;my_i2c.c: 292: ic_ptr->error_count = 0;
  6222  0006BC  0100               	movlb	0	; () banked
  6223  0006BE  EE20 F00E          	lfsr	2,14
  6224  0006C2                     L10:
  6225  0006C2  0100               	movlb	0	; () banked
  6226  0006C4  51E1               	movf	_ic_ptr& (0+255),w,b
  6227  0006C6  26D9               	addwf	fsr2l,f,c
  6228  0006C8  0100               	movlb	0	; () banked
  6229  0006CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6230  0006CC  22DA               	addwfc	fsr2h,f,c
  6231  0006CE  0E00               	movlw	0
  6232  0006D0  6EDF               	movwf	indf2,c
  6233  0006D2                     i2l2741:
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;my_i2c.c: 293: }
  6237                           ;my_i2c.c: 294: if (msg_to_send) {
  6238  0006D2  0100               	movlb	0	; () banked
  6239  0006D4  0100               	movlb	0	; () banked
  6240  0006D6  51C5               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6241  0006D8  B4D8               	btfsc	status,2,c
  6242  0006DA  0012               	return	
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;my_i2c.c: 298: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  6246  0006DC  0100               	movlb	0	; () banked
  6247  0006DE  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6248  0006E0  0E2A               	movlw	42
  6249  0006E2  0100               	movlb	0	; () banked
  6250  0006E4  0100               	movlb	0	; () banked
  6251  0006E6  6FBA               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6252  0006E8  0100               	movlb	0	; () banked
  6253  0006EA  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6254  0006EC  0100               	movlb	0	; () banked
  6255  0006EE  0100               	movlb	0	; () banked
  6256  0006F0  C0E2  F0BC         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  6257  0006F4  0100               	movlb	0	; () banked
  6258  0006F6  0100               	movlb	0	; () banked
  6259  0006F8  C0E1  F0BB         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  6260  0006FC  0E00               	movlw	0
  6261  0006FE  EC63  F00B         	call	i2_ToMainHigh_sendmsg
  6262                           
  6263                           ;my_i2c.c: 299: msg_to_send = 0;
  6264  000702  0100               	movlb	0	; () banked
  6265  000704  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6266  000706  0E00               	movlw	0
  6267  000708  0100               	movlb	0	; () banked
  6268  00070A  0100               	movlb	0	; () banked
  6269  00070C  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6270  00070E  0100               	movlb	0	; () banked
  6271  000710  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6272  000712  0012               	return	
  6273  000714                     __end_of_i2c_int_handler:
  6274                           	opt stack 0
  6275                           pclatu	equ	0xFFB
  6276                           pclath	equ	0xFFA
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           intcon	equ	0xFF2
  6284                           postinc0	equ	0xFEE
  6285                           fsr0h	equ	0xFEA
  6286                           fsr0l	equ	0xFE9
  6287                           wreg	equ	0xFE8
  6288                           indf1	equ	0xFE7
  6289                           fsr1h	equ	0xFE2
  6290                           fsr1l	equ	0xFE1
  6291                           bsr	equ	0xFE0
  6292                           indf2	equ	0xFDF
  6293                           postinc2	equ	0xFDE
  6294                           postdec2	equ	0xFDD
  6295                           fsr2h	equ	0xFDA
  6296                           fsr2l	equ	0xFD9
  6297                           status	equ	0xFD8
  6298                           
  6299 ;; *************** function i2_ToMainHigh_sendmsg *****************
  6300 ;; Defined at:
  6301 ;;		line 126 in file "../src/messages.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  length          1    wreg     unsigned char 
  6304 ;;  msgtype         1    0[BANK0 ] unsigned char 
  6305 ;;  data            2    1[BANK0 ] PTR void 
  6306 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  6307 ;;		 -> main@ic(40), 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  length          1   68[COMRAM] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      char 
  6312 ;; Registers used:
  6313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6319 ;;      Params:         0       3       0       0       0
  6320 ;;      Locals:         1       0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0
  6322 ;;      Totals:         1       3       0       0       0
  6323 ;;Total ram usage:        4 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    2
  6326 ;; This function calls:
  6327 ;;		i2_send_msg
  6328 ;; This function is called by:
  6329 ;;		_i2c_int_handler
  6330 ;;		_timer0_int_handler
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text36
  6335  0016C6                     __ptext36:
  6336                           	opt stack 0
  6337  0016C6                     i2_ToMainHigh_sendmsg:
  6338                           	opt stack 17
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;incstack = 0
  6342                           ;i2ToMainHigh_sendmsg@length stored from wreg
  6343  0016C6  CFE8 F045          	movff	wreg,i2ToMainHigh_sendmsg@length
  6344                           
  6345                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6346                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  6347  0016CA  0100               	movlb	0	; () banked
  6348  0016CC  0E00               	movlw	high _ToMainHigh_MQ
  6349  0016CE  6E3A               	movwf	i2send_msg@qptr+1,c
  6350  0016D0  0100               	movlb	0	; () banked
  6351  0016D2  0E84               	movlw	low _ToMainHigh_MQ
  6352  0016D4  6E39               	movwf	i2send_msg@qptr,c
  6353  0016D6  C045  F03B         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  6354  0016DA  C0BA  F03C         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6355  0016DE  0100               	movlb	0	; () banked
  6356  0016E0  C0BC  F03E         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6357  0016E4  0100               	movlb	0	; () banked
  6358  0016E6  C0BB  F03D         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  6359  0016EA  ECCA  F007         	call	i2_send_msg	;wreg free
  6360  0016EE  0012               	return	
  6361  0016F0                     __end_ofi2_ToMainHigh_sendmsg:
  6362                           	opt stack 0
  6363                           pclatu	equ	0xFFB
  6364                           pclath	equ	0xFFA
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           postinc0	equ	0xFEE
  6373                           fsr0h	equ	0xFEA
  6374                           fsr0l	equ	0xFE9
  6375                           wreg	equ	0xFE8
  6376                           indf1	equ	0xFE7
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           bsr	equ	0xFE0
  6380                           indf2	equ	0xFDF
  6381                           postinc2	equ	0xFDE
  6382                           postdec2	equ	0xFDD
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function i2_send_msg *****************
  6388 ;; Defined at:
  6389 ;;		line 24 in file "../src/messages.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  6392 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6393 ;;  length          1   58[COMRAM] unsigned char 
  6394 ;;  msgtype         1   59[COMRAM] unsigned char 
  6395 ;;  data            2   60[COMRAM] PTR void 
  6396 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  6397 ;;		 -> main@ic(40), main@uc(5), 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  send_msg        2   66[COMRAM] PTR struct __msg
  6400 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6401 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6402 ;;  send_msg        2   63[COMRAM] unsigned int 
  6403 ;;  send_msg        1   65[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      char 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6413 ;;      Params:         6       0       0       0       0
  6414 ;;      Locals:         5       0       0       0       0
  6415 ;;      Temps:          1       0       0       0       0
  6416 ;;      Totals:        12       0       0       0       0
  6417 ;;Total ram usage:       12 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    1
  6420 ;; This function calls:
  6421 ;;		i2_memcpy
  6422 ;; This function is called by:
  6423 ;;		i2_ToMainHigh_sendmsg
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text37
  6428  000F94                     __ptext37:
  6429                           	opt stack 0
  6430  000F94                     i2_send_msg:
  6431                           	opt stack 17
  6432                           
  6433                           ;messages.c: 25: unsigned char slot;
  6434                           ;messages.c: 27: msg *qmsg;
  6435                           ;messages.c: 28: size_t tlength = length;
  6436                           
  6437                           ;incstack = 0
  6438  000F94  C03B  F040         	movff	i2send_msg@length,i2send_msg@tlength
  6439  000F98  6A41               	clrf	i2send_msg@tlength+1,c
  6440                           
  6441                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6442  000F9A  EE20 F034          	lfsr	2,52
  6443  000F9E  5039               	movf	i2send_msg@qptr,w,c
  6444  000FA0  26D9               	addwf	fsr2l,f,c
  6445  000FA2  503A               	movf	i2send_msg@qptr+1,w,c
  6446  000FA4  22DA               	addwfc	fsr2h,f,c
  6447  000FA6  50DF               	movf	indf2,w,c
  6448  000FA8  6E42               	movwf	i2send_msg@slot,c
  6449                           
  6450                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6451  000FAA  5042               	movf	i2send_msg@slot,w,c
  6452  000FAC  0D0D               	mullw	13
  6453  000FAE  50F3               	movf	prodl,w,c
  6454  000FB0  2439               	addwf	i2send_msg@qptr,w,c
  6455  000FB2  6E43               	movwf	i2send_msg@qmsg,c
  6456  000FB4  50F4               	movf	prodh,w,c
  6457  000FB6  203A               	addwfc	i2send_msg@qptr+1,w,c
  6458  000FB8  6E44               	movwf	i2send_msg@qmsg+1,c
  6459                           
  6460                           ;messages.c: 41: if (qmsg->full != 0) {
  6461  000FBA  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6462  000FBE  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6463  000FC2  50DF               	movf	indf2,w,c
  6464  000FC4  B4D8               	btfsc	status,2,c
  6465  000FC6  D002               	goto	i2l2929
  6466                           
  6467                           ;messages.c: 42: return (-1);
  6468  000FC8  0EFF               	movlw	255
  6469  000FCA  0012               	return	
  6470  000FCC                     i2l2929:
  6471                           
  6472                           ;messages.c: 43: }
  6473                           ;messages.c: 46: qmsg->length = length;
  6474  000FCC  EE20 F001          	lfsr	2,1
  6475  000FD0  5043               	movf	i2send_msg@qmsg,w,c
  6476  000FD2  26D9               	addwf	fsr2l,f,c
  6477  000FD4  5044               	movf	i2send_msg@qmsg+1,w,c
  6478  000FD6  22DA               	addwfc	fsr2h,f,c
  6479  000FD8  C03B  FFDF         	movff	i2send_msg@length,indf2
  6480                           
  6481                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6482  000FDC  EE20 F002          	lfsr	2,2
  6483  000FE0  5043               	movf	i2send_msg@qmsg,w,c
  6484  000FE2  26D9               	addwf	fsr2l,f,c
  6485  000FE4  5044               	movf	i2send_msg@qmsg+1,w,c
  6486  000FE6  22DA               	addwfc	fsr2h,f,c
  6487  000FE8  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  6488                           
  6489                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6490  000FEC  0E03               	movlw	3
  6491  000FEE  2443               	addwf	i2send_msg@qmsg,w,c
  6492  000FF0  6E2F               	movwf	i2memcpy@d1,c
  6493  000FF2  0E00               	movlw	0
  6494  000FF4  2044               	addwfc	i2send_msg@qmsg+1,w,c
  6495  000FF6  6E30               	movwf	i2memcpy@d1+1,c
  6496  000FF8  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  6497  000FFC  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  6498  001000  C040  F033         	movff	i2send_msg@tlength,i2memcpy@n
  6499  001004  C041  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  6500  001008  ECAB  F00A         	call	i2_memcpy	;wreg free
  6501                           
  6502                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6503  00100C  EE20 F034          	lfsr	2,52
  6504  001010  5039               	movf	i2send_msg@qptr,w,c
  6505  001012  26D9               	addwf	fsr2l,f,c
  6506  001014  503A               	movf	i2send_msg@qptr+1,w,c
  6507  001016  22DA               	addwfc	fsr2h,f,c
  6508  001018  EE10 F034          	lfsr	1,52
  6509  00101C  5039               	movf	i2send_msg@qptr,w,c
  6510  00101E  26E1               	addwf	fsr1l,f,c
  6511  001020  503A               	movf	i2send_msg@qptr+1,w,c
  6512  001022  22E2               	addwfc	fsr1h,f,c
  6513  001024  50E7               	movf	indf1,w,c
  6514  001026  6E3F               	movwf	??i2_send_msg& (0+255),c
  6515  001028  283F               	incf	??i2_send_msg,w,c
  6516  00102A  0B03               	andlw	3
  6517  00102C  6EDF               	movwf	indf2,c
  6518                           
  6519                           ;messages.c: 59: qmsg->full = 1;
  6520  00102E  C043  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6521  001032  C044  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6522  001036  0E01               	movlw	1
  6523  001038  6EDF               	movwf	indf2,c
  6524                           
  6525                           ;messages.c: 60: return (1);
  6526  00103A  0E01               	movlw	1
  6527  00103C  0012               	return	
  6528  00103E                     __end_ofi2_send_msg:
  6529                           	opt stack 0
  6530                           pclatu	equ	0xFFB
  6531                           pclath	equ	0xFFA
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           postinc0	equ	0xFEE
  6540                           fsr0h	equ	0xFEA
  6541                           fsr0l	equ	0xFE9
  6542                           wreg	equ	0xFE8
  6543                           indf1	equ	0xFE7
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           bsr	equ	0xFE0
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function i2_memcpy *****************
  6555 ;; Defined at:
  6556 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  d1              2   46[COMRAM] PTR void 
  6559 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6560 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6561 ;;		 -> main@msgbuffer(11), 
  6562 ;;  s1              2   48[COMRAM] PTR const void 
  6563 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6564 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6565 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  6566 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6567 ;;		 -> main@ic(40), main@uc(5), 
  6568 ;;  n               2   50[COMRAM] unsigned int 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  6571 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6572 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6573 ;;		 -> timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  6574 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6575 ;;		 -> main@ic(40), main@uc(5), 
  6576 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  6577 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6578 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6579 ;;		 -> main@msgbuffer(11), 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2   46[COMRAM] PTR void 
  6582 ;; Registers used:
  6583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6589 ;;      Params:         6       0       0       0       0
  6590 ;;      Locals:         4       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0
  6592 ;;      Totals:        10       0       0       0       0
  6593 ;;Total ram usage:       10 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		i2_send_msg
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text38
  6603  001556                     __ptext38:
  6604                           	opt stack 0
  6605  001556                     i2_memcpy:
  6606                           	opt stack 17
  6607                           
  6608                           ;incstack = 0
  6609  001556  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  6610  00155A  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  6611  00155E  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  6612  001562  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  6613  001566  D00E               	goto	i2l2963
  6614  001568                     i2l2957:
  6615  001568  C037  FFD9         	movff	i2memcpy@s,fsr2l
  6616  00156C  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  6617  001570  C035  FFE1         	movff	i2memcpy@d,fsr1l
  6618  001574  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  6619  001578  CFDF FFE7          	movff	indf2,indf1
  6620  00157C  4A37               	infsnz	i2memcpy@s,f,c
  6621  00157E  2A38               	incf	i2memcpy@s+1,f,c
  6622  001580  4A35               	infsnz	i2memcpy@d,f,c
  6623  001582  2A36               	incf	i2memcpy@d+1,f,c
  6624  001584                     i2l2963:
  6625  001584  0633               	decf	i2memcpy@n,f,c
  6626  001586  A0D8               	btfss	status,0,c
  6627  001588  0634               	decf	i2memcpy@n+1,f,c
  6628  00158A  2833               	incf	i2memcpy@n& (0+255),w,c
  6629  00158C  B4D8               	btfsc	status,2,c
  6630  00158E  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  6631  001590  B4D8               	btfsc	status,2,c
  6632                           
  6633                           ;	Return value of i2_memcpy is never used
  6634  001592  0012               	return	
  6635  001594  D7E9               	goto	i2l2957
  6636  001596                     __end_ofi2_memcpy:
  6637                           	opt stack 0
  6638                           pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           postinc0	equ	0xFEE
  6648                           fsr0h	equ	0xFEA
  6649                           fsr0l	equ	0xFE9
  6650                           wreg	equ	0xFE8
  6651                           indf1	equ	0xFE7
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           bsr	equ	0xFE0
  6655                           indf2	equ	0xFDF
  6656                           postinc2	equ	0xFDE
  6657                           postdec2	equ	0xFDD
  6658                           fsr2h	equ	0xFDA
  6659                           fsr2l	equ	0xFD9
  6660                           status	equ	0xFD8
  6661                           
  6662 ;; *************** function _handle_start *****************
  6663 ;; Defined at:
  6664 ;;		line 107 in file "../src/my_i2c.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  data_read       1    wreg     unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  data_read       1   46[COMRAM] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;		None               void
  6671 ;; Registers used:
  6672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6678 ;;      Params:         0       0       0       0       0
  6679 ;;      Locals:         1       0       0       0       0
  6680 ;;      Temps:          0       0       0       0       0
  6681 ;;      Totals:         1       0       0       0       0
  6682 ;;Total ram usage:        1 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_i2c_int_handler
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text39
  6692  000D66                     __ptext39:
  6693                           	opt stack 0
  6694  000D66                     _handle_start:
  6695                           	opt stack 19
  6696                           
  6697                           ;incstack = 0
  6698                           ;handle_start@data_read stored from wreg
  6699  000D66  CFE8 F02F          	movff	wreg,handle_start@data_read
  6700                           
  6701                           ;my_i2c.c: 108: ic_ptr->event_count = 1;
  6702  000D6A  0100               	movlb	0	; () banked
  6703  000D6C  EE20 F00B          	lfsr	2,11
  6704  000D70  0100               	movlb	0	; () banked
  6705  000D72  51E1               	movf	_ic_ptr& (0+255),w,b
  6706  000D74  26D9               	addwf	fsr2l,f,c
  6707  000D76  0100               	movlb	0	; () banked
  6708  000D78  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6709  000D7A  22DA               	addwfc	fsr2h,f,c
  6710  000D7C  0E01               	movlw	1
  6711  000D7E  6EDF               	movwf	indf2,c
  6712                           
  6713                           ;my_i2c.c: 109: ic_ptr->buflen = 0;
  6714  000D80  0100               	movlb	0	; () banked
  6715  000D82  EE20 F00A          	lfsr	2,10
  6716  000D86  0100               	movlb	0	; () banked
  6717  000D88  51E1               	movf	_ic_ptr& (0+255),w,b
  6718  000D8A  26D9               	addwf	fsr2l,f,c
  6719  000D8C  0100               	movlb	0	; () banked
  6720  000D8E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6721  000D90  22DA               	addwfc	fsr2h,f,c
  6722  000D92  0E00               	movlw	0
  6723  000D94  6EDF               	movwf	indf2,c
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 111: if (data_read) {
  6727  000D96  502F               	movf	handle_start@data_read,w,c
  6728  000D98  B4D8               	btfsc	status,2,c
  6729  000D9A  D03D               	goto	i2l2423
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;my_i2c.c: 112: if (SSPSTATbits.D_A == 1) {
  6733  000D9C  AAC7               	btfss	4039,5,c	;volatile
  6734  000D9E  D021               	goto	i2l245
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6738  000DA0  0100               	movlb	0	; () banked
  6739  000DA2  EE20 F00C          	lfsr	2,12
  6740  000DA6  0100               	movlb	0	; () banked
  6741  000DA8  51E1               	movf	_ic_ptr& (0+255),w,b
  6742  000DAA  26D9               	addwf	fsr2l,f,c
  6743  000DAC  0100               	movlb	0	; () banked
  6744  000DAE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6745  000DB0  22DA               	addwfc	fsr2h,f,c
  6746  000DB2  0E05               	movlw	5
  6747  000DB4  6EDF               	movwf	indf2,c
  6748                           
  6749                           ;my_i2c.c: 116: ic_ptr->error_count++;
  6750  000DB6  0100               	movlb	0	; () banked
  6751  000DB8  EE20 F00E          	lfsr	2,14
  6752  000DBC  0100               	movlb	0	; () banked
  6753  000DBE  51E1               	movf	_ic_ptr& (0+255),w,b
  6754  000DC0  26D9               	addwf	fsr2l,f,c
  6755  000DC2  0100               	movlb	0	; () banked
  6756  000DC4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6757  000DC6  22DA               	addwfc	fsr2h,f,c
  6758  000DC8  2ADF               	incf	indf2,f,c
  6759                           
  6760                           ;my_i2c.c: 117: ic_ptr->error_code = 0x5;
  6761  000DCA  0100               	movlb	0	; () banked
  6762  000DCC  EE20 F00D          	lfsr	2,13
  6763  000DD0  0100               	movlb	0	; () banked
  6764  000DD2  51E1               	movf	_ic_ptr& (0+255),w,b
  6765  000DD4  26D9               	addwf	fsr2l,f,c
  6766  000DD6  0100               	movlb	0	; () banked
  6767  000DD8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6768  000DDA  22DA               	addwfc	fsr2h,f,c
  6769  000DDC  0E05               	movlw	5
  6770  000DDE  6EDF               	movwf	indf2,c
  6771                           
  6772                           ;my_i2c.c: 118: } else {
  6773  000DE0  0012               	return	
  6774  000DE2                     i2l245:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;my_i2c.c: 119: if (SSPSTATbits.R_W == 1) {
  6778  000DE2  A4C7               	btfss	4039,2,c	;volatile
  6779  000DE4  D00C               	goto	i2l2421
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;my_i2c.c: 120: ic_ptr->status = 0x8;
  6783  000DE6  0100               	movlb	0	; () banked
  6784  000DE8  EE20 F00C          	lfsr	2,12
  6785  000DEC  0100               	movlb	0	; () banked
  6786  000DEE  51E1               	movf	_ic_ptr& (0+255),w,b
  6787  000DF0  26D9               	addwf	fsr2l,f,c
  6788  000DF2  0100               	movlb	0	; () banked
  6789  000DF4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6790  000DF6  22DA               	addwfc	fsr2h,f,c
  6791  000DF8  0E08               	movlw	8
  6792  000DFA  6EDF               	movwf	indf2,c
  6793                           
  6794                           ;my_i2c.c: 121: } else {
  6795  000DFC  0012               	return	
  6796  000DFE                     i2l2421:
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;my_i2c.c: 122: ic_ptr->status = 0x7;
  6800  000DFE  0100               	movlb	0	; () banked
  6801  000E00  EE20 F00C          	lfsr	2,12
  6802  000E04  0100               	movlb	0	; () banked
  6803  000E06  51E1               	movf	_ic_ptr& (0+255),w,b
  6804  000E08  26D9               	addwf	fsr2l,f,c
  6805  000E0A  0100               	movlb	0	; () banked
  6806  000E0C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6807  000E0E  22DA               	addwfc	fsr2h,f,c
  6808  000E10  0E07               	movlw	7
  6809  000E12  6EDF               	movwf	indf2,c
  6810  000E14  0012               	return	
  6811  000E16                     i2l2423:
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;my_i2c.c: 126: ic_ptr->status = 0x6;
  6815  000E16  0100               	movlb	0	; () banked
  6816  000E18  EE20 F00C          	lfsr	2,12
  6817  000E1C  0100               	movlb	0	; () banked
  6818  000E1E  51E1               	movf	_ic_ptr& (0+255),w,b
  6819  000E20  26D9               	addwf	fsr2l,f,c
  6820  000E22  0100               	movlb	0	; () banked
  6821  000E24  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6822  000E26  22DA               	addwfc	fsr2h,f,c
  6823  000E28  0E06               	movlw	6
  6824  000E2A  6EDF               	movwf	indf2,c
  6825  000E2C  0012               	return	
  6826  000E2E                     __end_of_handle_start:
  6827                           	opt stack 0
  6828                           pclatu	equ	0xFFB
  6829                           pclath	equ	0xFFA
  6830                           tblptru	equ	0xFF8
  6831                           tblptrh	equ	0xFF7
  6832                           tblptrl	equ	0xFF6
  6833                           tablat	equ	0xFF5
  6834                           prodh	equ	0xFF4
  6835                           prodl	equ	0xFF3
  6836                           intcon	equ	0xFF2
  6837                           postinc0	equ	0xFEE
  6838                           fsr0h	equ	0xFEA
  6839                           fsr0l	equ	0xFE9
  6840                           wreg	equ	0xFE8
  6841                           indf1	equ	0xFE7
  6842                           fsr1h	equ	0xFE2
  6843                           fsr1l	equ	0xFE1
  6844                           bsr	equ	0xFE0
  6845                           indf2	equ	0xFDF
  6846                           postinc2	equ	0xFDE
  6847                           postdec2	equ	0xFDD
  6848                           fsr2h	equ	0xFDA
  6849                           fsr2l	equ	0xFD9
  6850                           status	equ	0xFD8
  6851                           
  6852 ;; *************** function _SleepIfOkay *****************
  6853 ;; Defined at:
  6854 ;;		line 228 in file "../src/messages.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;		None               void
  6861 ;; Registers used:
  6862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6868 ;;      Params:         0       0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0
  6871 ;;      Totals:         0       0       0       0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    2
  6875 ;; This function calls:
  6876 ;;		_enter_sleep_mode
  6877 ;;		i2_check_msg
  6878 ;;		i2_in_high_int
  6879 ;;		i2_in_low_int
  6880 ;; This function is called by:
  6881 ;;		_InterruptHandlerHigh
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text40
  6886  0013B6                     __ptext40:
  6887                           	opt stack 0
  6888  0013B6                     _SleepIfOkay:
  6889                           	opt stack 18
  6890                           
  6891                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;incstack = 0
  6895  0013B6  664C               	tstfsz	_MQ_Main_Willing_to_block,c
  6896  0013B8  D001               	goto	i2l2083
  6897  0013BA  0012               	return	
  6898  0013BC                     i2l2083:
  6899                           
  6900                           ;messages.c: 232: }
  6901                           ;messages.c: 235: if (in_low_int()) {
  6902  0013BC  EC37  F00B         	call	i2_in_low_int	;wreg free
  6903  0013C0  5032               	movf	?i2_in_low_int+1,w,c
  6904  0013C2  1031               	iorwf	?i2_in_low_int,w,c
  6905  0013C4  A4D8               	btfss	status,2,c
  6906  0013C6  0012               	return	
  6907                           
  6908                           ;messages.c: 237: }
  6909                           ;messages.c: 240: if (!in_high_int()) {
  6910                           
  6911                           ;messages.c: 236: return;
  6912  0013C8  EC07  F00C         	call	i2_in_high_int	;wreg free
  6913  0013CC  5030               	movf	?i2_in_high_int+1,w,c
  6914  0013CE  102F               	iorwf	?i2_in_high_int,w,c
  6915  0013D0  B4D8               	btfsc	status,2,c
  6916  0013D2  0012               	return	
  6917                           
  6918                           ;messages.c: 242: }
  6919                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  6920                           
  6921                           ;messages.c: 241: return;
  6922  0013D4  0100               	movlb	0	; () banked
  6923  0013D6  0E00               	movlw	high _ToMainHigh_MQ
  6924  0013D8  6E30               	movwf	i2check_msg@qptr+1,c
  6925  0013DA  0100               	movlb	0	; () banked
  6926  0013DC  0E84               	movlw	low _ToMainHigh_MQ
  6927  0013DE  6E2F               	movwf	i2check_msg@qptr,c
  6928  0013E0  EC9F  F00B         	call	i2_check_msg	;wreg free
  6929  0013E4  0900               	iorlw	0
  6930  0013E6  A4D8               	btfss	status,2,c
  6931  0013E8  0012               	return	
  6932                           
  6933                           ;messages.c: 249: }
  6934                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  6935                           
  6936                           ;messages.c: 248: return;
  6937  0013EA  0101               	movlb	1	; () banked
  6938  0013EC  0E01               	movlw	high _ToMainLow_MQ
  6939  0013EE  6E30               	movwf	i2check_msg@qptr+1,c
  6940  0013F0  0101               	movlb	1	; () banked
  6941  0013F2  0E6C               	movlw	low _ToMainLow_MQ
  6942  0013F4  6E2F               	movwf	i2check_msg@qptr,c
  6943  0013F6  EC9F  F00B         	call	i2_check_msg	;wreg free
  6944  0013FA  0900               	iorlw	0
  6945  0013FC  B4D8               	btfsc	status,2,c
  6946                           
  6947                           ;messages.c: 252: }
  6948                           ;messages.c: 253: enter_sleep_mode();
  6949                           
  6950                           ;messages.c: 251: return;
  6951  0013FE  EC11  F00C         	call	_enter_sleep_mode	;wreg free
  6952  001402  0012               	return	
  6953  001404                     __end_of_SleepIfOkay:
  6954                           	opt stack 0
  6955                           pclatu	equ	0xFFB
  6956                           pclath	equ	0xFFA
  6957                           tblptru	equ	0xFF8
  6958                           tblptrh	equ	0xFF7
  6959                           tblptrl	equ	0xFF6
  6960                           tablat	equ	0xFF5
  6961                           prodh	equ	0xFF4
  6962                           prodl	equ	0xFF3
  6963                           intcon	equ	0xFF2
  6964                           postinc0	equ	0xFEE
  6965                           fsr0h	equ	0xFEA
  6966                           fsr0l	equ	0xFE9
  6967                           wreg	equ	0xFE8
  6968                           indf1	equ	0xFE7
  6969                           fsr1h	equ	0xFE2
  6970                           fsr1l	equ	0xFE1
  6971                           bsr	equ	0xFE0
  6972                           indf2	equ	0xFDF
  6973                           postinc2	equ	0xFDE
  6974                           postdec2	equ	0xFDD
  6975                           fsr2h	equ	0xFDA
  6976                           fsr2l	equ	0xFD9
  6977                           status	equ	0xFD8
  6978                           
  6979 ;; *************** function i2_in_low_int *****************
  6980 ;; Defined at:
  6981 ;;		line 30 in file "../src/interrupts.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;		None
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  2   48[COMRAM] int 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6995 ;;      Params:         2       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0
  6998 ;;      Totals:         2       0       0       0       0
  6999 ;;Total ram usage:        2 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    1
  7002 ;; This function calls:
  7003 ;;		i2_in_high_int
  7004 ;; This function is called by:
  7005 ;;		_SleepIfOkay
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text41
  7010  00166E                     __ptext41:
  7011                           	opt stack 0
  7012  00166E                     i2_in_low_int:
  7013                           	opt stack 18
  7014                           
  7015                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7016                           
  7017                           ;incstack = 0
  7018  00166E  ACF2               	btfss	intcon,6,c	;volatile
  7019  001670  D005               	goto	i2l2459
  7020                           
  7021                           ;interrupts.c: 32: return (0);
  7022  001672  0E00               	movlw	0
  7023  001674  6E32               	movwf	?i2_in_low_int+1,c
  7024  001676  0E00               	movlw	0
  7025  001678  6E31               	movwf	?i2_in_low_int,c
  7026  00167A  0012               	return	
  7027  00167C                     i2l2459:
  7028  00167C  EC07  F00C         	call	i2_in_high_int	;wreg free
  7029  001680  5030               	movf	?i2_in_high_int+1,w,c
  7030  001682  102F               	iorwf	?i2_in_high_int,w,c
  7031  001684  B4D8               	btfsc	status,2,c
  7032  001686  D005               	goto	i2l2467
  7033                           
  7034                           ;interrupts.c: 34: return (0);
  7035  001688  0E00               	movlw	0
  7036  00168A  6E32               	movwf	?i2_in_low_int+1,c
  7037  00168C  0E00               	movlw	0
  7038  00168E  6E31               	movwf	?i2_in_low_int,c
  7039  001690  0012               	return	
  7040  001692                     i2l2467:
  7041                           
  7042                           ;interrupts.c: 36: return (1);
  7043  001692  0E00               	movlw	0
  7044  001694  6E32               	movwf	?i2_in_low_int+1,c
  7045  001696  0E01               	movlw	1
  7046  001698  6E31               	movwf	?i2_in_low_int,c
  7047  00169A  0012               	return	
  7048  00169C                     __end_ofi2_in_low_int:
  7049                           	opt stack 0
  7050                           pclatu	equ	0xFFB
  7051                           pclath	equ	0xFFA
  7052                           tblptru	equ	0xFF8
  7053                           tblptrh	equ	0xFF7
  7054                           tblptrl	equ	0xFF6
  7055                           tablat	equ	0xFF5
  7056                           prodh	equ	0xFF4
  7057                           prodl	equ	0xFF3
  7058                           intcon	equ	0xFF2
  7059                           postinc0	equ	0xFEE
  7060                           fsr0h	equ	0xFEA
  7061                           fsr0l	equ	0xFE9
  7062                           wreg	equ	0xFE8
  7063                           indf1	equ	0xFE7
  7064                           fsr1h	equ	0xFE2
  7065                           fsr1l	equ	0xFE1
  7066                           bsr	equ	0xFE0
  7067                           indf2	equ	0xFDF
  7068                           postinc2	equ	0xFDE
  7069                           postdec2	equ	0xFDD
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function i2_in_high_int *****************
  7075 ;; Defined at:
  7076 ;;		line 22 in file "../src/interrupts.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  2   46[COMRAM] int 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7090 ;;      Params:         2       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0
  7093 ;;      Totals:         2       0       0       0       0
  7094 ;;Total ram usage:        2 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_SleepIfOkay
  7100 ;;		i2_in_low_int
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text42
  7105  00180E                     __ptext42:
  7106                           	opt stack 0
  7107  00180E                     i2_in_high_int:
  7108                           	opt stack 18
  7109                           
  7110                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  7111                           
  7112                           ;incstack = 0
  7113  00180E  0E00               	movlw	0
  7114  001810  AEF2               	btfss	intcon,7,c	;volatile
  7115  001812  0E01               	movlw	1
  7116  001814  6E2F               	movwf	?i2_in_high_int,c
  7117  001816  6A30               	clrf	?i2_in_high_int+1,c
  7118  001818  0012               	return	
  7119  00181A                     __end_ofi2_in_high_int:
  7120                           	opt stack 0
  7121                           pclatu	equ	0xFFB
  7122                           pclath	equ	0xFFA
  7123                           tblptru	equ	0xFF8
  7124                           tblptrh	equ	0xFF7
  7125                           tblptrl	equ	0xFF6
  7126                           tablat	equ	0xFF5
  7127                           prodh	equ	0xFF4
  7128                           prodl	equ	0xFF3
  7129                           intcon	equ	0xFF2
  7130                           postinc0	equ	0xFEE
  7131                           fsr0h	equ	0xFEA
  7132                           fsr0l	equ	0xFE9
  7133                           wreg	equ	0xFE8
  7134                           indf1	equ	0xFE7
  7135                           fsr1h	equ	0xFE2
  7136                           fsr1l	equ	0xFE1
  7137                           bsr	equ	0xFE0
  7138                           indf2	equ	0xFDF
  7139                           postinc2	equ	0xFDE
  7140                           postdec2	equ	0xFDD
  7141                           fsr2h	equ	0xFDA
  7142                           fsr2l	equ	0xFD9
  7143                           status	equ	0xFD8
  7144                           
  7145 ;; *************** function i2_check_msg *****************
  7146 ;; Defined at:
  7147 ;;		line 222 in file "../src/messages.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  7150 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      unsigned char 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7162 ;;      Params:         2       0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0
  7164 ;;      Temps:          1       0       0       0       0
  7165 ;;      Totals:         3       0       0       0       0
  7166 ;;Total ram usage:        3 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_SleepIfOkay
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text43
  7176  00173E                     __ptext43:
  7177                           	opt stack 0
  7178  00173E                     i2_check_msg:
  7179                           	opt stack 19
  7180                           
  7181                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  7182                           
  7183                           ;incstack = 0
  7184  00173E  EE20 F035          	lfsr	2,53
  7185  001742  502F               	movf	i2check_msg@qptr,w,c
  7186  001744  26D9               	addwf	fsr2l,f,c
  7187  001746  5030               	movf	i2check_msg@qptr+1,w,c
  7188  001748  22DA               	addwfc	fsr2h,f,c
  7189  00174A  50DF               	movf	indf2,w,c
  7190  00174C  6E31               	movwf	??i2_check_msg& (0+255),c
  7191  00174E  5031               	movf	??i2_check_msg,w,c
  7192  001750  0D0D               	mullw	13
  7193  001752  50F3               	movf	prodl,w,c
  7194  001754  242F               	addwf	i2check_msg@qptr,w,c
  7195  001756  6ED9               	movwf	fsr2l,c
  7196  001758  50F4               	movf	prodh,w,c
  7197  00175A  2030               	addwfc	i2check_msg@qptr+1,w,c
  7198  00175C  6EDA               	movwf	fsr2h,c
  7199  00175E  50DF               	movf	indf2,w,c
  7200  001760  0012               	return	
  7201  001762                     __end_ofi2_check_msg:
  7202                           	opt stack 0
  7203                           pclatu	equ	0xFFB
  7204                           pclath	equ	0xFFA
  7205                           tblptru	equ	0xFF8
  7206                           tblptrh	equ	0xFF7
  7207                           tblptrl	equ	0xFF6
  7208                           tablat	equ	0xFF5
  7209                           prodh	equ	0xFF4
  7210                           prodl	equ	0xFF3
  7211                           intcon	equ	0xFF2
  7212                           postinc0	equ	0xFEE
  7213                           fsr0h	equ	0xFEA
  7214                           fsr0l	equ	0xFE9
  7215                           wreg	equ	0xFE8
  7216                           indf1	equ	0xFE7
  7217                           fsr1h	equ	0xFE2
  7218                           fsr1l	equ	0xFE1
  7219                           bsr	equ	0xFE0
  7220                           indf2	equ	0xFDF
  7221                           postinc2	equ	0xFDE
  7222                           postdec2	equ	0xFDD
  7223                           fsr2h	equ	0xFDA
  7224                           fsr2l	equ	0xFD9
  7225                           status	equ	0xFD8
  7226                           
  7227 ;; *************** function _enter_sleep_mode *****************
  7228 ;; Defined at:
  7229 ;;		line 202 in file "../src/messages.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;		None
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;		None
  7234 ;; Return value:  Size  Location     Type
  7235 ;;		None               void
  7236 ;; Registers used:
  7237 ;;		None
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7243 ;;      Params:         0       0       0       0       0
  7244 ;;      Locals:         0       0       0       0       0
  7245 ;;      Temps:          0       0       0       0       0
  7246 ;;      Totals:         0       0       0       0       0
  7247 ;;Total ram usage:        0 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_SleepIfOkay
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text44
  7257  001822                     __ptext44:
  7258                           	opt stack 0
  7259  001822                     _enter_sleep_mode:
  7260                           	opt stack 19
  7261                           
  7262                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  7263                           
  7264                           ;incstack = 0
  7265  001822  8ED3               	bsf	4051,7,c	;volatile
  7266  001824  0003               	sleep		;# 
  7267  001826  0012               	return	
  7268  001828                     __end_of_enter_sleep_mode:
  7269                           	opt stack 0
  7270  0000                     pclatu	equ	0xFFB
  7271                           pclath	equ	0xFFA
  7272                           tblptru	equ	0xFF8
  7273                           tblptrh	equ	0xFF7
  7274                           tblptrl	equ	0xFF6
  7275                           tablat	equ	0xFF5
  7276                           prodh	equ	0xFF4
  7277                           prodl	equ	0xFF3
  7278                           intcon	equ	0xFF2
  7279                           postinc0	equ	0xFEE
  7280                           fsr0h	equ	0xFEA
  7281                           fsr0l	equ	0xFE9
  7282                           wreg	equ	0xFE8
  7283                           indf1	equ	0xFE7
  7284                           fsr1h	equ	0xFE2
  7285                           fsr1l	equ	0xFE1
  7286                           bsr	equ	0xFE0
  7287                           indf2	equ	0xFDF
  7288                           postinc2	equ	0xFDE
  7289                           postdec2	equ	0xFDD
  7290                           fsr2h	equ	0xFDA
  7291                           fsr2l	equ	0xFD9
  7292                           status	equ	0xFD8
  7293                           pclatu	equ	0xFFB
  7294                           pclath	equ	0xFFA
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           postinc0	equ	0xFEE
  7303                           fsr0h	equ	0xFEA
  7304                           fsr0l	equ	0xFE9
  7305                           wreg	equ	0xFE8
  7306                           indf1	equ	0xFE7
  7307                           fsr1h	equ	0xFE2
  7308                           fsr1l	equ	0xFE1
  7309                           bsr	equ	0xFE0
  7310                           indf2	equ	0xFDF
  7311                           postinc2	equ	0xFDE
  7312                           postdec2	equ	0xFDD
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317                           	psect	rparam
  7318  0000                     pclatu	equ	0xFFB
  7319                           pclath	equ	0xFFA
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           postinc0	equ	0xFEE
  7328                           fsr0h	equ	0xFEA
  7329                           fsr0l	equ	0xFE9
  7330                           wreg	equ	0xFE8
  7331                           indf1	equ	0xFE7
  7332                           fsr1h	equ	0xFE2
  7333                           fsr1l	equ	0xFE1
  7334                           bsr	equ	0xFE0
  7335                           indf2	equ	0xFDF
  7336                           postinc2	equ	0xFDE
  7337                           postdec2	equ	0xFDD
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         228
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     69      81
    BANK0           128     39      99
    BANK1           256     92     254
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@ic(BANK1[40]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@ic(BANK1[40]), main@uc(BANK1[5]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 40
		 -> main@ic(BANK1[40]), 

    Handle_i2c_data_save@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 40
		 -> NULL(NULL[0]), main@ic(BANK1[40]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 40
		 -> timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ic(BANK1[40]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 40
		 -> timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ic(BANK1[40]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->i2_ToMainHigh_sendmsg
    _i2c_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->i2_ToMainHigh_sendmsg
    _i2c_int_handler->i2_ToMainHigh_sendmsg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer0_lthread
    _timer0_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0    8002
                                             29 BANK1     63    63      0
               _Handle_i2c_data_save
                         _OpenTimer0
                 _ToMainHigh_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      13     5      8    3177
                                             16 BANK1     13     5      8
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2785
                                             12 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                              0 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                6     4      2     108
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             33 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             35 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2620
                                             14 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2373
                                              0 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Handle_i2c_data_save                                 4     2      2      86
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5958
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2925
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3033
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2902
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               15    15      0    7506
                                             14 BANK0     15    15      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    3421
                                              3 BANK0      3     3      0
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     134
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3849
                                              3 BANK0     11    11      0
                       _handle_start
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3243
                                             68 COMRAM     1     1      0
                                              0 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2547
                                             56 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Handle_i2c_data_save
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _handle_start
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     5C      FE       6       99.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     27      63       4       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     45      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2      11        0.0%
DATA                 0      0     1B2      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Feb  6 17:56:00 2014

                             _i 0082                               _j 0050                               _x 004A  
      _MQ_Main_Willing_to_block 004C           ?i2_ToMainHigh_sendmsg 00BA                     _SSPSTATbits 000FC7  
                            l96 09FA                              bsr 000FE0       __end_of_ToMainLow_sendmsg 173E  
                  __CFG_CP0$OFF 000000                             l390 16C0                             l391 16C2  
                           l639 17A2            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0136                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00D7                ??_init_uart_recv 00D9                 ReadTimer1@timer 0003  
                          l2231 11C0                            l2225 1194                            l2305 12B8  
                          l2237 11EC                            l2261 073E                            l2265 077A  
                          l2273 0878                            l2269 07EC                            l2295 0ED2  
                          l1911 14C4                            l2831 0BF0                            l2815 1234  
                          l2851 139E                            l2845 137A                            l2791 09A8  
                          l2783 0966                            l2865 0ACA                            l2881 0B90  
                          l1897 1480                            l1889 145E                            l2793 0A00  
                          l2795 0A1C                            l2799 0A38                            u2027 17A4  
                          _LATB 000F8A                            i1l49 0070                 _FromMainHigh_MQ 0100  
                          _Send 0080                   __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001  
                          _main 08F4                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          _swit 0048                     main@msgtype 01D0                      i1_send_msg 0EEA  
                          pclat 000FFA                     i2_check_msg 173E                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 002F                            start 00B6  
                 __CFG_FOSC2$ON 000000                      i2_send_msg 0F94       ToMainHigh_recvmsg@msgtype 01B0  
                send_msg@length 01A4     __size_of_timer0_int_handler 003C                     _Delay1KTCYx 179E  
                         ?_main 0001                           _T0CON 000FD5                           i1l424 178E  
                    i1memcpy@d1 0001                           i2l245 0DE2                           i2l261 01C6  
                         i2l255 051C                           i2l257 0182                           i2l283 048E  
                         i2l275 0356                           i2l289 052E                      i1memcpy@s1 0003  
                         _RCREG 000FAE                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR1L 000FCE                           _TRISB 000F93  
             timer0_lthread@val 01BD                      i2memcpy@d1 002F                      i2memcpy@s1 0031  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 14D4  
       timer0_lthread@msgbuffer 01B8         i2c_configure_slave@addr 00D7                           tablat 000FF5  
                         status 000FD8        i2ToMainHigh_sendmsg@data 00BB                __end_ofi1_memcpy 1556  
              __end_ofi2_memcpy 1596                 __initialization 1404          ??i2_ToMainHigh_sendmsg 0045  
                  __end_of_main 0A5E                      _ReadTimer1 17EA     __size_of_timer1_int_handler 0030  
    __size_of_ToMainLow_sendmsg 0026           __size_ofi2_in_low_int 002E   __size_of_Handle_i2c_data_save 00BC  
                        ??_main 00E1                 send_msg@msgtype 01A5                   __activetblptr 000002  
               send_msg@tlength 01A9            __end_of_handle_start 0E2E         ??_uart_recv_int_handler 001B  
                        i1l3011 10BA                          i1l3023 0066                          i1l2953 1544  
                        i2l2083 13BC                          i1l2947 1528                          i2l2421 0DFE  
                        i2l2423 0E16                          i1l2977 0F22                      _OpenTimer0 169C  
                        i2l2603 1138                  __CFG_WDTEN$OFF 000000                          i2l2713 04F0  
                        i2l2625 0178                          i2l2467 1692                          i2l2459 167C  
                        i2l2643 01FE                          i2l2619 0160                          i2l2741 06D2  
                        i2l2733 062C                          i2l2725 0592                          i2l2661 027E  
                        i2l2645 022A                          i2l2719 0532                          i2l2663 02BE  
                        i2l2655 0266                          i2l2691 041E                          i2l2595 1114  
                        i2l2685 03CA                          i2l2687 040C                          i2l2929 0FCC  
                        i2l2963 1584                          i2l2957 1568     __end_of_i2c_configure_slave 1718  
                 ??_SleepIfOkay 0033              __size_of_ReadUSART 001E                          _OSCCON 000FD3  
                        _SSPADD 000FC8                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 01E0  
                   ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 08F4              timer0_lthread@tptr 01B2  
                  i2_in_low_int 166E                     ?i2_send_msg 0039                  __CFG_XINST$OFF 000000  
               _i2c_int_handler 00BA                OpenTimer0@config 00D7                          _ic_ptr 00E1  
                 main@msgbuffer 01BF                __end_of_init_i2c 0D66                          _length 0046  
                        _memcpy 1358                          clear_0 140A                          clear_1 1416  
                        clear_2 1422                          _uc_ptr 004E                          main@ic 01D6  
                        main@uc 01D1                __end_of_recv_msg 0B94     start_i2c_slave_reply@length 00DC  
                     ??_in_main 00DD                __end_of_send_msg 0C98                    __pdataCOMRAM 0050  
         timer0_int_handler@val 00BE         i2c_int_handler@i2c_data 00C4                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 00DA  
          __size_of_in_high_int 0012                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 1440      __end_of_ToMainHigh_recvmsg 1516      __end_of_ToMainHigh_sendmsg 1608  
   __end_of_init_timer1_lthread 17C6             __end_of_SleepIfOkay 1404                  __pcstackCOMRAM 0001  
        __size_ofi2_in_high_int 000C                     ?_ReadTimer1 0001              __size_of_check_msg 0036  
             __end_of_ReadUSART 179E             __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 116E     __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 002F  
                 _ToMainHigh_MQ 0084                _enter_sleep_mode 1822             __size_ofi2_send_msg 00AA  
                 ReadUSART@data 0001                   check_msg@qptr 00D7         ??_block_on_To_msgqueues 00DD  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0100  
                   ?_OpenTimer0 0001                      __pnvCOMRAM 004E         __end_of_i2c_int_handler 0714  
                  ?i2_check_msg 002F               recv_msg@maxlength 01A4                 recv_msg@msgtype 01A5  
               recv_msg@tlength 01AC           __size_of_handle_start 00C8                    ?_Delay1KTCYx 0001  
              WriteTimer0@timer 0031                         ?_memcpy 00D7                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0031                   ??_WriteTimer1 0003         __size_of_timer0_lthread 007C  
                    ??i1_memcpy 0007                      ??i2_memcpy 0035                i1send_msg@length 000D  
                 i2_in_high_int 180E                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7             __size_of_ReadTimer1 0012               __end_of_check_msg 163E  
                     ?_init_i2c 00D7                     _SleepIfOkay 13B6                       ?_recv_msg 01A2  
                    _in_low_int 144A                    _handle_start 0D66                         __Hparam 0000  
                     ?_send_msg 01A2                         __Lparam 0000      __end_of_timer0_int_handler 15D2  
              init_uart_recv@uc 00D7         Handle_i2c_data_save@msg 00D7                 __CFG_STVREN$OFF 000000  
                       __pcinit 1404                 __size_of_memcpy 005E                      _init_queue 1270  
                       __ramtop 0400             __size_of_OpenTimer0 002A                         __ptext0 08F4  
                       __ptext1 11F4                         __ptext2 15D2                         __ptext3 0B94  
                       __ptext4 0714                         __ptext5 1762                         __ptext6 17B4  
                       __ptext7 12EA                         __ptext8 1270                         __ptext9 0C98  
                     _T0CONbits 000FD5                         _in_main 1490             __end_of_WriteTimer0 180E  
           __end_of_WriteTimer1 17EA                  ?i2_in_high_int 002F                  __pintcode_body 10DA  
          end_of_initialization 1440    __end_of_Handle_i2c_data_save 0EEA  __size_of_uart_recv_int_handler 009C  
                       memcpy@d 00DD                         memcpy@n 00DB                         memcpy@s 00DF  
 __end_of_uart_recv_int_handler 10DA                      ??_init_i2c 00D9     i2c_int_handler@data_written 00C2  
                 __Lmediumconst 0000                         int_func 10DA                    ??i1_send_msg 0011  
       __size_of_init_uart_recv 001E                ?_i2c_int_handler 0001                      ??_recv_msg 01A9  
                  ??i2_send_msg 003F                      ??_send_msg 01A8      __end_of_timer1_int_handler 166E  
                     _RCSTAbits 000FAB                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE       ToMainHigh_sendmsg@msgtype 01AE      Handle_i2c_data_save@length 0001  
 __size_ofi2_ToMainHigh_sendmsg 002A              __end_ofi1_send_msg 0F94                       _TRISCbits 000F94  
            __end_ofi2_send_msg 103E        timer1_int_handler@result 001C                      main@length 01CF  
                   ?_in_low_int 00D9           timer0_lthread@msgtype 01B4           _start_i2c_slave_reply 0714  
  __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 1828  
                  ??_ReadTimer1 0003              _ToMainHigh_recvmsg 14D4                       i1memcpy@d 0007  
            _ToMainHigh_sendmsg 15D2                       i1memcpy@n 0005                       i1memcpy@s 0009  
                 __pidataCOMRAM 1828                  _timer0_lthread 11F4                     ?_init_queue 00D7  
                     i2memcpy@d 0035                     _WriteTimer0 17FC                     _WriteTimer1 17D8  
                     i2memcpy@n 0033                       i2memcpy@s 0037                  __end_of_memcpy 13B6  
             _enable_interrupts 181A            __size_of_Delay1KTCYx 0016             ?_ToMainHigh_recvmsg 01B0  
               ??i2_in_high_int 0031        i2c_int_handler@data_read 00C7             ?_ToMainHigh_sendmsg 01AE  
            ?_enable_interrupts 0001             start_initialization 1404                   ??_in_high_int 00D9  
                     _ReadUSART 1780               __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040  
           ??_enable_interrupts 00D7                    ??_OpenTimer0 00D7  __size_of_block_on_To_msgqueues 007E  
            __end_of_ReadTimer1 17FC   __end_of_block_on_To_msgqueues 11F4    __end_of_InterruptHandlerHigh 1176  
                    init_i2c@ic 00D7            ??_ToMainHigh_recvmsg 00E1            ??_ToMainHigh_sendmsg 00E1  
        __end_of_timer0_lthread 1270        i2c_int_handler@error_buf 00BF       __end_of_enable_interrupts 1822  
                      ??_memcpy 00DD            _Handle_i2c_data_save 0E2E    __size_of_init_timer1_lthread 0012  
            __end_of_OpenTimer0 16C6        i2c_int_handler@msg_ready 00C6                     __pbssCOMRAM 0046  
                    ?_ReadUSART 0001                   ??_init_queues 00DB                   __pcstackBANK0 00BA  
                 __pcstackBANK1 01A2             __size_of_in_low_int 0046        start_i2c_slave_reply@msg 00D7  
           __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00D7        ToMainLow_sendmsg@msgtype 0017  
  __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 17D8                    ?_SleepIfOkay 0001  
                  _ToMainLow_MQ 016C             __size_of_init_queue 007A                  _init_uart_recv 1762  
                     _check_msg 1608                       __pnvBANK0 00E1          ?_start_i2c_slave_reply 00D7  
             __size_of_init_i2c 00CE                    recv_msg@data 01A7                    recv_msg@qmsg 01AE  
                  recv_msg@slot 01AB                    recv_msg@qptr 01A2      i2ToMainHigh_sendmsg@length 0045  
             __size_of_recv_msg 0136                       __pintcode 0008               __size_of_send_msg 0104  
               ?_timer0_lthread 01B2           ?_Handle_i2c_data_save 00D7                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 01B2      i2c_int_handler@msg_to_send 00C5                        ?_in_main 00DB  
             WriteTimer0@timer0 002F              _timer0_int_handler 1596               WriteTimer1@timer1 0001  
         ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001          __end_of_init_uart_recv 1780  
           __end_of_init_queues 1358                        _LATBbits 000F8A                 i2check_msg@qptr 002F  
                    ?_check_msg 00D7                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                 ?i2_in_low_int 0031                        i2u159_40 1120                        i2u159_46 1122  
                      _PIR1bits 000F9E          ToMainHigh_sendmsg@data 01AF                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 00BD      __size_of_enable_interrupts 0008  
             i1send_msg@msgtype 000E               i1send_msg@tlength 0012            timer0_lthread@length 01B6  
            _timer1_int_handler 163E                        i1_memcpy 1516            _InterruptHandlerHigh 0008  
                   ??_ReadUSART 0001                        i2_memcpy 1556            timer0_lthread@msgval 01BB  
                   _in_high_int 17C6                    send_msg@data 01A6             _i2c_configure_slave 16F0  
                  send_msg@qmsg 01AC                    send_msg@slot 01AB                    send_msg@qptr 01A2  
  __end_ofi2_ToMainHigh_sendmsg 16F0             ?_timer1_int_handler 0001                 ?_init_uart_recv 00D7  
                ??i2_in_low_int 0033           _uart_recv_int_handler 103E                    ??_in_low_int 00DB  
                      __Hrparam 0000            ?_i2c_configure_slave 0001                        __Lrparam 0000  
             ?_enter_sleep_mode 0001          ??_Handle_i2c_data_save 00D9            ??_timer1_int_handler 001B  
      __size_of_i2c_int_handler 065A              ??_enter_sleep_mode 002F                    ??_init_queue 00D9  
                  ?_WriteTimer0 002F                    ?_WriteTimer1 0001         ToMainLow_sendmsg@length 001A  
             main@t0thread_data 01CB           ?_InterruptHandlerHigh 0001                __size_of_in_main 0044  
             i2send_msg@msgtype 003C     ToMainHigh_recvmsg@maxlength 01B4               i2send_msg@tlength 0040  
       init_timer1_lthread@tptr 00D7                     _init_queues 12EA              __end_of_in_low_int 1490  
                      __ptext10 16F0                        __ptext11 181A                        __ptext20 1358  
                      __ptext12 1176                        __ptext21 169C                        __ptext13 1490  
                      __ptext30 1516                        __ptext22 0E2E                        __ptext14 144A  
                      __ptext31 17EA                        __ptext15 17C6                        __ptext40 13B6  
                      __ptext24 103E                        __ptext16 1608                        __ptext41 166E  
                      __ptext33 1596                        __ptext25 1780                        __ptext17 179E  
                      __ptext42 180E                        __ptext34 17FC                        __ptext26 163E  
                      __ptext18 14D4                        __ptext43 173E                        __ptext35 00BA  
                      __ptext27 17D8                        __ptext19 0A5E                        __ptext44 1822  
                      __ptext36 16C6                        __ptext28 1718                        __ptext37 0F94  
                      __ptext29 0EEA                        __ptext38 1556                        __ptext39 0D66  
                i1send_msg@data 000F                  i1send_msg@qmsg 0015                  i1send_msg@slot 0014  
                i1send_msg@qptr 000B                        _init_i2c 0C98             _init_timer1_lthread 17B4  
                 __size_of_main 016A                   ??i2_check_msg 0031               main@t1thread_data 01CD  
                   ??_check_msg 00D9              __end_of_init_queue 12EA            __size_of_SleepIfOkay 004E  
                      _recv_msg 0A5E           ??_i2c_configure_slave 00D7                        _send_msg 0B94  
                init_queue@qptr 00D7                   ??_Delay1KTCYx 00D7             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00D7                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
                      memcpy@d1 00D7                        memcpy@s1 00D9           __end_ofi2_in_high_int 181A  
  i2c_int_handler@overrun_error 00C3                i2send_msg@length 003B                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00D9  
        ?_uart_recv_int_handler 0001           _block_on_To_msgqueues 1176                   ?_handle_start 0001  
              ??_timer0_lthread 01BA     __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0036  
                    _OSCCONbits 000FD3     i2ToMainHigh_sendmsg@msgtype 00BA        ToMainHigh_sendmsg@length 01B1  
           __end_ofi2_check_msg 1762            i2_ToMainHigh_sendmsg 16C6           ??_init_timer1_lthread 00D9  
        ??_InterruptHandlerHigh 00C8               _ToMainLow_sendmsg 1718              main@last_reg_recvd 01CA  
          __end_ofi2_in_low_int 169C             __end_of_Delay1KTCYx 17B4               ??_i2c_int_handler 00BD  
            ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                i2send_msg@data 003D           ??_InterruptHandlerLow 001E                  i2send_msg@qmsg 0043  
                i2send_msg@slot 0042                  i2send_msg@qptr 0039             ??_ToMainLow_sendmsg 001A  
                ??_handle_start 002F                    _USART_Status 004D  
