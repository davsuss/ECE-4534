

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb  9 17:30:34 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001C18                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _j
    81  001C18  0064               	dw	100
    82  0000                     _ADCON0	set	4034
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON2	set	4032
    86  0000                     _ADRESH	set	4036
    87  0000                     _ADRESL	set	4035
    88  0000                     _INTCONbits	set	4082
    89  0000                     _IPR1bits	set	3999
    90  0000                     _LATB	set	3978
    91  0000                     _LATBbits	set	3978
    92  0000                     _OSCCON	set	4051
    93  0000                     _OSCCONbits	set	4051
    94  0000                     _OSCTUNEbits	set	3995
    95  0000                     _PIE1bits	set	3997
    96  0000                     _PIR1bits	set	3998
    97  0000                     _RCONbits	set	4048
    98  0000                     _RCREG	set	4014
    99  0000                     _RCSTAbits	set	4011
   100  0000                     _SSPADD	set	4040
   101  0000                     _SSPBUF	set	4041
   102  0000                     _SSPCON1	set	4038
   103  0000                     _SSPCON1bits	set	4038
   104  0000                     _SSPCON2	set	4037
   105  0000                     _SSPCON2bits	set	4037
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPSTATbits	set	4039
   108  0000                     _T0CON	set	4053
   109  0000                     _T0CONbits	set	4053
   110  0000                     _TMR0H	set	4055
   111  0000                     _TMR0L	set	4054
   112  0000                     _TMR1H	set	4047
   113  0000                     _TMR1L	set	4046
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISCbits	set	3988
   116                           
   117                           	psect	nvCOMRAM
   118  00004E                     __pnvCOMRAM:
   119                           	opt stack 0
   120  00004E                     _uc_ptr:
   121                           	opt stack 0
   122  00004E                     	ds	2
   123                           
   124                           	psect	nvBANK0
   125  0000DF                     __pnvBANK0:
   126                           	opt stack 0
   127  0000DF                     _ic_ptr:
   128                           	opt stack 0
   129  0000DF                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  00171A                     __pcinit:
   135                           	opt stack 0
   136  00171A                     start_initialization:
   137                           	opt stack 0
   138  00171A                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK1 (162 bytes)
   142  00171A  EE01  F000         	lfsr	0,__pbssBANK1
   143  00171E  0EA2               	movlw	162
   144  001720                     clear_0:
   145  001720  6AEE               	clrf	postinc0,c
   146  001722  06E8               	decf	wreg,f,c
   147  001724  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (56 bytes)
   150  001726  EE00  F080         	lfsr	0,__pbssBANK0
   151  00172A  0E38               	movlw	56
   152  00172C                     clear_1:
   153  00172C  6AEE               	clrf	postinc0,c
   154  00172E  06E8               	decf	wreg,f,c
   155  001730  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (10 bytes)
   158  001732  EE00  F044         	lfsr	0,__pbssCOMRAM
   159  001736  0E0A               	movlw	10
   160  001738                     clear_2:
   161  001738  6AEE               	clrf	postinc0,c
   162  00173A  06E8               	decf	wreg,f,c
   163  00173C  E1FD               	bnz	clear_2
   164                           
   165                           ; Initialize objects allocated to COMRAM (2 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  00173E  0E18               	movlw	low __pidataCOMRAM
   168  001740  6EF6               	movwf	tblptrl,c
   169  001742  0E1C               	movlw	high __pidataCOMRAM
   170  001744  6EF7               	movwf	tblptrh,c
   171  001746  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  001748  6EF8               	movwf	tblptru,c
   173  00174A  0009               	tblrd		*+	;fetch initializer
   174  00174C  CFF5 F050          	movff	tablat,__pdataCOMRAM
   175  001750  0009               	tblrd		*+	;fetch initializer
   176  001752  CFF5 F051          	movff	tablat,__pdataCOMRAM+1
   177  001756                     end_of_initialization:
   178                           	opt stack 0
   179  001756                     __end_of__initialization:
   180                           	opt stack 0
   181  001756  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182  001758  6EF8               	movwf	tblptru,c
   183  00175A  0100               	movlb	0
   184  00175C  EF7C  F003         	goto	_main	;jump to C main() function
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssCOMRAM
   193  000044                     __pbssCOMRAM:
   194                           	opt stack 0
   195  000044                     _Send:
   196                           	opt stack 0
   197  000044                     	ds	2
   198  000046                     _length:
   199                           	opt stack 0
   200  000046                     	ds	2
   201  000048                     _swit:
   202                           	opt stack 0
   203  000048                     	ds	2
   204  00004A                     _x:
   205                           	opt stack 0
   206  00004A                     	ds	2
   207  00004C                     _MQ_Main_Willing_to_block:
   208                           	opt stack 0
   209  00004C                     	ds	1
   210  00004D                     _USART_Status:
   211                           	opt stack 0
   212  00004D                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	dataCOMRAM
   221  000050                     __pdataCOMRAM:
   222                           	opt stack 0
   223  000050                     _j:
   224                           	opt stack 0
   225  000050                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssBANK0
   234  000080                     __pbssBANK0:
   235                           	opt stack 0
   236  000080                     _i:
   237                           	opt stack 0
   238  000080                     	ds	2
   239  000082                     _ToMainLow_MQ:
   240                           	opt stack 0
   241  000082                     	ds	54
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           
   249                           	psect	bssBANK1
   250  000100                     __pbssBANK1:
   251                           	opt stack 0
   252  000100                     _FromMainHigh_MQ:
   253                           	opt stack 0
   254  000100                     	ds	54
   255  000136                     _FromMainLow_MQ:
   256                           	opt stack 0
   257  000136                     	ds	54
   258  00016C                     _ToMainHigh_MQ:
   259                           	opt stack 0
   260  00016C                     	ds	54
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	cstackBANK2
   269  000200                     __pcstackBANK2:
   270                           	opt stack 0
   271  000200                     main@last_reg_recvd:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x0
   275  000200                     	ds	1
   276  000201                     main@msgbuffer:
   277                           	opt stack 0
   278                           
   279                           ; 11 bytes @ 0x1
   280  000201                     	ds	11
   281  00020C                     main@uthread_data:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0xC
   285  00020C                     	ds	2
   286  00020E                     main@t0thread_data:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0xE
   290  00020E                     	ds	2
   291  000210                     main@t1thread_data:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x10
   295  000210                     	ds	2
   296  000212                     main@uc:
   297                           	opt stack 0
   298                           
   299                           ; 5 bytes @ 0x12
   300  000212                     	ds	5
   301  000217                     main@length:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x17
   305  000217                     	ds	1
   306  000218                     main@msgtype:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x18
   310  000218                     	ds	1
   311  000219                     main@ic:
   312                           	opt stack 0
   313                           
   314                           ; 40 bytes @ 0x19
   315  000219                     	ds	40
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	cstackBANK1
   324  0001A2                     __pcstackBANK1:
   325                           	opt stack 0
   326  0001A2                     memcpy@d:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x0
   330  0001A2                     	ds	2
   331  0001A4                     memcpy@s:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  0001A4                     	ds	2
   336  0001A6                     send_msg@qptr:
   337                           	opt stack 0
   338  0001A6                     recv_msg@qptr:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x4
   342  0001A6                     	ds	2
   343  0001A8                     send_msg@length:
   344                           	opt stack 0
   345  0001A8                     recv_msg@maxlength:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x6
   349  0001A8                     	ds	1
   350  0001A9                     send_msg@msgtype:
   351                           	opt stack 0
   352  0001A9                     recv_msg@msgtype:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x7
   356  0001A9                     	ds	1
   357  0001AA                     send_msg@data:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x8
   361  0001AA                     	ds	1
   362  0001AB                     recv_msg@data:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x9
   366  0001AB                     	ds	1
   367  0001AC                     send_msg@tlength:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0xA
   371  0001AC                     	ds	1
   372  0001AD                     recv_msg@slot:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0xB
   376  0001AD                     	ds	1
   377  0001AE                     send_msg@slot:
   378                           	opt stack 0
   379  0001AE                     recv_msg@tlength:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0xC
   383  0001AE                     	ds	1
   384  0001AF                     send_msg@qmsg:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0xD
   388  0001AF                     	ds	1
   389  0001B0                     recv_msg@qmsg:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0xE
   393  0001B0                     	ds	1
   394  0001B1                     ToMainHigh_sendmsg@msgtype:
   395                           	opt stack 0
   396  0001B1                     FromMainHigh_sendmsg@msgtype:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0xF
   400  0001B1                     	ds	1
   401  0001B2                     ToMainLow_recvmsg@msgtype:
   402                           	opt stack 0
   403  0001B2                     ToMainHigh_sendmsg@data:
   404                           	opt stack 0
   405  0001B2                     ToMainHigh_recvmsg@msgtype:
   406                           	opt stack 0
   407  0001B2                     FromMainHigh_sendmsg@data:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x10
   411  0001B2                     	ds	2
   412  0001B4                     ToMainLow_recvmsg@data:
   413                           	opt stack 0
   414  0001B4                     ToMainHigh_recvmsg@data:
   415                           	opt stack 0
   416  0001B4                     timer0_lthread@tptr:
   417                           	opt stack 0
   418  0001B4                     timer1_lthread@tptr:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x12
   422  0001B4                     	ds	2
   423  0001B6                     ToMainLow_recvmsg@maxlength:
   424                           	opt stack 0
   425  0001B6                     ToMainHigh_recvmsg@maxlength:
   426                           	opt stack 0
   427  0001B6                     timer0_lthread@msgtype:
   428                           	opt stack 0
   429  0001B6                     timer1_lthread@msgtype:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x14
   433  0001B6                     	ds	2
   434  0001B8                     timer0_lthread@length:
   435                           	opt stack 0
   436  0001B8                     timer1_lthread@length:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x16
   440  0001B8                     	ds	2
   441  0001BA                     timer0_lthread@msgbuffer:
   442                           	opt stack 0
   443  0001BA                     timer1_lthread@msgbuffer:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x18
   447  0001BA                     	ds	2
   448  0001BC                     ??_timer0_lthread:
   449  0001BC                     ??_timer1_lthread:
   450                           
   451                           ; 0 bytes @ 0x1A
   452  0001BC                     	ds	1
   453  0001BD                     timer1_lthread@retval:
   454                           	opt stack 0
   455  0001BD                     timer0_lthread@msgval:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1B
   459  0001BD                     	ds	2
   460  0001BF                     timer0_lthread@val:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1D
   464  0001BF                     	ds	2
   465  0001C1                     ??_main:
   466                           
   467                           ; 0 bytes @ 0x1F
   468  0001C1                     	ds	2
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           
   476                           	psect	cstackBANK0
   477  0000B8                     __pcstackBANK0:
   478                           	opt stack 0
   479  0000B8                     i2send_msg@tlength:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x0
   483  0000B8                     	ds	2
   484  0000BA                     i2send_msg@slot:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x2
   488  0000BA                     	ds	1
   489  0000BB                     i2send_msg@qmsg:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x3
   493  0000BB                     	ds	2
   494  0000BD                     ??_i2c_int_handler:
   495  0000BD                     ??_adc_int_handler:
   496  0000BD                     ??_timer0_int_handler:
   497                           
   498                           ; 0 bytes @ 0x5
   499  0000BD                     	ds	1
   500  0000BE                     timer0_int_handler@val:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x6
   504  0000BE                     	ds	1
   505  0000BF                     adc_int_handler@result:
   506                           	opt stack 0
   507  0000BF                     i2c_int_handler@error_buf:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x7
   511  0000BF                     	ds	3
   512  0000C2                     i2c_int_handler@data_written:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0xA
   516  0000C2                     	ds	1
   517  0000C3                     i2c_int_handler@overrun_error:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0xB
   521  0000C3                     	ds	1
   522  0000C4                     i2c_int_handler@i2c_data:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0xC
   526  0000C4                     	ds	1
   527  0000C5                     i2c_int_handler@msg_to_send:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0xD
   531  0000C5                     	ds	1
   532  0000C6                     i2c_int_handler@msg_ready:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0xE
   536  0000C6                     	ds	1
   537  0000C7                     i2c_int_handler@data_read:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0xF
   541  0000C7                     	ds	1
   542  0000C8                     ??_InterruptHandlerHigh:
   543                           
   544                           ; 0 bytes @ 0x10
   545  0000C8                     	ds	15
   546  0000D7                     ?_in_high_int:
   547                           	opt stack 0
   548  0000D7                     ?___lwmod:
   549                           	opt stack 0
   550  0000D7                     i2c_configure_slave@addr:
   551                           	opt stack 0
   552  0000D7                     OpenADC@config2:
   553                           	opt stack 0
   554  0000D7                     OpenTimer0@config:
   555                           	opt stack 0
   556  0000D7                     Delay1KTCYx@unit:
   557                           	opt stack 0
   558  0000D7                     init_queue@qptr:
   559                           	opt stack 0
   560  0000D7                     check_msg@qptr:
   561                           	opt stack 0
   562  0000D7                     Handle_i2c_data_save@msg:
   563                           	opt stack 0
   564  0000D7                     start_i2c_slave_reply@msg:
   565                           	opt stack 0
   566  0000D7                     init_i2c@ic:
   567                           	opt stack 0
   568  0000D7                     init_uart_recv@uc:
   569                           	opt stack 0
   570  0000D7                     init_timer1_lthread@tptr:
   571                           	opt stack 0
   572  0000D7                     uart_lthread@uptr:
   573                           	opt stack 0
   574  0000D7                     ___lwmod@dividend:
   575                           	opt stack 0
   576  0000D7                     memcpy@d1:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1F
   580  0000D7                     	ds	1
   581  0000D8                     OpenADC@portconfig:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x20
   585  0000D8                     	ds	1
   586  0000D9                     ??_OpenADC:
   587  0000D9                     ??_start_i2c_slave_reply:
   588  0000D9                     ??_Handle_i2c_data_save:
   589  0000D9                     ??_init_queue:
   590  0000D9                     ??_check_msg:
   591  0000D9                     ?_in_low_int:
   592                           	opt stack 0
   593  0000D9                     uart_lthread@msgtype:
   594                           	opt stack 0
   595  0000D9                     ___lwmod@divisor:
   596                           	opt stack 0
   597  0000D9                     memcpy@s1:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x21
   601  0000D9                     	ds	1
   602  0000DA                     init_queue@i:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x22
   606  0000DA                     	ds	1
   607  0000DB                     ??_init_queues:
   608  0000DB                     ??___lwmod:
   609  0000DB                     ?_in_main:
   610                           	opt stack 0
   611  0000DB                     OpenADC@config:
   612                           	opt stack 0
   613  0000DB                     uart_lthread@length:
   614                           	opt stack 0
   615  0000DB                     memcpy@n:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x23
   619  0000DB                     	ds	1
   620  0000DC                     start_i2c_slave_reply@length:
   621                           	opt stack 0
   622  0000DC                     ___lwmod@counter:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x24
   626  0000DC                     	ds	1
   627  0000DD                     ??_block_on_To_msgqueues:
   628  0000DD                     ??_send_msg:
   629  0000DD                     ??_recv_msg:
   630  0000DD                     uart_lthread@msgbuffer:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x25
   634  0000DD                     	ds	1
   635  0000DE                     ToMainHigh_sendmsg@length:
   636                           	opt stack 0
   637  0000DE                     FromMainHigh_sendmsg@length:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x26
   641  0000DE                     	ds	1
   642  0000DF                     tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           
   649                           ; 0 bytes @ 0x27
   650                           
   651                           	psect	cstackCOMRAM
   652  000001                     __pcstackCOMRAM:
   653                           	opt stack 0
   654  000001                     ?_ReadTimer1:
   655                           	opt stack 0
   656  000001                     ReadUSART@data:
   657                           	opt stack 0
   658  000001                     WriteTimer1@timer1:
   659                           	opt stack 0
   660  000001                     i1memcpy@d1:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x0
   664  000001                     	ds	2
   665  000003                     ReadTimer1@timer:
   666                           	opt stack 0
   667  000003                     WriteTimer1@timer:
   668                           	opt stack 0
   669  000003                     i1memcpy@s1:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x2
   673  000003                     	ds	2
   674  000005                     i1memcpy@n:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x4
   678  000005                     	ds	2
   679  000007                     i1memcpy@d:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x6
   683  000007                     	ds	2
   684  000009                     i1memcpy@s:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x8
   688  000009                     	ds	2
   689  00000B                     i1send_msg@qptr:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0xA
   693  00000B                     	ds	2
   694  00000D                     i1send_msg@length:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0xC
   698  00000D                     	ds	1
   699  00000E                     i1send_msg@msgtype:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0xD
   703  00000E                     	ds	1
   704  00000F                     i1send_msg@data:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0xE
   708  00000F                     	ds	2
   709  000011                     ??i1_send_msg:
   710                           
   711                           ; 0 bytes @ 0x10
   712  000011                     	ds	1
   713  000012                     i1send_msg@tlength:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x11
   717  000012                     	ds	2
   718  000014                     i1send_msg@slot:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x13
   722  000014                     	ds	1
   723  000015                     i1send_msg@qmsg:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x14
   727  000015                     	ds	2
   728  000017                     ToMainLow_sendmsg@msgtype:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x16
   732  000017                     	ds	1
   733  000018                     ToMainLow_sendmsg@data:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x17
   737  000018                     	ds	2
   738  00001A                     ToMainLow_sendmsg@length:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x19
   742  00001A                     	ds	1
   743  00001B                     ??_timer1_int_handler:
   744  00001B                     ??_uart_recv_int_handler:
   745                           
   746                           ; 0 bytes @ 0x1A
   747  00001B                     	ds	1
   748  00001C                     timer1_int_handler@result:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x1B
   752  00001C                     	ds	2
   753  00001E                     ??_InterruptHandlerLow:
   754                           
   755                           ; 0 bytes @ 0x1D
   756  00001E                     	ds	17
   757  00002F                     ?_ReadADC:
   758                           	opt stack 0
   759  00002F                     ?i2_in_high_int:
   760                           	opt stack 0
   761  00002F                     handle_start@data_read:
   762                           	opt stack 0
   763  00002F                     WriteTimer0@timer0:
   764                           	opt stack 0
   765  00002F                     i2check_msg@qptr:
   766                           	opt stack 0
   767  00002F                     i2memcpy@d1:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x2E
   771  00002F                     	ds	2
   772  000031                     ??i2_check_msg:
   773  000031                     ?i2_in_low_int:
   774                           	opt stack 0
   775  000031                     WriteTimer0@timer:
   776                           	opt stack 0
   777  000031                     i2memcpy@s1:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x30
   781  000031                     	ds	2
   782  000033                     i2memcpy@n:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x32
   786  000033                     	ds	2
   787  000035                     i2memcpy@d:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x34
   791  000035                     	ds	2
   792  000037                     i2memcpy@s:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x36
   796  000037                     	ds	2
   797  000039                     i2send_msg@qptr:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x38
   801  000039                     	ds	2
   802  00003B                     i2send_msg@length:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x3A
   806  00003B                     	ds	1
   807  00003C                     i2send_msg@msgtype:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x3B
   811  00003C                     	ds	1
   812  00003D                     i2send_msg@data:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x3C
   816  00003D                     	ds	2
   817  00003F                     ??i2_send_msg:
   818                           
   819                           ; 0 bytes @ 0x3E
   820  00003F                     	ds	1
   821  000040                     i2ToMainLow_sendmsg@msgtype:
   822                           	opt stack 0
   823  000040                     i2ToMainHigh_sendmsg@msgtype:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x3F
   827  000040                     	ds	1
   828  000041                     i2ToMainLow_sendmsg@data:
   829                           	opt stack 0
   830  000041                     i2ToMainHigh_sendmsg@data:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x40
   834  000041                     	ds	2
   835  000043                     i2ToMainLow_sendmsg@length:
   836                           	opt stack 0
   837  000043                     i2ToMainHigh_sendmsg@length:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x42
   841  000043                     	ds	1
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 187 in file "../src/main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  ic             40   25[BANK2 ] struct __i2c_comm
   859 ;;  msgbuffer      11    1[BANK2 ] unsigned char [11]
   860 ;;  uc              5   18[BANK2 ] struct __uart_comm
   861 ;;  t1thread_dat    2   16[BANK2 ] struct __timer1_thread_s
   862 ;;  t0thread_dat    2   14[BANK2 ] struct __timer0_thread_s
   863 ;;  uthread_data    2   12[BANK2 ] struct __uart_thread_str
   864 ;;  msgtype         1   24[BANK2 ] unsigned char 
   865 ;;  length          1   23[BANK2 ] char 
   866 ;;  last_reg_rec    1    0[BANK2 ] unsigned char 
   867 ;;  i               1    0        unsigned char 
   868 ;;  c               1    0        unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0      65       0
   880 ;;      Temps:          0       0       2       0       0
   881 ;;      Totals:         0       0       2      65       0
   882 ;;Total ram usage:       67 bytes
   883 ;; Hardware stack levels required when called:   14
   884 ;; This function calls:
   885 ;;		_ConvertADC
   886 ;;		_Handle_i2c_data_save
   887 ;;		_OpenADC
   888 ;;		_OpenTimer0
   889 ;;		_ToMainHigh_recvmsg
   890 ;;		_ToMainLow_recvmsg
   891 ;;		_block_on_To_msgqueues
   892 ;;		_enable_interrupts
   893 ;;		_i2c_configure_slave
   894 ;;		_init_i2c
   895 ;;		_init_queues
   896 ;;		_init_timer1_lthread
   897 ;;		_init_uart_recv
   898 ;;		_start_i2c_slave_reply
   899 ;;		_timer0_lthread
   900 ;;		_timer1_lthread
   901 ;;		_uart_lthread
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text0
   908  0006F8                     __ptext0:
   909                           	opt stack 0
   910  0006F8                     _main:
   911                           	opt stack 16
   912                           
   913                           ;main.c: 188: char c;
   914                           ;main.c: 189: signed char length;
   915                           ;main.c: 190: unsigned char msgtype;
   916                           ;main.c: 191: unsigned char last_reg_recvd;
   917                           ;main.c: 192: uart_comm uc;
   918                           ;main.c: 193: i2c_comm ic;
   919                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   920                           ;main.c: 195: unsigned char i;
   921                           ;main.c: 196: uart_thread_struct uthread_data;
   922                           ;main.c: 197: timer1_thread_struct t1thread_data;
   923                           ;main.c: 198: timer0_thread_struct t0thread_data;
   924                           ;main.c: 206: OSCCON = 0x82;
   925                           
   926                           ;incstack = 0
   927  0006F8  0E82               	movlw	130
   928  0006FA  6ED3               	movwf	4051,c	;volatile
   929                           
   930                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   931  0006FC  9C9B               	bcf	3995,6,c	;volatile
   932                           
   933                           ;main.c: 225: init_uart_recv(&uc);
   934  0006FE  0102               	movlb	2	; () banked
   935  000700  0E02               	movlw	high main@uc
   936  000702  0100               	movlb	0	; () banked
   937  000704  0100               	movlb	0	; () banked
   938  000706  6FD8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   939  000708  0102               	movlb	2	; () banked
   940  00070A  0E12               	movlw	low main@uc
   941  00070C  0100               	movlb	0	; () banked
   942  00070E  0100               	movlb	0	; () banked
   943  000710  6FD7               	movwf	init_uart_recv@uc& (0+255),b
   944  000712  ECA2  F00D         	call	_init_uart_recv	;wreg free
   945                           
   946                           ;main.c: 228: init_i2c(&ic);
   947  000716  0102               	movlb	2	; () banked
   948  000718  0E02               	movlw	high main@ic
   949  00071A  0100               	movlb	0	; () banked
   950  00071C  0100               	movlb	0	; () banked
   951  00071E  6FD8               	movwf	(init_i2c@ic+1)& (0+255),b
   952  000720  0102               	movlb	2	; () banked
   953  000722  0E19               	movlw	low main@ic
   954  000724  0100               	movlb	0	; () banked
   955  000726  0100               	movlb	0	; () banked
   956  000728  6FD7               	movwf	init_i2c@ic& (0+255),b
   957  00072A  EC51  F007         	call	_init_i2c	;wreg free
   958                           
   959                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   960  00072E  0102               	movlb	2	; () banked
   961  000730  0E02               	movlw	high main@t1thread_data
   962  000732  0100               	movlb	0	; () banked
   963  000734  0100               	movlb	0	; () banked
   964  000736  6FD8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   965  000738  0102               	movlb	2	; () banked
   966  00073A  0E10               	movlw	low main@t1thread_data
   967  00073C  0100               	movlb	0	; () banked
   968  00073E  0100               	movlb	0	; () banked
   969  000740  6FD7               	movwf	init_timer1_lthread@tptr& (0+255),b
   970  000742  ECCB  F00D         	call	_init_timer1_lthread	;wreg free
   971                           
   972                           ;main.c: 234: init_queues();
   973  000746  ECD8  F00A         	call	_init_queues	;wreg free
   974                           
   975                           ;main.c: 238: TRISB = 0x0;
   976  00074A  0E00               	movlw	0
   977  00074C  6E93               	movwf	3987,c	;volatile
   978                           
   979                           ;main.c: 239: LATB = 0x0;
   980  00074E  0E00               	movlw	0
   981  000750  6E8A               	movwf	3978,c	;volatile
   982                           
   983                           ;main.c: 252: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11111111);
   984  000752  0E9F               	movlw	159
   985  000754  EC2E  F00D         	call	_OpenTimer0
   986                           
   987                           ;main.c: 253: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
   988  000758  0101               	movlb	1	; () banked
   989  00075A  6FC1               	movwf	??_main& (0+255),b
   990  00075C  0E84               	movlw	132
   991  00075E  0100               	movlb	0	; () banked
   992  000760  0100               	movlb	0	; () banked
   993  000762  6FD7               	movwf	OpenADC@config2& (0+255),b
   994  000764  0101               	movlb	1	; () banked
   995  000766  51C1               	movf	??_main& (0+255),w,b
   996  000768  0101               	movlb	1	; () banked
   997  00076A  6FC2               	movwf	(??_main+1)& (0+255),b
   998  00076C  0EFF               	movlw	255
   999  00076E  0100               	movlb	0	; () banked
  1000  000770  0100               	movlb	0	; () banked
  1001  000772  6FD8               	movwf	OpenADC@portconfig& (0+255),b
  1002  000774  0101               	movlb	1	; () banked
  1003  000776  51C2               	movf	(??_main+1)& (0+255),w,b
  1004  000778  0E8F               	movlw	143
  1005  00077A  ECA3  F009         	call	_OpenADC
  1006                           
  1007                           ;main.c: 254: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  1008  00077E  9C9E               	bcf	3998,6,c	;volatile
  1009  000780  8CF2               	bsf	intcon,6,c	;volatile
  1010  000782  8C9D               	bsf	3997,6,c	;volatile
  1011                           
  1012                           ;main.c: 270: IPR1bits.TMR1IP = 0;
  1013  000784  909F               	bcf	3999,0,c	;volatile
  1014                           
  1015                           ;main.c: 272: IPR1bits.RCIP = 0;
  1016  000786  9A9F               	bcf	3999,5,c	;volatile
  1017                           
  1018                           ;main.c: 274: IPR1bits.SSPIP = 1;
  1019  000788  869F               	bsf	3999,3,c	;volatile
  1020                           
  1021                           ;main.c: 283: i2c_configure_slave(0x9E);
  1022  00078A  0E9E               	movlw	158
  1023  00078C  EC43  F00D         	call	_i2c_configure_slave
  1024                           
  1025                           ;main.c: 298: PIE1bits.SSPIE = 1;
  1026  000790  869D               	bsf	3997,3,c	;volatile
  1027                           
  1028                           ;main.c: 316: enable_interrupts();
  1029  000792  EC03  F00E         	call	_enable_interrupts	;wreg free
  1030  000796                     l3042:
  1031                           
  1032                           ;main.c: 340: block_on_To_msgqueues();
  1033  000796  ECE5  F009         	call	_block_on_To_msgqueues	;wreg free
  1034                           
  1035                           ;main.c: 347: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1036  00079A  0102               	movlb	2	; () banked
  1037  00079C  0E02               	movlw	high main@msgtype
  1038  00079E  0101               	movlb	1	; () banked
  1039  0007A0  0101               	movlb	1	; () banked
  1040  0007A2  6FB3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1041  0007A4  0102               	movlb	2	; () banked
  1042  0007A6  0E18               	movlw	low main@msgtype
  1043  0007A8  0101               	movlb	1	; () banked
  1044  0007AA  0101               	movlb	1	; () banked
  1045  0007AC  6FB2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1046  0007AE  0102               	movlb	2	; () banked
  1047  0007B0  0E02               	movlw	high main@msgbuffer
  1048  0007B2  0101               	movlb	1	; () banked
  1049  0007B4  0101               	movlb	1	; () banked
  1050  0007B6  6FB5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1051  0007B8  0102               	movlb	2	; () banked
  1052  0007BA  0E01               	movlw	low main@msgbuffer
  1053  0007BC  0101               	movlb	1	; () banked
  1054  0007BE  0101               	movlb	1	; () banked
  1055  0007C0  6FB4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1056  0007C2  0E0A               	movlw	10
  1057  0007C4  EC16  F00C         	call	_ToMainHigh_recvmsg
  1058  0007C8  0102               	movlb	2	; () banked
  1059  0007CA  0102               	movlb	2	; () banked
  1060  0007CC  6F17               	movwf	main@length& (0+255),b
  1061                           
  1062                           ; BSR set to: 2
  1063                           ;main.c: 348: if (length < 0) {
  1064  0007CE  0102               	movlb	2	; () banked
  1065  0007D0  0102               	movlb	2	; () banked
  1066  0007D2  BF17               	btfsc	main@length& (0+255),7,b
  1067  0007D4  D05B               	goto	l3060
  1068  0007D6  D048               	goto	l3058
  1069  0007D8                     l3050:
  1070                           
  1071                           ; BSR set to: 2
  1072                           ;main.c: 356: {
  1073                           ;main.c: 357: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1074  0007D8  0102               	movlb	2	; () banked
  1075  0007DA  0E02               	movlw	high main@t0thread_data
  1076  0007DC  0101               	movlb	1	; () banked
  1077  0007DE  0101               	movlb	1	; () banked
  1078  0007E0  6FB5               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1079  0007E2  0102               	movlb	2	; () banked
  1080  0007E4  0E0E               	movlw	low main@t0thread_data
  1081  0007E6  0101               	movlb	1	; () banked
  1082  0007E8  0101               	movlb	1	; () banked
  1083  0007EA  6FB4               	movwf	timer0_lthread@tptr& (0+255),b
  1084  0007EC  0102               	movlb	2	; () banked
  1085  0007EE  0101               	movlb	1	; () banked
  1086  0007F0  C218  F1B6         	movff	main@msgtype,timer0_lthread@msgtype
  1087  0007F4  0101               	movlb	1	; () banked
  1088  0007F6  0101               	movlb	1	; () banked
  1089  0007F8  6BB7               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1090  0007FA  0102               	movlb	2	; () banked
  1091  0007FC  0102               	movlb	2	; () banked
  1092  0007FE  5117               	movf	main@length& (0+255),w,b
  1093  000800  0101               	movlb	1	; () banked
  1094  000802  0101               	movlb	1	; () banked
  1095  000804  6FB8               	movwf	timer0_lthread@length& (0+255),b
  1096  000806  0101               	movlb	1	; () banked
  1097  000808  6BB9               	clrf	(timer0_lthread@length+1)& (0+255),b
  1098  00080A  0101               	movlb	1	; () banked
  1099  00080C  BFB8               	btfsc	timer0_lthread@length& (0+255),7,b
  1100  00080E  07B9               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1101  000810  0102               	movlb	2	; () banked
  1102  000812  0E02               	movlw	high main@msgbuffer
  1103  000814  0101               	movlb	1	; () banked
  1104  000816  0101               	movlb	1	; () banked
  1105  000818  6FBB               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1106  00081A  0102               	movlb	2	; () banked
  1107  00081C  0E01               	movlw	low main@msgbuffer
  1108  00081E  0101               	movlb	1	; () banked
  1109  000820  0101               	movlb	1	; () banked
  1110  000822  6FBA               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1111  000824  EC24  F00A         	call	_timer0_lthread	;wreg free
  1112                           
  1113                           ;main.c: 358: break;
  1114  000828  D031               	goto	l3060
  1115  00082A                     l113:
  1116                           
  1117                           ;main.c: 361: case 41:
  1118                           ;main.c: 362: {
  1119                           ;main.c: 365: last_reg_recvd = msgbuffer[0];
  1120  00082A  C201  F200         	movff	main@msgbuffer,main@last_reg_recvd
  1121                           
  1122                           ;main.c: 366: break;
  1123  00082E  D02E               	goto	l3060
  1124  000830                     l3052:
  1125                           
  1126                           ;main.c: 369: {
  1127                           ;main.c: 378: start_i2c_slave_reply(6, msgbuffer);
  1128  000830  0102               	movlb	2	; () banked
  1129  000832  0E02               	movlw	high main@msgbuffer
  1130  000834  0100               	movlb	0	; () banked
  1131  000836  0100               	movlb	0	; () banked
  1132  000838  6FD8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1133  00083A  0102               	movlb	2	; () banked
  1134  00083C  0E01               	movlw	low main@msgbuffer
  1135  00083E  0100               	movlb	0	; () banked
  1136  000840  0100               	movlb	0	; () banked
  1137  000842  6FD7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1138  000844  0E06               	movlw	6
  1139  000846  ECCA  F004         	call	_start_i2c_slave_reply
  1140                           
  1141                           ;main.c: 379: break;
  1142  00084A  D020               	goto	l3060
  1143  00084C                     l3054:
  1144                           
  1145                           ;main.c: 382: {
  1146                           ;main.c: 383: Handle_i2c_data_save(1,msgbuffer);
  1147  00084C  0102               	movlb	2	; () banked
  1148  00084E  0E02               	movlw	high main@msgbuffer
  1149  000850  0100               	movlb	0	; () banked
  1150  000852  0100               	movlb	0	; () banked
  1151  000854  6FD8               	movwf	(Handle_i2c_data_save@msg+1)& (0+255),b
  1152  000856  0102               	movlb	2	; () banked
  1153  000858  0E01               	movlw	low main@msgbuffer
  1154  00085A  0100               	movlb	0	; () banked
  1155  00085C  0100               	movlb	0	; () banked
  1156  00085E  6FD7               	movwf	Handle_i2c_data_save@msg& (0+255),b
  1157  000860  0E01               	movlw	1
  1158  000862  EC12  F009         	call	_Handle_i2c_data_save
  1159                           
  1160                           ;main.c: 384: break;
  1161  000866  D012               	goto	l3060
  1162  000868                     l3058:
  1163  000868  0102               	movlb	2	; () banked
  1164  00086A  0102               	movlb	2	; () banked
  1165  00086C  5118               	movf	main@msgtype& (0+255),w,b
  1166                           
  1167                           ; Switch size 1, requested type "space"
  1168                           ; Number of cases is 5, Range of values is 10 to 47
  1169                           ; switch strategies available:
  1170                           ; Name         Instructions Cycles
  1171                           ; simple_byte           16     9 (average)
  1172                           ;	Chosen strategy is simple_byte
  1173  00086E  0A0A               	xorlw	10	; case 10
  1174  000870  B4D8               	btfsc	status,2,c
  1175  000872  D7B2               	goto	l3050
  1176  000874  0A22               	xorlw	34	; case 40
  1177  000876  B4D8               	btfsc	status,2,c
  1178  000878  D7D8               	goto	l113
  1179  00087A  0A01               	xorlw	1	; case 41
  1180  00087C  B4D8               	btfsc	status,2,c
  1181  00087E  D7D5               	goto	l113
  1182  000880  0A03               	xorlw	3	; case 42
  1183  000882  B4D8               	btfsc	status,2,c
  1184  000884  D7D5               	goto	l3052
  1185  000886  0A05               	xorlw	5	; case 47
  1186  000888  B4D8               	btfsc	status,2,c
  1187  00088A  D7E0               	goto	l3054
  1188  00088C                     l3060:
  1189                           
  1190                           ;main.c: 392: }
  1191                           ;main.c: 395: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1192  00088C  0102               	movlb	2	; () banked
  1193  00088E  0E02               	movlw	high main@msgtype
  1194  000890  0101               	movlb	1	; () banked
  1195  000892  0101               	movlb	1	; () banked
  1196  000894  6FB3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1197  000896  0102               	movlb	2	; () banked
  1198  000898  0E18               	movlw	low main@msgtype
  1199  00089A  0101               	movlb	1	; () banked
  1200  00089C  0101               	movlb	1	; () banked
  1201  00089E  6FB2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1202  0008A0  0102               	movlb	2	; () banked
  1203  0008A2  0E02               	movlw	high main@msgbuffer
  1204  0008A4  0101               	movlb	1	; () banked
  1205  0008A6  0101               	movlb	1	; () banked
  1206  0008A8  6FB5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1207  0008AA  0102               	movlb	2	; () banked
  1208  0008AC  0E01               	movlw	low main@msgbuffer
  1209  0008AE  0101               	movlb	1	; () banked
  1210  0008B0  0101               	movlb	1	; () banked
  1211  0008B2  6FB4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1212  0008B4  0E0A               	movlw	10
  1213  0008B6  ECF5  F00B         	call	_ToMainLow_recvmsg
  1214  0008BA  0102               	movlb	2	; () banked
  1215  0008BC  0102               	movlb	2	; () banked
  1216  0008BE  6F17               	movwf	main@length& (0+255),b
  1217                           
  1218                           ; BSR set to: 2
  1219                           ;main.c: 396: if (length < 0) {
  1220  0008C0  0102               	movlb	2	; () banked
  1221  0008C2  0102               	movlb	2	; () banked
  1222  0008C4  BF17               	btfsc	main@length& (0+255),7,b
  1223  0008C6  D767               	goto	l3042
  1224  0008C8  D055               	goto	l3074
  1225  0008CA                     l3066:
  1226                           
  1227                           ; BSR set to: 2
  1228                           ;main.c: 404: {
  1229                           ;main.c: 405: ConvertADC();
  1230  0008CA  EC0A  F00E         	call	_ConvertADC	;wreg free
  1231                           
  1232                           ;main.c: 406: break;
  1233  0008CE  D763               	goto	l3042
  1234  0008D0                     l3068:
  1235                           
  1236                           ;main.c: 409: {
  1237                           ;main.c: 410: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1238  0008D0  0102               	movlb	2	; () banked
  1239  0008D2  0E02               	movlw	high main@t1thread_data
  1240  0008D4  0101               	movlb	1	; () banked
  1241  0008D6  0101               	movlb	1	; () banked
  1242  0008D8  6FB5               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1243  0008DA  0102               	movlb	2	; () banked
  1244  0008DC  0E10               	movlw	low main@t1thread_data
  1245  0008DE  0101               	movlb	1	; () banked
  1246  0008E0  0101               	movlb	1	; () banked
  1247  0008E2  6FB4               	movwf	timer1_lthread@tptr& (0+255),b
  1248  0008E4  0102               	movlb	2	; () banked
  1249  0008E6  0101               	movlb	1	; () banked
  1250  0008E8  C218  F1B6         	movff	main@msgtype,timer1_lthread@msgtype
  1251  0008EC  0101               	movlb	1	; () banked
  1252  0008EE  0101               	movlb	1	; () banked
  1253  0008F0  6BB7               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1254  0008F2  0102               	movlb	2	; () banked
  1255  0008F4  0102               	movlb	2	; () banked
  1256  0008F6  5117               	movf	main@length& (0+255),w,b
  1257  0008F8  0101               	movlb	1	; () banked
  1258  0008FA  0101               	movlb	1	; () banked
  1259  0008FC  6FB8               	movwf	timer1_lthread@length& (0+255),b
  1260  0008FE  0101               	movlb	1	; () banked
  1261  000900  6BB9               	clrf	(timer1_lthread@length+1)& (0+255),b
  1262  000902  0101               	movlb	1	; () banked
  1263  000904  BFB8               	btfsc	timer1_lthread@length& (0+255),7,b
  1264  000906  07B9               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1265  000908  0102               	movlb	2	; () banked
  1266  00090A  0E02               	movlw	high main@msgbuffer
  1267  00090C  0101               	movlb	1	; () banked
  1268  00090E  0101               	movlb	1	; () banked
  1269  000910  6FBB               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1270  000912  0102               	movlb	2	; () banked
  1271  000914  0E01               	movlw	low main@msgbuffer
  1272  000916  0101               	movlb	1	; () banked
  1273  000918  0101               	movlb	1	; () banked
  1274  00091A  6FBA               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1275  00091C  EC9F  F00A         	call	_timer1_lthread	;wreg free
  1276                           
  1277                           ;main.c: 411: break;
  1278  000920  D73A               	goto	l3042
  1279  000922                     l3070:
  1280                           
  1281                           ;main.c: 414: case 31:
  1282                           ;main.c: 415: {
  1283                           ;main.c: 416: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1284  000922  0102               	movlb	2	; () banked
  1285  000924  0E02               	movlw	high main@uthread_data
  1286  000926  0100               	movlb	0	; () banked
  1287  000928  0100               	movlb	0	; () banked
  1288  00092A  6FD8               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1289  00092C  0102               	movlb	2	; () banked
  1290  00092E  0E0C               	movlw	low main@uthread_data
  1291  000930  0100               	movlb	0	; () banked
  1292  000932  0100               	movlb	0	; () banked
  1293  000934  6FD7               	movwf	uart_lthread@uptr& (0+255),b
  1294  000936  0102               	movlb	2	; () banked
  1295  000938  0100               	movlb	0	; () banked
  1296  00093A  C218  F0D9         	movff	main@msgtype,uart_lthread@msgtype
  1297  00093E  0100               	movlb	0	; () banked
  1298  000940  0100               	movlb	0	; () banked
  1299  000942  6BDA               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1300  000944  0102               	movlb	2	; () banked
  1301  000946  0102               	movlb	2	; () banked
  1302  000948  5117               	movf	main@length& (0+255),w,b
  1303  00094A  0100               	movlb	0	; () banked
  1304  00094C  0100               	movlb	0	; () banked
  1305  00094E  6FDB               	movwf	uart_lthread@length& (0+255),b
  1306  000950  0100               	movlb	0	; () banked
  1307  000952  6BDC               	clrf	(uart_lthread@length+1)& (0+255),b
  1308  000954  0100               	movlb	0	; () banked
  1309  000956  BFDB               	btfsc	uart_lthread@length& (0+255),7,b
  1310  000958  07DC               	decf	(uart_lthread@length+1)& (0+255),f,b
  1311  00095A  0102               	movlb	2	; () banked
  1312  00095C  0E02               	movlw	high main@msgbuffer
  1313  00095E  0100               	movlb	0	; () banked
  1314  000960  0100               	movlb	0	; () banked
  1315  000962  6FDE               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1316  000964  0102               	movlb	2	; () banked
  1317  000966  0E01               	movlw	low main@msgbuffer
  1318  000968  0100               	movlb	0	; () banked
  1319  00096A  0100               	movlb	0	; () banked
  1320  00096C  6FDD               	movwf	uart_lthread@msgbuffer& (0+255),b
  1321  00096E  EC77  F00C         	call	_uart_lthread	;wreg free
  1322                           
  1323                           ;main.c: 417: break;
  1324  000972  D711               	goto	l3042
  1325  000974                     l3074:
  1326  000974  0102               	movlb	2	; () banked
  1327  000976  0102               	movlb	2	; () banked
  1328  000978  5118               	movf	main@msgtype& (0+255),w,b
  1329                           
  1330                           ; Switch size 1, requested type "space"
  1331                           ; Number of cases is 4, Range of values is 11 to 48
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte           13     7 (average)
  1335                           ;	Chosen strategy is simple_byte
  1336  00097A  0A0B               	xorlw	11	; case 11
  1337  00097C  B4D8               	btfsc	status,2,c
  1338  00097E  D7A8               	goto	l3068
  1339  000980  0A15               	xorlw	21	; case 30
  1340  000982  B4D8               	btfsc	status,2,c
  1341  000984  D7CE               	goto	l3070
  1342  000986  0A01               	xorlw	1	; case 31
  1343  000988  B4D8               	btfsc	status,2,c
  1344  00098A  D7CB               	goto	l3070
  1345  00098C  0A2F               	xorlw	47	; case 48
  1346  00098E  B4D8               	btfsc	status,2,c
  1347  000990  D79C               	goto	l3066
  1348  000992  D701               	goto	l3042
  1349  000994                     __end_of_main:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           intcon	equ	0xFF2
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function _uart_lthread *****************
  1361 ;; Defined at:
  1362 ;;		line 9 in file "../src/uart_thread.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  uptr            2   31[BANK0 ] PTR struct __uart_thread
  1365 ;;		 -> main@uthread_data(2), 
  1366 ;;  msgtype         2   33[BANK0 ] int 
  1367 ;;  length          2   35[BANK0 ] int 
  1368 ;;  msgbuffer       2   37[BANK0 ] PTR unsigned char 
  1369 ;;		 -> main@msgbuffer(11), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  2   31[BANK0 ] int 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1381 ;;      Params:         0       8       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0
  1384 ;;      Totals:         0       8       0       0       0
  1385 ;;Total ram usage:        8 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:   10
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text1
  1396  0018EE                     __ptext1:
  1397                           	opt stack 0
  1398  0018EE                     _uart_lthread:
  1399                           	opt stack 19
  1400                           
  1401                           ;uart_thread.c: 10: if (msgtype == 30) {
  1402                           
  1403                           ; BSR set to: 2
  1404                           ;incstack = 0
  1405  0018EE  0100               	movlb	0	; () banked
  1406  0018F0  0100               	movlb	0	; () banked
  1407  0018F2  51D9               	movf	uart_lthread@msgtype& (0+255),w,b
  1408  0018F4  0A1E               	xorlw	30
  1409  0018F6  11DA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1410  0018F8  B4D8               	btfsc	status,2,c
  1411  0018FA  0012               	return	
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1415                           
  1416                           ; BSR set to: 0
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;uart_thread.c: 11: }
  1420  0018FC  0100               	movlb	0	; () banked
  1421  0018FE  0100               	movlb	0	; () banked
  1422  001900  51D9               	movf	uart_lthread@msgtype& (0+255),w,b
  1423  001902  0A1F               	xorlw	31
  1424  001904  11DA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1425  001906  A4D8               	btfss	status,2,c
  1426  001908  0012               	return	
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1430  00190A  0100               	movlb	0	; () banked
  1431  00190C  0100               	movlb	0	; () banked
  1432  00190E  51DB               	movf	uart_lthread@length& (0+255),w,b
  1433  001910  0100               	movlb	0	; () banked
  1434  001912  0100               	movlb	0	; () banked
  1435  001914  25DD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1436  001916  6ED9               	movwf	fsr2l,c
  1437  001918  0100               	movlb	0	; () banked
  1438  00191A  0100               	movlb	0	; () banked
  1439  00191C  51DC               	movf	(uart_lthread@length+1)& (0+255),w,b
  1440  00191E  0100               	movlb	0	; () banked
  1441  001920  0100               	movlb	0	; () banked
  1442  001922  21DE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1443  001924  6EDA               	movwf	fsr2h,c
  1444  001926  0E00               	movlw	0
  1445  001928  6EDF               	movwf	indf2,c
  1446  00192A  0012               	return	
  1447  00192C                     __end_of_uart_lthread:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           intcon	equ	0xFF2
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           indf2	equ	0xFDF
  1457                           fsr2h	equ	0xFDA
  1458                           fsr2l	equ	0xFD9
  1459                           status	equ	0xFD8
  1460                           
  1461 ;; *************** function _timer1_lthread *****************
  1462 ;; Defined at:
  1463 ;;		line 14 in file "../src/timer1_thread.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  tptr            2   18[BANK1 ] PTR struct __timer1_thre
  1466 ;;		 -> main@t1thread_data(2), 
  1467 ;;  msgtype         2   20[BANK1 ] int 
  1468 ;;  length          2   22[BANK1 ] int 
  1469 ;;  msgbuffer       2   24[BANK1 ] PTR unsigned char 
  1470 ;;		 -> main@msgbuffer(11), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  retval          1   27[BANK1 ] char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2   18[BANK1 ] int 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1482 ;;      Params:         0       0       8       0       0
  1483 ;;      Locals:         0       0       1       0       0
  1484 ;;      Temps:          0       0       1       0       0
  1485 ;;      Totals:         0       0      10       0       0
  1486 ;;Total ram usage:       10 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:   13
  1489 ;; This function calls:
  1490 ;;		_FromMainHigh_sendmsg
  1491 ;;		___lwmod
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text2
  1498  00153E                     __ptext2:
  1499                           	opt stack 0
  1500  00153E                     _timer1_lthread:
  1501                           	opt stack 16
  1502                           
  1503                           ;timer1_thread.c: 15: signed char retval;
  1504                           ;timer1_thread.c: 17: tptr->msgcount++;
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;incstack = 0
  1508  00153E  C1B4  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1509  001542  C1B5  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1510  001546  2ADE               	incf	postinc2,f,c
  1511  001548  0E00               	movlw	0
  1512  00154A  22DD               	addwfc	postdec2,f,c
  1513                           
  1514                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1515  00154C  C1B4  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1516  001550  C1B5  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1517  001554  0100               	movlb	0	; () banked
  1518  001556  CFDE F0D7          	movff	postinc2,___lwmod@dividend
  1519  00155A  0100               	movlb	0	; () banked
  1520  00155C  CFDD F0D8          	movff	postdec2,___lwmod@dividend+1
  1521  001560  0E00               	movlw	0
  1522  001562  0100               	movlb	0	; () banked
  1523  001564  0100               	movlb	0	; () banked
  1524  001566  6FDA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1525  001568  0E0A               	movlw	10
  1526  00156A  0100               	movlb	0	; () banked
  1527  00156C  6FD9               	movwf	___lwmod@divisor& (0+255),b
  1528  00156E  EC5E  F009         	call	___lwmod	;wreg free
  1529  001572  0100               	movlb	0	; () banked
  1530  001574  0100               	movlb	0	; () banked
  1531  001576  51D7               	movf	?___lwmod& (0+255),w,b
  1532  001578  0A09               	xorlw	9
  1533  00157A  0100               	movlb	0	; () banked
  1534  00157C  11D8               	iorwf	(?___lwmod+1)& (0+255),w,b
  1535  00157E  A4D8               	btfss	status,2,c
  1536  001580  0012               	return	
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1540  001582  0101               	movlb	1	; () banked
  1541  001584  6FBC               	movwf	??_timer1_lthread& (0+255),b
  1542  001586  0E14               	movlw	20
  1543  001588  0101               	movlb	1	; () banked
  1544  00158A  0101               	movlb	1	; () banked
  1545  00158C  6FB1               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1546  00158E  0101               	movlb	1	; () banked
  1547  001590  51BC               	movf	??_timer1_lthread& (0+255),w,b
  1548  001592  0101               	movlb	1	; () banked
  1549  001594  0101               	movlb	1	; () banked
  1550  001596  C1B5  F1B3         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1551  00159A  0101               	movlb	1	; () banked
  1552  00159C  0101               	movlb	1	; () banked
  1553  00159E  C1B4  F1B2         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1554  0015A2  0E02               	movlw	2
  1555  0015A4  EC96  F00C         	call	_FromMainHigh_sendmsg
  1556  0015A8  0101               	movlb	1	; () banked
  1557  0015AA  0101               	movlb	1	; () banked
  1558  0015AC  6FBD               	movwf	timer1_lthread@retval& (0+255),b
  1559  0015AE  0012               	return	
  1560  0015B0                     __end_of_timer1_lthread:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           indf2	equ	0xFDF
  1570                           postinc2	equ	0xFDE
  1571                           postdec2	equ	0xFDD
  1572                           fsr2h	equ	0xFDA
  1573                           fsr2l	equ	0xFD9
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function ___lwmod *****************
  1577 ;; Defined at:
  1578 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  dividend        2   31[BANK0 ] unsigned int 
  1581 ;;  divisor         2   33[BANK0 ] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  counter         1   36[BANK0 ] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  2   31[BANK0 ] unsigned int 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1593 ;;      Params:         0       4       0       0       0
  1594 ;;      Locals:         0       1       0       0       0
  1595 ;;      Temps:          0       1       0       0       0
  1596 ;;      Totals:         0       6       0       0       0
  1597 ;;Total ram usage:        6 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:   10
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_timer1_lthread
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text3
  1608  0012BC                     __ptext3:
  1609                           	opt stack 0
  1610  0012BC                     ___lwmod:
  1611                           	opt stack 18
  1612                           
  1613                           ;incstack = 0
  1614  0012BC  0100               	movlb	0	; () banked
  1615  0012BE  0100               	movlb	0	; () banked
  1616  0012C0  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1617  0012C2  11D9               	iorwf	___lwmod@divisor& (0+255),w,b
  1618  0012C4  B4D8               	btfsc	status,2,c
  1619  0012C6  D03A               	goto	l1012
  1620                           
  1621                           ; BSR set to: 0
  1622  0012C8  0100               	movlb	0	; () banked
  1623  0012CA  6FDB               	movwf	??___lwmod& (0+255),b
  1624  0012CC  0E01               	movlw	1
  1625  0012CE  0100               	movlb	0	; () banked
  1626  0012D0  0100               	movlb	0	; () banked
  1627  0012D2  6FDC               	movwf	___lwmod@counter& (0+255),b
  1628  0012D4  0100               	movlb	0	; () banked
  1629  0012D6  51DB               	movf	??___lwmod& (0+255),w,b
  1630  0012D8  D009               	goto	l3396
  1631  0012DA                     l3394:
  1632                           
  1633                           ; BSR set to: 0
  1634  0012DA  0100               	movlb	0	; () banked
  1635  0012DC  0100               	movlb	0	; () banked
  1636  0012DE  0100               	movlb	0	; () banked
  1637  0012E0  90D8               	bcf	status,0,c
  1638  0012E2  37D9               	rlcf	___lwmod@divisor& (0+255),f,b
  1639  0012E4  37DA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1640  0012E6  0100               	movlb	0	; () banked
  1641  0012E8  0100               	movlb	0	; () banked
  1642  0012EA  2BDC               	incf	___lwmod@counter& (0+255),f,b
  1643  0012EC                     l3396:
  1644                           
  1645                           ; BSR set to: 0
  1646  0012EC  0100               	movlb	0	; () banked
  1647  0012EE  0100               	movlb	0	; () banked
  1648  0012F0  AFDA               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1649  0012F2  D7F3               	goto	l3394
  1650  0012F4                     l3398:
  1651                           
  1652                           ; BSR set to: 0
  1653  0012F4  0100               	movlb	0	; () banked
  1654  0012F6  0100               	movlb	0	; () banked
  1655  0012F8  51D9               	movf	___lwmod@divisor& (0+255),w,b
  1656  0012FA  0100               	movlb	0	; () banked
  1657  0012FC  0100               	movlb	0	; () banked
  1658  0012FE  5DD7               	subwf	___lwmod@dividend& (0+255),w,b
  1659  001300  0100               	movlb	0	; () banked
  1660  001302  0100               	movlb	0	; () banked
  1661  001304  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1662  001306  0100               	movlb	0	; () banked
  1663  001308  0100               	movlb	0	; () banked
  1664  00130A  59D8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1665  00130C  A0D8               	btfss	status,0,c
  1666  00130E  D00C               	goto	l3402
  1667                           
  1668                           ; BSR set to: 0
  1669  001310  0100               	movlb	0	; () banked
  1670  001312  0100               	movlb	0	; () banked
  1671  001314  51D9               	movf	___lwmod@divisor& (0+255),w,b
  1672  001316  0100               	movlb	0	; () banked
  1673  001318  0100               	movlb	0	; () banked
  1674  00131A  5FD7               	subwf	___lwmod@dividend& (0+255),f,b
  1675  00131C  0100               	movlb	0	; () banked
  1676  00131E  0100               	movlb	0	; () banked
  1677  001320  51DA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1678  001322  0100               	movlb	0	; () banked
  1679  001324  0100               	movlb	0	; () banked
  1680  001326  5BD8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1681  001328                     l3402:
  1682                           
  1683                           ; BSR set to: 0
  1684  001328  0100               	movlb	0	; () banked
  1685  00132A  0100               	movlb	0	; () banked
  1686  00132C  0100               	movlb	0	; () banked
  1687  00132E  90D8               	bcf	status,0,c
  1688  001330  33DA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1689  001332  33D9               	rrcf	___lwmod@divisor& (0+255),f,b
  1690                           
  1691                           ; BSR set to: 0
  1692  001334  0100               	movlb	0	; () banked
  1693  001336  0100               	movlb	0	; () banked
  1694  001338  2FDC               	decfsz	___lwmod@counter& (0+255),f,b
  1695  00133A  D7DC               	goto	l3398
  1696  00133C                     l1012:
  1697                           
  1698                           ; BSR set to: 0
  1699  00133C  C0D7  F0D7         	movff	___lwmod@dividend,?___lwmod
  1700  001340  C0D8  F0D8         	movff	___lwmod@dividend+1,?___lwmod+1
  1701                           
  1702                           ; BSR set to: 0
  1703  001344  0012               	return	
  1704  001346                     __end_of___lwmod:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           indf2	equ	0xFDF
  1714                           postinc2	equ	0xFDE
  1715                           postdec2	equ	0xFDD
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _FromMainHigh_sendmsg *****************
  1721 ;; Defined at:
  1722 ;;		line 174 in file "../src/messages.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  length          1    wreg     unsigned char 
  1725 ;;  msgtype         1   15[BANK1 ] unsigned char 
  1726 ;;  data            2   16[BANK1 ] PTR void 
  1727 ;;		 -> main@t1thread_data(2), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  length          1   38[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      char 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1739 ;;      Params:         0       0       3       0       0
  1740 ;;      Locals:         0       1       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0       1       3       0       0
  1743 ;;Total ram usage:        4 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:   12
  1746 ;; This function calls:
  1747 ;;		_send_msg
  1748 ;; This function is called by:
  1749 ;;		_timer1_lthread
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text4
  1754  00192C                     __ptext4:
  1755                           	opt stack 0
  1756  00192C                     _FromMainHigh_sendmsg:
  1757                           	opt stack 16
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;incstack = 0
  1761                           ;FromMainHigh_sendmsg@length stored from wreg
  1762  00192C  CFE8 F0DE          	movff	wreg,FromMainHigh_sendmsg@length
  1763                           
  1764                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1765  001930  0101               	movlb	1	; () banked
  1766  001932  0E01               	movlw	high _FromMainHigh_MQ
  1767  001934  0101               	movlb	1	; () banked
  1768  001936  0101               	movlb	1	; () banked
  1769  001938  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1770  00193A  0101               	movlb	1	; () banked
  1771  00193C  0E00               	movlw	low _FromMainHigh_MQ
  1772  00193E  0101               	movlb	1	; () banked
  1773  001940  0101               	movlb	1	; () banked
  1774  001942  6FA6               	movwf	send_msg@qptr& (0+255),b
  1775  001944  C0DE  F1A8         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1776  001948  C1B1  F1A9         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1777  00194C  0101               	movlb	1	; () banked
  1778  00194E  0101               	movlb	1	; () banked
  1779  001950  C1B3  F1AB         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1780  001954  0101               	movlb	1	; () banked
  1781  001956  0101               	movlb	1	; () banked
  1782  001958  C1B2  F1AA         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1783  00195C  EC66  F006         	call	_send_msg	;wreg free
  1784  001960  0012               	return	
  1785  001962                     __end_of_FromMainHigh_sendmsg:
  1786                           	opt stack 0
  1787                           tblptru	equ	0xFF8
  1788                           tblptrh	equ	0xFF7
  1789                           tblptrl	equ	0xFF6
  1790                           tablat	equ	0xFF5
  1791                           intcon	equ	0xFF2
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           indf2	equ	0xFDF
  1795                           postinc2	equ	0xFDE
  1796                           postdec2	equ	0xFDD
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function _timer0_lthread *****************
  1802 ;; Defined at:
  1803 ;;		line 12 in file "../src/timer0_thread.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  tptr            2   18[BANK1 ] PTR struct __timer0_thre
  1806 ;;		 -> main@t0thread_data(2), 
  1807 ;;  msgtype         2   20[BANK1 ] int 
  1808 ;;  length          2   22[BANK1 ] int 
  1809 ;;  msgbuffer       2   24[BANK1 ] PTR unsigned char 
  1810 ;;		 -> main@msgbuffer(11), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  val             2   29[BANK1 ] unsigned int 
  1813 ;;  msgval          2   27[BANK1 ] PTR unsigned int 
  1814 ;;		 -> main@msgbuffer(11), 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  2   18[BANK1 ] int 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1824 ;;      Params:         0       0       8       0       0
  1825 ;;      Locals:         0       0       4       0       0
  1826 ;;      Temps:          0       0       1       0       0
  1827 ;;      Totals:         0       0      13       0       0
  1828 ;;Total ram usage:       13 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:   13
  1831 ;; This function calls:
  1832 ;;		_ToMainHigh_sendmsg
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text5
  1839  001448                     __ptext5:
  1840                           	opt stack 0
  1841  001448                     _timer0_lthread:
  1842                           	opt stack 16
  1843                           
  1844                           ;timer0_thread.c: 13: unsigned int *msgval;
  1845                           ;timer0_thread.c: 14: unsigned int val = 0;
  1846                           
  1847                           ;incstack = 0
  1848  001448  0E00               	movlw	0
  1849  00144A  0101               	movlb	1	; () banked
  1850  00144C  0101               	movlb	1	; () banked
  1851  00144E  6FC0               	movwf	(timer0_lthread@val+1)& (0+255),b
  1852  001450  0E00               	movlw	0
  1853  001452  0101               	movlb	1	; () banked
  1854  001454  6FBF               	movwf	timer0_lthread@val& (0+255),b
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;timer0_thread.c: 16: val = i++;
  1858  001456  C080  F1BF         	movff	_i,timer0_lthread@val
  1859  00145A  C081  F1C0         	movff	_i+1,timer0_lthread@val+1
  1860                           
  1861                           ; BSR set to: 1
  1862  00145E  0100               	movlb	0	; () banked
  1863  001460  0100               	movlb	0	; () banked
  1864  001462  4B80               	infsnz	_i& (0+255),f,b
  1865  001464  2B81               	incf	(_i+1)& (0+255),f,b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;timer0_thread.c: 18: if(i > 255)
  1869  001466  0100               	movlb	0	; () banked
  1870  001468  0100               	movlb	0	; () banked
  1871  00146A  5181               	movf	(_i+1)& (0+255),w,b
  1872  00146C  0A80               	xorlw	128
  1873  00146E  0F7F               	addlw	-129
  1874  001470  0E00               	movlw	0
  1875  001472  B4D8               	btfsc	status,2,c
  1876  001474  5D80               	subwf	_i& (0+255),w,b
  1877  001476  A0D8               	btfss	status,0,c
  1878  001478  D007               	goto	l3192
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;timer0_thread.c: 19: {
  1882                           ;timer0_thread.c: 20: i = 0;
  1883  00147A  0E00               	movlw	0
  1884  00147C  0100               	movlb	0	; () banked
  1885  00147E  0100               	movlb	0	; () banked
  1886  001480  6F81               	movwf	(_i+1)& (0+255),b
  1887  001482  0E00               	movlw	0
  1888  001484  0100               	movlb	0	; () banked
  1889  001486  6F80               	movwf	_i& (0+255),b
  1890  001488                     l3192:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;timer0_thread.c: 21: }
  1894                           ;timer0_thread.c: 23: msgval = (unsigned int *) msgbuffer;
  1895  001488  0101               	movlb	1	; () banked
  1896  00148A  0101               	movlb	1	; () banked
  1897  00148C  C1BB  F1BE         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1898  001490  0101               	movlb	1	; () banked
  1899  001492  0101               	movlb	1	; () banked
  1900  001494  C1BA  F1BD         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;timer0_thread.c: 24: ToMainHigh_sendmsg(sizeof(i),47,(void*)&val);
  1904  001498  0101               	movlb	1	; () banked
  1905  00149A  6FBC               	movwf	??_timer0_lthread& (0+255),b
  1906  00149C  0E2F               	movlw	47
  1907  00149E  0101               	movlb	1	; () banked
  1908  0014A0  0101               	movlb	1	; () banked
  1909  0014A2  6FB1               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  1910  0014A4  0101               	movlb	1	; () banked
  1911  0014A6  51BC               	movf	??_timer0_lthread& (0+255),w,b
  1912  0014A8  0101               	movlb	1	; () banked
  1913  0014AA  0E01               	movlw	high timer0_lthread@val
  1914  0014AC  0101               	movlb	1	; () banked
  1915  0014AE  0101               	movlb	1	; () banked
  1916  0014B0  6FB3               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  1917  0014B2  0101               	movlb	1	; () banked
  1918  0014B4  0EBF               	movlw	low timer0_lthread@val
  1919  0014B6  0101               	movlb	1	; () banked
  1920  0014B8  0101               	movlb	1	; () banked
  1921  0014BA  6FB2               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  1922  0014BC  0E02               	movlw	2
  1923  0014BE  ECB1  F00C         	call	_ToMainHigh_sendmsg
  1924  0014C2  0012               	return	
  1925  0014C4                     __end_of_timer0_lthread:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           intcon	equ	0xFF2
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           indf2	equ	0xFDF
  1935                           postinc2	equ	0xFDE
  1936                           postdec2	equ	0xFDD
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _ToMainHigh_sendmsg *****************
  1942 ;; Defined at:
  1943 ;;		line 126 in file "../src/messages.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  length          1    wreg     unsigned char 
  1946 ;;  msgtype         1   15[BANK1 ] unsigned char 
  1947 ;;  data            2   16[BANK1 ] PTR void 
  1948 ;;		 -> adc_int_handler@result(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  1949 ;;		 -> main@ic(40), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  length          1   38[BANK0 ] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      char 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1961 ;;      Params:         0       0       3       0       0
  1962 ;;      Locals:         0       1       0       0       0
  1963 ;;      Temps:          0       0       0       0       0
  1964 ;;      Totals:         0       1       3       0       0
  1965 ;;Total ram usage:        4 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:   12
  1968 ;; This function calls:
  1969 ;;		_send_msg
  1970 ;; This function is called by:
  1971 ;;		_timer0_lthread
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text6
  1976  001962                     __ptext6:
  1977                           	opt stack 0
  1978  001962                     _ToMainHigh_sendmsg:
  1979                           	opt stack 16
  1980                           
  1981                           ;incstack = 0
  1982                           ;ToMainHigh_sendmsg@length stored from wreg
  1983  001962  CFE8 F0DE          	movff	wreg,ToMainHigh_sendmsg@length
  1984                           
  1985                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  1986                           ;	Return value of _ToMainHigh_sendmsg is never used
  1987  001966  0101               	movlb	1	; () banked
  1988  001968  0E01               	movlw	high _ToMainHigh_MQ
  1989  00196A  0101               	movlb	1	; () banked
  1990  00196C  0101               	movlb	1	; () banked
  1991  00196E  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1992  001970  0101               	movlb	1	; () banked
  1993  001972  0E6C               	movlw	low _ToMainHigh_MQ
  1994  001974  0101               	movlb	1	; () banked
  1995  001976  0101               	movlb	1	; () banked
  1996  001978  6FA6               	movwf	send_msg@qptr& (0+255),b
  1997  00197A  C0DE  F1A8         	movff	ToMainHigh_sendmsg@length,send_msg@length
  1998  00197E  C1B1  F1A9         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  1999  001982  0101               	movlb	1	; () banked
  2000  001984  0101               	movlb	1	; () banked
  2001  001986  C1B3  F1AB         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  2002  00198A  0101               	movlb	1	; () banked
  2003  00198C  0101               	movlb	1	; () banked
  2004  00198E  C1B2  F1AA         	movff	ToMainHigh_sendmsg@data,send_msg@data
  2005  001992  EC66  F006         	call	_send_msg	;wreg free
  2006  001996  0012               	return	
  2007  001998                     __end_of_ToMainHigh_sendmsg:
  2008                           	opt stack 0
  2009                           tblptru	equ	0xFF8
  2010                           tblptrh	equ	0xFF7
  2011                           tblptrl	equ	0xFF6
  2012                           tablat	equ	0xFF5
  2013                           intcon	equ	0xFF2
  2014                           postinc0	equ	0xFEE
  2015                           wreg	equ	0xFE8
  2016                           indf2	equ	0xFDF
  2017                           postinc2	equ	0xFDE
  2018                           postdec2	equ	0xFDD
  2019                           fsr2h	equ	0xFDA
  2020                           fsr2l	equ	0xFD9
  2021                           status	equ	0xFD8
  2022                           
  2023 ;; *************** function _send_msg *****************
  2024 ;; Defined at:
  2025 ;;		line 24 in file "../src/messages.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  2028 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2029 ;;  length          1    6[BANK1 ] unsigned char 
  2030 ;;  msgtype         1    7[BANK1 ] unsigned char 
  2031 ;;  data            2    8[BANK1 ] PTR void 
  2032 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  2033 ;;		 -> i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(40), main@uc(5), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  qmsg            2   13[BANK1 ] PTR struct __msg
  2036 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2037 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2038 ;;  tlength         2   10[BANK1 ] unsigned int 
  2039 ;;  slot            1   12[BANK1 ] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      char 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2049 ;;      Params:         0       0       6       0       0
  2050 ;;      Locals:         0       0       5       0       0
  2051 ;;      Temps:          0       1       0       0       0
  2052 ;;      Totals:         0       1      11       0       0
  2053 ;;Total ram usage:       12 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:   11
  2056 ;; This function calls:
  2057 ;;		_memcpy
  2058 ;; This function is called by:
  2059 ;;		_ToMainHigh_sendmsg
  2060 ;;		_FromMainHigh_sendmsg
  2061 ;;		_FromMainLow_sendmsg
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text7
  2066  000CCC                     __ptext7:
  2067                           	opt stack 0
  2068  000CCC                     _send_msg:
  2069                           	opt stack 16
  2070                           
  2071                           ;messages.c: 25: unsigned char slot;
  2072                           ;messages.c: 27: msg *qmsg;
  2073                           ;messages.c: 28: size_t tlength = length;
  2074                           
  2075                           ;incstack = 0
  2076  000CCC  0101               	movlb	1	; () banked
  2077  000CCE  0101               	movlb	1	; () banked
  2078  000CD0  C1A8  F1AC         	movff	send_msg@length,send_msg@tlength
  2079  000CD4  0101               	movlb	1	; () banked
  2080  000CD6  0101               	movlb	1	; () banked
  2081  000CD8  6BAD               	clrf	(send_msg@tlength+1)& (0+255),b
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2085  000CDA  0101               	movlb	1	; () banked
  2086  000CDC  EE20 F034          	lfsr	2,52
  2087  000CE0  0101               	movlb	1	; () banked
  2088  000CE2  51A6               	movf	send_msg@qptr& (0+255),w,b
  2089  000CE4  26D9               	addwf	fsr2l,f,c
  2090  000CE6  0101               	movlb	1	; () banked
  2091  000CE8  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2092  000CEA  22DA               	addwfc	fsr2h,f,c
  2093  000CEC  50DF               	movf	indf2,w,c
  2094  000CEE  0101               	movlb	1	; () banked
  2095  000CF0  0101               	movlb	1	; () banked
  2096  000CF2  6FAE               	movwf	send_msg@slot& (0+255),b
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2100  000CF4  0101               	movlb	1	; () banked
  2101  000CF6  0101               	movlb	1	; () banked
  2102  000CF8  51AE               	movf	send_msg@slot& (0+255),w,b
  2103  000CFA  0D0D               	mullw	13
  2104  000CFC  50F3               	movf	prodl,w,c
  2105  000CFE  0101               	movlb	1	; () banked
  2106  000D00  0101               	movlb	1	; () banked
  2107  000D02  25A6               	addwf	send_msg@qptr& (0+255),w,b
  2108  000D04  0101               	movlb	1	; () banked
  2109  000D06  0101               	movlb	1	; () banked
  2110  000D08  6FAF               	movwf	send_msg@qmsg& (0+255),b
  2111  000D0A  50F4               	movf	prodh,w,c
  2112  000D0C  0101               	movlb	1	; () banked
  2113  000D0E  0101               	movlb	1	; () banked
  2114  000D10  21A7               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2115  000D12  0101               	movlb	1	; () banked
  2116  000D14  6FB0               	movwf	(send_msg@qmsg+1)& (0+255),b
  2117                           
  2118                           ; BSR set to: 1
  2119                           ;messages.c: 41: if (qmsg->full != 0) {
  2120  000D16  C1AF  FFD9         	movff	send_msg@qmsg,fsr2l
  2121  000D1A  C1B0  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2122  000D1E  50DF               	movf	indf2,w,c
  2123  000D20  B4D8               	btfsc	status,2,c
  2124  000D22  D002               	goto	l3272
  2125                           
  2126                           ; BSR set to: 1
  2127                           ;messages.c: 42: return (-1);
  2128  000D24  0EFF               	movlw	255
  2129  000D26  0012               	return	
  2130  000D28                     l3272:
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;messages.c: 43: }
  2134                           ;messages.c: 46: qmsg->length = length;
  2135  000D28  0101               	movlb	1	; () banked
  2136  000D2A  EE20 F001          	lfsr	2,1
  2137  000D2E  0101               	movlb	1	; () banked
  2138  000D30  51AF               	movf	send_msg@qmsg& (0+255),w,b
  2139  000D32  26D9               	addwf	fsr2l,f,c
  2140  000D34  0101               	movlb	1	; () banked
  2141  000D36  51B0               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2142  000D38  22DA               	addwfc	fsr2h,f,c
  2143  000D3A  0101               	movlb	1	; () banked
  2144  000D3C  C1A8  FFDF         	movff	send_msg@length,indf2
  2145                           
  2146                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2147  000D40  0101               	movlb	1	; () banked
  2148  000D42  EE20 F002          	lfsr	2,2
  2149  000D46  0101               	movlb	1	; () banked
  2150  000D48  51AF               	movf	send_msg@qmsg& (0+255),w,b
  2151  000D4A  26D9               	addwf	fsr2l,f,c
  2152  000D4C  0101               	movlb	1	; () banked
  2153  000D4E  51B0               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2154  000D50  22DA               	addwfc	fsr2h,f,c
  2155  000D52  0101               	movlb	1	; () banked
  2156  000D54  C1A9  FFDF         	movff	send_msg@msgtype,indf2
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2160  000D58  0E03               	movlw	3
  2161  000D5A  0101               	movlb	1	; () banked
  2162  000D5C  0101               	movlb	1	; () banked
  2163  000D5E  25AF               	addwf	send_msg@qmsg& (0+255),w,b
  2164  000D60  0100               	movlb	0	; () banked
  2165  000D62  0100               	movlb	0	; () banked
  2166  000D64  6FD7               	movwf	memcpy@d1& (0+255),b
  2167  000D66  0E00               	movlw	0
  2168  000D68  0101               	movlb	1	; () banked
  2169  000D6A  0101               	movlb	1	; () banked
  2170  000D6C  21B0               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2171  000D6E  0100               	movlb	0	; () banked
  2172  000D70  6FD8               	movwf	(memcpy@d1+1)& (0+255),b
  2173  000D72  0101               	movlb	1	; () banked
  2174  000D74  0100               	movlb	0	; () banked
  2175  000D76  C1AB  F0DA         	movff	send_msg@data+1,memcpy@s1+1
  2176  000D7A  0101               	movlb	1	; () banked
  2177  000D7C  0100               	movlb	0	; () banked
  2178  000D7E  C1AA  F0D9         	movff	send_msg@data,memcpy@s1
  2179  000D82  C1AC  F0DB         	movff	send_msg@tlength,memcpy@n
  2180  000D86  C1AD  F0DC         	movff	send_msg@tlength+1,memcpy@n+1
  2181  000D8A  EC0F  F00B         	call	_memcpy	;wreg free
  2182                           
  2183                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2184  000D8E  0101               	movlb	1	; () banked
  2185  000D90  EE20 F034          	lfsr	2,52
  2186  000D94  0101               	movlb	1	; () banked
  2187  000D96  51A6               	movf	send_msg@qptr& (0+255),w,b
  2188  000D98  26D9               	addwf	fsr2l,f,c
  2189  000D9A  0101               	movlb	1	; () banked
  2190  000D9C  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2191  000D9E  22DA               	addwfc	fsr2h,f,c
  2192  000DA0  0101               	movlb	1	; () banked
  2193  000DA2  EE10 F034          	lfsr	1,52
  2194  000DA6  0101               	movlb	1	; () banked
  2195  000DA8  51A6               	movf	send_msg@qptr& (0+255),w,b
  2196  000DAA  26E1               	addwf	fsr1l,f,c
  2197  000DAC  0101               	movlb	1	; () banked
  2198  000DAE  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  2199  000DB0  22E2               	addwfc	fsr1h,f,c
  2200  000DB2  50E7               	movf	indf1,w,c
  2201  000DB4  0100               	movlb	0	; () banked
  2202  000DB6  6FDD               	movwf	??_send_msg& (0+255),b
  2203  000DB8  0100               	movlb	0	; () banked
  2204  000DBA  29DD               	incf	??_send_msg& (0+255),w,b
  2205  000DBC  0B03               	andlw	3
  2206  000DBE  6EDF               	movwf	indf2,c
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;messages.c: 59: qmsg->full = 1;
  2210  000DC0  C1AF  FFD9         	movff	send_msg@qmsg,fsr2l
  2211  000DC4  C1B0  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2212  000DC8  0E01               	movlw	1
  2213  000DCA  6EDF               	movwf	indf2,c
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;messages.c: 60: return (1);
  2217  000DCC  0E01               	movlw	1
  2218  000DCE  0012               	return	
  2219  000DD0                     __end_of_send_msg:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           intcon	equ	0xFF2
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           indf1	equ	0xFE7
  2231                           fsr1h	equ	0xFE2
  2232                           fsr1l	equ	0xFE1
  2233                           indf2	equ	0xFDF
  2234                           postinc2	equ	0xFDE
  2235                           postdec2	equ	0xFDD
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _start_i2c_slave_reply *****************
  2241 ;; Defined at:
  2242 ;;		line 68 in file "../src/my_i2c.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  length          1    wreg     unsigned char 
  2245 ;;  msg             2   31[BANK0 ] PTR unsigned char 
  2246 ;;		 -> main@msgbuffer(11), 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  length          1   36[BANK0 ] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2258 ;;      Params:         0       2       0       0       0
  2259 ;;      Locals:         0       1       0       0       0
  2260 ;;      Temps:          0       3       0       0       0
  2261 ;;      Totals:         0       6       0       0       0
  2262 ;;Total ram usage:        6 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:   10
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text8
  2273  000994                     __ptext8:
  2274                           	opt stack 0
  2275  000994                     _start_i2c_slave_reply:
  2276                           	opt stack 19
  2277                           
  2278                           ;incstack = 0
  2279                           ;start_i2c_slave_reply@length stored from wreg
  2280  000994  CFE8 F0DC          	movff	wreg,start_i2c_slave_reply@length
  2281                           
  2282                           ;my_i2c.c: 72: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2283  000998  0100               	movlb	0	; () banked
  2284  00099A  EE20 F019          	lfsr	2,25
  2285  00099E  0100               	movlb	0	; () banked
  2286  0009A0  51DF               	movf	_ic_ptr& (0+255),w,b
  2287  0009A2  26D9               	addwf	fsr2l,f,c
  2288  0009A4  0100               	movlb	0	; () banked
  2289  0009A6  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2290  0009A8  22DA               	addwfc	fsr2h,f,c
  2291  0009AA  0E00               	movlw	0
  2292  0009AC  6EDF               	movwf	indf2,c
  2293  0009AE  D0B1               	goto	l3210
  2294  0009B0                     l3198:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;my_i2c.c: 75: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  2298  0009B0  0100               	movlb	0	; () banked
  2299  0009B2  EE20 F019          	lfsr	2,25
  2300  0009B6  0100               	movlb	0	; () banked
  2301  0009B8  51DF               	movf	_ic_ptr& (0+255),w,b
  2302  0009BA  26D9               	addwf	fsr2l,f,c
  2303  0009BC  0100               	movlb	0	; () banked
  2304  0009BE  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2305  0009C0  22DA               	addwfc	fsr2h,f,c
  2306  0009C2  50DF               	movf	indf2,w,c
  2307  0009C4  0100               	movlb	0	; () banked
  2308  0009C6  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2309  0009C8  0100               	movlb	0	; () banked
  2310  0009CA  EE20 F026          	lfsr	2,38
  2311  0009CE  0100               	movlb	0	; () banked
  2312  0009D0  51DF               	movf	_ic_ptr& (0+255),w,b
  2313  0009D2  26D9               	addwf	fsr2l,f,c
  2314  0009D4  0100               	movlb	0	; () banked
  2315  0009D6  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2316  0009D8  22DA               	addwfc	fsr2h,f,c
  2317  0009DA  50DF               	movf	indf2,w,c
  2318  0009DC  0100               	movlb	0	; () banked
  2319  0009DE  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2320  0009E0  B0D8               	btfsc	status,0,c
  2321  0009E2  D02C               	goto	l3202
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;my_i2c.c: 76: {
  2325                           ;my_i2c.c: 77: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen];
  2326  0009E4  0100               	movlb	0	; () banked
  2327  0009E6  EE20 F019          	lfsr	2,25
  2328  0009EA  0100               	movlb	0	; () banked
  2329  0009EC  51DF               	movf	_ic_ptr& (0+255),w,b
  2330  0009EE  26D9               	addwf	fsr2l,f,c
  2331  0009F0  0100               	movlb	0	; () banked
  2332  0009F2  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2333  0009F4  22DA               	addwfc	fsr2h,f,c
  2334  0009F6  50DF               	movf	indf2,w,c
  2335  0009F8  0100               	movlb	0	; () banked
  2336  0009FA  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2337  0009FC  0100               	movlb	0	; () banked
  2338  0009FE  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2339  000A00  0D01               	mullw	1
  2340  000A02  0E1C               	movlw	28
  2341  000A04  26F3               	addwf	prodl,f,c
  2342  000A06  0E00               	movlw	0
  2343  000A08  22F4               	addwfc	prodh,f,c
  2344  000A0A  50F3               	movf	prodl,w,c
  2345  000A0C  0100               	movlb	0	; () banked
  2346  000A0E  0100               	movlb	0	; () banked
  2347  000A10  25DF               	addwf	_ic_ptr& (0+255),w,b
  2348  000A12  6ED9               	movwf	fsr2l,c
  2349  000A14  50F4               	movf	prodh,w,c
  2350  000A16  0100               	movlb	0	; () banked
  2351  000A18  0100               	movlb	0	; () banked
  2352  000A1A  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2353  000A1C  6EDA               	movwf	fsr2h,c
  2354  000A1E  0100               	movlb	0	; () banked
  2355  000A20  EE10 F019          	lfsr	1,25
  2356  000A24  0100               	movlb	0	; () banked
  2357  000A26  51DF               	movf	_ic_ptr& (0+255),w,b
  2358  000A28  26E1               	addwf	fsr1l,f,c
  2359  000A2A  0100               	movlb	0	; () banked
  2360  000A2C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2361  000A2E  22E2               	addwfc	fsr1h,f,c
  2362  000A30  50E7               	movf	indf1,w,c
  2363  000A32  0100               	movlb	0	; () banked
  2364  000A34  6FDA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2365  000A36  0100               	movlb	0	; () banked
  2366  000A38  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2367  000A3A  D050               	goto	L2
  2368  000A3C                     l3202:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;my_i2c.c: 79: else if(ic_ptr->sendBufLen != 0)
  2372  000A3C  0100               	movlb	0	; () banked
  2373  000A3E  EE20 F026          	lfsr	2,38
  2374  000A42  0100               	movlb	0	; () banked
  2375  000A44  51DF               	movf	_ic_ptr& (0+255),w,b
  2376  000A46  26D9               	addwf	fsr2l,f,c
  2377  000A48  0100               	movlb	0	; () banked
  2378  000A4A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2379  000A4C  22DA               	addwfc	fsr2h,f,c
  2380  000A4E  50DF               	movf	indf2,w,c
  2381  000A50  B4D8               	btfsc	status,2,c
  2382  000A52  D02D               	goto	l3206
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;my_i2c.c: 80: {
  2386                           ;my_i2c.c: 81: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLen
      +                          -1];
  2387  000A54  0100               	movlb	0	; () banked
  2388  000A56  EE20 F026          	lfsr	2,38
  2389  000A5A  0100               	movlb	0	; () banked
  2390  000A5C  51DF               	movf	_ic_ptr& (0+255),w,b
  2391  000A5E  26D9               	addwf	fsr2l,f,c
  2392  000A60  0100               	movlb	0	; () banked
  2393  000A62  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2394  000A64  22DA               	addwfc	fsr2h,f,c
  2395  000A66  50DF               	movf	indf2,w,c
  2396  000A68  0100               	movlb	0	; () banked
  2397  000A6A  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2398  000A6C  6BDA               	clrf	(??_start_i2c_slave_reply+1)& (0+255),b
  2399  000A6E  0E1B               	movlw	27
  2400  000A70  0100               	movlb	0	; () banked
  2401  000A72  27D9               	addwf	??_start_i2c_slave_reply& (0+255),f,b
  2402  000A74  0E00               	movlw	0
  2403  000A76  23DA               	addwfc	(??_start_i2c_slave_reply+1)& (0+255),f,b
  2404  000A78  0100               	movlb	0	; () banked
  2405  000A7A  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2406  000A7C  0100               	movlb	0	; () banked
  2407  000A7E  0100               	movlb	0	; () banked
  2408  000A80  25DF               	addwf	_ic_ptr& (0+255),w,b
  2409  000A82  6ED9               	movwf	fsr2l,c
  2410  000A84  0100               	movlb	0	; () banked
  2411  000A86  51DA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2412  000A88  0100               	movlb	0	; () banked
  2413  000A8A  0100               	movlb	0	; () banked
  2414  000A8C  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2415  000A8E  6EDA               	movwf	fsr2h,c
  2416  000A90  0100               	movlb	0	; () banked
  2417  000A92  EE10 F019          	lfsr	1,25
  2418  000A96  0100               	movlb	0	; () banked
  2419  000A98  51DF               	movf	_ic_ptr& (0+255),w,b
  2420  000A9A  26E1               	addwf	fsr1l,f,c
  2421  000A9C  0100               	movlb	0	; () banked
  2422  000A9E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2423  000AA0  22E2               	addwfc	fsr1h,f,c
  2424  000AA2  50E7               	movf	indf1,w,c
  2425  000AA4  0100               	movlb	0	; () banked
  2426  000AA6  6FDB               	movwf	(??_start_i2c_slave_reply+2)& (0+255),b
  2427  000AA8  0100               	movlb	0	; () banked
  2428  000AAA  51DB               	movf	(??_start_i2c_slave_reply+2)& (0+255),w,b
  2429  000AAC  D017               	goto	L2
  2430  000AAE                     l3206:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;my_i2c.c: 83: else
  2434                           ;my_i2c.c: 84: {
  2435                           ;my_i2c.c: 85: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[5];
  2436  000AAE  0100               	movlb	0	; () banked
  2437  000AB0  EE20 F021          	lfsr	2,33
  2438  000AB4  0100               	movlb	0	; () banked
  2439  000AB6  51DF               	movf	_ic_ptr& (0+255),w,b
  2440  000AB8  26D9               	addwf	fsr2l,f,c
  2441  000ABA  0100               	movlb	0	; () banked
  2442  000ABC  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2443  000ABE  22DA               	addwfc	fsr2h,f,c
  2444  000AC0  0100               	movlb	0	; () banked
  2445  000AC2  EE10 F019          	lfsr	1,25
  2446  000AC6  0100               	movlb	0	; () banked
  2447  000AC8  51DF               	movf	_ic_ptr& (0+255),w,b
  2448  000ACA  26E1               	addwf	fsr1l,f,c
  2449  000ACC  0100               	movlb	0	; () banked
  2450  000ACE  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2451  000AD0  22E2               	addwfc	fsr1h,f,c
  2452  000AD2  50E7               	movf	indf1,w,c
  2453  000AD4  0100               	movlb	0	; () banked
  2454  000AD6  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2455  000AD8  0100               	movlb	0	; () banked
  2456  000ADA  51D9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2457  000ADC                     L2:
  2458  000ADC  0D01               	mullw	1
  2459  000ADE  0E0F               	movlw	15
  2460  000AE0  26F3               	addwf	prodl,f,c
  2461  000AE2  0E00               	movlw	0
  2462  000AE4  22F4               	addwfc	prodh,f,c
  2463  000AE6  50F3               	movf	prodl,w,c
  2464  000AE8  0100               	movlb	0	; () banked
  2465  000AEA  0100               	movlb	0	; () banked
  2466  000AEC  25DF               	addwf	_ic_ptr& (0+255),w,b
  2467  000AEE  6EE1               	movwf	fsr1l,c
  2468  000AF0  50F4               	movf	prodh,w,c
  2469  000AF2  0100               	movlb	0	; () banked
  2470  000AF4  0100               	movlb	0	; () banked
  2471  000AF6  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2472  000AF8  6EE2               	movwf	fsr1h,c
  2473  000AFA  CFDF FFE7          	movff	indf2,indf1
  2474                           
  2475                           ; BSR set to: 0
  2476                           
  2477                           ; BSR set to: 0
  2478                           
  2479                           ; BSR set to: 0
  2480  000AFE  0100               	movlb	0	; () banked
  2481  000B00  EE20 F019          	lfsr	2,25
  2482  000B04  0100               	movlb	0	; () banked
  2483  000B06  51DF               	movf	_ic_ptr& (0+255),w,b
  2484  000B08  26D9               	addwf	fsr2l,f,c
  2485  000B0A  0100               	movlb	0	; () banked
  2486  000B0C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2487  000B0E  22DA               	addwfc	fsr2h,f,c
  2488  000B10  2ADF               	incf	indf2,f,c
  2489  000B12                     l3210:
  2490                           
  2491                           ; BSR set to: 0
  2492  000B12  0100               	movlb	0	; () banked
  2493  000B14  EE20 F019          	lfsr	2,25
  2494  000B18  0100               	movlb	0	; () banked
  2495  000B1A  51DF               	movf	_ic_ptr& (0+255),w,b
  2496  000B1C  26D9               	addwf	fsr2l,f,c
  2497  000B1E  0100               	movlb	0	; () banked
  2498  000B20  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2499  000B22  22DA               	addwfc	fsr2h,f,c
  2500  000B24  50DF               	movf	indf2,w,c
  2501  000B26  0100               	movlb	0	; () banked
  2502  000B28  6FD9               	movwf	??_start_i2c_slave_reply& (0+255),b
  2503  000B2A  0100               	movlb	0	; () banked
  2504  000B2C  0100               	movlb	0	; () banked
  2505  000B2E  51DC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2506  000B30  0100               	movlb	0	; () banked
  2507  000B32  5DD9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2508  000B34  A0D8               	btfss	status,0,c
  2509  000B36  D73C               	goto	l3198
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;my_i2c.c: 86: }
  2513                           ;my_i2c.c: 88: }
  2514                           ;my_i2c.c: 89: ic_ptr->sendBufLen =0;
  2515                           
  2516                           ; BSR set to: 0
  2517  000B38  0100               	movlb	0	; () banked
  2518  000B3A  EE20 F026          	lfsr	2,38
  2519  000B3E  0100               	movlb	0	; () banked
  2520  000B40  51DF               	movf	_ic_ptr& (0+255),w,b
  2521  000B42  26D9               	addwf	fsr2l,f,c
  2522  000B44  0100               	movlb	0	; () banked
  2523  000B46  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2524  000B48  22DA               	addwfc	fsr2h,f,c
  2525  000B4A  0E00               	movlw	0
  2526  000B4C  6EDF               	movwf	indf2,c
  2527                           
  2528                           ;my_i2c.c: 90: ic_ptr->outbuflen = length;
  2529  000B4E  0100               	movlb	0	; () banked
  2530  000B50  EE20 F019          	lfsr	2,25
  2531  000B54  0100               	movlb	0	; () banked
  2532  000B56  51DF               	movf	_ic_ptr& (0+255),w,b
  2533  000B58  26D9               	addwf	fsr2l,f,c
  2534  000B5A  0100               	movlb	0	; () banked
  2535  000B5C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2536  000B5E  22DA               	addwfc	fsr2h,f,c
  2537  000B60  0100               	movlb	0	; () banked
  2538  000B62  C0DC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2539                           
  2540                           ;my_i2c.c: 91: ic_ptr->outbufind = 1;
  2541  000B66  0100               	movlb	0	; () banked
  2542  000B68  EE20 F01A          	lfsr	2,26
  2543  000B6C  0100               	movlb	0	; () banked
  2544  000B6E  51DF               	movf	_ic_ptr& (0+255),w,b
  2545  000B70  26D9               	addwf	fsr2l,f,c
  2546  000B72  0100               	movlb	0	; () banked
  2547  000B74  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2548  000B76  22DA               	addwfc	fsr2h,f,c
  2549  000B78  0E01               	movlw	1
  2550  000B7A  6EDF               	movwf	indf2,c
  2551                           
  2552                           ;my_i2c.c: 94: SSPBUF = ic_ptr->outbuffer[0];
  2553  000B7C  0100               	movlb	0	; () banked
  2554  000B7E  EE20 F00F          	lfsr	2,15
  2555  000B82  0100               	movlb	0	; () banked
  2556  000B84  51DF               	movf	_ic_ptr& (0+255),w,b
  2557  000B86  26D9               	addwf	fsr2l,f,c
  2558  000B88  0100               	movlb	0	; () banked
  2559  000B8A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  2560  000B8C  22DA               	addwfc	fsr2h,f,c
  2561  000B8E  50DF               	movf	indf2,w,c
  2562  000B90  6EC9               	movwf	4041,c	;volatile
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;my_i2c.c: 97: SSPCON1bits.CKP = 1;
  2566  000B92  88C6               	bsf	4038,4,c	;volatile
  2567                           
  2568                           ; BSR set to: 0
  2569  000B94  0012               	return	
  2570  000B96                     __end_of_start_i2c_slave_reply:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           indf1	equ	0xFE7
  2582                           fsr1h	equ	0xFE2
  2583                           fsr1l	equ	0xFE1
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           postdec2	equ	0xFDD
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _init_uart_recv *****************
  2592 ;; Defined at:
  2593 ;;		line 49 in file "../src/my_uart.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  uc              2   31[BANK0 ] PTR struct __uart_comm
  2596 ;;		 -> main@uc(5), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;		None               void
  2601 ;; Registers used:
  2602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2608 ;;      Params:         0       2       0       0       0
  2609 ;;      Locals:         0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0
  2611 ;;      Totals:         0       2       0       0       0
  2612 ;;Total ram usage:        2 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:   10
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text9
  2623  001B44                     __ptext9:
  2624                           	opt stack 0
  2625  001B44                     _init_uart_recv:
  2626                           	opt stack 19
  2627                           
  2628                           ;my_uart.c: 50: uc_ptr = uc;
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;incstack = 0
  2632  001B44  0100               	movlb	0	; () banked
  2633  001B46  C0D8  F04F         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2634  001B4A  0100               	movlb	0	; () banked
  2635  001B4C  C0D7  F04E         	movff	init_uart_recv@uc,_uc_ptr
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2639  001B50  EE20 F004          	lfsr	2,4
  2640  001B54  504E               	movf	_uc_ptr,w,c
  2641  001B56  26D9               	addwf	fsr2l,f,c
  2642  001B58  504F               	movf	_uc_ptr+1,w,c
  2643  001B5A  22DA               	addwfc	fsr2h,f,c
  2644  001B5C  0E00               	movlw	0
  2645  001B5E  6EDF               	movwf	indf2,c
  2646                           
  2647                           ; BSR set to: 0
  2648  001B60  0012               	return	
  2649  001B62                     __end_of_init_uart_recv:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           prodh	equ	0xFF4
  2656                           prodl	equ	0xFF3
  2657                           intcon	equ	0xFF2
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           indf1	equ	0xFE7
  2661                           fsr1h	equ	0xFE2
  2662                           fsr1l	equ	0xFE1
  2663                           indf2	equ	0xFDF
  2664                           postinc2	equ	0xFDE
  2665                           postdec2	equ	0xFDD
  2666                           fsr2h	equ	0xFDA
  2667                           fsr2l	equ	0xFD9
  2668                           status	equ	0xFD8
  2669                           
  2670 ;; *************** function _init_timer1_lthread *****************
  2671 ;; Defined at:
  2672 ;;		line 6 in file "../src/timer1_thread.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  tptr            2   31[BANK0 ] PTR struct __timer1_thre
  2675 ;;		 -> main@t1thread_data(2), 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg, fsr2l, fsr2h
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2687 ;;      Params:         0       2       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          0       0       0       0       0
  2690 ;;      Totals:         0       2       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:   10
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text10
  2702  001B96                     __ptext10:
  2703                           	opt stack 0
  2704  001B96                     _init_timer1_lthread:
  2705                           	opt stack 19
  2706                           
  2707                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;incstack = 0
  2711  001B96  C0D7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2712  001B9A  C0D8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2713  001B9E  0E00               	movlw	0
  2714  001BA0  6EDE               	movwf	postinc2,c
  2715  001BA2  0E00               	movlw	0
  2716  001BA4  6EDD               	movwf	postdec2,c
  2717  001BA6  0012               	return	
  2718  001BA8                     __end_of_init_timer1_lthread:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           intcon	equ	0xFF2
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           indf1	equ	0xFE7
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _init_queues *****************
  2740 ;; Defined at:
  2741 ;;		line 194 in file "../src/messages.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;		None               void
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2755 ;;      Params:         0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0
  2757 ;;      Temps:          0       1       0       0       0
  2758 ;;      Totals:         0       1       0       0       0
  2759 ;;Total ram usage:        1 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:   11
  2762 ;; This function calls:
  2763 ;;		_init_queue
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text11
  2770  0015B0                     __ptext11:
  2771                           	opt stack 0
  2772  0015B0                     _init_queues:
  2773                           	opt stack 18
  2774                           
  2775                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2776                           
  2777                           ;incstack = 0
  2778  0015B0  0100               	movlb	0	; () banked
  2779  0015B2  6FDB               	movwf	??_init_queues& (0+255),b
  2780  0015B4  0E00               	movlw	0
  2781  0015B6  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  2782  0015B8  0100               	movlb	0	; () banked
  2783  0015BA  51DB               	movf	??_init_queues& (0+255),w,b
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2787  0015BC  0100               	movlb	0	; () banked
  2788  0015BE  0E00               	movlw	high _ToMainLow_MQ
  2789  0015C0  0100               	movlb	0	; () banked
  2790  0015C2  0100               	movlb	0	; () banked
  2791  0015C4  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2792  0015C6  0100               	movlb	0	; () banked
  2793  0015C8  0E82               	movlw	low _ToMainLow_MQ
  2794  0015CA  0100               	movlb	0	; () banked
  2795  0015CC  0100               	movlb	0	; () banked
  2796  0015CE  6FD7               	movwf	init_queue@qptr& (0+255),b
  2797  0015D0  EC62  F00A         	call	_init_queue	;wreg free
  2798                           
  2799                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2800  0015D4  0101               	movlb	1	; () banked
  2801  0015D6  0E01               	movlw	high _ToMainHigh_MQ
  2802  0015D8  0100               	movlb	0	; () banked
  2803  0015DA  0100               	movlb	0	; () banked
  2804  0015DC  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2805  0015DE  0101               	movlb	1	; () banked
  2806  0015E0  0E6C               	movlw	low _ToMainHigh_MQ
  2807  0015E2  0100               	movlb	0	; () banked
  2808  0015E4  0100               	movlb	0	; () banked
  2809  0015E6  6FD7               	movwf	init_queue@qptr& (0+255),b
  2810  0015E8  EC62  F00A         	call	_init_queue	;wreg free
  2811                           
  2812                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2813  0015EC  0101               	movlb	1	; () banked
  2814  0015EE  0E01               	movlw	high _FromMainLow_MQ
  2815  0015F0  0100               	movlb	0	; () banked
  2816  0015F2  0100               	movlb	0	; () banked
  2817  0015F4  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2818  0015F6  0101               	movlb	1	; () banked
  2819  0015F8  0E36               	movlw	low _FromMainLow_MQ
  2820  0015FA  0100               	movlb	0	; () banked
  2821  0015FC  0100               	movlb	0	; () banked
  2822  0015FE  6FD7               	movwf	init_queue@qptr& (0+255),b
  2823  001600  EC62  F00A         	call	_init_queue	;wreg free
  2824                           
  2825                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2826  001604  0101               	movlb	1	; () banked
  2827  001606  0E01               	movlw	high _FromMainHigh_MQ
  2828  001608  0100               	movlb	0	; () banked
  2829  00160A  0100               	movlb	0	; () banked
  2830  00160C  6FD8               	movwf	(init_queue@qptr+1)& (0+255),b
  2831  00160E  0101               	movlb	1	; () banked
  2832  001610  0E00               	movlw	low _FromMainHigh_MQ
  2833  001612  0100               	movlb	0	; () banked
  2834  001614  0100               	movlb	0	; () banked
  2835  001616  6FD7               	movwf	init_queue@qptr& (0+255),b
  2836  001618  EC62  F00A         	call	_init_queue	;wreg free
  2837  00161C  0012               	return	
  2838  00161E                     __end_of_init_queues:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           indf1	equ	0xFE7
  2850                           fsr1h	equ	0xFE2
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           postinc2	equ	0xFDE
  2854                           postdec2	equ	0xFDD
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _init_queue *****************
  2860 ;; Defined at:
  2861 ;;		line 14 in file "../src/messages.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  qptr            2   31[BANK0 ] PTR struct __msg_queue
  2864 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  i               1   34[BANK0 ] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2876 ;;      Params:         0       2       0       0       0
  2877 ;;      Locals:         0       1       0       0       0
  2878 ;;      Temps:          0       1       0       0       0
  2879 ;;      Totals:         0       4       0       0       0
  2880 ;;Total ram usage:        4 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:   10
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_init_queues
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text12
  2891  0014C4                     __ptext12:
  2892                           	opt stack 0
  2893  0014C4                     _init_queue:
  2894                           	opt stack 18
  2895                           
  2896                           ;messages.c: 15: unsigned char i;
  2897                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2898                           
  2899                           ;incstack = 0
  2900  0014C4  0100               	movlb	0	; () banked
  2901  0014C6  EE20 F034          	lfsr	2,52
  2902  0014CA  0100               	movlb	0	; () banked
  2903  0014CC  51D7               	movf	init_queue@qptr& (0+255),w,b
  2904  0014CE  26D9               	addwf	fsr2l,f,c
  2905  0014D0  0100               	movlb	0	; () banked
  2906  0014D2  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2907  0014D4  22DA               	addwfc	fsr2h,f,c
  2908  0014D6  0E00               	movlw	0
  2909  0014D8  6EDF               	movwf	indf2,c
  2910                           
  2911                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2912  0014DA  0100               	movlb	0	; () banked
  2913  0014DC  EE20 F035          	lfsr	2,53
  2914  0014E0  0100               	movlb	0	; () banked
  2915  0014E2  51D7               	movf	init_queue@qptr& (0+255),w,b
  2916  0014E4  26D9               	addwf	fsr2l,f,c
  2917  0014E6  0100               	movlb	0	; () banked
  2918  0014E8  51D8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2919  0014EA  22DA               	addwfc	fsr2h,f,c
  2920  0014EC  0E00               	movlw	0
  2921  0014EE  6EDF               	movwf	indf2,c
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2925  0014F0  0100               	movlb	0	; () banked
  2926  0014F2  6FD9               	movwf	??_init_queue& (0+255),b
  2927  0014F4  0E00               	movlw	0
  2928  0014F6  0100               	movlb	0	; () banked
  2929  0014F8  0100               	movlb	0	; () banked
  2930  0014FA  6FDA               	movwf	init_queue@i& (0+255),b
  2931  0014FC  0100               	movlb	0	; () banked
  2932  0014FE  51D9               	movf	??_init_queue& (0+255),w,b
  2933                           
  2934                           ; BSR set to: 0
  2935  001500  0E03               	movlw	3
  2936  001502  0100               	movlb	0	; () banked
  2937  001504  0100               	movlb	0	; () banked
  2938  001506  65DA               	cpfsgt	init_queue@i& (0+255),b
  2939  001508  D001               	goto	l3254
  2940  00150A  0012               	return	
  2941  00150C                     l3254:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;messages.c: 20: qptr->queue[i].full = 0;
  2945  00150C  0100               	movlb	0	; () banked
  2946  00150E  0100               	movlb	0	; () banked
  2947  001510  51DA               	movf	init_queue@i& (0+255),w,b
  2948  001512  0D0D               	mullw	13
  2949  001514  50F3               	movf	prodl,w,c
  2950  001516  0100               	movlb	0	; () banked
  2951  001518  0100               	movlb	0	; () banked
  2952  00151A  25D7               	addwf	init_queue@qptr& (0+255),w,b
  2953  00151C  6ED9               	movwf	fsr2l,c
  2954  00151E  50F4               	movf	prodh,w,c
  2955  001520  0100               	movlb	0	; () banked
  2956  001522  0100               	movlb	0	; () banked
  2957  001524  21D8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2958  001526  6EDA               	movwf	fsr2h,c
  2959  001528  0E00               	movlw	0
  2960  00152A  6EDF               	movwf	indf2,c
  2961                           
  2962                           ; BSR set to: 0
  2963  00152C  0100               	movlb	0	; () banked
  2964  00152E  0100               	movlb	0	; () banked
  2965  001530  2BDA               	incf	init_queue@i& (0+255),f,b
  2966                           
  2967                           ; BSR set to: 0
  2968  001532  0E03               	movlw	3
  2969  001534  0100               	movlb	0	; () banked
  2970  001536  0100               	movlb	0	; () banked
  2971  001538  65DA               	cpfsgt	init_queue@i& (0+255),b
  2972  00153A  D7E8               	goto	l3254
  2973  00153C  0012               	return	
  2974  00153E                     __end_of_init_queue:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           postinc0	equ	0xFEE
  2984                           wreg	equ	0xFE8
  2985                           indf1	equ	0xFE7
  2986                           fsr1h	equ	0xFE2
  2987                           fsr1l	equ	0xFE1
  2988                           indf2	equ	0xFDF
  2989                           postinc2	equ	0xFDE
  2990                           postdec2	equ	0xFDD
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _init_i2c *****************
  2996 ;; Defined at:
  2997 ;;		line 302 in file "../src/my_i2c.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  ic              2   31[BANK0 ] PTR struct __i2c_comm
  3000 ;;		 -> main@ic(40), 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3012 ;;      Params:         0       2       0       0       0
  3013 ;;      Locals:         0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0
  3015 ;;      Totals:         0       2       0       0       0
  3016 ;;Total ram usage:        2 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:   10
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text13
  3027  000EA2                     __ptext13:
  3028                           	opt stack 0
  3029  000EA2                     _init_i2c:
  3030                           	opt stack 19
  3031                           
  3032                           ;my_i2c.c: 303: ic_ptr = ic;
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;incstack = 0
  3036  000EA2  0100               	movlb	0	; () banked
  3037  000EA4  0100               	movlb	0	; () banked
  3038  000EA6  C0D8  F0E0         	movff	init_i2c@ic+1,_ic_ptr+1
  3039  000EAA  0100               	movlb	0	; () banked
  3040  000EAC  0100               	movlb	0	; () banked
  3041  000EAE  C0D7  F0DF         	movff	init_i2c@ic,_ic_ptr
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;my_i2c.c: 304: ic_ptr->buffer[0] = 0;
  3045  000EB2  C0DF  FFD9         	movff	_ic_ptr,fsr2l
  3046  000EB6  C0E0  FFDA         	movff	_ic_ptr+1,fsr2h
  3047  000EBA  0E00               	movlw	0
  3048  000EBC  6EDF               	movwf	indf2,c
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;my_i2c.c: 305: ic_ptr->buffer[1] = 0;
  3052  000EBE  0100               	movlb	0	; () banked
  3053  000EC0  EE20 F001          	lfsr	2,1
  3054  000EC4  0100               	movlb	0	; () banked
  3055  000EC6  51DF               	movf	_ic_ptr& (0+255),w,b
  3056  000EC8  26D9               	addwf	fsr2l,f,c
  3057  000ECA  0100               	movlb	0	; () banked
  3058  000ECC  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3059  000ECE  22DA               	addwfc	fsr2h,f,c
  3060  000ED0  0E00               	movlw	0
  3061  000ED2  6EDF               	movwf	indf2,c
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;my_i2c.c: 306: ic_ptr->buffer[2] = 0;
  3065  000ED4  0100               	movlb	0	; () banked
  3066  000ED6  EE20 F002          	lfsr	2,2
  3067  000EDA  0100               	movlb	0	; () banked
  3068  000EDC  51DF               	movf	_ic_ptr& (0+255),w,b
  3069  000EDE  26D9               	addwf	fsr2l,f,c
  3070  000EE0  0100               	movlb	0	; () banked
  3071  000EE2  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3072  000EE4  22DA               	addwfc	fsr2h,f,c
  3073  000EE6  0E00               	movlw	0
  3074  000EE8  6EDF               	movwf	indf2,c
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;my_i2c.c: 307: ic_ptr->buflen = 0;
  3078  000EEA  0100               	movlb	0	; () banked
  3079  000EEC  EE20 F00A          	lfsr	2,10
  3080  000EF0  0100               	movlb	0	; () banked
  3081  000EF2  51DF               	movf	_ic_ptr& (0+255),w,b
  3082  000EF4  26D9               	addwf	fsr2l,f,c
  3083  000EF6  0100               	movlb	0	; () banked
  3084  000EF8  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3085  000EFA  22DA               	addwfc	fsr2h,f,c
  3086  000EFC  0E00               	movlw	0
  3087  000EFE  6EDF               	movwf	indf2,c
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;my_i2c.c: 308: ic_ptr->event_count = 0;
  3091  000F00  0100               	movlb	0	; () banked
  3092  000F02  EE20 F00B          	lfsr	2,11
  3093  000F06  0100               	movlb	0	; () banked
  3094  000F08  51DF               	movf	_ic_ptr& (0+255),w,b
  3095  000F0A  26D9               	addwf	fsr2l,f,c
  3096  000F0C  0100               	movlb	0	; () banked
  3097  000F0E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3098  000F10  22DA               	addwfc	fsr2h,f,c
  3099  000F12  0E00               	movlw	0
  3100  000F14  6EDF               	movwf	indf2,c
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;my_i2c.c: 309: ic_ptr->status = 0x5;
  3104  000F16  0100               	movlb	0	; () banked
  3105  000F18  EE20 F00C          	lfsr	2,12
  3106  000F1C  0100               	movlb	0	; () banked
  3107  000F1E  51DF               	movf	_ic_ptr& (0+255),w,b
  3108  000F20  26D9               	addwf	fsr2l,f,c
  3109  000F22  0100               	movlb	0	; () banked
  3110  000F24  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3111  000F26  22DA               	addwfc	fsr2h,f,c
  3112  000F28  0E05               	movlw	5
  3113  000F2A  6EDF               	movwf	indf2,c
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;my_i2c.c: 310: ic_ptr->error_count = 0;
  3117  000F2C  0100               	movlb	0	; () banked
  3118  000F2E  EE20 F00E          	lfsr	2,14
  3119  000F32  0100               	movlb	0	; () banked
  3120  000F34  51DF               	movf	_ic_ptr& (0+255),w,b
  3121  000F36  26D9               	addwf	fsr2l,f,c
  3122  000F38  0100               	movlb	0	; () banked
  3123  000F3A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3124  000F3C  22DA               	addwfc	fsr2h,f,c
  3125  000F3E  0E00               	movlw	0
  3126  000F40  6EDF               	movwf	indf2,c
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;my_i2c.c: 311: ic_ptr->sendBufInd = 0;
  3130  000F42  0100               	movlb	0	; () banked
  3131  000F44  EE20 F027          	lfsr	2,39
  3132  000F48  0100               	movlb	0	; () banked
  3133  000F4A  51DF               	movf	_ic_ptr& (0+255),w,b
  3134  000F4C  26D9               	addwf	fsr2l,f,c
  3135  000F4E  0100               	movlb	0	; () banked
  3136  000F50  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3137  000F52  22DA               	addwfc	fsr2h,f,c
  3138  000F54  0E00               	movlw	0
  3139  000F56  6EDF               	movwf	indf2,c
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;my_i2c.c: 312: ic_ptr->sendBufLen = 0;
  3143  000F58  0100               	movlb	0	; () banked
  3144  000F5A  EE20 F026          	lfsr	2,38
  3145  000F5E  0100               	movlb	0	; () banked
  3146  000F60  51DF               	movf	_ic_ptr& (0+255),w,b
  3147  000F62  26D9               	addwf	fsr2l,f,c
  3148  000F64  0100               	movlb	0	; () banked
  3149  000F66  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  3150  000F68  22DA               	addwfc	fsr2h,f,c
  3151  000F6A  0E00               	movlw	0
  3152  000F6C  6EDF               	movwf	indf2,c
  3153                           
  3154                           ; BSR set to: 0
  3155  000F6E  0012               	return	
  3156  000F70                     __end_of_init_i2c:
  3157                           	opt stack 0
  3158                           tblptru	equ	0xFF8
  3159                           tblptrh	equ	0xFF7
  3160                           tblptrl	equ	0xFF6
  3161                           tablat	equ	0xFF5
  3162                           prodh	equ	0xFF4
  3163                           prodl	equ	0xFF3
  3164                           intcon	equ	0xFF2
  3165                           postinc0	equ	0xFEE
  3166                           wreg	equ	0xFE8
  3167                           indf1	equ	0xFE7
  3168                           fsr1h	equ	0xFE2
  3169                           fsr1l	equ	0xFE1
  3170                           indf2	equ	0xFDF
  3171                           postinc2	equ	0xFDE
  3172                           postdec2	equ	0xFDD
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _i2c_configure_slave *****************
  3178 ;; Defined at:
  3179 ;;		line 318 in file "../src/my_i2c.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  addr            1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  addr            1   31[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3193 ;;      Params:         0       0       0       0       0
  3194 ;;      Locals:         0       1       0       0       0
  3195 ;;      Temps:          0       0       0       0       0
  3196 ;;      Totals:         0       1       0       0       0
  3197 ;;Total ram usage:        1 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:   10
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text14
  3208  001A86                     __ptext14:
  3209                           	opt stack 0
  3210  001A86                     _i2c_configure_slave:
  3211                           	opt stack 19
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;incstack = 0
  3215                           ;i2c_configure_slave@addr stored from wreg
  3216  001A86  CFE8 F0D7          	movff	wreg,i2c_configure_slave@addr
  3217                           
  3218                           ;my_i2c.c: 330: TRISCbits.TRISC3 = 1;
  3219  001A8A  8694               	bsf	3988,3,c	;volatile
  3220                           
  3221                           ;my_i2c.c: 331: TRISCbits.TRISC4 = 1;
  3222  001A8C  8894               	bsf	3988,4,c	;volatile
  3223                           
  3224                           ;my_i2c.c: 336: SSPADD = addr;
  3225  001A8E  C0D7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3226                           
  3227                           ;my_i2c.c: 338: SSPSTAT = 0x0;
  3228  001A92  0E00               	movlw	0
  3229  001A94  6EC7               	movwf	4039,c	;volatile
  3230                           
  3231                           ;my_i2c.c: 339: SSPCON1 = 0x0;
  3232  001A96  0E00               	movlw	0
  3233  001A98  6EC6               	movwf	4038,c	;volatile
  3234                           
  3235                           ;my_i2c.c: 340: SSPCON2 = 0x0;
  3236  001A9A  0E00               	movlw	0
  3237  001A9C  6EC5               	movwf	4037,c	;volatile
  3238                           
  3239                           ;my_i2c.c: 341: SSPCON1 |= 0x0E;
  3240  001A9E  0E0E               	movlw	14
  3241  001AA0  12C6               	iorwf	4038,f,c	;volatile
  3242                           
  3243                           ;my_i2c.c: 342: SSPSTAT |= 0b10000000;
  3244  001AA2  8EC7               	bsf	4039,7,c	;volatile
  3245                           
  3246                           ;my_i2c.c: 345: TRISCbits.TRISC3 = 1;
  3247  001AA4  8694               	bsf	3988,3,c	;volatile
  3248                           
  3249                           ;my_i2c.c: 346: TRISCbits.TRISC4 = 1;
  3250  001AA6  8894               	bsf	3988,4,c	;volatile
  3251                           
  3252                           ;my_i2c.c: 367: SSPCON2bits.SEN = 1;
  3253  001AA8  80C5               	bsf	4037,0,c	;volatile
  3254                           
  3255                           ;my_i2c.c: 368: SSPCON1 |= 0b00100000;
  3256  001AAA  8AC6               	bsf	4038,5,c	;volatile
  3257  001AAC  0012               	return	
  3258  001AAE                     __end_of_i2c_configure_slave:
  3259                           	opt stack 0
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           prodh	equ	0xFF4
  3265                           prodl	equ	0xFF3
  3266                           intcon	equ	0xFF2
  3267                           postinc0	equ	0xFEE
  3268                           wreg	equ	0xFE8
  3269                           indf1	equ	0xFE7
  3270                           fsr1h	equ	0xFE2
  3271                           fsr1l	equ	0xFE1
  3272                           indf2	equ	0xFDF
  3273                           postinc2	equ	0xFDE
  3274                           postdec2	equ	0xFDD
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _enable_interrupts *****************
  3280 ;; Defined at:
  3281 ;;		line 14 in file "../src/interrupts.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		None
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3295 ;;      Params:         0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:   10
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text15
  3310  001C06                     __ptext15:
  3311                           	opt stack 0
  3312  001C06                     _enable_interrupts:
  3313                           	opt stack 19
  3314                           
  3315                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3316                           
  3317                           ;incstack = 0
  3318  001C06  8ED0               	bsf	4048,7,c	;volatile
  3319                           
  3320                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3321  001C08  8EF2               	bsf	intcon,7,c	;volatile
  3322                           
  3323                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3324  001C0A  8CF2               	bsf	intcon,6,c	;volatile
  3325  001C0C  0012               	return	
  3326  001C0E                     __end_of_enable_interrupts:
  3327                           	opt stack 0
  3328                           tblptru	equ	0xFF8
  3329                           tblptrh	equ	0xFF7
  3330                           tblptrl	equ	0xFF6
  3331                           tablat	equ	0xFF5
  3332                           prodh	equ	0xFF4
  3333                           prodl	equ	0xFF3
  3334                           intcon	equ	0xFF2
  3335                           postinc0	equ	0xFEE
  3336                           wreg	equ	0xFE8
  3337                           indf1	equ	0xFE7
  3338                           fsr1h	equ	0xFE2
  3339                           fsr1l	equ	0xFE1
  3340                           indf2	equ	0xFDF
  3341                           postinc2	equ	0xFDE
  3342                           postdec2	equ	0xFDD
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _block_on_To_msgqueues *****************
  3348 ;; Defined at:
  3349 ;;		line 258 in file "../src/messages.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;		None               void
  3356 ;; Registers used:
  3357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3363 ;;      Params:         0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0
  3365 ;;      Temps:          0       1       0       0       0
  3366 ;;      Totals:         0       1       0       0       0
  3367 ;;Total ram usage:        1 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:   13
  3370 ;; This function calls:
  3371 ;;		_Delay1KTCYx
  3372 ;;		_check_msg
  3373 ;;		_in_main
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text16
  3380  0013CA                     __ptext16:
  3381                           	opt stack 0
  3382  0013CA                     _block_on_To_msgqueues:
  3383                           	opt stack 16
  3384                           
  3385                           ;messages.c: 259: if (!in_main()) {
  3386                           
  3387                           ;incstack = 0
  3388  0013CA  ECD3  F00B         	call	_in_main	;wreg free
  3389  0013CE  0100               	movlb	0	; () banked
  3390  0013D0  0100               	movlb	0	; () banked
  3391  0013D2  51DC               	movf	(?_in_main+1)& (0+255),w,b
  3392  0013D4  0100               	movlb	0	; () banked
  3393  0013D6  11DB               	iorwf	?_in_main& (0+255),w,b
  3394  0013D8  B4D8               	btfsc	status,2,c
  3395  0013DA  0012               	return	
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;messages.c: 261: }
  3399                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3400                           
  3401                           ; BSR set to: 0
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;messages.c: 260: return;
  3405  0013DC  0100               	movlb	0	; () banked
  3406  0013DE  6FDD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3407  0013E0  0E01               	movlw	1
  3408  0013E2  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  3409  0013E4  0100               	movlb	0	; () banked
  3410  0013E6  51DD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3411  0013E8                     l3164:
  3412                           
  3413                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3414  0013E8  0101               	movlb	1	; () banked
  3415  0013EA  0E01               	movlw	high _ToMainHigh_MQ
  3416  0013EC  0100               	movlb	0	; () banked
  3417  0013EE  0100               	movlb	0	; () banked
  3418  0013F0  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3419  0013F2  0101               	movlb	1	; () banked
  3420  0013F4  0E6C               	movlw	low _ToMainHigh_MQ
  3421  0013F6  0100               	movlb	0	; () banked
  3422  0013F8  0100               	movlb	0	; () banked
  3423  0013FA  6FD7               	movwf	check_msg@qptr& (0+255),b
  3424  0013FC  ECCC  F00C         	call	_check_msg	;wreg free
  3425  001400  0900               	iorlw	0
  3426  001402  B4D8               	btfsc	status,2,c
  3427  001404  D007               	goto	l3170
  3428                           
  3429                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3430  001406  0100               	movlb	0	; () banked
  3431  001408  6FDD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3432  00140A  0E00               	movlw	0
  3433  00140C  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  3434  00140E  0100               	movlb	0	; () banked
  3435  001410  51DD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3436  001412  0012               	return	
  3437  001414                     l3170:
  3438                           
  3439                           ;messages.c: 271: }
  3440                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3441  001414  0100               	movlb	0	; () banked
  3442  001416  0E00               	movlw	high _ToMainLow_MQ
  3443  001418  0100               	movlb	0	; () banked
  3444  00141A  0100               	movlb	0	; () banked
  3445  00141C  6FD8               	movwf	(check_msg@qptr+1)& (0+255),b
  3446  00141E  0100               	movlb	0	; () banked
  3447  001420  0E82               	movlw	low _ToMainLow_MQ
  3448  001422  0100               	movlb	0	; () banked
  3449  001424  0100               	movlb	0	; () banked
  3450  001426  6FD7               	movwf	check_msg@qptr& (0+255),b
  3451  001428  ECCC  F00C         	call	_check_msg	;wreg free
  3452  00142C  0900               	iorlw	0
  3453  00142E  B4D8               	btfsc	status,2,c
  3454  001430  D007               	goto	l3176
  3455                           
  3456                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3457  001432  0100               	movlb	0	; () banked
  3458  001434  6FDD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3459  001436  0E00               	movlw	0
  3460  001438  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  3461  00143A  0100               	movlb	0	; () banked
  3462  00143C  51DD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3463  00143E  0012               	return	
  3464  001440                     l3176:
  3465                           
  3466                           ;messages.c: 278: }
  3467                           ;messages.c: 279: Delay1KTCYx(10);
  3468  001440  0E0A               	movlw	10
  3469  001442  ECC0  F00D         	call	_Delay1KTCYx
  3470  001446  D7D0               	goto	l3164
  3471  001448                     __end_of_block_on_To_msgqueues:
  3472                           	opt stack 0
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           intcon	equ	0xFF2
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           indf1	equ	0xFE7
  3483                           fsr1h	equ	0xFE2
  3484                           fsr1l	equ	0xFE1
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _in_main *****************
  3493 ;; Defined at:
  3494 ;;		line 40 in file "../src/interrupts.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  2   35[BANK0 ] int 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3508 ;;      Params:         0       2       0       0       0
  3509 ;;      Locals:         0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0
  3511 ;;      Totals:         0       2       0       0       0
  3512 ;;Total ram usage:        2 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:   12
  3515 ;; This function calls:
  3516 ;;		_in_high_int
  3517 ;;		_in_low_int
  3518 ;; This function is called by:
  3519 ;;		_block_on_To_msgqueues
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text17
  3524  0017A6                     __ptext17:
  3525                           	opt stack 0
  3526  0017A6                     _in_main:
  3527                           	opt stack 16
  3528                           
  3529                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3530                           
  3531                           ;incstack = 0
  3532  0017A6  ECB0  F00B         	call	_in_low_int	;wreg free
  3533  0017AA  0100               	movlb	0	; () banked
  3534  0017AC  0100               	movlb	0	; () banked
  3535  0017AE  51DA               	movf	(?_in_low_int+1)& (0+255),w,b
  3536  0017B0  0100               	movlb	0	; () banked
  3537  0017B2  11D9               	iorwf	?_in_low_int& (0+255),w,b
  3538  0017B4  A4D8               	btfss	status,2,c
  3539  0017B6  D011               	goto	l2824
  3540                           
  3541                           ; BSR set to: 0
  3542  0017B8  ECD4  F00D         	call	_in_high_int	;wreg free
  3543  0017BC  0100               	movlb	0	; () banked
  3544  0017BE  0100               	movlb	0	; () banked
  3545  0017C0  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3546  0017C2  0100               	movlb	0	; () banked
  3547  0017C4  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3548  0017C6  A4D8               	btfss	status,2,c
  3549  0017C8  D008               	goto	l2824
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;interrupts.c: 42: return (1);
  3553  0017CA  0E00               	movlw	0
  3554  0017CC  0100               	movlb	0	; () banked
  3555  0017CE  0100               	movlb	0	; () banked
  3556  0017D0  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3557  0017D2  0E01               	movlw	1
  3558  0017D4  0100               	movlb	0	; () banked
  3559  0017D6  6FDB               	movwf	?_in_main& (0+255),b
  3560  0017D8  0012               	return	
  3561  0017DA                     l2824:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;interrupts.c: 44: return (0);
  3565  0017DA  0E00               	movlw	0
  3566  0017DC  0100               	movlb	0	; () banked
  3567  0017DE  0100               	movlb	0	; () banked
  3568  0017E0  6FDC               	movwf	(?_in_main+1)& (0+255),b
  3569  0017E2  0E00               	movlw	0
  3570  0017E4  0100               	movlb	0	; () banked
  3571  0017E6  6FDB               	movwf	?_in_main& (0+255),b
  3572  0017E8  0012               	return	
  3573  0017EA                     __end_of_in_main:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           indf1	equ	0xFE7
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _in_low_int *****************
  3595 ;; Defined at:
  3596 ;;		line 30 in file "../src/interrupts.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   33[BANK0 ] int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3610 ;;      Params:         0       2       0       0       0
  3611 ;;      Locals:         0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0
  3613 ;;      Totals:         0       2       0       0       0
  3614 ;;Total ram usage:        2 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:   11
  3617 ;; This function calls:
  3618 ;;		_in_high_int
  3619 ;; This function is called by:
  3620 ;;		_in_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text18
  3625  001760                     __ptext18:
  3626                           	opt stack 0
  3627  001760                     _in_low_int:
  3628                           	opt stack 16
  3629                           
  3630                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;incstack = 0
  3634  001760  ACF2               	btfss	intcon,6,c	;volatile
  3635  001762  D008               	goto	l2802
  3636                           
  3637                           ;interrupts.c: 32: return (0);
  3638  001764  0E00               	movlw	0
  3639  001766  0100               	movlb	0	; () banked
  3640  001768  0100               	movlb	0	; () banked
  3641  00176A  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3642  00176C  0E00               	movlw	0
  3643  00176E  0100               	movlb	0	; () banked
  3644  001770  6FD9               	movwf	?_in_low_int& (0+255),b
  3645  001772  0012               	return	
  3646  001774                     l2802:
  3647  001774  ECD4  F00D         	call	_in_high_int	;wreg free
  3648  001778  0100               	movlb	0	; () banked
  3649  00177A  0100               	movlb	0	; () banked
  3650  00177C  51D8               	movf	(?_in_high_int+1)& (0+255),w,b
  3651  00177E  0100               	movlb	0	; () banked
  3652  001780  11D7               	iorwf	?_in_high_int& (0+255),w,b
  3653  001782  B4D8               	btfsc	status,2,c
  3654  001784  D008               	goto	l2810
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;interrupts.c: 34: return (0);
  3658  001786  0E00               	movlw	0
  3659  001788  0100               	movlb	0	; () banked
  3660  00178A  0100               	movlb	0	; () banked
  3661  00178C  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3662  00178E  0E00               	movlw	0
  3663  001790  0100               	movlb	0	; () banked
  3664  001792  6FD9               	movwf	?_in_low_int& (0+255),b
  3665  001794  0012               	return	
  3666  001796                     l2810:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;interrupts.c: 36: return (1);
  3670  001796  0E00               	movlw	0
  3671  001798  0100               	movlb	0	; () banked
  3672  00179A  0100               	movlb	0	; () banked
  3673  00179C  6FDA               	movwf	(?_in_low_int+1)& (0+255),b
  3674  00179E  0E01               	movlw	1
  3675  0017A0  0100               	movlb	0	; () banked
  3676  0017A2  6FD9               	movwf	?_in_low_int& (0+255),b
  3677  0017A4  0012               	return	
  3678  0017A6                     __end_of_in_low_int:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           intcon	equ	0xFF2
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           indf1	equ	0xFE7
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           postdec2	equ	0xFDD
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _in_high_int *****************
  3700 ;; Defined at:
  3701 ;;		line 22 in file "../src/interrupts.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2   31[BANK0 ] int 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3715 ;;      Params:         0       2       0       0       0
  3716 ;;      Locals:         0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0
  3718 ;;      Totals:         0       2       0       0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:   10
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_in_low_int
  3726 ;;		_in_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text19
  3731  001BA8                     __ptext19:
  3732                           	opt stack 0
  3733  001BA8                     _in_high_int:
  3734                           	opt stack 16
  3735                           
  3736                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;incstack = 0
  3740  001BA8  0E00               	movlw	0
  3741  001BAA  AEF2               	btfss	intcon,7,c	;volatile
  3742  001BAC  0E01               	movlw	1
  3743  001BAE  0100               	movlb	0	; () banked
  3744  001BB0  0100               	movlb	0	; () banked
  3745  001BB2  6FD7               	movwf	?_in_high_int& (0+255),b
  3746  001BB4  0100               	movlb	0	; () banked
  3747  001BB6  6BD8               	clrf	(?_in_high_int+1)& (0+255),b
  3748  001BB8  0012               	return	
  3749  001BBA                     __end_of_in_high_int:
  3750                           	opt stack 0
  3751                           tblptru	equ	0xFF8
  3752                           tblptrh	equ	0xFF7
  3753                           tblptrl	equ	0xFF6
  3754                           tablat	equ	0xFF5
  3755                           prodh	equ	0xFF4
  3756                           prodl	equ	0xFF3
  3757                           intcon	equ	0xFF2
  3758                           postinc0	equ	0xFEE
  3759                           wreg	equ	0xFE8
  3760                           indf1	equ	0xFE7
  3761                           fsr1h	equ	0xFE2
  3762                           fsr1l	equ	0xFE1
  3763                           indf2	equ	0xFDF
  3764                           postinc2	equ	0xFDE
  3765                           postdec2	equ	0xFDD
  3766                           fsr2h	equ	0xFDA
  3767                           fsr2l	equ	0xFD9
  3768                           status	equ	0xFD8
  3769                           
  3770 ;; *************** function _check_msg *****************
  3771 ;; Defined at:
  3772 ;;		line 222 in file "../src/messages.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  qptr            2   31[BANK0 ] PTR struct __msg_queue
  3775 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      unsigned char 
  3780 ;; Registers used:
  3781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3787 ;;      Params:         0       2       0       0       0
  3788 ;;      Locals:         0       0       0       0       0
  3789 ;;      Temps:          0       1       0       0       0
  3790 ;;      Totals:         0       3       0       0       0
  3791 ;;Total ram usage:        3 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:   10
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_block_on_To_msgqueues
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text20
  3802  001998                     __ptext20:
  3803                           	opt stack 0
  3804  001998                     _check_msg:
  3805                           	opt stack 18
  3806                           
  3807                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;incstack = 0
  3811  001998  0100               	movlb	0	; () banked
  3812  00199A  EE20 F035          	lfsr	2,53
  3813  00199E  0100               	movlb	0	; () banked
  3814  0019A0  51D7               	movf	check_msg@qptr& (0+255),w,b
  3815  0019A2  26D9               	addwf	fsr2l,f,c
  3816  0019A4  0100               	movlb	0	; () banked
  3817  0019A6  51D8               	movf	(check_msg@qptr+1)& (0+255),w,b
  3818  0019A8  22DA               	addwfc	fsr2h,f,c
  3819  0019AA  50DF               	movf	indf2,w,c
  3820  0019AC  0100               	movlb	0	; () banked
  3821  0019AE  6FD9               	movwf	??_check_msg& (0+255),b
  3822  0019B0  0100               	movlb	0	; () banked
  3823  0019B2  51D9               	movf	??_check_msg& (0+255),w,b
  3824  0019B4  0D0D               	mullw	13
  3825  0019B6  50F3               	movf	prodl,w,c
  3826  0019B8  0100               	movlb	0	; () banked
  3827  0019BA  0100               	movlb	0	; () banked
  3828  0019BC  25D7               	addwf	check_msg@qptr& (0+255),w,b
  3829  0019BE  6ED9               	movwf	fsr2l,c
  3830  0019C0  50F4               	movf	prodh,w,c
  3831  0019C2  0100               	movlb	0	; () banked
  3832  0019C4  0100               	movlb	0	; () banked
  3833  0019C6  21D8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3834  0019C8  6EDA               	movwf	fsr2h,c
  3835  0019CA  50DF               	movf	indf2,w,c
  3836  0019CC  0012               	return	
  3837  0019CE                     __end_of_check_msg:
  3838                           	opt stack 0
  3839                           tblptru	equ	0xFF8
  3840                           tblptrh	equ	0xFF7
  3841                           tblptrl	equ	0xFF6
  3842                           tablat	equ	0xFF5
  3843                           prodh	equ	0xFF4
  3844                           prodl	equ	0xFF3
  3845                           intcon	equ	0xFF2
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf1	equ	0xFE7
  3849                           fsr1h	equ	0xFE2
  3850                           fsr1l	equ	0xFE1
  3851                           indf2	equ	0xFDF
  3852                           postinc2	equ	0xFDE
  3853                           postdec2	equ	0xFDD
  3854                           fsr2h	equ	0xFDA
  3855                           fsr2l	equ	0xFD9
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function _Delay1KTCYx *****************
  3859 ;; Defined at:
  3860 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  unit            1    wreg     unsigned char 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  unit            1   31[BANK0 ] unsigned char 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;		None               void
  3867 ;; Registers used:
  3868 ;;		wreg
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3874 ;;      Params:         0       0       0       0       0
  3875 ;;      Locals:         0       1       0       0       0
  3876 ;;      Temps:          0       0       0       0       0
  3877 ;;      Totals:         0       1       0       0       0
  3878 ;;Total ram usage:        1 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:   10
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_block_on_To_msgqueues
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text21
  3889  001B80                     __ptext21:
  3890                           	opt stack 0
  3891  001B80                     _Delay1KTCYx:
  3892                           	opt stack 18
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;incstack = 0
  3896                           ;Delay1KTCYx@unit stored from wreg
  3897  001B80  CFE8 F0D7          	movff	wreg,Delay1KTCYx@unit
  3898  001B84                     l700:
  3899  001B84  0EFA               	movlw	250
  3900  001B86                     u2467:
  3901  001B86  F000               	nop	
  3902  001B88  2EE8               	decfsz	wreg,f,c
  3903  001B8A  D7FD               	goto	u2467
  3904  001B8C  0100               	movlb	0	; () banked
  3905  001B8E  0100               	movlb	0	; () banked
  3906  001B90  2FD7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3907  001B92  D7F8               	goto	l700
  3908  001B94  0012               	return	
  3909  001B96                     __end_of_Delay1KTCYx:
  3910                           	opt stack 0
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           prodh	equ	0xFF4
  3916                           prodl	equ	0xFF3
  3917                           intcon	equ	0xFF2
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           indf1	equ	0xFE7
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           postinc2	equ	0xFDE
  3925                           postdec2	equ	0xFDD
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function _ToMainLow_recvmsg *****************
  3931 ;; Defined at:
  3932 ;;		line 112 in file "../src/messages.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  maxlength       1    wreg     unsigned char 
  3935 ;;  msgtype         2   16[BANK1 ] PTR unsigned char 
  3936 ;;		 -> main@msgtype(1), 
  3937 ;;  data            2   18[BANK1 ] PTR void 
  3938 ;;		 -> main@msgbuffer(11), 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  maxlength       1   20[BANK1 ] unsigned char 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      char 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3950 ;;      Params:         0       0       4       0       0
  3951 ;;      Locals:         0       0       1       0       0
  3952 ;;      Temps:          0       0       0       0       0
  3953 ;;      Totals:         0       0       5       0       0
  3954 ;;Total ram usage:        5 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:   12
  3957 ;; This function calls:
  3958 ;;		_recv_msg
  3959 ;; This function is called by:
  3960 ;;		_main
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text22
  3965  0017EA                     __ptext22:
  3966                           	opt stack 0
  3967  0017EA                     _ToMainLow_recvmsg:
  3968                           	opt stack 17
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;incstack = 0
  3972                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3973  0017EA  CFE8 F1B6          	movff	wreg,ToMainLow_recvmsg@maxlength
  3974                           
  3975                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3976  0017EE  0100               	movlb	0	; () banked
  3977  0017F0  0E00               	movlw	high _ToMainLow_MQ
  3978  0017F2  0101               	movlb	1	; () banked
  3979  0017F4  0101               	movlb	1	; () banked
  3980  0017F6  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  3981  0017F8  0100               	movlb	0	; () banked
  3982  0017FA  0E82               	movlw	low _ToMainLow_MQ
  3983  0017FC  0101               	movlb	1	; () banked
  3984  0017FE  0101               	movlb	1	; () banked
  3985  001800  6FA6               	movwf	recv_msg@qptr& (0+255),b
  3986  001802  C1B6  F1A8         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3987  001806  0101               	movlb	1	; () banked
  3988  001808  0101               	movlb	1	; () banked
  3989  00180A  C1B3  F1AA         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3990  00180E  0101               	movlb	1	; () banked
  3991  001810  0101               	movlb	1	; () banked
  3992  001812  C1B2  F1A9         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3993  001816  0101               	movlb	1	; () banked
  3994  001818  0101               	movlb	1	; () banked
  3995  00181A  C1B5  F1AC         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3996  00181E  0101               	movlb	1	; () banked
  3997  001820  0101               	movlb	1	; () banked
  3998  001822  C1B4  F1AB         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3999  001826  ECCB  F005         	call	_recv_msg	;wreg free
  4000  00182A  0012               	return	
  4001  00182C                     __end_of_ToMainLow_recvmsg:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           indf1	equ	0xFE7
  4013                           fsr1h	equ	0xFE2
  4014                           fsr1l	equ	0xFE1
  4015                           indf2	equ	0xFDF
  4016                           postinc2	equ	0xFDE
  4017                           postdec2	equ	0xFDD
  4018                           fsr2h	equ	0xFDA
  4019                           fsr2l	equ	0xFD9
  4020                           status	equ	0xFD8
  4021                           
  4022 ;; *************** function _ToMainHigh_recvmsg *****************
  4023 ;; Defined at:
  4024 ;;		line 135 in file "../src/messages.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  maxlength       1    wreg     unsigned char 
  4027 ;;  msgtype         2   16[BANK1 ] PTR unsigned char 
  4028 ;;		 -> main@msgtype(1), 
  4029 ;;  data            2   18[BANK1 ] PTR void 
  4030 ;;		 -> main@msgbuffer(11), 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  maxlength       1   20[BANK1 ] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      char 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4042 ;;      Params:         0       0       4       0       0
  4043 ;;      Locals:         0       0       1       0       0
  4044 ;;      Temps:          0       0       0       0       0
  4045 ;;      Totals:         0       0       5       0       0
  4046 ;;Total ram usage:        5 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:   12
  4049 ;; This function calls:
  4050 ;;		_recv_msg
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text23
  4057  00182C                     __ptext23:
  4058                           	opt stack 0
  4059  00182C                     _ToMainHigh_recvmsg:
  4060                           	opt stack 17
  4061                           
  4062                           ;incstack = 0
  4063                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4064  00182C  CFE8 F1B6          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4065                           
  4066                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4067  001830  0101               	movlb	1	; () banked
  4068  001832  0E01               	movlw	high _ToMainHigh_MQ
  4069  001834  0101               	movlb	1	; () banked
  4070  001836  0101               	movlb	1	; () banked
  4071  001838  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4072  00183A  0101               	movlb	1	; () banked
  4073  00183C  0E6C               	movlw	low _ToMainHigh_MQ
  4074  00183E  0101               	movlb	1	; () banked
  4075  001840  0101               	movlb	1	; () banked
  4076  001842  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4077  001844  C1B6  F1A8         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4078  001848  0101               	movlb	1	; () banked
  4079  00184A  0101               	movlb	1	; () banked
  4080  00184C  C1B3  F1AA         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4081  001850  0101               	movlb	1	; () banked
  4082  001852  0101               	movlb	1	; () banked
  4083  001854  C1B2  F1A9         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4084  001858  0101               	movlb	1	; () banked
  4085  00185A  0101               	movlb	1	; () banked
  4086  00185C  C1B5  F1AC         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4087  001860  0101               	movlb	1	; () banked
  4088  001862  0101               	movlb	1	; () banked
  4089  001864  C1B4  F1AB         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4090  001868  ECCB  F005         	call	_recv_msg	;wreg free
  4091  00186C  0012               	return	
  4092  00186E                     __end_of_ToMainHigh_recvmsg:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           indf1	equ	0xFE7
  4104                           fsr1h	equ	0xFE2
  4105                           fsr1l	equ	0xFE1
  4106                           indf2	equ	0xFDF
  4107                           postinc2	equ	0xFDE
  4108                           postdec2	equ	0xFDD
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function _recv_msg *****************
  4114 ;; Defined at:
  4115 ;;		line 63 in file "../src/messages.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  4118 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4119 ;;  maxlength       1    6[BANK1 ] unsigned char 
  4120 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4121 ;;		 -> main@msgtype(1), 
  4122 ;;  data            2    9[BANK1 ] PTR void 
  4123 ;;		 -> main@msgbuffer(11), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  4126 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4127 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4128 ;;  tlength         2   12[BANK1 ] unsigned int 
  4129 ;;  slot            1   11[BANK1 ] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      char 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4139 ;;      Params:         0       0       7       0       0
  4140 ;;      Locals:         0       0       5       0       0
  4141 ;;      Temps:          0       2       0       0       0
  4142 ;;      Totals:         0       2      12       0       0
  4143 ;;Total ram usage:       14 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:   11
  4146 ;; This function calls:
  4147 ;;		_memcpy
  4148 ;; This function is called by:
  4149 ;;		_ToMainLow_recvmsg
  4150 ;;		_ToMainHigh_recvmsg
  4151 ;;		_FromMainLow_recvmsg
  4152 ;;		_FromMainHigh_recvmsg
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text24
  4157  000B96                     __ptext24:
  4158                           	opt stack 0
  4159  000B96                     _recv_msg:
  4160                           	opt stack 17
  4161                           
  4162                           ;messages.c: 64: unsigned char slot;
  4163                           ;messages.c: 68: msg *qmsg;
  4164                           ;messages.c: 69: size_t tlength;
  4165                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4166                           
  4167                           ;incstack = 0
  4168  000B96  0101               	movlb	1	; () banked
  4169  000B98  EE20 F035          	lfsr	2,53
  4170  000B9C  0101               	movlb	1	; () banked
  4171  000B9E  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4172  000BA0  26D9               	addwf	fsr2l,f,c
  4173  000BA2  0101               	movlb	1	; () banked
  4174  000BA4  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4175  000BA6  22DA               	addwfc	fsr2h,f,c
  4176  000BA8  50DF               	movf	indf2,w,c
  4177  000BAA  0101               	movlb	1	; () banked
  4178  000BAC  0101               	movlb	1	; () banked
  4179  000BAE  6FAD               	movwf	recv_msg@slot& (0+255),b
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4183  000BB0  0101               	movlb	1	; () banked
  4184  000BB2  0101               	movlb	1	; () banked
  4185  000BB4  51AD               	movf	recv_msg@slot& (0+255),w,b
  4186  000BB6  0D0D               	mullw	13
  4187  000BB8  50F3               	movf	prodl,w,c
  4188  000BBA  0101               	movlb	1	; () banked
  4189  000BBC  0101               	movlb	1	; () banked
  4190  000BBE  25A6               	addwf	recv_msg@qptr& (0+255),w,b
  4191  000BC0  0101               	movlb	1	; () banked
  4192  000BC2  0101               	movlb	1	; () banked
  4193  000BC4  6FB0               	movwf	recv_msg@qmsg& (0+255),b
  4194  000BC6  50F4               	movf	prodh,w,c
  4195  000BC8  0101               	movlb	1	; () banked
  4196  000BCA  0101               	movlb	1	; () banked
  4197  000BCC  21A7               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4198  000BCE  0101               	movlb	1	; () banked
  4199  000BD0  6FB1               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4200                           
  4201                           ; BSR set to: 1
  4202                           ;messages.c: 74: if (qmsg->full == 1) {
  4203  000BD2  0E01               	movlw	1
  4204  000BD4  C1B0  FFD9         	movff	recv_msg@qmsg,fsr2l
  4205  000BD8  C1B1  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4206  000BDC  62DF               	cpfseq	indf2,c
  4207  000BDE  D074               	goto	l3322
  4208                           
  4209                           ; BSR set to: 1
  4210                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4211  000BE0  0101               	movlb	1	; () banked
  4212  000BE2  EE20 F001          	lfsr	2,1
  4213  000BE6  0101               	movlb	1	; () banked
  4214  000BE8  51B0               	movf	recv_msg@qmsg& (0+255),w,b
  4215  000BEA  26D9               	addwf	fsr2l,f,c
  4216  000BEC  0101               	movlb	1	; () banked
  4217  000BEE  51B1               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4218  000BF0  22DA               	addwfc	fsr2h,f,c
  4219  000BF2  50DF               	movf	indf2,w,c
  4220  000BF4  0101               	movlb	1	; () banked
  4221  000BF6  0101               	movlb	1	; () banked
  4222  000BF8  5DA8               	subwf	recv_msg@maxlength& (0+255),w,b
  4223  000BFA  B0D8               	btfsc	status,0,c
  4224  000BFC  D002               	goto	l3306
  4225                           
  4226                           ; BSR set to: 1
  4227                           ;messages.c: 77: return (-3);
  4228  000BFE  0EFD               	movlw	253
  4229  000C00  0012               	return	
  4230  000C02                     l3306:
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;messages.c: 78: }
  4234                           ;messages.c: 80: tlength = qmsg->length;
  4235  000C02  0101               	movlb	1	; () banked
  4236  000C04  EE20 F001          	lfsr	2,1
  4237  000C08  0101               	movlb	1	; () banked
  4238  000C0A  51B0               	movf	recv_msg@qmsg& (0+255),w,b
  4239  000C0C  26D9               	addwf	fsr2l,f,c
  4240  000C0E  0101               	movlb	1	; () banked
  4241  000C10  51B1               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4242  000C12  22DA               	addwfc	fsr2h,f,c
  4243  000C14  50DF               	movf	indf2,w,c
  4244  000C16  0100               	movlb	0	; () banked
  4245  000C18  6FDD               	movwf	??_recv_msg& (0+255),b
  4246  000C1A  0100               	movlb	0	; () banked
  4247  000C1C  51DD               	movf	??_recv_msg& (0+255),w,b
  4248  000C1E  0101               	movlb	1	; () banked
  4249  000C20  0101               	movlb	1	; () banked
  4250  000C22  6FAE               	movwf	recv_msg@tlength& (0+255),b
  4251  000C24  0101               	movlb	1	; () banked
  4252  000C26  6BAF               	clrf	(recv_msg@tlength+1)& (0+255),b
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4256  000C28  0101               	movlb	1	; () banked
  4257  000C2A  0100               	movlb	0	; () banked
  4258  000C2C  C1AC  F0D8         	movff	recv_msg@data+1,memcpy@d1+1
  4259  000C30  0101               	movlb	1	; () banked
  4260  000C32  0100               	movlb	0	; () banked
  4261  000C34  C1AB  F0D7         	movff	recv_msg@data,memcpy@d1
  4262  000C38  0E03               	movlw	3
  4263  000C3A  0101               	movlb	1	; () banked
  4264  000C3C  0101               	movlb	1	; () banked
  4265  000C3E  25B0               	addwf	recv_msg@qmsg& (0+255),w,b
  4266  000C40  0100               	movlb	0	; () banked
  4267  000C42  6FDD               	movwf	??_recv_msg& (0+255),b
  4268  000C44  0E00               	movlw	0
  4269  000C46  0101               	movlb	1	; () banked
  4270  000C48  0101               	movlb	1	; () banked
  4271  000C4A  21B1               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4272  000C4C  0100               	movlb	0	; () banked
  4273  000C4E  6FDE               	movwf	(??_recv_msg+1)& (0+255),b
  4274  000C50  C0DD  F0D9         	movff	??_recv_msg,memcpy@s1
  4275  000C54  C0DE  F0DA         	movff	??_recv_msg+1,memcpy@s1+1
  4276  000C58  C1AE  F0DB         	movff	recv_msg@tlength,memcpy@n
  4277  000C5C  C1AF  F0DC         	movff	recv_msg@tlength+1,memcpy@n+1
  4278  000C60  EC0F  F00B         	call	_memcpy	;wreg free
  4279                           
  4280                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4281  000C64  0101               	movlb	1	; () banked
  4282  000C66  EE20 F035          	lfsr	2,53
  4283  000C6A  0101               	movlb	1	; () banked
  4284  000C6C  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4285  000C6E  26D9               	addwf	fsr2l,f,c
  4286  000C70  0101               	movlb	1	; () banked
  4287  000C72  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4288  000C74  22DA               	addwfc	fsr2h,f,c
  4289  000C76  0101               	movlb	1	; () banked
  4290  000C78  EE10 F035          	lfsr	1,53
  4291  000C7C  0101               	movlb	1	; () banked
  4292  000C7E  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4293  000C80  26E1               	addwf	fsr1l,f,c
  4294  000C82  0101               	movlb	1	; () banked
  4295  000C84  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4296  000C86  22E2               	addwfc	fsr1h,f,c
  4297  000C88  50E7               	movf	indf1,w,c
  4298  000C8A  0100               	movlb	0	; () banked
  4299  000C8C  6FDD               	movwf	??_recv_msg& (0+255),b
  4300  000C8E  0100               	movlb	0	; () banked
  4301  000C90  29DD               	incf	??_recv_msg& (0+255),w,b
  4302  000C92  0B03               	andlw	3
  4303  000C94  6EDF               	movwf	indf2,c
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4307  000C96  0101               	movlb	1	; () banked
  4308  000C98  EE20 F002          	lfsr	2,2
  4309  000C9C  0101               	movlb	1	; () banked
  4310  000C9E  51B0               	movf	recv_msg@qmsg& (0+255),w,b
  4311  000CA0  26D9               	addwf	fsr2l,f,c
  4312  000CA2  0101               	movlb	1	; () banked
  4313  000CA4  51B1               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4314  000CA6  22DA               	addwfc	fsr2h,f,c
  4315  000CA8  C1A9  FFE1         	movff	recv_msg@msgtype,fsr1l
  4316  000CAC  C1AA  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4317  000CB0  CFDF FFE7          	movff	indf2,indf1
  4318                           
  4319                           ; BSR set to: 1
  4320                           ;messages.c: 91: qmsg->full = 0;
  4321  000CB4  C1B0  FFD9         	movff	recv_msg@qmsg,fsr2l
  4322  000CB8  C1B1  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4323  000CBC  0E00               	movlw	0
  4324  000CBE  6EDF               	movwf	indf2,c
  4325                           
  4326                           ; BSR set to: 1
  4327                           ;messages.c: 92: return (tlength);
  4328  000CC0  0101               	movlb	1	; () banked
  4329  000CC2  0101               	movlb	1	; () banked
  4330  000CC4  51AE               	movf	recv_msg@tlength& (0+255),w,b
  4331  000CC6  0012               	return	
  4332  000CC8                     l3322:
  4333                           
  4334                           ; BSR set to: 1
  4335                           ;messages.c: 94: return (-4);
  4336  000CC8  0EFC               	movlw	252
  4337  000CCA  0012               	return	
  4338  000CCC                     __end_of_recv_msg:
  4339                           	opt stack 0
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           prodh	equ	0xFF4
  4345                           prodl	equ	0xFF3
  4346                           intcon	equ	0xFF2
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           indf1	equ	0xFE7
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           postinc2	equ	0xFDE
  4354                           postdec2	equ	0xFDD
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _memcpy *****************
  4360 ;; Defined at:
  4361 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  d1              2   31[BANK0 ] PTR void 
  4364 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4365 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4366 ;;		 -> main@msgbuffer(11), 
  4367 ;;  s1              2   33[BANK0 ] PTR const void 
  4368 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4369 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4370 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  4371 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4372 ;;		 -> ToMainLow_MQ(54), main@t1thread_data(2), main@ic(40), main@uc(5), 
  4373 ;;  n               2   35[BANK0 ] unsigned int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  4376 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4377 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4378 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  4379 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4380 ;;		 -> ToMainLow_MQ(54), main@t1thread_data(2), main@ic(40), main@uc(5), 
  4381 ;;  d               2    0[BANK1 ] PTR unsigned char 
  4382 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4383 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4384 ;;		 -> main@msgbuffer(11), 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  2   31[BANK0 ] PTR void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4394 ;;      Params:         0       6       0       0       0
  4395 ;;      Locals:         0       0       4       0       0
  4396 ;;      Temps:          0       0       0       0       0
  4397 ;;      Totals:         0       6       4       0       0
  4398 ;;Total ram usage:       10 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:   10
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_send_msg
  4405 ;;		_recv_msg
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text25
  4410  00161E                     __ptext25:
  4411                           	opt stack 0
  4412  00161E                     _memcpy:
  4413                           	opt stack 16
  4414                           
  4415                           ; BSR set to: 1
  4416                           ;incstack = 0
  4417  00161E  0100               	movlb	0	; () banked
  4418  001620  0101               	movlb	1	; () banked
  4419  001622  C0DA  F1A5         	movff	memcpy@s1+1,memcpy@s+1
  4420  001626  0100               	movlb	0	; () banked
  4421  001628  0101               	movlb	1	; () banked
  4422  00162A  C0D9  F1A4         	movff	memcpy@s1,memcpy@s
  4423  00162E  0100               	movlb	0	; () banked
  4424  001630  0101               	movlb	1	; () banked
  4425  001632  C0D8  F1A3         	movff	memcpy@d1+1,memcpy@d+1
  4426  001636  0100               	movlb	0	; () banked
  4427  001638  0101               	movlb	1	; () banked
  4428  00163A  C0D7  F1A2         	movff	memcpy@d1,memcpy@d
  4429  00163E  D012               	goto	l3292
  4430  001640                     l3286:
  4431  001640  C1A4  FFD9         	movff	memcpy@s,fsr2l
  4432  001644  C1A5  FFDA         	movff	memcpy@s+1,fsr2h
  4433  001648  C1A2  FFE1         	movff	memcpy@d,fsr1l
  4434  00164C  C1A3  FFE2         	movff	memcpy@d+1,fsr1h
  4435  001650  CFDF FFE7          	movff	indf2,indf1
  4436  001654  0101               	movlb	1	; () banked
  4437  001656  0101               	movlb	1	; () banked
  4438  001658  4BA4               	infsnz	memcpy@s& (0+255),f,b
  4439  00165A  2BA5               	incf	(memcpy@s+1)& (0+255),f,b
  4440                           
  4441                           ; BSR set to: 1
  4442  00165C  0101               	movlb	1	; () banked
  4443  00165E  0101               	movlb	1	; () banked
  4444  001660  4BA2               	infsnz	memcpy@d& (0+255),f,b
  4445  001662  2BA3               	incf	(memcpy@d+1)& (0+255),f,b
  4446  001664                     l3292:
  4447                           
  4448                           ; BSR set to: 1
  4449  001664  0100               	movlb	0	; () banked
  4450  001666  0100               	movlb	0	; () banked
  4451  001668  07DB               	decf	memcpy@n& (0+255),f,b
  4452  00166A  A0D8               	btfss	status,0,c
  4453  00166C  07DC               	decf	(memcpy@n+1)& (0+255),f,b
  4454  00166E  0100               	movlb	0	; () banked
  4455  001670  29DB               	incf	memcpy@n& (0+255),w,b
  4456  001672  B4D8               	btfsc	status,2,c
  4457  001674  29DC               	incf	(memcpy@n+1)& (0+255),w,b
  4458  001676  B4D8               	btfsc	status,2,c
  4459                           
  4460                           ; BSR set to: 0
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;	Return value of _memcpy is never used
  4464  001678  0012               	return	
  4465  00167A  D7E2               	goto	l3286
  4466  00167C                     __end_of_memcpy:
  4467                           	opt stack 0
  4468                           tblptru	equ	0xFF8
  4469                           tblptrh	equ	0xFF7
  4470                           tblptrl	equ	0xFF6
  4471                           tablat	equ	0xFF5
  4472                           prodh	equ	0xFF4
  4473                           prodl	equ	0xFF3
  4474                           intcon	equ	0xFF2
  4475                           postinc0	equ	0xFEE
  4476                           wreg	equ	0xFE8
  4477                           indf1	equ	0xFE7
  4478                           fsr1h	equ	0xFE2
  4479                           fsr1l	equ	0xFE1
  4480                           indf2	equ	0xFDF
  4481                           postinc2	equ	0xFDE
  4482                           postdec2	equ	0xFDD
  4483                           fsr2h	equ	0xFDA
  4484                           fsr2l	equ	0xFD9
  4485                           status	equ	0xFD8
  4486                           
  4487 ;; *************** function _OpenTimer0 *****************
  4488 ;; Defined at:
  4489 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  config          1    wreg     unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  config          1   31[BANK0 ] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;		None               void
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4503 ;;      Params:         0       0       0       0       0
  4504 ;;      Locals:         0       1       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         0       1       0       0       0
  4507 ;;Total ram usage:        1 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:   10
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text26
  4518  001A5C                     __ptext26:
  4519                           	opt stack 0
  4520  001A5C                     _OpenTimer0:
  4521                           	opt stack 19
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;incstack = 0
  4525                           ;OpenTimer0@config stored from wreg
  4526  001A5C  CFE8 F0D7          	movff	wreg,OpenTimer0@config
  4527  001A60  0100               	movlb	0	; () banked
  4528  001A62  0100               	movlb	0	; () banked
  4529  001A64  51D7               	movf	OpenTimer0@config& (0+255),w,b
  4530  001A66  0B7F               	andlw	127
  4531  001A68  6ED5               	movwf	4053,c	;volatile
  4532                           
  4533                           ; BSR set to: 0
  4534  001A6A  0E00               	movlw	0
  4535  001A6C  6ED7               	movwf	4055,c	;volatile
  4536                           
  4537                           ; BSR set to: 0
  4538  001A6E  0E00               	movlw	0
  4539  001A70  6ED6               	movwf	4054,c	;volatile
  4540                           
  4541                           ; BSR set to: 0
  4542  001A72  94F2               	bcf	intcon,2,c	;volatile
  4543                           
  4544                           ; BSR set to: 0
  4545  001A74  0100               	movlb	0	; () banked
  4546  001A76  0100               	movlb	0	; () banked
  4547  001A78  AFD7               	btfss	OpenTimer0@config& (0+255),7,b
  4548  001A7A  D002               	goto	l451
  4549                           
  4550                           ; BSR set to: 0
  4551  001A7C  8AF2               	bsf	intcon,5,c	;volatile
  4552  001A7E  D001               	goto	l452
  4553  001A80                     l451:
  4554                           
  4555                           ; BSR set to: 0
  4556  001A80  9AF2               	bcf	intcon,5,c	;volatile
  4557  001A82                     l452:
  4558                           
  4559                           ; BSR set to: 0
  4560  001A82  8ED5               	bsf	4053,7,c	;volatile
  4561                           
  4562                           ; BSR set to: 0
  4563  001A84  0012               	return	
  4564  001A86                     __end_of_OpenTimer0:
  4565                           	opt stack 0
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           prodh	equ	0xFF4
  4571                           prodl	equ	0xFF3
  4572                           intcon	equ	0xFF2
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           indf1	equ	0xFE7
  4576                           fsr1h	equ	0xFE2
  4577                           fsr1l	equ	0xFE1
  4578                           indf2	equ	0xFDF
  4579                           postinc2	equ	0xFDE
  4580                           postdec2	equ	0xFDD
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function _OpenADC *****************
  4586 ;; Defined at:
  4587 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  config          1    wreg     unsigned char 
  4590 ;;  config2         1   31[BANK0 ] unsigned char 
  4591 ;;  portconfig      1   32[BANK0 ] unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  config          1   35[BANK0 ] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;		None               void
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4603 ;;      Params:         0       2       0       0       0
  4604 ;;      Locals:         0       1       0       0       0
  4605 ;;      Temps:          0       2       0       0       0
  4606 ;;      Totals:         0       5       0       0       0
  4607 ;;Total ram usage:        5 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:   10
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text27
  4618  001346                     __ptext27:
  4619                           	opt stack 0
  4620  001346                     _OpenADC:
  4621                           	opt stack 19
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;incstack = 0
  4625                           ;OpenADC@config stored from wreg
  4626  001346  CFE8 F0DB          	movff	wreg,OpenADC@config
  4627  00134A  0E00               	movlw	0
  4628  00134C  6EC2               	movwf	4034,c	;volatile
  4629  00134E  0E00               	movlw	0
  4630  001350  6EC0               	movwf	4032,c	;volatile
  4631  001352  0100               	movlb	0	; () banked
  4632  001354  0100               	movlb	0	; () banked
  4633  001356  90D8               	bcf	status,0,c
  4634  001358  31D7               	rrcf	OpenADC@config2& (0+255),w,b
  4635  00135A  0B3C               	andlw	60
  4636  00135C  6EC2               	movwf	4034,c	;volatile
  4637                           
  4638                           ; BSR set to: 0
  4639  00135E  C0D7  F0D9         	movff	OpenADC@config2,??_OpenADC
  4640  001362  0100               	movlb	0	; () banked
  4641  001364  3BD9               	swapf	??_OpenADC& (0+255),f,b
  4642  001366  0EF0               	movlw	240
  4643  001368  17D9               	andwf	??_OpenADC& (0+255),f,b
  4644  00136A  0E30               	movlw	48
  4645  00136C  0100               	movlb	0	; () banked
  4646  00136E  17D9               	andwf	??_OpenADC& (0+255),f,b
  4647  001370  0100               	movlb	0	; () banked
  4648  001372  0100               	movlb	0	; () banked
  4649  001374  51D8               	movf	OpenADC@portconfig& (0+255),w,b
  4650  001376  0B0F               	andlw	15
  4651  001378  0100               	movlb	0	; () banked
  4652  00137A  11D9               	iorwf	??_OpenADC& (0+255),w,b
  4653  00137C  6EC1               	movwf	4033,c	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656  00137E  C0DB  F0D9         	movff	OpenADC@config,??_OpenADC
  4657  001382  0100               	movlb	0	; () banked
  4658  001384  90D8               	bcf	status,0,c
  4659  001386  37D9               	rlcf	??_OpenADC& (0+255),f,b
  4660  001388  0100               	movlb	0	; () banked
  4661  00138A  90D8               	bcf	status,0,c
  4662  00138C  37D9               	rlcf	??_OpenADC& (0+255),f,b
  4663  00138E  0E38               	movlw	56
  4664  001390  0100               	movlb	0	; () banked
  4665  001392  17D9               	andwf	??_OpenADC& (0+255),f,b
  4666  001394  C0DB  F0DA         	movff	OpenADC@config,??_OpenADC+1
  4667  001398  0100               	movlb	0	; () banked
  4668  00139A  3BDA               	swapf	(??_OpenADC+1)& (0+255),f,b
  4669  00139C  0E0F               	movlw	15
  4670  00139E  17DA               	andwf	(??_OpenADC+1)& (0+255),f,b
  4671  0013A0  0E07               	movlw	7
  4672  0013A2  0100               	movlb	0	; () banked
  4673  0013A4  17DA               	andwf	(??_OpenADC+1)& (0+255),f,b
  4674  0013A6  0100               	movlb	0	; () banked
  4675  0013A8  0100               	movlb	0	; () banked
  4676  0013AA  51DB               	movf	OpenADC@config& (0+255),w,b
  4677  0013AC  0B80               	andlw	128
  4678  0013AE  0100               	movlb	0	; () banked
  4679  0013B0  11DA               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4680  0013B2  0100               	movlb	0	; () banked
  4681  0013B4  11D9               	iorwf	??_OpenADC& (0+255),w,b
  4682  0013B6  6EC0               	movwf	4032,c	;volatile
  4683                           
  4684                           ; BSR set to: 0
  4685  0013B8  0100               	movlb	0	; () banked
  4686  0013BA  0100               	movlb	0	; () banked
  4687  0013BC  AFD7               	btfss	OpenADC@config2& (0+255),7,b
  4688  0013BE  D003               	goto	l430
  4689                           
  4690                           ; BSR set to: 0
  4691  0013C0  9C9E               	bcf	3998,6,c	;volatile
  4692  0013C2  8C9D               	bsf	3997,6,c	;volatile
  4693  0013C4  8CF2               	bsf	intcon,6,c	;volatile
  4694  0013C6                     l430:
  4695                           
  4696                           ; BSR set to: 0
  4697  0013C6  80C2               	bsf	4034,0,c	;volatile
  4698                           
  4699                           ; BSR set to: 0
  4700  0013C8  0012               	return	
  4701  0013CA                     __end_of_OpenADC:
  4702                           	opt stack 0
  4703                           tblptru	equ	0xFF8
  4704                           tblptrh	equ	0xFF7
  4705                           tblptrl	equ	0xFF6
  4706                           tablat	equ	0xFF5
  4707                           prodh	equ	0xFF4
  4708                           prodl	equ	0xFF3
  4709                           intcon	equ	0xFF2
  4710                           postinc0	equ	0xFEE
  4711                           wreg	equ	0xFE8
  4712                           indf1	equ	0xFE7
  4713                           fsr1h	equ	0xFE2
  4714                           fsr1l	equ	0xFE1
  4715                           indf2	equ	0xFDF
  4716                           postinc2	equ	0xFDE
  4717                           postdec2	equ	0xFDD
  4718                           fsr2h	equ	0xFDA
  4719                           fsr2l	equ	0xFD9
  4720                           status	equ	0xFD8
  4721                           
  4722 ;; *************** function _Handle_i2c_data_save *****************
  4723 ;; Defined at:
  4724 ;;		line 55 in file "../src/my_i2c.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  length          1    wreg     unsigned char 
  4727 ;;  msg             2   31[BANK0 ] PTR unsigned char 
  4728 ;;		 -> main@msgbuffer(11), 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  length          1    0[COMRAM] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;		None               void
  4733 ;; Registers used:
  4734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4740 ;;      Params:         0       2       0       0       0
  4741 ;;      Locals:         0       0       0       0       0
  4742 ;;      Temps:          0       1       0       0       0
  4743 ;;      Totals:         0       3       0       0       0
  4744 ;;Total ram usage:        3 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:   10
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text28
  4755  001224                     __ptext28:
  4756                           	opt stack 0
  4757  001224                     _Handle_i2c_data_save:
  4758                           	opt stack 19
  4759                           
  4760                           ;my_i2c.c: 57: if(ic_ptr->status != 0x8)
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;incstack = 0
  4764  001224  0100               	movlb	0	; () banked
  4765  001226  EE20 F00C          	lfsr	2,12
  4766  00122A  0100               	movlb	0	; () banked
  4767  00122C  51DF               	movf	_ic_ptr& (0+255),w,b
  4768  00122E  26D9               	addwf	fsr2l,f,c
  4769  001230  0100               	movlb	0	; () banked
  4770  001232  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  4771  001234  22DA               	addwfc	fsr2h,f,c
  4772  001236  50DF               	movf	indf2,w,c
  4773  001238  0A08               	xorlw	8
  4774  00123A  B4D8               	btfsc	status,2,c
  4775  00123C  0012               	return	
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;my_i2c.c: 58: {
  4779                           ;my_i2c.c: 59: if(ic_ptr->sendBufLen < 6)
  4780  00123E  0100               	movlb	0	; () banked
  4781  001240  EE20 F026          	lfsr	2,38
  4782  001244  0100               	movlb	0	; () banked
  4783  001246  51DF               	movf	_ic_ptr& (0+255),w,b
  4784  001248  26D9               	addwf	fsr2l,f,c
  4785  00124A  0100               	movlb	0	; () banked
  4786  00124C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  4787  00124E  22DA               	addwfc	fsr2h,f,c
  4788  001250  50DF               	movf	indf2,w,c
  4789  001252  0100               	movlb	0	; () banked
  4790  001254  6FD9               	movwf	??_Handle_i2c_data_save& (0+255),b
  4791  001256  0E06               	movlw	6
  4792  001258  0100               	movlb	0	; () banked
  4793  00125A  5DD9               	subwf	??_Handle_i2c_data_save& (0+255),w,b
  4794  00125C  B0D8               	btfsc	status,0,c
  4795  00125E  0012               	return	
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;my_i2c.c: 60: {
  4799                           ;my_i2c.c: 61: ic_ptr->sendBuf[ic_ptr->sendBufLen] = *msg;
  4800  001260  C0D7  FFD9         	movff	Handle_i2c_data_save@msg,fsr2l
  4801  001264  C0D8  FFDA         	movff	Handle_i2c_data_save@msg+1,fsr2h
  4802  001268  0100               	movlb	0	; () banked
  4803  00126A  EE10 F026          	lfsr	1,38
  4804  00126E  0100               	movlb	0	; () banked
  4805  001270  51DF               	movf	_ic_ptr& (0+255),w,b
  4806  001272  26E1               	addwf	fsr1l,f,c
  4807  001274  0100               	movlb	0	; () banked
  4808  001276  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  4809  001278  22E2               	addwfc	fsr1h,f,c
  4810  00127A  50E7               	movf	indf1,w,c
  4811  00127C  0100               	movlb	0	; () banked
  4812  00127E  6FD9               	movwf	??_Handle_i2c_data_save& (0+255),b
  4813  001280  0100               	movlb	0	; () banked
  4814  001282  51D9               	movf	??_Handle_i2c_data_save& (0+255),w,b
  4815  001284  0D01               	mullw	1
  4816  001286  0E1C               	movlw	28
  4817  001288  26F3               	addwf	prodl,f,c
  4818  00128A  0E00               	movlw	0
  4819  00128C  22F4               	addwfc	prodh,f,c
  4820  00128E  50F3               	movf	prodl,w,c
  4821  001290  0100               	movlb	0	; () banked
  4822  001292  0100               	movlb	0	; () banked
  4823  001294  25DF               	addwf	_ic_ptr& (0+255),w,b
  4824  001296  6EE1               	movwf	fsr1l,c
  4825  001298  50F4               	movf	prodh,w,c
  4826  00129A  0100               	movlb	0	; () banked
  4827  00129C  0100               	movlb	0	; () banked
  4828  00129E  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4829  0012A0  6EE2               	movwf	fsr1h,c
  4830  0012A2  CFDF FFE7          	movff	indf2,indf1
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;my_i2c.c: 62: ic_ptr->sendBufLen++;
  4834  0012A6  0100               	movlb	0	; () banked
  4835  0012A8  EE20 F026          	lfsr	2,38
  4836  0012AC  0100               	movlb	0	; () banked
  4837  0012AE  51DF               	movf	_ic_ptr& (0+255),w,b
  4838  0012B0  26D9               	addwf	fsr2l,f,c
  4839  0012B2  0100               	movlb	0	; () banked
  4840  0012B4  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  4841  0012B6  22DA               	addwfc	fsr2h,f,c
  4842  0012B8  2ADF               	incf	indf2,f,c
  4843  0012BA  0012               	return	
  4844  0012BC                     __end_of_Handle_i2c_data_save:
  4845                           	opt stack 0
  4846                           tblptru	equ	0xFF8
  4847                           tblptrh	equ	0xFF7
  4848                           tblptrl	equ	0xFF6
  4849                           tablat	equ	0xFF5
  4850                           prodh	equ	0xFF4
  4851                           prodl	equ	0xFF3
  4852                           intcon	equ	0xFF2
  4853                           postinc0	equ	0xFEE
  4854                           wreg	equ	0xFE8
  4855                           indf1	equ	0xFE7
  4856                           fsr1h	equ	0xFE2
  4857                           fsr1l	equ	0xFE1
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _ConvertADC *****************
  4866 ;; Defined at:
  4867 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;		None               void
  4874 ;; Registers used:
  4875 ;;		None
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4881 ;;      Params:         0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0
  4884 ;;      Totals:         0       0       0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:   10
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text29
  4896  001C14                     __ptext29:
  4897                           	opt stack 0
  4898  001C14                     _ConvertADC:
  4899                           	opt stack 19
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;incstack = 0
  4903  001C14  82C2               	bsf	4034,1,c	;volatile
  4904  001C16  0012               	return	
  4905  001C18                     __end_of_ConvertADC:
  4906                           	opt stack 0
  4907                           tblptru	equ	0xFF8
  4908                           tblptrh	equ	0xFF7
  4909                           tblptrl	equ	0xFF6
  4910                           tablat	equ	0xFF5
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           postinc0	equ	0xFEE
  4915                           wreg	equ	0xFE8
  4916                           indf1	equ	0xFE7
  4917                           fsr1h	equ	0xFE2
  4918                           fsr1l	equ	0xFE1
  4919                           indf2	equ	0xFDF
  4920                           postinc2	equ	0xFDE
  4921                           postdec2	equ	0xFDD
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _InterruptHandlerLow *****************
  4927 ;; Defined at:
  4928 ;;		line 128 in file "../src/interrupts.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;		None               void
  4935 ;; Registers used:
  4936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4942 ;;      Params:         0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0
  4944 ;;      Temps:         17       0       0       0       0
  4945 ;;      Totals:        17       0       0       0       0
  4946 ;;Total ram usage:       17 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    9
  4949 ;; This function calls:
  4950 ;;		_timer1_int_handler
  4951 ;;		_uart_recv_int_handler
  4952 ;; This function is called by:
  4953 ;;		Interrupt level 1
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	intcodelo
  4958  000018                     __pintcodelo:
  4959                           	opt stack 0
  4960  000018                     _InterruptHandlerLow:
  4961                           	opt stack 16
  4962                           
  4963                           ;incstack = 0
  4964  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4965  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4966  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4967  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4968  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4969  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4970  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4971  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4972  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4973  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4974  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4975  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4976  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4977  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4978  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4979  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4980  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4981                           
  4982                           ;interrupts.c: 130: if (PIR1bits.TMR1IF) {
  4983  00005C  A09E               	btfss	3998,0,c	;volatile
  4984  00005E  D003               	goto	i1l3516
  4985                           
  4986                           ;interrupts.c: 131: PIR1bits.TMR1IF = 0;
  4987  000060  909E               	bcf	3998,0,c	;volatile
  4988                           
  4989                           ;interrupts.c: 132: timer1_int_handler();
  4990  000062  ECE7  F00C         	call	_timer1_int_handler	;wreg free
  4991  000066                     i1l3516:
  4992                           
  4993                           ;interrupts.c: 133: }
  4994                           ;interrupts.c: 136: if (PIR1bits.RCIF) {
  4995  000066  AA9E               	btfss	3998,5,c	;volatile
  4996  000068  D003               	goto	i1l52
  4997                           
  4998                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  4999  00006A  9A9E               	bcf	3998,5,c	;volatile
  5000                           
  5001                           ;interrupts.c: 138: uart_recv_int_handler();
  5002  00006C  ECC4  F008         	call	_uart_recv_int_handler	;wreg free
  5003  000070                     i1l52:
  5004  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5005  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5006  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5007  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5008  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5009  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5010  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5011  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5012  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5013  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5014  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5015  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5016  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5017  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5018  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5019  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5020  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5021  0000B4  0010               	retfie	
  5022  0000B6                     __end_of_InterruptHandlerLow:
  5023                           	opt stack 0
  5024                           pclatu	equ	0xFFB
  5025                           pclath	equ	0xFFA
  5026                           tblptru	equ	0xFF8
  5027                           tblptrh	equ	0xFF7
  5028                           tblptrl	equ	0xFF6
  5029                           tablat	equ	0xFF5
  5030                           prodh	equ	0xFF4
  5031                           prodl	equ	0xFF3
  5032                           intcon	equ	0xFF2
  5033                           postinc0	equ	0xFEE
  5034                           fsr0h	equ	0xFEA
  5035                           fsr0l	equ	0xFE9
  5036                           wreg	equ	0xFE8
  5037                           indf1	equ	0xFE7
  5038                           fsr1h	equ	0xFE2
  5039                           fsr1l	equ	0xFE1
  5040                           bsr	equ	0xFE0
  5041                           indf2	equ	0xFDF
  5042                           postinc2	equ	0xFDE
  5043                           postdec2	equ	0xFDD
  5044                           fsr2h	equ	0xFDA
  5045                           fsr2l	equ	0xFD9
  5046                           status	equ	0xFD8
  5047                           
  5048 ;; *************** function _uart_recv_int_handler *****************
  5049 ;; Defined at:
  5050 ;;		line 11 in file "../src/my_uart.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;		None               void
  5057 ;; Registers used:
  5058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0
  5066 ;;      Temps:          1       0       0       0       0
  5067 ;;      Totals:         1       0       0       0       0
  5068 ;;Total ram usage:        1 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    8
  5071 ;; This function calls:
  5072 ;;		_ReadUSART
  5073 ;;		_ToMainLow_sendmsg
  5074 ;; This function is called by:
  5075 ;;		_InterruptHandlerLow
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text31
  5080  001188                     __ptext31:
  5081                           	opt stack 0
  5082  001188                     _uart_recv_int_handler:
  5083                           	opt stack 16
  5084                           
  5085                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5086                           
  5087                           ;incstack = 0
  5088  001188  AA9E               	btfss	3998,5,c	;volatile
  5089  00118A  D03C               	goto	i1l3504
  5090                           
  5091                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5092  00118C  EE20 F004          	lfsr	2,4
  5093  001190  504E               	movf	_uc_ptr,w,c
  5094  001192  26D9               	addwf	fsr2l,f,c
  5095  001194  504F               	movf	_uc_ptr+1,w,c
  5096  001196  22DA               	addwfc	fsr2h,f,c
  5097  001198  50DF               	movf	indf2,w,c
  5098  00119A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5099  00119C  501B               	movf	??_uart_recv_int_handler,w,c
  5100  00119E  0D01               	mullw	1
  5101  0011A0  50F3               	movf	prodl,w,c
  5102  0011A2  244E               	addwf	_uc_ptr,w,c
  5103  0011A4  6ED9               	movwf	fsr2l,c
  5104  0011A6  50F4               	movf	prodh,w,c
  5105  0011A8  204F               	addwfc	_uc_ptr+1,w,c
  5106  0011AA  6EDA               	movwf	fsr2h,c
  5107  0011AC  ECB1  F00D         	call	_ReadUSART	;wreg free
  5108  0011B0  6EDF               	movwf	indf2,c
  5109                           
  5110                           ;my_uart.c: 25: uc_ptr->buflen++;
  5111  0011B2  EE20 F004          	lfsr	2,4
  5112  0011B6  504E               	movf	_uc_ptr,w,c
  5113  0011B8  26D9               	addwf	fsr2l,f,c
  5114  0011BA  504F               	movf	_uc_ptr+1,w,c
  5115  0011BC  22DA               	addwfc	fsr2h,f,c
  5116  0011BE  2ADF               	incf	indf2,f,c
  5117                           
  5118                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  5119  0011C0  EE20 F004          	lfsr	2,4
  5120  0011C4  504E               	movf	_uc_ptr,w,c
  5121  0011C6  26D9               	addwf	fsr2l,f,c
  5122  0011C8  504F               	movf	_uc_ptr+1,w,c
  5123  0011CA  22DA               	addwfc	fsr2h,f,c
  5124  0011CC  0E04               	movlw	4
  5125  0011CE  62DF               	cpfseq	indf2,c
  5126  0011D0  D019               	goto	i1l3504
  5127                           
  5128                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5129  0011D2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5130  0011D4  0E1F               	movlw	31
  5131  0011D6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5132  0011D8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5133  0011DA  C04F  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5134  0011DE  C04E  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5135  0011E2  EE20 F004          	lfsr	2,4
  5136  0011E6  504E               	movf	_uc_ptr,w,c
  5137  0011E8  26D9               	addwf	fsr2l,f,c
  5138  0011EA  504F               	movf	_uc_ptr+1,w,c
  5139  0011EC  22DA               	addwfc	fsr2h,f,c
  5140  0011EE  50DF               	movf	indf2,w,c
  5141  0011F0  EC57  F00D         	call	_ToMainLow_sendmsg
  5142                           
  5143                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5144  0011F4  EE20 F004          	lfsr	2,4
  5145  0011F8  504E               	movf	_uc_ptr,w,c
  5146  0011FA  26D9               	addwf	fsr2l,f,c
  5147  0011FC  504F               	movf	_uc_ptr+1,w,c
  5148  0011FE  22DA               	addwfc	fsr2h,f,c
  5149  001200  0E00               	movlw	0
  5150  001202  6EDF               	movwf	indf2,c
  5151  001204                     i1l3504:
  5152                           
  5153                           ;my_uart.c: 30: }
  5154                           ;my_uart.c: 31: }
  5155                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5156  001204  A64D               	btfss	_USART_Status,3,c
  5157  001206  0012               	return	
  5158                           
  5159                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5160  001208  98AB               	bcf	4011,4,c	;volatile
  5161                           
  5162                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5163  00120A  88AB               	bsf	4011,4,c	;volatile
  5164                           
  5165                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5166  00120C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5167  00120E  0E1E               	movlw	30
  5168  001210  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5169  001212  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5170  001214  0E00               	movlw	0
  5171  001216  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5172  001218  0E00               	movlw	0
  5173  00121A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5174  00121C  0E00               	movlw	0
  5175  00121E  EC57  F00D         	call	_ToMainLow_sendmsg
  5176  001222  0012               	return	
  5177  001224                     __end_of_uart_recv_int_handler:
  5178                           	opt stack 0
  5179                           pclatu	equ	0xFFB
  5180                           pclath	equ	0xFFA
  5181                           tblptru	equ	0xFF8
  5182                           tblptrh	equ	0xFF7
  5183                           tblptrl	equ	0xFF6
  5184                           tablat	equ	0xFF5
  5185                           prodh	equ	0xFF4
  5186                           prodl	equ	0xFF3
  5187                           intcon	equ	0xFF2
  5188                           postinc0	equ	0xFEE
  5189                           fsr0h	equ	0xFEA
  5190                           fsr0l	equ	0xFE9
  5191                           wreg	equ	0xFE8
  5192                           indf1	equ	0xFE7
  5193                           fsr1h	equ	0xFE2
  5194                           fsr1l	equ	0xFE1
  5195                           bsr	equ	0xFE0
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _ReadUSART *****************
  5204 ;; Defined at:
  5205 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  data            1    0[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5219 ;;      Params:         0       0       0       0       0
  5220 ;;      Locals:         1       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0
  5222 ;;      Totals:         1       0       0       0       0
  5223 ;;Total ram usage:        1 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    5
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_uart_recv_int_handler
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text32
  5234  001B62                     __ptext32:
  5235                           	opt stack 0
  5236  001B62                     _ReadUSART:
  5237                           	opt stack 18
  5238                           
  5239                           ;incstack = 0
  5240  001B62  0EF2               	movlw	242
  5241  001B64  164D               	andwf	_USART_Status,f,c
  5242  001B66  ACAB               	btfss	4011,6,c	;volatile
  5243  001B68  D003               	goto	i1l485
  5244  001B6A  904D               	bcf	_USART_Status,0,c
  5245  001B6C  B0AB               	btfsc	4011,0,c	;volatile
  5246  001B6E  804D               	bsf	_USART_Status,0,c
  5247  001B70                     i1l485:
  5248  001B70  B4AB               	btfsc	4011,2,c	;volatile
  5249  001B72  844D               	bsf	_USART_Status,2,c
  5250  001B74  B2AB               	btfsc	4011,1,c	;volatile
  5251  001B76  864D               	bsf	_USART_Status,3,c
  5252  001B78  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5253  001B7C  5001               	movf	ReadUSART@data,w,c
  5254  001B7E  0012               	return	
  5255  001B80                     __end_of_ReadUSART:
  5256                           	opt stack 0
  5257                           pclatu	equ	0xFFB
  5258                           pclath	equ	0xFFA
  5259                           tblptru	equ	0xFF8
  5260                           tblptrh	equ	0xFF7
  5261                           tblptrl	equ	0xFF6
  5262                           tablat	equ	0xFF5
  5263                           prodh	equ	0xFF4
  5264                           prodl	equ	0xFF3
  5265                           intcon	equ	0xFF2
  5266                           postinc0	equ	0xFEE
  5267                           fsr0h	equ	0xFEA
  5268                           fsr0l	equ	0xFE9
  5269                           wreg	equ	0xFE8
  5270                           indf1	equ	0xFE7
  5271                           fsr1h	equ	0xFE2
  5272                           fsr1l	equ	0xFE1
  5273                           bsr	equ	0xFE0
  5274                           indf2	equ	0xFDF
  5275                           postinc2	equ	0xFDE
  5276                           postdec2	equ	0xFDD
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281 ;; *************** function _timer1_int_handler *****************
  5282 ;; Defined at:
  5283 ;;		line 41 in file "../src/user_interrupts.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  result          2   27[COMRAM] unsigned int 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;		None               void
  5290 ;; Registers used:
  5291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5297 ;;      Params:         0       0       0       0       0
  5298 ;;      Locals:         2       0       0       0       0
  5299 ;;      Temps:          1       0       0       0       0
  5300 ;;      Totals:         3       0       0       0       0
  5301 ;;Total ram usage:        3 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    8
  5304 ;; This function calls:
  5305 ;;		_ReadTimer1
  5306 ;;		_ToMainLow_sendmsg
  5307 ;;		_WriteTimer1
  5308 ;; This function is called by:
  5309 ;;		_InterruptHandlerLow
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text33
  5314  0019CE                     __ptext33:
  5315                           	opt stack 0
  5316  0019CE                     _timer1_int_handler:
  5317                           	opt stack 16
  5318                           
  5319                           ;user_interrupts.c: 42: unsigned int result;
  5320                           ;user_interrupts.c: 49: result = ReadTimer1();
  5321                           
  5322                           ;incstack = 0
  5323  0019CE  ECE6  F00D         	call	_ReadTimer1	;wreg free
  5324  0019D2  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5325  0019D6  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5326                           
  5327                           ;user_interrupts.c: 50: ToMainLow_sendmsg(0, 11, (void *) 0);
  5328  0019DA  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5329  0019DC  0E0B               	movlw	11
  5330  0019DE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5331  0019E0  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5332  0019E2  0E00               	movlw	0
  5333  0019E4  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5334  0019E6  0E00               	movlw	0
  5335  0019E8  6E18               	movwf	ToMainLow_sendmsg@data,c
  5336  0019EA  0E00               	movlw	0
  5337  0019EC  EC57  F00D         	call	_ToMainLow_sendmsg
  5338                           
  5339                           ;user_interrupts.c: 53: WriteTimer1(0);
  5340  0019F0  0E00               	movlw	0
  5341  0019F2  6E02               	movwf	WriteTimer1@timer1+1,c
  5342  0019F4  0E00               	movlw	0
  5343  0019F6  6E01               	movwf	WriteTimer1@timer1,c
  5344  0019F8  ECDD  F00D         	call	_WriteTimer1	;wreg free
  5345  0019FC  0012               	return	
  5346  0019FE                     __end_of_timer1_int_handler:
  5347                           	opt stack 0
  5348                           pclatu	equ	0xFFB
  5349                           pclath	equ	0xFFA
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           postinc0	equ	0xFEE
  5358                           fsr0h	equ	0xFEA
  5359                           fsr0l	equ	0xFE9
  5360                           wreg	equ	0xFE8
  5361                           indf1	equ	0xFE7
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           bsr	equ	0xFE0
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _WriteTimer1 *****************
  5373 ;; Defined at:
  5374 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  timer1          2    0[COMRAM] unsigned int 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  timer           2    2[COMRAM] struct Timers
  5379 ;; Return value:  Size  Location     Type
  5380 ;;		None               void
  5381 ;; Registers used:
  5382 ;;		None
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5388 ;;      Params:         2       0       0       0       0
  5389 ;;      Locals:         2       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0
  5391 ;;      Totals:         4       0       0       0       0
  5392 ;;Total ram usage:        4 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    5
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_timer1_int_handler
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text34
  5403  001BBA                     __ptext34:
  5404                           	opt stack 0
  5405  001BBA                     _WriteTimer1:
  5406                           	opt stack 18
  5407                           
  5408                           ;incstack = 0
  5409  001BBA  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5410  001BBE  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5411  001BC2  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5412  001BC6  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5413  001BCA  0012               	return	
  5414  001BCC                     __end_of_WriteTimer1:
  5415                           	opt stack 0
  5416                           pclatu	equ	0xFFB
  5417                           pclath	equ	0xFFA
  5418                           tblptru	equ	0xFF8
  5419                           tblptrh	equ	0xFF7
  5420                           tblptrl	equ	0xFF6
  5421                           tablat	equ	0xFF5
  5422                           prodh	equ	0xFF4
  5423                           prodl	equ	0xFF3
  5424                           intcon	equ	0xFF2
  5425                           postinc0	equ	0xFEE
  5426                           fsr0h	equ	0xFEA
  5427                           fsr0l	equ	0xFE9
  5428                           wreg	equ	0xFE8
  5429                           indf1	equ	0xFE7
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           bsr	equ	0xFE0
  5433                           indf2	equ	0xFDF
  5434                           postinc2	equ	0xFDE
  5435                           postdec2	equ	0xFDD
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function _ToMainLow_sendmsg *****************
  5441 ;; Defined at:
  5442 ;;		line 103 in file "../src/messages.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  length          1    wreg     unsigned char 
  5445 ;;  msgtype         1   22[COMRAM] unsigned char 
  5446 ;;  data            2   23[COMRAM] PTR void 
  5447 ;;		 -> timer0_int_handler@val(2), NULL(0), main@uc(5), 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  length          1   25[COMRAM] unsigned char 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      char 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5459 ;;      Params:         3       0       0       0       0
  5460 ;;      Locals:         1       0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0
  5462 ;;      Totals:         4       0       0       0       0
  5463 ;;Total ram usage:        4 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    7
  5466 ;; This function calls:
  5467 ;;		i1_send_msg
  5468 ;; This function is called by:
  5469 ;;		_uart_recv_int_handler
  5470 ;;		_timer1_int_handler
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text35
  5475  001AAE                     __ptext35:
  5476                           	opt stack 0
  5477  001AAE                     _ToMainLow_sendmsg:
  5478                           	opt stack 16
  5479                           
  5480                           ;incstack = 0
  5481                           ;ToMainLow_sendmsg@length stored from wreg
  5482  001AAE  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5483                           
  5484                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5485                           ;	Return value of _ToMainLow_sendmsg is never used
  5486  001AB2  0100               	movlb	0	; () banked
  5487  001AB4  0E00               	movlw	high _ToMainLow_MQ
  5488  001AB6  6E0C               	movwf	i1send_msg@qptr+1,c
  5489  001AB8  0100               	movlb	0	; () banked
  5490  001ABA  0E82               	movlw	low _ToMainLow_MQ
  5491  001ABC  6E0B               	movwf	i1send_msg@qptr,c
  5492  001ABE  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5493  001AC2  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5494  001AC6  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5495  001ACA  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5496  001ACE  EC1C  F008         	call	i1_send_msg	;wreg free
  5497  001AD2  0012               	return	
  5498  001AD4                     __end_of_ToMainLow_sendmsg:
  5499                           	opt stack 0
  5500                           pclatu	equ	0xFFB
  5501                           pclath	equ	0xFFA
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           prodh	equ	0xFF4
  5507                           prodl	equ	0xFF3
  5508                           intcon	equ	0xFF2
  5509                           postinc0	equ	0xFEE
  5510                           fsr0h	equ	0xFEA
  5511                           fsr0l	equ	0xFE9
  5512                           wreg	equ	0xFE8
  5513                           indf1	equ	0xFE7
  5514                           fsr1h	equ	0xFE2
  5515                           fsr1l	equ	0xFE1
  5516                           bsr	equ	0xFE0
  5517                           indf2	equ	0xFDF
  5518                           postinc2	equ	0xFDE
  5519                           postdec2	equ	0xFDD
  5520                           fsr2h	equ	0xFDA
  5521                           fsr2l	equ	0xFD9
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function i1_send_msg *****************
  5525 ;; Defined at:
  5526 ;;		line 24 in file "../src/messages.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5529 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5530 ;;  length          1   12[COMRAM] unsigned char 
  5531 ;;  msgtype         1   13[COMRAM] unsigned char 
  5532 ;;  data            2   14[COMRAM] PTR void 
  5533 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  5534 ;;		 -> i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(40), main@uc(5), 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5537 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5538 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5539 ;;  send_msg        2   17[COMRAM] unsigned int 
  5540 ;;  send_msg        1   19[COMRAM] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      char 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5550 ;;      Params:         6       0       0       0       0
  5551 ;;      Locals:         5       0       0       0       0
  5552 ;;      Temps:          1       0       0       0       0
  5553 ;;      Totals:        12       0       0       0       0
  5554 ;;Total ram usage:       12 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    6
  5557 ;; This function calls:
  5558 ;;		i1_memcpy
  5559 ;; This function is called by:
  5560 ;;		_ToMainLow_sendmsg
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text36
  5565  001038                     __ptext36:
  5566                           	opt stack 0
  5567  001038                     i1_send_msg:
  5568                           	opt stack 16
  5569                           
  5570                           ;messages.c: 25: unsigned char slot;
  5571                           ;messages.c: 27: msg *qmsg;
  5572                           ;messages.c: 28: size_t tlength = length;
  5573                           
  5574                           ;incstack = 0
  5575  001038  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5576  00103C  6A13               	clrf	i1send_msg@tlength+1,c
  5577                           
  5578                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5579  00103E  EE20 F034          	lfsr	2,52
  5580  001042  500B               	movf	i1send_msg@qptr,w,c
  5581  001044  26D9               	addwf	fsr2l,f,c
  5582  001046  500C               	movf	i1send_msg@qptr+1,w,c
  5583  001048  22DA               	addwfc	fsr2h,f,c
  5584  00104A  50DF               	movf	indf2,w,c
  5585  00104C  6E14               	movwf	i1send_msg@slot,c
  5586                           
  5587                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5588  00104E  5014               	movf	i1send_msg@slot,w,c
  5589  001050  0D0D               	mullw	13
  5590  001052  50F3               	movf	prodl,w,c
  5591  001054  240B               	addwf	i1send_msg@qptr,w,c
  5592  001056  6E15               	movwf	i1send_msg@qmsg,c
  5593  001058  50F4               	movf	prodh,w,c
  5594  00105A  200C               	addwfc	i1send_msg@qptr+1,w,c
  5595  00105C  6E16               	movwf	i1send_msg@qmsg+1,c
  5596                           
  5597                           ;messages.c: 41: if (qmsg->full != 0) {
  5598  00105E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5599  001062  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5600  001066  50DF               	movf	indf2,w,c
  5601  001068  B4D8               	btfsc	status,2,c
  5602  00106A  D002               	goto	i1l3470
  5603                           
  5604                           ;messages.c: 42: return (-1);
  5605  00106C  0EFF               	movlw	255
  5606  00106E  0012               	return	
  5607  001070                     i1l3470:
  5608                           
  5609                           ;messages.c: 43: }
  5610                           ;messages.c: 46: qmsg->length = length;
  5611  001070  EE20 F001          	lfsr	2,1
  5612  001074  5015               	movf	i1send_msg@qmsg,w,c
  5613  001076  26D9               	addwf	fsr2l,f,c
  5614  001078  5016               	movf	i1send_msg@qmsg+1,w,c
  5615  00107A  22DA               	addwfc	fsr2h,f,c
  5616  00107C  C00D  FFDF         	movff	i1send_msg@length,indf2
  5617                           
  5618                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5619  001080  EE20 F002          	lfsr	2,2
  5620  001084  5015               	movf	i1send_msg@qmsg,w,c
  5621  001086  26D9               	addwf	fsr2l,f,c
  5622  001088  5016               	movf	i1send_msg@qmsg+1,w,c
  5623  00108A  22DA               	addwfc	fsr2h,f,c
  5624  00108C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5625                           
  5626                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5627  001090  0E03               	movlw	3
  5628  001092  2415               	addwf	i1send_msg@qmsg,w,c
  5629  001094  6E01               	movwf	i1memcpy@d1,c
  5630  001096  0E00               	movlw	0
  5631  001098  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5632  00109A  6E02               	movwf	i1memcpy@d1+1,c
  5633  00109C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5634  0010A0  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5635  0010A4  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5636  0010A8  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5637  0010AC  EC37  F00C         	call	i1_memcpy	;wreg free
  5638                           
  5639                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5640  0010B0  EE20 F034          	lfsr	2,52
  5641  0010B4  500B               	movf	i1send_msg@qptr,w,c
  5642  0010B6  26D9               	addwf	fsr2l,f,c
  5643  0010B8  500C               	movf	i1send_msg@qptr+1,w,c
  5644  0010BA  22DA               	addwfc	fsr2h,f,c
  5645  0010BC  EE10 F034          	lfsr	1,52
  5646  0010C0  500B               	movf	i1send_msg@qptr,w,c
  5647  0010C2  26E1               	addwf	fsr1l,f,c
  5648  0010C4  500C               	movf	i1send_msg@qptr+1,w,c
  5649  0010C6  22E2               	addwfc	fsr1h,f,c
  5650  0010C8  50E7               	movf	indf1,w,c
  5651  0010CA  6E11               	movwf	??i1_send_msg& (0+255),c
  5652  0010CC  2811               	incf	??i1_send_msg,w,c
  5653  0010CE  0B03               	andlw	3
  5654  0010D0  6EDF               	movwf	indf2,c
  5655                           
  5656                           ;messages.c: 59: qmsg->full = 1;
  5657  0010D2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5658  0010D6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5659  0010DA  0E01               	movlw	1
  5660  0010DC  6EDF               	movwf	indf2,c
  5661                           
  5662                           ;messages.c: 60: return (1);
  5663  0010DE  0E01               	movlw	1
  5664  0010E0  0012               	return	
  5665  0010E2                     __end_ofi1_send_msg:
  5666                           	opt stack 0
  5667                           pclatu	equ	0xFFB
  5668                           pclath	equ	0xFFA
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           prodh	equ	0xFF4
  5674                           prodl	equ	0xFF3
  5675                           intcon	equ	0xFF2
  5676                           postinc0	equ	0xFEE
  5677                           fsr0h	equ	0xFEA
  5678                           fsr0l	equ	0xFE9
  5679                           wreg	equ	0xFE8
  5680                           indf1	equ	0xFE7
  5681                           fsr1h	equ	0xFE2
  5682                           fsr1l	equ	0xFE1
  5683                           bsr	equ	0xFE0
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           postdec2	equ	0xFDD
  5687                           fsr2h	equ	0xFDA
  5688                           fsr2l	equ	0xFD9
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function i1_memcpy *****************
  5692 ;; Defined at:
  5693 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  d1              2    0[COMRAM] PTR void 
  5696 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5697 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5698 ;;		 -> main@msgbuffer(11), 
  5699 ;;  s1              2    2[COMRAM] PTR const void 
  5700 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5701 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5702 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  5703 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5704 ;;		 -> ToMainLow_MQ(54), main@t1thread_data(2), main@ic(40), main@uc(5), 
  5705 ;;  n               2    4[COMRAM] unsigned int 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5708 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5709 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5710 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  5711 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5712 ;;		 -> ToMainLow_MQ(54), main@t1thread_data(2), main@ic(40), main@uc(5), 
  5713 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5714 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5715 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5716 ;;		 -> main@msgbuffer(11), 
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  2    0[COMRAM] PTR void 
  5719 ;; Registers used:
  5720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5726 ;;      Params:         6       0       0       0       0
  5727 ;;      Locals:         4       0       0       0       0
  5728 ;;      Temps:          0       0       0       0       0
  5729 ;;      Totals:        10       0       0       0       0
  5730 ;;Total ram usage:       10 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    5
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		i1_send_msg
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text37
  5741  00186E                     __ptext37:
  5742                           	opt stack 0
  5743  00186E                     i1_memcpy:
  5744                           	opt stack 16
  5745                           
  5746                           ;incstack = 0
  5747  00186E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5748  001872  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5749  001876  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5750  00187A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5751  00187E  D00E               	goto	i1l3446
  5752  001880                     i1l3440:
  5753  001880  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5754  001884  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5755  001888  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5756  00188C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5757  001890  CFDF FFE7          	movff	indf2,indf1
  5758  001894  4A09               	infsnz	i1memcpy@s,f,c
  5759  001896  2A0A               	incf	i1memcpy@s+1,f,c
  5760  001898  4A07               	infsnz	i1memcpy@d,f,c
  5761  00189A  2A08               	incf	i1memcpy@d+1,f,c
  5762  00189C                     i1l3446:
  5763  00189C  0605               	decf	i1memcpy@n,f,c
  5764  00189E  A0D8               	btfss	status,0,c
  5765  0018A0  0606               	decf	i1memcpy@n+1,f,c
  5766  0018A2  2805               	incf	i1memcpy@n& (0+255),w,c
  5767  0018A4  B4D8               	btfsc	status,2,c
  5768  0018A6  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5769  0018A8  B4D8               	btfsc	status,2,c
  5770                           
  5771                           ;	Return value of i1_memcpy is never used
  5772  0018AA  0012               	return	
  5773  0018AC  D7E9               	goto	i1l3440
  5774  0018AE                     __end_ofi1_memcpy:
  5775                           	opt stack 0
  5776                           pclatu	equ	0xFFB
  5777                           pclath	equ	0xFFA
  5778                           tblptru	equ	0xFF8
  5779                           tblptrh	equ	0xFF7
  5780                           tblptrl	equ	0xFF6
  5781                           tablat	equ	0xFF5
  5782                           prodh	equ	0xFF4
  5783                           prodl	equ	0xFF3
  5784                           intcon	equ	0xFF2
  5785                           postinc0	equ	0xFEE
  5786                           fsr0h	equ	0xFEA
  5787                           fsr0l	equ	0xFE9
  5788                           wreg	equ	0xFE8
  5789                           indf1	equ	0xFE7
  5790                           fsr1h	equ	0xFE2
  5791                           fsr1l	equ	0xFE1
  5792                           bsr	equ	0xFE0
  5793                           indf2	equ	0xFDF
  5794                           postinc2	equ	0xFDE
  5795                           postdec2	equ	0xFDD
  5796                           fsr2h	equ	0xFDA
  5797                           fsr2l	equ	0xFD9
  5798                           status	equ	0xFD8
  5799                           
  5800 ;; *************** function _ReadTimer1 *****************
  5801 ;; Defined at:
  5802 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  timer           2    2[COMRAM] struct Timers
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  2    0[COMRAM] unsigned int 
  5809 ;; Registers used:
  5810 ;;		None
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5816 ;;      Params:         2       0       0       0       0
  5817 ;;      Locals:         2       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0
  5819 ;;      Totals:         4       0       0       0       0
  5820 ;;Total ram usage:        4 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    5
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		_timer1_int_handler
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text38
  5831  001BCC                     __ptext38:
  5832                           	opt stack 0
  5833  001BCC                     _ReadTimer1:
  5834                           	opt stack 18
  5835                           
  5836                           ;incstack = 0
  5837  001BCC  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5838  001BD0  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5839  001BD4  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5840  001BD8  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5841  001BDC  0012               	return	
  5842  001BDE                     __end_of_ReadTimer1:
  5843                           	opt stack 0
  5844                           pclatu	equ	0xFFB
  5845                           pclath	equ	0xFFA
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           intcon	equ	0xFF2
  5853                           postinc0	equ	0xFEE
  5854                           fsr0h	equ	0xFEA
  5855                           fsr0l	equ	0xFE9
  5856                           wreg	equ	0xFE8
  5857                           indf1	equ	0xFE7
  5858                           fsr1h	equ	0xFE2
  5859                           fsr1l	equ	0xFE1
  5860                           bsr	equ	0xFE0
  5861                           indf2	equ	0xFDF
  5862                           postinc2	equ	0xFDE
  5863                           postdec2	equ	0xFDD
  5864                           fsr2h	equ	0xFDA
  5865                           fsr2l	equ	0xFD9
  5866                           status	equ	0xFD8
  5867                           
  5868 ;; *************** function _InterruptHandlerHigh *****************
  5869 ;; Defined at:
  5870 ;;		line 84 in file "../src/interrupts.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;		None               void
  5877 ;; Registers used:
  5878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5884 ;;      Params:         0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0
  5886 ;;      Temps:          0      15       0       0       0
  5887 ;;      Totals:         0      15       0       0       0
  5888 ;;Total ram usage:       15 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    4
  5891 ;; This function calls:
  5892 ;;		_SleepIfOkay
  5893 ;;		_adc_int_handler
  5894 ;;		_i2c_int_handler
  5895 ;;		_timer0_int_handler
  5896 ;; This function is called by:
  5897 ;;		Interrupt level 2
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	intcode
  5902  000008                     __pintcode:
  5903                           	opt stack 0
  5904  000008                     _InterruptHandlerHigh:
  5905                           	opt stack 16
  5906                           
  5907                           ;incstack = 0
  5908  000008  CFFA F0C9          	movff	pclath,??_InterruptHandlerHigh+1
  5909  00000C  CFFB F0CA          	movff	pclatu,??_InterruptHandlerHigh+2
  5910  000010  EF71  F008         	goto	int_func
  5911                           pclatu	equ	0xFFB
  5912                           pclath	equ	0xFFA
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodh	equ	0xFF4
  5918                           prodl	equ	0xFF3
  5919                           intcon	equ	0xFF2
  5920                           postinc0	equ	0xFEE
  5921                           fsr0h	equ	0xFEA
  5922                           fsr0l	equ	0xFE9
  5923                           wreg	equ	0xFE8
  5924                           indf1	equ	0xFE7
  5925                           fsr1h	equ	0xFE2
  5926                           fsr1l	equ	0xFE1
  5927                           bsr	equ	0xFE0
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935                           	psect	intcode_body
  5936  0010E2                     __pintcode_body:
  5937                           	opt stack 16
  5938  0010E2                     int_func:
  5939                           	opt stack 16
  5940  0010E2  CFE9 F0CB          	movff	fsr0l,??_InterruptHandlerHigh+3
  5941  0010E6  CFEA F0CC          	movff	fsr0h,??_InterruptHandlerHigh+4
  5942  0010EA  CFE1 F0CD          	movff	fsr1l,??_InterruptHandlerHigh+5
  5943  0010EE  CFE2 F0CE          	movff	fsr1h,??_InterruptHandlerHigh+6
  5944  0010F2  CFD9 F0CF          	movff	fsr2l,??_InterruptHandlerHigh+7
  5945  0010F6  CFDA F0D0          	movff	fsr2h,??_InterruptHandlerHigh+8
  5946  0010FA  CFF3 F0D1          	movff	prodl,??_InterruptHandlerHigh+9
  5947  0010FE  CFF4 F0D2          	movff	prodh,??_InterruptHandlerHigh+10
  5948  001102  CFF6 F0D3          	movff	tblptrl,??_InterruptHandlerHigh+11
  5949  001106  CFF7 F0D4          	movff	tblptrh,??_InterruptHandlerHigh+12
  5950  00110A  CFF8 F0D5          	movff	tblptru,??_InterruptHandlerHigh+13
  5951  00110E  CFF5 F0D6          	movff	tablat,??_InterruptHandlerHigh+14
  5952                           
  5953                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  5954  001112  A69E               	btfss	3998,3,c	;volatile
  5955  001114  D003               	goto	i2l2834
  5956                           
  5957                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  5958  001116  969E               	bcf	3998,3,c	;volatile
  5959                           
  5960                           ;interrupts.c: 93: i2c_int_handler();
  5961  001118  EC5D  F000         	call	_i2c_int_handler	;wreg free
  5962  00111C                     i2l2834:
  5963                           
  5964                           ;interrupts.c: 94: }
  5965                           ;interrupts.c: 95: if(PIR1bits.ADIF)
  5966  00111C  AC9E               	btfss	3998,6,c	;volatile
  5967  00111E  D003               	goto	i2l2840
  5968                           
  5969                           ;interrupts.c: 96: {
  5970                           ;interrupts.c: 97: PIR1bits.ADIF = 0;
  5971  001120  9C9E               	bcf	3998,6,c	;volatile
  5972                           
  5973                           ;interrupts.c: 98: adc_int_handler();
  5974  001122  EC3E  F00B         	call	_adc_int_handler	;wreg free
  5975  001126                     i2l2840:
  5976                           
  5977                           ;interrupts.c: 99: }
  5978                           ;interrupts.c: 101: if (INTCONbits.TMR0IF) {
  5979  001126  A4F2               	btfss	intcon,2,c	;volatile
  5980  001128  D010               	goto	i2l2848
  5981                           
  5982                           ;interrupts.c: 102: LATBbits.LATB0 = !LATBbits.LATB0;
  5983  00112A  B08A               	btfsc	3978,0,c	;volatile
  5984  00112C  D002               	goto	i2u178_40
  5985  00112E  0E01               	movlw	1
  5986  001130  D001               	goto	i2u178_46
  5987  001132                     i2u178_40:
  5988  001132  0E00               	movlw	0
  5989  001134                     i2u178_46:
  5990  001134  0100               	movlb	0	; () banked
  5991  001136  6FC8               	movwf	??_InterruptHandlerHigh& (0+255),b
  5992  001138  508A               	movf	3978,w,c	;volatile
  5993  00113A  0100               	movlb	0	; () banked
  5994  00113C  19C8               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5995  00113E  0BFE               	andlw	-2
  5996  001140  19C8               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5997  001142  6E8A               	movwf	3978,c	;volatile
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;interrupts.c: 103: INTCONbits.TMR0IF = 0;
  6001  001144  94F2               	bcf	intcon,2,c	;volatile
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;interrupts.c: 105: timer0_int_handler();
  6005  001146  ECFF  F00C         	call	_timer0_int_handler	;wreg free
  6006  00114A                     i2l2848:
  6007                           
  6008                           ;interrupts.c: 106: }
  6009                           ;interrupts.c: 115: SleepIfOkay();
  6010  00114A  EC66  F00B         	call	_SleepIfOkay	;wreg free
  6011  00114E  C0D6  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  6012  001152  C0D5  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  6013  001156  C0D4  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  6014  00115A  C0D3  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  6015  00115E  C0D2  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  6016  001162  C0D1  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  6017  001166  C0D0  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  6018  00116A  C0CF  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  6019  00116E  C0CE  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  6020  001172  C0CD  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  6021  001176  C0CC  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  6022  00117A  C0CB  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  6023  00117E  C0CA  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  6024  001182  C0C9  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  6025  001186  0011               	retfie		f
  6026  001188                     __end_of_InterruptHandlerHigh:
  6027                           	opt stack 0
  6028                           pclatu	equ	0xFFB
  6029                           pclath	equ	0xFFA
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           prodh	equ	0xFF4
  6035                           prodl	equ	0xFF3
  6036                           intcon	equ	0xFF2
  6037                           postinc0	equ	0xFEE
  6038                           fsr0h	equ	0xFEA
  6039                           fsr0l	equ	0xFE9
  6040                           wreg	equ	0xFE8
  6041                           indf1	equ	0xFE7
  6042                           fsr1h	equ	0xFE2
  6043                           fsr1l	equ	0xFE1
  6044                           bsr	equ	0xFE0
  6045                           indf2	equ	0xFDF
  6046                           postinc2	equ	0xFDE
  6047                           postdec2	equ	0xFDD
  6048                           fsr2h	equ	0xFDA
  6049                           fsr2l	equ	0xFD9
  6050                           status	equ	0xFD8
  6051                           
  6052 ;; *************** function _timer0_int_handler *****************
  6053 ;; Defined at:
  6054 ;;		line 18 in file "../src/user_interrupts.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  val             2    6[BANK0 ] unsigned int 
  6059 ;;  msgtype         2    0        int 
  6060 ;;  length          2    0        int 
  6061 ;; Return value:  Size  Location     Type
  6062 ;;		None               void
  6063 ;; Registers used:
  6064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6070 ;;      Params:         0       0       0       0       0
  6071 ;;      Locals:         0       2       0       0       0
  6072 ;;      Temps:          0       1       0       0       0
  6073 ;;      Totals:         0       3       0       0       0
  6074 ;;Total ram usage:        3 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:    3
  6077 ;; This function calls:
  6078 ;;		_WriteTimer0
  6079 ;;		i2_ToMainLow_sendmsg
  6080 ;; This function is called by:
  6081 ;;		_InterruptHandlerHigh
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text40
  6086  0019FE                     __ptext40:
  6087                           	opt stack 0
  6088  0019FE                     _timer0_int_handler:
  6089                           	opt stack 16
  6090                           
  6091                           ;user_interrupts.c: 19: unsigned int val;
  6092                           ;user_interrupts.c: 20: int length, msgtype;
  6093                           ;user_interrupts.c: 21: LATBbits.LATB0 = 1;
  6094                           
  6095                           ;incstack = 0
  6096  0019FE  808A               	bsf	3978,0,c	;volatile
  6097                           
  6098                           ;user_interrupts.c: 22: LATBbits.LATB0 = 0;
  6099  001A00  908A               	bcf	3978,0,c	;volatile
  6100                           
  6101                           ;user_interrupts.c: 28: WriteTimer0(0);
  6102  001A02  0E00               	movlw	0
  6103  001A04  6E30               	movwf	WriteTimer0@timer0+1,c
  6104  001A06  0E00               	movlw	0
  6105  001A08  6E2F               	movwf	WriteTimer0@timer0,c
  6106  001A0A  ECEF  F00D         	call	_WriteTimer0	;wreg free
  6107                           
  6108                           ;user_interrupts.c: 34: ToMainLow_sendmsg(sizeof (val), 48, (void *) &val);
  6109  001A0E  0100               	movlb	0	; () banked
  6110  001A10  6FBD               	movwf	??_timer0_int_handler& (0+255),b
  6111  001A12  0E30               	movlw	48
  6112  001A14  6E40               	movwf	i2ToMainLow_sendmsg@msgtype,c
  6113  001A16  0100               	movlb	0	; () banked
  6114  001A18  51BD               	movf	??_timer0_int_handler& (0+255),w,b
  6115  001A1A  0100               	movlb	0	; () banked
  6116  001A1C  0E00               	movlw	high timer0_int_handler@val
  6117  001A1E  6E42               	movwf	i2ToMainLow_sendmsg@data+1,c
  6118  001A20  0100               	movlb	0	; () banked
  6119  001A22  0EBE               	movlw	low timer0_int_handler@val
  6120  001A24  6E41               	movwf	i2ToMainLow_sendmsg@data,c
  6121  001A26  0E02               	movlw	2
  6122  001A28  EC6A  F00D         	call	i2_ToMainLow_sendmsg
  6123  001A2C  0012               	return	
  6124  001A2E                     __end_of_timer0_int_handler:
  6125                           	opt stack 0
  6126                           pclatu	equ	0xFFB
  6127                           pclath	equ	0xFFA
  6128                           tblptru	equ	0xFF8
  6129                           tblptrh	equ	0xFF7
  6130                           tblptrl	equ	0xFF6
  6131                           tablat	equ	0xFF5
  6132                           prodh	equ	0xFF4
  6133                           prodl	equ	0xFF3
  6134                           intcon	equ	0xFF2
  6135                           postinc0	equ	0xFEE
  6136                           fsr0h	equ	0xFEA
  6137                           fsr0l	equ	0xFE9
  6138                           wreg	equ	0xFE8
  6139                           indf1	equ	0xFE7
  6140                           fsr1h	equ	0xFE2
  6141                           fsr1l	equ	0xFE1
  6142                           bsr	equ	0xFE0
  6143                           indf2	equ	0xFDF
  6144                           postinc2	equ	0xFDE
  6145                           postdec2	equ	0xFDD
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           
  6150 ;; *************** function i2_ToMainLow_sendmsg *****************
  6151 ;; Defined at:
  6152 ;;		line 103 in file "../src/messages.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  length          1    wreg     unsigned char 
  6155 ;;  msgtype         1   63[COMRAM] unsigned char 
  6156 ;;  data            2   64[COMRAM] PTR void 
  6157 ;;		 -> timer0_int_handler@val(2), NULL(0), main@uc(5), 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  length          1   66[COMRAM] unsigned char 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      char 
  6162 ;; Registers used:
  6163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6169 ;;      Params:         3       0       0       0       0
  6170 ;;      Locals:         1       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0
  6172 ;;      Totals:         4       0       0       0       0
  6173 ;;Total ram usage:        4 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    2
  6176 ;; This function calls:
  6177 ;;		i2_send_msg
  6178 ;; This function is called by:
  6179 ;;		_timer0_int_handler
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text41
  6184  001AD4                     __ptext41:
  6185                           	opt stack 0
  6186  001AD4                     i2_ToMainLow_sendmsg:
  6187                           	opt stack 16
  6188                           
  6189                           ;incstack = 0
  6190                           ;i2ToMainLow_sendmsg@length stored from wreg
  6191  001AD4  CFE8 F043          	movff	wreg,i2ToMainLow_sendmsg@length
  6192                           
  6193                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6194                           ;	Return value of i2_ToMainLow_sendmsg is never used
  6195  001AD8  0100               	movlb	0	; () banked
  6196  001ADA  0E00               	movlw	high _ToMainLow_MQ
  6197  001ADC  6E3A               	movwf	i2send_msg@qptr+1,c
  6198  001ADE  0100               	movlb	0	; () banked
  6199  001AE0  0E82               	movlw	low _ToMainLow_MQ
  6200  001AE2  6E39               	movwf	i2send_msg@qptr,c
  6201  001AE4  C043  F03B         	movff	i2ToMainLow_sendmsg@length,i2send_msg@length
  6202  001AE8  C040  F03C         	movff	i2ToMainLow_sendmsg@msgtype,i2send_msg@msgtype
  6203  001AEC  C042  F03E         	movff	i2ToMainLow_sendmsg@data+1,i2send_msg@data+1
  6204  001AF0  C041  F03D         	movff	i2ToMainLow_sendmsg@data,i2send_msg@data
  6205  001AF4  ECE8  F006         	call	i2_send_msg	;wreg free
  6206  001AF8  0012               	return	
  6207  001AFA                     __end_ofi2_ToMainLow_sendmsg:
  6208                           	opt stack 0
  6209                           pclatu	equ	0xFFB
  6210                           pclath	equ	0xFFA
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           intcon	equ	0xFF2
  6218                           postinc0	equ	0xFEE
  6219                           fsr0h	equ	0xFEA
  6220                           fsr0l	equ	0xFE9
  6221                           wreg	equ	0xFE8
  6222                           indf1	equ	0xFE7
  6223                           fsr1h	equ	0xFE2
  6224                           fsr1l	equ	0xFE1
  6225                           bsr	equ	0xFE0
  6226                           indf2	equ	0xFDF
  6227                           postinc2	equ	0xFDE
  6228                           postdec2	equ	0xFDD
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _WriteTimer0 *****************
  6234 ;; Defined at:
  6235 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  timer0          2   46[COMRAM] unsigned int 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  timer           2   48[COMRAM] struct Timers
  6240 ;; Return value:  Size  Location     Type
  6241 ;;		None               void
  6242 ;; Registers used:
  6243 ;;		None
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6249 ;;      Params:         2       0       0       0       0
  6250 ;;      Locals:         2       0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0
  6252 ;;      Totals:         4       0       0       0       0
  6253 ;;Total ram usage:        4 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_timer0_int_handler
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text42
  6263  001BDE                     __ptext42:
  6264                           	opt stack 0
  6265  001BDE                     _WriteTimer0:
  6266                           	opt stack 18
  6267                           
  6268                           ;incstack = 0
  6269  001BDE  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6270  001BE2  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6271  001BE6  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6272  001BEA  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6273  001BEE  0012               	return	
  6274  001BF0                     __end_of_WriteTimer0:
  6275                           	opt stack 0
  6276                           pclatu	equ	0xFFB
  6277                           pclath	equ	0xFFA
  6278                           tblptru	equ	0xFF8
  6279                           tblptrh	equ	0xFF7
  6280                           tblptrl	equ	0xFF6
  6281                           tablat	equ	0xFF5
  6282                           prodh	equ	0xFF4
  6283                           prodl	equ	0xFF3
  6284                           intcon	equ	0xFF2
  6285                           postinc0	equ	0xFEE
  6286                           fsr0h	equ	0xFEA
  6287                           fsr0l	equ	0xFE9
  6288                           wreg	equ	0xFE8
  6289                           indf1	equ	0xFE7
  6290                           fsr1h	equ	0xFE2
  6291                           fsr1l	equ	0xFE1
  6292                           bsr	equ	0xFE0
  6293                           indf2	equ	0xFDF
  6294                           postinc2	equ	0xFDE
  6295                           postdec2	equ	0xFDD
  6296                           fsr2h	equ	0xFDA
  6297                           fsr2l	equ	0xFD9
  6298                           status	equ	0xFD8
  6299                           
  6300 ;; *************** function _i2c_int_handler *****************
  6301 ;; Defined at:
  6302 ;;		line 132 in file "../src/my_i2c.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;		None
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  error_buf       3    7[BANK0 ] unsigned char [3]
  6307 ;;  data_read       1   15[BANK0 ] unsigned char 
  6308 ;;  msg_ready       1   14[BANK0 ] unsigned char 
  6309 ;;  msg_to_send     1   13[BANK0 ] unsigned char 
  6310 ;;  i2c_data        1   12[BANK0 ] unsigned char 
  6311 ;;  overrun_erro    1   11[BANK0 ] unsigned char 
  6312 ;;  data_written    1   10[BANK0 ] unsigned char 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;		None               void
  6315 ;; Registers used:
  6316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6322 ;;      Params:         0       0       0       0       0
  6323 ;;      Locals:         0       9       0       0       0
  6324 ;;      Temps:          0       2       0       0       0
  6325 ;;      Totals:         0      11       0       0       0
  6326 ;;Total ram usage:       11 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; Hardware stack levels required when called:    3
  6329 ;; This function calls:
  6330 ;;		_handle_start
  6331 ;;		i2_ToMainHigh_sendmsg
  6332 ;; This function is called by:
  6333 ;;		_InterruptHandlerHigh
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text43
  6338  0000BA                     __ptext43:
  6339                           	opt stack 0
  6340  0000BA                     _i2c_int_handler:
  6341                           	opt stack 16
  6342                           
  6343                           ;my_i2c.c: 133: unsigned char i2c_data;
  6344                           ;my_i2c.c: 134: unsigned char data_read = 0;
  6345                           
  6346                           ;incstack = 0
  6347  0000BA  0100               	movlb	0	; () banked
  6348  0000BC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6349  0000BE  0E00               	movlw	0
  6350  0000C0  0100               	movlb	0	; () banked
  6351  0000C2  0100               	movlb	0	; () banked
  6352  0000C4  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  6353  0000C6  0100               	movlb	0	; () banked
  6354  0000C8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6355                           
  6356                           ;my_i2c.c: 135: unsigned char data_written = 0;
  6357  0000CA  0100               	movlb	0	; () banked
  6358  0000CC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6359  0000CE  0E00               	movlw	0
  6360  0000D0  0100               	movlb	0	; () banked
  6361  0000D2  0100               	movlb	0	; () banked
  6362  0000D4  6FC2               	movwf	i2c_int_handler@data_written& (0+255),b
  6363  0000D6  0100               	movlb	0	; () banked
  6364  0000D8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6365                           
  6366                           ;my_i2c.c: 136: unsigned char msg_ready = 0;
  6367  0000DA  0100               	movlb	0	; () banked
  6368  0000DC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6369  0000DE  0E00               	movlw	0
  6370  0000E0  0100               	movlb	0	; () banked
  6371  0000E2  0100               	movlb	0	; () banked
  6372  0000E4  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6373  0000E6  0100               	movlb	0	; () banked
  6374  0000E8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6375                           
  6376                           ;my_i2c.c: 137: unsigned char msg_to_send = 0;
  6377  0000EA  0100               	movlb	0	; () banked
  6378  0000EC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6379  0000EE  0E00               	movlw	0
  6380  0000F0  0100               	movlb	0	; () banked
  6381  0000F2  0100               	movlb	0	; () banked
  6382  0000F4  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6383  0000F6  0100               	movlb	0	; () banked
  6384  0000F8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6385                           
  6386                           ;my_i2c.c: 138: unsigned char overrun_error = 0;
  6387  0000FA  0100               	movlb	0	; () banked
  6388  0000FC  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6389  0000FE  0E00               	movlw	0
  6390  000100  0100               	movlb	0	; () banked
  6391  000102  0100               	movlb	0	; () banked
  6392  000104  6FC3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6393  000106  0100               	movlb	0	; () banked
  6394  000108  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;my_i2c.c: 139: unsigned char error_buf[3];
  6398                           ;my_i2c.c: 142: if (SSPCON1bits.SSPOV == 1) {
  6399  00010A  ACC6               	btfss	4038,6,c	;volatile
  6400  00010C  D029               	goto	i2l2864
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;my_i2c.c: 143: SSPCON1bits.SSPOV = 0;
  6404  00010E  9CC6               	bcf	4038,6,c	;volatile
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
  6408  000110  0100               	movlb	0	; () banked
  6409  000112  EE20 F00C          	lfsr	2,12
  6410  000116  0100               	movlb	0	; () banked
  6411  000118  51DF               	movf	_ic_ptr& (0+255),w,b
  6412  00011A  26D9               	addwf	fsr2l,f,c
  6413  00011C  0100               	movlb	0	; () banked
  6414  00011E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6415  000120  22DA               	addwfc	fsr2h,f,c
  6416  000122  0E05               	movlw	5
  6417  000124  6EDF               	movwf	indf2,c
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;my_i2c.c: 148: overrun_error = 1;
  6421  000126  0100               	movlb	0	; () banked
  6422  000128  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6423  00012A  0E01               	movlw	1
  6424  00012C  0100               	movlb	0	; () banked
  6425  00012E  0100               	movlb	0	; () banked
  6426  000130  6FC3               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6427  000132  0100               	movlb	0	; () banked
  6428  000134  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;my_i2c.c: 149: ic_ptr->error_count++;
  6432  000136  0100               	movlb	0	; () banked
  6433  000138  EE20 F00E          	lfsr	2,14
  6434  00013C  0100               	movlb	0	; () banked
  6435  00013E  51DF               	movf	_ic_ptr& (0+255),w,b
  6436  000140  26D9               	addwf	fsr2l,f,c
  6437  000142  0100               	movlb	0	; () banked
  6438  000144  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6439  000146  22DA               	addwfc	fsr2h,f,c
  6440  000148  2ADF               	incf	indf2,f,c
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;my_i2c.c: 150: ic_ptr->error_code = 0x4;
  6444  00014A  0100               	movlb	0	; () banked
  6445  00014C  EE20 F00D          	lfsr	2,13
  6446  000150  0100               	movlb	0	; () banked
  6447  000152  51DF               	movf	_ic_ptr& (0+255),w,b
  6448  000154  26D9               	addwf	fsr2l,f,c
  6449  000156  0100               	movlb	0	; () banked
  6450  000158  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6451  00015A  22DA               	addwfc	fsr2h,f,c
  6452  00015C  0E04               	movlw	4
  6453  00015E  6EDF               	movwf	indf2,c
  6454  000160                     i2l2864:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;my_i2c.c: 151: }
  6458                           ;my_i2c.c: 153: if (SSPSTATbits.BF == 1) {
  6459  000160  A0C7               	btfss	4039,0,c	;volatile
  6460  000162  D00A               	goto	i2l2870
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;my_i2c.c: 154: i2c_data = SSPBUF;
  6464  000164  CFC9 F0C4          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;my_i2c.c: 155: data_read = 1;
  6468  000168  0100               	movlb	0	; () banked
  6469  00016A  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6470  00016C  0E01               	movlw	1
  6471  00016E  0100               	movlb	0	; () banked
  6472  000170  0100               	movlb	0	; () banked
  6473  000172  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  6474  000174  0100               	movlb	0	; () banked
  6475  000176  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6476  000178                     i2l2870:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;my_i2c.c: 156: }
  6480                           ;my_i2c.c: 158: if (!overrun_error) {
  6481  000178  0100               	movlb	0	; () banked
  6482  00017A  0100               	movlb	0	; () banked
  6483  00017C  67C3               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6484  00017E  D1CE               	goto	i2l281
  6485  000180  D1B7               	goto	i2l2958
  6486  000182                     i2l283:
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;my_i2c.c: 161: {
  6490                           ;my_i2c.c: 163: if (SSPSTATbits.S == 1) {
  6491  000182  A6C7               	btfss	4039,3,c	;volatile
  6492  000184  D1CB               	goto	i2l281
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;my_i2c.c: 164: handle_start(data_read);
  6496  000186  0100               	movlb	0	; () banked
  6497  000188  0100               	movlb	0	; () banked
  6498  00018A  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  6499  00018C  ECB8  F007         	call	_handle_start
  6500                           
  6501                           ;my_i2c.c: 166: if (ic_ptr->status == 0x8) {
  6502  000190  0100               	movlb	0	; () banked
  6503  000192  EE20 F00C          	lfsr	2,12
  6504  000196  0100               	movlb	0	; () banked
  6505  000198  51DF               	movf	_ic_ptr& (0+255),w,b
  6506  00019A  26D9               	addwf	fsr2l,f,c
  6507  00019C  0100               	movlb	0	; () banked
  6508  00019E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6509  0001A0  22DA               	addwfc	fsr2h,f,c
  6510  0001A2  0E08               	movlw	8
  6511  0001A4  62DF               	cpfseq	indf2,c
  6512  0001A6  D1BA               	goto	i2l281
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;my_i2c.c: 167: data_read = 0;
  6516  0001A8  0100               	movlb	0	; () banked
  6517  0001AA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6518  0001AC  0E00               	movlw	0
  6519  0001AE  0100               	movlb	0	; () banked
  6520  0001B0  0100               	movlb	0	; () banked
  6521  0001B2  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  6522  0001B4  0100               	movlb	0	; () banked
  6523  0001B6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6524                           
  6525                           ;my_i2c.c: 168: msg_to_send = 1;
  6526  0001B8  0100               	movlb	0	; () banked
  6527  0001BA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6528  0001BC  0E01               	movlw	1
  6529  0001BE  0100               	movlb	0	; () banked
  6530  0001C0  0100               	movlb	0	; () banked
  6531  0001C2  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6532  0001C4  D187               	goto	L8
  6533  0001C6                     i2l287:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;my_i2c.c: 174: {
  6537                           ;my_i2c.c: 176: if (SSPSTATbits.P == 1) {
  6538  0001C6  A8C7               	btfss	4039,4,c	;volatile
  6539  0001C8  D030               	goto	i2l2890
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;my_i2c.c: 179: ic_ptr->event_count++;
  6543  0001CA  0100               	movlb	0	; () banked
  6544  0001CC  EE20 F00B          	lfsr	2,11
  6545  0001D0  0100               	movlb	0	; () banked
  6546  0001D2  51DF               	movf	_ic_ptr& (0+255),w,b
  6547  0001D4  26D9               	addwf	fsr2l,f,c
  6548  0001D6  0100               	movlb	0	; () banked
  6549  0001D8  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6550  0001DA  22DA               	addwfc	fsr2h,f,c
  6551  0001DC  2ADF               	incf	indf2,f,c
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;my_i2c.c: 180: if (data_read) {
  6555  0001DE  0100               	movlb	0	; () banked
  6556  0001E0  0100               	movlb	0	; () banked
  6557  0001E2  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  6558  0001E4  B4D8               	btfsc	status,2,c
  6559  0001E6  D179               	goto	L10
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;my_i2c.c: 181: if (SSPSTATbits.D_A == 0) {
  6563  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  6564  0001EA  D009               	goto	i2l2888
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;my_i2c.c: 182: msg_ready = 1;
  6568  0001EC  0100               	movlb	0	; () banked
  6569  0001EE  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6570  0001F0  0E01               	movlw	1
  6571  0001F2  0100               	movlb	0	; () banked
  6572  0001F4  0100               	movlb	0	; () banked
  6573  0001F6  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6574  0001F8  0100               	movlb	0	; () banked
  6575  0001FA  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6576                           
  6577                           ;my_i2c.c: 183: } else {
  6578  0001FC  D16E               	goto	L10
  6579  0001FE                     i2l2888:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;my_i2c.c: 184: ic_ptr->error_count++;
  6583  0001FE  0100               	movlb	0	; () banked
  6584  000200  EE20 F00E          	lfsr	2,14
  6585  000204  0100               	movlb	0	; () banked
  6586  000206  51DF               	movf	_ic_ptr& (0+255),w,b
  6587  000208  26D9               	addwf	fsr2l,f,c
  6588  00020A  0100               	movlb	0	; () banked
  6589  00020C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6590  00020E  22DA               	addwfc	fsr2h,f,c
  6591  000210  2ADF               	incf	indf2,f,c
  6592                           
  6593                           ;my_i2c.c: 185: ic_ptr->error_code = 0x6;
  6594  000212  0100               	movlb	0	; () banked
  6595  000214  EE20 F00D          	lfsr	2,13
  6596  000218  0100               	movlb	0	; () banked
  6597  00021A  51DF               	movf	_ic_ptr& (0+255),w,b
  6598  00021C  26D9               	addwf	fsr2l,f,c
  6599  00021E  0100               	movlb	0	; () banked
  6600  000220  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6601  000222  22DA               	addwfc	fsr2h,f,c
  6602  000224  0E06               	movlw	6
  6603  000226  6EDF               	movwf	indf2,c
  6604                           
  6605                           ; BSR set to: 0
  6606  000228  D158               	goto	L10
  6607  00022A                     i2l2890:
  6608                           
  6609                           ; BSR set to: 0
  6610  00022A  0100               	movlb	0	; () banked
  6611  00022C  0100               	movlb	0	; () banked
  6612  00022E  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  6613  000230  B4D8               	btfsc	status,2,c
  6614  000232  D174               	goto	i2l281
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;my_i2c.c: 190: ic_ptr->event_count++;
  6618  000234  0100               	movlb	0	; () banked
  6619  000236  EE20 F00B          	lfsr	2,11
  6620  00023A  0100               	movlb	0	; () banked
  6621  00023C  51DF               	movf	_ic_ptr& (0+255),w,b
  6622  00023E  26D9               	addwf	fsr2l,f,c
  6623  000240  0100               	movlb	0	; () banked
  6624  000242  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6625  000244  22DA               	addwfc	fsr2h,f,c
  6626  000246  2ADF               	incf	indf2,f,c
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;my_i2c.c: 191: if (SSPSTATbits.D_A == 0) {
  6630  000248  BAC7               	btfsc	4039,5,c	;volatile
  6631  00024A  D019               	goto	i2l2906
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;my_i2c.c: 192: if (SSPSTATbits.R_W == 0) {
  6635  00024C  B4C7               	btfsc	4039,2,c	;volatile
  6636  00024E  D00B               	goto	i2l2900
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;my_i2c.c: 193: ic_ptr->status = 0x7;
  6640  000250  0100               	movlb	0	; () banked
  6641  000252  EE20 F00C          	lfsr	2,12
  6642  000256  0100               	movlb	0	; () banked
  6643  000258  51DF               	movf	_ic_ptr& (0+255),w,b
  6644  00025A  26D9               	addwf	fsr2l,f,c
  6645  00025C  0100               	movlb	0	; () banked
  6646  00025E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6647  000260  22DA               	addwfc	fsr2h,f,c
  6648  000262  0E07               	movlw	7
  6649  000264  D076               	goto	L7
  6650  000266                     i2l2900:
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;my_i2c.c: 195: ic_ptr->status = 0x8;
  6654  000266  0100               	movlb	0	; () banked
  6655  000268  EE20 F00C          	lfsr	2,12
  6656  00026C  0100               	movlb	0	; () banked
  6657  00026E  51DF               	movf	_ic_ptr& (0+255),w,b
  6658  000270  26D9               	addwf	fsr2l,f,c
  6659  000272  0100               	movlb	0	; () banked
  6660  000274  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6661  000276  22DA               	addwfc	fsr2h,f,c
  6662  000278  0E08               	movlw	8
  6663  00027A  6EDF               	movwf	indf2,c
  6664  00027C  D11D               	goto	L11
  6665  00027E                     i2l2906:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;my_i2c.c: 201: ic_ptr->error_count++;
  6669  00027E  0100               	movlb	0	; () banked
  6670  000280  EE20 F00E          	lfsr	2,14
  6671  000284  0100               	movlb	0	; () banked
  6672  000286  51DF               	movf	_ic_ptr& (0+255),w,b
  6673  000288  26D9               	addwf	fsr2l,f,c
  6674  00028A  0100               	movlb	0	; () banked
  6675  00028C  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6676  00028E  22DA               	addwfc	fsr2h,f,c
  6677  000290  2ADF               	incf	indf2,f,c
  6678                           
  6679                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  6680  000292  0100               	movlb	0	; () banked
  6681  000294  EE20 F00C          	lfsr	2,12
  6682  000298  0100               	movlb	0	; () banked
  6683  00029A  51DF               	movf	_ic_ptr& (0+255),w,b
  6684  00029C  26D9               	addwf	fsr2l,f,c
  6685  00029E  0100               	movlb	0	; () banked
  6686  0002A0  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6687  0002A2  22DA               	addwfc	fsr2h,f,c
  6688  0002A4  0E05               	movlw	5
  6689  0002A6  6EDF               	movwf	indf2,c
  6690                           
  6691                           ;my_i2c.c: 203: ic_ptr->error_code = 0x6;
  6692  0002A8  0100               	movlb	0	; () banked
  6693  0002AA  EE20 F00D          	lfsr	2,13
  6694  0002AE  0100               	movlb	0	; () banked
  6695  0002B0  51DF               	movf	_ic_ptr& (0+255),w,b
  6696  0002B2  26D9               	addwf	fsr2l,f,c
  6697  0002B4  0100               	movlb	0	; () banked
  6698  0002B6  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6699  0002B8  22DA               	addwfc	fsr2h,f,c
  6700  0002BA  0E06               	movlw	6
  6701  0002BC  D04A               	goto	L7
  6702  0002BE                     i2l2908:
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;my_i2c.c: 209: {
  6706                           ;my_i2c.c: 210: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6707  0002BE  0100               	movlb	0	; () banked
  6708  0002C0  EE20 F01A          	lfsr	2,26
  6709  0002C4  0100               	movlb	0	; () banked
  6710  0002C6  51DF               	movf	_ic_ptr& (0+255),w,b
  6711  0002C8  26D9               	addwf	fsr2l,f,c
  6712  0002CA  0100               	movlb	0	; () banked
  6713  0002CC  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6714  0002CE  22DA               	addwfc	fsr2h,f,c
  6715  0002D0  50DF               	movf	indf2,w,c
  6716  0002D2  0100               	movlb	0	; () banked
  6717  0002D4  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6718  0002D6  0100               	movlb	0	; () banked
  6719  0002D8  EE20 F019          	lfsr	2,25
  6720  0002DC  0100               	movlb	0	; () banked
  6721  0002DE  51DF               	movf	_ic_ptr& (0+255),w,b
  6722  0002E0  26D9               	addwf	fsr2l,f,c
  6723  0002E2  0100               	movlb	0	; () banked
  6724  0002E4  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6725  0002E6  22DA               	addwfc	fsr2h,f,c
  6726  0002E8  50DF               	movf	indf2,w,c
  6727  0002EA  0100               	movlb	0	; () banked
  6728  0002EC  5DBD               	subwf	??_i2c_int_handler& (0+255),w,b
  6729  0002EE  B0D8               	btfsc	status,0,c
  6730  0002F0  D0F4               	goto	L10
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;my_i2c.c: 211: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6734  0002F2  0100               	movlb	0	; () banked
  6735  0002F4  EE20 F01A          	lfsr	2,26
  6736  0002F8  0100               	movlb	0	; () banked
  6737  0002FA  51DF               	movf	_ic_ptr& (0+255),w,b
  6738  0002FC  26D9               	addwf	fsr2l,f,c
  6739  0002FE  0100               	movlb	0	; () banked
  6740  000300  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6741  000302  22DA               	addwfc	fsr2h,f,c
  6742  000304  50DF               	movf	indf2,w,c
  6743  000306  0100               	movlb	0	; () banked
  6744  000308  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6745  00030A  0100               	movlb	0	; () banked
  6746  00030C  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6747  00030E  0D01               	mullw	1
  6748  000310  0E0F               	movlw	15
  6749  000312  26F3               	addwf	prodl,f,c
  6750  000314  0E00               	movlw	0
  6751  000316  22F4               	addwfc	prodh,f,c
  6752  000318  50F3               	movf	prodl,w,c
  6753  00031A  0100               	movlb	0	; () banked
  6754  00031C  0100               	movlb	0	; () banked
  6755  00031E  25DF               	addwf	_ic_ptr& (0+255),w,b
  6756  000320  6ED9               	movwf	fsr2l,c
  6757  000322  50F4               	movf	prodh,w,c
  6758  000324  0100               	movlb	0	; () banked
  6759  000326  0100               	movlb	0	; () banked
  6760  000328  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6761  00032A  6EDA               	movwf	fsr2h,c
  6762  00032C  50DF               	movf	indf2,w,c
  6763  00032E  6EC9               	movwf	4041,c	;volatile
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;my_i2c.c: 212: ic_ptr->outbufind++;
  6767  000330  0100               	movlb	0	; () banked
  6768  000332  EE20 F01A          	lfsr	2,26
  6769  000336  0100               	movlb	0	; () banked
  6770  000338  51DF               	movf	_ic_ptr& (0+255),w,b
  6771  00033A  26D9               	addwf	fsr2l,f,c
  6772  00033C  0100               	movlb	0	; () banked
  6773  00033E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6774  000340  22DA               	addwfc	fsr2h,f,c
  6775  000342  2ADF               	incf	indf2,f,c
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;my_i2c.c: 213: data_written = 1;
  6779  000344  0100               	movlb	0	; () banked
  6780  000346  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6781  000348  0E01               	movlw	1
  6782  00034A  0100               	movlb	0	; () banked
  6783  00034C  0100               	movlb	0	; () banked
  6784  00034E  6FC2               	movwf	i2c_int_handler@data_written& (0+255),b
  6785  000350  D0C1               	goto	L8
  6786  000352                     L7:
  6787  000352  6EDF               	movwf	indf2,c
  6788  000354  D0E3               	goto	i2l281
  6789  000356                     i2l301:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;my_i2c.c: 221: {
  6793                           ;my_i2c.c: 223: if (SSPSTATbits.P == 1) {
  6794  000356  A8C7               	btfss	4039,4,c	;volatile
  6795  000358  D062               	goto	i2l2936
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;my_i2c.c: 225: ic_ptr->event_count++;
  6799  00035A  0100               	movlb	0	; () banked
  6800  00035C  EE20 F00B          	lfsr	2,11
  6801  000360  0100               	movlb	0	; () banked
  6802  000362  51DF               	movf	_ic_ptr& (0+255),w,b
  6803  000364  26D9               	addwf	fsr2l,f,c
  6804  000366  0100               	movlb	0	; () banked
  6805  000368  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6806  00036A  22DA               	addwfc	fsr2h,f,c
  6807  00036C  2ADF               	incf	indf2,f,c
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;my_i2c.c: 226: if (data_read) {
  6811  00036E  0100               	movlb	0	; () banked
  6812  000370  0100               	movlb	0	; () banked
  6813  000372  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  6814  000374  B4D8               	btfsc	status,2,c
  6815  000376  D04A               	goto	i2l2932
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;my_i2c.c: 227: if (SSPSTATbits.D_A == 1) {
  6819  000378  AAC7               	btfss	4039,5,c	;volatile
  6820  00037A  D027               	goto	i2l2930
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;my_i2c.c: 228: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6824  00037C  0100               	movlb	0	; () banked
  6825  00037E  EE20 F00A          	lfsr	2,10
  6826  000382  0100               	movlb	0	; () banked
  6827  000384  51DF               	movf	_ic_ptr& (0+255),w,b
  6828  000386  26D9               	addwf	fsr2l,f,c
  6829  000388  0100               	movlb	0	; () banked
  6830  00038A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6831  00038C  22DA               	addwfc	fsr2h,f,c
  6832  00038E  50DF               	movf	indf2,w,c
  6833  000390  0100               	movlb	0	; () banked
  6834  000392  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6835  000394  0100               	movlb	0	; () banked
  6836  000396  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6837  000398  0D01               	mullw	1
  6838  00039A  50F3               	movf	prodl,w,c
  6839  00039C  0100               	movlb	0	; () banked
  6840  00039E  0100               	movlb	0	; () banked
  6841  0003A0  25DF               	addwf	_ic_ptr& (0+255),w,b
  6842  0003A2  6ED9               	movwf	fsr2l,c
  6843  0003A4  50F4               	movf	prodh,w,c
  6844  0003A6  0100               	movlb	0	; () banked
  6845  0003A8  0100               	movlb	0	; () banked
  6846  0003AA  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6847  0003AC  6EDA               	movwf	fsr2h,c
  6848  0003AE  0100               	movlb	0	; () banked
  6849  0003B0  C0C4  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;my_i2c.c: 229: ic_ptr->buflen++;
  6853  0003B4  0100               	movlb	0	; () banked
  6854  0003B6  EE20 F00A          	lfsr	2,10
  6855  0003BA  0100               	movlb	0	; () banked
  6856  0003BC  51DF               	movf	_ic_ptr& (0+255),w,b
  6857  0003BE  26D9               	addwf	fsr2l,f,c
  6858  0003C0  0100               	movlb	0	; () banked
  6859  0003C2  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6860  0003C4  22DA               	addwfc	fsr2h,f,c
  6861  0003C6  2ADF               	incf	indf2,f,c
  6862  0003C8  D021               	goto	i2l2932
  6863  0003CA                     i2l2930:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;my_i2c.c: 232: ic_ptr->error_count++;
  6867  0003CA  0100               	movlb	0	; () banked
  6868  0003CC  EE20 F00E          	lfsr	2,14
  6869  0003D0  0100               	movlb	0	; () banked
  6870  0003D2  51DF               	movf	_ic_ptr& (0+255),w,b
  6871  0003D4  26D9               	addwf	fsr2l,f,c
  6872  0003D6  0100               	movlb	0	; () banked
  6873  0003D8  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6874  0003DA  22DA               	addwfc	fsr2h,f,c
  6875  0003DC  2ADF               	incf	indf2,f,c
  6876                           
  6877                           ;my_i2c.c: 233: ic_ptr->error_code = 0x6;
  6878  0003DE  0100               	movlb	0	; () banked
  6879  0003E0  EE20 F00D          	lfsr	2,13
  6880  0003E4  0100               	movlb	0	; () banked
  6881  0003E6  51DF               	movf	_ic_ptr& (0+255),w,b
  6882  0003E8  26D9               	addwf	fsr2l,f,c
  6883  0003EA  0100               	movlb	0	; () banked
  6884  0003EC  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6885  0003EE  22DA               	addwfc	fsr2h,f,c
  6886  0003F0  0E06               	movlw	6
  6887  0003F2  6EDF               	movwf	indf2,c
  6888                           
  6889                           ;my_i2c.c: 234: ic_ptr->status = 0x5;
  6890  0003F4  0100               	movlb	0	; () banked
  6891  0003F6  EE20 F00C          	lfsr	2,12
  6892  0003FA  0100               	movlb	0	; () banked
  6893  0003FC  51DF               	movf	_ic_ptr& (0+255),w,b
  6894  0003FE  26D9               	addwf	fsr2l,f,c
  6895  000400  0100               	movlb	0	; () banked
  6896  000402  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6897  000404  22DA               	addwfc	fsr2h,f,c
  6898  000406  0E05               	movlw	5
  6899  000408  6EDF               	movwf	indf2,c
  6900  00040A  D067               	goto	L10
  6901  00040C                     i2l2932:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;my_i2c.c: 237: msg_ready = 1;
  6905  00040C  0100               	movlb	0	; () banked
  6906  00040E  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6907  000410  0E01               	movlw	1
  6908  000412  0100               	movlb	0	; () banked
  6909  000414  0100               	movlb	0	; () banked
  6910  000416  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6911  000418  0100               	movlb	0	; () banked
  6912  00041A  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6913                           
  6914                           ; BSR set to: 0
  6915  00041C  D05E               	goto	L10
  6916  00041E                     i2l2936:
  6917                           
  6918                           ; BSR set to: 0
  6919  00041E  0100               	movlb	0	; () banked
  6920  000420  0100               	movlb	0	; () banked
  6921  000422  51C7               	movf	i2c_int_handler@data_read& (0+255),w,b
  6922  000424  B4D8               	btfsc	status,2,c
  6923  000426  D07A               	goto	i2l281
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 241: ic_ptr->event_count++;
  6927  000428  0100               	movlb	0	; () banked
  6928  00042A  EE20 F00B          	lfsr	2,11
  6929  00042E  0100               	movlb	0	; () banked
  6930  000430  51DF               	movf	_ic_ptr& (0+255),w,b
  6931  000432  26D9               	addwf	fsr2l,f,c
  6932  000434  0100               	movlb	0	; () banked
  6933  000436  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6934  000438  22DA               	addwfc	fsr2h,f,c
  6935  00043A  2ADF               	incf	indf2,f,c
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;my_i2c.c: 242: if (SSPSTATbits.D_A == 1) {
  6939  00043C  AAC7               	btfss	4039,5,c	;volatile
  6940  00043E  D027               	goto	i2l309
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;my_i2c.c: 243: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6944  000440  0100               	movlb	0	; () banked
  6945  000442  EE20 F00A          	lfsr	2,10
  6946  000446  0100               	movlb	0	; () banked
  6947  000448  51DF               	movf	_ic_ptr& (0+255),w,b
  6948  00044A  26D9               	addwf	fsr2l,f,c
  6949  00044C  0100               	movlb	0	; () banked
  6950  00044E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6951  000450  22DA               	addwfc	fsr2h,f,c
  6952  000452  50DF               	movf	indf2,w,c
  6953  000454  0100               	movlb	0	; () banked
  6954  000456  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  6955  000458  0100               	movlb	0	; () banked
  6956  00045A  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  6957  00045C  0D01               	mullw	1
  6958  00045E  50F3               	movf	prodl,w,c
  6959  000460  0100               	movlb	0	; () banked
  6960  000462  0100               	movlb	0	; () banked
  6961  000464  25DF               	addwf	_ic_ptr& (0+255),w,b
  6962  000466  6ED9               	movwf	fsr2l,c
  6963  000468  50F4               	movf	prodh,w,c
  6964  00046A  0100               	movlb	0	; () banked
  6965  00046C  0100               	movlb	0	; () banked
  6966  00046E  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6967  000470  6EDA               	movwf	fsr2h,c
  6968  000472  0100               	movlb	0	; () banked
  6969  000474  C0C4  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;my_i2c.c: 244: ic_ptr->buflen++;
  6973  000478  0100               	movlb	0	; () banked
  6974  00047A  EE20 F00A          	lfsr	2,10
  6975  00047E  0100               	movlb	0	; () banked
  6976  000480  51DF               	movf	_ic_ptr& (0+255),w,b
  6977  000482  26D9               	addwf	fsr2l,f,c
  6978  000484  0100               	movlb	0	; () banked
  6979  000486  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  6980  000488  22DA               	addwfc	fsr2h,f,c
  6981  00048A  2ADF               	incf	indf2,f,c
  6982                           
  6983                           ;my_i2c.c: 245: } else {
  6984  00048C  D047               	goto	i2l281
  6985  00048E                     i2l309:
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;my_i2c.c: 246: if (SSPSTATbits.R_W == 1) {
  6989  00048E  A4C7               	btfss	4039,2,c	;volatile
  6990  000490  D6B6               	goto	i2l2888
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 247: ic_ptr->status = 0x8;
  6994  000492  0100               	movlb	0	; () banked
  6995  000494  EE20 F00C          	lfsr	2,12
  6996  000498  0100               	movlb	0	; () banked
  6997  00049A  51DF               	movf	_ic_ptr& (0+255),w,b
  6998  00049C  26D9               	addwf	fsr2l,f,c
  6999  00049E  0100               	movlb	0	; () banked
  7000  0004A0  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7001  0004A2  22DA               	addwfc	fsr2h,f,c
  7002  0004A4  0E08               	movlw	8
  7003  0004A6  6EDF               	movwf	indf2,c
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;my_i2c.c: 248: msg_ready = 1;
  7007  0004A8  0100               	movlb	0	; () banked
  7008  0004AA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7009  0004AC  0E01               	movlw	1
  7010  0004AE  0100               	movlb	0	; () banked
  7011  0004B0  0100               	movlb	0	; () banked
  7012  0004B2  6FC6               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7013  0004B4  0100               	movlb	0	; () banked
  7014  0004B6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7015  0004B8                     L11:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;my_i2c.c: 249: msg_to_send = 1;
  7019  0004B8  0100               	movlb	0	; () banked
  7020  0004BA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7021  0004BC  0E01               	movlw	1
  7022  0004BE  0100               	movlb	0	; () banked
  7023  0004C0  0100               	movlb	0	; () banked
  7024  0004C2  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7025  0004C4  0100               	movlb	0	; () banked
  7026  0004C6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;my_i2c.c: 251: data_read = 0;
  7030  0004C8  0100               	movlb	0	; () banked
  7031  0004CA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7032  0004CC  0E00               	movlw	0
  7033  0004CE  0100               	movlb	0	; () banked
  7034  0004D0  0100               	movlb	0	; () banked
  7035  0004D2  6FC7               	movwf	i2c_int_handler@data_read& (0+255),b
  7036  0004D4                     L8:
  7037  0004D4  0100               	movlb	0	; () banked
  7038  0004D6  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7039                           
  7040                           ;my_i2c.c: 252: } else {
  7041  0004D8  D021               	goto	i2l281
  7042  0004DA                     L10:
  7043                           
  7044                           ;my_i2c.c: 255: ic_ptr->status = 0x5;
  7045  0004DA  0100               	movlb	0	; () banked
  7046  0004DC  EE20 F00C          	lfsr	2,12
  7047  0004E0  0100               	movlb	0	; () banked
  7048  0004E2  51DF               	movf	_ic_ptr& (0+255),w,b
  7049  0004E4  26D9               	addwf	fsr2l,f,c
  7050  0004E6  0100               	movlb	0	; () banked
  7051  0004E8  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7052  0004EA  22DA               	addwfc	fsr2h,f,c
  7053  0004EC  0E05               	movlw	5
  7054  0004EE  D731               	goto	L7
  7055  0004F0                     i2l2958:
  7056                           
  7057                           ; BSR set to: 0
  7058  0004F0  0100               	movlb	0	; () banked
  7059  0004F2  EE20 F00C          	lfsr	2,12
  7060  0004F6  0100               	movlb	0	; () banked
  7061  0004F8  51DF               	movf	_ic_ptr& (0+255),w,b
  7062  0004FA  26D9               	addwf	fsr2l,f,c
  7063  0004FC  0100               	movlb	0	; () banked
  7064  0004FE  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7065  000500  22DA               	addwfc	fsr2h,f,c
  7066  000502  50DF               	movf	indf2,w,c
  7067                           
  7068                           ; Switch size 1, requested type "space"
  7069                           ; Number of cases is 4, Range of values is 5 to 8
  7070                           ; switch strategies available:
  7071                           ; Name         Instructions Cycles
  7072                           ; simple_byte           13     7 (average)
  7073                           ;	Chosen strategy is simple_byte
  7074  000504  0A05               	xorlw	5	; case 5
  7075  000506  B4D8               	btfsc	status,2,c
  7076  000508  D63C               	goto	i2l283
  7077  00050A  0A03               	xorlw	3	; case 6
  7078  00050C  B4D8               	btfsc	status,2,c
  7079  00050E  D65B               	goto	i2l287
  7080  000510  0A01               	xorlw	1	; case 7
  7081  000512  B4D8               	btfsc	status,2,c
  7082  000514  D720               	goto	i2l301
  7083  000516  0A0F               	xorlw	15	; case 8
  7084  000518  B4D8               	btfsc	status,2,c
  7085  00051A  D6D1               	goto	i2l2908
  7086  00051C                     i2l281:
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;my_i2c.c: 262: }
  7090                           ;my_i2c.c: 265: if (data_read || data_written) {
  7091  00051C  0100               	movlb	0	; () banked
  7092  00051E  0100               	movlb	0	; () banked
  7093  000520  67C7               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7094  000522  D005               	goto	i2l315
  7095                           
  7096                           ; BSR set to: 0
  7097  000524  0100               	movlb	0	; () banked
  7098  000526  0100               	movlb	0	; () banked
  7099  000528  51C2               	movf	i2c_int_handler@data_written& (0+255),w,b
  7100  00052A  B4D8               	btfsc	status,2,c
  7101  00052C  D002               	goto	i2l2964
  7102  00052E                     i2l315:
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;my_i2c.c: 267: if (SSPCON1bits.CKP == 0) {
  7106  00052E  A8C6               	btfss	4038,4,c	;volatile
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;my_i2c.c: 268: SSPCON1bits.CKP = 1;
  7110  000530  88C6               	bsf	4038,4,c	;volatile
  7111  000532                     i2l2964:
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;my_i2c.c: 269: }
  7115                           ;my_i2c.c: 270: }
  7116                           ;my_i2c.c: 273: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7117  000532  0100               	movlb	0	; () banked
  7118  000534  EE20 F00A          	lfsr	2,10
  7119  000538  0100               	movlb	0	; () banked
  7120  00053A  51DF               	movf	_ic_ptr& (0+255),w,b
  7121  00053C  26D9               	addwf	fsr2l,f,c
  7122  00053E  0100               	movlb	0	; () banked
  7123  000540  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7124  000542  22DA               	addwfc	fsr2h,f,c
  7125  000544  0E08               	movlw	8
  7126  000546  64DF               	cpfsgt	indf2,c
  7127  000548  D024               	goto	i2l2970
  7128                           
  7129                           ; BSR set to: 0
  7130  00054A  0100               	movlb	0	; () banked
  7131  00054C  0100               	movlb	0	; () banked
  7132  00054E  67C6               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7133  000550  D020               	goto	i2l2970
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 274: ic_ptr->status = 0x5;
  7137  000552  0100               	movlb	0	; () banked
  7138  000554  EE20 F00C          	lfsr	2,12
  7139  000558  0100               	movlb	0	; () banked
  7140  00055A  51DF               	movf	_ic_ptr& (0+255),w,b
  7141  00055C  26D9               	addwf	fsr2l,f,c
  7142  00055E  0100               	movlb	0	; () banked
  7143  000560  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  000562  22DA               	addwfc	fsr2h,f,c
  7145  000564  0E05               	movlw	5
  7146  000566  6EDF               	movwf	indf2,c
  7147                           
  7148                           ;my_i2c.c: 275: ic_ptr->error_count++;
  7149  000568  0100               	movlb	0	; () banked
  7150  00056A  EE20 F00E          	lfsr	2,14
  7151  00056E  0100               	movlb	0	; () banked
  7152  000570  51DF               	movf	_ic_ptr& (0+255),w,b
  7153  000572  26D9               	addwf	fsr2l,f,c
  7154  000574  0100               	movlb	0	; () banked
  7155  000576  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7156  000578  22DA               	addwfc	fsr2h,f,c
  7157  00057A  2ADF               	incf	indf2,f,c
  7158                           
  7159                           ;my_i2c.c: 276: ic_ptr->error_code = 0x7;
  7160  00057C  0100               	movlb	0	; () banked
  7161  00057E  EE20 F00D          	lfsr	2,13
  7162  000582  0100               	movlb	0	; () banked
  7163  000584  51DF               	movf	_ic_ptr& (0+255),w,b
  7164  000586  26D9               	addwf	fsr2l,f,c
  7165  000588  0100               	movlb	0	; () banked
  7166  00058A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7167  00058C  22DA               	addwfc	fsr2h,f,c
  7168  00058E  0E07               	movlw	7
  7169  000590  6EDF               	movwf	indf2,c
  7170  000592                     i2l2970:
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;my_i2c.c: 277: }
  7174                           ;my_i2c.c: 279: if (msg_ready) {
  7175  000592  0100               	movlb	0	; () banked
  7176  000594  0100               	movlb	0	; () banked
  7177  000596  51C6               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7178  000598  B4D8               	btfsc	status,2,c
  7179  00059A  D044               	goto	i2l2978
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;my_i2c.c: 280: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7183  00059C  0100               	movlb	0	; () banked
  7184  00059E  EE20 F00B          	lfsr	2,11
  7185  0005A2  0100               	movlb	0	; () banked
  7186  0005A4  51DF               	movf	_ic_ptr& (0+255),w,b
  7187  0005A6  26D9               	addwf	fsr2l,f,c
  7188  0005A8  0100               	movlb	0	; () banked
  7189  0005AA  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7190  0005AC  22DA               	addwfc	fsr2h,f,c
  7191  0005AE  0100               	movlb	0	; () banked
  7192  0005B0  EE10 F00A          	lfsr	1,10
  7193  0005B4  0100               	movlb	0	; () banked
  7194  0005B6  51DF               	movf	_ic_ptr& (0+255),w,b
  7195  0005B8  26E1               	addwf	fsr1l,f,c
  7196  0005BA  0100               	movlb	0	; () banked
  7197  0005BC  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  0005BE  22E2               	addwfc	fsr1h,f,c
  7199  0005C0  50E7               	movf	indf1,w,c
  7200  0005C2  0100               	movlb	0	; () banked
  7201  0005C4  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7202  0005C6  0100               	movlb	0	; () banked
  7203  0005C8  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7204  0005CA  0D01               	mullw	1
  7205  0005CC  50F3               	movf	prodl,w,c
  7206  0005CE  0100               	movlb	0	; () banked
  7207  0005D0  0100               	movlb	0	; () banked
  7208  0005D2  25DF               	addwf	_ic_ptr& (0+255),w,b
  7209  0005D4  6EE1               	movwf	fsr1l,c
  7210  0005D6  50F4               	movf	prodh,w,c
  7211  0005D8  0100               	movlb	0	; () banked
  7212  0005DA  0100               	movlb	0	; () banked
  7213  0005DC  21E0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7214  0005DE  6EE2               	movwf	fsr1h,c
  7215  0005E0  CFDF FFE7          	movff	indf2,indf1
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;my_i2c.c: 281: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7219  0005E4  0100               	movlb	0	; () banked
  7220  0005E6  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7221  0005E8  0E28               	movlw	40
  7222  0005EA  6E40               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7223  0005EC  0100               	movlb	0	; () banked
  7224  0005EE  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7225  0005F0  0100               	movlb	0	; () banked
  7226  0005F2  C0E0  F042         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  7227  0005F6  0100               	movlb	0	; () banked
  7228  0005F8  C0DF  F041         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  7229  0005FC  0100               	movlb	0	; () banked
  7230  0005FE  EE20 F00A          	lfsr	2,10
  7231  000602  0100               	movlb	0	; () banked
  7232  000604  51DF               	movf	_ic_ptr& (0+255),w,b
  7233  000606  26D9               	addwf	fsr2l,f,c
  7234  000608  0100               	movlb	0	; () banked
  7235  00060A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  00060C  22DA               	addwfc	fsr2h,f,c
  7237  00060E  50DF               	movf	indf2,w,c
  7238  000610  0100               	movlb	0	; () banked
  7239  000612  6FBE               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7240  000614  0100               	movlb	0	; () banked
  7241  000616  29BE               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7242  000618  EC7D  F00D         	call	i2_ToMainHigh_sendmsg
  7243                           
  7244                           ;my_i2c.c: 282: ic_ptr->buflen = 0;
  7245  00061C  0100               	movlb	0	; () banked
  7246  00061E  EE20 F00A          	lfsr	2,10
  7247  000622  D045               	goto	L9
  7248  000624                     i2l2978:
  7249                           
  7250                           ; BSR set to: 0
  7251  000624  0100               	movlb	0	; () banked
  7252  000626  EE20 F00E          	lfsr	2,14
  7253  00062A  0100               	movlb	0	; () banked
  7254  00062C  51DF               	movf	_ic_ptr& (0+255),w,b
  7255  00062E  26D9               	addwf	fsr2l,f,c
  7256  000630  0100               	movlb	0	; () banked
  7257  000632  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7258  000634  22DA               	addwfc	fsr2h,f,c
  7259  000636  50DF               	movf	indf2,w,c
  7260  000638  B4D8               	btfsc	status,2,c
  7261  00063A  D041               	goto	i2l2986
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;my_i2c.c: 284: error_buf[0] = ic_ptr->error_count;
  7265  00063C  0100               	movlb	0	; () banked
  7266  00063E  EE20 F00E          	lfsr	2,14
  7267  000642  0100               	movlb	0	; () banked
  7268  000644  51DF               	movf	_ic_ptr& (0+255),w,b
  7269  000646  26D9               	addwf	fsr2l,f,c
  7270  000648  0100               	movlb	0	; () banked
  7271  00064A  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7272  00064C  22DA               	addwfc	fsr2h,f,c
  7273  00064E  50DF               	movf	indf2,w,c
  7274  000650  0100               	movlb	0	; () banked
  7275  000652  0100               	movlb	0	; () banked
  7276  000654  6FBF               	movwf	i2c_int_handler@error_buf& (0+255),b
  7277                           
  7278                           ;my_i2c.c: 285: error_buf[1] = ic_ptr->error_code;
  7279  000656  0100               	movlb	0	; () banked
  7280  000658  EE20 F00D          	lfsr	2,13
  7281  00065C  0100               	movlb	0	; () banked
  7282  00065E  51DF               	movf	_ic_ptr& (0+255),w,b
  7283  000660  26D9               	addwf	fsr2l,f,c
  7284  000662  0100               	movlb	0	; () banked
  7285  000664  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7286  000666  22DA               	addwfc	fsr2h,f,c
  7287  000668  50DF               	movf	indf2,w,c
  7288  00066A  0100               	movlb	0	; () banked
  7289  00066C  0100               	movlb	0	; () banked
  7290  00066E  6FC0               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7291                           
  7292                           ;my_i2c.c: 286: error_buf[2] = ic_ptr->event_count;
  7293  000670  0100               	movlb	0	; () banked
  7294  000672  EE20 F00B          	lfsr	2,11
  7295  000676  0100               	movlb	0	; () banked
  7296  000678  51DF               	movf	_ic_ptr& (0+255),w,b
  7297  00067A  26D9               	addwf	fsr2l,f,c
  7298  00067C  0100               	movlb	0	; () banked
  7299  00067E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7300  000680  22DA               	addwfc	fsr2h,f,c
  7301  000682  50DF               	movf	indf2,w,c
  7302  000684  0100               	movlb	0	; () banked
  7303  000686  0100               	movlb	0	; () banked
  7304  000688  6FC1               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 287: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7308  00068A  0100               	movlb	0	; () banked
  7309  00068C  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7310  00068E  0E29               	movlw	41
  7311  000690  6E40               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7312  000692  0100               	movlb	0	; () banked
  7313  000694  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7314  000696  0100               	movlb	0	; () banked
  7315  000698  0E00               	movlw	high i2c_int_handler@error_buf
  7316  00069A  6E42               	movwf	i2ToMainHigh_sendmsg@data+1,c
  7317  00069C  0100               	movlb	0	; () banked
  7318  00069E  0EBF               	movlw	low i2c_int_handler@error_buf
  7319  0006A0  6E41               	movwf	i2ToMainHigh_sendmsg@data,c
  7320  0006A2  0E03               	movlw	3
  7321  0006A4  EC7D  F00D         	call	i2_ToMainHigh_sendmsg
  7322                           
  7323                           ;my_i2c.c: 288: ic_ptr->error_count = 0;
  7324  0006A8  0100               	movlb	0	; () banked
  7325  0006AA  EE20 F00E          	lfsr	2,14
  7326  0006AE                     L9:
  7327  0006AE  0100               	movlb	0	; () banked
  7328  0006B0  51DF               	movf	_ic_ptr& (0+255),w,b
  7329  0006B2  26D9               	addwf	fsr2l,f,c
  7330  0006B4  0100               	movlb	0	; () banked
  7331  0006B6  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7332  0006B8  22DA               	addwfc	fsr2h,f,c
  7333  0006BA  0E00               	movlw	0
  7334  0006BC  6EDF               	movwf	indf2,c
  7335  0006BE                     i2l2986:
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;my_i2c.c: 289: }
  7339                           ;my_i2c.c: 290: if (msg_to_send) {
  7340  0006BE  0100               	movlb	0	; () banked
  7341  0006C0  0100               	movlb	0	; () banked
  7342  0006C2  51C5               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7343  0006C4  B4D8               	btfsc	status,2,c
  7344  0006C6  0012               	return	
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;my_i2c.c: 294: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7348  0006C8  0100               	movlb	0	; () banked
  7349  0006CA  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7350  0006CC  0E2A               	movlw	42
  7351  0006CE  6E40               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7352  0006D0  0100               	movlb	0	; () banked
  7353  0006D2  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7354  0006D4  0100               	movlb	0	; () banked
  7355  0006D6  C0E0  F042         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  7356  0006DA  0100               	movlb	0	; () banked
  7357  0006DC  C0DF  F041         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  7358  0006E0  0E00               	movlw	0
  7359  0006E2  EC7D  F00D         	call	i2_ToMainHigh_sendmsg
  7360                           
  7361                           ;my_i2c.c: 295: msg_to_send = 0;
  7362  0006E6  0100               	movlb	0	; () banked
  7363  0006E8  6FBD               	movwf	??_i2c_int_handler& (0+255),b
  7364  0006EA  0E00               	movlw	0
  7365  0006EC  0100               	movlb	0	; () banked
  7366  0006EE  0100               	movlb	0	; () banked
  7367  0006F0  6FC5               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7368  0006F2  0100               	movlb	0	; () banked
  7369  0006F4  51BD               	movf	??_i2c_int_handler& (0+255),w,b
  7370  0006F6  0012               	return	
  7371  0006F8                     __end_of_i2c_int_handler:
  7372                           	opt stack 0
  7373                           pclatu	equ	0xFFB
  7374                           pclath	equ	0xFFA
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           prodh	equ	0xFF4
  7380                           prodl	equ	0xFF3
  7381                           intcon	equ	0xFF2
  7382                           postinc0	equ	0xFEE
  7383                           fsr0h	equ	0xFEA
  7384                           fsr0l	equ	0xFE9
  7385                           wreg	equ	0xFE8
  7386                           indf1	equ	0xFE7
  7387                           fsr1h	equ	0xFE2
  7388                           fsr1l	equ	0xFE1
  7389                           bsr	equ	0xFE0
  7390                           indf2	equ	0xFDF
  7391                           postinc2	equ	0xFDE
  7392                           postdec2	equ	0xFDD
  7393                           fsr2h	equ	0xFDA
  7394                           fsr2l	equ	0xFD9
  7395                           status	equ	0xFD8
  7396                           
  7397 ;; *************** function _handle_start *****************
  7398 ;; Defined at:
  7399 ;;		line 103 in file "../src/my_i2c.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  data_read       1    wreg     unsigned char 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  data_read       1   46[COMRAM] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;		None               void
  7406 ;; Registers used:
  7407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7413 ;;      Params:         0       0       0       0       0
  7414 ;;      Locals:         1       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0
  7416 ;;      Totals:         1       0       0       0       0
  7417 ;;Total ram usage:        1 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_i2c_int_handler
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text44
  7427  000F70                     __ptext44:
  7428                           	opt stack 0
  7429  000F70                     _handle_start:
  7430                           	opt stack 18
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;incstack = 0
  7434                           ;handle_start@data_read stored from wreg
  7435  000F70  CFE8 F02F          	movff	wreg,handle_start@data_read
  7436                           
  7437                           ;my_i2c.c: 104: ic_ptr->event_count = 1;
  7438  000F74  0100               	movlb	0	; () banked
  7439  000F76  EE20 F00B          	lfsr	2,11
  7440  000F7A  0100               	movlb	0	; () banked
  7441  000F7C  51DF               	movf	_ic_ptr& (0+255),w,b
  7442  000F7E  26D9               	addwf	fsr2l,f,c
  7443  000F80  0100               	movlb	0	; () banked
  7444  000F82  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7445  000F84  22DA               	addwfc	fsr2h,f,c
  7446  000F86  0E01               	movlw	1
  7447  000F88  6EDF               	movwf	indf2,c
  7448                           
  7449                           ;my_i2c.c: 105: ic_ptr->buflen = 0;
  7450  000F8A  0100               	movlb	0	; () banked
  7451  000F8C  EE20 F00A          	lfsr	2,10
  7452  000F90  0100               	movlb	0	; () banked
  7453  000F92  51DF               	movf	_ic_ptr& (0+255),w,b
  7454  000F94  26D9               	addwf	fsr2l,f,c
  7455  000F96  0100               	movlb	0	; () banked
  7456  000F98  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  000F9A  22DA               	addwfc	fsr2h,f,c
  7458  000F9C  0E00               	movlw	0
  7459  000F9E  6EDF               	movwf	indf2,c
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 107: if (data_read) {
  7463  000FA0  502F               	movf	handle_start@data_read,w,c
  7464  000FA2  B4D8               	btfsc	status,2,c
  7465  000FA4  D03D               	goto	i2l3366
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;my_i2c.c: 108: if (SSPSTATbits.D_A == 1) {
  7469  000FA6  AAC7               	btfss	4039,5,c	;volatile
  7470  000FA8  D021               	goto	i2l271
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;my_i2c.c: 111: ic_ptr->status = 0x5;
  7474  000FAA  0100               	movlb	0	; () banked
  7475  000FAC  EE20 F00C          	lfsr	2,12
  7476  000FB0  0100               	movlb	0	; () banked
  7477  000FB2  51DF               	movf	_ic_ptr& (0+255),w,b
  7478  000FB4  26D9               	addwf	fsr2l,f,c
  7479  000FB6  0100               	movlb	0	; () banked
  7480  000FB8  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7481  000FBA  22DA               	addwfc	fsr2h,f,c
  7482  000FBC  0E05               	movlw	5
  7483  000FBE  6EDF               	movwf	indf2,c
  7484                           
  7485                           ;my_i2c.c: 112: ic_ptr->error_count++;
  7486  000FC0  0100               	movlb	0	; () banked
  7487  000FC2  EE20 F00E          	lfsr	2,14
  7488  000FC6  0100               	movlb	0	; () banked
  7489  000FC8  51DF               	movf	_ic_ptr& (0+255),w,b
  7490  000FCA  26D9               	addwf	fsr2l,f,c
  7491  000FCC  0100               	movlb	0	; () banked
  7492  000FCE  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7493  000FD0  22DA               	addwfc	fsr2h,f,c
  7494  000FD2  2ADF               	incf	indf2,f,c
  7495                           
  7496                           ;my_i2c.c: 113: ic_ptr->error_code = 0x5;
  7497  000FD4  0100               	movlb	0	; () banked
  7498  000FD6  EE20 F00D          	lfsr	2,13
  7499  000FDA  0100               	movlb	0	; () banked
  7500  000FDC  51DF               	movf	_ic_ptr& (0+255),w,b
  7501  000FDE  26D9               	addwf	fsr2l,f,c
  7502  000FE0  0100               	movlb	0	; () banked
  7503  000FE2  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7504  000FE4  22DA               	addwfc	fsr2h,f,c
  7505  000FE6  0E05               	movlw	5
  7506  000FE8  6EDF               	movwf	indf2,c
  7507                           
  7508                           ;my_i2c.c: 114: } else {
  7509  000FEA  0012               	return	
  7510  000FEC                     i2l271:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;my_i2c.c: 115: if (SSPSTATbits.R_W == 1) {
  7514  000FEC  A4C7               	btfss	4039,2,c	;volatile
  7515  000FEE  D00C               	goto	i2l3364
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;my_i2c.c: 116: ic_ptr->status = 0x8;
  7519  000FF0  0100               	movlb	0	; () banked
  7520  000FF2  EE20 F00C          	lfsr	2,12
  7521  000FF6  0100               	movlb	0	; () banked
  7522  000FF8  51DF               	movf	_ic_ptr& (0+255),w,b
  7523  000FFA  26D9               	addwf	fsr2l,f,c
  7524  000FFC  0100               	movlb	0	; () banked
  7525  000FFE  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7526  001000  22DA               	addwfc	fsr2h,f,c
  7527  001002  0E08               	movlw	8
  7528  001004  6EDF               	movwf	indf2,c
  7529                           
  7530                           ;my_i2c.c: 117: } else {
  7531  001006  0012               	return	
  7532  001008                     i2l3364:
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;my_i2c.c: 118: ic_ptr->status = 0x7;
  7536  001008  0100               	movlb	0	; () banked
  7537  00100A  EE20 F00C          	lfsr	2,12
  7538  00100E  0100               	movlb	0	; () banked
  7539  001010  51DF               	movf	_ic_ptr& (0+255),w,b
  7540  001012  26D9               	addwf	fsr2l,f,c
  7541  001014  0100               	movlb	0	; () banked
  7542  001016  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7543  001018  22DA               	addwfc	fsr2h,f,c
  7544  00101A  0E07               	movlw	7
  7545  00101C  6EDF               	movwf	indf2,c
  7546  00101E  0012               	return	
  7547  001020                     i2l3366:
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;my_i2c.c: 122: ic_ptr->status = 0x6;
  7551  001020  0100               	movlb	0	; () banked
  7552  001022  EE20 F00C          	lfsr	2,12
  7553  001026  0100               	movlb	0	; () banked
  7554  001028  51DF               	movf	_ic_ptr& (0+255),w,b
  7555  00102A  26D9               	addwf	fsr2l,f,c
  7556  00102C  0100               	movlb	0	; () banked
  7557  00102E  51E0               	movf	(_ic_ptr+1)& (0+255),w,b
  7558  001030  22DA               	addwfc	fsr2h,f,c
  7559  001032  0E06               	movlw	6
  7560  001034  6EDF               	movwf	indf2,c
  7561  001036  0012               	return	
  7562  001038                     __end_of_handle_start:
  7563                           	opt stack 0
  7564                           pclatu	equ	0xFFB
  7565                           pclath	equ	0xFFA
  7566                           tblptru	equ	0xFF8
  7567                           tblptrh	equ	0xFF7
  7568                           tblptrl	equ	0xFF6
  7569                           tablat	equ	0xFF5
  7570                           prodh	equ	0xFF4
  7571                           prodl	equ	0xFF3
  7572                           intcon	equ	0xFF2
  7573                           postinc0	equ	0xFEE
  7574                           fsr0h	equ	0xFEA
  7575                           fsr0l	equ	0xFE9
  7576                           wreg	equ	0xFE8
  7577                           indf1	equ	0xFE7
  7578                           fsr1h	equ	0xFE2
  7579                           fsr1l	equ	0xFE1
  7580                           bsr	equ	0xFE0
  7581                           indf2	equ	0xFDF
  7582                           postinc2	equ	0xFDE
  7583                           postdec2	equ	0xFDD
  7584                           fsr2h	equ	0xFDA
  7585                           fsr2l	equ	0xFD9
  7586                           status	equ	0xFD8
  7587                           
  7588 ;; *************** function _adc_int_handler *****************
  7589 ;; Defined at:
  7590 ;;		line 55 in file "../src/user_interrupts.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;		None
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  result          2    7[BANK0 ] unsigned int 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;		None               void
  7597 ;; Registers used:
  7598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7604 ;;      Params:         0       0       0       0       0
  7605 ;;      Locals:         0       2       0       0       0
  7606 ;;      Temps:          0       2       0       0       0
  7607 ;;      Totals:         0       4       0       0       0
  7608 ;;Total ram usage:        4 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    3
  7611 ;; This function calls:
  7612 ;;		_ReadADC
  7613 ;;		i2_ToMainHigh_sendmsg
  7614 ;; This function is called by:
  7615 ;;		_InterruptHandlerHigh
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text45
  7620  00167C                     __ptext45:
  7621                           	opt stack 0
  7622  00167C                     _adc_int_handler:
  7623                           	opt stack 16
  7624                           
  7625                           ;user_interrupts.c: 57: unsigned int result;
  7626                           ;user_interrupts.c: 58: result = ReadADC();
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;incstack = 0
  7630  00167C  ECFE  F00D         	call	_ReadADC	;wreg free
  7631  001680  C02F  F0BF         	movff	?_ReadADC,adc_int_handler@result
  7632  001684  C030  F0C0         	movff	?_ReadADC+1,adc_int_handler@result+1
  7633                           
  7634                           ;user_interrupts.c: 59: result = result /4;
  7635  001688  0100               	movlb	0	; () banked
  7636  00168A  C0BF  F0BD         	movff	adc_int_handler@result,??_adc_int_handler
  7637  00168E  0100               	movlb	0	; () banked
  7638  001690  C0C0  F0BE         	movff	adc_int_handler@result+1,??_adc_int_handler+1
  7639  001694  0100               	movlb	0	; () banked
  7640  001696  90D8               	bcf	status,0,c
  7641  001698  33BE               	rrcf	(??_adc_int_handler+1)& (0+255),f,b
  7642  00169A  33BD               	rrcf	??_adc_int_handler& (0+255),f,b
  7643  00169C  0100               	movlb	0	; () banked
  7644  00169E  90D8               	bcf	status,0,c
  7645  0016A0  33BE               	rrcf	(??_adc_int_handler+1)& (0+255),f,b
  7646  0016A2  33BD               	rrcf	??_adc_int_handler& (0+255),f,b
  7647  0016A4  C0BD  F0BF         	movff	??_adc_int_handler,adc_int_handler@result
  7648  0016A8  C0BE  F0C0         	movff	??_adc_int_handler+1,adc_int_handler@result+1
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;user_interrupts.c: 60: ToMainHigh_sendmsg(sizeof(result),47,(void *)&result);
  7652  0016AC  0100               	movlb	0	; () banked
  7653  0016AE  6FBD               	movwf	??_adc_int_handler& (0+255),b
  7654  0016B0  0E2F               	movlw	47
  7655  0016B2  6E40               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7656  0016B4  0100               	movlb	0	; () banked
  7657  0016B6  51BD               	movf	??_adc_int_handler& (0+255),w,b
  7658  0016B8  0100               	movlb	0	; () banked
  7659  0016BA  0E00               	movlw	high adc_int_handler@result
  7660  0016BC  6E42               	movwf	i2ToMainHigh_sendmsg@data+1,c
  7661  0016BE  0100               	movlb	0	; () banked
  7662  0016C0  0EBF               	movlw	low adc_int_handler@result
  7663  0016C2  6E41               	movwf	i2ToMainHigh_sendmsg@data,c
  7664  0016C4  0E02               	movlw	2
  7665  0016C6  EC7D  F00D         	call	i2_ToMainHigh_sendmsg
  7666  0016CA  0012               	return	
  7667  0016CC                     __end_of_adc_int_handler:
  7668                           	opt stack 0
  7669                           pclatu	equ	0xFFB
  7670                           pclath	equ	0xFFA
  7671                           tblptru	equ	0xFF8
  7672                           tblptrh	equ	0xFF7
  7673                           tblptrl	equ	0xFF6
  7674                           tablat	equ	0xFF5
  7675                           prodh	equ	0xFF4
  7676                           prodl	equ	0xFF3
  7677                           intcon	equ	0xFF2
  7678                           postinc0	equ	0xFEE
  7679                           fsr0h	equ	0xFEA
  7680                           fsr0l	equ	0xFE9
  7681                           wreg	equ	0xFE8
  7682                           indf1	equ	0xFE7
  7683                           fsr1h	equ	0xFE2
  7684                           fsr1l	equ	0xFE1
  7685                           bsr	equ	0xFE0
  7686                           indf2	equ	0xFDF
  7687                           postinc2	equ	0xFDE
  7688                           postdec2	equ	0xFDD
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8
  7692                           
  7693 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7694 ;; Defined at:
  7695 ;;		line 126 in file "../src/messages.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  length          1    wreg     unsigned char 
  7698 ;;  msgtype         1   63[COMRAM] unsigned char 
  7699 ;;  data            2   64[COMRAM] PTR void 
  7700 ;;		 -> adc_int_handler@result(2), timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  7701 ;;		 -> main@ic(40), 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  length          1   66[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      char 
  7706 ;; Registers used:
  7707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7713 ;;      Params:         3       0       0       0       0
  7714 ;;      Locals:         1       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0
  7716 ;;      Totals:         4       0       0       0       0
  7717 ;;Total ram usage:        4 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    2
  7720 ;; This function calls:
  7721 ;;		i2_send_msg
  7722 ;; This function is called by:
  7723 ;;		_i2c_int_handler
  7724 ;;		_adc_int_handler
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text46
  7729  001AFA                     __ptext46:
  7730                           	opt stack 0
  7731  001AFA                     i2_ToMainHigh_sendmsg:
  7732                           	opt stack 16
  7733                           
  7734                           ;incstack = 0
  7735                           ;i2ToMainHigh_sendmsg@length stored from wreg
  7736  001AFA  CFE8 F043          	movff	wreg,i2ToMainHigh_sendmsg@length
  7737                           
  7738                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7739                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  7740  001AFE  0101               	movlb	1	; () banked
  7741  001B00  0E01               	movlw	high _ToMainHigh_MQ
  7742  001B02  6E3A               	movwf	i2send_msg@qptr+1,c
  7743  001B04  0101               	movlb	1	; () banked
  7744  001B06  0E6C               	movlw	low _ToMainHigh_MQ
  7745  001B08  6E39               	movwf	i2send_msg@qptr,c
  7746  001B0A  C043  F03B         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  7747  001B0E  C040  F03C         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7748  001B12  C042  F03E         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7749  001B16  C041  F03D         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  7750  001B1A  ECE8  F006         	call	i2_send_msg	;wreg free
  7751  001B1E  0012               	return	
  7752  001B20                     __end_ofi2_ToMainHigh_sendmsg:
  7753                           	opt stack 0
  7754                           pclatu	equ	0xFFB
  7755                           pclath	equ	0xFFA
  7756                           tblptru	equ	0xFF8
  7757                           tblptrh	equ	0xFF7
  7758                           tblptrl	equ	0xFF6
  7759                           tablat	equ	0xFF5
  7760                           prodh	equ	0xFF4
  7761                           prodl	equ	0xFF3
  7762                           intcon	equ	0xFF2
  7763                           postinc0	equ	0xFEE
  7764                           fsr0h	equ	0xFEA
  7765                           fsr0l	equ	0xFE9
  7766                           wreg	equ	0xFE8
  7767                           indf1	equ	0xFE7
  7768                           fsr1h	equ	0xFE2
  7769                           fsr1l	equ	0xFE1
  7770                           bsr	equ	0xFE0
  7771                           indf2	equ	0xFDF
  7772                           postinc2	equ	0xFDE
  7773                           postdec2	equ	0xFDD
  7774                           fsr2h	equ	0xFDA
  7775                           fsr2l	equ	0xFD9
  7776                           status	equ	0xFD8
  7777                           
  7778 ;; *************** function i2_send_msg *****************
  7779 ;; Defined at:
  7780 ;;		line 24 in file "../src/messages.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  7783 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7784 ;;  length          1   58[COMRAM] unsigned char 
  7785 ;;  msgtype         1   59[COMRAM] unsigned char 
  7786 ;;  data            2   60[COMRAM] PTR void 
  7787 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  7788 ;;		 -> i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(40), main@uc(5), 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  7791 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7792 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7793 ;;  send_msg        2    0[BANK0 ] unsigned int 
  7794 ;;  send_msg        1    2[BANK0 ] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      char 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7804 ;;      Params:         6       0       0       0       0
  7805 ;;      Locals:         0       5       0       0       0
  7806 ;;      Temps:          1       0       0       0       0
  7807 ;;      Totals:         7       5       0       0       0
  7808 ;;Total ram usage:       12 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    1
  7811 ;; This function calls:
  7812 ;;		i2_memcpy
  7813 ;; This function is called by:
  7814 ;;		i2_ToMainLow_sendmsg
  7815 ;;		i2_ToMainHigh_sendmsg
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text47
  7820  000DD0                     __ptext47:
  7821                           	opt stack 0
  7822  000DD0                     i2_send_msg:
  7823                           	opt stack 16
  7824                           
  7825                           ;messages.c: 25: unsigned char slot;
  7826                           ;messages.c: 27: msg *qmsg;
  7827                           ;messages.c: 28: size_t tlength = length;
  7828                           
  7829                           ;incstack = 0
  7830  000DD0  0100               	movlb	0	; () banked
  7831  000DD2  C03B  F0B8         	movff	i2send_msg@length,i2send_msg@tlength
  7832  000DD6  0100               	movlb	0	; () banked
  7833  000DD8  0100               	movlb	0	; () banked
  7834  000DDA  6BB9               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7838  000DDC  EE20 F034          	lfsr	2,52
  7839  000DE0  5039               	movf	i2send_msg@qptr,w,c
  7840  000DE2  26D9               	addwf	fsr2l,f,c
  7841  000DE4  503A               	movf	i2send_msg@qptr+1,w,c
  7842  000DE6  22DA               	addwfc	fsr2h,f,c
  7843  000DE8  50DF               	movf	indf2,w,c
  7844  000DEA  0100               	movlb	0	; () banked
  7845  000DEC  0100               	movlb	0	; () banked
  7846  000DEE  6FBA               	movwf	i2send_msg@slot& (0+255),b
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7850  000DF0  0100               	movlb	0	; () banked
  7851  000DF2  0100               	movlb	0	; () banked
  7852  000DF4  51BA               	movf	i2send_msg@slot& (0+255),w,b
  7853  000DF6  0D0D               	mullw	13
  7854  000DF8  50F3               	movf	prodl,w,c
  7855  000DFA  2439               	addwf	i2send_msg@qptr,w,c
  7856  000DFC  0100               	movlb	0	; () banked
  7857  000DFE  0100               	movlb	0	; () banked
  7858  000E00  6FBB               	movwf	i2send_msg@qmsg& (0+255),b
  7859  000E02  50F4               	movf	prodh,w,c
  7860  000E04  203A               	addwfc	i2send_msg@qptr+1,w,c
  7861  000E06  0100               	movlb	0	; () banked
  7862  000E08  6FBC               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;messages.c: 41: if (qmsg->full != 0) {
  7866  000E0A  C0BB  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7867  000E0E  C0BC  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7868  000E12  50DF               	movf	indf2,w,c
  7869  000E14  B4D8               	btfsc	status,2,c
  7870  000E16  D002               	goto	i2l3418
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;messages.c: 42: return (-1);
  7874  000E18  0EFF               	movlw	255
  7875  000E1A  0012               	return	
  7876  000E1C                     i2l3418:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;messages.c: 43: }
  7880                           ;messages.c: 46: qmsg->length = length;
  7881  000E1C  0100               	movlb	0	; () banked
  7882  000E1E  EE20 F001          	lfsr	2,1
  7883  000E22  0100               	movlb	0	; () banked
  7884  000E24  51BB               	movf	i2send_msg@qmsg& (0+255),w,b
  7885  000E26  26D9               	addwf	fsr2l,f,c
  7886  000E28  0100               	movlb	0	; () banked
  7887  000E2A  51BC               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7888  000E2C  22DA               	addwfc	fsr2h,f,c
  7889  000E2E  C03B  FFDF         	movff	i2send_msg@length,indf2
  7890                           
  7891                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7892  000E32  0100               	movlb	0	; () banked
  7893  000E34  EE20 F002          	lfsr	2,2
  7894  000E38  0100               	movlb	0	; () banked
  7895  000E3A  51BB               	movf	i2send_msg@qmsg& (0+255),w,b
  7896  000E3C  26D9               	addwf	fsr2l,f,c
  7897  000E3E  0100               	movlb	0	; () banked
  7898  000E40  51BC               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7899  000E42  22DA               	addwfc	fsr2h,f,c
  7900  000E44  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7904  000E48  0E03               	movlw	3
  7905  000E4A  0100               	movlb	0	; () banked
  7906  000E4C  0100               	movlb	0	; () banked
  7907  000E4E  25BB               	addwf	i2send_msg@qmsg& (0+255),w,b
  7908  000E50  6E2F               	movwf	i2memcpy@d1,c
  7909  000E52  0E00               	movlw	0
  7910  000E54  0100               	movlb	0	; () banked
  7911  000E56  0100               	movlb	0	; () banked
  7912  000E58  21BC               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7913  000E5A  6E30               	movwf	i2memcpy@d1+1,c
  7914  000E5C  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7915  000E60  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  7916  000E64  C0B8  F033         	movff	i2send_msg@tlength,i2memcpy@n
  7917  000E68  C0B9  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7918  000E6C  EC57  F00C         	call	i2_memcpy	;wreg free
  7919                           
  7920                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7921  000E70  EE20 F034          	lfsr	2,52
  7922  000E74  5039               	movf	i2send_msg@qptr,w,c
  7923  000E76  26D9               	addwf	fsr2l,f,c
  7924  000E78  503A               	movf	i2send_msg@qptr+1,w,c
  7925  000E7A  22DA               	addwfc	fsr2h,f,c
  7926  000E7C  EE10 F034          	lfsr	1,52
  7927  000E80  5039               	movf	i2send_msg@qptr,w,c
  7928  000E82  26E1               	addwf	fsr1l,f,c
  7929  000E84  503A               	movf	i2send_msg@qptr+1,w,c
  7930  000E86  22E2               	addwfc	fsr1h,f,c
  7931  000E88  50E7               	movf	indf1,w,c
  7932  000E8A  6E3F               	movwf	??i2_send_msg& (0+255),c
  7933  000E8C  283F               	incf	??i2_send_msg,w,c
  7934  000E8E  0B03               	andlw	3
  7935  000E90  6EDF               	movwf	indf2,c
  7936                           
  7937                           ;messages.c: 59: qmsg->full = 1;
  7938  000E92  C0BB  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7939  000E96  C0BC  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7940  000E9A  0E01               	movlw	1
  7941  000E9C  6EDF               	movwf	indf2,c
  7942                           
  7943                           ;messages.c: 60: return (1);
  7944  000E9E  0E01               	movlw	1
  7945  000EA0  0012               	return	
  7946  000EA2                     __end_ofi2_send_msg:
  7947                           	opt stack 0
  7948                           pclatu	equ	0xFFB
  7949                           pclath	equ	0xFFA
  7950                           tblptru	equ	0xFF8
  7951                           tblptrh	equ	0xFF7
  7952                           tblptrl	equ	0xFF6
  7953                           tablat	equ	0xFF5
  7954                           prodh	equ	0xFF4
  7955                           prodl	equ	0xFF3
  7956                           intcon	equ	0xFF2
  7957                           postinc0	equ	0xFEE
  7958                           fsr0h	equ	0xFEA
  7959                           fsr0l	equ	0xFE9
  7960                           wreg	equ	0xFE8
  7961                           indf1	equ	0xFE7
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           bsr	equ	0xFE0
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function i2_memcpy *****************
  7973 ;; Defined at:
  7974 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  d1              2   46[COMRAM] PTR void 
  7977 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7978 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7979 ;;		 -> main@msgbuffer(11), 
  7980 ;;  s1              2   48[COMRAM] PTR const void 
  7981 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7982 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7983 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  7984 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7985 ;;		 -> ToMainLow_MQ(54), main@t1thread_data(2), main@ic(40), main@uc(5), 
  7986 ;;  n               2   50[COMRAM] unsigned int 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  7989 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7990 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7991 ;;		 -> adc_int_handler@result(2), timer0_int_handler@val(2), timer0_lthread@val(2), NULL(0), 
  7992 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7993 ;;		 -> ToMainLow_MQ(54), main@t1thread_data(2), main@ic(40), main@uc(5), 
  7994 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  7995 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7996 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7997 ;;		 -> main@msgbuffer(11), 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  2   46[COMRAM] PTR void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8007 ;;      Params:         6       0       0       0       0
  8008 ;;      Locals:         4       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0
  8010 ;;      Totals:        10       0       0       0       0
  8011 ;;Total ram usage:       10 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		i2_send_msg
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text48
  8021  0018AE                     __ptext48:
  8022                           	opt stack 0
  8023  0018AE                     i2_memcpy:
  8024                           	opt stack 16
  8025                           
  8026                           ;incstack = 0
  8027  0018AE  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8028  0018B2  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  8029  0018B6  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8030  0018BA  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  8031  0018BE  D00E               	goto	i2l3456
  8032  0018C0                     i2l3450:
  8033  0018C0  C037  FFD9         	movff	i2memcpy@s,fsr2l
  8034  0018C4  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  8035  0018C8  C035  FFE1         	movff	i2memcpy@d,fsr1l
  8036  0018CC  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  8037  0018D0  CFDF FFE7          	movff	indf2,indf1
  8038  0018D4  4A37               	infsnz	i2memcpy@s,f,c
  8039  0018D6  2A38               	incf	i2memcpy@s+1,f,c
  8040  0018D8  4A35               	infsnz	i2memcpy@d,f,c
  8041  0018DA  2A36               	incf	i2memcpy@d+1,f,c
  8042  0018DC                     i2l3456:
  8043  0018DC  0633               	decf	i2memcpy@n,f,c
  8044  0018DE  A0D8               	btfss	status,0,c
  8045  0018E0  0634               	decf	i2memcpy@n+1,f,c
  8046  0018E2  2833               	incf	i2memcpy@n& (0+255),w,c
  8047  0018E4  B4D8               	btfsc	status,2,c
  8048  0018E6  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  8049  0018E8  B4D8               	btfsc	status,2,c
  8050                           
  8051                           ;	Return value of i2_memcpy is never used
  8052  0018EA  0012               	return	
  8053  0018EC  D7E9               	goto	i2l3450
  8054  0018EE                     __end_ofi2_memcpy:
  8055                           	opt stack 0
  8056                           pclatu	equ	0xFFB
  8057                           pclath	equ	0xFFA
  8058                           tblptru	equ	0xFF8
  8059                           tblptrh	equ	0xFF7
  8060                           tblptrl	equ	0xFF6
  8061                           tablat	equ	0xFF5
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           fsr0h	equ	0xFEA
  8067                           fsr0l	equ	0xFE9
  8068                           wreg	equ	0xFE8
  8069                           indf1	equ	0xFE7
  8070                           fsr1h	equ	0xFE2
  8071                           fsr1l	equ	0xFE1
  8072                           bsr	equ	0xFE0
  8073                           indf2	equ	0xFDF
  8074                           postinc2	equ	0xFDE
  8075                           postdec2	equ	0xFDD
  8076                           fsr2h	equ	0xFDA
  8077                           fsr2l	equ	0xFD9
  8078                           status	equ	0xFD8
  8079                           
  8080 ;; *************** function _ReadADC *****************
  8081 ;; Defined at:
  8082 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;		None
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  2   46[COMRAM] int 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8096 ;;      Params:         2       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0
  8099 ;;      Totals:         2       0       0       0       0
  8100 ;;Total ram usage:        2 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_adc_int_handler
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text49
  8110  001BFC                     __ptext49:
  8111                           	opt stack 0
  8112  001BFC                     _ReadADC:
  8113                           	opt stack 18
  8114                           
  8115                           ;incstack = 0
  8116  001BFC  50C4               	movf	4036,w,c	;volatile
  8117  001BFE  6E30               	movwf	?_ReadADC+1,c
  8118  001C00  50C3               	movf	4035,w,c	;volatile
  8119  001C02  6E2F               	movwf	?_ReadADC,c
  8120  001C04  0012               	return	
  8121  001C06                     __end_of_ReadADC:
  8122                           	opt stack 0
  8123                           pclatu	equ	0xFFB
  8124                           pclath	equ	0xFFA
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           intcon	equ	0xFF2
  8132                           postinc0	equ	0xFEE
  8133                           fsr0h	equ	0xFEA
  8134                           fsr0l	equ	0xFE9
  8135                           wreg	equ	0xFE8
  8136                           indf1	equ	0xFE7
  8137                           fsr1h	equ	0xFE2
  8138                           fsr1l	equ	0xFE1
  8139                           bsr	equ	0xFE0
  8140                           indf2	equ	0xFDF
  8141                           postinc2	equ	0xFDE
  8142                           postdec2	equ	0xFDD
  8143                           fsr2h	equ	0xFDA
  8144                           fsr2l	equ	0xFD9
  8145                           status	equ	0xFD8
  8146                           
  8147 ;; *************** function _SleepIfOkay *****************
  8148 ;; Defined at:
  8149 ;;		line 228 in file "../src/messages.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;		None
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;		None               void
  8156 ;; Registers used:
  8157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8163 ;;      Params:         0       0       0       0       0
  8164 ;;      Locals:         0       0       0       0       0
  8165 ;;      Temps:          0       0       0       0       0
  8166 ;;      Totals:         0       0       0       0       0
  8167 ;;Total ram usage:        0 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:    2
  8170 ;; This function calls:
  8171 ;;		_enter_sleep_mode
  8172 ;;		i2_check_msg
  8173 ;;		i2_in_high_int
  8174 ;;		i2_in_low_int
  8175 ;; This function is called by:
  8176 ;;		_InterruptHandlerHigh
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text50
  8181  0016CC                     __ptext50:
  8182                           	opt stack 0
  8183  0016CC                     _SleepIfOkay:
  8184                           	opt stack 17
  8185                           
  8186                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8187                           
  8188                           ;incstack = 0
  8189  0016CC  664C               	tstfsz	_MQ_Main_Willing_to_block,c
  8190  0016CE  D001               	goto	i2l2226
  8191  0016D0  0012               	return	
  8192  0016D2                     i2l2226:
  8193                           
  8194                           ;messages.c: 232: }
  8195                           ;messages.c: 235: if (in_low_int()) {
  8196  0016D2  EC17  F00D         	call	i2_in_low_int	;wreg free
  8197  0016D6  5032               	movf	?i2_in_low_int+1,w,c
  8198  0016D8  1031               	iorwf	?i2_in_low_int,w,c
  8199  0016DA  A4D8               	btfss	status,2,c
  8200  0016DC  0012               	return	
  8201                           
  8202                           ;messages.c: 237: }
  8203                           ;messages.c: 240: if (!in_high_int()) {
  8204                           
  8205                           ;messages.c: 236: return;
  8206  0016DE  ECF8  F00D         	call	i2_in_high_int	;wreg free
  8207  0016E2  5030               	movf	?i2_in_high_int+1,w,c
  8208  0016E4  102F               	iorwf	?i2_in_high_int,w,c
  8209  0016E6  B4D8               	btfsc	status,2,c
  8210  0016E8  0012               	return	
  8211                           
  8212                           ;messages.c: 242: }
  8213                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8214                           
  8215                           ;messages.c: 241: return;
  8216  0016EA  0101               	movlb	1	; () banked
  8217  0016EC  0E01               	movlw	high _ToMainHigh_MQ
  8218  0016EE  6E30               	movwf	i2check_msg@qptr+1,c
  8219  0016F0  0101               	movlb	1	; () banked
  8220  0016F2  0E6C               	movlw	low _ToMainHigh_MQ
  8221  0016F4  6E2F               	movwf	i2check_msg@qptr,c
  8222  0016F6  EC90  F00D         	call	i2_check_msg	;wreg free
  8223  0016FA  0900               	iorlw	0
  8224  0016FC  A4D8               	btfss	status,2,c
  8225  0016FE  0012               	return	
  8226                           
  8227                           ;messages.c: 249: }
  8228                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8229                           
  8230                           ;messages.c: 248: return;
  8231  001700  0100               	movlb	0	; () banked
  8232  001702  0E00               	movlw	high _ToMainLow_MQ
  8233  001704  6E30               	movwf	i2check_msg@qptr+1,c
  8234  001706  0100               	movlb	0	; () banked
  8235  001708  0E82               	movlw	low _ToMainLow_MQ
  8236  00170A  6E2F               	movwf	i2check_msg@qptr,c
  8237  00170C  EC90  F00D         	call	i2_check_msg	;wreg free
  8238  001710  0900               	iorlw	0
  8239  001712  B4D8               	btfsc	status,2,c
  8240                           
  8241                           ;messages.c: 252: }
  8242                           ;messages.c: 253: enter_sleep_mode();
  8243                           
  8244                           ;messages.c: 251: return;
  8245  001714  EC07  F00E         	call	_enter_sleep_mode	;wreg free
  8246  001718  0012               	return	
  8247  00171A                     __end_of_SleepIfOkay:
  8248                           	opt stack 0
  8249                           pclatu	equ	0xFFB
  8250                           pclath	equ	0xFFA
  8251                           tblptru	equ	0xFF8
  8252                           tblptrh	equ	0xFF7
  8253                           tblptrl	equ	0xFF6
  8254                           tablat	equ	0xFF5
  8255                           prodh	equ	0xFF4
  8256                           prodl	equ	0xFF3
  8257                           intcon	equ	0xFF2
  8258                           postinc0	equ	0xFEE
  8259                           fsr0h	equ	0xFEA
  8260                           fsr0l	equ	0xFE9
  8261                           wreg	equ	0xFE8
  8262                           indf1	equ	0xFE7
  8263                           fsr1h	equ	0xFE2
  8264                           fsr1l	equ	0xFE1
  8265                           bsr	equ	0xFE0
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8
  8272                           
  8273 ;; *************** function i2_in_low_int *****************
  8274 ;; Defined at:
  8275 ;;		line 30 in file "../src/interrupts.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  2   48[COMRAM] int 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8289 ;;      Params:         2       0       0       0       0
  8290 ;;      Locals:         0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0
  8292 ;;      Totals:         2       0       0       0       0
  8293 ;;Total ram usage:        2 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    1
  8296 ;; This function calls:
  8297 ;;		i2_in_high_int
  8298 ;; This function is called by:
  8299 ;;		_SleepIfOkay
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text51
  8304  001A2E                     __ptext51:
  8305                           	opt stack 0
  8306  001A2E                     i2_in_low_int:
  8307                           	opt stack 17
  8308                           
  8309                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8310                           
  8311                           ;incstack = 0
  8312  001A2E  ACF2               	btfss	intcon,6,c	;volatile
  8313  001A30  D005               	goto	i2l2654
  8314                           
  8315                           ;interrupts.c: 32: return (0);
  8316  001A32  0E00               	movlw	0
  8317  001A34  6E32               	movwf	?i2_in_low_int+1,c
  8318  001A36  0E00               	movlw	0
  8319  001A38  6E31               	movwf	?i2_in_low_int,c
  8320  001A3A  0012               	return	
  8321  001A3C                     i2l2654:
  8322  001A3C  ECF8  F00D         	call	i2_in_high_int	;wreg free
  8323  001A40  5030               	movf	?i2_in_high_int+1,w,c
  8324  001A42  102F               	iorwf	?i2_in_high_int,w,c
  8325  001A44  B4D8               	btfsc	status,2,c
  8326  001A46  D005               	goto	i2l2662
  8327                           
  8328                           ;interrupts.c: 34: return (0);
  8329  001A48  0E00               	movlw	0
  8330  001A4A  6E32               	movwf	?i2_in_low_int+1,c
  8331  001A4C  0E00               	movlw	0
  8332  001A4E  6E31               	movwf	?i2_in_low_int,c
  8333  001A50  0012               	return	
  8334  001A52                     i2l2662:
  8335                           
  8336                           ;interrupts.c: 36: return (1);
  8337  001A52  0E00               	movlw	0
  8338  001A54  6E32               	movwf	?i2_in_low_int+1,c
  8339  001A56  0E01               	movlw	1
  8340  001A58  6E31               	movwf	?i2_in_low_int,c
  8341  001A5A  0012               	return	
  8342  001A5C                     __end_ofi2_in_low_int:
  8343                           	opt stack 0
  8344                           pclatu	equ	0xFFB
  8345                           pclath	equ	0xFFA
  8346                           tblptru	equ	0xFF8
  8347                           tblptrh	equ	0xFF7
  8348                           tblptrl	equ	0xFF6
  8349                           tablat	equ	0xFF5
  8350                           prodh	equ	0xFF4
  8351                           prodl	equ	0xFF3
  8352                           intcon	equ	0xFF2
  8353                           postinc0	equ	0xFEE
  8354                           fsr0h	equ	0xFEA
  8355                           fsr0l	equ	0xFE9
  8356                           wreg	equ	0xFE8
  8357                           indf1	equ	0xFE7
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           bsr	equ	0xFE0
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function i2_in_high_int *****************
  8369 ;; Defined at:
  8370 ;;		line 22 in file "../src/interrupts.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2   46[COMRAM] int 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8384 ;;      Params:         2       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0
  8387 ;;      Totals:         2       0       0       0       0
  8388 ;;Total ram usage:        2 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_SleepIfOkay
  8394 ;;		i2_in_low_int
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text52
  8399  001BF0                     __ptext52:
  8400                           	opt stack 0
  8401  001BF0                     i2_in_high_int:
  8402                           	opt stack 17
  8403                           
  8404                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8405                           
  8406                           ;incstack = 0
  8407  001BF0  0E00               	movlw	0
  8408  001BF2  AEF2               	btfss	intcon,7,c	;volatile
  8409  001BF4  0E01               	movlw	1
  8410  001BF6  6E2F               	movwf	?i2_in_high_int,c
  8411  001BF8  6A30               	clrf	?i2_in_high_int+1,c
  8412  001BFA  0012               	return	
  8413  001BFC                     __end_ofi2_in_high_int:
  8414                           	opt stack 0
  8415                           pclatu	equ	0xFFB
  8416                           pclath	equ	0xFFA
  8417                           tblptru	equ	0xFF8
  8418                           tblptrh	equ	0xFF7
  8419                           tblptrl	equ	0xFF6
  8420                           tablat	equ	0xFF5
  8421                           prodh	equ	0xFF4
  8422                           prodl	equ	0xFF3
  8423                           intcon	equ	0xFF2
  8424                           postinc0	equ	0xFEE
  8425                           fsr0h	equ	0xFEA
  8426                           fsr0l	equ	0xFE9
  8427                           wreg	equ	0xFE8
  8428                           indf1	equ	0xFE7
  8429                           fsr1h	equ	0xFE2
  8430                           fsr1l	equ	0xFE1
  8431                           bsr	equ	0xFE0
  8432                           indf2	equ	0xFDF
  8433                           postinc2	equ	0xFDE
  8434                           postdec2	equ	0xFDD
  8435                           fsr2h	equ	0xFDA
  8436                           fsr2l	equ	0xFD9
  8437                           status	equ	0xFD8
  8438                           
  8439 ;; *************** function i2_check_msg *****************
  8440 ;; Defined at:
  8441 ;;		line 222 in file "../src/messages.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  8444 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      unsigned char 
  8449 ;; Registers used:
  8450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8456 ;;      Params:         2       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0
  8458 ;;      Temps:          1       0       0       0       0
  8459 ;;      Totals:         3       0       0       0       0
  8460 ;;Total ram usage:        3 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_SleepIfOkay
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text53
  8470  001B20                     __ptext53:
  8471                           	opt stack 0
  8472  001B20                     i2_check_msg:
  8473                           	opt stack 18
  8474                           
  8475                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8476                           
  8477                           ;incstack = 0
  8478  001B20  EE20 F035          	lfsr	2,53
  8479  001B24  502F               	movf	i2check_msg@qptr,w,c
  8480  001B26  26D9               	addwf	fsr2l,f,c
  8481  001B28  5030               	movf	i2check_msg@qptr+1,w,c
  8482  001B2A  22DA               	addwfc	fsr2h,f,c
  8483  001B2C  50DF               	movf	indf2,w,c
  8484  001B2E  6E31               	movwf	??i2_check_msg& (0+255),c
  8485  001B30  5031               	movf	??i2_check_msg,w,c
  8486  001B32  0D0D               	mullw	13
  8487  001B34  50F3               	movf	prodl,w,c
  8488  001B36  242F               	addwf	i2check_msg@qptr,w,c
  8489  001B38  6ED9               	movwf	fsr2l,c
  8490  001B3A  50F4               	movf	prodh,w,c
  8491  001B3C  2030               	addwfc	i2check_msg@qptr+1,w,c
  8492  001B3E  6EDA               	movwf	fsr2h,c
  8493  001B40  50DF               	movf	indf2,w,c
  8494  001B42  0012               	return	
  8495  001B44                     __end_ofi2_check_msg:
  8496                           	opt stack 0
  8497                           pclatu	equ	0xFFB
  8498                           pclath	equ	0xFFA
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           postinc0	equ	0xFEE
  8507                           fsr0h	equ	0xFEA
  8508                           fsr0l	equ	0xFE9
  8509                           wreg	equ	0xFE8
  8510                           indf1	equ	0xFE7
  8511                           fsr1h	equ	0xFE2
  8512                           fsr1l	equ	0xFE1
  8513                           bsr	equ	0xFE0
  8514                           indf2	equ	0xFDF
  8515                           postinc2	equ	0xFDE
  8516                           postdec2	equ	0xFDD
  8517                           fsr2h	equ	0xFDA
  8518                           fsr2l	equ	0xFD9
  8519                           status	equ	0xFD8
  8520                           
  8521 ;; *************** function _enter_sleep_mode *****************
  8522 ;; Defined at:
  8523 ;;		line 202 in file "../src/messages.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;		None               void
  8530 ;; Registers used:
  8531 ;;		None
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8537 ;;      Params:         0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0
  8540 ;;      Totals:         0       0       0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_SleepIfOkay
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text54
  8551  001C0E                     __ptext54:
  8552                           	opt stack 0
  8553  001C0E                     _enter_sleep_mode:
  8554                           	opt stack 18
  8555                           
  8556                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8557                           
  8558                           ;incstack = 0
  8559  001C0E  8ED3               	bsf	4051,7,c	;volatile
  8560  001C10  0003               	sleep		;# 
  8561  001C12  0012               	return	
  8562  001C14                     __end_of_enter_sleep_mode:
  8563                           	opt stack 0
  8564  0000                     pclatu	equ	0xFFB
  8565                           pclath	equ	0xFFA
  8566                           tblptru	equ	0xFF8
  8567                           tblptrh	equ	0xFF7
  8568                           tblptrl	equ	0xFF6
  8569                           tablat	equ	0xFF5
  8570                           prodh	equ	0xFF4
  8571                           prodl	equ	0xFF3
  8572                           intcon	equ	0xFF2
  8573                           postinc0	equ	0xFEE
  8574                           fsr0h	equ	0xFEA
  8575                           fsr0l	equ	0xFE9
  8576                           wreg	equ	0xFE8
  8577                           indf1	equ	0xFE7
  8578                           fsr1h	equ	0xFE2
  8579                           fsr1l	equ	0xFE1
  8580                           bsr	equ	0xFE0
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           pclatu	equ	0xFFB
  8588                           pclath	equ	0xFFA
  8589                           tblptru	equ	0xFF8
  8590                           tblptrh	equ	0xFF7
  8591                           tblptrl	equ	0xFF6
  8592                           tablat	equ	0xFF5
  8593                           prodh	equ	0xFF4
  8594                           prodl	equ	0xFF3
  8595                           intcon	equ	0xFF2
  8596                           postinc0	equ	0xFEE
  8597                           fsr0h	equ	0xFEA
  8598                           fsr0l	equ	0xFE9
  8599                           wreg	equ	0xFE8
  8600                           indf1	equ	0xFE7
  8601                           fsr1h	equ	0xFE2
  8602                           fsr1l	equ	0xFE1
  8603                           bsr	equ	0xFE0
  8604                           indf2	equ	0xFDF
  8605                           postinc2	equ	0xFDE
  8606                           postdec2	equ	0xFDD
  8607                           fsr2h	equ	0xFDA
  8608                           fsr2l	equ	0xFD9
  8609                           status	equ	0xFD8
  8610                           
  8611                           	psect	rparam
  8612  0000                     pclatu	equ	0xFFB
  8613                           pclath	equ	0xFFA
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           prodh	equ	0xFF4
  8619                           prodl	equ	0xFF3
  8620                           intcon	equ	0xFF2
  8621                           postinc0	equ	0xFEE
  8622                           fsr0h	equ	0xFEA
  8623                           fsr0l	equ	0xFE9
  8624                           wreg	equ	0xFE8
  8625                           indf1	equ	0xFE7
  8626                           fsr1h	equ	0xFE2
  8627                           fsr1l	equ	0xFE1
  8628                           bsr	equ	0xFE0
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           postdec2	equ	0xFDD
  8632                           fsr2h	equ	0xFDA
  8633                           fsr2l	equ	0xFD9
  8634                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         228
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67      81
    BANK0           128     39      97
    BANK1           256     33     195
    BANK2           256     65      65
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> adc_int_handler@result(BANK0[2]), timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK2[2]), main@ic(BANK2[40]), main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> adc_int_handler@result(BANK0[2]), timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK2[2]), main@ic(BANK2[40]), main@uc(BANK2[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 40
		 -> main@ic(BANK2[40]), 

    Handle_i2c_data_save@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 40
		 -> NULL(NULL[0]), main@ic(BANK2[40]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 40
		 -> adc_int_handler@result(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ic(BANK2[40]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 40
		 -> adc_int_handler@result(BANK0[2]), timer0_int_handler@val(BANK0[2]), timer0_lthread@val(BANK1[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK2[2]), main@ic(BANK2[40]), main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->i2_ToMainLow_sendmsg
    i2_ToMainLow_sendmsg->i2_send_msg
    _i2c_int_handler->i2_ToMainHigh_sendmsg
    _adc_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_uart_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _timer0_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    i2_ToMainLow_sendmsg->i2_send_msg
    i2_ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer0_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _timer0_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0   15359
                                             31 BANK1      2     2      0
                                              0 BANK2     65    65      0
                         _ConvertADC
               _Handle_i2c_data_save
                            _OpenADC
                         _OpenTimer0
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     432
                                             31 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3186
                                             18 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             31 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2449
                                             38 BANK0      1     1      0
                                             15 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      13     5      8    3177
                                             18 BANK1     13     5      8
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2785
                                             38 BANK0      1     1      0
                                             15 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             37 BANK0      1     1      0
                                              4 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                6     4      2     139
                                             31 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             31 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     108
                                             31 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             35 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             31 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             31 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             31 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     331
                                             37 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             35 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             31 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             31 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             31 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2620
                                             16 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2620
                                             16 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2373
                                             37 BANK0      2     2      0
                                              4 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             31 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             31 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     371
                                             31 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Handle_i2c_data_save                                 4     2      2     108
                                             31 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6137
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3020
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3117
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2986
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               15    15      0   11763
                                             16 BANK0     15    15      0
                        _SleepIfOkay
                    _adc_int_handler
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    3513
                                              5 BANK0      3     3      0
                        _WriteTimer0
                i2_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainLow_sendmsg                                 4     1      3    3335
                                             63 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     134
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    4274
                                              5 BANK0     11    11      0
                       _handle_start
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _adc_int_handler                                     4     4      0    3740
                                              5 BANK0      4     4      0
                            _ReadADC
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3659
                                             63 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2963
                                             56 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConvertADC
   _Handle_i2c_data_save
   _OpenADC
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _start_i2c_slave_reply
   _timer0_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _adc_int_handler
     _ReadADC
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _i2c_int_handler
     _handle_start
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _WriteTimer0
     i2_ToMainLow_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     41      41       8       25.4%
BITBANK1           100      0       0      10        0.0%
BANK1              100     21      C3       6       76.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     27      61       5       75.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B6       9        0.0%
DATA                 0      0     1B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb  9 17:30:34 2014

              main@uthread_data 020C                               _i 0080                               _j 0050  
                             _x 004A        _MQ_Main_Willing_to_block 004C           ?i2_ToMainHigh_sendmsg 0040  
                   _SSPSTATbits 000FC7       __end_of_ToMainLow_recvmsg 182C                              bsr 000FE0  
     __end_of_ToMainLow_sendmsg 1AD4                    __CFG_CP0$OFF 000000                             l113 082A  
                           l430 13C6                             l451 1A80                             l452 1A82  
                           l700 1B84            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0136                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00D7                ??_init_uart_recv 00D9                 ReadTimer1@timer 0003  
                          l1012 133C                            l3202 0A3C                            l3210 0B12  
                          l3050 07D8                            l3042 0796                            l3052 0830  
                          l3060 088C                            l3206 0AAE                            l3070 0922  
                          l3054 084C                            l3306 0C02                            l3322 0CC8  
                          l3170 1414                            l3402 1328                            l3066 08CA  
                          l3074 0974                            l3058 0868                            l3164 13E8  
                          l3068 08D0                            l3254 150C                            l3176 1440  
                          l3272 0D28                            l3192 1488                            l2810 1796  
                          l2802 1774                            l3292 1664                            l3286 1640  
                          l3198 09B0                            l2824 17DA                            l3394 12DA  
                          l3396 12EC                            l3398 12F4                            _LATB 000F8A  
                          u2467 1B86                            i1l52 0070                 _FromMainHigh_MQ 0100  
                          _Send 0044                   __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001  
                          _main 06F8                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          _swit 0048                     main@msgtype 0218                      i1_send_msg 1038  
                          pclat 000FFA                     i2_check_msg 1B20                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 002F                            start 00B6  
                 __CFG_FOSC2$ON 000000                ?_adc_int_handler 0001                      i2_send_msg 0DD0  
     ToMainHigh_recvmsg@msgtype 01B2     __end_ofi2_ToMainLow_sendmsg 1AFA                 __end_of_ReadADC 1C06  
                send_msg@length 01A8                 __end_of_OpenADC 13CA     __size_of_timer0_int_handler 0030  
                   _Delay1KTCYx 1B80                           ?_main 0001                           _T0CON 000FD5  
               __end_of___lwmod 1346                      i1memcpy@d1 0001                           i2l301 0356  
                         i2l315 052E                           i2l309 048E                           i1l485 1B70  
                         i2l271 0FEC                           i2l281 051C                           i2l283 0182  
                         i2l287 01C6                      i1memcpy@s1 0003                           _RCREG 000FAE  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _TRISB 000F93               timer0_lthread@val 01BF  
                    i2memcpy@d1 002F                      i2memcpy@s1 0031                    ?_init_queues 0001  
     __size_of_enter_sleep_mode 0006                 __end_of_in_main 17EA      ToMainLow_recvmsg@maxlength 01B6  
       timer0_lthread@msgbuffer 01BA                      _ConvertADC 1C14         i2c_configure_slave@addr 00D7  
                         tablat 000FF5                           status 000FD8        i2ToMainHigh_sendmsg@data 0041  
              __end_ofi1_memcpy 18AE                __end_ofi2_memcpy 18EE                 __initialization 171A  
        ??i2_ToMainHigh_sendmsg 0043                    __end_of_main 0994                      _ReadTimer1 1BCC  
   __size_of_timer1_int_handler 0030      __size_of_ToMainLow_recvmsg 0042      __size_of_ToMainLow_sendmsg 0026  
         __size_ofi2_in_low_int 002E   __size_of_FromMainHigh_sendmsg 0036   __size_of_Handle_i2c_data_save 0098  
                        ??_main 01C1                 send_msg@msgtype 01A9                   __activetblptr 000002  
               send_msg@tlength 01AC            __end_of_handle_start 1038                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                          _ADRESH 000FC4  
                        _ADRESL 000FC3         ??_uart_recv_int_handler 001B                          i1l3440 1880  
                        i1l3504 1204                          i1l3516 0066                          i1l3446 189C  
                        i1l3470 1070                          i2l2226 16D2                      _OpenTimer0 1A5C  
                __CFG_WDTEN$OFF 000000                          i2l3450 18C0                          i2l3418 0E1C  
                        i2l3364 1008                          i2l2900 0266                          i2l2662 1A52  
                        i2l2654 1A3C                          i2l3366 1020                          i2l3456 18DC  
                        i2l2840 1126                          i2l2930 03CA                          i2l2906 027E  
                        i2l2834 111C                          i2l2932 040C                          i2l2908 02BE  
                        i2l2870 0178                          i2l2936 041E                          i2l2864 0160  
                        i2l2848 114A                          i2l2970 0592                          i2l2890 022A  
                        i2l2964 0532                          i2l2958 04F0                          i2l2888 01FE  
                        i2l2986 06BE                          i2l2978 0624     __end_of_i2c_configure_slave 1AAE  
                 ??_SleepIfOkay 0033              __size_of_ReadUSART 001E                          _OSCCON 000FD3  
     i2ToMainLow_sendmsg@length 0043                          _SSPADD 000FC8                          _SSPBUF 000FC9  
__size_of_start_i2c_slave_reply 0202                     ?i1_send_msg 000B                       ??_ReadADC 0031  
 __end_of_start_i2c_slave_reply 0B96              timer0_lthread@tptr 01B4                       ??_OpenADC 00D9  
                  i2_in_low_int 1A2E                     ?i2_send_msg 0039                  __CFG_XINST$OFF 000000  
               _i2c_int_handler 00BA                OpenTimer0@config 00D7                          _ic_ptr 00DF  
                     ??___lwmod 00DB                   main@msgbuffer 0201                __end_of_init_i2c 0F70  
                        _length 0046                          _memcpy 161E                          clear_0 1720  
                        clear_1 172C                          clear_2 1738                          _uc_ptr 004E  
                        main@ic 0219                          main@uc 0212                __end_of_recv_msg 0CCC  
   start_i2c_slave_reply@length 00DC                       ??_in_main 00DD                __end_of_send_msg 0DD0  
                  __pdataCOMRAM 0050           timer0_int_handler@val 00BE         i2c_int_handler@i2c_data 00C4  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 00DA        ToMainLow_recvmsg@msgtype 01B2            __size_of_in_high_int 0012  
                   ?_ConvertADC 0001                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 1756      __end_of_ToMainHigh_recvmsg 186E      __end_of_ToMainHigh_sendmsg 1998  
   __end_of_init_timer1_lthread 1BA8             __end_of_SleepIfOkay 171A                  __pcstackCOMRAM 0001  
        __size_ofi2_in_high_int 000C                     ?_ReadTimer1 0001              __size_of_check_msg 0036  
             __end_of_ReadUSART 1B80             __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 1180     __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 002F  
                 _ToMainHigh_MQ 016C                _enter_sleep_mode 1C0E             __size_ofi2_send_msg 00D2  
          timer1_lthread@length 01B8                   ReadUSART@data 0001                   check_msg@qptr 00D7  
          timer1_lthread@retval 01BD         ??_block_on_To_msgqueues 00DD            __size_of_init_queues 006E  
                    __pbssBANK0 0080                      __pbssBANK1 0100                     ?_OpenTimer0 0001  
                    __pnvCOMRAM 004E         __end_of_i2c_int_handler 06F8                    ?i2_check_msg 002F  
            timer1_lthread@tptr 01B4               recv_msg@maxlength 01A8                 recv_msg@msgtype 01A9  
               recv_msg@tlength 01AE           __size_of_handle_start 00C8                    ?_Delay1KTCYx 0001  
              WriteTimer0@timer 0031                         ?_memcpy 00D7                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0031                   ??_WriteTimer1 0003             __size_of_ConvertADC 0004  
       __size_of_timer0_lthread 007C         __size_of_timer1_lthread 0072                      ??i1_memcpy 0007  
                    ??i2_memcpy 0035                i1send_msg@length 000D                   i2_in_high_int 1BF0  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
    i2ToMainLow_sendmsg@msgtype 0040             __size_of_ReadTimer1 0012               __end_of_check_msg 19CE  
                     ?_init_i2c 00D7                     _SleepIfOkay 16CC                         _ReadADC 1BFC  
                     ?_recv_msg 01A6                         _OpenADC 1346                      _in_low_int 1760  
                  _handle_start 0F70                         __Hparam 0000                       ?_send_msg 01A6  
                       __Lparam 0000      __end_of_timer0_int_handler 1A2E                init_uart_recv@uc 00D7  
                       ___lwmod 12BC         Handle_i2c_data_save@msg 00D7                 __CFG_STVREN$OFF 000000  
                       __pcinit 171A                 __size_of_memcpy 005E        __size_of_adc_int_handler 0050  
                    _init_queue 14C4                         __ramtop 0400             __size_of_OpenTimer0 002A  
                       __ptext0 06F8                         __ptext1 18EE                         __ptext2 153E  
                       __ptext3 12BC                         __ptext4 192C                         __ptext5 1448  
                       __ptext6 1962                         __ptext7 0CCC                         __ptext8 0994  
                       __ptext9 1B44    __size_ofi2_ToMainLow_sendmsg 0026                       _T0CONbits 000FD5  
                       _in_main 17A6             __end_of_WriteTimer0 1BF0             __end_of_WriteTimer1 1BCC  
                ?i2_in_high_int 002F                  OpenADC@config2 00D7                  __pintcode_body 10E2  
          end_of_initialization 1756         timer1_lthread@msgbuffer 01BA    __end_of_FromMainHigh_sendmsg 1962  
  __end_of_Handle_i2c_data_save 12BC  __size_of_uart_recv_int_handler 009C      FromMainHigh_sendmsg@length 00DE  
                       memcpy@d 01A2                         memcpy@n 00DB                         memcpy@s 01A4  
 __end_of_uart_recv_int_handler 1224                      ??_init_i2c 00D9     i2c_int_handler@data_written 00C2  
                 __Lmediumconst 0000                         int_func 10E2                    ??i1_send_msg 0011  
                 ?_uart_lthread 00D7         __size_of_init_uart_recv 001E                ?_i2c_int_handler 0001  
                    ??_recv_msg 00DD                    ??i2_send_msg 003F                      ??_send_msg 00DD  
    __end_of_timer1_int_handler 19FE                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 01B1  
    Handle_i2c_data_save@length 0001   __size_ofi2_ToMainHigh_sendmsg 0026              __end_ofi1_send_msg 10E2  
   FromMainHigh_sendmsg@msgtype 01B1                       _TRISCbits 000F94              __end_ofi2_send_msg 0EA2  
                  ??_ConvertADC 00D7        timer1_int_handler@result 001C                  ??_uart_lthread 00DF  
                    main@length 0217                     ?_in_low_int 00D9           timer0_lthread@msgtype 01B6  
         _start_i2c_slave_reply 0994    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 1C14                    ??_ReadTimer1 0003              _ToMainHigh_recvmsg 182C  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 1962                       i1memcpy@n 0005  
                     i1memcpy@s 0009                   __pidataCOMRAM 1C18                  _timer0_lthread 1448  
                   ?_init_queue 00D7                       i2memcpy@d 0035                     _WriteTimer0 1BDE  
                   _WriteTimer1 1BBA                       i2memcpy@n 0033                       i2memcpy@s 0037  
            __end_of_ConvertADC 1C18                  _timer1_lthread 153E                  __end_of_memcpy 167C  
             _enable_interrupts 1C06            __size_of_Delay1KTCYx 0016             ?_ToMainHigh_recvmsg 01B2  
               ??i2_in_high_int 0031        i2c_int_handler@data_read 00C7             ?_ToMainHigh_sendmsg 01B1  
            ?_enable_interrupts 0001             start_initialization 171A                   ??_in_high_int 00D9  
                     _ReadUSART 1B62               ??_adc_int_handler 00BD               __size_ofi1_memcpy 0040  
             __size_ofi2_memcpy 0040             ??_enable_interrupts 00D7                    ??_OpenTimer0 00D7  
__size_of_block_on_To_msgqueues 007E              __end_of_ReadTimer1 1BDE   __end_of_block_on_To_msgqueues 1448  
  __end_of_InterruptHandlerHigh 1188                      init_i2c@ic 00D7            ??_ToMainHigh_recvmsg 00DF  
          ??_ToMainHigh_sendmsg 00DE          __end_of_timer0_lthread 14C4        i2c_int_handler@error_buf 00BF  
        __end_of_timer1_lthread 15B0       __end_of_enable_interrupts 1C0E                        ??_memcpy 00DD  
         timer1_lthread@msgtype 01B6            _FromMainHigh_sendmsg 192C            _Handle_i2c_data_save 1224  
  __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 1A86        i2c_int_handler@msg_ready 00C6  
                   __pbssCOMRAM 0044                      ?_ReadUSART 0001                   ??_init_queues 00DB  
                 __pcstackBANK0 00B8                   __pcstackBANK1 01A2                   __pcstackBANK2 0200  
           __size_of_in_low_int 0046        start_i2c_slave_reply@msg 00D7             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00D7        ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E  
           __end_of_in_high_int 1BBA                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01B4  
                  _ToMainLow_MQ 0082             __size_of_init_queue 007A             i2_ToMainLow_sendmsg 1AD4  
                _init_uart_recv 1B44                        ?_ReadADC 002F                       _check_msg 1998  
                     __pnvBANK0 00DF          ?_start_i2c_slave_reply 00D7               __size_of_init_i2c 00CE  
             OpenADC@portconfig 00D8                        ?_OpenADC 00D7                    recv_msg@data 01AB  
                  recv_msg@qmsg 01B0                    recv_msg@slot 01AD                    recv_msg@qptr 01A6  
    i2ToMainHigh_sendmsg@length 0043               __size_of_recv_msg 0136                       __pintcode 0008  
             __size_of_send_msg 0104                 ?_timer0_lthread 01B4                        ?___lwmod 00D7  
               ?_timer1_lthread 01B4           ?_FromMainHigh_sendmsg 01B1           ?_Handle_i2c_data_save 00D7  
                   __pintcodelo 0018          ToMainHigh_recvmsg@data 01B4            ?i2_ToMainLow_sendmsg 0040  
          __end_of_uart_lthread 192C      i2c_int_handler@msg_to_send 00C5                        ?_in_main 00DB  
             WriteTimer0@timer0 002F              _timer0_int_handler 19FE               WriteTimer1@timer1 0001  
           uart_lthread@msgtype 00D9           ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001  
              uart_lthread@uptr 00D7          __end_of_init_uart_recv 1B62             __end_of_init_queues 161E  
                 OpenADC@config 00DB                        _LATBbits 000F8A                 i2check_msg@qptr 002F  
                    ?_check_msg 00D7                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                 ?i2_in_low_int 0031                        _PIR1bits 000F9E                        i2u178_40 1132  
                      i2u178_46 1134          ToMainHigh_sendmsg@data 01B2                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 00BD      __size_of_enable_interrupts 0008  
             i1send_msg@msgtype 000E               i1send_msg@tlength 0012           ??i2_ToMainLow_sendmsg 0043  
                    _ADCON0bits 000FC2            timer0_lthread@length 01B8              _timer1_int_handler 19CE  
                      i1_memcpy 186E            _InterruptHandlerHigh 0008                     ??_ReadUSART 0001  
                      i2_memcpy 18AE            timer0_lthread@msgval 01BD                     _in_high_int 1BA8  
                  send_msg@data 01AA             _i2c_configure_slave 1A86                    send_msg@qmsg 01AF  
                  send_msg@slot 01AE                    send_msg@qptr 01A6    __end_ofi2_ToMainHigh_sendmsg 1B20  
         uart_lthread@msgbuffer 00DD             ?_timer1_int_handler 0001                 ?_init_uart_recv 00D7  
                ??i2_in_low_int 0033           _uart_recv_int_handler 1188                    ??_in_low_int 00DB  
              __size_of_ReadADC 000A                        __Hrparam 0000                __size_of_OpenADC 0084  
          ?_i2c_configure_slave 0001                        __Lrparam 0000               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_sendmsg 00DE          ??_Handle_i2c_data_save 00D9            ??_timer1_int_handler 001B  
               _adc_int_handler 167C        __size_of_i2c_int_handler 063E              ??_enter_sleep_mode 002F  
              __size_of___lwmod 008A                    ??_init_queue 00D9                    ?_WriteTimer0 002F  
                  ?_WriteTimer1 0001        FromMainHigh_sendmsg@data 01B2         ToMainLow_sendmsg@length 001A  
             main@t0thread_data 020E           ?_InterruptHandlerHigh 0001                __size_of_in_main 0044  
             i2send_msg@msgtype 003C     ToMainHigh_recvmsg@maxlength 01B6               i2send_msg@tlength 00B8  
       init_timer1_lthread@tptr 00D7                     _init_queues 15B0              __end_of_in_low_int 17A6  
                      __ptext10 1B96                        __ptext11 15B0                        __ptext20 1998  
                      __ptext12 14C4                        __ptext21 1B80                        __ptext13 0EA2  
                      __ptext22 17EA                        __ptext14 1A86                        __ptext31 1188  
                      __ptext23 182C                        __ptext15 1C06                        __ptext40 19FE  
                      __ptext32 1B62                        __ptext24 0B96                        __ptext16 13CA  
                      __ptext41 1AD4                        __ptext33 19CE                        __ptext25 161E  
                      __ptext17 17A6                        __ptext50 16CC                        __ptext42 1BDE  
                      __ptext34 1BBA                        __ptext26 1A5C                        __ptext18 1760  
                      __ptext51 1A2E                        __ptext43 00BA                        __ptext35 1AAE  
                      __ptext27 1346                        __ptext19 1BA8                        __ptext52 1BF0  
                      __ptext44 0F70                        __ptext36 1038                        __ptext28 1224  
                      __ptext53 1B20                        __ptext45 167C                        __ptext37 186E  
                      __ptext29 1C14                        __ptext54 1C0E                        __ptext46 1AFA  
                      __ptext38 1BCC                        __ptext47 0DD0                        __ptext48 18AE  
                      __ptext49 1BFC                  i1send_msg@data 000F                  i1send_msg@qmsg 0015  
                i1send_msg@slot 0014                  i1send_msg@qptr 000B              uart_lthread@length 00DB  
                      _init_i2c 0EA2             _init_timer1_lthread 1B96                   __size_of_main 029C  
                 ??i2_check_msg 0031               main@t1thread_data 0210                     ??_check_msg 00D9  
            __end_of_init_queue 153E            __size_of_SleepIfOkay 004E                        _recv_msg 0B96  
         ??_i2c_configure_slave 00D7                        _send_msg 0CCC                  init_queue@qptr 00D7  
         __size_of_uart_lthread 003E                   ??_Delay1KTCYx 00D7             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00D7                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
       i2ToMainLow_sendmsg@data 0041                        memcpy@d1 00D7                        memcpy@s1 00D9  
         __end_ofi2_in_high_int 1BFC    i2c_int_handler@overrun_error 00C3                i2send_msg@length 003B  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
       ??_start_i2c_slave_reply 00D9                ___lwmod@dividend 00D7          ?_uart_recv_int_handler 0001  
                  _uart_lthread 18EE           _block_on_To_msgqueues 13CA                   ?_handle_start 0001  
              ??_timer0_lthread 01BC     __size_of_ToMainHigh_recvmsg 0042         __end_of_adc_int_handler 16CC  
   __size_of_ToMainHigh_sendmsg 0036                      _OSCCONbits 000FD3           adc_int_handler@result 00BF  
              ??_timer1_lthread 01BC     i2ToMainHigh_sendmsg@msgtype 0040        ToMainHigh_sendmsg@length 00DE  
           __end_ofi2_check_msg 1B44            i2_ToMainHigh_sendmsg 1AFA           ??_init_timer1_lthread 00D9  
        ??_InterruptHandlerHigh 00C8               _ToMainLow_recvmsg 17EA               _ToMainLow_sendmsg 1AAE  
            main@last_reg_recvd 0200                 ___lwmod@divisor 00D9            __end_ofi2_in_low_int 1A5C  
            ?_ToMainLow_recvmsg 01B2             __end_of_Delay1KTCYx 1B96               ??_i2c_int_handler 00BD  
               ___lwmod@counter 00DC              ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                  i2send_msg@data 003D           ??_InterruptHandlerLow 001E  
           ??_ToMainLow_recvmsg 00DF                  i2send_msg@qmsg 00BB                  i2send_msg@slot 00BA  
                i2send_msg@qptr 0039             ??_ToMainLow_sendmsg 001A                  ??_handle_start 002F  
                  _USART_Status 004D  
