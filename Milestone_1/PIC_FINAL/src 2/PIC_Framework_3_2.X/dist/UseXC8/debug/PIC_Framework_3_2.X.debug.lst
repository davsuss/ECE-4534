

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 10 23:10:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  00143A                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _j
    69  00143A  0064               	dw	100
    70  0000                     _ADCON0	set	4034
    71  0000                     _ADCON0bits	set	4034
    72  0000                     _ADCON1	set	4033
    73  0000                     _ADCON2	set	4032
    74  0000                     _ADRESH	set	4036
    75  0000                     _ADRESL	set	4035
    76  0000                     _INTCONbits	set	4082
    77  0000                     _IPR1bits	set	3999
    78  0000                     _LATB	set	3978
    79  0000                     _LATBbits	set	3978
    80  0000                     _OSCCON	set	4051
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _OSCTUNEbits	set	3995
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _RCONbits	set	4048
    86  0000                     _RCREG	set	4014
    87  0000                     _RCSTAbits	set	4011
    88  0000                     _SSPADD	set	4040
    89  0000                     _SSPBUF	set	4041
    90  0000                     _SSPCON1	set	4038
    91  0000                     _SSPCON1bits	set	4038
    92  0000                     _SSPCON2	set	4037
    93  0000                     _SSPCON2bits	set	4037
    94  0000                     _SSPSTAT	set	4039
    95  0000                     _SSPSTATbits	set	4039
    96  0000                     _T0CON	set	4053
    97  0000                     _T0CONbits	set	4053
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TMR1H	set	4047
   101  0000                     _TMR1L	set	4046
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISCbits	set	3988
   104                           
   105                           	psect	nvCOMRAM
   106  00004C                     __pnvCOMRAM:
   107                           	opt stack 0
   108  00004C                     _ic_ptr:
   109                           	opt stack 0
   110  00004C                     	ds	2
   111  00004E                     _uc_ptr:
   112                           	opt stack 0
   113  00004E                     	ds	2
   114                           
   115                           ; #config settings
   116  0000                     
   117                           	psect	cinit
   118  001042                     __pcinit:
   119                           	opt stack 0
   120  001042                     start_initialization:
   121                           	opt stack 0
   122  001042                     __initialization:
   123                           	opt stack 0
   124                           
   125                           ; Clear objects allocated to BANK1 (162 bytes)
   126  001042  EE01  F000         	lfsr	0,__pbssBANK1
   127  001046  0EA2               	movlw	162
   128  001048                     clear_0:
   129  001048  6AEE               	clrf	postinc0,c
   130  00104A  06E8               	decf	wreg,f,c
   131  00104C  E1FD               	bnz	clear_0
   132                           
   133                           ; Clear objects allocated to BANK0 (54 bytes)
   134  00104E  EE00  F080         	lfsr	0,__pbssBANK0
   135  001052  0E36               	movlw	54
   136  001054                     clear_1:
   137  001054  6AEE               	clrf	postinc0,c
   138  001056  06E8               	decf	wreg,f,c
   139  001058  E1FD               	bnz	clear_1
   140                           
   141                           ; Clear objects allocated to COMRAM (12 bytes)
   142  00105A  EE00  F040         	lfsr	0,__pbssCOMRAM
   143  00105E  0E0C               	movlw	12
   144  001060                     clear_2:
   145  001060  6AEE               	clrf	postinc0,c
   146  001062  06E8               	decf	wreg,f,c
   147  001064  E1FD               	bnz	clear_2
   148                           
   149                           ; Initialize objects allocated to COMRAM (2 bytes)
   150                           ; load TBLPTR registers with __pidataCOMRAM
   151  001066  0E3A               	movlw	low __pidataCOMRAM
   152  001068  6EF6               	movwf	tblptrl,c
   153  00106A  0E14               	movlw	high __pidataCOMRAM
   154  00106C  6EF7               	movwf	tblptrh,c
   155  00106E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   156  001070  6EF8               	movwf	tblptru,c
   157  001072  0009               	tblrd		*+	;fetch initializer
   158  001074  CFF5 F050          	movff	tablat,__pdataCOMRAM
   159  001078  0009               	tblrd		*+	;fetch initializer
   160  00107A  CFF5 F051          	movff	tablat,__pdataCOMRAM+1
   161  00107E                     end_of_initialization:
   162                           	opt stack 0
   163  00107E                     __end_of__initialization:
   164                           	opt stack 0
   165  00107E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  001080  6EF8               	movwf	tblptru,c
   167  001082  0100               	movlb	0
   168  001084  EF2F  F004         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000040                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000040                     _Send:
   180                           	opt stack 0
   181  000040                     	ds	2
   182  000042                     _i:
   183                           	opt stack 0
   184  000042                     	ds	2
   185  000044                     _length:
   186                           	opt stack 0
   187  000044                     	ds	2
   188  000046                     _swit:
   189                           	opt stack 0
   190  000046                     	ds	2
   191  000048                     _x:
   192                           	opt stack 0
   193  000048                     	ds	2
   194  00004A                     _MQ_Main_Willing_to_block:
   195                           	opt stack 0
   196  00004A                     	ds	1
   197  00004B                     _USART_Status:
   198                           	opt stack 0
   199  00004B                     	ds	1
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	dataCOMRAM
   208  000050                     __pdataCOMRAM:
   209                           	opt stack 0
   210  000050                     _j:
   211                           	opt stack 0
   212  000050                     	ds	2
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	bssBANK0
   221  000080                     __pbssBANK0:
   222                           	opt stack 0
   223  000080                     _ToMainLow_MQ:
   224                           	opt stack 0
   225  000080                     	ds	54
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssBANK1
   234  000100                     __pbssBANK1:
   235                           	opt stack 0
   236  000100                     _FromMainHigh_MQ:
   237                           	opt stack 0
   238  000100                     	ds	54
   239  000136                     _FromMainLow_MQ:
   240                           	opt stack 0
   241  000136                     	ds	54
   242  00016C                     _ToMainHigh_MQ:
   243                           	opt stack 0
   244  00016C                     	ds	54
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	cstackBANK1
   253  0001A2                     __pcstackBANK1:
   254                           	opt stack 0
   255  0001A2                     ??_init_queues:
   256  0001A2                     ?_in_main:
   257                           	opt stack 0
   258  0001A2                     OpenADC@config:
   259                           	opt stack 0
   260  0001A2                     memcpy@d1:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  0001A2                     	ds	2
   265  0001A4                     ??_block_on_To_msgqueues:
   266  0001A4                     memcpy@s1:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x2
   270  0001A4                     	ds	2
   271  0001A6                     memcpy@n:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x4
   275  0001A6                     	ds	2
   276  0001A8                     recv_msg@qptr:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x6
   280  0001A8                     	ds	2
   281  0001AA                     recv_msg@maxlength:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x8
   285  0001AA                     	ds	1
   286  0001AB                     recv_msg@msgtype:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x9
   290  0001AB                     	ds	2
   291  0001AD                     recv_msg@data:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0xB
   295  0001AD                     	ds	2
   296  0001AF                     ??_recv_msg:
   297                           
   298                           ; 0 bytes @ 0xD
   299  0001AF                     	ds	2
   300  0001B1                     recv_msg@slot:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0xF
   304  0001B1                     	ds	1
   305  0001B2                     recv_msg@tlength:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x10
   309  0001B2                     	ds	2
   310  0001B4                     recv_msg@qmsg:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x12
   314  0001B4                     	ds	2
   315  0001B6                     ToMainHigh_recvmsg@msgtype:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x14
   319  0001B6                     	ds	2
   320  0001B8                     ToMainHigh_recvmsg@data:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x16
   324  0001B8                     	ds	2
   325  0001BA                     ToMainHigh_recvmsg@maxlength:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x18
   329  0001BA                     	ds	1
   330  0001BB                     ??_main:
   331                           
   332                           ; 0 bytes @ 0x19
   333  0001BB                     	ds	2
   334  0001BD                     main@msgbuffer:
   335                           	opt stack 0
   336                           
   337                           ; 11 bytes @ 0x1B
   338  0001BD                     	ds	11
   339  0001C8                     main@last_reg_recvd:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x26
   343  0001C8                     	ds	1
   344  0001C9                     main@length:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x27
   348  0001C9                     	ds	1
   349  0001CA                     main@msgtype:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x28
   353  0001CA                     	ds	1
   354  0001CB                     main@uc:
   355                           	opt stack 0
   356                           
   357                           ; 5 bytes @ 0x29
   358  0001CB                     	ds	5
   359  0001D0                     main@ic:
   360                           	opt stack 0
   361                           
   362                           ; 40 bytes @ 0x2E
   363  0001D0                     	ds	40
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           
   371                           	psect	cstackBANK0
   372  0000B6                     __pcstackBANK0:
   373                           	opt stack 0
   374  0000B6                     i2send_msg@tlength:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x0
   378  0000B6                     	ds	2
   379  0000B8                     i2send_msg@slot:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383  0000B8                     	ds	1
   384  0000B9                     i2send_msg@qmsg:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x3
   388  0000B9                     	ds	2
   389  0000BB                     ToMainHigh_sendmsg@msgtype:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x5
   393  0000BB                     	ds	1
   394  0000BC                     ToMainHigh_sendmsg@data:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x6
   398  0000BC                     	ds	2
   399  0000BE                     ToMainHigh_sendmsg@length:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x8
   403  0000BE                     	ds	1
   404  0000BF                     ??_i2c_int_handler:
   405                           
   406                           ; 0 bytes @ 0x9
   407  0000BF                     	ds	2
   408  0000C1                     i2c_int_handler@error_buf:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0xB
   412  0000C1                     	ds	3
   413  0000C4                     i2c_int_handler@data_written:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0xE
   417  0000C4                     	ds	1
   418  0000C5                     i2c_int_handler@overrun_error:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xF
   422  0000C5                     	ds	1
   423  0000C6                     i2c_int_handler@i2c_data:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x10
   427  0000C6                     	ds	1
   428  0000C7                     i2c_int_handler@msg_to_send:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x11
   432  0000C7                     	ds	1
   433  0000C8                     i2c_int_handler@msg_ready:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x12
   437  0000C8                     	ds	1
   438  0000C9                     i2c_int_handler@data_read:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x13
   442  0000C9                     	ds	1
   443  0000CA                     ??_InterruptHandlerHigh:
   444                           
   445                           ; 0 bytes @ 0x14
   446  0000CA                     	ds	15
   447  0000D9                     ?_in_high_int:
   448                           	opt stack 0
   449  0000D9                     i2c_configure_slave@addr:
   450                           	opt stack 0
   451  0000D9                     OpenADC@config2:
   452                           	opt stack 0
   453  0000D9                     OpenTimer0@config:
   454                           	opt stack 0
   455  0000D9                     Delay1KTCYx@unit:
   456                           	opt stack 0
   457  0000D9                     init_queue@qptr:
   458                           	opt stack 0
   459  0000D9                     check_msg@qptr:
   460                           	opt stack 0
   461  0000D9                     init_i2c@ic:
   462                           	opt stack 0
   463  0000D9                     init_uart_recv@uc:
   464                           	opt stack 0
   465  0000D9                     memcpy@d:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x23
   469  0000D9                     	ds	1
   470  0000DA                     OpenADC@portconfig:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x24
   474  0000DA                     	ds	1
   475  0000DB                     ??_OpenADC:
   476  0000DB                     ??_init_queue:
   477  0000DB                     ??_check_msg:
   478  0000DB                     ?_in_low_int:
   479                           	opt stack 0
   480  0000DB                     memcpy@s:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x25
   484  0000DB                     	ds	1
   485  0000DC                     init_queue@i:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x26
   489  0000DC                     	ds	1
   490  0000DD                     tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           ; 0 bytes @ 0x27
   498                           
   499                           	psect	cstackCOMRAM
   500  000001                     __pcstackCOMRAM:
   501                           	opt stack 0
   502  000001                     ?_ReadTimer1:
   503                           	opt stack 0
   504  000001                     ReadUSART@data:
   505                           	opt stack 0
   506  000001                     WriteTimer1@timer1:
   507                           	opt stack 0
   508  000001                     i1memcpy@d1:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x0
   512  000001                     	ds	2
   513  000003                     ReadTimer1@timer:
   514                           	opt stack 0
   515  000003                     WriteTimer1@timer:
   516                           	opt stack 0
   517  000003                     i1memcpy@s1:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  000003                     	ds	2
   522  000005                     i1memcpy@n:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x4
   526  000005                     	ds	2
   527  000007                     i1memcpy@d:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x6
   531  000007                     	ds	2
   532  000009                     i1memcpy@s:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x8
   536  000009                     	ds	2
   537  00000B                     send_msg@qptr:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0xA
   541  00000B                     	ds	2
   542  00000D                     send_msg@length:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0xC
   546  00000D                     	ds	1
   547  00000E                     send_msg@msgtype:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0xD
   551  00000E                     	ds	1
   552  00000F                     send_msg@data:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556  00000F                     	ds	2
   557  000011                     ??_send_msg:
   558                           
   559                           ; 0 bytes @ 0x10
   560  000011                     	ds	1
   561  000012                     send_msg@tlength:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x11
   565  000012                     	ds	2
   566  000014                     send_msg@slot:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x13
   570  000014                     	ds	1
   571  000015                     send_msg@qmsg:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x14
   575  000015                     	ds	2
   576  000017                     ToMainLow_sendmsg@msgtype:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x16
   580  000017                     	ds	1
   581  000018                     ToMainLow_sendmsg@data:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x17
   585  000018                     	ds	2
   586  00001A                     ToMainLow_sendmsg@length:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x19
   590  00001A                     	ds	1
   591  00001B                     ??_timer1_int_handler:
   592  00001B                     ??_uart_recv_int_handler:
   593                           
   594                           ; 0 bytes @ 0x1A
   595  00001B                     	ds	1
   596  00001C                     timer1_int_handler@result:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x1B
   600  00001C                     	ds	2
   601  00001E                     ??_InterruptHandlerLow:
   602                           
   603                           ; 0 bytes @ 0x1D
   604  00001E                     	ds	17
   605  00002F                     ?_ReadADC:
   606                           	opt stack 0
   607  00002F                     ?i2_in_high_int:
   608                           	opt stack 0
   609  00002F                     handle_start@data_read:
   610                           	opt stack 0
   611  00002F                     Handle_i2c_data_save@msg:
   612                           	opt stack 0
   613  00002F                     start_i2c_slave_reply@msg:
   614                           	opt stack 0
   615  00002F                     WriteTimer0@timer0:
   616                           	opt stack 0
   617  00002F                     i2check_msg@qptr:
   618                           	opt stack 0
   619  00002F                     i2memcpy@d1:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2E
   623  00002F                     	ds	2
   624  000031                     ??_Handle_i2c_data_save:
   625  000031                     ??_start_i2c_slave_reply:
   626  000031                     ??i2_check_msg:
   627  000031                     ?i2_in_low_int:
   628                           	opt stack 0
   629  000031                     WriteTimer0@timer:
   630                           	opt stack 0
   631  000031                     i2memcpy@s1:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x30
   635  000031                     	ds	1
   636  000032                     ??_adc_int_handler:
   637                           
   638                           ; 0 bytes @ 0x31
   639  000032                     	ds	1
   640  000033                     i2memcpy@n:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x32
   644  000033                     	ds	1
   645  000034                     start_i2c_slave_reply@length:
   646                           	opt stack 0
   647  000034                     adc_int_handler@result:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x33
   651  000034                     	ds	1
   652  000035                     i2memcpy@d:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x34
   656  000035                     	ds	2
   657  000037                     i2memcpy@s:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x36
   661  000037                     	ds	2
   662  000039                     i2send_msg@qptr:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x38
   666  000039                     	ds	2
   667  00003B                     i2send_msg@length:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x3A
   671  00003B                     	ds	1
   672  00003C                     i2send_msg@msgtype:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x3B
   676  00003C                     	ds	1
   677  00003D                     i2send_msg@data:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x3C
   681  00003D                     	ds	2
   682  00003F                     ??i2_send_msg:
   683                           
   684                           ; 0 bytes @ 0x3E
   685  00003F                     	ds	1
   686  000040                     tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           
   693                           ; 0 bytes @ 0x3F
   694 ;;
   695 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   696 ;;
   697 ;; *************** function _main *****************
   698 ;; Defined at:
   699 ;;		line 187 in file "../src/main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  ic             40   46[BANK1 ] struct __i2c_comm
   704 ;;  msgbuffer      11   27[BANK1 ] unsigned char [11]
   705 ;;  uc              5   41[BANK1 ] struct __uart_comm
   706 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   707 ;;  uthread_data    2    0        struct __uart_thread_str
   708 ;;  msgtype         1   40[BANK1 ] unsigned char 
   709 ;;  length          1   39[BANK1 ] char 
   710 ;;  last_reg_rec    1   38[BANK1 ] unsigned char 
   711 ;;  i               1    0        unsigned char 
   712 ;;  c               1    0        unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         0       0      59       0       0
   724 ;;      Temps:          0       0       2       0       0
   725 ;;      Totals:         0       0      61       0       0
   726 ;;Total ram usage:       61 bytes
   727 ;; Hardware stack levels required when called:   14
   728 ;; This function calls:
   729 ;;		_OpenADC
   730 ;;		_OpenTimer0
   731 ;;		_ToMainHigh_recvmsg
   732 ;;		_block_on_To_msgqueues
   733 ;;		_enable_interrupts
   734 ;;		_i2c_configure_slave
   735 ;;		_init_i2c
   736 ;;		_init_queues
   737 ;;		_init_uart_recv
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text0
   744  00085E                     __ptext0:
   745                           	opt stack 0
   746  00085E                     _main:
   747                           	opt stack 16
   748                           
   749                           ;main.c: 188: char c;
   750                           ;main.c: 189: signed char length;
   751                           ;main.c: 190: unsigned char msgtype;
   752                           ;main.c: 191: unsigned char last_reg_recvd;
   753                           ;main.c: 192: uart_comm uc;
   754                           ;main.c: 193: i2c_comm ic;
   755                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   756                           ;main.c: 195: unsigned char i;
   757                           ;main.c: 196: uart_thread_struct uthread_data;
   758                           ;main.c: 198: timer0_thread_struct t0thread_data;
   759                           ;main.c: 206: OSCCON = 0x82;
   760                           
   761                           ;incstack = 0
   762  00085E  0E82               	movlw	130
   763  000860  6ED3               	movwf	4051,c	;volatile
   764                           
   765                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   766  000862  9C9B               	bcf	3995,6,c	;volatile
   767                           
   768                           ;main.c: 225: init_uart_recv(&uc);
   769  000864  0101               	movlb	1	; () banked
   770  000866  0E01               	movlw	high main@uc
   771  000868  0100               	movlb	0	; () banked
   772  00086A  0100               	movlb	0	; () banked
   773  00086C  6FDA               	movwf	(init_uart_recv@uc+1)& (0+255),b
   774  00086E  0101               	movlb	1	; () banked
   775  000870  0ECB               	movlw	low main@uc
   776  000872  0100               	movlb	0	; () banked
   777  000874  0100               	movlb	0	; () banked
   778  000876  6FD9               	movwf	init_uart_recv@uc& (0+255),b
   779  000878  ECB3  F009         	call	_init_uart_recv	;wreg free
   780                           
   781                           ;main.c: 228: init_i2c(&ic);
   782  00087C  0101               	movlb	1	; () banked
   783  00087E  0E01               	movlw	high main@ic
   784  000880  0100               	movlb	0	; () banked
   785  000882  0100               	movlb	0	; () banked
   786  000884  6FDA               	movwf	(init_i2c@ic+1)& (0+255),b
   787  000886  0101               	movlb	1	; () banked
   788  000888  0ED0               	movlw	low main@ic
   789  00088A  0100               	movlb	0	; () banked
   790  00088C  0100               	movlb	0	; () banked
   791  00088E  6FD9               	movwf	init_i2c@ic& (0+255),b
   792  000890  EC0F  F006         	call	_init_i2c	;wreg free
   793                           
   794                           ;main.c: 234: init_queues();
   795  000894  EC66  F007         	call	_init_queues	;wreg free
   796                           
   797                           ;main.c: 238: TRISB = 0x0;
   798  000898  0E00               	movlw	0
   799  00089A  6E93               	movwf	3987,c	;volatile
   800                           
   801                           ;main.c: 239: LATB = 0x0;
   802  00089C  0E00               	movlw	0
   803  00089E  6E8A               	movwf	3978,c	;volatile
   804                           
   805                           ;main.c: 252: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110001);
   806  0008A0  0ED1               	movlw	209
   807  0008A2  EC50  F009         	call	_OpenTimer0
   808                           
   809                           ;main.c: 253: OpenADC(0b11011111 & 0b11111111 & 0b11111011, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
   810  0008A6  0101               	movlb	1	; () banked
   811  0008A8  6FBB               	movwf	??_main& (0+255),b
   812  0008AA  0E84               	movlw	132
   813  0008AC  0100               	movlb	0	; () banked
   814  0008AE  0100               	movlb	0	; () banked
   815  0008B0  6FD9               	movwf	OpenADC@config2& (0+255),b
   816  0008B2  0101               	movlb	1	; () banked
   817  0008B4  51BB               	movf	??_main& (0+255),w,b
   818  0008B6  0101               	movlb	1	; () banked
   819  0008B8  6FBC               	movwf	(??_main+1)& (0+255),b
   820  0008BA  0EFF               	movlw	255
   821  0008BC  0100               	movlb	0	; () banked
   822  0008BE  0100               	movlb	0	; () banked
   823  0008C0  6FDA               	movwf	OpenADC@portconfig& (0+255),b
   824  0008C2  0101               	movlb	1	; () banked
   825  0008C4  51BC               	movf	(??_main+1)& (0+255),w,b
   826  0008C6  0EDB               	movlw	219
   827  0008C8  ECA8  F006         	call	_OpenADC
   828                           
   829                           ;main.c: 254: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
   830  0008CC  9C9E               	bcf	3998,6,c	;volatile
   831  0008CE  8CF2               	bsf	intcon,6,c	;volatile
   832  0008D0  8C9D               	bsf	3997,6,c	;volatile
   833                           
   834                           ;main.c: 270: IPR1bits.TMR1IP = 0;
   835  0008D2  909F               	bcf	3999,0,c	;volatile
   836                           
   837                           ;main.c: 272: IPR1bits.RCIP = 0;
   838  0008D4  9A9F               	bcf	3999,5,c	;volatile
   839                           
   840                           ;main.c: 274: IPR1bits.SSPIP = 1;
   841  0008D6  869F               	bsf	3999,3,c	;volatile
   842                           
   843                           ;main.c: 283: i2c_configure_slave(0x9E);
   844  0008D8  0E9E               	movlw	158
   845  0008DA  EC7A  F009         	call	_i2c_configure_slave
   846                           
   847                           ;main.c: 298: PIE1bits.SSPIE = 1;
   848  0008DE  869D               	bsf	3997,3,c	;volatile
   849                           
   850                           ;main.c: 316: enable_interrupts();
   851  0008E0  EC14  F00A         	call	_enable_interrupts	;wreg free
   852  0008E4                     l2771:
   853                           
   854                           ;main.c: 340: block_on_To_msgqueues();
   855  0008E4  ECEA  F006         	call	_block_on_To_msgqueues	;wreg free
   856                           
   857                           ;main.c: 347: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   858  0008E8  0101               	movlb	1	; () banked
   859  0008EA  0E01               	movlw	high main@msgtype
   860  0008EC  0101               	movlb	1	; () banked
   861  0008EE  0101               	movlb	1	; () banked
   862  0008F0  6FB7               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   863  0008F2  0101               	movlb	1	; () banked
   864  0008F4  0ECA               	movlw	low main@msgtype
   865  0008F6  0101               	movlb	1	; () banked
   866  0008F8  0101               	movlb	1	; () banked
   867  0008FA  6FB6               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   868  0008FC  0101               	movlb	1	; () banked
   869  0008FE  0E01               	movlw	high main@msgbuffer
   870  000900  0101               	movlb	1	; () banked
   871  000902  0101               	movlb	1	; () banked
   872  000904  6FB9               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   873  000906  0101               	movlb	1	; () banked
   874  000908  0EBD               	movlw	low main@msgbuffer
   875  00090A  0101               	movlb	1	; () banked
   876  00090C  0101               	movlb	1	; () banked
   877  00090E  6FB8               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   878  000910  0E0A               	movlw	10
   879  000912  EC89  F008         	call	_ToMainHigh_recvmsg
   880  000916  0101               	movlb	1	; () banked
   881  000918  0101               	movlb	1	; () banked
   882  00091A  6FC9               	movwf	main@length& (0+255),b
   883                           
   884                           ; BSR set to: 1
   885                           ;main.c: 348: if (length < 0) {
   886  00091C  0101               	movlb	1	; () banked
   887  00091E  0101               	movlb	1	; () banked
   888  000920  BFC9               	btfsc	main@length& (0+255),7,b
   889  000922  D7E0               	goto	l2771
   890  000924  D003               	goto	l2781
   891  000926                     l95:
   892                           
   893                           ; BSR set to: 1
   894                           ;main.c: 356: case 41:
   895                           ;main.c: 357: {
   896                           ;main.c: 360: last_reg_recvd = msgbuffer[0];
   897  000926  C1BD  F1C8         	movff	main@msgbuffer,main@last_reg_recvd
   898                           
   899                           ;main.c: 361: break;
   900  00092A  D7DC               	goto	l2771
   901  00092C                     l2781:
   902                           
   903                           ; BSR set to: 1
   904  00092C  0101               	movlb	1	; () banked
   905  00092E  0101               	movlb	1	; () banked
   906  000930  51CA               	movf	main@msgtype& (0+255),w,b
   907                           
   908                           ; Switch size 1, requested type "space"
   909                           ; Number of cases is 3, Range of values is 40 to 42
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte           10     6 (average)
   913                           ;	Chosen strategy is simple_byte
   914  000932  0A28               	xorlw	40	; case 40
   915  000934  B4D8               	btfsc	status,2,c
   916  000936  D7F7               	goto	l95
   917  000938  0A01               	xorlw	1	; case 41
   918  00093A  B4D8               	btfsc	status,2,c
   919  00093C  D7F4               	goto	l95
   920  00093E  0A03               	xorlw	3	; case 42
   921  000940  D7D1               	goto	l2771
   922  000942                     __end_of_main:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           intcon	equ	0xFF2
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _init_uart_recv *****************
   934 ;; Defined at:
   935 ;;		line 49 in file "../src/my_uart.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  uc              2   35[BANK0 ] PTR struct __uart_comm
   938 ;;		 -> main@uc(5), 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;		None               void
   943 ;; Registers used:
   944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   950 ;;      Params:         0       2       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       2       0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:   10
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text1
   965  001366                     __ptext1:
   966                           	opt stack 0
   967  001366                     _init_uart_recv:
   968                           	opt stack 19
   969                           
   970                           ;my_uart.c: 50: uc_ptr = uc;
   971                           
   972                           ; BSR set to: 1
   973                           ;incstack = 0
   974  001366  0100               	movlb	0	; () banked
   975  001368  C0DA  F04F         	movff	init_uart_recv@uc+1,_uc_ptr+1
   976  00136C  0100               	movlb	0	; () banked
   977  00136E  C0D9  F04E         	movff	init_uart_recv@uc,_uc_ptr
   978                           
   979                           ; BSR set to: 0
   980                           ;my_uart.c: 51: uc_ptr->buflen = 0;
   981  001372  EE20 F004          	lfsr	2,4
   982  001376  504E               	movf	_uc_ptr,w,c
   983  001378  26D9               	addwf	fsr2l,f,c
   984  00137A  504F               	movf	_uc_ptr+1,w,c
   985  00137C  22DA               	addwfc	fsr2h,f,c
   986  00137E  0E00               	movlw	0
   987  001380  6EDF               	movwf	indf2,c
   988                           
   989                           ; BSR set to: 0
   990  001382  0012               	return	
   991  001384                     __end_of_init_uart_recv:
   992                           	opt stack 0
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           intcon	equ	0xFF2
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           indf2	equ	0xFDF
  1001                           fsr2h	equ	0xFDA
  1002                           fsr2l	equ	0xFD9
  1003                           status	equ	0xFD8
  1004                           
  1005 ;; *************** function _init_queues *****************
  1006 ;; Defined at:
  1007 ;;		line 194 in file "../src/messages.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;		None               void
  1014 ;; Registers used:
  1015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0
  1023 ;;      Temps:          0       0       1       0       0
  1024 ;;      Totals:         0       0       1       0       0
  1025 ;;Total ram usage:        1 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:   11
  1028 ;; This function calls:
  1029 ;;		_init_queue
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text2
  1036  000ECC                     __ptext2:
  1037                           	opt stack 0
  1038  000ECC                     _init_queues:
  1039                           	opt stack 18
  1040                           
  1041                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;incstack = 0
  1045  000ECC  0101               	movlb	1	; () banked
  1046  000ECE  6FA2               	movwf	??_init_queues& (0+255),b
  1047  000ED0  0E00               	movlw	0
  1048  000ED2  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1049  000ED4  0101               	movlb	1	; () banked
  1050  000ED6  51A2               	movf	??_init_queues& (0+255),w,b
  1051                           
  1052                           ; BSR set to: 1
  1053                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1054  000ED8  0100               	movlb	0	; () banked
  1055  000EDA  0E00               	movlw	high _ToMainLow_MQ
  1056  000EDC  0100               	movlb	0	; () banked
  1057  000EDE  0100               	movlb	0	; () banked
  1058  000EE0  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  1059  000EE2  0100               	movlb	0	; () banked
  1060  000EE4  0E80               	movlw	low _ToMainLow_MQ
  1061  000EE6  0100               	movlb	0	; () banked
  1062  000EE8  0100               	movlb	0	; () banked
  1063  000EEA  6FD9               	movwf	init_queue@qptr& (0+255),b
  1064  000EEC  EC29  F007         	call	_init_queue	;wreg free
  1065                           
  1066                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1067  000EF0  0101               	movlb	1	; () banked
  1068  000EF2  0E01               	movlw	high _ToMainHigh_MQ
  1069  000EF4  0100               	movlb	0	; () banked
  1070  000EF6  0100               	movlb	0	; () banked
  1071  000EF8  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  1072  000EFA  0101               	movlb	1	; () banked
  1073  000EFC  0E6C               	movlw	low _ToMainHigh_MQ
  1074  000EFE  0100               	movlb	0	; () banked
  1075  000F00  0100               	movlb	0	; () banked
  1076  000F02  6FD9               	movwf	init_queue@qptr& (0+255),b
  1077  000F04  EC29  F007         	call	_init_queue	;wreg free
  1078                           
  1079                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1080  000F08  0101               	movlb	1	; () banked
  1081  000F0A  0E01               	movlw	high _FromMainLow_MQ
  1082  000F0C  0100               	movlb	0	; () banked
  1083  000F0E  0100               	movlb	0	; () banked
  1084  000F10  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  1085  000F12  0101               	movlb	1	; () banked
  1086  000F14  0E36               	movlw	low _FromMainLow_MQ
  1087  000F16  0100               	movlb	0	; () banked
  1088  000F18  0100               	movlb	0	; () banked
  1089  000F1A  6FD9               	movwf	init_queue@qptr& (0+255),b
  1090  000F1C  EC29  F007         	call	_init_queue	;wreg free
  1091                           
  1092                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1093  000F20  0101               	movlb	1	; () banked
  1094  000F22  0E01               	movlw	high _FromMainHigh_MQ
  1095  000F24  0100               	movlb	0	; () banked
  1096  000F26  0100               	movlb	0	; () banked
  1097  000F28  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  1098  000F2A  0101               	movlb	1	; () banked
  1099  000F2C  0E00               	movlw	low _FromMainHigh_MQ
  1100  000F2E  0100               	movlb	0	; () banked
  1101  000F30  0100               	movlb	0	; () banked
  1102  000F32  6FD9               	movwf	init_queue@qptr& (0+255),b
  1103  000F34  EC29  F007         	call	_init_queue	;wreg free
  1104  000F38  0012               	return	
  1105  000F3A                     __end_of_init_queues:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           intcon	equ	0xFF2
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           indf2	equ	0xFDF
  1115                           fsr2h	equ	0xFDA
  1116                           fsr2l	equ	0xFD9
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _init_queue *****************
  1120 ;; Defined at:
  1121 ;;		line 14 in file "../src/messages.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  qptr            2   35[BANK0 ] PTR struct __msg_queue
  1124 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  i               1   38[BANK0 ] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;		None               void
  1129 ;; Registers used:
  1130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1136 ;;      Params:         0       2       0       0       0
  1137 ;;      Locals:         0       1       0       0       0
  1138 ;;      Temps:          0       1       0       0       0
  1139 ;;      Totals:         0       4       0       0       0
  1140 ;;Total ram usage:        4 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:   10
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_init_queues
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text3
  1151  000E52                     __ptext3:
  1152                           	opt stack 0
  1153  000E52                     _init_queue:
  1154                           	opt stack 18
  1155                           
  1156                           ;messages.c: 15: unsigned char i;
  1157                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1158                           
  1159                           ;incstack = 0
  1160  000E52  0100               	movlb	0	; () banked
  1161  000E54  EE20 F034          	lfsr	2,52
  1162  000E58  0100               	movlb	0	; () banked
  1163  000E5A  51D9               	movf	init_queue@qptr& (0+255),w,b
  1164  000E5C  26D9               	addwf	fsr2l,f,c
  1165  000E5E  0100               	movlb	0	; () banked
  1166  000E60  51DA               	movf	(init_queue@qptr+1)& (0+255),w,b
  1167  000E62  22DA               	addwfc	fsr2h,f,c
  1168  000E64  0E00               	movlw	0
  1169  000E66  6EDF               	movwf	indf2,c
  1170                           
  1171                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1172  000E68  0100               	movlb	0	; () banked
  1173  000E6A  EE20 F035          	lfsr	2,53
  1174  000E6E  0100               	movlb	0	; () banked
  1175  000E70  51D9               	movf	init_queue@qptr& (0+255),w,b
  1176  000E72  26D9               	addwf	fsr2l,f,c
  1177  000E74  0100               	movlb	0	; () banked
  1178  000E76  51DA               	movf	(init_queue@qptr+1)& (0+255),w,b
  1179  000E78  22DA               	addwfc	fsr2h,f,c
  1180  000E7A  0E00               	movlw	0
  1181  000E7C  6EDF               	movwf	indf2,c
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1185  000E7E  0100               	movlb	0	; () banked
  1186  000E80  6FDB               	movwf	??_init_queue& (0+255),b
  1187  000E82  0E00               	movlw	0
  1188  000E84  0100               	movlb	0	; () banked
  1189  000E86  0100               	movlb	0	; () banked
  1190  000E88  6FDC               	movwf	init_queue@i& (0+255),b
  1191  000E8A  0100               	movlb	0	; () banked
  1192  000E8C  51DB               	movf	??_init_queue& (0+255),w,b
  1193                           
  1194                           ; BSR set to: 0
  1195  000E8E  0E03               	movlw	3
  1196  000E90  0100               	movlb	0	; () banked
  1197  000E92  0100               	movlb	0	; () banked
  1198  000E94  65DC               	cpfsgt	init_queue@i& (0+255),b
  1199  000E96  D001               	goto	l2261
  1200  000E98  0012               	return	
  1201  000E9A                     l2261:
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;messages.c: 20: qptr->queue[i].full = 0;
  1205  000E9A  0100               	movlb	0	; () banked
  1206  000E9C  0100               	movlb	0	; () banked
  1207  000E9E  51DC               	movf	init_queue@i& (0+255),w,b
  1208  000EA0  0D0D               	mullw	13
  1209  000EA2  50F3               	movf	prodl,w,c
  1210  000EA4  0100               	movlb	0	; () banked
  1211  000EA6  0100               	movlb	0	; () banked
  1212  000EA8  25D9               	addwf	init_queue@qptr& (0+255),w,b
  1213  000EAA  6ED9               	movwf	fsr2l,c
  1214  000EAC  50F4               	movf	prodh,w,c
  1215  000EAE  0100               	movlb	0	; () banked
  1216  000EB0  0100               	movlb	0	; () banked
  1217  000EB2  21DA               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1218  000EB4  6EDA               	movwf	fsr2h,c
  1219  000EB6  0E00               	movlw	0
  1220  000EB8  6EDF               	movwf	indf2,c
  1221                           
  1222                           ; BSR set to: 0
  1223  000EBA  0100               	movlb	0	; () banked
  1224  000EBC  0100               	movlb	0	; () banked
  1225  000EBE  2BDC               	incf	init_queue@i& (0+255),f,b
  1226                           
  1227                           ; BSR set to: 0
  1228  000EC0  0E03               	movlw	3
  1229  000EC2  0100               	movlb	0	; () banked
  1230  000EC4  0100               	movlb	0	; () banked
  1231  000EC6  65DC               	cpfsgt	init_queue@i& (0+255),b
  1232  000EC8  D7E8               	goto	l2261
  1233  000ECA  0012               	return	
  1234  000ECC                     __end_of_init_queue:
  1235                           	opt stack 0
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           prodh	equ	0xFF4
  1241                           prodl	equ	0xFF3
  1242                           intcon	equ	0xFF2
  1243                           postinc0	equ	0xFEE
  1244                           wreg	equ	0xFE8
  1245                           indf2	equ	0xFDF
  1246                           fsr2h	equ	0xFDA
  1247                           fsr2l	equ	0xFD9
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _init_i2c *****************
  1251 ;; Defined at:
  1252 ;;		line 300 in file "../src/my_i2c.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  ic              2   35[BANK0 ] PTR struct __i2c_comm
  1255 ;;		 -> main@ic(40), 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;		None               void
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1267 ;;      Params:         0       2       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         0       2       0       0       0
  1271 ;;Total ram usage:        2 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:   10
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text4
  1282  000C1E                     __ptext4:
  1283                           	opt stack 0
  1284  000C1E                     _init_i2c:
  1285                           	opt stack 19
  1286                           
  1287                           ;my_i2c.c: 301: ic_ptr = ic;
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;incstack = 0
  1291  000C1E  0100               	movlb	0	; () banked
  1292  000C20  C0DA  F04D         	movff	init_i2c@ic+1,_ic_ptr+1
  1293  000C24  0100               	movlb	0	; () banked
  1294  000C26  C0D9  F04C         	movff	init_i2c@ic,_ic_ptr
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;my_i2c.c: 302: ic_ptr->buffer[0] = 0;
  1298  000C2A  C04C  FFD9         	movff	_ic_ptr,fsr2l
  1299  000C2E  C04D  FFDA         	movff	_ic_ptr+1,fsr2h
  1300  000C32  0E00               	movlw	0
  1301  000C34  6EDF               	movwf	indf2,c
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;my_i2c.c: 303: ic_ptr->buffer[1] = 0;
  1305  000C36  EE20 F001          	lfsr	2,1
  1306  000C3A  504C               	movf	_ic_ptr,w,c
  1307  000C3C  26D9               	addwf	fsr2l,f,c
  1308  000C3E  504D               	movf	_ic_ptr+1,w,c
  1309  000C40  22DA               	addwfc	fsr2h,f,c
  1310  000C42  0E00               	movlw	0
  1311  000C44  6EDF               	movwf	indf2,c
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;my_i2c.c: 304: ic_ptr->buffer[2] = 0;
  1315  000C46  EE20 F002          	lfsr	2,2
  1316  000C4A  504C               	movf	_ic_ptr,w,c
  1317  000C4C  26D9               	addwf	fsr2l,f,c
  1318  000C4E  504D               	movf	_ic_ptr+1,w,c
  1319  000C50  22DA               	addwfc	fsr2h,f,c
  1320  000C52  0E00               	movlw	0
  1321  000C54  6EDF               	movwf	indf2,c
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;my_i2c.c: 305: ic_ptr->buflen = 0;
  1325  000C56  EE20 F00A          	lfsr	2,10
  1326  000C5A  504C               	movf	_ic_ptr,w,c
  1327  000C5C  26D9               	addwf	fsr2l,f,c
  1328  000C5E  504D               	movf	_ic_ptr+1,w,c
  1329  000C60  22DA               	addwfc	fsr2h,f,c
  1330  000C62  0E00               	movlw	0
  1331  000C64  6EDF               	movwf	indf2,c
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;my_i2c.c: 306: ic_ptr->event_count = 0;
  1335  000C66  EE20 F00B          	lfsr	2,11
  1336  000C6A  504C               	movf	_ic_ptr,w,c
  1337  000C6C  26D9               	addwf	fsr2l,f,c
  1338  000C6E  504D               	movf	_ic_ptr+1,w,c
  1339  000C70  22DA               	addwfc	fsr2h,f,c
  1340  000C72  0E00               	movlw	0
  1341  000C74  6EDF               	movwf	indf2,c
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;my_i2c.c: 307: ic_ptr->status = 0x5;
  1345  000C76  EE20 F00C          	lfsr	2,12
  1346  000C7A  504C               	movf	_ic_ptr,w,c
  1347  000C7C  26D9               	addwf	fsr2l,f,c
  1348  000C7E  504D               	movf	_ic_ptr+1,w,c
  1349  000C80  22DA               	addwfc	fsr2h,f,c
  1350  000C82  0E05               	movlw	5
  1351  000C84  6EDF               	movwf	indf2,c
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;my_i2c.c: 308: ic_ptr->error_count = 0;
  1355  000C86  EE20 F00E          	lfsr	2,14
  1356  000C8A  504C               	movf	_ic_ptr,w,c
  1357  000C8C  26D9               	addwf	fsr2l,f,c
  1358  000C8E  504D               	movf	_ic_ptr+1,w,c
  1359  000C90  22DA               	addwfc	fsr2h,f,c
  1360  000C92  0E00               	movlw	0
  1361  000C94  6EDF               	movwf	indf2,c
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;my_i2c.c: 309: ic_ptr->sendBufInd = 0;
  1365  000C96  EE20 F027          	lfsr	2,39
  1366  000C9A  504C               	movf	_ic_ptr,w,c
  1367  000C9C  26D9               	addwf	fsr2l,f,c
  1368  000C9E  504D               	movf	_ic_ptr+1,w,c
  1369  000CA0  22DA               	addwfc	fsr2h,f,c
  1370  000CA2  0E00               	movlw	0
  1371  000CA4  6EDF               	movwf	indf2,c
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;my_i2c.c: 310: ic_ptr->sendBufLen = 0;
  1375  000CA6  EE20 F026          	lfsr	2,38
  1376  000CAA  504C               	movf	_ic_ptr,w,c
  1377  000CAC  26D9               	addwf	fsr2l,f,c
  1378  000CAE  504D               	movf	_ic_ptr+1,w,c
  1379  000CB0  22DA               	addwfc	fsr2h,f,c
  1380  000CB2  0E00               	movlw	0
  1381  000CB4  6EDF               	movwf	indf2,c
  1382                           
  1383                           ; BSR set to: 0
  1384  000CB6  0012               	return	
  1385  000CB8                     __end_of_init_i2c:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           prodh	equ	0xFF4
  1392                           prodl	equ	0xFF3
  1393                           intcon	equ	0xFF2
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           indf2	equ	0xFDF
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _i2c_configure_slave *****************
  1402 ;; Defined at:
  1403 ;;		line 316 in file "../src/my_i2c.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  addr            1    wreg     unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  addr            1   35[BANK0 ] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;		None               void
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1417 ;;      Params:         0       0       0       0       0
  1418 ;;      Locals:         0       1       0       0       0
  1419 ;;      Temps:          0       0       0       0       0
  1420 ;;      Totals:         0       1       0       0       0
  1421 ;;Total ram usage:        1 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:   10
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432  0012F4                     __ptext5:
  1433                           	opt stack 0
  1434  0012F4                     _i2c_configure_slave:
  1435                           	opt stack 19
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;incstack = 0
  1439                           ;i2c_configure_slave@addr stored from wreg
  1440  0012F4  CFE8 F0D9          	movff	wreg,i2c_configure_slave@addr
  1441                           
  1442                           ;my_i2c.c: 328: TRISCbits.TRISC3 = 1;
  1443  0012F8  8694               	bsf	3988,3,c	;volatile
  1444                           
  1445                           ;my_i2c.c: 329: TRISCbits.TRISC4 = 1;
  1446  0012FA  8894               	bsf	3988,4,c	;volatile
  1447                           
  1448                           ;my_i2c.c: 334: SSPADD = addr;
  1449  0012FC  C0D9  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  1450                           
  1451                           ;my_i2c.c: 336: SSPSTAT = 0x0;
  1452  001300  0E00               	movlw	0
  1453  001302  6EC7               	movwf	4039,c	;volatile
  1454                           
  1455                           ;my_i2c.c: 337: SSPCON1 = 0x0;
  1456  001304  0E00               	movlw	0
  1457  001306  6EC6               	movwf	4038,c	;volatile
  1458                           
  1459                           ;my_i2c.c: 338: SSPCON2 = 0x0;
  1460  001308  0E00               	movlw	0
  1461  00130A  6EC5               	movwf	4037,c	;volatile
  1462                           
  1463                           ;my_i2c.c: 339: SSPCON1 |= 0x0E;
  1464  00130C  0E0E               	movlw	14
  1465  00130E  12C6               	iorwf	4038,f,c	;volatile
  1466                           
  1467                           ;my_i2c.c: 340: SSPSTAT |= 0b10000000;
  1468  001310  8EC7               	bsf	4039,7,c	;volatile
  1469                           
  1470                           ;my_i2c.c: 343: TRISCbits.TRISC3 = 1;
  1471  001312  8694               	bsf	3988,3,c	;volatile
  1472                           
  1473                           ;my_i2c.c: 344: TRISCbits.TRISC4 = 1;
  1474  001314  8894               	bsf	3988,4,c	;volatile
  1475                           
  1476                           ;my_i2c.c: 365: SSPCON2bits.SEN = 1;
  1477  001316  80C5               	bsf	4037,0,c	;volatile
  1478                           
  1479                           ;my_i2c.c: 366: SSPCON1 |= 0b00100000;
  1480  001318  8AC6               	bsf	4038,5,c	;volatile
  1481  00131A  0012               	return	
  1482  00131C                     __end_of_i2c_configure_slave:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           intcon	equ	0xFF2
  1491                           postinc0	equ	0xFEE
  1492                           wreg	equ	0xFE8
  1493                           indf2	equ	0xFDF
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function _enable_interrupts *****************
  1499 ;; Defined at:
  1500 ;;		line 14 in file "../src/interrupts.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;		None               void
  1507 ;; Registers used:
  1508 ;;		None
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1514 ;;      Params:         0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0
  1517 ;;      Totals:         0       0       0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:   10
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text6
  1529  001428                     __ptext6:
  1530                           	opt stack 0
  1531  001428                     _enable_interrupts:
  1532                           	opt stack 19
  1533                           
  1534                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  1535                           
  1536                           ;incstack = 0
  1537  001428  8ED0               	bsf	4048,7,c	;volatile
  1538                           
  1539                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  1540  00142A  8EF2               	bsf	intcon,7,c	;volatile
  1541                           
  1542                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  1543  00142C  8CF2               	bsf	intcon,6,c	;volatile
  1544  00142E  0012               	return	
  1545  001430                     __end_of_enable_interrupts:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           intcon	equ	0xFF2
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           indf2	equ	0xFDF
  1557                           fsr2h	equ	0xFDA
  1558                           fsr2l	equ	0xFD9
  1559                           status	equ	0xFD8
  1560                           
  1561 ;; *************** function _block_on_To_msgqueues *****************
  1562 ;; Defined at:
  1563 ;;		line 258 in file "../src/messages.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;		None               void
  1570 ;; Registers used:
  1571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0
  1579 ;;      Temps:          0       0       1       0       0
  1580 ;;      Totals:         0       0       1       0       0
  1581 ;;Total ram usage:        1 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:   13
  1584 ;; This function calls:
  1585 ;;		_Delay1KTCYx
  1586 ;;		_check_msg
  1587 ;;		_in_main
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text7
  1594  000DD4                     __ptext7:
  1595                           	opt stack 0
  1596  000DD4                     _block_on_To_msgqueues:
  1597                           	opt stack 16
  1598                           
  1599                           ;messages.c: 259: if (!in_main()) {
  1600                           
  1601                           ;incstack = 0
  1602  000DD4  EC67  F008         	call	_in_main	;wreg free
  1603  000DD8  0101               	movlb	1	; () banked
  1604  000DDA  0101               	movlb	1	; () banked
  1605  000DDC  51A3               	movf	(?_in_main+1)& (0+255),w,b
  1606  000DDE  0101               	movlb	1	; () banked
  1607  000DE0  11A2               	iorwf	?_in_main& (0+255),w,b
  1608  000DE2  B4D8               	btfsc	status,2,c
  1609  000DE4  0012               	return	
  1610                           
  1611                           ; BSR set to: 1
  1612                           ;messages.c: 261: }
  1613                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  1614                           
  1615                           ; BSR set to: 1
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;messages.c: 260: return;
  1619  000DE6  0101               	movlb	1	; () banked
  1620  000DE8  6FA4               	movwf	??_block_on_To_msgqueues& (0+255),b
  1621  000DEA  0E01               	movlw	1
  1622  000DEC  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1623  000DEE  0101               	movlb	1	; () banked
  1624  000DF0  51A4               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1625  000DF2                     l2811:
  1626                           
  1627                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  1628  000DF2  0101               	movlb	1	; () banked
  1629  000DF4  0E01               	movlw	high _ToMainHigh_MQ
  1630  000DF6  0100               	movlb	0	; () banked
  1631  000DF8  0100               	movlb	0	; () banked
  1632  000DFA  6FDA               	movwf	(check_msg@qptr+1)& (0+255),b
  1633  000DFC  0101               	movlb	1	; () banked
  1634  000DFE  0E6C               	movlw	low _ToMainHigh_MQ
  1635  000E00  0100               	movlb	0	; () banked
  1636  000E02  0100               	movlb	0	; () banked
  1637  000E04  6FD9               	movwf	check_msg@qptr& (0+255),b
  1638  000E06  EC06  F009         	call	_check_msg	;wreg free
  1639  000E0A  0900               	iorlw	0
  1640  000E0C  B4D8               	btfsc	status,2,c
  1641  000E0E  D007               	goto	l2817
  1642                           
  1643                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  1644  000E10  0101               	movlb	1	; () banked
  1645  000E12  6FA4               	movwf	??_block_on_To_msgqueues& (0+255),b
  1646  000E14  0E00               	movlw	0
  1647  000E16  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1648  000E18  0101               	movlb	1	; () banked
  1649  000E1A  51A4               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1650  000E1C  0012               	return	
  1651  000E1E                     l2817:
  1652                           
  1653                           ;messages.c: 271: }
  1654                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  1655  000E1E  0100               	movlb	0	; () banked
  1656  000E20  0E00               	movlw	high _ToMainLow_MQ
  1657  000E22  0100               	movlb	0	; () banked
  1658  000E24  0100               	movlb	0	; () banked
  1659  000E26  6FDA               	movwf	(check_msg@qptr+1)& (0+255),b
  1660  000E28  0100               	movlb	0	; () banked
  1661  000E2A  0E80               	movlw	low _ToMainLow_MQ
  1662  000E2C  0100               	movlb	0	; () banked
  1663  000E2E  0100               	movlb	0	; () banked
  1664  000E30  6FD9               	movwf	check_msg@qptr& (0+255),b
  1665  000E32  EC06  F009         	call	_check_msg	;wreg free
  1666  000E36  0900               	iorlw	0
  1667  000E38  B4D8               	btfsc	status,2,c
  1668  000E3A  D007               	goto	l2823
  1669                           
  1670                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  1671  000E3C  0101               	movlb	1	; () banked
  1672  000E3E  6FA4               	movwf	??_block_on_To_msgqueues& (0+255),b
  1673  000E40  0E00               	movlw	0
  1674  000E42  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  1675  000E44  0101               	movlb	1	; () banked
  1676  000E46  51A4               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1677  000E48  0012               	return	
  1678  000E4A                     l2823:
  1679                           
  1680                           ;messages.c: 278: }
  1681                           ;messages.c: 279: Delay1KTCYx(10);
  1682  000E4A  0E0A               	movlw	10
  1683  000E4C  ECD1  F009         	call	_Delay1KTCYx
  1684  000E50  D7D0               	goto	l2811
  1685  000E52                     __end_of_block_on_To_msgqueues:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           prodh	equ	0xFF4
  1692                           prodl	equ	0xFF3
  1693                           intcon	equ	0xFF2
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           indf2	equ	0xFDF
  1697                           fsr2h	equ	0xFDA
  1698                           fsr2l	equ	0xFD9
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _in_main *****************
  1702 ;; Defined at:
  1703 ;;		line 40 in file "../src/interrupts.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2    0[BANK1 ] int 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1717 ;;      Params:         0       0       2       0       0
  1718 ;;      Locals:         0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0
  1720 ;;      Totals:         0       0       2       0       0
  1721 ;;Total ram usage:        2 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:   12
  1724 ;; This function calls:
  1725 ;;		_in_high_int
  1726 ;;		_in_low_int
  1727 ;; This function is called by:
  1728 ;;		_block_on_To_msgqueues
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text8
  1733  0010CE                     __ptext8:
  1734                           	opt stack 0
  1735  0010CE                     _in_main:
  1736                           	opt stack 16
  1737                           
  1738                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  1739                           
  1740                           ;incstack = 0
  1741  0010CE  EC44  F008         	call	_in_low_int	;wreg free
  1742  0010D2  0100               	movlb	0	; () banked
  1743  0010D4  0100               	movlb	0	; () banked
  1744  0010D6  51DC               	movf	(?_in_low_int+1)& (0+255),w,b
  1745  0010D8  0100               	movlb	0	; () banked
  1746  0010DA  11DB               	iorwf	?_in_low_int& (0+255),w,b
  1747  0010DC  A4D8               	btfss	status,2,c
  1748  0010DE  D011               	goto	l2565
  1749                           
  1750                           ; BSR set to: 0
  1751  0010E0  ECDC  F009         	call	_in_high_int	;wreg free
  1752  0010E4  0100               	movlb	0	; () banked
  1753  0010E6  0100               	movlb	0	; () banked
  1754  0010E8  51DA               	movf	(?_in_high_int+1)& (0+255),w,b
  1755  0010EA  0100               	movlb	0	; () banked
  1756  0010EC  11D9               	iorwf	?_in_high_int& (0+255),w,b
  1757  0010EE  A4D8               	btfss	status,2,c
  1758  0010F0  D008               	goto	l2565
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;interrupts.c: 42: return (1);
  1762  0010F2  0E00               	movlw	0
  1763  0010F4  0101               	movlb	1	; () banked
  1764  0010F6  0101               	movlb	1	; () banked
  1765  0010F8  6FA3               	movwf	(?_in_main+1)& (0+255),b
  1766  0010FA  0E01               	movlw	1
  1767  0010FC  0101               	movlb	1	; () banked
  1768  0010FE  6FA2               	movwf	?_in_main& (0+255),b
  1769  001100  0012               	return	
  1770  001102                     l2565:
  1771                           
  1772                           ;interrupts.c: 44: return (0);
  1773  001102  0E00               	movlw	0
  1774  001104  0101               	movlb	1	; () banked
  1775  001106  0101               	movlb	1	; () banked
  1776  001108  6FA3               	movwf	(?_in_main+1)& (0+255),b
  1777  00110A  0E00               	movlw	0
  1778  00110C  0101               	movlb	1	; () banked
  1779  00110E  6FA2               	movwf	?_in_main& (0+255),b
  1780  001110  0012               	return	
  1781  001112                     __end_of_in_main:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           prodh	equ	0xFF4
  1788                           prodl	equ	0xFF3
  1789                           intcon	equ	0xFF2
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           indf2	equ	0xFDF
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _in_low_int *****************
  1798 ;; Defined at:
  1799 ;;		line 30 in file "../src/interrupts.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  2   37[BANK0 ] int 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1813 ;;      Params:         0       2       0       0       0
  1814 ;;      Locals:         0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0
  1816 ;;      Totals:         0       2       0       0       0
  1817 ;;Total ram usage:        2 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:   11
  1820 ;; This function calls:
  1821 ;;		_in_high_int
  1822 ;; This function is called by:
  1823 ;;		_in_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text9
  1828  001088                     __ptext9:
  1829                           	opt stack 0
  1830  001088                     _in_low_int:
  1831                           	opt stack 16
  1832                           
  1833                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;incstack = 0
  1837  001088  ACF2               	btfss	intcon,6,c	;volatile
  1838  00108A  D008               	goto	l1881
  1839                           
  1840                           ;interrupts.c: 32: return (0);
  1841  00108C  0E00               	movlw	0
  1842  00108E  0100               	movlb	0	; () banked
  1843  001090  0100               	movlb	0	; () banked
  1844  001092  6FDC               	movwf	(?_in_low_int+1)& (0+255),b
  1845  001094  0E00               	movlw	0
  1846  001096  0100               	movlb	0	; () banked
  1847  001098  6FDB               	movwf	?_in_low_int& (0+255),b
  1848  00109A  0012               	return	
  1849  00109C                     l1881:
  1850  00109C  ECDC  F009         	call	_in_high_int	;wreg free
  1851  0010A0  0100               	movlb	0	; () banked
  1852  0010A2  0100               	movlb	0	; () banked
  1853  0010A4  51DA               	movf	(?_in_high_int+1)& (0+255),w,b
  1854  0010A6  0100               	movlb	0	; () banked
  1855  0010A8  11D9               	iorwf	?_in_high_int& (0+255),w,b
  1856  0010AA  B4D8               	btfsc	status,2,c
  1857  0010AC  D008               	goto	l1889
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;interrupts.c: 34: return (0);
  1861  0010AE  0E00               	movlw	0
  1862  0010B0  0100               	movlb	0	; () banked
  1863  0010B2  0100               	movlb	0	; () banked
  1864  0010B4  6FDC               	movwf	(?_in_low_int+1)& (0+255),b
  1865  0010B6  0E00               	movlw	0
  1866  0010B8  0100               	movlb	0	; () banked
  1867  0010BA  6FDB               	movwf	?_in_low_int& (0+255),b
  1868  0010BC  0012               	return	
  1869  0010BE                     l1889:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;interrupts.c: 36: return (1);
  1873  0010BE  0E00               	movlw	0
  1874  0010C0  0100               	movlb	0	; () banked
  1875  0010C2  0100               	movlb	0	; () banked
  1876  0010C4  6FDC               	movwf	(?_in_low_int+1)& (0+255),b
  1877  0010C6  0E01               	movlw	1
  1878  0010C8  0100               	movlb	0	; () banked
  1879  0010CA  6FDB               	movwf	?_in_low_int& (0+255),b
  1880  0010CC  0012               	return	
  1881  0010CE                     __end_of_in_low_int:
  1882                           	opt stack 0
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           prodh	equ	0xFF4
  1888                           prodl	equ	0xFF3
  1889                           intcon	equ	0xFF2
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           indf2	equ	0xFDF
  1893                           fsr2h	equ	0xFDA
  1894                           fsr2l	equ	0xFD9
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _in_high_int *****************
  1898 ;; Defined at:
  1899 ;;		line 22 in file "../src/interrupts.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   35[BANK0 ] int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1913 ;;      Params:         0       2       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0
  1916 ;;      Totals:         0       2       0       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:   10
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_in_low_int
  1924 ;;		_in_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text10
  1929  0013B8                     __ptext10:
  1930                           	opt stack 0
  1931  0013B8                     _in_high_int:
  1932                           	opt stack 16
  1933                           
  1934                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;incstack = 0
  1938  0013B8  0E00               	movlw	0
  1939  0013BA  AEF2               	btfss	intcon,7,c	;volatile
  1940  0013BC  0E01               	movlw	1
  1941  0013BE  0100               	movlb	0	; () banked
  1942  0013C0  0100               	movlb	0	; () banked
  1943  0013C2  6FD9               	movwf	?_in_high_int& (0+255),b
  1944  0013C4  0100               	movlb	0	; () banked
  1945  0013C6  6BDA               	clrf	(?_in_high_int+1)& (0+255),b
  1946  0013C8  0012               	return	
  1947  0013CA                     __end_of_in_high_int:
  1948                           	opt stack 0
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           prodh	equ	0xFF4
  1954                           prodl	equ	0xFF3
  1955                           intcon	equ	0xFF2
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           indf2	equ	0xFDF
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _check_msg *****************
  1964 ;; Defined at:
  1965 ;;		line 222 in file "../src/messages.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  qptr            2   35[BANK0 ] PTR struct __msg_queue
  1968 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1980 ;;      Params:         0       2       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          0       1       0       0       0
  1983 ;;      Totals:         0       3       0       0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:   10
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_block_on_To_msgqueues
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text11
  1995  00120C                     __ptext11:
  1996                           	opt stack 0
  1997  00120C                     _check_msg:
  1998                           	opt stack 18
  1999                           
  2000                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;incstack = 0
  2004  00120C  0100               	movlb	0	; () banked
  2005  00120E  EE20 F035          	lfsr	2,53
  2006  001212  0100               	movlb	0	; () banked
  2007  001214  51D9               	movf	check_msg@qptr& (0+255),w,b
  2008  001216  26D9               	addwf	fsr2l,f,c
  2009  001218  0100               	movlb	0	; () banked
  2010  00121A  51DA               	movf	(check_msg@qptr+1)& (0+255),w,b
  2011  00121C  22DA               	addwfc	fsr2h,f,c
  2012  00121E  50DF               	movf	indf2,w,c
  2013  001220  0100               	movlb	0	; () banked
  2014  001222  6FDB               	movwf	??_check_msg& (0+255),b
  2015  001224  0100               	movlb	0	; () banked
  2016  001226  51DB               	movf	??_check_msg& (0+255),w,b
  2017  001228  0D0D               	mullw	13
  2018  00122A  50F3               	movf	prodl,w,c
  2019  00122C  0100               	movlb	0	; () banked
  2020  00122E  0100               	movlb	0	; () banked
  2021  001230  25D9               	addwf	check_msg@qptr& (0+255),w,b
  2022  001232  6ED9               	movwf	fsr2l,c
  2023  001234  50F4               	movf	prodh,w,c
  2024  001236  0100               	movlb	0	; () banked
  2025  001238  0100               	movlb	0	; () banked
  2026  00123A  21DA               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2027  00123C  6EDA               	movwf	fsr2h,c
  2028  00123E  50DF               	movf	indf2,w,c
  2029  001240  0012               	return	
  2030  001242                     __end_of_check_msg:
  2031                           	opt stack 0
  2032                           tblptru	equ	0xFF8
  2033                           tblptrh	equ	0xFF7
  2034                           tblptrl	equ	0xFF6
  2035                           tablat	equ	0xFF5
  2036                           prodh	equ	0xFF4
  2037                           prodl	equ	0xFF3
  2038                           intcon	equ	0xFF2
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           indf2	equ	0xFDF
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _Delay1KTCYx *****************
  2047 ;; Defined at:
  2048 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  unit            1    wreg     unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  unit            1   35[BANK0 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;		None               void
  2055 ;; Registers used:
  2056 ;;		wreg
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       1       0       0       0
  2064 ;;      Temps:          0       0       0       0       0
  2065 ;;      Totals:         0       1       0       0       0
  2066 ;;Total ram usage:        1 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:   10
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_block_on_To_msgqueues
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text12
  2077  0013A2                     __ptext12:
  2078                           	opt stack 0
  2079  0013A2                     _Delay1KTCYx:
  2080                           	opt stack 18
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;incstack = 0
  2084                           ;Delay1KTCYx@unit stored from wreg
  2085  0013A2  CFE8 F0D9          	movff	wreg,Delay1KTCYx@unit
  2086  0013A6                     l671:
  2087  0013A6  0EFA               	movlw	250
  2088  0013A8                     u1997:
  2089  0013A8  F000               	nop	
  2090  0013AA  2EE8               	decfsz	wreg,f,c
  2091  0013AC  D7FD               	goto	u1997
  2092  0013AE  0100               	movlb	0	; () banked
  2093  0013B0  0100               	movlb	0	; () banked
  2094  0013B2  2FD9               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2095  0013B4  D7F8               	goto	l671
  2096  0013B6  0012               	return	
  2097  0013B8                     __end_of_Delay1KTCYx:
  2098                           	opt stack 0
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           prodh	equ	0xFF4
  2104                           prodl	equ	0xFF3
  2105                           intcon	equ	0xFF2
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           indf2	equ	0xFDF
  2109                           fsr2h	equ	0xFDA
  2110                           fsr2l	equ	0xFD9
  2111                           status	equ	0xFD8
  2112                           
  2113 ;; *************** function _ToMainHigh_recvmsg *****************
  2114 ;; Defined at:
  2115 ;;		line 135 in file "../src/messages.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  maxlength       1    wreg     unsigned char 
  2118 ;;  msgtype         2   20[BANK1 ] PTR unsigned char 
  2119 ;;		 -> main@msgtype(1), 
  2120 ;;  data            2   22[BANK1 ] PTR void 
  2121 ;;		 -> main@msgbuffer(11), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  maxlength       1   24[BANK1 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      char 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2133 ;;      Params:         0       0       4       0       0
  2134 ;;      Locals:         0       0       1       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       0       5       0       0
  2137 ;;Total ram usage:        5 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:   12
  2140 ;; This function calls:
  2141 ;;		_recv_msg
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text13
  2148  001112                     __ptext13:
  2149                           	opt stack 0
  2150  001112                     _ToMainHigh_recvmsg:
  2151                           	opt stack 17
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;incstack = 0
  2155                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  2156  001112  CFE8 F1BA          	movff	wreg,ToMainHigh_recvmsg@maxlength
  2157                           
  2158                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2159  001116  0101               	movlb	1	; () banked
  2160  001118  0E01               	movlw	high _ToMainHigh_MQ
  2161  00111A  0101               	movlb	1	; () banked
  2162  00111C  0101               	movlb	1	; () banked
  2163  00111E  6FA9               	movwf	(recv_msg@qptr+1)& (0+255),b
  2164  001120  0101               	movlb	1	; () banked
  2165  001122  0E6C               	movlw	low _ToMainHigh_MQ
  2166  001124  0101               	movlb	1	; () banked
  2167  001126  0101               	movlb	1	; () banked
  2168  001128  6FA8               	movwf	recv_msg@qptr& (0+255),b
  2169  00112A  C1BA  F1AA         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  2170  00112E  0101               	movlb	1	; () banked
  2171  001130  0101               	movlb	1	; () banked
  2172  001132  C1B7  F1AC         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  2173  001136  0101               	movlb	1	; () banked
  2174  001138  0101               	movlb	1	; () banked
  2175  00113A  C1B6  F1AB         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  2176  00113E  0101               	movlb	1	; () banked
  2177  001140  0101               	movlb	1	; () banked
  2178  001142  C1B9  F1AE         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  2179  001146  0101               	movlb	1	; () banked
  2180  001148  0101               	movlb	1	; () banked
  2181  00114A  C1B8  F1AD         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  2182  00114E  EC94  F003         	call	_recv_msg	;wreg free
  2183  001152  0012               	return	
  2184  001154                     __end_of_ToMainHigh_recvmsg:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           intcon	equ	0xFF2
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           indf2	equ	0xFDF
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _recv_msg *****************
  2201 ;; Defined at:
  2202 ;;		line 63 in file "../src/messages.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  qptr            2    6[BANK1 ] PTR struct __msg_queue
  2205 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2206 ;;  maxlength       1    8[BANK1 ] unsigned char 
  2207 ;;  msgtype         2    9[BANK1 ] PTR unsigned char 
  2208 ;;		 -> main@msgtype(1), 
  2209 ;;  data            2   11[BANK1 ] PTR void 
  2210 ;;		 -> main@msgbuffer(11), 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  qmsg            2   18[BANK1 ] PTR struct __msg
  2213 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2214 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2215 ;;  tlength         2   16[BANK1 ] unsigned int 
  2216 ;;  slot            1   15[BANK1 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      char 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2226 ;;      Params:         0       0       7       0       0
  2227 ;;      Locals:         0       0       5       0       0
  2228 ;;      Temps:          0       0       2       0       0
  2229 ;;      Totals:         0       0      14       0       0
  2230 ;;Total ram usage:       14 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:   11
  2233 ;; This function calls:
  2234 ;;		_memcpy
  2235 ;; This function is called by:
  2236 ;;		_ToMainHigh_recvmsg
  2237 ;;		_ToMainLow_recvmsg
  2238 ;;		_FromMainLow_recvmsg
  2239 ;;		_FromMainHigh_recvmsg
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text14
  2244  000728                     __ptext14:
  2245                           	opt stack 0
  2246  000728                     _recv_msg:
  2247                           	opt stack 17
  2248                           
  2249                           ;messages.c: 64: unsigned char slot;
  2250                           ;messages.c: 68: msg *qmsg;
  2251                           ;messages.c: 69: size_t tlength;
  2252                           ;messages.c: 72: slot = qptr->cur_read_ind;
  2253                           
  2254                           ;incstack = 0
  2255  000728  0101               	movlb	1	; () banked
  2256  00072A  EE20 F035          	lfsr	2,53
  2257  00072E  0101               	movlb	1	; () banked
  2258  000730  51A8               	movf	recv_msg@qptr& (0+255),w,b
  2259  000732  26D9               	addwf	fsr2l,f,c
  2260  000734  0101               	movlb	1	; () banked
  2261  000736  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2262  000738  22DA               	addwfc	fsr2h,f,c
  2263  00073A  50DF               	movf	indf2,w,c
  2264  00073C  0101               	movlb	1	; () banked
  2265  00073E  0101               	movlb	1	; () banked
  2266  000740  6FB1               	movwf	recv_msg@slot& (0+255),b
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  2270  000742  0101               	movlb	1	; () banked
  2271  000744  0101               	movlb	1	; () banked
  2272  000746  51B1               	movf	recv_msg@slot& (0+255),w,b
  2273  000748  0D0D               	mullw	13
  2274  00074A  50F3               	movf	prodl,w,c
  2275  00074C  0101               	movlb	1	; () banked
  2276  00074E  0101               	movlb	1	; () banked
  2277  000750  25A8               	addwf	recv_msg@qptr& (0+255),w,b
  2278  000752  0101               	movlb	1	; () banked
  2279  000754  0101               	movlb	1	; () banked
  2280  000756  6FB4               	movwf	recv_msg@qmsg& (0+255),b
  2281  000758  50F4               	movf	prodh,w,c
  2282  00075A  0101               	movlb	1	; () banked
  2283  00075C  0101               	movlb	1	; () banked
  2284  00075E  21A9               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2285  000760  0101               	movlb	1	; () banked
  2286  000762  6FB5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;messages.c: 74: if (qmsg->full == 1) {
  2290  000764  0E01               	movlw	1
  2291  000766  C1B4  FFD9         	movff	recv_msg@qmsg,fsr2l
  2292  00076A  C1B5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2293  00076E  62DF               	cpfseq	indf2,c
  2294  000770  D074               	goto	l2867
  2295                           
  2296                           ; BSR set to: 1
  2297                           ;messages.c: 76: if (qmsg->length > maxlength) {
  2298  000772  0101               	movlb	1	; () banked
  2299  000774  EE20 F001          	lfsr	2,1
  2300  000778  0101               	movlb	1	; () banked
  2301  00077A  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  2302  00077C  26D9               	addwf	fsr2l,f,c
  2303  00077E  0101               	movlb	1	; () banked
  2304  000780  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2305  000782  22DA               	addwfc	fsr2h,f,c
  2306  000784  50DF               	movf	indf2,w,c
  2307  000786  0101               	movlb	1	; () banked
  2308  000788  0101               	movlb	1	; () banked
  2309  00078A  5DAA               	subwf	recv_msg@maxlength& (0+255),w,b
  2310  00078C  B0D8               	btfsc	status,0,c
  2311  00078E  D002               	goto	l2851
  2312                           
  2313                           ; BSR set to: 1
  2314                           ;messages.c: 77: return (-3);
  2315  000790  0EFD               	movlw	253
  2316  000792  0012               	return	
  2317  000794                     l2851:
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;messages.c: 78: }
  2321                           ;messages.c: 80: tlength = qmsg->length;
  2322  000794  0101               	movlb	1	; () banked
  2323  000796  EE20 F001          	lfsr	2,1
  2324  00079A  0101               	movlb	1	; () banked
  2325  00079C  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  2326  00079E  26D9               	addwf	fsr2l,f,c
  2327  0007A0  0101               	movlb	1	; () banked
  2328  0007A2  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2329  0007A4  22DA               	addwfc	fsr2h,f,c
  2330  0007A6  50DF               	movf	indf2,w,c
  2331  0007A8  0101               	movlb	1	; () banked
  2332  0007AA  6FAF               	movwf	??_recv_msg& (0+255),b
  2333  0007AC  0101               	movlb	1	; () banked
  2334  0007AE  51AF               	movf	??_recv_msg& (0+255),w,b
  2335  0007B0  0101               	movlb	1	; () banked
  2336  0007B2  0101               	movlb	1	; () banked
  2337  0007B4  6FB2               	movwf	recv_msg@tlength& (0+255),b
  2338  0007B6  0101               	movlb	1	; () banked
  2339  0007B8  6BB3               	clrf	(recv_msg@tlength+1)& (0+255),b
  2340                           
  2341                           ; BSR set to: 1
  2342                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  2343  0007BA  0101               	movlb	1	; () banked
  2344  0007BC  0101               	movlb	1	; () banked
  2345  0007BE  C1AE  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  2346  0007C2  0101               	movlb	1	; () banked
  2347  0007C4  0101               	movlb	1	; () banked
  2348  0007C6  C1AD  F1A2         	movff	recv_msg@data,memcpy@d1
  2349  0007CA  0E03               	movlw	3
  2350  0007CC  0101               	movlb	1	; () banked
  2351  0007CE  0101               	movlb	1	; () banked
  2352  0007D0  25B4               	addwf	recv_msg@qmsg& (0+255),w,b
  2353  0007D2  0101               	movlb	1	; () banked
  2354  0007D4  6FAF               	movwf	??_recv_msg& (0+255),b
  2355  0007D6  0E00               	movlw	0
  2356  0007D8  0101               	movlb	1	; () banked
  2357  0007DA  0101               	movlb	1	; () banked
  2358  0007DC  21B5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2359  0007DE  0101               	movlb	1	; () banked
  2360  0007E0  6FB0               	movwf	(??_recv_msg+1)& (0+255),b
  2361  0007E2  C1AF  F1A4         	movff	??_recv_msg,memcpy@s1
  2362  0007E6  C1B0  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  2363  0007EA  C1B2  F1A6         	movff	recv_msg@tlength,memcpy@n
  2364  0007EE  C1B3  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  2365  0007F2  EC9D  F007         	call	_memcpy	;wreg free
  2366                           
  2367                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2368  0007F6  0101               	movlb	1	; () banked
  2369  0007F8  EE20 F035          	lfsr	2,53
  2370  0007FC  0101               	movlb	1	; () banked
  2371  0007FE  51A8               	movf	recv_msg@qptr& (0+255),w,b
  2372  000800  26D9               	addwf	fsr2l,f,c
  2373  000802  0101               	movlb	1	; () banked
  2374  000804  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2375  000806  22DA               	addwfc	fsr2h,f,c
  2376  000808  0101               	movlb	1	; () banked
  2377  00080A  EE10 F035          	lfsr	1,53
  2378  00080E  0101               	movlb	1	; () banked
  2379  000810  51A8               	movf	recv_msg@qptr& (0+255),w,b
  2380  000812  26E1               	addwf	fsr1l,f,c
  2381  000814  0101               	movlb	1	; () banked
  2382  000816  51A9               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2383  000818  22E2               	addwfc	fsr1h,f,c
  2384  00081A  50E7               	movf	indf1,w,c
  2385  00081C  0101               	movlb	1	; () banked
  2386  00081E  6FAF               	movwf	??_recv_msg& (0+255),b
  2387  000820  0101               	movlb	1	; () banked
  2388  000822  29AF               	incf	??_recv_msg& (0+255),w,b
  2389  000824  0B03               	andlw	3
  2390  000826  6EDF               	movwf	indf2,c
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  2394  000828  0101               	movlb	1	; () banked
  2395  00082A  EE20 F002          	lfsr	2,2
  2396  00082E  0101               	movlb	1	; () banked
  2397  000830  51B4               	movf	recv_msg@qmsg& (0+255),w,b
  2398  000832  26D9               	addwf	fsr2l,f,c
  2399  000834  0101               	movlb	1	; () banked
  2400  000836  51B5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2401  000838  22DA               	addwfc	fsr2h,f,c
  2402  00083A  C1AB  FFE1         	movff	recv_msg@msgtype,fsr1l
  2403  00083E  C1AC  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2404  000842  CFDF FFE7          	movff	indf2,indf1
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;messages.c: 91: qmsg->full = 0;
  2408  000846  C1B4  FFD9         	movff	recv_msg@qmsg,fsr2l
  2409  00084A  C1B5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2410  00084E  0E00               	movlw	0
  2411  000850  6EDF               	movwf	indf2,c
  2412                           
  2413                           ; BSR set to: 1
  2414                           ;messages.c: 92: return (tlength);
  2415  000852  0101               	movlb	1	; () banked
  2416  000854  0101               	movlb	1	; () banked
  2417  000856  51B2               	movf	recv_msg@tlength& (0+255),w,b
  2418  000858  0012               	return	
  2419  00085A                     l2867:
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;messages.c: 94: return (-4);
  2423  00085A  0EFC               	movlw	252
  2424  00085C  0012               	return	
  2425  00085E                     __end_of_recv_msg:
  2426                           	opt stack 0
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           prodh	equ	0xFF4
  2432                           prodl	equ	0xFF3
  2433                           intcon	equ	0xFF2
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           indf1	equ	0xFE7
  2437                           fsr1h	equ	0xFE2
  2438                           fsr1l	equ	0xFE1
  2439                           indf2	equ	0xFDF
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _memcpy *****************
  2445 ;; Defined at:
  2446 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  d1              2    0[BANK1 ] PTR void 
  2449 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2450 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2451 ;;		 -> main@msgbuffer(11), 
  2452 ;;  s1              2    2[BANK1 ] PTR const void 
  2453 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2454 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2455 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  2456 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(40), 
  2457 ;;		 -> main@uc(5), 
  2458 ;;  n               2    4[BANK1 ] unsigned int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  2461 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2462 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2463 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  2464 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(40), 
  2465 ;;		 -> main@uc(5), 
  2466 ;;  d               2   35[BANK0 ] PTR unsigned char 
  2467 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2468 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2469 ;;		 -> main@msgbuffer(11), 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  2    0[BANK1 ] PTR void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2479 ;;      Params:         0       0       6       0       0
  2480 ;;      Locals:         0       4       0       0       0
  2481 ;;      Temps:          0       0       0       0       0
  2482 ;;      Totals:         0       4       6       0       0
  2483 ;;Total ram usage:       10 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:   10
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_recv_msg
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text15
  2494  000F3A                     __ptext15:
  2495                           	opt stack 0
  2496  000F3A                     _memcpy:
  2497                           	opt stack 17
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;incstack = 0
  2501  000F3A  0101               	movlb	1	; () banked
  2502  000F3C  0100               	movlb	0	; () banked
  2503  000F3E  C1A5  F0DC         	movff	memcpy@s1+1,memcpy@s+1
  2504  000F42  0101               	movlb	1	; () banked
  2505  000F44  0100               	movlb	0	; () banked
  2506  000F46  C1A4  F0DB         	movff	memcpy@s1,memcpy@s
  2507  000F4A  0101               	movlb	1	; () banked
  2508  000F4C  0100               	movlb	0	; () banked
  2509  000F4E  C1A3  F0DA         	movff	memcpy@d1+1,memcpy@d+1
  2510  000F52  0101               	movlb	1	; () banked
  2511  000F54  0100               	movlb	0	; () banked
  2512  000F56  C1A2  F0D9         	movff	memcpy@d1,memcpy@d
  2513  000F5A  D012               	goto	l2837
  2514  000F5C                     l2831:
  2515  000F5C  C0DB  FFD9         	movff	memcpy@s,fsr2l
  2516  000F60  C0DC  FFDA         	movff	memcpy@s+1,fsr2h
  2517  000F64  C0D9  FFE1         	movff	memcpy@d,fsr1l
  2518  000F68  C0DA  FFE2         	movff	memcpy@d+1,fsr1h
  2519  000F6C  CFDF FFE7          	movff	indf2,indf1
  2520  000F70  0100               	movlb	0	; () banked
  2521  000F72  0100               	movlb	0	; () banked
  2522  000F74  4BDB               	infsnz	memcpy@s& (0+255),f,b
  2523  000F76  2BDC               	incf	(memcpy@s+1)& (0+255),f,b
  2524                           
  2525                           ; BSR set to: 0
  2526  000F78  0100               	movlb	0	; () banked
  2527  000F7A  0100               	movlb	0	; () banked
  2528  000F7C  4BD9               	infsnz	memcpy@d& (0+255),f,b
  2529  000F7E  2BDA               	incf	(memcpy@d+1)& (0+255),f,b
  2530  000F80                     l2837:
  2531                           
  2532                           ; BSR set to: 0
  2533  000F80  0101               	movlb	1	; () banked
  2534  000F82  0101               	movlb	1	; () banked
  2535  000F84  07A6               	decf	memcpy@n& (0+255),f,b
  2536  000F86  A0D8               	btfss	status,0,c
  2537  000F88  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  2538  000F8A  0101               	movlb	1	; () banked
  2539  000F8C  29A6               	incf	memcpy@n& (0+255),w,b
  2540  000F8E  B4D8               	btfsc	status,2,c
  2541  000F90  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  2542  000F92  B4D8               	btfsc	status,2,c
  2543                           
  2544                           ; BSR set to: 1
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;	Return value of _memcpy is never used
  2548  000F94  0012               	return	
  2549  000F96  D7E2               	goto	l2831
  2550  000F98                     __end_of_memcpy:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           intcon	equ	0xFF2
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           indf1	equ	0xFE7
  2562                           fsr1h	equ	0xFE2
  2563                           fsr1l	equ	0xFE1
  2564                           indf2	equ	0xFDF
  2565                           fsr2h	equ	0xFDA
  2566                           fsr2l	equ	0xFD9
  2567                           status	equ	0xFD8
  2568                           
  2569 ;; *************** function _OpenTimer0 *****************
  2570 ;; Defined at:
  2571 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  config          1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  config          1   35[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         0       1       0       0       0
  2587 ;;      Temps:          0       0       0       0       0
  2588 ;;      Totals:         0       1       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:   10
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text16
  2600  0012A0                     __ptext16:
  2601                           	opt stack 0
  2602  0012A0                     _OpenTimer0:
  2603                           	opt stack 19
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;incstack = 0
  2607                           ;OpenTimer0@config stored from wreg
  2608  0012A0  CFE8 F0D9          	movff	wreg,OpenTimer0@config
  2609  0012A4  0100               	movlb	0	; () banked
  2610  0012A6  0100               	movlb	0	; () banked
  2611  0012A8  51D9               	movf	OpenTimer0@config& (0+255),w,b
  2612  0012AA  0B7F               	andlw	127
  2613  0012AC  6ED5               	movwf	4053,c	;volatile
  2614                           
  2615                           ; BSR set to: 0
  2616  0012AE  0E00               	movlw	0
  2617  0012B0  6ED7               	movwf	4055,c	;volatile
  2618                           
  2619                           ; BSR set to: 0
  2620  0012B2  0E00               	movlw	0
  2621  0012B4  6ED6               	movwf	4054,c	;volatile
  2622                           
  2623                           ; BSR set to: 0
  2624  0012B6  94F2               	bcf	intcon,2,c	;volatile
  2625                           
  2626                           ; BSR set to: 0
  2627  0012B8  0100               	movlb	0	; () banked
  2628  0012BA  0100               	movlb	0	; () banked
  2629  0012BC  AFD9               	btfss	OpenTimer0@config& (0+255),7,b
  2630  0012BE  D002               	goto	l422
  2631                           
  2632                           ; BSR set to: 0
  2633  0012C0  8AF2               	bsf	intcon,5,c	;volatile
  2634  0012C2  D001               	goto	l423
  2635  0012C4                     l422:
  2636                           
  2637                           ; BSR set to: 0
  2638  0012C4  9AF2               	bcf	intcon,5,c	;volatile
  2639  0012C6                     l423:
  2640                           
  2641                           ; BSR set to: 0
  2642  0012C6  8ED5               	bsf	4053,7,c	;volatile
  2643                           
  2644                           ; BSR set to: 0
  2645  0012C8  0012               	return	
  2646  0012CA                     __end_of_OpenTimer0:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           indf1	equ	0xFE7
  2658                           fsr1h	equ	0xFE2
  2659                           fsr1l	equ	0xFE1
  2660                           indf2	equ	0xFDF
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _OpenADC *****************
  2666 ;; Defined at:
  2667 ;;		line 68 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  config          1    wreg     unsigned char 
  2670 ;;  config2         1   35[BANK0 ] unsigned char 
  2671 ;;  portconfig      1   36[BANK0 ] unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  config          1    0[BANK1 ] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;		None               void
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2683 ;;      Params:         0       2       0       0       0
  2684 ;;      Locals:         0       0       1       0       0
  2685 ;;      Temps:          0       2       0       0       0
  2686 ;;      Totals:         0       4       1       0       0
  2687 ;;Total ram usage:        5 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:   10
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text17
  2698  000D50                     __ptext17:
  2699                           	opt stack 0
  2700  000D50                     _OpenADC:
  2701                           	opt stack 19
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;incstack = 0
  2705                           ;OpenADC@config stored from wreg
  2706  000D50  CFE8 F1A2          	movff	wreg,OpenADC@config
  2707  000D54  0E00               	movlw	0
  2708  000D56  6EC2               	movwf	4034,c	;volatile
  2709  000D58  0E00               	movlw	0
  2710  000D5A  6EC0               	movwf	4032,c	;volatile
  2711  000D5C  0100               	movlb	0	; () banked
  2712  000D5E  0100               	movlb	0	; () banked
  2713  000D60  90D8               	bcf	status,0,c
  2714  000D62  31D9               	rrcf	OpenADC@config2& (0+255),w,b
  2715  000D64  0B3C               	andlw	60
  2716  000D66  6EC2               	movwf	4034,c	;volatile
  2717                           
  2718                           ; BSR set to: 0
  2719  000D68  C0D9  F0DB         	movff	OpenADC@config2,??_OpenADC
  2720  000D6C  0100               	movlb	0	; () banked
  2721  000D6E  3BDB               	swapf	??_OpenADC& (0+255),f,b
  2722  000D70  0EF0               	movlw	240
  2723  000D72  17DB               	andwf	??_OpenADC& (0+255),f,b
  2724  000D74  0E30               	movlw	48
  2725  000D76  0100               	movlb	0	; () banked
  2726  000D78  17DB               	andwf	??_OpenADC& (0+255),f,b
  2727  000D7A  0100               	movlb	0	; () banked
  2728  000D7C  0100               	movlb	0	; () banked
  2729  000D7E  51DA               	movf	OpenADC@portconfig& (0+255),w,b
  2730  000D80  0B0F               	andlw	15
  2731  000D82  0100               	movlb	0	; () banked
  2732  000D84  11DB               	iorwf	??_OpenADC& (0+255),w,b
  2733  000D86  6EC1               	movwf	4033,c	;volatile
  2734                           
  2735                           ; BSR set to: 0
  2736  000D88  C1A2  F0DB         	movff	OpenADC@config,??_OpenADC
  2737  000D8C  0100               	movlb	0	; () banked
  2738  000D8E  90D8               	bcf	status,0,c
  2739  000D90  37DB               	rlcf	??_OpenADC& (0+255),f,b
  2740  000D92  0100               	movlb	0	; () banked
  2741  000D94  90D8               	bcf	status,0,c
  2742  000D96  37DB               	rlcf	??_OpenADC& (0+255),f,b
  2743  000D98  0E38               	movlw	56
  2744  000D9A  0100               	movlb	0	; () banked
  2745  000D9C  17DB               	andwf	??_OpenADC& (0+255),f,b
  2746  000D9E  C1A2  F0DC         	movff	OpenADC@config,??_OpenADC+1
  2747  000DA2  0100               	movlb	0	; () banked
  2748  000DA4  3BDC               	swapf	(??_OpenADC+1)& (0+255),f,b
  2749  000DA6  0E0F               	movlw	15
  2750  000DA8  17DC               	andwf	(??_OpenADC+1)& (0+255),f,b
  2751  000DAA  0E07               	movlw	7
  2752  000DAC  0100               	movlb	0	; () banked
  2753  000DAE  17DC               	andwf	(??_OpenADC+1)& (0+255),f,b
  2754  000DB0  0101               	movlb	1	; () banked
  2755  000DB2  0101               	movlb	1	; () banked
  2756  000DB4  51A2               	movf	OpenADC@config& (0+255),w,b
  2757  000DB6  0B80               	andlw	128
  2758  000DB8  0100               	movlb	0	; () banked
  2759  000DBA  11DC               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2760  000DBC  0100               	movlb	0	; () banked
  2761  000DBE  11DB               	iorwf	??_OpenADC& (0+255),w,b
  2762  000DC0  6EC0               	movwf	4032,c	;volatile
  2763                           
  2764                           ; BSR set to: 0
  2765  000DC2  0100               	movlb	0	; () banked
  2766  000DC4  0100               	movlb	0	; () banked
  2767  000DC6  AFD9               	btfss	OpenADC@config2& (0+255),7,b
  2768  000DC8  D003               	goto	l401
  2769                           
  2770                           ; BSR set to: 0
  2771  000DCA  9C9E               	bcf	3998,6,c	;volatile
  2772  000DCC  8C9D               	bsf	3997,6,c	;volatile
  2773  000DCE  8CF2               	bsf	intcon,6,c	;volatile
  2774  000DD0                     l401:
  2775                           
  2776                           ; BSR set to: 0
  2777  000DD0  80C2               	bsf	4034,0,c	;volatile
  2778                           
  2779                           ; BSR set to: 0
  2780  000DD2  0012               	return	
  2781  000DD4                     __end_of_OpenADC:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           intcon	equ	0xFF2
  2790                           postinc0	equ	0xFEE
  2791                           wreg	equ	0xFE8
  2792                           indf1	equ	0xFE7
  2793                           fsr1h	equ	0xFE2
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function _InterruptHandlerLow *****************
  2801 ;; Defined at:
  2802 ;;		line 130 in file "../src/interrupts.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2816 ;;      Params:         0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0
  2818 ;;      Temps:         17       0       0       0       0
  2819 ;;      Totals:        17       0       0       0       0
  2820 ;;Total ram usage:       17 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    9
  2823 ;; This function calls:
  2824 ;;		_timer1_int_handler
  2825 ;;		_uart_recv_int_handler
  2826 ;; This function is called by:
  2827 ;;		Interrupt level 1
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	intcodelo
  2832  000018                     __pintcodelo:
  2833                           	opt stack 0
  2834  000018                     _InterruptHandlerLow:
  2835                           	opt stack 16
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;incstack = 0
  2839  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  2840  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  2841  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  2842  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  2843  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  2844  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  2845  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  2846  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  2847  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  2848  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  2849  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  2850  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  2851  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  2852  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  2853  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  2854  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  2855  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  2856                           
  2857                           ;interrupts.c: 132: if (PIR1bits.TMR1IF) {
  2858  00005C  A09E               	btfss	3998,0,c	;volatile
  2859  00005E  D003               	goto	i1l2549
  2860                           
  2861                           ;interrupts.c: 133: PIR1bits.TMR1IF = 0;
  2862  000060  909E               	bcf	3998,0,c	;volatile
  2863                           
  2864                           ;interrupts.c: 134: timer1_int_handler();
  2865  000062  EC21  F009         	call	_timer1_int_handler	;wreg free
  2866  000066                     i1l2549:
  2867                           
  2868                           ;interrupts.c: 135: }
  2869                           ;interrupts.c: 138: if (PIR1bits.RCIF) {
  2870  000066  AA9E               	btfss	3998,5,c	;volatile
  2871  000068  D003               	goto	i1l52
  2872                           
  2873                           ;interrupts.c: 139: PIR1bits.RCIF = 0;
  2874  00006A  9A9E               	bcf	3998,5,c	;volatile
  2875                           
  2876                           ;interrupts.c: 140: uart_recv_int_handler();
  2877  00006C  ECC1  F005         	call	_uart_recv_int_handler	;wreg free
  2878  000070                     i1l52:
  2879  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  2880  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  2881  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  2882  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  2883  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  2884  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  2885  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  2886  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  2887  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  2888  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  2889  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  2890  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  2891  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  2892  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  2893  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  2894  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  2895  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  2896  0000B4  0010               	retfie	
  2897  0000B6                     __end_of_InterruptHandlerLow:
  2898                           	opt stack 0
  2899                           pclatu	equ	0xFFB
  2900                           pclath	equ	0xFFA
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           prodh	equ	0xFF4
  2906                           prodl	equ	0xFF3
  2907                           intcon	equ	0xFF2
  2908                           postinc0	equ	0xFEE
  2909                           fsr0h	equ	0xFEA
  2910                           fsr0l	equ	0xFE9
  2911                           wreg	equ	0xFE8
  2912                           indf1	equ	0xFE7
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           bsr	equ	0xFE0
  2916                           indf2	equ	0xFDF
  2917                           fsr2h	equ	0xFDA
  2918                           fsr2l	equ	0xFD9
  2919                           status	equ	0xFD8
  2920                           
  2921 ;; *************** function _uart_recv_int_handler *****************
  2922 ;; Defined at:
  2923 ;;		line 11 in file "../src/my_uart.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;		None               void
  2930 ;; Registers used:
  2931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2937 ;;      Params:         0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0
  2940 ;;      Totals:         1       0       0       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    8
  2944 ;; This function calls:
  2945 ;;		_ReadUSART
  2946 ;;		_ToMainLow_sendmsg
  2947 ;; This function is called by:
  2948 ;;		_InterruptHandlerLow
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text19
  2953  000B82                     __ptext19:
  2954                           	opt stack 0
  2955  000B82                     _uart_recv_int_handler:
  2956                           	opt stack 16
  2957                           
  2958                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  2959                           
  2960                           ;incstack = 0
  2961  000B82  AA9E               	btfss	3998,5,c	;volatile
  2962  000B84  D03C               	goto	i1l2537
  2963                           
  2964                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  2965  000B86  EE20 F004          	lfsr	2,4
  2966  000B8A  504E               	movf	_uc_ptr,w,c
  2967  000B8C  26D9               	addwf	fsr2l,f,c
  2968  000B8E  504F               	movf	_uc_ptr+1,w,c
  2969  000B90  22DA               	addwfc	fsr2h,f,c
  2970  000B92  50DF               	movf	indf2,w,c
  2971  000B94  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  2972  000B96  501B               	movf	??_uart_recv_int_handler,w,c
  2973  000B98  0D01               	mullw	1
  2974  000B9A  50F3               	movf	prodl,w,c
  2975  000B9C  244E               	addwf	_uc_ptr,w,c
  2976  000B9E  6ED9               	movwf	fsr2l,c
  2977  000BA0  50F4               	movf	prodh,w,c
  2978  000BA2  204F               	addwfc	_uc_ptr+1,w,c
  2979  000BA4  6EDA               	movwf	fsr2h,c
  2980  000BA6  ECC2  F009         	call	_ReadUSART	;wreg free
  2981  000BAA  6EDF               	movwf	indf2,c
  2982                           
  2983                           ;my_uart.c: 25: uc_ptr->buflen++;
  2984  000BAC  EE20 F004          	lfsr	2,4
  2985  000BB0  504E               	movf	_uc_ptr,w,c
  2986  000BB2  26D9               	addwf	fsr2l,f,c
  2987  000BB4  504F               	movf	_uc_ptr+1,w,c
  2988  000BB6  22DA               	addwfc	fsr2h,f,c
  2989  000BB8  2ADF               	incf	indf2,f,c
  2990                           
  2991                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  2992  000BBA  EE20 F004          	lfsr	2,4
  2993  000BBE  504E               	movf	_uc_ptr,w,c
  2994  000BC0  26D9               	addwf	fsr2l,f,c
  2995  000BC2  504F               	movf	_uc_ptr+1,w,c
  2996  000BC4  22DA               	addwfc	fsr2h,f,c
  2997  000BC6  0E04               	movlw	4
  2998  000BC8  62DF               	cpfseq	indf2,c
  2999  000BCA  D019               	goto	i1l2537
  3000                           
  3001                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  3002  000BCC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3003  000BCE  0E1F               	movlw	31
  3004  000BD0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3005  000BD2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  3006  000BD4  C04F  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  3007  000BD8  C04E  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  3008  000BDC  EE20 F004          	lfsr	2,4
  3009  000BE0  504E               	movf	_uc_ptr,w,c
  3010  000BE2  26D9               	addwf	fsr2l,f,c
  3011  000BE4  504F               	movf	_uc_ptr+1,w,c
  3012  000BE6  22DA               	addwfc	fsr2h,f,c
  3013  000BE8  50DF               	movf	indf2,w,c
  3014  000BEA  EC8E  F009         	call	_ToMainLow_sendmsg
  3015                           
  3016                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  3017  000BEE  EE20 F004          	lfsr	2,4
  3018  000BF2  504E               	movf	_uc_ptr,w,c
  3019  000BF4  26D9               	addwf	fsr2l,f,c
  3020  000BF6  504F               	movf	_uc_ptr+1,w,c
  3021  000BF8  22DA               	addwfc	fsr2h,f,c
  3022  000BFA  0E00               	movlw	0
  3023  000BFC  6EDF               	movwf	indf2,c
  3024  000BFE                     i1l2537:
  3025                           
  3026                           ;my_uart.c: 30: }
  3027                           ;my_uart.c: 31: }
  3028                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  3029  000BFE  A64B               	btfss	_USART_Status,3,c
  3030  000C00  0012               	return	
  3031                           
  3032                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  3033  000C02  98AB               	bcf	4011,4,c	;volatile
  3034                           
  3035                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  3036  000C04  88AB               	bsf	4011,4,c	;volatile
  3037                           
  3038                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  3039  000C06  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3040  000C08  0E1E               	movlw	30
  3041  000C0A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3042  000C0C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  3043  000C0E  0E00               	movlw	0
  3044  000C10  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  3045  000C12  0E00               	movlw	0
  3046  000C14  6E18               	movwf	ToMainLow_sendmsg@data,c
  3047  000C16  0E00               	movlw	0
  3048  000C18  EC8E  F009         	call	_ToMainLow_sendmsg
  3049  000C1C  0012               	return	
  3050  000C1E                     __end_of_uart_recv_int_handler:
  3051                           	opt stack 0
  3052                           pclatu	equ	0xFFB
  3053                           pclath	equ	0xFFA
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           intcon	equ	0xFF2
  3061                           postinc0	equ	0xFEE
  3062                           fsr0h	equ	0xFEA
  3063                           fsr0l	equ	0xFE9
  3064                           wreg	equ	0xFE8
  3065                           indf1	equ	0xFE7
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           bsr	equ	0xFE0
  3069                           indf2	equ	0xFDF
  3070                           fsr2h	equ	0xFDA
  3071                           fsr2l	equ	0xFD9
  3072                           status	equ	0xFD8
  3073                           
  3074 ;; *************** function _ReadUSART *****************
  3075 ;; Defined at:
  3076 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  data            1    0[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      unsigned char 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         1       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0
  3093 ;;      Totals:         1       0       0       0       0
  3094 ;;Total ram usage:        1 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    5
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_uart_recv_int_handler
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text20
  3105  001384                     __ptext20:
  3106                           	opt stack 0
  3107  001384                     _ReadUSART:
  3108                           	opt stack 18
  3109                           
  3110                           ;incstack = 0
  3111  001384  0EF2               	movlw	242
  3112  001386  164B               	andwf	_USART_Status,f,c
  3113  001388  ACAB               	btfss	4011,6,c	;volatile
  3114  00138A  D003               	goto	i1l456
  3115  00138C  904B               	bcf	_USART_Status,0,c
  3116  00138E  B0AB               	btfsc	4011,0,c	;volatile
  3117  001390  804B               	bsf	_USART_Status,0,c
  3118  001392                     i1l456:
  3119  001392  B4AB               	btfsc	4011,2,c	;volatile
  3120  001394  844B               	bsf	_USART_Status,2,c
  3121  001396  B2AB               	btfsc	4011,1,c	;volatile
  3122  001398  864B               	bsf	_USART_Status,3,c
  3123  00139A  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  3124  00139E  5001               	movf	ReadUSART@data,w,c
  3125  0013A0  0012               	return	
  3126  0013A2                     __end_of_ReadUSART:
  3127                           	opt stack 0
  3128                           pclatu	equ	0xFFB
  3129                           pclath	equ	0xFFA
  3130                           tblptru	equ	0xFF8
  3131                           tblptrh	equ	0xFF7
  3132                           tblptrl	equ	0xFF6
  3133                           tablat	equ	0xFF5
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           intcon	equ	0xFF2
  3137                           postinc0	equ	0xFEE
  3138                           fsr0h	equ	0xFEA
  3139                           fsr0l	equ	0xFE9
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           bsr	equ	0xFE0
  3145                           indf2	equ	0xFDF
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function _timer1_int_handler *****************
  3151 ;; Defined at:
  3152 ;;		line 42 in file "../src/user_interrupts.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  result          2   27[COMRAM] unsigned int 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;		None               void
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3166 ;;      Params:         0       0       0       0       0
  3167 ;;      Locals:         2       0       0       0       0
  3168 ;;      Temps:          1       0       0       0       0
  3169 ;;      Totals:         3       0       0       0       0
  3170 ;;Total ram usage:        3 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    8
  3173 ;; This function calls:
  3174 ;;		_ReadTimer1
  3175 ;;		_ToMainLow_sendmsg
  3176 ;;		_WriteTimer1
  3177 ;; This function is called by:
  3178 ;;		_InterruptHandlerLow
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text21
  3183  001242                     __ptext21:
  3184                           	opt stack 0
  3185  001242                     _timer1_int_handler:
  3186                           	opt stack 16
  3187                           
  3188                           ;user_interrupts.c: 43: unsigned int result;
  3189                           ;user_interrupts.c: 50: result = ReadTimer1();
  3190                           
  3191                           ;incstack = 0
  3192  001242  ECEE  F009         	call	_ReadTimer1	;wreg free
  3193  001246  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  3194  00124A  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  3195                           
  3196                           ;user_interrupts.c: 51: ToMainLow_sendmsg(0, 11, (void *) 0);
  3197  00124E  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  3198  001250  0E0B               	movlw	11
  3199  001252  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3200  001254  501B               	movf	??_timer1_int_handler& (0+255),w,c
  3201  001256  0E00               	movlw	0
  3202  001258  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  3203  00125A  0E00               	movlw	0
  3204  00125C  6E18               	movwf	ToMainLow_sendmsg@data,c
  3205  00125E  0E00               	movlw	0
  3206  001260  EC8E  F009         	call	_ToMainLow_sendmsg
  3207                           
  3208                           ;user_interrupts.c: 54: WriteTimer1(0);
  3209  001264  0E00               	movlw	0
  3210  001266  6E02               	movwf	WriteTimer1@timer1+1,c
  3211  001268  0E00               	movlw	0
  3212  00126A  6E01               	movwf	WriteTimer1@timer1,c
  3213  00126C  ECE5  F009         	call	_WriteTimer1	;wreg free
  3214  001270  0012               	return	
  3215  001272                     __end_of_timer1_int_handler:
  3216                           	opt stack 0
  3217                           pclatu	equ	0xFFB
  3218                           pclath	equ	0xFFA
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           postinc0	equ	0xFEE
  3227                           fsr0h	equ	0xFEA
  3228                           fsr0l	equ	0xFE9
  3229                           wreg	equ	0xFE8
  3230                           indf1	equ	0xFE7
  3231                           fsr1h	equ	0xFE2
  3232                           fsr1l	equ	0xFE1
  3233                           bsr	equ	0xFE0
  3234                           indf2	equ	0xFDF
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _WriteTimer1 *****************
  3240 ;; Defined at:
  3241 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  timer1          2    0[COMRAM] unsigned int 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  timer           2    2[COMRAM] struct Timers
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		None
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3255 ;;      Params:         2       0       0       0       0
  3256 ;;      Locals:         2       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         4       0       0       0       0
  3259 ;;Total ram usage:        4 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    5
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_timer1_int_handler
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text22
  3270  0013CA                     __ptext22:
  3271                           	opt stack 0
  3272  0013CA                     _WriteTimer1:
  3273                           	opt stack 18
  3274                           
  3275                           ;incstack = 0
  3276  0013CA  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3277  0013CE  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3278  0013D2  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3279  0013D6  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3280  0013DA  0012               	return	
  3281  0013DC                     __end_of_WriteTimer1:
  3282                           	opt stack 0
  3283                           pclatu	equ	0xFFB
  3284                           pclath	equ	0xFFA
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           postinc0	equ	0xFEE
  3293                           fsr0h	equ	0xFEA
  3294                           fsr0l	equ	0xFE9
  3295                           wreg	equ	0xFE8
  3296                           indf1	equ	0xFE7
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           bsr	equ	0xFE0
  3300                           indf2	equ	0xFDF
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function _ToMainLow_sendmsg *****************
  3306 ;; Defined at:
  3307 ;;		line 103 in file "../src/messages.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  length          1    wreg     unsigned char 
  3310 ;;  msgtype         1   22[COMRAM] unsigned char 
  3311 ;;  data            2   23[COMRAM] PTR void 
  3312 ;;		 -> timer0_lthread@val(2), NULL(0), main@uc(5), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  length          1   25[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      char 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3324 ;;      Params:         3       0       0       0       0
  3325 ;;      Locals:         1       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         4       0       0       0       0
  3328 ;;Total ram usage:        4 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    7
  3331 ;; This function calls:
  3332 ;;		_send_msg
  3333 ;; This function is called by:
  3334 ;;		_uart_recv_int_handler
  3335 ;;		_timer1_int_handler
  3336 ;;		_timer0_lthread
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text23
  3341  00131C                     __ptext23:
  3342                           	opt stack 0
  3343  00131C                     _ToMainLow_sendmsg:
  3344                           	opt stack 16
  3345                           
  3346                           ;incstack = 0
  3347                           ;ToMainLow_sendmsg@length stored from wreg
  3348  00131C  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  3349                           
  3350                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3351                           ;	Return value of _ToMainLow_sendmsg is never used
  3352  001320  0100               	movlb	0	; () banked
  3353  001322  0E00               	movlw	high _ToMainLow_MQ
  3354  001324  6E0C               	movwf	send_msg@qptr+1,c
  3355  001326  0100               	movlb	0	; () banked
  3356  001328  0E80               	movlw	low _ToMainLow_MQ
  3357  00132A  6E0B               	movwf	send_msg@qptr,c
  3358  00132C  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  3359  001330  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3360  001334  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3361  001338  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  3362  00133C  EC6C  F005         	call	_send_msg	;wreg free
  3363  001340  0012               	return	
  3364  001342                     __end_of_ToMainLow_sendmsg:
  3365                           	opt stack 0
  3366                           pclatu	equ	0xFFB
  3367                           pclath	equ	0xFFA
  3368                           tblptru	equ	0xFF8
  3369                           tblptrh	equ	0xFF7
  3370                           tblptrl	equ	0xFF6
  3371                           tablat	equ	0xFF5
  3372                           prodh	equ	0xFF4
  3373                           prodl	equ	0xFF3
  3374                           intcon	equ	0xFF2
  3375                           postinc0	equ	0xFEE
  3376                           fsr0h	equ	0xFEA
  3377                           fsr0l	equ	0xFE9
  3378                           wreg	equ	0xFE8
  3379                           indf1	equ	0xFE7
  3380                           fsr1h	equ	0xFE2
  3381                           fsr1l	equ	0xFE1
  3382                           bsr	equ	0xFE0
  3383                           indf2	equ	0xFDF
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function _send_msg *****************
  3389 ;; Defined at:
  3390 ;;		line 24 in file "../src/messages.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  3393 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3394 ;;  length          1   12[COMRAM] unsigned char 
  3395 ;;  msgtype         1   13[COMRAM] unsigned char 
  3396 ;;  data            2   14[COMRAM] PTR void 
  3397 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(40), 
  3398 ;;		 -> main@uc(5), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  3401 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3402 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3403 ;;  tlength         2   17[COMRAM] unsigned int 
  3404 ;;  slot            1   19[COMRAM] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      char 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3414 ;;      Params:         6       0       0       0       0
  3415 ;;      Locals:         5       0       0       0       0
  3416 ;;      Temps:          1       0       0       0       0
  3417 ;;      Totals:        12       0       0       0       0
  3418 ;;Total ram usage:       12 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:    6
  3421 ;; This function calls:
  3422 ;;		i1_memcpy
  3423 ;; This function is called by:
  3424 ;;		_ToMainLow_sendmsg
  3425 ;;		_FromMainLow_sendmsg
  3426 ;;		_FromMainHigh_sendmsg
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text24
  3431  000AD8                     __ptext24:
  3432                           	opt stack 0
  3433  000AD8                     _send_msg:
  3434                           	opt stack 16
  3435                           
  3436                           ;messages.c: 25: unsigned char slot;
  3437                           ;messages.c: 27: msg *qmsg;
  3438                           ;messages.c: 28: size_t tlength = length;
  3439                           
  3440                           ;incstack = 0
  3441  000AD8  C00D  F012         	movff	send_msg@length,send_msg@tlength
  3442  000ADC  6A13               	clrf	send_msg@tlength+1,c
  3443                           
  3444                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3445  000ADE  EE20 F034          	lfsr	2,52
  3446  000AE2  500B               	movf	send_msg@qptr,w,c
  3447  000AE4  26D9               	addwf	fsr2l,f,c
  3448  000AE6  500C               	movf	send_msg@qptr+1,w,c
  3449  000AE8  22DA               	addwfc	fsr2h,f,c
  3450  000AEA  50DF               	movf	indf2,w,c
  3451  000AEC  6E14               	movwf	send_msg@slot,c
  3452                           
  3453                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3454  000AEE  5014               	movf	send_msg@slot,w,c
  3455  000AF0  0D0D               	mullw	13
  3456  000AF2  50F3               	movf	prodl,w,c
  3457  000AF4  240B               	addwf	send_msg@qptr,w,c
  3458  000AF6  6E15               	movwf	send_msg@qmsg,c
  3459  000AF8  50F4               	movf	prodh,w,c
  3460  000AFA  200C               	addwfc	send_msg@qptr+1,w,c
  3461  000AFC  6E16               	movwf	send_msg@qmsg+1,c
  3462                           
  3463                           ;messages.c: 41: if (qmsg->full != 0) {
  3464  000AFE  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  3465  000B02  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3466  000B06  50DF               	movf	indf2,w,c
  3467  000B08  B4D8               	btfsc	status,2,c
  3468  000B0A  D002               	goto	i1l2503
  3469                           
  3470                           ;messages.c: 42: return (-1);
  3471  000B0C  0EFF               	movlw	255
  3472  000B0E  0012               	return	
  3473  000B10                     i1l2503:
  3474                           
  3475                           ;messages.c: 43: }
  3476                           ;messages.c: 46: qmsg->length = length;
  3477  000B10  EE20 F001          	lfsr	2,1
  3478  000B14  5015               	movf	send_msg@qmsg,w,c
  3479  000B16  26D9               	addwf	fsr2l,f,c
  3480  000B18  5016               	movf	send_msg@qmsg+1,w,c
  3481  000B1A  22DA               	addwfc	fsr2h,f,c
  3482  000B1C  C00D  FFDF         	movff	send_msg@length,indf2
  3483                           
  3484                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3485  000B20  EE20 F002          	lfsr	2,2
  3486  000B24  5015               	movf	send_msg@qmsg,w,c
  3487  000B26  26D9               	addwf	fsr2l,f,c
  3488  000B28  5016               	movf	send_msg@qmsg+1,w,c
  3489  000B2A  22DA               	addwfc	fsr2h,f,c
  3490  000B2C  C00E  FFDF         	movff	send_msg@msgtype,indf2
  3491                           
  3492                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3493  000B30  0E03               	movlw	3
  3494  000B32  2415               	addwf	send_msg@qmsg,w,c
  3495  000B34  6E01               	movwf	i1memcpy@d1,c
  3496  000B36  0E00               	movlw	0
  3497  000B38  2016               	addwfc	send_msg@qmsg+1,w,c
  3498  000B3A  6E02               	movwf	i1memcpy@d1+1,c
  3499  000B3C  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  3500  000B40  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  3501  000B44  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  3502  000B48  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  3503  000B4C  ECAA  F008         	call	i1_memcpy	;wreg free
  3504                           
  3505                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3506  000B50  EE20 F034          	lfsr	2,52
  3507  000B54  500B               	movf	send_msg@qptr,w,c
  3508  000B56  26D9               	addwf	fsr2l,f,c
  3509  000B58  500C               	movf	send_msg@qptr+1,w,c
  3510  000B5A  22DA               	addwfc	fsr2h,f,c
  3511  000B5C  EE10 F034          	lfsr	1,52
  3512  000B60  500B               	movf	send_msg@qptr,w,c
  3513  000B62  26E1               	addwf	fsr1l,f,c
  3514  000B64  500C               	movf	send_msg@qptr+1,w,c
  3515  000B66  22E2               	addwfc	fsr1h,f,c
  3516  000B68  50E7               	movf	indf1,w,c
  3517  000B6A  6E11               	movwf	??_send_msg& (0+255),c
  3518  000B6C  2811               	incf	??_send_msg,w,c
  3519  000B6E  0B03               	andlw	3
  3520  000B70  6EDF               	movwf	indf2,c
  3521                           
  3522                           ;messages.c: 59: qmsg->full = 1;
  3523  000B72  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  3524  000B76  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3525  000B7A  0E01               	movlw	1
  3526  000B7C  6EDF               	movwf	indf2,c
  3527                           
  3528                           ;messages.c: 60: return (1);
  3529  000B7E  0E01               	movlw	1
  3530  000B80  0012               	return	
  3531  000B82                     __end_of_send_msg:
  3532                           	opt stack 0
  3533                           pclatu	equ	0xFFB
  3534                           pclath	equ	0xFFA
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           postinc0	equ	0xFEE
  3543                           fsr0h	equ	0xFEA
  3544                           fsr0l	equ	0xFE9
  3545                           wreg	equ	0xFE8
  3546                           indf1	equ	0xFE7
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           bsr	equ	0xFE0
  3550                           indf2	equ	0xFDF
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function i1_memcpy *****************
  3556 ;; Defined at:
  3557 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  d1              2    0[COMRAM] PTR void 
  3560 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3561 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3562 ;;		 -> main@msgbuffer(11), 
  3563 ;;  s1              2    2[COMRAM] PTR const void 
  3564 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3565 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3566 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3567 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(40), 
  3568 ;;		 -> main@uc(5), 
  3569 ;;  n               2    4[COMRAM] unsigned int 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  3572 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3573 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3574 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3575 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(40), 
  3576 ;;		 -> main@uc(5), 
  3577 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  3578 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3579 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3580 ;;		 -> main@msgbuffer(11), 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    0[COMRAM] PTR void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3590 ;;      Params:         6       0       0       0       0
  3591 ;;      Locals:         4       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0
  3593 ;;      Totals:        10       0       0       0       0
  3594 ;;Total ram usage:       10 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    5
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_send_msg
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text25
  3605  001154                     __ptext25:
  3606                           	opt stack 0
  3607  001154                     i1_memcpy:
  3608                           	opt stack 16
  3609                           
  3610                           ;incstack = 0
  3611  001154  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  3612  001158  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  3613  00115C  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  3614  001160  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  3615  001164  D00E               	goto	i1l2479
  3616  001166                     i1l2473:
  3617  001166  C009  FFD9         	movff	i1memcpy@s,fsr2l
  3618  00116A  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  3619  00116E  C007  FFE1         	movff	i1memcpy@d,fsr1l
  3620  001172  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  3621  001176  CFDF FFE7          	movff	indf2,indf1
  3622  00117A  4A09               	infsnz	i1memcpy@s,f,c
  3623  00117C  2A0A               	incf	i1memcpy@s+1,f,c
  3624  00117E  4A07               	infsnz	i1memcpy@d,f,c
  3625  001180  2A08               	incf	i1memcpy@d+1,f,c
  3626  001182                     i1l2479:
  3627  001182  0605               	decf	i1memcpy@n,f,c
  3628  001184  A0D8               	btfss	status,0,c
  3629  001186  0606               	decf	i1memcpy@n+1,f,c
  3630  001188  2805               	incf	i1memcpy@n& (0+255),w,c
  3631  00118A  B4D8               	btfsc	status,2,c
  3632  00118C  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  3633  00118E  B4D8               	btfsc	status,2,c
  3634                           
  3635                           ;	Return value of i1_memcpy is never used
  3636  001190  0012               	return	
  3637  001192  D7E9               	goto	i1l2473
  3638  001194                     __end_ofi1_memcpy:
  3639                           	opt stack 0
  3640                           pclatu	equ	0xFFB
  3641                           pclath	equ	0xFFA
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           prodh	equ	0xFF4
  3647                           prodl	equ	0xFF3
  3648                           intcon	equ	0xFF2
  3649                           postinc0	equ	0xFEE
  3650                           fsr0h	equ	0xFEA
  3651                           fsr0l	equ	0xFE9
  3652                           wreg	equ	0xFE8
  3653                           indf1	equ	0xFE7
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           bsr	equ	0xFE0
  3657                           indf2	equ	0xFDF
  3658                           fsr2h	equ	0xFDA
  3659                           fsr2l	equ	0xFD9
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function _ReadTimer1 *****************
  3663 ;; Defined at:
  3664 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  timer           2    2[COMRAM] struct Timers
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2    0[COMRAM] unsigned int 
  3671 ;; Registers used:
  3672 ;;		None
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3678 ;;      Params:         2       0       0       0       0
  3679 ;;      Locals:         2       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0
  3681 ;;      Totals:         4       0       0       0       0
  3682 ;;Total ram usage:        4 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    5
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_timer1_int_handler
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text26
  3693  0013DC                     __ptext26:
  3694                           	opt stack 0
  3695  0013DC                     _ReadTimer1:
  3696                           	opt stack 18
  3697                           
  3698                           ;incstack = 0
  3699  0013DC  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  3700  0013E0  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  3701  0013E4  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  3702  0013E8  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  3703  0013EC  0012               	return	
  3704  0013EE                     __end_of_ReadTimer1:
  3705                           	opt stack 0
  3706                           pclatu	equ	0xFFB
  3707                           pclath	equ	0xFFA
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           postinc0	equ	0xFEE
  3716                           fsr0h	equ	0xFEA
  3717                           fsr0l	equ	0xFE9
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           bsr	equ	0xFE0
  3723                           indf2	equ	0xFDF
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _InterruptHandlerHigh *****************
  3729 ;; Defined at:
  3730 ;;		line 84 in file "../src/interrupts.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;		None               void
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3744 ;;      Params:         0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0
  3746 ;;      Temps:          0      15       0       0       0
  3747 ;;      Totals:         0      15       0       0       0
  3748 ;;Total ram usage:       15 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    4
  3751 ;; This function calls:
  3752 ;;		_SleepIfOkay
  3753 ;;		_adc_int_handler
  3754 ;;		_i2c_int_handler
  3755 ;;		_timer0_int_handler
  3756 ;; This function is called by:
  3757 ;;		Interrupt level 2
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	intcode
  3762  000008                     __pintcode:
  3763                           	opt stack 0
  3764  000008                     _InterruptHandlerHigh:
  3765                           	opt stack 16
  3766                           
  3767                           ;incstack = 0
  3768  000008  CFFA F0CB          	movff	pclath,??_InterruptHandlerHigh+1
  3769  00000C  CFFB F0CC          	movff	pclatu,??_InterruptHandlerHigh+2
  3770  000010  EF0A  F005         	goto	int_func
  3771                           pclatu	equ	0xFFB
  3772                           pclath	equ	0xFFA
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           prodh	equ	0xFF4
  3778                           prodl	equ	0xFF3
  3779                           intcon	equ	0xFF2
  3780                           postinc0	equ	0xFEE
  3781                           fsr0h	equ	0xFEA
  3782                           fsr0l	equ	0xFE9
  3783                           wreg	equ	0xFE8
  3784                           indf1	equ	0xFE7
  3785                           fsr1h	equ	0xFE2
  3786                           fsr1l	equ	0xFE1
  3787                           bsr	equ	0xFE0
  3788                           indf2	equ	0xFDF
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793                           	psect	intcode_body
  3794  000A14                     __pintcode_body:
  3795                           	opt stack 16
  3796  000A14                     int_func:
  3797                           	opt stack 16
  3798  000A14  CFE9 F0CD          	movff	fsr0l,??_InterruptHandlerHigh+3
  3799  000A18  CFEA F0CE          	movff	fsr0h,??_InterruptHandlerHigh+4
  3800  000A1C  CFE1 F0CF          	movff	fsr1l,??_InterruptHandlerHigh+5
  3801  000A20  CFE2 F0D0          	movff	fsr1h,??_InterruptHandlerHigh+6
  3802  000A24  CFD9 F0D1          	movff	fsr2l,??_InterruptHandlerHigh+7
  3803  000A28  CFDA F0D2          	movff	fsr2h,??_InterruptHandlerHigh+8
  3804  000A2C  CFF3 F0D3          	movff	prodl,??_InterruptHandlerHigh+9
  3805  000A30  CFF4 F0D4          	movff	prodh,??_InterruptHandlerHigh+10
  3806  000A34  CFF6 F0D5          	movff	tblptrl,??_InterruptHandlerHigh+11
  3807  000A38  CFF7 F0D6          	movff	tblptrh,??_InterruptHandlerHigh+12
  3808  000A3C  CFF8 F0D7          	movff	tblptru,??_InterruptHandlerHigh+13
  3809  000A40  CFF5 F0D8          	movff	tablat,??_InterruptHandlerHigh+14
  3810                           
  3811                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  3812  000A44  A69E               	btfss	3998,3,c	;volatile
  3813  000A46  D003               	goto	i2l2575
  3814                           
  3815                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  3816  000A48  969E               	bcf	3998,3,c	;volatile
  3817                           
  3818                           ;interrupts.c: 93: i2c_int_handler();
  3819  000A4A  EC5D  F000         	call	_i2c_int_handler	;wreg free
  3820  000A4E                     i2l2575:
  3821                           
  3822                           ;interrupts.c: 94: }
  3823                           ;interrupts.c: 95: if(PIR1bits.ADIF)
  3824  000A4E  AC9E               	btfss	3998,6,c	;volatile
  3825  000A50  D012               	goto	i2l2583
  3826                           
  3827                           ;interrupts.c: 96: {
  3828                           ;interrupts.c: 97: LATBbits.LATB1 = !LATBbits.LATB1;
  3829  000A52  B28A               	btfsc	3978,1,c	;volatile
  3830  000A54  D002               	goto	i2u160_40
  3831  000A56  0E01               	movlw	1
  3832  000A58  D001               	goto	i2u160_46
  3833  000A5A                     i2u160_40:
  3834  000A5A  0E00               	movlw	0
  3835  000A5C                     i2u160_46:
  3836  000A5C  0100               	movlb	0	; () banked
  3837  000A5E  6FCA               	movwf	??_InterruptHandlerHigh& (0+255),b
  3838  000A60  0100               	movlb	0	; () banked
  3839  000A62  47CA               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  3840  000A64  508A               	movf	3978,w,c	;volatile
  3841  000A66  0100               	movlb	0	; () banked
  3842  000A68  19CA               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  3843  000A6A  0BFD               	andlw	-3
  3844  000A6C  19CA               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  3845  000A6E  6E8A               	movwf	3978,c	;volatile
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;interrupts.c: 99: PIR1bits.ADIF = 0;
  3849  000A70  9C9E               	bcf	3998,6,c	;volatile
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;interrupts.c: 100: adc_int_handler();
  3853  000A72  ECEA  F008         	call	_adc_int_handler	;wreg free
  3854  000A76                     i2l2583:
  3855                           
  3856                           ;interrupts.c: 101: }
  3857                           ;interrupts.c: 103: if (INTCONbits.TMR0IF) {
  3858  000A76  A4F2               	btfss	intcon,2,c	;volatile
  3859  000A78  D010               	goto	i2l2591
  3860                           
  3861                           ;interrupts.c: 104: LATBbits.LATB0 = !LATBbits.LATB0;
  3862  000A7A  B08A               	btfsc	3978,0,c	;volatile
  3863  000A7C  D002               	goto	i2u162_40
  3864  000A7E  0E01               	movlw	1
  3865  000A80  D001               	goto	i2u162_46
  3866  000A82                     i2u162_40:
  3867  000A82  0E00               	movlw	0
  3868  000A84                     i2u162_46:
  3869  000A84  0100               	movlb	0	; () banked
  3870  000A86  6FCA               	movwf	??_InterruptHandlerHigh& (0+255),b
  3871  000A88  508A               	movf	3978,w,c	;volatile
  3872  000A8A  0100               	movlb	0	; () banked
  3873  000A8C  19CA               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  3874  000A8E  0BFE               	andlw	-2
  3875  000A90  19CA               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  3876  000A92  6E8A               	movwf	3978,c	;volatile
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;interrupts.c: 105: INTCONbits.TMR0IF = 0;
  3880  000A94  94F2               	bcf	intcon,2,c	;volatile
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;interrupts.c: 107: timer0_int_handler();
  3884  000A96  ECF7  F009         	call	_timer0_int_handler	;wreg free
  3885  000A9A                     i2l2591:
  3886                           
  3887                           ;interrupts.c: 108: }
  3888                           ;interrupts.c: 117: SleepIfOkay();
  3889  000A9A  ECFA  F007         	call	_SleepIfOkay	;wreg free
  3890  000A9E  C0D8  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  3891  000AA2  C0D7  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  3892  000AA6  C0D6  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  3893  000AAA  C0D5  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  3894  000AAE  C0D4  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  3895  000AB2  C0D3  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  3896  000AB6  C0D2  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  3897  000ABA  C0D1  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  3898  000ABE  C0D0  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  3899  000AC2  C0CF  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  3900  000AC6  C0CE  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  3901  000ACA  C0CD  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  3902  000ACE  C0CC  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  3903  000AD2  C0CB  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  3904  000AD6  0011               	retfie		f
  3905  000AD8                     __end_of_InterruptHandlerHigh:
  3906                           	opt stack 0
  3907                           pclatu	equ	0xFFB
  3908                           pclath	equ	0xFFA
  3909                           tblptru	equ	0xFF8
  3910                           tblptrh	equ	0xFF7
  3911                           tblptrl	equ	0xFF6
  3912                           tablat	equ	0xFF5
  3913                           prodh	equ	0xFF4
  3914                           prodl	equ	0xFF3
  3915                           intcon	equ	0xFF2
  3916                           postinc0	equ	0xFEE
  3917                           fsr0h	equ	0xFEA
  3918                           fsr0l	equ	0xFE9
  3919                           wreg	equ	0xFE8
  3920                           indf1	equ	0xFE7
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           bsr	equ	0xFE0
  3924                           indf2	equ	0xFDF
  3925                           fsr2h	equ	0xFDA
  3926                           fsr2l	equ	0xFD9
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function _timer0_int_handler *****************
  3930 ;; Defined at:
  3931 ;;		line 18 in file "../src/user_interrupts.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  msgtype         2    0        int 
  3936 ;;  length          2    0        int 
  3937 ;;  val             2    0        unsigned int 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;		None               void
  3940 ;; Registers used:
  3941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    1
  3954 ;; This function calls:
  3955 ;;		_ConvertADC
  3956 ;;		_WriteTimer0
  3957 ;; This function is called by:
  3958 ;;		_InterruptHandlerHigh
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text28
  3963  0013EE                     __ptext28:
  3964                           	opt stack 0
  3965  0013EE                     _timer0_int_handler:
  3966                           	opt stack 18
  3967                           
  3968                           ;user_interrupts.c: 19: unsigned int val;
  3969                           ;user_interrupts.c: 20: int length, msgtype;
  3970                           ;user_interrupts.c: 27: WriteTimer0(0);
  3971                           
  3972                           ;incstack = 0
  3973  0013EE  0E00               	movlw	0
  3974  0013F0  6E30               	movwf	WriteTimer0@timer0+1,c
  3975  0013F2  0E00               	movlw	0
  3976  0013F4  6E2F               	movwf	WriteTimer0@timer0,c
  3977  0013F6  EC00  F00A         	call	_WriteTimer0	;wreg free
  3978                           
  3979                           ;user_interrupts.c: 33: ConvertADC();
  3980  0013FA  EC1B  F00A         	call	_ConvertADC	;wreg free
  3981  0013FE  0012               	return	
  3982  001400                     __end_of_timer0_int_handler:
  3983                           	opt stack 0
  3984                           pclatu	equ	0xFFB
  3985                           pclath	equ	0xFFA
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           postinc0	equ	0xFEE
  3994                           fsr0h	equ	0xFEA
  3995                           fsr0l	equ	0xFE9
  3996                           wreg	equ	0xFE8
  3997                           indf1	equ	0xFE7
  3998                           fsr1h	equ	0xFE2
  3999                           fsr1l	equ	0xFE1
  4000                           bsr	equ	0xFE0
  4001                           indf2	equ	0xFDF
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _WriteTimer0 *****************
  4007 ;; Defined at:
  4008 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  timer0          2   46[COMRAM] unsigned int 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  timer           2   48[COMRAM] struct Timers
  4013 ;; Return value:  Size  Location     Type
  4014 ;;		None               void
  4015 ;; Registers used:
  4016 ;;		None
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4022 ;;      Params:         2       0       0       0       0
  4023 ;;      Locals:         2       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0
  4025 ;;      Totals:         4       0       0       0       0
  4026 ;;Total ram usage:        4 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_timer0_int_handler
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text29
  4036  001400                     __ptext29:
  4037                           	opt stack 0
  4038  001400                     _WriteTimer0:
  4039                           	opt stack 18
  4040                           
  4041                           ;incstack = 0
  4042  001400  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4043  001404  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4044  001408  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4045  00140C  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4046  001410  0012               	return	
  4047  001412                     __end_of_WriteTimer0:
  4048                           	opt stack 0
  4049                           pclatu	equ	0xFFB
  4050                           pclath	equ	0xFFA
  4051                           tblptru	equ	0xFF8
  4052                           tblptrh	equ	0xFF7
  4053                           tblptrl	equ	0xFF6
  4054                           tablat	equ	0xFF5
  4055                           prodh	equ	0xFF4
  4056                           prodl	equ	0xFF3
  4057                           intcon	equ	0xFF2
  4058                           postinc0	equ	0xFEE
  4059                           fsr0h	equ	0xFEA
  4060                           fsr0l	equ	0xFE9
  4061                           wreg	equ	0xFE8
  4062                           indf1	equ	0xFE7
  4063                           fsr1h	equ	0xFE2
  4064                           fsr1l	equ	0xFE1
  4065                           bsr	equ	0xFE0
  4066                           indf2	equ	0xFDF
  4067                           fsr2h	equ	0xFDA
  4068                           fsr2l	equ	0xFD9
  4069                           status	equ	0xFD8
  4070                           
  4071 ;; *************** function _ConvertADC *****************
  4072 ;; Defined at:
  4073 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;		None               void
  4080 ;; Registers used:
  4081 ;;		None
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_timer0_int_handler
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text30
  4101  001436                     __ptext30:
  4102                           	opt stack 0
  4103  001436                     _ConvertADC:
  4104                           	opt stack 18
  4105                           
  4106                           ;incstack = 0
  4107  001436  82C2               	bsf	4034,1,c	;volatile
  4108  001438  0012               	return	
  4109  00143A                     __end_of_ConvertADC:
  4110                           	opt stack 0
  4111                           pclatu	equ	0xFFB
  4112                           pclath	equ	0xFFA
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           prodh	equ	0xFF4
  4118                           prodl	equ	0xFF3
  4119                           intcon	equ	0xFF2
  4120                           postinc0	equ	0xFEE
  4121                           fsr0h	equ	0xFEA
  4122                           fsr0l	equ	0xFE9
  4123                           wreg	equ	0xFE8
  4124                           indf1	equ	0xFE7
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           bsr	equ	0xFE0
  4128                           indf2	equ	0xFDF
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _i2c_int_handler *****************
  4134 ;; Defined at:
  4135 ;;		line 131 in file "../src/my_i2c.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  error_buf       3   11[BANK0 ] unsigned char [3]
  4140 ;;  data_read       1   19[BANK0 ] unsigned char 
  4141 ;;  msg_ready       1   18[BANK0 ] unsigned char 
  4142 ;;  msg_to_send     1   17[BANK0 ] unsigned char 
  4143 ;;  i2c_data        1   16[BANK0 ] unsigned char 
  4144 ;;  overrun_erro    1   15[BANK0 ] unsigned char 
  4145 ;;  data_written    1   14[BANK0 ] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         0       9       0       0       0
  4157 ;;      Temps:          0       2       0       0       0
  4158 ;;      Totals:         0      11       0       0       0
  4159 ;;Total ram usage:       11 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    3
  4162 ;; This function calls:
  4163 ;;		_ToMainHigh_sendmsg
  4164 ;;		_handle_start
  4165 ;;		_start_i2c_slave_reply
  4166 ;; This function is called by:
  4167 ;;		_InterruptHandlerHigh
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text31
  4172  0000BA                     __ptext31:
  4173                           	opt stack 0
  4174  0000BA                     _i2c_int_handler:
  4175                           	opt stack 16
  4176                           
  4177                           ;my_i2c.c: 132: unsigned char i2c_data;
  4178                           ;my_i2c.c: 133: unsigned char data_read = 0;
  4179                           
  4180                           ;incstack = 0
  4181  0000BA  0100               	movlb	0	; () banked
  4182  0000BC  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4183  0000BE  0E00               	movlw	0
  4184  0000C0  0100               	movlb	0	; () banked
  4185  0000C2  0100               	movlb	0	; () banked
  4186  0000C4  6FC9               	movwf	i2c_int_handler@data_read& (0+255),b
  4187  0000C6  0100               	movlb	0	; () banked
  4188  0000C8  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4189                           
  4190                           ;my_i2c.c: 134: unsigned char data_written = 0;
  4191  0000CA  0100               	movlb	0	; () banked
  4192  0000CC  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4193  0000CE  0E00               	movlw	0
  4194  0000D0  0100               	movlb	0	; () banked
  4195  0000D2  0100               	movlb	0	; () banked
  4196  0000D4  6FC4               	movwf	i2c_int_handler@data_written& (0+255),b
  4197  0000D6  0100               	movlb	0	; () banked
  4198  0000D8  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4199                           
  4200                           ;my_i2c.c: 135: unsigned char msg_ready = 0;
  4201  0000DA  0100               	movlb	0	; () banked
  4202  0000DC  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4203  0000DE  0E00               	movlw	0
  4204  0000E0  0100               	movlb	0	; () banked
  4205  0000E2  0100               	movlb	0	; () banked
  4206  0000E4  6FC8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  4207  0000E6  0100               	movlb	0	; () banked
  4208  0000E8  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4209                           
  4210                           ;my_i2c.c: 136: unsigned char msg_to_send = 0;
  4211  0000EA  0100               	movlb	0	; () banked
  4212  0000EC  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4213  0000EE  0E00               	movlw	0
  4214  0000F0  0100               	movlb	0	; () banked
  4215  0000F2  0100               	movlb	0	; () banked
  4216  0000F4  6FC7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  4217  0000F6  0100               	movlb	0	; () banked
  4218  0000F8  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4219                           
  4220                           ;my_i2c.c: 137: unsigned char overrun_error = 0;
  4221  0000FA  0100               	movlb	0	; () banked
  4222  0000FC  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4223  0000FE  0E00               	movlw	0
  4224  000100  0100               	movlb	0	; () banked
  4225  000102  0100               	movlb	0	; () banked
  4226  000104  6FC5               	movwf	i2c_int_handler@overrun_error& (0+255),b
  4227  000106  0100               	movlb	0	; () banked
  4228  000108  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;my_i2c.c: 138: unsigned char error_buf[3];
  4232                           ;my_i2c.c: 141: if (SSPCON1bits.SSPOV == 1) {
  4233  00010A  ACC6               	btfss	4038,6,c	;volatile
  4234  00010C  D020               	goto	i2l2607
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;my_i2c.c: 142: SSPCON1bits.SSPOV = 0;
  4238  00010E  9CC6               	bcf	4038,6,c	;volatile
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;my_i2c.c: 146: ic_ptr->status = 0x5;
  4242  000110  EE20 F00C          	lfsr	2,12
  4243  000114  504C               	movf	_ic_ptr,w,c
  4244  000116  26D9               	addwf	fsr2l,f,c
  4245  000118  504D               	movf	_ic_ptr+1,w,c
  4246  00011A  22DA               	addwfc	fsr2h,f,c
  4247  00011C  0E05               	movlw	5
  4248  00011E  6EDF               	movwf	indf2,c
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;my_i2c.c: 147: overrun_error = 1;
  4252  000120  0100               	movlb	0	; () banked
  4253  000122  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4254  000124  0E01               	movlw	1
  4255  000126  0100               	movlb	0	; () banked
  4256  000128  0100               	movlb	0	; () banked
  4257  00012A  6FC5               	movwf	i2c_int_handler@overrun_error& (0+255),b
  4258  00012C  0100               	movlb	0	; () banked
  4259  00012E  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;my_i2c.c: 148: ic_ptr->error_count++;
  4263  000130  EE20 F00E          	lfsr	2,14
  4264  000134  504C               	movf	_ic_ptr,w,c
  4265  000136  26D9               	addwf	fsr2l,f,c
  4266  000138  504D               	movf	_ic_ptr+1,w,c
  4267  00013A  22DA               	addwfc	fsr2h,f,c
  4268  00013C  2ADF               	incf	indf2,f,c
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;my_i2c.c: 149: ic_ptr->error_code = 0x4;
  4272  00013E  EE20 F00D          	lfsr	2,13
  4273  000142  504C               	movf	_ic_ptr,w,c
  4274  000144  26D9               	addwf	fsr2l,f,c
  4275  000146  504D               	movf	_ic_ptr+1,w,c
  4276  000148  22DA               	addwfc	fsr2h,f,c
  4277  00014A  0E04               	movlw	4
  4278  00014C  6EDF               	movwf	indf2,c
  4279  00014E                     i2l2607:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;my_i2c.c: 150: }
  4283                           ;my_i2c.c: 152: if (SSPSTATbits.BF == 1) {
  4284  00014E  A0C7               	btfss	4039,0,c	;volatile
  4285  000150  D00A               	goto	i2l2613
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;my_i2c.c: 153: i2c_data = SSPBUF;
  4289  000152  CFC9 F0C6          	movff	4041,i2c_int_handler@i2c_data	;volatile
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;my_i2c.c: 154: data_read = 1;
  4293  000156  0100               	movlb	0	; () banked
  4294  000158  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4295  00015A  0E01               	movlw	1
  4296  00015C  0100               	movlb	0	; () banked
  4297  00015E  0100               	movlb	0	; () banked
  4298  000160  6FC9               	movwf	i2c_int_handler@data_read& (0+255),b
  4299  000162  0100               	movlb	0	; () banked
  4300  000164  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4301  000166                     i2l2613:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;my_i2c.c: 155: }
  4305                           ;my_i2c.c: 157: if (!overrun_error) {
  4306  000166  0100               	movlb	0	; () banked
  4307  000168  0100               	movlb	0	; () banked
  4308  00016A  67C5               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  4309  00016C  D174               	goto	i2l252
  4310  00016E  D160               	goto	i2l2701
  4311  000170                     i2l254:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;my_i2c.c: 160: {
  4315                           ;my_i2c.c: 162: if (SSPSTATbits.S == 1) {
  4316  000170  A6C7               	btfss	4039,3,c	;volatile
  4317  000172  D171               	goto	i2l252
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;my_i2c.c: 163: handle_start(data_read);
  4321  000174  0100               	movlb	0	; () banked
  4322  000176  0100               	movlb	0	; () banked
  4323  000178  51C9               	movf	i2c_int_handler@data_read& (0+255),w,b
  4324  00017A  EC5C  F006         	call	_handle_start
  4325                           
  4326                           ;my_i2c.c: 165: if (ic_ptr->status == 0x8) {
  4327  00017E  EE20 F00C          	lfsr	2,12
  4328  000182  504C               	movf	_ic_ptr,w,c
  4329  000184  26D9               	addwf	fsr2l,f,c
  4330  000186  504D               	movf	_ic_ptr+1,w,c
  4331  000188  22DA               	addwfc	fsr2h,f,c
  4332  00018A  0E08               	movlw	8
  4333  00018C  62DF               	cpfseq	indf2,c
  4334  00018E  D163               	goto	i2l252
  4335                           
  4336                           ;my_i2c.c: 166: data_read = 0;
  4337  000190  0100               	movlb	0	; () banked
  4338  000192  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4339  000194  0E00               	movlw	0
  4340  000196  0100               	movlb	0	; () banked
  4341  000198  0100               	movlb	0	; () banked
  4342  00019A  6FC9               	movwf	i2c_int_handler@data_read& (0+255),b
  4343  00019C  0100               	movlb	0	; () banked
  4344  00019E  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4345                           
  4346                           ;my_i2c.c: 167: msg_to_send = 1;
  4347  0001A0  0100               	movlb	0	; () banked
  4348  0001A2  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4349  0001A4  0E01               	movlw	1
  4350  0001A6  0100               	movlb	0	; () banked
  4351  0001A8  0100               	movlb	0	; () banked
  4352  0001AA  6FC7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  4353  0001AC  D136               	goto	L6
  4354  0001AE                     i2l258:
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;my_i2c.c: 173: {
  4358                           ;my_i2c.c: 175: if (SSPSTATbits.P == 1) {
  4359  0001AE  A8C7               	btfss	4039,4,c	;volatile
  4360  0001B0  D027               	goto	i2l2633
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;my_i2c.c: 178: ic_ptr->event_count++;
  4364  0001B2  EE20 F00B          	lfsr	2,11
  4365  0001B6  504C               	movf	_ic_ptr,w,c
  4366  0001B8  26D9               	addwf	fsr2l,f,c
  4367  0001BA  504D               	movf	_ic_ptr+1,w,c
  4368  0001BC  22DA               	addwfc	fsr2h,f,c
  4369  0001BE  2ADF               	incf	indf2,f,c
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;my_i2c.c: 179: if (data_read) {
  4373  0001C0  0100               	movlb	0	; () banked
  4374  0001C2  0100               	movlb	0	; () banked
  4375  0001C4  51C9               	movf	i2c_int_handler@data_read& (0+255),w,b
  4376  0001C6  B4D8               	btfsc	status,2,c
  4377  0001C8  D12B               	goto	L8
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;my_i2c.c: 180: if (SSPSTATbits.D_A == 0) {
  4381  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  4382  0001CC  D009               	goto	i2l2631
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;my_i2c.c: 181: msg_ready = 1;
  4386  0001CE  0100               	movlb	0	; () banked
  4387  0001D0  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4388  0001D2  0E01               	movlw	1
  4389  0001D4  0100               	movlb	0	; () banked
  4390  0001D6  0100               	movlb	0	; () banked
  4391  0001D8  6FC8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  4392  0001DA  0100               	movlb	0	; () banked
  4393  0001DC  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4394                           
  4395                           ;my_i2c.c: 182: } else {
  4396  0001DE  D120               	goto	L8
  4397  0001E0                     i2l2631:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;my_i2c.c: 183: ic_ptr->error_count++;
  4401  0001E0  EE20 F00E          	lfsr	2,14
  4402  0001E4  504C               	movf	_ic_ptr,w,c
  4403  0001E6  26D9               	addwf	fsr2l,f,c
  4404  0001E8  504D               	movf	_ic_ptr+1,w,c
  4405  0001EA  22DA               	addwfc	fsr2h,f,c
  4406  0001EC  2ADF               	incf	indf2,f,c
  4407                           
  4408                           ;my_i2c.c: 184: ic_ptr->error_code = 0x6;
  4409  0001EE  EE20 F00D          	lfsr	2,13
  4410  0001F2  504C               	movf	_ic_ptr,w,c
  4411  0001F4  26D9               	addwf	fsr2l,f,c
  4412  0001F6  504D               	movf	_ic_ptr+1,w,c
  4413  0001F8  22DA               	addwfc	fsr2h,f,c
  4414  0001FA  0E06               	movlw	6
  4415  0001FC  6EDF               	movwf	indf2,c
  4416                           
  4417                           ; BSR set to: 0
  4418  0001FE  D110               	goto	L8
  4419  000200                     i2l2633:
  4420                           
  4421                           ; BSR set to: 0
  4422  000200  0100               	movlb	0	; () banked
  4423  000202  0100               	movlb	0	; () banked
  4424  000204  51C9               	movf	i2c_int_handler@data_read& (0+255),w,b
  4425  000206  B4D8               	btfsc	status,2,c
  4426  000208  D126               	goto	i2l252
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;my_i2c.c: 189: ic_ptr->event_count++;
  4430  00020A  EE20 F00B          	lfsr	2,11
  4431  00020E  504C               	movf	_ic_ptr,w,c
  4432  000210  26D9               	addwf	fsr2l,f,c
  4433  000212  504D               	movf	_ic_ptr+1,w,c
  4434  000214  22DA               	addwfc	fsr2h,f,c
  4435  000216  2ADF               	incf	indf2,f,c
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;my_i2c.c: 190: if (SSPSTATbits.D_A == 0) {
  4439  000218  BAC7               	btfsc	4039,5,c	;volatile
  4440  00021A  D013               	goto	i2l2649
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;my_i2c.c: 191: if (SSPSTATbits.R_W == 0) {
  4444  00021C  B4C7               	btfsc	4039,2,c	;volatile
  4445  00021E  D008               	goto	i2l2643
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;my_i2c.c: 192: ic_ptr->status = 0x7;
  4449  000220  EE20 F00C          	lfsr	2,12
  4450  000224  504C               	movf	_ic_ptr,w,c
  4451  000226  26D9               	addwf	fsr2l,f,c
  4452  000228  504D               	movf	_ic_ptr+1,w,c
  4453  00022A  22DA               	addwfc	fsr2h,f,c
  4454  00022C  0E07               	movlw	7
  4455  00022E  D05A               	goto	L5
  4456  000230                     i2l2643:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;my_i2c.c: 194: ic_ptr->status = 0x8;
  4460  000230  EE20 F00C          	lfsr	2,12
  4461  000234  504C               	movf	_ic_ptr,w,c
  4462  000236  26D9               	addwf	fsr2l,f,c
  4463  000238  504D               	movf	_ic_ptr+1,w,c
  4464  00023A  22DA               	addwfc	fsr2h,f,c
  4465  00023C  0E08               	movlw	8
  4466  00023E  6EDF               	movwf	indf2,c
  4467  000240  D0DE               	goto	L9
  4468  000242                     i2l2649:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;my_i2c.c: 200: ic_ptr->error_count++;
  4472  000242  EE20 F00E          	lfsr	2,14
  4473  000246  504C               	movf	_ic_ptr,w,c
  4474  000248  26D9               	addwf	fsr2l,f,c
  4475  00024A  504D               	movf	_ic_ptr+1,w,c
  4476  00024C  22DA               	addwfc	fsr2h,f,c
  4477  00024E  2ADF               	incf	indf2,f,c
  4478                           
  4479                           ;my_i2c.c: 201: ic_ptr->status = 0x5;
  4480  000250  EE20 F00C          	lfsr	2,12
  4481  000254  504C               	movf	_ic_ptr,w,c
  4482  000256  26D9               	addwf	fsr2l,f,c
  4483  000258  504D               	movf	_ic_ptr+1,w,c
  4484  00025A  22DA               	addwfc	fsr2h,f,c
  4485  00025C  0E05               	movlw	5
  4486  00025E  6EDF               	movwf	indf2,c
  4487                           
  4488                           ;my_i2c.c: 202: ic_ptr->error_code = 0x6;
  4489  000260  EE20 F00D          	lfsr	2,13
  4490  000264  504C               	movf	_ic_ptr,w,c
  4491  000266  26D9               	addwf	fsr2l,f,c
  4492  000268  504D               	movf	_ic_ptr+1,w,c
  4493  00026A  22DA               	addwfc	fsr2h,f,c
  4494  00026C  0E06               	movlw	6
  4495  00026E  D03A               	goto	L5
  4496  000270                     i2l2651:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;my_i2c.c: 208: {
  4500                           ;my_i2c.c: 209: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  4501  000270  EE20 F01A          	lfsr	2,26
  4502  000274  504C               	movf	_ic_ptr,w,c
  4503  000276  26D9               	addwf	fsr2l,f,c
  4504  000278  504D               	movf	_ic_ptr+1,w,c
  4505  00027A  22DA               	addwfc	fsr2h,f,c
  4506  00027C  50DF               	movf	indf2,w,c
  4507  00027E  0100               	movlb	0	; () banked
  4508  000280  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4509  000282  EE20 F019          	lfsr	2,25
  4510  000286  504C               	movf	_ic_ptr,w,c
  4511  000288  26D9               	addwf	fsr2l,f,c
  4512  00028A  504D               	movf	_ic_ptr+1,w,c
  4513  00028C  22DA               	addwfc	fsr2h,f,c
  4514  00028E  50DF               	movf	indf2,w,c
  4515  000290  0100               	movlb	0	; () banked
  4516  000292  5DBF               	subwf	??_i2c_int_handler& (0+255),w,b
  4517  000294  B0D8               	btfsc	status,0,c
  4518  000296  D0C4               	goto	L8
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;my_i2c.c: 210: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4522  000298  EE20 F01A          	lfsr	2,26
  4523  00029C  504C               	movf	_ic_ptr,w,c
  4524  00029E  26D9               	addwf	fsr2l,f,c
  4525  0002A0  504D               	movf	_ic_ptr+1,w,c
  4526  0002A2  22DA               	addwfc	fsr2h,f,c
  4527  0002A4  50DF               	movf	indf2,w,c
  4528  0002A6  0100               	movlb	0	; () banked
  4529  0002A8  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4530  0002AA  0100               	movlb	0	; () banked
  4531  0002AC  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4532  0002AE  0D01               	mullw	1
  4533  0002B0  0E0F               	movlw	15
  4534  0002B2  26F3               	addwf	prodl,f,c
  4535  0002B4  0E00               	movlw	0
  4536  0002B6  22F4               	addwfc	prodh,f,c
  4537  0002B8  50F3               	movf	prodl,w,c
  4538  0002BA  244C               	addwf	_ic_ptr,w,c
  4539  0002BC  6ED9               	movwf	fsr2l,c
  4540  0002BE  50F4               	movf	prodh,w,c
  4541  0002C0  204D               	addwfc	_ic_ptr+1,w,c
  4542  0002C2  6EDA               	movwf	fsr2h,c
  4543  0002C4  50DF               	movf	indf2,w,c
  4544  0002C6  6EC9               	movwf	4041,c	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;my_i2c.c: 211: ic_ptr->outbufind++;
  4548  0002C8  EE20 F01A          	lfsr	2,26
  4549  0002CC  504C               	movf	_ic_ptr,w,c
  4550  0002CE  26D9               	addwf	fsr2l,f,c
  4551  0002D0  504D               	movf	_ic_ptr+1,w,c
  4552  0002D2  22DA               	addwfc	fsr2h,f,c
  4553  0002D4  2ADF               	incf	indf2,f,c
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;my_i2c.c: 212: data_written = 1;
  4557  0002D6  0100               	movlb	0	; () banked
  4558  0002D8  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4559  0002DA  0E01               	movlw	1
  4560  0002DC  0100               	movlb	0	; () banked
  4561  0002DE  0100               	movlb	0	; () banked
  4562  0002E0  6FC4               	movwf	i2c_int_handler@data_written& (0+255),b
  4563  0002E2  D09B               	goto	L6
  4564  0002E4                     L5:
  4565  0002E4  6EDF               	movwf	indf2,c
  4566  0002E6  D0B7               	goto	i2l252
  4567  0002E8                     i2l272:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;my_i2c.c: 220: {
  4571                           ;my_i2c.c: 222: if (SSPSTATbits.P == 1) {
  4572  0002E8  A8C7               	btfss	4039,4,c	;volatile
  4573  0002EA  D04C               	goto	i2l2679
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;my_i2c.c: 224: ic_ptr->event_count++;
  4577  0002EC  EE20 F00B          	lfsr	2,11
  4578  0002F0  504C               	movf	_ic_ptr,w,c
  4579  0002F2  26D9               	addwf	fsr2l,f,c
  4580  0002F4  504D               	movf	_ic_ptr+1,w,c
  4581  0002F6  22DA               	addwfc	fsr2h,f,c
  4582  0002F8  2ADF               	incf	indf2,f,c
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;my_i2c.c: 225: if (data_read) {
  4586  0002FA  0100               	movlb	0	; () banked
  4587  0002FC  0100               	movlb	0	; () banked
  4588  0002FE  51C9               	movf	i2c_int_handler@data_read& (0+255),w,b
  4589  000300  B4D8               	btfsc	status,2,c
  4590  000302  D037               	goto	i2l2675
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;my_i2c.c: 226: if (SSPSTATbits.D_A == 1) {
  4594  000304  AAC7               	btfss	4039,5,c	;volatile
  4595  000306  D01D               	goto	i2l2673
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;my_i2c.c: 227: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  4599  000308  EE20 F00A          	lfsr	2,10
  4600  00030C  504C               	movf	_ic_ptr,w,c
  4601  00030E  26D9               	addwf	fsr2l,f,c
  4602  000310  504D               	movf	_ic_ptr+1,w,c
  4603  000312  22DA               	addwfc	fsr2h,f,c
  4604  000314  50DF               	movf	indf2,w,c
  4605  000316  0100               	movlb	0	; () banked
  4606  000318  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4607  00031A  0100               	movlb	0	; () banked
  4608  00031C  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4609  00031E  0D01               	mullw	1
  4610  000320  50F3               	movf	prodl,w,c
  4611  000322  244C               	addwf	_ic_ptr,w,c
  4612  000324  6ED9               	movwf	fsr2l,c
  4613  000326  50F4               	movf	prodh,w,c
  4614  000328  204D               	addwfc	_ic_ptr+1,w,c
  4615  00032A  6EDA               	movwf	fsr2h,c
  4616  00032C  0100               	movlb	0	; () banked
  4617  00032E  C0C6  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;my_i2c.c: 228: ic_ptr->buflen++;
  4621  000332  EE20 F00A          	lfsr	2,10
  4622  000336  504C               	movf	_ic_ptr,w,c
  4623  000338  26D9               	addwf	fsr2l,f,c
  4624  00033A  504D               	movf	_ic_ptr+1,w,c
  4625  00033C  22DA               	addwfc	fsr2h,f,c
  4626  00033E  2ADF               	incf	indf2,f,c
  4627  000340  D018               	goto	i2l2675
  4628  000342                     i2l2673:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;my_i2c.c: 231: ic_ptr->error_count++;
  4632  000342  EE20 F00E          	lfsr	2,14
  4633  000346  504C               	movf	_ic_ptr,w,c
  4634  000348  26D9               	addwf	fsr2l,f,c
  4635  00034A  504D               	movf	_ic_ptr+1,w,c
  4636  00034C  22DA               	addwfc	fsr2h,f,c
  4637  00034E  2ADF               	incf	indf2,f,c
  4638                           
  4639                           ;my_i2c.c: 232: ic_ptr->error_code = 0x6;
  4640  000350  EE20 F00D          	lfsr	2,13
  4641  000354  504C               	movf	_ic_ptr,w,c
  4642  000356  26D9               	addwf	fsr2l,f,c
  4643  000358  504D               	movf	_ic_ptr+1,w,c
  4644  00035A  22DA               	addwfc	fsr2h,f,c
  4645  00035C  0E06               	movlw	6
  4646  00035E  6EDF               	movwf	indf2,c
  4647                           
  4648                           ;my_i2c.c: 233: ic_ptr->status = 0x5;
  4649  000360  EE20 F00C          	lfsr	2,12
  4650  000364  504C               	movf	_ic_ptr,w,c
  4651  000366  26D9               	addwf	fsr2l,f,c
  4652  000368  504D               	movf	_ic_ptr+1,w,c
  4653  00036A  22DA               	addwfc	fsr2h,f,c
  4654  00036C  0E05               	movlw	5
  4655  00036E  6EDF               	movwf	indf2,c
  4656  000370  D057               	goto	L8
  4657  000372                     i2l2675:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;my_i2c.c: 236: msg_ready = 1;
  4661  000372  0100               	movlb	0	; () banked
  4662  000374  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4663  000376  0E01               	movlw	1
  4664  000378  0100               	movlb	0	; () banked
  4665  00037A  0100               	movlb	0	; () banked
  4666  00037C  6FC8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  4667  00037E  0100               	movlb	0	; () banked
  4668  000380  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4669                           
  4670                           ; BSR set to: 0
  4671  000382  D04E               	goto	L8
  4672  000384                     i2l2679:
  4673                           
  4674                           ; BSR set to: 0
  4675  000384  0100               	movlb	0	; () banked
  4676  000386  0100               	movlb	0	; () banked
  4677  000388  51C9               	movf	i2c_int_handler@data_read& (0+255),w,b
  4678  00038A  B4D8               	btfsc	status,2,c
  4679  00038C  D064               	goto	i2l252
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;my_i2c.c: 240: ic_ptr->event_count++;
  4683  00038E  EE20 F00B          	lfsr	2,11
  4684  000392  504C               	movf	_ic_ptr,w,c
  4685  000394  26D9               	addwf	fsr2l,f,c
  4686  000396  504D               	movf	_ic_ptr+1,w,c
  4687  000398  22DA               	addwfc	fsr2h,f,c
  4688  00039A  2ADF               	incf	indf2,f,c
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;my_i2c.c: 241: if (SSPSTATbits.D_A == 1) {
  4692  00039C  AAC7               	btfss	4039,5,c	;volatile
  4693  00039E  D01D               	goto	i2l280
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;my_i2c.c: 242: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  4697  0003A0  EE20 F00A          	lfsr	2,10
  4698  0003A4  504C               	movf	_ic_ptr,w,c
  4699  0003A6  26D9               	addwf	fsr2l,f,c
  4700  0003A8  504D               	movf	_ic_ptr+1,w,c
  4701  0003AA  22DA               	addwfc	fsr2h,f,c
  4702  0003AC  50DF               	movf	indf2,w,c
  4703  0003AE  0100               	movlb	0	; () banked
  4704  0003B0  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4705  0003B2  0100               	movlb	0	; () banked
  4706  0003B4  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4707  0003B6  0D01               	mullw	1
  4708  0003B8  50F3               	movf	prodl,w,c
  4709  0003BA  244C               	addwf	_ic_ptr,w,c
  4710  0003BC  6ED9               	movwf	fsr2l,c
  4711  0003BE  50F4               	movf	prodh,w,c
  4712  0003C0  204D               	addwfc	_ic_ptr+1,w,c
  4713  0003C2  6EDA               	movwf	fsr2h,c
  4714  0003C4  0100               	movlb	0	; () banked
  4715  0003C6  C0C6  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;my_i2c.c: 243: ic_ptr->buflen++;
  4719  0003CA  EE20 F00A          	lfsr	2,10
  4720  0003CE  504C               	movf	_ic_ptr,w,c
  4721  0003D0  26D9               	addwf	fsr2l,f,c
  4722  0003D2  504D               	movf	_ic_ptr+1,w,c
  4723  0003D4  22DA               	addwfc	fsr2h,f,c
  4724  0003D6  2ADF               	incf	indf2,f,c
  4725                           
  4726                           ;my_i2c.c: 244: } else {
  4727  0003D8  D03E               	goto	i2l252
  4728  0003DA                     i2l280:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;my_i2c.c: 245: if (SSPSTATbits.R_W == 1) {
  4732  0003DA  A4C7               	btfss	4039,2,c	;volatile
  4733  0003DC  D701               	goto	i2l2631
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;my_i2c.c: 246: ic_ptr->status = 0x8;
  4737  0003DE  EE20 F00C          	lfsr	2,12
  4738  0003E2  504C               	movf	_ic_ptr,w,c
  4739  0003E4  26D9               	addwf	fsr2l,f,c
  4740  0003E6  504D               	movf	_ic_ptr+1,w,c
  4741  0003E8  22DA               	addwfc	fsr2h,f,c
  4742  0003EA  0E08               	movlw	8
  4743  0003EC  6EDF               	movwf	indf2,c
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;my_i2c.c: 247: msg_ready = 1;
  4747  0003EE  0100               	movlb	0	; () banked
  4748  0003F0  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4749  0003F2  0E01               	movlw	1
  4750  0003F4  0100               	movlb	0	; () banked
  4751  0003F6  0100               	movlb	0	; () banked
  4752  0003F8  6FC8               	movwf	i2c_int_handler@msg_ready& (0+255),b
  4753  0003FA  0100               	movlb	0	; () banked
  4754  0003FC  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4755  0003FE                     L9:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;my_i2c.c: 248: msg_to_send = 1;
  4759  0003FE  0100               	movlb	0	; () banked
  4760  000400  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4761  000402  0E01               	movlw	1
  4762  000404  0100               	movlb	0	; () banked
  4763  000406  0100               	movlb	0	; () banked
  4764  000408  6FC7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  4765  00040A  0100               	movlb	0	; () banked
  4766  00040C  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;my_i2c.c: 250: data_read = 0;
  4770  00040E  0100               	movlb	0	; () banked
  4771  000410  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4772  000412  0E00               	movlw	0
  4773  000414  0100               	movlb	0	; () banked
  4774  000416  0100               	movlb	0	; () banked
  4775  000418  6FC9               	movwf	i2c_int_handler@data_read& (0+255),b
  4776  00041A                     L6:
  4777  00041A  0100               	movlb	0	; () banked
  4778  00041C  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4779                           
  4780                           ;my_i2c.c: 251: } else {
  4781  00041E  D01B               	goto	i2l252
  4782  000420                     L8:
  4783                           
  4784                           ;my_i2c.c: 254: ic_ptr->status = 0x5;
  4785  000420  EE20 F00C          	lfsr	2,12
  4786  000424  504C               	movf	_ic_ptr,w,c
  4787  000426  26D9               	addwf	fsr2l,f,c
  4788  000428  504D               	movf	_ic_ptr+1,w,c
  4789  00042A  22DA               	addwfc	fsr2h,f,c
  4790  00042C  0E05               	movlw	5
  4791  00042E  D75A               	goto	L5
  4792  000430                     i2l2701:
  4793                           
  4794                           ; BSR set to: 0
  4795  000430  EE20 F00C          	lfsr	2,12
  4796  000434  504C               	movf	_ic_ptr,w,c
  4797  000436  26D9               	addwf	fsr2l,f,c
  4798  000438  504D               	movf	_ic_ptr+1,w,c
  4799  00043A  22DA               	addwfc	fsr2h,f,c
  4800  00043C  50DF               	movf	indf2,w,c
  4801                           
  4802                           ; Switch size 1, requested type "space"
  4803                           ; Number of cases is 4, Range of values is 5 to 8
  4804                           ; switch strategies available:
  4805                           ; Name         Instructions Cycles
  4806                           ; simple_byte           13     7 (average)
  4807                           ;	Chosen strategy is simple_byte
  4808  00043E  0A05               	xorlw	5	; case 5
  4809  000440  B4D8               	btfsc	status,2,c
  4810  000442  D696               	goto	i2l254
  4811  000444  0A03               	xorlw	3	; case 6
  4812  000446  B4D8               	btfsc	status,2,c
  4813  000448  D6B2               	goto	i2l258
  4814  00044A  0A01               	xorlw	1	; case 7
  4815  00044C  B4D8               	btfsc	status,2,c
  4816  00044E  D74C               	goto	i2l272
  4817  000450  0A0F               	xorlw	15	; case 8
  4818  000452  B4D8               	btfsc	status,2,c
  4819  000454  D70D               	goto	i2l2651
  4820  000456                     i2l252:
  4821                           
  4822                           ;my_i2c.c: 261: }
  4823                           ;my_i2c.c: 264: if (data_read || data_written) {
  4824  000456  0100               	movlb	0	; () banked
  4825  000458  0100               	movlb	0	; () banked
  4826  00045A  67C9               	tstfsz	i2c_int_handler@data_read& (0+255),b
  4827  00045C  D005               	goto	i2l286
  4828                           
  4829                           ; BSR set to: 0
  4830  00045E  0100               	movlb	0	; () banked
  4831  000460  0100               	movlb	0	; () banked
  4832  000462  51C4               	movf	i2c_int_handler@data_written& (0+255),w,b
  4833  000464  B4D8               	btfsc	status,2,c
  4834  000466  D002               	goto	i2l2707
  4835  000468                     i2l286:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;my_i2c.c: 266: if (SSPCON1bits.CKP == 0) {
  4839  000468  A8C6               	btfss	4038,4,c	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;my_i2c.c: 267: SSPCON1bits.CKP = 1;
  4843  00046A  88C6               	bsf	4038,4,c	;volatile
  4844  00046C                     i2l2707:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;my_i2c.c: 268: }
  4848                           ;my_i2c.c: 269: }
  4849                           ;my_i2c.c: 272: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  4850  00046C  EE20 F00A          	lfsr	2,10
  4851  000470  504C               	movf	_ic_ptr,w,c
  4852  000472  26D9               	addwf	fsr2l,f,c
  4853  000474  504D               	movf	_ic_ptr+1,w,c
  4854  000476  22DA               	addwfc	fsr2h,f,c
  4855  000478  0E08               	movlw	8
  4856  00047A  64DF               	cpfsgt	indf2,c
  4857  00047C  D01B               	goto	i2l2713
  4858                           
  4859                           ; BSR set to: 0
  4860  00047E  0100               	movlb	0	; () banked
  4861  000480  0100               	movlb	0	; () banked
  4862  000482  67C8               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  4863  000484  D017               	goto	i2l2713
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;my_i2c.c: 273: ic_ptr->status = 0x5;
  4867  000486  EE20 F00C          	lfsr	2,12
  4868  00048A  504C               	movf	_ic_ptr,w,c
  4869  00048C  26D9               	addwf	fsr2l,f,c
  4870  00048E  504D               	movf	_ic_ptr+1,w,c
  4871  000490  22DA               	addwfc	fsr2h,f,c
  4872  000492  0E05               	movlw	5
  4873  000494  6EDF               	movwf	indf2,c
  4874                           
  4875                           ;my_i2c.c: 274: ic_ptr->error_count++;
  4876  000496  EE20 F00E          	lfsr	2,14
  4877  00049A  504C               	movf	_ic_ptr,w,c
  4878  00049C  26D9               	addwf	fsr2l,f,c
  4879  00049E  504D               	movf	_ic_ptr+1,w,c
  4880  0004A0  22DA               	addwfc	fsr2h,f,c
  4881  0004A2  2ADF               	incf	indf2,f,c
  4882                           
  4883                           ;my_i2c.c: 275: ic_ptr->error_code = 0x7;
  4884  0004A4  EE20 F00D          	lfsr	2,13
  4885  0004A8  504C               	movf	_ic_ptr,w,c
  4886  0004AA  26D9               	addwf	fsr2l,f,c
  4887  0004AC  504D               	movf	_ic_ptr+1,w,c
  4888  0004AE  22DA               	addwfc	fsr2h,f,c
  4889  0004B0  0E07               	movlw	7
  4890  0004B2  6EDF               	movwf	indf2,c
  4891  0004B4                     i2l2713:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;my_i2c.c: 276: }
  4895                           ;my_i2c.c: 278: if (msg_ready) {
  4896  0004B4  0100               	movlb	0	; () banked
  4897  0004B6  0100               	movlb	0	; () banked
  4898  0004B8  51C8               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  4899  0004BA  B4D8               	btfsc	status,2,c
  4900  0004BC  D038               	goto	i2l2721
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;my_i2c.c: 279: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  4904  0004BE  EE20 F00B          	lfsr	2,11
  4905  0004C2  504C               	movf	_ic_ptr,w,c
  4906  0004C4  26D9               	addwf	fsr2l,f,c
  4907  0004C6  504D               	movf	_ic_ptr+1,w,c
  4908  0004C8  22DA               	addwfc	fsr2h,f,c
  4909  0004CA  EE10 F00A          	lfsr	1,10
  4910  0004CE  504C               	movf	_ic_ptr,w,c
  4911  0004D0  26E1               	addwf	fsr1l,f,c
  4912  0004D2  504D               	movf	_ic_ptr+1,w,c
  4913  0004D4  22E2               	addwfc	fsr1h,f,c
  4914  0004D6  50E7               	movf	indf1,w,c
  4915  0004D8  0100               	movlb	0	; () banked
  4916  0004DA  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4917  0004DC  0100               	movlb	0	; () banked
  4918  0004DE  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4919  0004E0  0D01               	mullw	1
  4920  0004E2  50F3               	movf	prodl,w,c
  4921  0004E4  244C               	addwf	_ic_ptr,w,c
  4922  0004E6  6EE1               	movwf	fsr1l,c
  4923  0004E8  50F4               	movf	prodh,w,c
  4924  0004EA  204D               	addwfc	_ic_ptr+1,w,c
  4925  0004EC  6EE2               	movwf	fsr1h,c
  4926  0004EE  CFDF FFE7          	movff	indf2,indf1
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;my_i2c.c: 280: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  4930  0004F2  0100               	movlb	0	; () banked
  4931  0004F4  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  4932  0004F6  0E28               	movlw	40
  4933  0004F8  0100               	movlb	0	; () banked
  4934  0004FA  0100               	movlb	0	; () banked
  4935  0004FC  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  4936  0004FE  0100               	movlb	0	; () banked
  4937  000500  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  4938  000502  0100               	movlb	0	; () banked
  4939  000504  C04D  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  4940  000508  0100               	movlb	0	; () banked
  4941  00050A  C04C  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  4942  00050E  EE20 F00A          	lfsr	2,10
  4943  000512  504C               	movf	_ic_ptr,w,c
  4944  000514  26D9               	addwf	fsr2l,f,c
  4945  000516  504D               	movf	_ic_ptr+1,w,c
  4946  000518  22DA               	addwfc	fsr2h,f,c
  4947  00051A  50DF               	movf	indf2,w,c
  4948  00051C  0100               	movlb	0	; () banked
  4949  00051E  6FC0               	movwf	(??_i2c_int_handler+1)& (0+255),b
  4950  000520  0100               	movlb	0	; () banked
  4951  000522  29C0               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  4952  000524  EC65  F009         	call	_ToMainHigh_sendmsg
  4953                           
  4954                           ;my_i2c.c: 281: ic_ptr->buflen = 0;
  4955  000528  EE20 F00A          	lfsr	2,10
  4956  00052C  D03E               	goto	L7
  4957  00052E                     i2l2721:
  4958  00052E  EE20 F00E          	lfsr	2,14
  4959  000532  504C               	movf	_ic_ptr,w,c
  4960  000534  26D9               	addwf	fsr2l,f,c
  4961  000536  504D               	movf	_ic_ptr+1,w,c
  4962  000538  22DA               	addwfc	fsr2h,f,c
  4963  00053A  50DF               	movf	indf2,w,c
  4964  00053C  B4D8               	btfsc	status,2,c
  4965  00053E  D03B               	goto	i2l2729
  4966                           
  4967                           ;my_i2c.c: 283: error_buf[0] = ic_ptr->error_count;
  4968  000540  EE20 F00E          	lfsr	2,14
  4969  000544  504C               	movf	_ic_ptr,w,c
  4970  000546  26D9               	addwf	fsr2l,f,c
  4971  000548  504D               	movf	_ic_ptr+1,w,c
  4972  00054A  22DA               	addwfc	fsr2h,f,c
  4973  00054C  50DF               	movf	indf2,w,c
  4974  00054E  0100               	movlb	0	; () banked
  4975  000550  0100               	movlb	0	; () banked
  4976  000552  6FC1               	movwf	i2c_int_handler@error_buf& (0+255),b
  4977                           
  4978                           ;my_i2c.c: 284: error_buf[1] = ic_ptr->error_code;
  4979  000554  EE20 F00D          	lfsr	2,13
  4980  000558  504C               	movf	_ic_ptr,w,c
  4981  00055A  26D9               	addwf	fsr2l,f,c
  4982  00055C  504D               	movf	_ic_ptr+1,w,c
  4983  00055E  22DA               	addwfc	fsr2h,f,c
  4984  000560  50DF               	movf	indf2,w,c
  4985  000562  0100               	movlb	0	; () banked
  4986  000564  0100               	movlb	0	; () banked
  4987  000566  6FC2               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  4988                           
  4989                           ;my_i2c.c: 285: error_buf[2] = ic_ptr->event_count;
  4990  000568  EE20 F00B          	lfsr	2,11
  4991  00056C  504C               	movf	_ic_ptr,w,c
  4992  00056E  26D9               	addwf	fsr2l,f,c
  4993  000570  504D               	movf	_ic_ptr+1,w,c
  4994  000572  22DA               	addwfc	fsr2h,f,c
  4995  000574  50DF               	movf	indf2,w,c
  4996  000576  0100               	movlb	0	; () banked
  4997  000578  0100               	movlb	0	; () banked
  4998  00057A  6FC3               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;my_i2c.c: 286: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  5002  00057C  0100               	movlb	0	; () banked
  5003  00057E  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  5004  000580  0E29               	movlw	41
  5005  000582  0100               	movlb	0	; () banked
  5006  000584  0100               	movlb	0	; () banked
  5007  000586  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5008  000588  0100               	movlb	0	; () banked
  5009  00058A  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  5010  00058C  0100               	movlb	0	; () banked
  5011  00058E  0E00               	movlw	high i2c_int_handler@error_buf
  5012  000590  0100               	movlb	0	; () banked
  5013  000592  0100               	movlb	0	; () banked
  5014  000594  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5015  000596  0100               	movlb	0	; () banked
  5016  000598  0EC1               	movlw	low i2c_int_handler@error_buf
  5017  00059A  0100               	movlb	0	; () banked
  5018  00059C  0100               	movlb	0	; () banked
  5019  00059E  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5020  0005A0  0E03               	movlw	3
  5021  0005A2  EC65  F009         	call	_ToMainHigh_sendmsg
  5022                           
  5023                           ;my_i2c.c: 287: ic_ptr->error_count = 0;
  5024  0005A6  EE20 F00E          	lfsr	2,14
  5025  0005AA                     L7:
  5026  0005AA  504C               	movf	_ic_ptr,w,c
  5027  0005AC  26D9               	addwf	fsr2l,f,c
  5028  0005AE  504D               	movf	_ic_ptr+1,w,c
  5029  0005B0  22DA               	addwfc	fsr2h,f,c
  5030  0005B2  0E00               	movlw	0
  5031  0005B4  6EDF               	movwf	indf2,c
  5032  0005B6                     i2l2729:
  5033                           
  5034                           ;my_i2c.c: 288: }
  5035                           ;my_i2c.c: 289: if (msg_to_send) {
  5036  0005B6  0100               	movlb	0	; () banked
  5037  0005B8  0100               	movlb	0	; () banked
  5038  0005BA  51C7               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  5039  0005BC  B4D8               	btfsc	status,2,c
  5040  0005BE  0012               	return	
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;my_i2c.c: 292: start_i2c_slave_reply(13, 0);
  5044  0005C0  0E00               	movlw	0
  5045  0005C2  6E30               	movwf	start_i2c_slave_reply@msg+1,c
  5046  0005C4  0E00               	movlw	0
  5047  0005C6  6E2F               	movwf	start_i2c_slave_reply@msg,c
  5048  0005C8  0E0D               	movlw	13
  5049  0005CA  ECF0  F002         	call	_start_i2c_slave_reply
  5050                           
  5051                           ;my_i2c.c: 293: msg_to_send = 0;
  5052  0005CE  0100               	movlb	0	; () banked
  5053  0005D0  6FBF               	movwf	??_i2c_int_handler& (0+255),b
  5054  0005D2  0E00               	movlw	0
  5055  0005D4  0100               	movlb	0	; () banked
  5056  0005D6  0100               	movlb	0	; () banked
  5057  0005D8  6FC7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5058  0005DA  0100               	movlb	0	; () banked
  5059  0005DC  51BF               	movf	??_i2c_int_handler& (0+255),w,b
  5060  0005DE  0012               	return	
  5061  0005E0                     __end_of_i2c_int_handler:
  5062                           	opt stack 0
  5063                           pclatu	equ	0xFFB
  5064                           pclath	equ	0xFFA
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           prodh	equ	0xFF4
  5070                           prodl	equ	0xFF3
  5071                           intcon	equ	0xFF2
  5072                           postinc0	equ	0xFEE
  5073                           fsr0h	equ	0xFEA
  5074                           fsr0l	equ	0xFE9
  5075                           wreg	equ	0xFE8
  5076                           indf1	equ	0xFE7
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           bsr	equ	0xFE0
  5080                           indf2	equ	0xFDF
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _start_i2c_slave_reply *****************
  5086 ;; Defined at:
  5087 ;;		line 67 in file "../src/my_i2c.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  length          1    wreg     unsigned char 
  5090 ;;  msg             2   46[COMRAM] PTR unsigned char 
  5091 ;;		 -> NULL(0), 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  length          1   51[COMRAM] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5103 ;;      Params:         2       0       0       0       0
  5104 ;;      Locals:         1       0       0       0       0
  5105 ;;      Temps:          3       0       0       0       0
  5106 ;;      Totals:         6       0       0       0       0
  5107 ;;Total ram usage:        6 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_i2c_int_handler
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text32
  5117  0005E0                     __ptext32:
  5118                           	opt stack 0
  5119  0005E0                     _start_i2c_slave_reply:
  5120                           	opt stack 18
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;incstack = 0
  5124                           ;start_i2c_slave_reply@length stored from wreg
  5125  0005E0  CFE8 F034          	movff	wreg,start_i2c_slave_reply@length
  5126                           
  5127                           ;my_i2c.c: 71: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  5128  0005E4  EE20 F019          	lfsr	2,25
  5129  0005E8  504C               	movf	_ic_ptr,w,c
  5130  0005EA  26D9               	addwf	fsr2l,f,c
  5131  0005EC  504D               	movf	_ic_ptr+1,w,c
  5132  0005EE  22DA               	addwfc	fsr2h,f,c
  5133  0005F0  0E00               	movlw	0
  5134  0005F2  6EDF               	movwf	indf2,c
  5135  0005F4  D06B               	goto	i2l2363
  5136  0005F6                     i2l2351:
  5137                           
  5138                           ;my_i2c.c: 74: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  5139  0005F6  EE20 F019          	lfsr	2,25
  5140  0005FA  504C               	movf	_ic_ptr,w,c
  5141  0005FC  26D9               	addwf	fsr2l,f,c
  5142  0005FE  504D               	movf	_ic_ptr+1,w,c
  5143  000600  22DA               	addwfc	fsr2h,f,c
  5144  000602  50DF               	movf	indf2,w,c
  5145  000604  6E31               	movwf	??_start_i2c_slave_reply& (0+255),c
  5146  000606  EE20 F026          	lfsr	2,38
  5147  00060A  504C               	movf	_ic_ptr,w,c
  5148  00060C  26D9               	addwf	fsr2l,f,c
  5149  00060E  504D               	movf	_ic_ptr+1,w,c
  5150  000610  22DA               	addwfc	fsr2h,f,c
  5151  000612  50DF               	movf	indf2,w,c
  5152  000614  5C31               	subwf	??_start_i2c_slave_reply,w,c
  5153  000616  B0D8               	btfsc	status,0,c
  5154  000618  D01E               	goto	i2l2355
  5155                           
  5156                           ;my_i2c.c: 75: {
  5157                           ;my_i2c.c: 76: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen];
  5158  00061A  EE20 F019          	lfsr	2,25
  5159  00061E  504C               	movf	_ic_ptr,w,c
  5160  000620  26D9               	addwf	fsr2l,f,c
  5161  000622  504D               	movf	_ic_ptr+1,w,c
  5162  000624  22DA               	addwfc	fsr2h,f,c
  5163  000626  50DF               	movf	indf2,w,c
  5164  000628  6E31               	movwf	??_start_i2c_slave_reply& (0+255),c
  5165  00062A  5031               	movf	??_start_i2c_slave_reply,w,c
  5166  00062C  0D01               	mullw	1
  5167  00062E  0E1C               	movlw	28
  5168  000630  26F3               	addwf	prodl,f,c
  5169  000632  0E00               	movlw	0
  5170  000634  22F4               	addwfc	prodh,f,c
  5171  000636  50F3               	movf	prodl,w,c
  5172  000638  244C               	addwf	_ic_ptr,w,c
  5173  00063A  6ED9               	movwf	fsr2l,c
  5174  00063C  50F4               	movf	prodh,w,c
  5175  00063E  204D               	addwfc	_ic_ptr+1,w,c
  5176  000640  6EDA               	movwf	fsr2h,c
  5177  000642  EE10 F019          	lfsr	1,25
  5178  000646  504C               	movf	_ic_ptr,w,c
  5179  000648  26E1               	addwf	fsr1l,f,c
  5180  00064A  504D               	movf	_ic_ptr+1,w,c
  5181  00064C  22E2               	addwfc	fsr1h,f,c
  5182  00064E  50E7               	movf	indf1,w,c
  5183  000650  6E32               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  5184  000652  5032               	movf	??_start_i2c_slave_reply+1,w,c
  5185  000654  D027               	goto	L12
  5186  000656                     i2l2355:
  5187                           
  5188                           ;my_i2c.c: 78: else if(ic_ptr->sendBufLen != 0)
  5189  000656  EE20 F026          	lfsr	2,38
  5190  00065A  504C               	movf	_ic_ptr,w,c
  5191  00065C  26D9               	addwf	fsr2l,f,c
  5192  00065E  504D               	movf	_ic_ptr+1,w,c
  5193  000660  22DA               	addwfc	fsr2h,f,c
  5194  000662  50DF               	movf	indf2,w,c
  5195  000664  B4D8               	btfsc	status,2,c
  5196  000666  D008               	goto	i2l2359
  5197                           
  5198                           ;my_i2c.c: 79: {
  5199                           ;my_i2c.c: 80: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLen
      +                          -1];
  5200  000668  EE20 F026          	lfsr	2,38
  5201  00066C  504C               	movf	_ic_ptr,w,c
  5202  00066E  26D9               	addwf	fsr2l,f,c
  5203  000670  504D               	movf	_ic_ptr+1,w,c
  5204  000672  22DA               	addwfc	fsr2h,f,c
  5205  000674  50DF               	movf	indf2,w,c
  5206  000676  D001               	goto	L11
  5207  000678                     i2l2359:
  5208                           
  5209                           ;my_i2c.c: 82: else
  5210                           ;my_i2c.c: 83: {
  5211                           ;my_i2c.c: 84: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  5212  000678  5034               	movf	start_i2c_slave_reply@length,w,c
  5213  00067A                     L11:
  5214  00067A  6E31               	movwf	??_start_i2c_slave_reply& (0+255),c
  5215  00067C  6A32               	clrf	(??_start_i2c_slave_reply+1)& (0+255),c
  5216  00067E  0E1B               	movlw	27
  5217  000680  2631               	addwf	??_start_i2c_slave_reply,f,c
  5218  000682  0E00               	movlw	0
  5219  000684  2232               	addwfc	??_start_i2c_slave_reply+1,f,c
  5220  000686  5031               	movf	??_start_i2c_slave_reply,w,c
  5221  000688  244C               	addwf	_ic_ptr,w,c
  5222  00068A  6ED9               	movwf	fsr2l,c
  5223  00068C  5032               	movf	??_start_i2c_slave_reply+1,w,c
  5224  00068E  204D               	addwfc	_ic_ptr+1,w,c
  5225  000690  6EDA               	movwf	fsr2h,c
  5226  000692  EE10 F019          	lfsr	1,25
  5227  000696  504C               	movf	_ic_ptr,w,c
  5228  000698  26E1               	addwf	fsr1l,f,c
  5229  00069A  504D               	movf	_ic_ptr+1,w,c
  5230  00069C  22E2               	addwfc	fsr1h,f,c
  5231  00069E  50E7               	movf	indf1,w,c
  5232  0006A0  6E33               	movwf	(??_start_i2c_slave_reply+2)& (0+255),c
  5233  0006A2  5033               	movf	??_start_i2c_slave_reply+2,w,c
  5234  0006A4                     L12:
  5235  0006A4  0D01               	mullw	1
  5236  0006A6  0E0F               	movlw	15
  5237  0006A8  26F3               	addwf	prodl,f,c
  5238  0006AA  0E00               	movlw	0
  5239  0006AC  22F4               	addwfc	prodh,f,c
  5240  0006AE  50F3               	movf	prodl,w,c
  5241  0006B0  244C               	addwf	_ic_ptr,w,c
  5242  0006B2  6EE1               	movwf	fsr1l,c
  5243  0006B4  50F4               	movf	prodh,w,c
  5244  0006B6  204D               	addwfc	_ic_ptr+1,w,c
  5245  0006B8  6EE2               	movwf	fsr1h,c
  5246  0006BA  CFDF FFE7          	movff	indf2,indf1
  5247  0006BE  EE20 F019          	lfsr	2,25
  5248  0006C2  504C               	movf	_ic_ptr,w,c
  5249  0006C4  26D9               	addwf	fsr2l,f,c
  5250  0006C6  504D               	movf	_ic_ptr+1,w,c
  5251  0006C8  22DA               	addwfc	fsr2h,f,c
  5252  0006CA  2ADF               	incf	indf2,f,c
  5253  0006CC                     i2l2363:
  5254  0006CC  EE20 F019          	lfsr	2,25
  5255  0006D0  504C               	movf	_ic_ptr,w,c
  5256  0006D2  26D9               	addwf	fsr2l,f,c
  5257  0006D4  504D               	movf	_ic_ptr+1,w,c
  5258  0006D6  22DA               	addwfc	fsr2h,f,c
  5259  0006D8  50DF               	movf	indf2,w,c
  5260  0006DA  6E31               	movwf	??_start_i2c_slave_reply& (0+255),c
  5261  0006DC  5034               	movf	start_i2c_slave_reply@length,w,c
  5262  0006DE  5C31               	subwf	??_start_i2c_slave_reply,w,c
  5263  0006E0  A0D8               	btfss	status,0,c
  5264  0006E2  D789               	goto	i2l2351
  5265                           
  5266                           ;my_i2c.c: 85: }
  5267                           ;my_i2c.c: 87: }
  5268                           ;my_i2c.c: 88: ic_ptr->sendBufLen =0;
  5269  0006E4  EE20 F026          	lfsr	2,38
  5270  0006E8  504C               	movf	_ic_ptr,w,c
  5271  0006EA  26D9               	addwf	fsr2l,f,c
  5272  0006EC  504D               	movf	_ic_ptr+1,w,c
  5273  0006EE  22DA               	addwfc	fsr2h,f,c
  5274  0006F0  0E00               	movlw	0
  5275  0006F2  6EDF               	movwf	indf2,c
  5276                           
  5277                           ;my_i2c.c: 89: ic_ptr->outbuflen = length;
  5278  0006F4  EE20 F019          	lfsr	2,25
  5279  0006F8  504C               	movf	_ic_ptr,w,c
  5280  0006FA  26D9               	addwf	fsr2l,f,c
  5281  0006FC  504D               	movf	_ic_ptr+1,w,c
  5282  0006FE  22DA               	addwfc	fsr2h,f,c
  5283  000700  C034  FFDF         	movff	start_i2c_slave_reply@length,indf2
  5284                           
  5285                           ;my_i2c.c: 90: ic_ptr->outbufind = 1;
  5286  000704  EE20 F01A          	lfsr	2,26
  5287  000708  504C               	movf	_ic_ptr,w,c
  5288  00070A  26D9               	addwf	fsr2l,f,c
  5289  00070C  504D               	movf	_ic_ptr+1,w,c
  5290  00070E  22DA               	addwfc	fsr2h,f,c
  5291  000710  0E01               	movlw	1
  5292  000712  6EDF               	movwf	indf2,c
  5293                           
  5294                           ;my_i2c.c: 93: SSPBUF = ic_ptr->outbuffer[0];
  5295  000714  EE20 F00F          	lfsr	2,15
  5296  000718  504C               	movf	_ic_ptr,w,c
  5297  00071A  26D9               	addwf	fsr2l,f,c
  5298  00071C  504D               	movf	_ic_ptr+1,w,c
  5299  00071E  22DA               	addwfc	fsr2h,f,c
  5300  000720  50DF               	movf	indf2,w,c
  5301  000722  6EC9               	movwf	4041,c	;volatile
  5302                           
  5303                           ;my_i2c.c: 96: SSPCON1bits.CKP = 1;
  5304  000724  88C6               	bsf	4038,4,c	;volatile
  5305  000726  0012               	return	
  5306  000728                     __end_of_start_i2c_slave_reply:
  5307                           	opt stack 0
  5308                           pclatu	equ	0xFFB
  5309                           pclath	equ	0xFFA
  5310                           tblptru	equ	0xFF8
  5311                           tblptrh	equ	0xFF7
  5312                           tblptrl	equ	0xFF6
  5313                           tablat	equ	0xFF5
  5314                           prodh	equ	0xFF4
  5315                           prodl	equ	0xFF3
  5316                           intcon	equ	0xFF2
  5317                           postinc0	equ	0xFEE
  5318                           fsr0h	equ	0xFEA
  5319                           fsr0l	equ	0xFE9
  5320                           wreg	equ	0xFE8
  5321                           indf1	equ	0xFE7
  5322                           fsr1h	equ	0xFE2
  5323                           fsr1l	equ	0xFE1
  5324                           bsr	equ	0xFE0
  5325                           indf2	equ	0xFDF
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function _handle_start *****************
  5331 ;; Defined at:
  5332 ;;		line 102 in file "../src/my_i2c.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  data_read       1    wreg     unsigned char 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  data_read       1   46[COMRAM] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;		None               void
  5339 ;; Registers used:
  5340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5346 ;;      Params:         0       0       0       0       0
  5347 ;;      Locals:         1       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0
  5349 ;;      Totals:         1       0       0       0       0
  5350 ;;Total ram usage:        1 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_i2c_int_handler
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text33
  5360  000CB8                     __ptext33:
  5361                           	opt stack 0
  5362  000CB8                     _handle_start:
  5363                           	opt stack 18
  5364                           
  5365                           ;incstack = 0
  5366                           ;handle_start@data_read stored from wreg
  5367  000CB8  CFE8 F02F          	movff	wreg,handle_start@data_read
  5368                           
  5369                           ;my_i2c.c: 103: ic_ptr->event_count = 1;
  5370  000CBC  EE20 F00B          	lfsr	2,11
  5371  000CC0  504C               	movf	_ic_ptr,w,c
  5372  000CC2  26D9               	addwf	fsr2l,f,c
  5373  000CC4  504D               	movf	_ic_ptr+1,w,c
  5374  000CC6  22DA               	addwfc	fsr2h,f,c
  5375  000CC8  0E01               	movlw	1
  5376  000CCA  6EDF               	movwf	indf2,c
  5377                           
  5378                           ;my_i2c.c: 104: ic_ptr->buflen = 0;
  5379  000CCC  EE20 F00A          	lfsr	2,10
  5380  000CD0  504C               	movf	_ic_ptr,w,c
  5381  000CD2  26D9               	addwf	fsr2l,f,c
  5382  000CD4  504D               	movf	_ic_ptr+1,w,c
  5383  000CD6  22DA               	addwfc	fsr2h,f,c
  5384  000CD8  0E00               	movlw	0
  5385  000CDA  6EDF               	movwf	indf2,c
  5386                           
  5387                           ;my_i2c.c: 106: if (data_read) {
  5388  000CDC  502F               	movf	handle_start@data_read,w,c
  5389  000CDE  B4D8               	btfsc	status,2,c
  5390  000CE0  D02E               	goto	i2l2381
  5391                           
  5392                           ;my_i2c.c: 107: if (SSPSTATbits.D_A == 1) {
  5393  000CE2  AAC7               	btfss	4039,5,c	;volatile
  5394  000CE4  D018               	goto	i2l242
  5395                           
  5396                           ;my_i2c.c: 110: ic_ptr->status = 0x5;
  5397  000CE6  EE20 F00C          	lfsr	2,12
  5398  000CEA  504C               	movf	_ic_ptr,w,c
  5399  000CEC  26D9               	addwf	fsr2l,f,c
  5400  000CEE  504D               	movf	_ic_ptr+1,w,c
  5401  000CF0  22DA               	addwfc	fsr2h,f,c
  5402  000CF2  0E05               	movlw	5
  5403  000CF4  6EDF               	movwf	indf2,c
  5404                           
  5405                           ;my_i2c.c: 111: ic_ptr->error_count++;
  5406  000CF6  EE20 F00E          	lfsr	2,14
  5407  000CFA  504C               	movf	_ic_ptr,w,c
  5408  000CFC  26D9               	addwf	fsr2l,f,c
  5409  000CFE  504D               	movf	_ic_ptr+1,w,c
  5410  000D00  22DA               	addwfc	fsr2h,f,c
  5411  000D02  2ADF               	incf	indf2,f,c
  5412                           
  5413                           ;my_i2c.c: 112: ic_ptr->error_code = 0x5;
  5414  000D04  EE20 F00D          	lfsr	2,13
  5415  000D08  504C               	movf	_ic_ptr,w,c
  5416  000D0A  26D9               	addwf	fsr2l,f,c
  5417  000D0C  504D               	movf	_ic_ptr+1,w,c
  5418  000D0E  22DA               	addwfc	fsr2h,f,c
  5419  000D10  0E05               	movlw	5
  5420  000D12  6EDF               	movwf	indf2,c
  5421                           
  5422                           ;my_i2c.c: 113: } else {
  5423  000D14  0012               	return	
  5424  000D16                     i2l242:
  5425                           
  5426                           ;my_i2c.c: 114: if (SSPSTATbits.R_W == 1) {
  5427  000D16  A4C7               	btfss	4039,2,c	;volatile
  5428  000D18  D009               	goto	i2l2379
  5429                           
  5430                           ;my_i2c.c: 115: ic_ptr->status = 0x8;
  5431  000D1A  EE20 F00C          	lfsr	2,12
  5432  000D1E  504C               	movf	_ic_ptr,w,c
  5433  000D20  26D9               	addwf	fsr2l,f,c
  5434  000D22  504D               	movf	_ic_ptr+1,w,c
  5435  000D24  22DA               	addwfc	fsr2h,f,c
  5436  000D26  0E08               	movlw	8
  5437  000D28  6EDF               	movwf	indf2,c
  5438                           
  5439                           ;my_i2c.c: 116: } else {
  5440  000D2A  0012               	return	
  5441  000D2C                     i2l2379:
  5442                           
  5443                           ;my_i2c.c: 117: ic_ptr->status = 0x7;
  5444  000D2C  EE20 F00C          	lfsr	2,12
  5445  000D30  504C               	movf	_ic_ptr,w,c
  5446  000D32  26D9               	addwf	fsr2l,f,c
  5447  000D34  504D               	movf	_ic_ptr+1,w,c
  5448  000D36  22DA               	addwfc	fsr2h,f,c
  5449  000D38  0E07               	movlw	7
  5450  000D3A  6EDF               	movwf	indf2,c
  5451  000D3C  0012               	return	
  5452  000D3E                     i2l2381:
  5453                           
  5454                           ;my_i2c.c: 121: ic_ptr->status = 0x6;
  5455  000D3E  EE20 F00C          	lfsr	2,12
  5456  000D42  504C               	movf	_ic_ptr,w,c
  5457  000D44  26D9               	addwf	fsr2l,f,c
  5458  000D46  504D               	movf	_ic_ptr+1,w,c
  5459  000D48  22DA               	addwfc	fsr2h,f,c
  5460  000D4A  0E06               	movlw	6
  5461  000D4C  6EDF               	movwf	indf2,c
  5462  000D4E  0012               	return	
  5463  000D50                     __end_of_handle_start:
  5464                           	opt stack 0
  5465                           pclatu	equ	0xFFB
  5466                           pclath	equ	0xFFA
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           prodh	equ	0xFF4
  5472                           prodl	equ	0xFF3
  5473                           intcon	equ	0xFF2
  5474                           postinc0	equ	0xFEE
  5475                           fsr0h	equ	0xFEA
  5476                           fsr0l	equ	0xFE9
  5477                           wreg	equ	0xFE8
  5478                           indf1	equ	0xFE7
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           bsr	equ	0xFE0
  5482                           indf2	equ	0xFDF
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _ToMainHigh_sendmsg *****************
  5488 ;; Defined at:
  5489 ;;		line 126 in file "../src/messages.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  length          1    wreg     unsigned char 
  5492 ;;  msgtype         1    5[BANK0 ] unsigned char 
  5493 ;;  data            2    6[BANK0 ] PTR void 
  5494 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(40), 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  length          1    8[BANK0 ] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      char 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5506 ;;      Params:         0       3       0       0       0
  5507 ;;      Locals:         0       1       0       0       0
  5508 ;;      Temps:          0       0       0       0       0
  5509 ;;      Totals:         0       4       0       0       0
  5510 ;;Total ram usage:        4 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    2
  5513 ;; This function calls:
  5514 ;;		i2_send_msg
  5515 ;; This function is called by:
  5516 ;;		_i2c_int_handler
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text34
  5521  0012CA                     __ptext34:
  5522                           	opt stack 0
  5523  0012CA                     _ToMainHigh_sendmsg:
  5524                           	opt stack 16
  5525                           
  5526                           ;incstack = 0
  5527                           ;ToMainHigh_sendmsg@length stored from wreg
  5528  0012CA  CFE8 F0BE          	movff	wreg,ToMainHigh_sendmsg@length
  5529                           
  5530                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5531                           ;	Return value of _ToMainHigh_sendmsg is never used
  5532  0012CE  0101               	movlb	1	; () banked
  5533  0012D0  0E01               	movlw	high _ToMainHigh_MQ
  5534  0012D2  6E3A               	movwf	i2send_msg@qptr+1,c
  5535  0012D4  0101               	movlb	1	; () banked
  5536  0012D6  0E6C               	movlw	low _ToMainHigh_MQ
  5537  0012D8  6E39               	movwf	i2send_msg@qptr,c
  5538  0012DA  C0BE  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  5539  0012DE  C0BB  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  5540  0012E2  0100               	movlb	0	; () banked
  5541  0012E4  C0BD  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  5542  0012E8  0100               	movlb	0	; () banked
  5543  0012EA  C0BC  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  5544  0012EE  ECA1  F004         	call	i2_send_msg	;wreg free
  5545  0012F2  0012               	return	
  5546  0012F4                     __end_of_ToMainHigh_sendmsg:
  5547                           	opt stack 0
  5548                           pclatu	equ	0xFFB
  5549                           pclath	equ	0xFFA
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           intcon	equ	0xFF2
  5557                           postinc0	equ	0xFEE
  5558                           fsr0h	equ	0xFEA
  5559                           fsr0l	equ	0xFE9
  5560                           wreg	equ	0xFE8
  5561                           indf1	equ	0xFE7
  5562                           fsr1h	equ	0xFE2
  5563                           fsr1l	equ	0xFE1
  5564                           bsr	equ	0xFE0
  5565                           indf2	equ	0xFDF
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function i2_send_msg *****************
  5571 ;; Defined at:
  5572 ;;		line 24 in file "../src/messages.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  5575 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5576 ;;  length          1   58[COMRAM] unsigned char 
  5577 ;;  msgtype         1   59[COMRAM] unsigned char 
  5578 ;;  data            2   60[COMRAM] PTR void 
  5579 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(40), 
  5580 ;;		 -> main@uc(5), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  5583 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5584 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5585 ;;  send_msg        2    0[BANK0 ] unsigned int 
  5586 ;;  send_msg        1    2[BANK0 ] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      char 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5596 ;;      Params:         6       0       0       0       0
  5597 ;;      Locals:         0       5       0       0       0
  5598 ;;      Temps:          1       0       0       0       0
  5599 ;;      Totals:         7       5       0       0       0
  5600 ;;Total ram usage:       12 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    1
  5603 ;; This function calls:
  5604 ;;		i2_memcpy
  5605 ;; This function is called by:
  5606 ;;		_ToMainHigh_sendmsg
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text35
  5611  000942                     __ptext35:
  5612                           	opt stack 0
  5613  000942                     i2_send_msg:
  5614                           	opt stack 16
  5615                           
  5616                           ;messages.c: 25: unsigned char slot;
  5617                           ;messages.c: 27: msg *qmsg;
  5618                           ;messages.c: 28: size_t tlength = length;
  5619                           
  5620                           ;incstack = 0
  5621  000942  0100               	movlb	0	; () banked
  5622  000944  C03B  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  5623  000948  0100               	movlb	0	; () banked
  5624  00094A  0100               	movlb	0	; () banked
  5625  00094C  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5629  00094E  EE20 F034          	lfsr	2,52
  5630  000952  5039               	movf	i2send_msg@qptr,w,c
  5631  000954  26D9               	addwf	fsr2l,f,c
  5632  000956  503A               	movf	i2send_msg@qptr+1,w,c
  5633  000958  22DA               	addwfc	fsr2h,f,c
  5634  00095A  50DF               	movf	indf2,w,c
  5635  00095C  0100               	movlb	0	; () banked
  5636  00095E  0100               	movlb	0	; () banked
  5637  000960  6FB8               	movwf	i2send_msg@slot& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5641  000962  0100               	movlb	0	; () banked
  5642  000964  0100               	movlb	0	; () banked
  5643  000966  51B8               	movf	i2send_msg@slot& (0+255),w,b
  5644  000968  0D0D               	mullw	13
  5645  00096A  50F3               	movf	prodl,w,c
  5646  00096C  2439               	addwf	i2send_msg@qptr,w,c
  5647  00096E  0100               	movlb	0	; () banked
  5648  000970  0100               	movlb	0	; () banked
  5649  000972  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  5650  000974  50F4               	movf	prodh,w,c
  5651  000976  203A               	addwfc	i2send_msg@qptr+1,w,c
  5652  000978  0100               	movlb	0	; () banked
  5653  00097A  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;messages.c: 41: if (qmsg->full != 0) {
  5657  00097C  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  5658  000980  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  5659  000984  50DF               	movf	indf2,w,c
  5660  000986  B4D8               	btfsc	status,2,c
  5661  000988  D002               	goto	i2l2899
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;messages.c: 42: return (-1);
  5665  00098A  0EFF               	movlw	255
  5666  00098C  0012               	return	
  5667  00098E                     i2l2899:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;messages.c: 43: }
  5671                           ;messages.c: 46: qmsg->length = length;
  5672  00098E  0100               	movlb	0	; () banked
  5673  000990  EE20 F001          	lfsr	2,1
  5674  000994  0100               	movlb	0	; () banked
  5675  000996  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  5676  000998  26D9               	addwf	fsr2l,f,c
  5677  00099A  0100               	movlb	0	; () banked
  5678  00099C  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  5679  00099E  22DA               	addwfc	fsr2h,f,c
  5680  0009A0  C03B  FFDF         	movff	i2send_msg@length,indf2
  5681                           
  5682                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5683  0009A4  0100               	movlb	0	; () banked
  5684  0009A6  EE20 F002          	lfsr	2,2
  5685  0009AA  0100               	movlb	0	; () banked
  5686  0009AC  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  5687  0009AE  26D9               	addwf	fsr2l,f,c
  5688  0009B0  0100               	movlb	0	; () banked
  5689  0009B2  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  5690  0009B4  22DA               	addwfc	fsr2h,f,c
  5691  0009B6  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5695  0009BA  0E03               	movlw	3
  5696  0009BC  0100               	movlb	0	; () banked
  5697  0009BE  0100               	movlb	0	; () banked
  5698  0009C0  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  5699  0009C2  6E2F               	movwf	i2memcpy@d1,c
  5700  0009C4  0E00               	movlw	0
  5701  0009C6  0100               	movlb	0	; () banked
  5702  0009C8  0100               	movlb	0	; () banked
  5703  0009CA  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  5704  0009CC  6E30               	movwf	i2memcpy@d1+1,c
  5705  0009CE  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  5706  0009D2  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  5707  0009D6  C0B6  F033         	movff	i2send_msg@tlength,i2memcpy@n
  5708  0009DA  C0B7  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  5709  0009DE  ECCA  F008         	call	i2_memcpy	;wreg free
  5710                           
  5711                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5712  0009E2  EE20 F034          	lfsr	2,52
  5713  0009E6  5039               	movf	i2send_msg@qptr,w,c
  5714  0009E8  26D9               	addwf	fsr2l,f,c
  5715  0009EA  503A               	movf	i2send_msg@qptr+1,w,c
  5716  0009EC  22DA               	addwfc	fsr2h,f,c
  5717  0009EE  EE10 F034          	lfsr	1,52
  5718  0009F2  5039               	movf	i2send_msg@qptr,w,c
  5719  0009F4  26E1               	addwf	fsr1l,f,c
  5720  0009F6  503A               	movf	i2send_msg@qptr+1,w,c
  5721  0009F8  22E2               	addwfc	fsr1h,f,c
  5722  0009FA  50E7               	movf	indf1,w,c
  5723  0009FC  6E3F               	movwf	??i2_send_msg& (0+255),c
  5724  0009FE  283F               	incf	??i2_send_msg,w,c
  5725  000A00  0B03               	andlw	3
  5726  000A02  6EDF               	movwf	indf2,c
  5727                           
  5728                           ;messages.c: 59: qmsg->full = 1;
  5729  000A04  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  5730  000A08  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  5731  000A0C  0E01               	movlw	1
  5732  000A0E  6EDF               	movwf	indf2,c
  5733                           
  5734                           ;messages.c: 60: return (1);
  5735  000A10  0E01               	movlw	1
  5736  000A12  0012               	return	
  5737  000A14                     __end_ofi2_send_msg:
  5738                           	opt stack 0
  5739                           pclatu	equ	0xFFB
  5740                           pclath	equ	0xFFA
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           intcon	equ	0xFF2
  5748                           postinc0	equ	0xFEE
  5749                           fsr0h	equ	0xFEA
  5750                           fsr0l	equ	0xFE9
  5751                           wreg	equ	0xFE8
  5752                           indf1	equ	0xFE7
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           bsr	equ	0xFE0
  5756                           indf2	equ	0xFDF
  5757                           fsr2h	equ	0xFDA
  5758                           fsr2l	equ	0xFD9
  5759                           status	equ	0xFD8
  5760                           
  5761 ;; *************** function i2_memcpy *****************
  5762 ;; Defined at:
  5763 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  d1              2   46[COMRAM] PTR void 
  5766 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5767 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5768 ;;		 -> main@msgbuffer(11), 
  5769 ;;  s1              2   48[COMRAM] PTR const void 
  5770 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5771 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5772 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5773 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(40), 
  5774 ;;		 -> main@uc(5), 
  5775 ;;  n               2   50[COMRAM] unsigned int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  5778 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5779 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5780 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5781 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(40), 
  5782 ;;		 -> main@uc(5), 
  5783 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  5784 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5785 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5786 ;;		 -> main@msgbuffer(11), 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  2   46[COMRAM] PTR void 
  5789 ;; Registers used:
  5790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5796 ;;      Params:         6       0       0       0       0
  5797 ;;      Locals:         4       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0
  5799 ;;      Totals:        10       0       0       0       0
  5800 ;;Total ram usage:       10 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		i2_send_msg
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text36
  5810  001194                     __ptext36:
  5811                           	opt stack 0
  5812  001194                     i2_memcpy:
  5813                           	opt stack 16
  5814                           
  5815                           ;incstack = 0
  5816  001194  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  5817  001198  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  5818  00119C  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  5819  0011A0  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  5820  0011A4  D00E               	goto	i2l2919
  5821  0011A6                     i2l2913:
  5822  0011A6  C037  FFD9         	movff	i2memcpy@s,fsr2l
  5823  0011AA  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  5824  0011AE  C035  FFE1         	movff	i2memcpy@d,fsr1l
  5825  0011B2  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  5826  0011B6  CFDF FFE7          	movff	indf2,indf1
  5827  0011BA  4A37               	infsnz	i2memcpy@s,f,c
  5828  0011BC  2A38               	incf	i2memcpy@s+1,f,c
  5829  0011BE  4A35               	infsnz	i2memcpy@d,f,c
  5830  0011C0  2A36               	incf	i2memcpy@d+1,f,c
  5831  0011C2                     i2l2919:
  5832  0011C2  0633               	decf	i2memcpy@n,f,c
  5833  0011C4  A0D8               	btfss	status,0,c
  5834  0011C6  0634               	decf	i2memcpy@n+1,f,c
  5835  0011C8  2833               	incf	i2memcpy@n& (0+255),w,c
  5836  0011CA  B4D8               	btfsc	status,2,c
  5837  0011CC  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  5838  0011CE  B4D8               	btfsc	status,2,c
  5839                           
  5840                           ;	Return value of i2_memcpy is never used
  5841  0011D0  0012               	return	
  5842  0011D2  D7E9               	goto	i2l2913
  5843  0011D4                     __end_ofi2_memcpy:
  5844                           	opt stack 0
  5845                           pclatu	equ	0xFFB
  5846                           pclath	equ	0xFFA
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           prodh	equ	0xFF4
  5852                           prodl	equ	0xFF3
  5853                           intcon	equ	0xFF2
  5854                           postinc0	equ	0xFEE
  5855                           fsr0h	equ	0xFEA
  5856                           fsr0l	equ	0xFE9
  5857                           wreg	equ	0xFE8
  5858                           indf1	equ	0xFE7
  5859                           fsr1h	equ	0xFE2
  5860                           fsr1l	equ	0xFE1
  5861                           bsr	equ	0xFE0
  5862                           indf2	equ	0xFDF
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867 ;; *************** function _adc_int_handler *****************
  5868 ;; Defined at:
  5869 ;;		line 56 in file "../src/user_interrupts.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  result          2   51[COMRAM] unsigned int 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5883 ;;      Params:         0       0       0       0       0
  5884 ;;      Locals:         2       0       0       0       0
  5885 ;;      Temps:          2       0       0       0       0
  5886 ;;      Totals:         4       0       0       0       0
  5887 ;;Total ram usage:        4 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    1
  5890 ;; This function calls:
  5891 ;;		_Handle_i2c_data_save
  5892 ;;		_ReadADC
  5893 ;; This function is called by:
  5894 ;;		_InterruptHandlerHigh
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text37
  5899  0011D4                     __ptext37:
  5900                           	opt stack 0
  5901  0011D4                     _adc_int_handler:
  5902                           	opt stack 18
  5903                           
  5904                           ;user_interrupts.c: 58: unsigned int result;
  5905                           ;user_interrupts.c: 59: result = ReadADC();
  5906                           
  5907                           ;incstack = 0
  5908  0011D4  EC0F  F00A         	call	_ReadADC	;wreg free
  5909  0011D8  C02F  F034         	movff	?_ReadADC,adc_int_handler@result
  5910  0011DC  C030  F035         	movff	?_ReadADC+1,adc_int_handler@result+1
  5911                           
  5912                           ;user_interrupts.c: 60: result = result /4;
  5913  0011E0  C034  F032         	movff	adc_int_handler@result,??_adc_int_handler
  5914  0011E4  C035  F033         	movff	adc_int_handler@result+1,??_adc_int_handler+1
  5915  0011E8  90D8               	bcf	status,0,c
  5916  0011EA  3233               	rrcf	??_adc_int_handler+1,f,c
  5917  0011EC  3232               	rrcf	??_adc_int_handler,f,c
  5918  0011EE  90D8               	bcf	status,0,c
  5919  0011F0  3233               	rrcf	??_adc_int_handler+1,f,c
  5920  0011F2  3232               	rrcf	??_adc_int_handler,f,c
  5921  0011F4  C032  F034         	movff	??_adc_int_handler,adc_int_handler@result
  5922  0011F8  C033  F035         	movff	??_adc_int_handler+1,adc_int_handler@result+1
  5923                           
  5924                           ;user_interrupts.c: 61: Handle_i2c_data_save(1,&result);
  5925  0011FC  0E00               	movlw	high adc_int_handler@result
  5926  0011FE  6E30               	movwf	Handle_i2c_data_save@msg+1,c
  5927  001200  0E34               	movlw	low adc_int_handler@result
  5928  001202  6E2F               	movwf	Handle_i2c_data_save@msg,c
  5929  001204  0E01               	movlw	1
  5930  001206  ECCC  F007         	call	_Handle_i2c_data_save
  5931  00120A  0012               	return	
  5932  00120C                     __end_of_adc_int_handler:
  5933                           	opt stack 0
  5934                           pclatu	equ	0xFFB
  5935                           pclath	equ	0xFFA
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           intcon	equ	0xFF2
  5943                           postinc0	equ	0xFEE
  5944                           fsr0h	equ	0xFEA
  5945                           fsr0l	equ	0xFE9
  5946                           wreg	equ	0xFE8
  5947                           indf1	equ	0xFE7
  5948                           fsr1h	equ	0xFE2
  5949                           fsr1l	equ	0xFE1
  5950                           bsr	equ	0xFE0
  5951                           indf2	equ	0xFDF
  5952                           fsr2h	equ	0xFDA
  5953                           fsr2l	equ	0xFD9
  5954                           status	equ	0xFD8
  5955                           
  5956 ;; *************** function _ReadADC *****************
  5957 ;; Defined at:
  5958 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  2   46[COMRAM] int 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5972 ;;      Params:         2       0       0       0       0
  5973 ;;      Locals:         0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0
  5975 ;;      Totals:         2       0       0       0       0
  5976 ;;Total ram usage:        2 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_adc_int_handler
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text38
  5986  00141E                     __ptext38:
  5987                           	opt stack 0
  5988  00141E                     _ReadADC:
  5989                           	opt stack 18
  5990                           
  5991                           ;incstack = 0
  5992  00141E  50C4               	movf	4036,w,c	;volatile
  5993  001420  6E30               	movwf	?_ReadADC+1,c
  5994  001422  50C3               	movf	4035,w,c	;volatile
  5995  001424  6E2F               	movwf	?_ReadADC,c
  5996  001426  0012               	return	
  5997  001428                     __end_of_ReadADC:
  5998                           	opt stack 0
  5999                           pclatu	equ	0xFFB
  6000                           pclath	equ	0xFFA
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           prodh	equ	0xFF4
  6006                           prodl	equ	0xFF3
  6007                           intcon	equ	0xFF2
  6008                           postinc0	equ	0xFEE
  6009                           fsr0h	equ	0xFEA
  6010                           fsr0l	equ	0xFE9
  6011                           wreg	equ	0xFE8
  6012                           indf1	equ	0xFE7
  6013                           fsr1h	equ	0xFE2
  6014                           fsr1l	equ	0xFE1
  6015                           bsr	equ	0xFE0
  6016                           indf2	equ	0xFDF
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function _Handle_i2c_data_save *****************
  6022 ;; Defined at:
  6023 ;;		line 56 in file "../src/my_i2c.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  length          1    wreg     unsigned char 
  6026 ;;  msg             2   46[COMRAM] PTR unsigned char 
  6027 ;;		 -> adc_int_handler@result(2), 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  length          1    0[COMRAM] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;		None               void
  6032 ;; Registers used:
  6033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6039 ;;      Params:         2       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0
  6041 ;;      Temps:          1       0       0       0       0
  6042 ;;      Totals:         3       0       0       0       0
  6043 ;;Total ram usage:        3 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_adc_int_handler
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text39
  6053  000F98                     __ptext39:
  6054                           	opt stack 0
  6055  000F98                     _Handle_i2c_data_save:
  6056                           	opt stack 18
  6057                           
  6058                           ;my_i2c.c: 59: if(ic_ptr->sendBufLen < 13)
  6059                           
  6060                           ;incstack = 0
  6061  000F98  EE20 F026          	lfsr	2,38
  6062  000F9C  504C               	movf	_ic_ptr,w,c
  6063  000F9E  26D9               	addwf	fsr2l,f,c
  6064  000FA0  504D               	movf	_ic_ptr+1,w,c
  6065  000FA2  22DA               	addwfc	fsr2h,f,c
  6066  000FA4  50DF               	movf	indf2,w,c
  6067  000FA6  6E31               	movwf	??_Handle_i2c_data_save& (0+255),c
  6068  000FA8  0E0D               	movlw	13
  6069  000FAA  5C31               	subwf	??_Handle_i2c_data_save,w,c
  6070  000FAC  B0D8               	btfsc	status,0,c
  6071  000FAE  0012               	return	
  6072                           
  6073                           ;my_i2c.c: 60: {
  6074                           ;my_i2c.c: 61: ic_ptr->sendBuf[ic_ptr->sendBufLen] = *msg;
  6075  000FB0  C02F  FFD9         	movff	Handle_i2c_data_save@msg,fsr2l
  6076  000FB4  C030  FFDA         	movff	Handle_i2c_data_save@msg+1,fsr2h
  6077  000FB8  EE10 F026          	lfsr	1,38
  6078  000FBC  504C               	movf	_ic_ptr,w,c
  6079  000FBE  26E1               	addwf	fsr1l,f,c
  6080  000FC0  504D               	movf	_ic_ptr+1,w,c
  6081  000FC2  22E2               	addwfc	fsr1h,f,c
  6082  000FC4  50E7               	movf	indf1,w,c
  6083  000FC6  6E31               	movwf	??_Handle_i2c_data_save& (0+255),c
  6084  000FC8  5031               	movf	??_Handle_i2c_data_save,w,c
  6085  000FCA  0D01               	mullw	1
  6086  000FCC  0E1C               	movlw	28
  6087  000FCE  26F3               	addwf	prodl,f,c
  6088  000FD0  0E00               	movlw	0
  6089  000FD2  22F4               	addwfc	prodh,f,c
  6090  000FD4  50F3               	movf	prodl,w,c
  6091  000FD6  244C               	addwf	_ic_ptr,w,c
  6092  000FD8  6EE1               	movwf	fsr1l,c
  6093  000FDA  50F4               	movf	prodh,w,c
  6094  000FDC  204D               	addwfc	_ic_ptr+1,w,c
  6095  000FDE  6EE2               	movwf	fsr1h,c
  6096  000FE0  CFDF FFE7          	movff	indf2,indf1
  6097                           
  6098                           ;my_i2c.c: 62: ic_ptr->sendBufLen++;
  6099  000FE4  EE20 F026          	lfsr	2,38
  6100  000FE8  504C               	movf	_ic_ptr,w,c
  6101  000FEA  26D9               	addwf	fsr2l,f,c
  6102  000FEC  504D               	movf	_ic_ptr+1,w,c
  6103  000FEE  22DA               	addwfc	fsr2h,f,c
  6104  000FF0  2ADF               	incf	indf2,f,c
  6105  000FF2  0012               	return	
  6106  000FF4                     __end_of_Handle_i2c_data_save:
  6107                           	opt stack 0
  6108                           pclatu	equ	0xFFB
  6109                           pclath	equ	0xFFA
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           intcon	equ	0xFF2
  6117                           postinc0	equ	0xFEE
  6118                           fsr0h	equ	0xFEA
  6119                           fsr0l	equ	0xFE9
  6120                           wreg	equ	0xFE8
  6121                           indf1	equ	0xFE7
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           bsr	equ	0xFE0
  6125                           indf2	equ	0xFDF
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _SleepIfOkay *****************
  6131 ;; Defined at:
  6132 ;;		line 228 in file "../src/messages.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;		None               void
  6139 ;; Registers used:
  6140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6146 ;;      Params:         0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0
  6149 ;;      Totals:         0       0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    2
  6153 ;; This function calls:
  6154 ;;		_enter_sleep_mode
  6155 ;;		i2_check_msg
  6156 ;;		i2_in_high_int
  6157 ;;		i2_in_low_int
  6158 ;; This function is called by:
  6159 ;;		_InterruptHandlerHigh
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text40
  6164  000FF4                     __ptext40:
  6165                           	opt stack 0
  6166  000FF4                     _SleepIfOkay:
  6167                           	opt stack 17
  6168                           
  6169                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  6170                           
  6171                           ;incstack = 0
  6172  000FF4  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  6173  000FF6  D001               	goto	i2l2083
  6174  000FF8  0012               	return	
  6175  000FFA                     i2l2083:
  6176                           
  6177                           ;messages.c: 232: }
  6178                           ;messages.c: 235: if (in_low_int()) {
  6179  000FFA  EC39  F009         	call	i2_in_low_int	;wreg free
  6180  000FFE  5032               	movf	?i2_in_low_int+1,w,c
  6181  001000  1031               	iorwf	?i2_in_low_int,w,c
  6182  001002  A4D8               	btfss	status,2,c
  6183  001004  0012               	return	
  6184                           
  6185                           ;messages.c: 237: }
  6186                           ;messages.c: 240: if (!in_high_int()) {
  6187                           
  6188                           ;messages.c: 236: return;
  6189  001006  EC09  F00A         	call	i2_in_high_int	;wreg free
  6190  00100A  5030               	movf	?i2_in_high_int+1,w,c
  6191  00100C  102F               	iorwf	?i2_in_high_int,w,c
  6192  00100E  B4D8               	btfsc	status,2,c
  6193  001010  0012               	return	
  6194                           
  6195                           ;messages.c: 242: }
  6196                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  6197                           
  6198                           ;messages.c: 241: return;
  6199  001012  0101               	movlb	1	; () banked
  6200  001014  0E01               	movlw	high _ToMainHigh_MQ
  6201  001016  6E30               	movwf	i2check_msg@qptr+1,c
  6202  001018  0101               	movlb	1	; () banked
  6203  00101A  0E6C               	movlw	low _ToMainHigh_MQ
  6204  00101C  6E2F               	movwf	i2check_msg@qptr,c
  6205  00101E  ECA1  F009         	call	i2_check_msg	;wreg free
  6206  001022  0900               	iorlw	0
  6207  001024  A4D8               	btfss	status,2,c
  6208  001026  0012               	return	
  6209                           
  6210                           ;messages.c: 249: }
  6211                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  6212                           
  6213                           ;messages.c: 248: return;
  6214  001028  0100               	movlb	0	; () banked
  6215  00102A  0E00               	movlw	high _ToMainLow_MQ
  6216  00102C  6E30               	movwf	i2check_msg@qptr+1,c
  6217  00102E  0100               	movlb	0	; () banked
  6218  001030  0E80               	movlw	low _ToMainLow_MQ
  6219  001032  6E2F               	movwf	i2check_msg@qptr,c
  6220  001034  ECA1  F009         	call	i2_check_msg	;wreg free
  6221  001038  0900               	iorlw	0
  6222  00103A  B4D8               	btfsc	status,2,c
  6223                           
  6224                           ;messages.c: 252: }
  6225                           ;messages.c: 253: enter_sleep_mode();
  6226                           
  6227                           ;messages.c: 251: return;
  6228  00103C  EC18  F00A         	call	_enter_sleep_mode	;wreg free
  6229  001040  0012               	return	
  6230  001042                     __end_of_SleepIfOkay:
  6231                           	opt stack 0
  6232                           pclatu	equ	0xFFB
  6233                           pclath	equ	0xFFA
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           intcon	equ	0xFF2
  6241                           postinc0	equ	0xFEE
  6242                           fsr0h	equ	0xFEA
  6243                           fsr0l	equ	0xFE9
  6244                           wreg	equ	0xFE8
  6245                           indf1	equ	0xFE7
  6246                           fsr1h	equ	0xFE2
  6247                           fsr1l	equ	0xFE1
  6248                           bsr	equ	0xFE0
  6249                           indf2	equ	0xFDF
  6250                           fsr2h	equ	0xFDA
  6251                           fsr2l	equ	0xFD9
  6252                           status	equ	0xFD8
  6253                           
  6254 ;; *************** function i2_in_low_int *****************
  6255 ;; Defined at:
  6256 ;;		line 30 in file "../src/interrupts.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;		None
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;		None
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  2   48[COMRAM] int 
  6263 ;; Registers used:
  6264 ;;		wreg, status,2, status,0, cstack
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6270 ;;      Params:         2       0       0       0       0
  6271 ;;      Locals:         0       0       0       0       0
  6272 ;;      Temps:          0       0       0       0       0
  6273 ;;      Totals:         2       0       0       0       0
  6274 ;;Total ram usage:        2 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    1
  6277 ;; This function calls:
  6278 ;;		i2_in_high_int
  6279 ;; This function is called by:
  6280 ;;		_SleepIfOkay
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text41
  6285  001272                     __ptext41:
  6286                           	opt stack 0
  6287  001272                     i2_in_low_int:
  6288                           	opt stack 17
  6289                           
  6290                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  6291                           
  6292                           ;incstack = 0
  6293  001272  ACF2               	btfss	intcon,6,c	;volatile
  6294  001274  D005               	goto	i2l2431
  6295                           
  6296                           ;interrupts.c: 32: return (0);
  6297  001276  0E00               	movlw	0
  6298  001278  6E32               	movwf	?i2_in_low_int+1,c
  6299  00127A  0E00               	movlw	0
  6300  00127C  6E31               	movwf	?i2_in_low_int,c
  6301  00127E  0012               	return	
  6302  001280                     i2l2431:
  6303  001280  EC09  F00A         	call	i2_in_high_int	;wreg free
  6304  001284  5030               	movf	?i2_in_high_int+1,w,c
  6305  001286  102F               	iorwf	?i2_in_high_int,w,c
  6306  001288  B4D8               	btfsc	status,2,c
  6307  00128A  D005               	goto	i2l2439
  6308                           
  6309                           ;interrupts.c: 34: return (0);
  6310  00128C  0E00               	movlw	0
  6311  00128E  6E32               	movwf	?i2_in_low_int+1,c
  6312  001290  0E00               	movlw	0
  6313  001292  6E31               	movwf	?i2_in_low_int,c
  6314  001294  0012               	return	
  6315  001296                     i2l2439:
  6316                           
  6317                           ;interrupts.c: 36: return (1);
  6318  001296  0E00               	movlw	0
  6319  001298  6E32               	movwf	?i2_in_low_int+1,c
  6320  00129A  0E01               	movlw	1
  6321  00129C  6E31               	movwf	?i2_in_low_int,c
  6322  00129E  0012               	return	
  6323  0012A0                     __end_ofi2_in_low_int:
  6324                           	opt stack 0
  6325                           pclatu	equ	0xFFB
  6326                           pclath	equ	0xFFA
  6327                           tblptru	equ	0xFF8
  6328                           tblptrh	equ	0xFF7
  6329                           tblptrl	equ	0xFF6
  6330                           tablat	equ	0xFF5
  6331                           prodh	equ	0xFF4
  6332                           prodl	equ	0xFF3
  6333                           intcon	equ	0xFF2
  6334                           postinc0	equ	0xFEE
  6335                           fsr0h	equ	0xFEA
  6336                           fsr0l	equ	0xFE9
  6337                           wreg	equ	0xFE8
  6338                           indf1	equ	0xFE7
  6339                           fsr1h	equ	0xFE2
  6340                           fsr1l	equ	0xFE1
  6341                           bsr	equ	0xFE0
  6342                           indf2	equ	0xFDF
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function i2_in_high_int *****************
  6348 ;; Defined at:
  6349 ;;		line 22 in file "../src/interrupts.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  2   46[COMRAM] int 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6363 ;;      Params:         2       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0
  6366 ;;      Totals:         2       0       0       0       0
  6367 ;;Total ram usage:        2 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_SleepIfOkay
  6373 ;;		i2_in_low_int
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text42
  6378  001412                     __ptext42:
  6379                           	opt stack 0
  6380  001412                     i2_in_high_int:
  6381                           	opt stack 17
  6382                           
  6383                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  6384                           
  6385                           ;incstack = 0
  6386  001412  0E00               	movlw	0
  6387  001414  AEF2               	btfss	intcon,7,c	;volatile
  6388  001416  0E01               	movlw	1
  6389  001418  6E2F               	movwf	?i2_in_high_int,c
  6390  00141A  6A30               	clrf	?i2_in_high_int+1,c
  6391  00141C  0012               	return	
  6392  00141E                     __end_ofi2_in_high_int:
  6393                           	opt stack 0
  6394                           pclatu	equ	0xFFB
  6395                           pclath	equ	0xFFA
  6396                           tblptru	equ	0xFF8
  6397                           tblptrh	equ	0xFF7
  6398                           tblptrl	equ	0xFF6
  6399                           tablat	equ	0xFF5
  6400                           prodh	equ	0xFF4
  6401                           prodl	equ	0xFF3
  6402                           intcon	equ	0xFF2
  6403                           postinc0	equ	0xFEE
  6404                           fsr0h	equ	0xFEA
  6405                           fsr0l	equ	0xFE9
  6406                           wreg	equ	0xFE8
  6407                           indf1	equ	0xFE7
  6408                           fsr1h	equ	0xFE2
  6409                           fsr1l	equ	0xFE1
  6410                           bsr	equ	0xFE0
  6411                           indf2	equ	0xFDF
  6412                           fsr2h	equ	0xFDA
  6413                           fsr2l	equ	0xFD9
  6414                           status	equ	0xFD8
  6415                           
  6416 ;; *************** function i2_check_msg *****************
  6417 ;; Defined at:
  6418 ;;		line 222 in file "../src/messages.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  6421 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      unsigned char 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6433 ;;      Params:         2       0       0       0       0
  6434 ;;      Locals:         0       0       0       0       0
  6435 ;;      Temps:          1       0       0       0       0
  6436 ;;      Totals:         3       0       0       0       0
  6437 ;;Total ram usage:        3 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_SleepIfOkay
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text43
  6447  001342                     __ptext43:
  6448                           	opt stack 0
  6449  001342                     i2_check_msg:
  6450                           	opt stack 18
  6451                           
  6452                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  6453                           
  6454                           ;incstack = 0
  6455  001342  EE20 F035          	lfsr	2,53
  6456  001346  502F               	movf	i2check_msg@qptr,w,c
  6457  001348  26D9               	addwf	fsr2l,f,c
  6458  00134A  5030               	movf	i2check_msg@qptr+1,w,c
  6459  00134C  22DA               	addwfc	fsr2h,f,c
  6460  00134E  50DF               	movf	indf2,w,c
  6461  001350  6E31               	movwf	??i2_check_msg& (0+255),c
  6462  001352  5031               	movf	??i2_check_msg,w,c
  6463  001354  0D0D               	mullw	13
  6464  001356  50F3               	movf	prodl,w,c
  6465  001358  242F               	addwf	i2check_msg@qptr,w,c
  6466  00135A  6ED9               	movwf	fsr2l,c
  6467  00135C  50F4               	movf	prodh,w,c
  6468  00135E  2030               	addwfc	i2check_msg@qptr+1,w,c
  6469  001360  6EDA               	movwf	fsr2h,c
  6470  001362  50DF               	movf	indf2,w,c
  6471  001364  0012               	return	
  6472  001366                     __end_ofi2_check_msg:
  6473                           	opt stack 0
  6474                           pclatu	equ	0xFFB
  6475                           pclath	equ	0xFFA
  6476                           tblptru	equ	0xFF8
  6477                           tblptrh	equ	0xFF7
  6478                           tblptrl	equ	0xFF6
  6479                           tablat	equ	0xFF5
  6480                           prodh	equ	0xFF4
  6481                           prodl	equ	0xFF3
  6482                           intcon	equ	0xFF2
  6483                           postinc0	equ	0xFEE
  6484                           fsr0h	equ	0xFEA
  6485                           fsr0l	equ	0xFE9
  6486                           wreg	equ	0xFE8
  6487                           indf1	equ	0xFE7
  6488                           fsr1h	equ	0xFE2
  6489                           fsr1l	equ	0xFE1
  6490                           bsr	equ	0xFE0
  6491                           indf2	equ	0xFDF
  6492                           fsr2h	equ	0xFDA
  6493                           fsr2l	equ	0xFD9
  6494                           status	equ	0xFD8
  6495                           
  6496 ;; *************** function _enter_sleep_mode *****************
  6497 ;; Defined at:
  6498 ;;		line 202 in file "../src/messages.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;		None               void
  6505 ;; Registers used:
  6506 ;;		None
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6512 ;;      Params:         0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_SleepIfOkay
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text44
  6526  001430                     __ptext44:
  6527                           	opt stack 0
  6528  001430                     _enter_sleep_mode:
  6529                           	opt stack 18
  6530                           
  6531                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  6532                           
  6533                           ;incstack = 0
  6534  001430  8ED3               	bsf	4051,7,c	;volatile
  6535  001432  0003               	sleep		;# 
  6536  001434  0012               	return	
  6537  001436                     __end_of_enter_sleep_mode:
  6538                           	opt stack 0
  6539  0000                     pclatu	equ	0xFFB
  6540                           pclath	equ	0xFFA
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           postinc0	equ	0xFEE
  6549                           fsr0h	equ	0xFEA
  6550                           fsr0l	equ	0xFE9
  6551                           wreg	equ	0xFE8
  6552                           indf1	equ	0xFE7
  6553                           fsr1h	equ	0xFE2
  6554                           fsr1l	equ	0xFE1
  6555                           bsr	equ	0xFE0
  6556                           indf2	equ	0xFDF
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           pclatu	equ	0xFFB
  6561                           pclath	equ	0xFFA
  6562                           tblptru	equ	0xFF8
  6563                           tblptrh	equ	0xFF7
  6564                           tblptrl	equ	0xFF6
  6565                           tablat	equ	0xFF5
  6566                           prodh	equ	0xFF4
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           postinc0	equ	0xFEE
  6570                           fsr0h	equ	0xFEA
  6571                           fsr0l	equ	0xFE9
  6572                           wreg	equ	0xFE8
  6573                           indf1	equ	0xFE7
  6574                           fsr1h	equ	0xFE2
  6575                           fsr1l	equ	0xFE1
  6576                           bsr	equ	0xFE0
  6577                           indf2	equ	0xFDF
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582                           	psect	rparam
  6583  0000                     pclatu	equ	0xFFB
  6584                           pclath	equ	0xFFA
  6585                           tblptru	equ	0xFF8
  6586                           tblptrh	equ	0xFF7
  6587                           tblptrl	equ	0xFF6
  6588                           tablat	equ	0xFF5
  6589                           prodh	equ	0xFF4
  6590                           prodl	equ	0xFF3
  6591                           intcon	equ	0xFF2
  6592                           postinc0	equ	0xFEE
  6593                           fsr0h	equ	0xFEA
  6594                           fsr0l	equ	0xFE9
  6595                           wreg	equ	0xFE8
  6596                           indf1	equ	0xFE7
  6597                           fsr1h	equ	0xFE2
  6598                           fsr1l	equ	0xFE1
  6599                           bsr	equ	0xFE0
  6600                           indf2	equ	0xFDF
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         228
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      81
    BANK0           128     39      93
    BANK1           256     86     248
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@ic(BANK1[40]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@ic(BANK1[40]), 
		 -> main@uc(BANK1[5]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 40
		 -> main@ic(BANK1[40]), 

    Handle_i2c_data_save@msg	PTR unsigned char  size(2) Largest target is 2
		 -> adc_int_handler@result(COMRAM[2]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 40
		 -> NULL(NULL[0]), main@ic(BANK1[40]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 40
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[40]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 40
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[40]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _adc_int_handler->_Handle_i2c_data_save
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_OpenADC
    _init_queues->_init_queue
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _block_on_To_msgqueues->_in_main
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0    4579
                                             25 BANK1     61    61      0
                            _OpenADC
                         _OpenTimer0
                 _ToMainHigh_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                     _init_uart_recv
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             35 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                              0 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             35 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             35 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             35 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                              2 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              0 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             37 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             35 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             35 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             35 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2515
                                             20 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2268
                                              6 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     531
                                             35 BANK0      4     4      0
                                              0 BANK1      6     0      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             35 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     371
                                             35 BANK0      4     2      2
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4874
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2384
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2490
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2361
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    1783
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               15    15      0    3951
                                             20 BANK0     15    15      0
                        _SleepIfOkay
                    _adc_int_handler
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0      98
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      98
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    3484
                                              9 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               6     4      2     130
                                             46 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             46 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    2748
                                              5 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             56 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _adc_int_handler                                     4     4      0     133
                                             49 COMRAM     4     4      0
               _Handle_i2c_data_save
                            _ReadADC
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _Handle_i2c_data_save                                4     2      2      86
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             48 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_uart_recv

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _adc_int_handler
     _Handle_i2c_data_save
     _ReadADC
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     56      F8       6       96.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     27      5D       5       72.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A6       9        0.0%
DATA                 0      0     1A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 10 23:10:55 2014

                             _i 0042                               _j 0050                               _x 0048  
      _MQ_Main_Willing_to_block 004A                     _SSPSTATbits 000FC7                              l95 0926  
                            bsr 000FE0       __end_of_ToMainLow_sendmsg 1342                    __CFG_CP0$OFF 000000  
                           l401 0DD0                             l422 12C4                             l423 12C6  
                           l671 13A6            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                _FromMainLow_MQ 0136                             wreg 000FE8                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00D9                ??_init_uart_recv 00DB                 ReadTimer1@timer 0003  
                          l2261 0E9A                            l2811 0DF2                            l2565 1102  
                          l2831 0F5C                            l2823 0E4A                            l1881 109C  
                          l2817 0E1E                            l2851 0794                            l2771 08E4  
                          l2837 0F80                            l2781 092C                            l1889 10BE  
                          l2867 085A                            _LATB 000F8A                            i1l52 0070  
                          u1997 13A8                 _FromMainHigh_MQ 0100                            _Send 0040  
                 __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001                            _main 085E  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            _swit 0046  
                   main@msgtype 01CA                            pclat 000FFA                     i2_check_msg 1342  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002F  
                          start 00B6                   __CFG_FOSC2$ON 000000                ?_adc_int_handler 0001  
                    i2_send_msg 0942       ToMainHigh_recvmsg@msgtype 01B6                 __end_of_ReadADC 1428  
                send_msg@length 000D                 __end_of_OpenADC 0DD4     __size_of_timer0_int_handler 0012  
                   _Delay1KTCYx 13A2                           ?_main 0001                           _T0CON 000FD5  
                    i1memcpy@d1 0001                           i1l456 1392                           i2l242 0D16  
                         i2l252 0456                           i2l254 0170                           i2l280 03DA  
                         i2l272 02E8                           i2l258 01AE                           i2l286 0468  
                    i1memcpy@s1 0003                           _RCREG 000FAE                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _TRISB 000F93                      i2memcpy@d1 002F                      i2memcpy@s1 0031  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 1112  
                    _ConvertADC 1436         i2c_configure_slave@addr 00D9                           tablat 000FF5  
                         status 000FD8                __end_ofi1_memcpy 1194                __end_ofi2_memcpy 11D4  
               __initialization 1042                    __end_of_main 0942                      _ReadTimer1 13DC  
   __size_of_timer1_int_handler 0030      __size_of_ToMainLow_sendmsg 0026           __size_ofi2_in_low_int 002E  
 __size_of_Handle_i2c_data_save 005C                          ??_main 01BB                 send_msg@msgtype 000E  
                 __activetblptr 000002                 send_msg@tlength 0012            __end_of_handle_start 0D50  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _ADRESL 000FC3         ??_uart_recv_int_handler 001B  
                        i1l2503 0B10                          i1l2473 1166                          i1l2537 0BFE  
                        i1l2549 0066                          i1l2479 1182                          i2l2083 0FFA  
                        i2l2431 1280                          i2l2351 05F6                      _OpenTimer0 12A0  
                        i2l2355 0656                          i2l2363 06CC                          i2l2381 0D3E  
                        i2l2701 0430                          i2l2613 0166                  __CFG_WDTEN$OFF 000000  
                        i2l2439 1296                          i2l2359 0678                          i2l2631 01E0  
                        i2l2607 014E                          i2l2721 052E                          i2l2713 04B4  
                        i2l2633 0200                          i2l2379 0D2C                          i2l2707 046C  
                        i2l2651 0270                          i2l2643 0230                          i2l2591 0A9A  
                        i2l2583 0A76                          i2l2575 0A4E                          i2l2913 11A6  
                        i2l2729 05B6                          i2l2673 0342                          i2l2649 0242  
                        i2l2675 0372                          i2l2919 11C2                          i2l2679 0384  
                        i2l2899 098E     __end_of_i2c_configure_slave 131C                   ??_SleepIfOkay 0033  
            __size_of_ReadUSART 001E                          _OSCCON 000FD3                          _SSPADD 000FC8  
                        _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 0148                       ??_ReadADC 0031  
 __end_of_start_i2c_slave_reply 0728                       ??_OpenADC 00DB                    i2_in_low_int 1272  
                   ?i2_send_msg 0039                  __CFG_XINST$OFF 000000                 _i2c_int_handler 00BA  
              OpenTimer0@config 00D9                          _ic_ptr 004C                   main@msgbuffer 01BD  
              __end_of_init_i2c 0CB8                          _length 0044                          _memcpy 0F3A  
                        clear_0 1048                          clear_1 1054                          clear_2 1060  
                        _uc_ptr 004E                          main@ic 01D0                          main@uc 01CB  
              __end_of_recv_msg 085E     start_i2c_slave_reply@length 0034                       ??_in_main 00DD  
              __end_of_send_msg 0B82                    __pdataCOMRAM 0050         i2c_int_handler@i2c_data 00C6  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 00DC            __size_of_in_high_int 0012                     ?_ConvertADC 0001  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 107E  
    __end_of_ToMainHigh_recvmsg 1154      __end_of_ToMainHigh_sendmsg 12F4             __end_of_SleepIfOkay 1042  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C                     ?_ReadTimer1 0001  
            __size_of_check_msg 0036               __end_of_ReadUSART 13A2                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 0AD0     __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 002F  
                 _ToMainHigh_MQ 016C                _enter_sleep_mode 1430             __size_ofi2_send_msg 00D2  
                 ReadUSART@data 0001                   check_msg@qptr 00D9         ??_block_on_To_msgqueues 01A4  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0100  
                   ?_OpenTimer0 0001                      __pnvCOMRAM 004C         __end_of_i2c_int_handler 05E0  
                  ?i2_check_msg 002F               recv_msg@maxlength 01AA                 recv_msg@msgtype 01AB  
               recv_msg@tlength 01B2           __size_of_handle_start 0098                    ?_Delay1KTCYx 0001  
              WriteTimer0@timer 0031                         ?_memcpy 01A2                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0031                   ??_WriteTimer1 0003             __size_of_ConvertADC 0004  
                    ??i1_memcpy 0007                      ??i2_memcpy 0035                   i2_in_high_int 1412  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
           __size_of_ReadTimer1 0012               __end_of_check_msg 1242                       ?_init_i2c 00D9  
                   _SleepIfOkay 0FF4                         _ReadADC 141E                       ?_recv_msg 01A8  
                       _OpenADC 0D50                      _in_low_int 1088                    _handle_start 0CB8  
                       __Hparam 0000                       ?_send_msg 000B                         __Lparam 0000  
    __end_of_timer0_int_handler 1400                init_uart_recv@uc 00D9         Handle_i2c_data_save@msg 002F  
               __CFG_STVREN$OFF 000000                         __pcinit 1042                 __size_of_memcpy 005E  
      __size_of_adc_int_handler 0038                      _init_queue 0E52                         __ramtop 0400  
           __size_of_OpenTimer0 002A                         __ptext0 085E                         __ptext1 1366  
                       __ptext2 0ECC                         __ptext3 0E52                         __ptext4 0C1E  
                       __ptext5 12F4                         __ptext6 1428                         __ptext7 0DD4  
                       __ptext8 10CE                         __ptext9 1088                       _T0CONbits 000FD5  
                       _in_main 10CE             __end_of_WriteTimer0 1412             __end_of_WriteTimer1 13DC  
                ?i2_in_high_int 002F                  OpenADC@config2 00D9                  __pintcode_body 0A14  
          end_of_initialization 107E    __end_of_Handle_i2c_data_save 0FF4  __size_of_uart_recv_int_handler 009C  
                       memcpy@d 00D9                         memcpy@n 01A6                         memcpy@s 00DB  
 __end_of_uart_recv_int_handler 0C1E                      ??_init_i2c 00DB     i2c_int_handler@data_written 00C4  
                 __Lmediumconst 0000                         int_func 0A14         __size_of_init_uart_recv 001E  
              ?_i2c_int_handler 0001                      ??_recv_msg 01AF                    ??i2_send_msg 003F  
                    ??_send_msg 0011      __end_of_timer1_int_handler 1272                       _RCSTAbits 000FAB  
                       postinc0 000FEE       ToMainHigh_sendmsg@msgtype 00BB      Handle_i2c_data_save@length 0001  
                     _TRISCbits 000F94              __end_ofi2_send_msg 0A14                    ??_ConvertADC 002F  
      timer1_int_handler@result 001C                      main@length 01C9                     ?_in_low_int 00DB  
         _start_i2c_slave_reply 05E0    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0024  
      __end_of_enter_sleep_mode 1436                    ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1112  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 12CA                       i1memcpy@n 0005  
                     i1memcpy@s 0009                   __pidataCOMRAM 143A                     ?_init_queue 00D9  
                     i2memcpy@d 0035                     _WriteTimer0 1400                     _WriteTimer1 13CA  
                     i2memcpy@n 0033                       i2memcpy@s 0037              __end_of_ConvertADC 143A  
                __end_of_memcpy 0F98               _enable_interrupts 1428            __size_of_Delay1KTCYx 0016  
           ?_ToMainHigh_recvmsg 01B6                 ??i2_in_high_int 0031        i2c_int_handler@data_read 00C9  
           ?_ToMainHigh_sendmsg 00BB              ?_enable_interrupts 0001             start_initialization 1042  
                 ??_in_high_int 00DB                       _ReadUSART 1384               ??_adc_int_handler 0032  
             __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040             ??_enable_interrupts 00D9  
                  ??_OpenTimer0 00D9  __size_of_block_on_To_msgqueues 007E              __end_of_ReadTimer1 13EE  
 __end_of_block_on_To_msgqueues 0E52    __end_of_InterruptHandlerHigh 0AD8                      init_i2c@ic 00D9  
          ??_ToMainHigh_recvmsg 00DD            ??_ToMainHigh_sendmsg 0040        i2c_int_handler@error_buf 00C1  
     __end_of_enable_interrupts 1430                        ??_memcpy 00D9            _Handle_i2c_data_save 0F98  
            __end_of_OpenTimer0 12CA        i2c_int_handler@msg_ready 00C8                     __pbssCOMRAM 0040  
                    ?_ReadUSART 0001                   ??_init_queues 01A2                   __pcstackBANK0 00B6  
                 __pcstackBANK1 01A2             __size_of_in_low_int 0046        start_i2c_slave_reply@msg 002F  
           __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00D9        ToMainLow_sendmsg@msgtype 0017  
  __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 13CA                    ?_SleepIfOkay 0001  
                  _ToMainLow_MQ 0080             __size_of_init_queue 007A                  _init_uart_recv 1366  
                      ?_ReadADC 002F                       _check_msg 120C          ?_start_i2c_slave_reply 002F  
             __size_of_init_i2c 009A               OpenADC@portconfig 00DA                        ?_OpenADC 00D9  
                  recv_msg@data 01AD                    recv_msg@qmsg 01B4                    recv_msg@slot 01B1  
                  recv_msg@qptr 01A8               __size_of_recv_msg 0136                       __pintcode 0008  
             __size_of_send_msg 00AA           ?_Handle_i2c_data_save 002F                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 01B8      i2c_int_handler@msg_to_send 00C7                        ?_in_main 01A2  
             WriteTimer0@timer0 002F              _timer0_int_handler 13EE               WriteTimer1@timer1 0001  
         ToMainLow_sendmsg@data 0018             ?_timer0_int_handler 0001          __end_of_init_uart_recv 1384  
           __end_of_init_queues 0F3A                   OpenADC@config 01A2                        _LATBbits 000F8A  
               i2check_msg@qptr 002F                      ?_check_msg 00D9                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                   ?i2_in_low_int 0031                        i2u160_40 0A5A  
                      i2u160_46 0A5C                        i2u162_40 0A82                        i2u162_46 0A84  
                      _PIR1bits 000F9E          ToMainHigh_sendmsg@data 00BC                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000            ??_timer0_int_handler 0033      __size_of_enable_interrupts 0008  
                    _ADCON0bits 000FC2              _timer1_int_handler 1242                        i1_memcpy 1154  
          _InterruptHandlerHigh 0008                     ??_ReadUSART 0001                        i2_memcpy 1194  
                   _in_high_int 13B8                    send_msg@data 000F             _i2c_configure_slave 12F4  
                  send_msg@qmsg 0015                    send_msg@slot 0014                    send_msg@qptr 000B  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 00D9                  ??i2_in_low_int 0033  
         _uart_recv_int_handler 0B82                    ??_in_low_int 00DD                __size_of_ReadADC 000A  
                      __Hrparam 0000                __size_of_OpenADC 0084            ?_i2c_configure_slave 0001  
                      __Lrparam 0000               ?_enter_sleep_mode 0001          ??_Handle_i2c_data_save 0031  
          ??_timer1_int_handler 001B                 _adc_int_handler 11D4        __size_of_i2c_int_handler 0526  
            ??_enter_sleep_mode 002F                    ??_init_queue 00DB                    ?_WriteTimer0 002F  
                  ?_WriteTimer1 0001         ToMainLow_sendmsg@length 001A           ?_InterruptHandlerHigh 0001  
              __size_of_in_main 0044               i2send_msg@msgtype 003C     ToMainHigh_recvmsg@maxlength 01BA  
             i2send_msg@tlength 00B6                     _init_queues 0ECC              __end_of_in_low_int 10CE  
                      __ptext10 13B8                        __ptext11 120C                        __ptext20 1384  
                      __ptext12 13A2                        __ptext21 1242                        __ptext13 1112  
                      __ptext30 1436                        __ptext22 13CA                        __ptext14 0728  
                      __ptext31 00BA                        __ptext23 131C                        __ptext15 0F3A  
                      __ptext40 0FF4                        __ptext32 05E0                        __ptext24 0AD8  
                      __ptext16 12A0                        __ptext41 1272                        __ptext33 0CB8  
                      __ptext25 1154                        __ptext17 0D50                        __ptext42 1412  
                      __ptext34 12CA                        __ptext26 13DC                        __ptext43 1342  
                      __ptext35 0942                        __ptext19 0B82                        __ptext44 1430  
                      __ptext36 1194                        __ptext28 13EE                        __ptext37 11D4  
                      __ptext29 1400                        __ptext38 141E                        __ptext39 0F98  
                      _init_i2c 0C1E                   __size_of_main 00E4                   ??i2_check_msg 0031  
                   ??_check_msg 00DB              __end_of_init_queue 0ECC            __size_of_SleepIfOkay 004E  
                      _recv_msg 0728           ??_i2c_configure_slave 00D9                        _send_msg 0AD8  
                init_queue@qptr 00D9                   ??_Delay1KTCYx 00D9             _InterruptHandlerLow 0018  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                        memcpy@d1 01A2  
                      memcpy@s1 01A4           __end_ofi2_in_high_int 141E    i2c_int_handler@overrun_error 00C5  
              i2send_msg@length 003B                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 0031          ?_uart_recv_int_handler 0001  
         _block_on_To_msgqueues 0DD4                   ?_handle_start 0001     __size_of_ToMainHigh_recvmsg 0042  
       __end_of_adc_int_handler 120C     __size_of_ToMainHigh_sendmsg 002A                      _OSCCONbits 000FD3  
         adc_int_handler@result 0034        ToMainHigh_sendmsg@length 00BE             __end_ofi2_check_msg 1366  
        ??_InterruptHandlerHigh 00CA               _ToMainLow_sendmsg 131C              main@last_reg_recvd 01C8  
          __end_ofi2_in_low_int 12A0             __end_of_Delay1KTCYx 13B8               ??_i2c_int_handler 00BF  
            ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                i2send_msg@data 003D           ??_InterruptHandlerLow 001E                  i2send_msg@qmsg 00B9  
                i2send_msg@slot 00B8                  i2send_msg@qptr 0039             ??_ToMainLow_sendmsg 001A  
                ??_handle_start 002F                    _USART_Status 004B  
