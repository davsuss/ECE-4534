

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Apr  3 19:15:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	param0,global,class=BANK0,space=1,delta=1
    76  0000                     
    77                           	psect	idataCOMRAM
    78  001D42                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _j
    82  001D42  0064               	dw	100
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _ADCON1	set	4033
    86  0000                     _ADRESH	set	4036
    87  0000                     _ADRESL	set	4035
    88  0000                     _ANCON0	set	3912
    89  0000                     _ANCON1	set	3913
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATB	set	3978
    93  0000                     _LATBbits	set	3978
    94  0000                     _OSCCON	set	4051
    95  0000                     _OSCCONbits	set	4051
    96  0000                     _OSCTUNEbits	set	3995
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTBbits	set	3969
   100  0000                     _RCONbits	set	4048
   101  0000                     _RCREG1	set	4015
   102  0000                     _RCSTA1	set	4012
   103  0000                     _RCSTA1bits	set	4012
   104  0000                     _RCSTAbits	set	4012
   105  0000                     _SPBRG1	set	4016
   106  0000                     _SPBRGH1	set	3967
   107  0000                     _SSPADD	set	4040
   108  0000                     _SSPBUF	set	4041
   109  0000                     _SSPCON1	set	4038
   110  0000                     _SSPCON1bits	set	4038
   111  0000                     _SSPCON2	set	4037
   112  0000                     _SSPCON2bits	set	4037
   113  0000                     _SSPSTAT	set	4039
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _T0CON	set	4053
   116  0000                     _T0CONbits	set	4053
   117  0000                     _T1CON	set	4045
   118  0000                     _T1CONbits	set	4045
   119  0000                     _T1GCON	set	3994
   120  0000                     _T1GCONbits	set	3994
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISBbits	set	3987
   127  0000                     _TXREG1	set	4014
   128  0000                     _TXSTA1	set	4013
   129  0000                     _TXSTA1bits	set	4013
   130                           
   131                           	psect	nvCOMRAM
   132  000042                     __pnvCOMRAM:
   133                           	opt stack 0
   134  000042                     _uc_ptr:
   135                           	opt stack 0
   136  000042                     	ds	2
   137                           
   138                           	psect	nvBANK0
   139  0000B2                     __pnvBANK0:
   140                           	opt stack 0
   141  0000B2                     _ic_ptr:
   142                           	opt stack 0
   143  0000B2                     	ds	2
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  00189A                     __pcinit:
   149                           	opt stack 0
   150  00189A                     start_initialization:
   151                           	opt stack 0
   152  00189A                     __initialization:
   153                           	opt stack 0
   154                           
   155                           ; Clear objects allocated to BANK3 (102 bytes)
   156  00189A  EE03  F000         	lfsr	0,__pbssBANK3
   157  00189E  0E66               	movlw	102
   158  0018A0                     clear_0:
   159  0018A0  6AEE               	clrf	postinc0,c
   160  0018A2  06E8               	decf	wreg,f,c
   161  0018A4  E1FD               	bnz	clear_0
   162                           
   163                           ; Clear objects allocated to BANK2 (204 bytes)
   164  0018A6  EE02  F000         	lfsr	0,__pbssBANK2
   165  0018AA  0ECC               	movlw	204
   166  0018AC                     clear_1:
   167  0018AC  6AEE               	clrf	postinc0,c
   168  0018AE  06E8               	decf	wreg,f,c
   169  0018B0  E1FD               	bnz	clear_1
   170                           
   171                           ; Clear objects allocated to BANK1 (102 bytes)
   172  0018B2  EE01  F07F         	lfsr	0,__pbssBANK1
   173  0018B6  0E66               	movlw	102
   174  0018B8                     clear_2:
   175  0018B8  6AEE               	clrf	postinc0,c
   176  0018BA  06E8               	decf	wreg,f,c
   177  0018BC  E1FD               	bnz	clear_2
   178                           
   179                           ; Clear objects allocated to BANK0 (1 bytes)
   180  0018BE  0100               	movlb	0
   181  0018C0  6BB4               	clrf	__pbssBANK0& (0+255),b
   182                           
   183                           ; Clear objects allocated to COMRAM (14 bytes)
   184  0018C2  EE00  F034         	lfsr	0,__pbssCOMRAM
   185  0018C6  0E0E               	movlw	14
   186  0018C8                     clear_3:
   187  0018C8  6AEE               	clrf	postinc0,c
   188  0018CA  06E8               	decf	wreg,f,c
   189  0018CC  E1FD               	bnz	clear_3
   190                           
   191                           ; Initialize objects allocated to COMRAM (2 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193  0018CE  0E42               	movlw	low __pidataCOMRAM
   194  0018D0  6EF6               	movwf	tblptrl,c
   195  0018D2  0E1D               	movlw	high __pidataCOMRAM
   196  0018D4  6EF7               	movwf	tblptrh,c
   197  0018D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198  0018D8  6EF8               	movwf	tblptru,c
   199  0018DA  0009               	tblrd		*+	;fetch initializer
   200  0018DC  CFF5 F044          	movff	tablat,__pdataCOMRAM
   201  0018E0  0009               	tblrd		*+	;fetch initializer
   202  0018E2  CFF5 F045          	movff	tablat,__pdataCOMRAM+1
   203  0018E6                     end_of_initialization:
   204                           	opt stack 0
   205  0018E6                     __end_of__initialization:
   206                           	opt stack 0
   207  0018E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  0018E8  6EF8               	movwf	tblptru,c
   209  0018EA  0100               	movlb	0
   210  0018EC  EF85  F003         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	bssCOMRAM
   219  000034                     __pbssCOMRAM:
   220                           	opt stack 0
   221  000034                     _Send:
   222                           	opt stack 0
   223  000034                     	ds	2
   224  000036                     _i:
   225                           	opt stack 0
   226  000036                     	ds	2
   227  000038                     _length:
   228                           	opt stack 0
   229  000038                     	ds	2
   230  00003A                     _swit:
   231                           	opt stack 0
   232  00003A                     	ds	2
   233  00003C                     _x:
   234                           	opt stack 0
   235  00003C                     	ds	2
   236  00003E                     _MSG_LEN:
   237                           	opt stack 0
   238  00003E                     	ds	1
   239  00003F                     _MSG_REC:
   240                           	opt stack 0
   241  00003F                     	ds	1
   242  000040                     _STATE:
   243                           	opt stack 0
   244  000040                     	ds	1
   245  000041                     _USART1_Status:
   246                           	opt stack 0
   247  000041                     	ds	1
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           postinc0	equ	0xFEE
   253                           wreg	equ	0xFE8
   254                           
   255                           	psect	dataCOMRAM
   256  000044                     __pdataCOMRAM:
   257                           	opt stack 0
   258  000044                     _j:
   259                           	opt stack 0
   260  000044                     	ds	2
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssBANK0
   269  0000B4                     __pbssBANK0:
   270                           	opt stack 0
   271  0000B4                     _MQ_Main_Willing_to_block:
   272                           	opt stack 0
   273  0000B4                     	ds	1
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssBANK1
   282  00017F                     __pbssBANK1:
   283                           	opt stack 0
   284  00017F                     _ToMainLow_MQ:
   285                           	opt stack 0
   286  00017F                     	ds	102
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           
   294                           	psect	bssBANK2
   295  000200                     __pbssBANK2:
   296                           	opt stack 0
   297  000200                     _FromMainLow_MQ:
   298                           	opt stack 0
   299  000200                     	ds	102
   300  000266                     _ToMainHigh_MQ:
   301                           	opt stack 0
   302  000266                     	ds	102
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	bssBANK3
   311  000300                     __pbssBANK3:
   312                           	opt stack 0
   313  000300                     _FromMainHigh_MQ:
   314                           	opt stack 0
   315  000300                     	ds	102
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	cstackBANK1
   324  000100                     __pcstackBANK1:
   325                           	opt stack 0
   326  000100                     main@msgbuffer:
   327                           	opt stack 0
   328                           
   329                           ; 23 bytes @ 0x0
   330  000100                     	ds	23
   331  000117                     main@last_reg_recvd:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x17
   335  000117                     	ds	1
   336  000118                     main@msgId:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x18
   340  000118                     	ds	2
   341  00011A                     main@uc:
   342                           	opt stack 0
   343                           
   344                           ; 23 bytes @ 0x1A
   345  00011A                     	ds	23
   346  000131                     main@msgtype:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x31
   350  000131                     	ds	1
   351  000132                     main@length:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x32
   355  000132                     	ds	1
   356  000133                     main@ic:
   357                           	opt stack 0
   358                           
   359                           ; 76 bytes @ 0x33
   360  000133                     	ds	76
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           
   368                           	psect	cstackBANK0
   369  000060                     __pcstackBANK0:
   370                           	opt stack 0
   371  000060                     ??i2_flipDBG:
   372  000060                     ?_ReadADC:
   373                           	opt stack 0
   374  000060                     ?i2_in_high_int:
   375                           	opt stack 0
   376  000060                     handle_start@data_read:
   377                           	opt stack 0
   378  000060                     start_i2c_slave_reply@msg:
   379                           	opt stack 0
   380  000060                     WriteTimer0@timer0:
   381                           	opt stack 0
   382  000060                     i2check_msg@qptr:
   383                           	opt stack 0
   384  000060                     i2memcpy@d1:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x0
   388  000060                     	ds	1
   389  000061                     i2flipDBG@b:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x1
   393  000061                     	ds	1
   394  000062                     ??_adc_int_handler:
   395  000062                     ??_start_i2c_slave_reply:
   396  000062                     ??i2_check_msg:
   397  000062                     ?i2_in_low_int:
   398                           	opt stack 0
   399  000062                     WriteTimer0@timer:
   400                           	opt stack 0
   401  000062                     i2memcpy@s1:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  000062                     	ds	2
   406  000064                     start_i2c_slave_reply@length:
   407                           	opt stack 0
   408  000064                     adc_int_handler@result:
   409                           	opt stack 0
   410  000064                     i2memcpy@n:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x4
   414  000064                     	ds	1
   415  000065                     start_i2c_slave_reply@i:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x5
   419  000065                     	ds	1
   420  000066                     i2memcpy@d:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x6
   424  000066                     	ds	2
   425  000068                     i2memcpy@s:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x8
   429  000068                     	ds	2
   430  00006A                     i2send_msg@qptr:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xA
   434  00006A                     	ds	2
   435  00006C                     i2send_msg@length:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0xC
   439  00006C                     	ds	1
   440  00006D                     i2send_msg@msgtype:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0xD
   444  00006D                     	ds	1
   445  00006E                     i2send_msg@data:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0xE
   449  00006E                     	ds	2
   450  000070                     ??i2_send_msg:
   451                           
   452                           ; 0 bytes @ 0x10
   453  000070                     	ds	1
   454  000071                     i2send_msg@tlength:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x11
   458  000071                     	ds	2
   459  000073                     i2send_msg@slot:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x13
   463  000073                     	ds	1
   464  000074                     i2send_msg@qmsg:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x14
   468  000074                     	ds	2
   469  000076                     ToMainHigh_sendmsg@msgtype:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x16
   473  000076                     	ds	1
   474  000077                     ToMainHigh_sendmsg@data:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x17
   478  000077                     	ds	2
   479  000079                     ToMainHigh_sendmsg@length:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x19
   483  000079                     	ds	1
   484  00007A                     ??_i2c_int_handler:
   485                           
   486                           ; 0 bytes @ 0x1A
   487  00007A                     	ds	2
   488  00007C                     i2c_int_handler@error_buf:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0x1C
   492  00007C                     	ds	3
   493  00007F                     i2c_int_handler@data_written:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1F
   497  00007F                     	ds	1
   498  000080                     i2c_int_handler@overrun_error:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x20
   502  000080                     	ds	1
   503  000081                     i2c_int_handler@i2c_data:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x21
   507  000081                     	ds	1
   508  000082                     i2c_int_handler@msg_to_send:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x22
   512  000082                     	ds	1
   513  000083                     i2c_int_handler@msg_ready:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x23
   517  000083                     	ds	1
   518  000084                     i2c_int_handler@data_read:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x24
   522  000084                     	ds	1
   523  000085                     ??_InterruptHandlerHigh:
   524                           
   525                           ; 0 bytes @ 0x25
   526  000085                     	ds	15
   527  000094                     ??_flipDBG:
   528  000094                     ?_in_high_int:
   529                           	opt stack 0
   530  000094                     i2c_configure_slave@addr:
   531                           	opt stack 0
   532  000094                     OpenADC@config2:
   533                           	opt stack 0
   534  000094                     OpenTimer0@config:
   535                           	opt stack 0
   536  000094                     OpenTimer1@config1:
   537                           	opt stack 0
   538  000094                     Write1USART@data:
   539                           	opt stack 0
   540  000094                     Delay1KTCYx@unit:
   541                           	opt stack 0
   542  000094                     init_queue@qptr:
   543                           	opt stack 0
   544  000094                     check_msg@qptr:
   545                           	opt stack 0
   546  000094                     WriteI2CBuffer@msg:
   547                           	opt stack 0
   548  000094                     init_i2c@ic:
   549                           	opt stack 0
   550  000094                     init_uart_recv@uc:
   551                           	opt stack 0
   552  000094                     Open1USART@spbrg:
   553                           	opt stack 0
   554  000094                     memcpy@d1:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x34
   558  000094                     	ds	1
   559  000095                     ??_OpenTimer1:
   560  000095                     flipDBG@b:
   561                           	opt stack 0
   562  000095                     OpenADC@config3:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x35
   566  000095                     	ds	1
   567  000096                     ??_Open1USART:
   568  000096                     ??_WriteI2CBuffer:
   569  000096                     ??_init_queue:
   570  000096                     ??_check_msg:
   571  000096                     ?_in_low_int:
   572                           	opt stack 0
   573  000096                     OpenTimer1@config:
   574                           	opt stack 0
   575  000096                     uart_write@msg:
   576                           	opt stack 0
   577  000096                     memcpy@s1:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x36
   581  000096                     	ds	1
   582  000097                     ??_OpenADC:
   583  000097                     init_queue@i:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x37
   587  000097                     	ds	1
   588  000098                     ??_init_queues:
   589  000098                     ??_uart_write:
   590  000098                     ?_in_main:
   591                           	opt stack 0
   592  000098                     WriteI2CBuffer@length:
   593                           	opt stack 0
   594  000098                     memcpy@n:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x38
   598  000098                     	ds	1
   599  000099                     uart_write@length:
   600                           	opt stack 0
   601  000099                     Open1USART@config:
   602                           	opt stack 0
   603  000099                     WriteI2CBuffer@i:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x39
   607  000099                     	ds	1
   608  00009A                     ??_block_on_To_msgqueues:
   609  00009A                     uart_write@i:
   610                           	opt stack 0
   611  00009A                     OpenADC@config:
   612                           	opt stack 0
   613  00009A                     memcpy@d:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x3A
   617  00009A                     	ds	2
   618  00009C                     memcpy@s:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x3C
   622  00009C                     	ds	2
   623  00009E                     recv_msg@qptr:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x3E
   627  00009E                     	ds	2
   628  0000A0                     recv_msg@maxlength:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x40
   632  0000A0                     	ds	1
   633  0000A1                     recv_msg@msgtype:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x41
   637  0000A1                     	ds	2
   638  0000A3                     recv_msg@data:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x43
   642  0000A3                     	ds	2
   643  0000A5                     ??_recv_msg:
   644                           
   645                           ; 0 bytes @ 0x45
   646  0000A5                     	ds	2
   647  0000A7                     recv_msg@slot:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x47
   651  0000A7                     	ds	1
   652  0000A8                     recv_msg@tlength:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x48
   656  0000A8                     	ds	2
   657  0000AA                     recv_msg@qmsg:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x4A
   661  0000AA                     	ds	2
   662  0000AC                     ToMainLow_recvmsg@msgtype:
   663                           	opt stack 0
   664  0000AC                     ToMainHigh_recvmsg@msgtype:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x4C
   668  0000AC                     	ds	2
   669  0000AE                     ToMainLow_recvmsg@data:
   670                           	opt stack 0
   671  0000AE                     ToMainHigh_recvmsg@data:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x4E
   675  0000AE                     	ds	2
   676  0000B0                     ToMainLow_recvmsg@maxlength:
   677                           	opt stack 0
   678  0000B0                     ToMainHigh_recvmsg@maxlength:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x50
   682  0000B0                     	ds	1
   683  0000B1                     ??_main:
   684                           
   685                           ; 0 bytes @ 0x51
   686  0000B1                     	ds	1
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           
   694                           	psect	cstackCOMRAM
   695  000001                     __pcstackCOMRAM:
   696                           	opt stack 0
   697  000001                     ??i1_flipDBG:
   698  000001                     ?_ReadTimer1:
   699                           	opt stack 0
   700  000001                     Read1USART@data:
   701                           	opt stack 0
   702  000001                     WriteTimer1@timer1:
   703                           	opt stack 0
   704  000001                     i1memcpy@d1:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x0
   708  000001                     	ds	1
   709  000002                     i1flipDBG@b:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x1
   713  000002                     	ds	1
   714  000003                     ReadTimer1@timer:
   715                           	opt stack 0
   716  000003                     WriteTimer1@timer:
   717                           	opt stack 0
   718  000003                     i1memcpy@s1:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x2
   722  000003                     	ds	2
   723  000005                     i1memcpy@n:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x4
   727  000005                     	ds	2
   728  000007                     i1memcpy@d:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x6
   732  000007                     	ds	2
   733  000009                     i1memcpy@s:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x8
   737  000009                     	ds	2
   738  00000B                     send_msg@qptr:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0xA
   742  00000B                     	ds	2
   743  00000D                     send_msg@length:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0xC
   747  00000D                     	ds	1
   748  00000E                     send_msg@msgtype:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0xD
   752  00000E                     	ds	1
   753  00000F                     send_msg@data:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0xE
   757  00000F                     	ds	2
   758  000011                     ??_send_msg:
   759                           
   760                           ; 0 bytes @ 0x10
   761  000011                     	ds	1
   762  000012                     send_msg@tlength:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x11
   766  000012                     	ds	2
   767  000014                     send_msg@slot:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x13
   771  000014                     	ds	1
   772  000015                     send_msg@qmsg:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x14
   776  000015                     	ds	2
   777  000017                     ToMainLow_sendmsg@msgtype:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x16
   781  000017                     	ds	1
   782  000018                     ToMainLow_sendmsg@data:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x17
   786  000018                     	ds	2
   787  00001A                     ToMainLow_sendmsg@length:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x19
   791  00001A                     	ds	1
   792  00001B                     ??_timer1_int_handler:
   793  00001B                     ??_retrieve_command:
   794                           
   795                           ; 0 bytes @ 0x1A
   796  00001B                     	ds	1
   797  00001C                     timer1_int_handler@result:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x1B
   801  00001C                     	ds	6
   802  000022                     ??_uart_recv_int_handler:
   803                           
   804                           ; 0 bytes @ 0x21
   805  000022                     	ds	1
   806  000023                     ??_InterruptHandlerLow:
   807                           
   808                           ; 0 bytes @ 0x22
   809  000023                     	ds	17
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           
   817 ;;
   818 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   819 ;;
   820 ;; *************** function _main *****************
   821 ;; Defined at:
   822 ;;		line 187 in file "../src/main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  msgId           2   24[BANK1 ] unsigned short 
   827 ;;  ic             76   51[BANK1 ] struct __i2c_comm
   828 ;;  msgbuffer      23    0[BANK1 ] unsigned char [23]
   829 ;;  uc             23   26[BANK1 ] struct __uart_comm
   830 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   831 ;;  uthread_data    2    0        struct __uart_thread_str
   832 ;;  length          1   50[BANK1 ] char 
   833 ;;  msgtype         1   49[BANK1 ] unsigned char 
   834 ;;  last_reg_rec    1   23[BANK1 ] unsigned char 
   835 ;;  i               1    0        unsigned char 
   836 ;;  c               1    0        unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;		None               void
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;      Locals:         0       0     127       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;      Totals:         0       1     127       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;Total ram usage:      128 bytes
   851 ;; Hardware stack levels required when called:   15
   852 ;; This function calls:
   853 ;;		_ConvertADC
   854 ;;		_Open1USART
   855 ;;		_OpenADC
   856 ;;		_OpenTimer0
   857 ;;		_OpenTimer1
   858 ;;		_ToMainHigh_recvmsg
   859 ;;		_ToMainLow_recvmsg
   860 ;;		_WriteI2CBuffer
   861 ;;		_block_on_To_msgqueues
   862 ;;		_enable_interrupts
   863 ;;		_i2c_configure_slave
   864 ;;		_init_i2c
   865 ;;		_init_queues
   866 ;;		_init_uart_recv
   867 ;;		_uart_write
   868 ;; This function is called by:
   869 ;;		Startup code after reset
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text0
   874  00070A                     __ptext0:
   875                           	opt stack 0
   876  00070A                     _main:
   877                           	opt stack 16
   878                           
   879                           ;main.c: 188: char c;
   880                           ;main.c: 189: signed char length;
   881                           ;main.c: 190: unsigned char msgtype;
   882                           ;main.c: 191: unsigned char last_reg_recvd;
   883                           ;main.c: 192: uart_comm uc;
   884                           ;main.c: 193: i2c_comm ic;
   885                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   886                           ;main.c: 195: unsigned char i;
   887                           ;main.c: 196: uart_thread_struct uthread_data;
   888                           ;main.c: 198: timer0_thread_struct t0thread_data;
   889                           ;main.c: 217: OSCCON = 0xE0;
   890                           
   891                           ;incstack = 0
   892  00070A  0EE0               	movlw	224
   893  00070C  6ED3               	movwf	4051,c	;volatile
   894                           
   895                           ;main.c: 218: OSCTUNEbits.PLLEN = 1;
   896  00070E  8C9B               	bsf	3995,6,c	;volatile
   897                           
   898                           ;main.c: 228: init_uart_recv(&uc);
   899  000710  0101               	movlb	1	; () banked
   900  000712  0E01               	movlw	high main@uc
   901  000714  0100               	movlb	0	; () banked
   902  000716  0100               	movlb	0	; () banked
   903  000718  6F95               	movwf	(init_uart_recv@uc+1)& (0+255),b
   904  00071A  0101               	movlb	1	; () banked
   905  00071C  0E1A               	movlw	low main@uc
   906  00071E  0100               	movlb	0	; () banked
   907  000720  0100               	movlb	0	; () banked
   908  000722  6F94               	movwf	init_uart_recv@uc& (0+255),b
   909  000724  EC22  F00E         	call	_init_uart_recv	;wreg free
   910                           
   911                           ;main.c: 231: init_i2c(&ic);
   912  000728  0101               	movlb	1	; () banked
   913  00072A  0E01               	movlw	high main@ic
   914  00072C  0100               	movlb	0	; () banked
   915  00072E  0100               	movlb	0	; () banked
   916  000730  6F95               	movwf	(init_i2c@ic+1)& (0+255),b
   917  000732  0101               	movlb	1	; () banked
   918  000734  0E33               	movlw	low main@ic
   919  000736  0100               	movlb	0	; () banked
   920  000738  0100               	movlb	0	; () banked
   921  00073A  6F94               	movwf	init_i2c@ic& (0+255),b
   922  00073C  ECC8  F007         	call	_init_i2c	;wreg free
   923                           
   924                           ;main.c: 237: init_queues();
   925  000740  EC1C  F00B         	call	_init_queues	;wreg free
   926                           
   927                           ;main.c: 241: TRISB = 0x0;
   928  000744  0E00               	movlw	0
   929  000746  6E93               	movwf	3987,c	;volatile
   930                           
   931                           ;main.c: 242: LATB = 0x0;
   932  000748  0E00               	movlw	0
   933  00074A  6E8A               	movwf	3978,c	;volatile
   934                           
   935                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110001);
   936  00074C  0ED1               	movlw	209
   937  00074E  ECE6  F00D         	call	_OpenTimer0
   938                           
   939                           ;main.c: 256: OpenADC(0b11011111 & 0b11111111 & 0b11111011, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b0001111111111111);
   940  000752  0100               	movlb	0	; () banked
   941  000754  6FB1               	movwf	??_main& (0+255),b
   942  000756  0E84               	movlw	132
   943  000758  0100               	movlb	0	; () banked
   944  00075A  0100               	movlb	0	; () banked
   945  00075C  6F94               	movwf	OpenADC@config2& (0+255),b
   946  00075E  0100               	movlb	0	; () banked
   947  000760  51B1               	movf	??_main& (0+255),w,b
   948  000762  0E1F               	movlw	31
   949  000764  0100               	movlb	0	; () banked
   950  000766  0100               	movlb	0	; () banked
   951  000768  6F96               	movwf	(OpenADC@config3+1)& (0+255),b
   952  00076A  0EFF               	movlw	255
   953  00076C  0100               	movlb	0	; () banked
   954  00076E  6F95               	movwf	OpenADC@config3& (0+255),b
   955  000770  0EDB               	movlw	219
   956  000772  EC0A  F00A         	call	_OpenADC
   957                           
   958                           ;main.c: 257: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
   959  000776  9C9E               	bcf	3998,6,c	;volatile
   960  000778  8CF2               	bsf	intcon,6,c	;volatile
   961  00077A  8C9D               	bsf	3997,6,c	;volatile
   962                           
   963                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
   964  00077C  0100               	movlb	0	; () banked
   965  00077E  6FB1               	movwf	??_main& (0+255),b
   966  000780  0E00               	movlw	0
   967  000782  0100               	movlb	0	; () banked
   968  000784  0100               	movlb	0	; () banked
   969  000786  6F94               	movwf	OpenTimer1@config1& (0+255),b
   970  000788  0100               	movlb	0	; () banked
   971  00078A  51B1               	movf	??_main& (0+255),w,b
   972  00078C  0E9B               	movlw	155
   973  00078E  EC22  F00D         	call	_OpenTimer1
   974                           
   975                           ;main.c: 273: IPR1bits.TMR1IP = 0;
   976  000792  909F               	bcf	3999,0,c	;volatile
   977                           
   978                           ;main.c: 275: IPR1bits.RCIP = 0;
   979  000794  9A9F               	bcf	3999,5,c	;volatile
   980                           
   981                           ;main.c: 277: IPR1bits.SSPIP = 1;
   982  000796  869F               	bsf	3999,3,c	;volatile
   983                           
   984                           ;main.c: 286: i2c_configure_slave(0x9E);
   985  000798  0E9E               	movlw	158
   986  00079A  ECFB  F00D         	call	_i2c_configure_slave
   987                           
   988                           ;main.c: 301: PIE1bits.SSPIE = 1;
   989  00079E  869D               	bsf	3997,3,c	;volatile
   990                           
   991                           ;main.c: 309: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   992                           ;main.c: 310: 0b11111111 & 0b11101111, 0x26);
   993  0007A0  0E00               	movlw	0
   994  0007A2  0100               	movlb	0	; () banked
   995  0007A4  0100               	movlb	0	; () banked
   996  0007A6  6F95               	movwf	(Open1USART@spbrg+1)& (0+255),b
   997  0007A8  0E26               	movlw	38
   998  0007AA  0100               	movlb	0	; () banked
   999  0007AC  6F94               	movwf	Open1USART@spbrg& (0+255),b
  1000  0007AE  0E6C               	movlw	108
  1001  0007B0  EC9F  F00A         	call	_Open1USART
  1002                           
  1003                           ;main.c: 319: enable_interrupts();
  1004  0007B4  EC96  F00E         	call	_enable_interrupts	;wreg free
  1005  0007B8                     l113:
  1006                           
  1007                           ;main.c: 343: block_on_To_msgqueues();
  1008  0007B8  EC5A  F00A         	call	_block_on_To_msgqueues	;wreg free
  1009                           
  1010                           ;main.c: 350: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
  1011  0007BC  0101               	movlb	1	; () banked
  1012  0007BE  0E01               	movlw	high main@msgtype
  1013  0007C0  0100               	movlb	0	; () banked
  1014  0007C2  0100               	movlb	0	; () banked
  1015  0007C4  6FAD               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1016  0007C6  0101               	movlb	1	; () banked
  1017  0007C8  0E31               	movlw	low main@msgtype
  1018  0007CA  0100               	movlb	0	; () banked
  1019  0007CC  0100               	movlb	0	; () banked
  1020  0007CE  6FAC               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1021  0007D0  0101               	movlb	1	; () banked
  1022  0007D2  0E01               	movlw	high main@msgbuffer
  1023  0007D4  0100               	movlb	0	; () banked
  1024  0007D6  0100               	movlb	0	; () banked
  1025  0007D8  6FAF               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1026  0007DA  0101               	movlb	1	; () banked
  1027  0007DC  0E00               	movlw	low main@msgbuffer
  1028  0007DE  0100               	movlb	0	; () banked
  1029  0007E0  0100               	movlb	0	; () banked
  1030  0007E2  6FAE               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1031  0007E4  0E16               	movlw	22
  1032  0007E6  EC01  F00D         	call	_ToMainHigh_recvmsg
  1033  0007EA  0101               	movlb	1	; () banked
  1034  0007EC  0101               	movlb	1	; () banked
  1035  0007EE  6F32               	movwf	main@length& (0+255),b
  1036                           
  1037                           ; BSR set to: 1
  1038                           ;main.c: 351: if (length < 0) {
  1039  0007F0  0101               	movlb	1	; () banked
  1040  0007F2  0101               	movlb	1	; () banked
  1041  0007F4  BF32               	btfsc	main@length& (0+255),7,b
  1042  0007F6  D031               	goto	l2605
  1043  0007F8  D026               	goto	l2603
  1044  0007FA                     l2597:
  1045                           
  1046                           ; BSR set to: 1
  1047                           ;main.c: 359: {
  1048                           ;main.c: 363: unsigned short msgId = msgbuffer[0] >> 4;
  1049  0007FA  C100  F0B1         	movff	main@msgbuffer,??_main
  1050  0007FE  0100               	movlb	0	; () banked
  1051  000800  3BB1               	swapf	??_main& (0+255),f,b
  1052  000802  0E0F               	movlw	15
  1053  000804  17B1               	andwf	??_main& (0+255),f,b
  1054  000806  0100               	movlb	0	; () banked
  1055  000808  51B1               	movf	??_main& (0+255),w,b
  1056  00080A  0101               	movlb	1	; () banked
  1057  00080C  0101               	movlb	1	; () banked
  1058  00080E  6F18               	movwf	main@msgId& (0+255),b
  1059  000810  0101               	movlb	1	; () banked
  1060  000812  6B19               	clrf	(main@msgId+1)& (0+255),b
  1061                           
  1062                           ;main.c: 364: if (msgId != 0x1)
  1063  000814  0101               	movlb	1	; () banked
  1064  000816  0101               	movlb	1	; () banked
  1065  000818  0518               	decf	main@msgId& (0+255),w,b
  1066  00081A  1119               	iorwf	(main@msgId+1)& (0+255),w,b
  1067  00081C  B4D8               	btfsc	status,2,c
  1068  00081E  D01D               	goto	l2605
  1069                           
  1070                           ; BSR set to: 1
  1071                           ;main.c: 365: uart_write(length-1,msgbuffer);
  1072  000820  0101               	movlb	1	; () banked
  1073  000822  0E01               	movlw	high main@msgbuffer
  1074  000824  0100               	movlb	0	; () banked
  1075  000826  0100               	movlb	0	; () banked
  1076  000828  6F97               	movwf	(uart_write@msg+1)& (0+255),b
  1077  00082A  0101               	movlb	1	; () banked
  1078  00082C  0E00               	movlw	low main@msgbuffer
  1079  00082E  0100               	movlb	0	; () banked
  1080  000830  0100               	movlb	0	; () banked
  1081  000832  6F96               	movwf	uart_write@msg& (0+255),b
  1082  000834  0101               	movlb	1	; () banked
  1083  000836  0101               	movlb	1	; () banked
  1084  000838  0532               	decf	main@length& (0+255),w,b
  1085  00083A  EC8C  F00B         	call	_uart_write
  1086  00083E  D00D               	goto	l2605
  1087  000840                     l121:
  1088                           
  1089                           ; BSR set to: 1
  1090                           ;main.c: 370: {
  1091                           ;main.c: 373: last_reg_recvd = msgbuffer[0];
  1092  000840  C100  F117         	movff	main@msgbuffer,main@last_reg_recvd
  1093                           
  1094                           ;main.c: 374: break;
  1095  000844  D00A               	goto	l2605
  1096  000846                     l2603:
  1097                           
  1098                           ; BSR set to: 1
  1099  000846  0101               	movlb	1	; () banked
  1100  000848  0101               	movlb	1	; () banked
  1101  00084A  5131               	movf	main@msgtype& (0+255),w,b
  1102                           
  1103                           ; Switch size 1, requested type "space"
  1104                           ; Number of cases is 3, Range of values is 40 to 42
  1105                           ; switch strategies available:
  1106                           ; Name         Instructions Cycles
  1107                           ; simple_byte           10     6 (average)
  1108                           ;	Chosen strategy is simple_byte
  1109  00084C  0A28               	xorlw	40	; case 40
  1110  00084E  B4D8               	btfsc	status,2,c
  1111  000850  D7D4               	goto	l2597
  1112  000852  0A01               	xorlw	1	; case 41
  1113  000854  B4D8               	btfsc	status,2,c
  1114  000856  D7F4               	goto	l121
  1115  000858  0A03               	xorlw	3	; case 42
  1116  00085A                     l2605:
  1117                           
  1118                           ;main.c: 395: }
  1119                           ;main.c: 398: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
  1120  00085A  0101               	movlb	1	; () banked
  1121  00085C  0E01               	movlw	high main@msgtype
  1122  00085E  0100               	movlb	0	; () banked
  1123  000860  0100               	movlb	0	; () banked
  1124  000862  6FAD               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1125  000864  0101               	movlb	1	; () banked
  1126  000866  0E31               	movlw	low main@msgtype
  1127  000868  0100               	movlb	0	; () banked
  1128  00086A  0100               	movlb	0	; () banked
  1129  00086C  6FAC               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1130  00086E  0101               	movlb	1	; () banked
  1131  000870  0E01               	movlw	high main@msgbuffer
  1132  000872  0100               	movlb	0	; () banked
  1133  000874  0100               	movlb	0	; () banked
  1134  000876  6FAF               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1135  000878  0101               	movlb	1	; () banked
  1136  00087A  0E00               	movlw	low main@msgbuffer
  1137  00087C  0100               	movlb	0	; () banked
  1138  00087E  0100               	movlb	0	; () banked
  1139  000880  6FAE               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1140  000882  0E16               	movlw	22
  1141  000884  ECE0  F00C         	call	_ToMainLow_recvmsg
  1142  000888  0101               	movlb	1	; () banked
  1143  00088A  0101               	movlb	1	; () banked
  1144  00088C  6F32               	movwf	main@length& (0+255),b
  1145                           
  1146                           ; BSR set to: 1
  1147                           ;main.c: 399: if (length < 0) {
  1148  00088E  0101               	movlb	1	; () banked
  1149  000890  0101               	movlb	1	; () banked
  1150  000892  BF32               	btfsc	main@length& (0+255),7,b
  1151  000894  D791               	goto	l113
  1152  000896  D013               	goto	l2617
  1153  000898                     l2611:
  1154                           
  1155                           ; BSR set to: 1
  1156                           ;main.c: 407: {
  1157                           ;main.c: 408: ConvertADC();
  1158  000898  EC9D  F00E         	call	_ConvertADC	;wreg free
  1159                           
  1160                           ;main.c: 409: break;
  1161  00089C  D78D               	goto	l113
  1162  00089E                     l2613:
  1163                           
  1164                           ;main.c: 417: {
  1165                           ;main.c: 425: WriteI2CBuffer(length, msgbuffer);
  1166  00089E  0101               	movlb	1	; () banked
  1167  0008A0  0E01               	movlw	high main@msgbuffer
  1168  0008A2  0100               	movlb	0	; () banked
  1169  0008A4  0100               	movlb	0	; () banked
  1170  0008A6  6F95               	movwf	(WriteI2CBuffer@msg+1)& (0+255),b
  1171  0008A8  0101               	movlb	1	; () banked
  1172  0008AA  0E00               	movlw	low main@msgbuffer
  1173  0008AC  0100               	movlb	0	; () banked
  1174  0008AE  0100               	movlb	0	; () banked
  1175  0008B0  6F94               	movwf	WriteI2CBuffer@msg& (0+255),b
  1176  0008B2  0101               	movlb	1	; () banked
  1177  0008B4  0101               	movlb	1	; () banked
  1178  0008B6  5132               	movf	main@length& (0+255),w,b
  1179  0008B8  ECF6  F006         	call	_WriteI2CBuffer
  1180  0008BC  D77D               	goto	l113
  1181  0008BE                     l2617:
  1182  0008BE  0101               	movlb	1	; () banked
  1183  0008C0  0101               	movlb	1	; () banked
  1184  0008C2  5131               	movf	main@msgtype& (0+255),w,b
  1185                           
  1186                           ; Switch size 1, requested type "space"
  1187                           ; Number of cases is 4, Range of values is 30 to 48
  1188                           ; switch strategies available:
  1189                           ; Name         Instructions Cycles
  1190                           ; simple_byte           13     7 (average)
  1191                           ;	Chosen strategy is simple_byte
  1192  0008C4  0A1E               	xorlw	30	; case 30
  1193  0008C6  B4D8               	btfsc	status,2,c
  1194  0008C8  D777               	goto	l113
  1195  0008CA  0A01               	xorlw	1	; case 31
  1196  0008CC  B4D8               	btfsc	status,2,c
  1197  0008CE  D7E7               	goto	l2613
  1198  0008D0  0A30               	xorlw	48	; case 47
  1199  0008D2  B4D8               	btfsc	status,2,c
  1200  0008D4  D771               	goto	l113
  1201  0008D6  0A1F               	xorlw	31	; case 48
  1202  0008D8  B4D8               	btfsc	status,2,c
  1203  0008DA  D7DE               	goto	l2611
  1204  0008DC  D76D               	goto	l113
  1205  0008DE                     __end_of_main:
  1206                           	opt stack 0
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           intcon	equ	0xFF2
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _uart_write *****************
  1217 ;; Defined at:
  1218 ;;		line 56 in file "../src/my_uart.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  length          1    wreg     unsigned char 
  1221 ;;  msg             2   54[BANK0 ] PTR unsigned char 
  1222 ;;		 -> main@msgbuffer(23), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  length          1   57[BANK0 ] unsigned char 
  1225 ;;  i               1   58[BANK0 ] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;Total ram usage:        5 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:   12
  1242 ;; This function calls:
  1243 ;;		_Write1USART
  1244 ;;		_flipDBG
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text1
  1251  001718                     __ptext1:
  1252                           	opt stack 0
  1253  001718                     _uart_write:
  1254                           	opt stack 18
  1255                           
  1256                           ; BSR set to: 1
  1257                           ;incstack = 0
  1258                           ;uart_write@length stored from wreg
  1259  001718  CFE8 F099          	movff	wreg,uart_write@length
  1260                           
  1261                           ;my_uart.c: 58: flipDBG(4);
  1262  00171C  0E04               	movlw	4
  1263  00171E  EC61  F007         	call	_flipDBG
  1264                           
  1265                           ;my_uart.c: 60: unsigned char i = 0;
  1266  001722  0100               	movlb	0	; () banked
  1267  001724  6F98               	movwf	??_uart_write& (0+255),b
  1268  001726  0E00               	movlw	0
  1269  001728  0100               	movlb	0	; () banked
  1270  00172A  0100               	movlb	0	; () banked
  1271  00172C  6F9A               	movwf	uart_write@i& (0+255),b
  1272  00172E  0100               	movlb	0	; () banked
  1273  001730  5198               	movf	??_uart_write& (0+255),w,b
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;my_uart.c: 61: for(i = 0; i < length; i++){
  1277  001732  0100               	movlb	0	; () banked
  1278  001734  6F98               	movwf	??_uart_write& (0+255),b
  1279  001736  0E00               	movlw	0
  1280  001738  0100               	movlb	0	; () banked
  1281  00173A  0100               	movlb	0	; () banked
  1282  00173C  6F9A               	movwf	uart_write@i& (0+255),b
  1283  00173E  0100               	movlb	0	; () banked
  1284  001740  5198               	movf	??_uart_write& (0+255),w,b
  1285  001742  D016               	goto	l2789
  1286  001744                     l382:
  1287  001744  A2AD               	btfss	4013,1,c	;volatile
  1288  001746  D7FE               	goto	l382
  1289                           
  1290                           ;my_uart.c: 69: Write1USART(msg[i]);
  1291  001748  0100               	movlb	0	; () banked
  1292  00174A  0100               	movlb	0	; () banked
  1293  00174C  519A               	movf	uart_write@i& (0+255),w,b
  1294  00174E  0D01               	mullw	1
  1295  001750  50F3               	movf	prodl,w,c
  1296  001752  0100               	movlb	0	; () banked
  1297  001754  0100               	movlb	0	; () banked
  1298  001756  2596               	addwf	uart_write@msg& (0+255),w,b
  1299  001758  6ED9               	movwf	fsr2l,c
  1300  00175A  50F4               	movf	prodh,w,c
  1301  00175C  0100               	movlb	0	; () banked
  1302  00175E  0100               	movlb	0	; () banked
  1303  001760  2197               	addwfc	(uart_write@msg+1)& (0+255),w,b
  1304  001762  6EDA               	movwf	fsr2h,c
  1305  001764  50DF               	movf	indf2,w,c
  1306  001766  EC57  F00E         	call	_Write1USART
  1307  00176A  0100               	movlb	0	; () banked
  1308  00176C  0100               	movlb	0	; () banked
  1309  00176E  2B9A               	incf	uart_write@i& (0+255),f,b
  1310  001770                     l2789:
  1311                           
  1312                           ; BSR set to: 0
  1313  001770  0100               	movlb	0	; () banked
  1314  001772  0100               	movlb	0	; () banked
  1315  001774  5199               	movf	uart_write@length& (0+255),w,b
  1316  001776  0100               	movlb	0	; () banked
  1317  001778  0100               	movlb	0	; () banked
  1318  00177A  5D9A               	subwf	uart_write@i& (0+255),w,b
  1319  00177C  B0D8               	btfsc	status,0,c
  1320                           
  1321                           ; BSR set to: 0
  1322                           
  1323                           ; BSR set to: 0
  1324  00177E  0012               	return	
  1325  001780  D7E1               	goto	l382
  1326  001782                     __end_of_uart_write:
  1327                           	opt stack 0
  1328                           tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           prodh	equ	0xFF4
  1333                           prodl	equ	0xFF3
  1334                           intcon	equ	0xFF2
  1335                           postinc0	equ	0xFEE
  1336                           wreg	equ	0xFE8
  1337                           indf2	equ	0xFDF
  1338                           fsr2h	equ	0xFDA
  1339                           fsr2l	equ	0xFD9
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _flipDBG *****************
  1343 ;; Defined at:
  1344 ;;		line 47 in file "../src/debug.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  b               1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  b               1   53[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;		None               void
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:   11
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_uart_write
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text2
  1373  000EC2                     __ptext2:
  1374                           	opt stack 0
  1375  000EC2                     _flipDBG:
  1376                           	opt stack 18
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;incstack = 0
  1380                           ;flipDBG@b stored from wreg
  1381  000EC2  CFE8 F095          	movff	wreg,flipDBG@b
  1382                           
  1383                           ;debug.c: 48: switch(b) {
  1384  000EC6  D051               	goto	l2959
  1385  000EC8                     l2947:
  1386                           
  1387                           ;debug.c: 50: LATBbits.LATB0 = !LATBbits.LATB0;
  1388  000EC8  B08A               	btfsc	3978,0,c	;volatile
  1389  000ECA  D002               	goto	u2010
  1390  000ECC  0E01               	movlw	1
  1391  000ECE  D001               	goto	u2016
  1392  000ED0                     u2010:
  1393  000ED0  0E00               	movlw	0
  1394  000ED2                     u2016:
  1395  000ED2  0100               	movlb	0	; () banked
  1396  000ED4  6F94               	movwf	??_flipDBG& (0+255),b
  1397  000ED6  508A               	movf	3978,w,c	;volatile
  1398  000ED8  0100               	movlb	0	; () banked
  1399  000EDA  1994               	xorwf	??_flipDBG& (0+255),w,b
  1400  000EDC  0BFE               	andlw	-2
  1401  000EDE  1994               	xorwf	??_flipDBG& (0+255),w,b
  1402  000EE0  6E8A               	movwf	3978,c	;volatile
  1403                           
  1404                           ;debug.c: 51: break;
  1405  000EE2  0012               	return	
  1406  000EE4                     l2949:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;debug.c: 53: LATBbits.LATB1 = !LATBbits.LATB1;
  1410  000EE4  B28A               	btfsc	3978,1,c	;volatile
  1411  000EE6  D002               	goto	u2020
  1412  000EE8  0E01               	movlw	1
  1413  000EEA  D001               	goto	u2026
  1414  000EEC                     u2020:
  1415  000EEC  0E00               	movlw	0
  1416  000EEE                     u2026:
  1417  000EEE  0100               	movlb	0	; () banked
  1418  000EF0  6F94               	movwf	??_flipDBG& (0+255),b
  1419  000EF2  0100               	movlb	0	; () banked
  1420  000EF4  4794               	rlncf	??_flipDBG& (0+255),f,b
  1421  000EF6  508A               	movf	3978,w,c	;volatile
  1422  000EF8  0100               	movlb	0	; () banked
  1423  000EFA  1994               	xorwf	??_flipDBG& (0+255),w,b
  1424  000EFC  0BFD               	andlw	-3
  1425  000EFE  1994               	xorwf	??_flipDBG& (0+255),w,b
  1426  000F00  6E8A               	movwf	3978,c	;volatile
  1427                           
  1428                           ;debug.c: 54: break;
  1429  000F02  0012               	return	
  1430  000F04                     l2951:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;debug.c: 56: LATBbits.LATB2 = !LATBbits.LATB2;
  1434  000F04  B48A               	btfsc	3978,2,c	;volatile
  1435  000F06  D002               	goto	u2030
  1436  000F08  0E01               	movlw	1
  1437  000F0A  D001               	goto	u2036
  1438  000F0C                     u2030:
  1439  000F0C  0E00               	movlw	0
  1440  000F0E                     u2036:
  1441  000F0E  0100               	movlb	0	; () banked
  1442  000F10  6F94               	movwf	??_flipDBG& (0+255),b
  1443  000F12  0100               	movlb	0	; () banked
  1444  000F14  4794               	rlncf	??_flipDBG& (0+255),f,b
  1445  000F16  4794               	rlncf	??_flipDBG& (0+255),f,b
  1446  000F18  508A               	movf	3978,w,c	;volatile
  1447  000F1A  0100               	movlb	0	; () banked
  1448  000F1C  1994               	xorwf	??_flipDBG& (0+255),w,b
  1449  000F1E  0BFB               	andlw	-5
  1450  000F20  1994               	xorwf	??_flipDBG& (0+255),w,b
  1451  000F22  6E8A               	movwf	3978,c	;volatile
  1452                           
  1453                           ;debug.c: 57: break;
  1454  000F24  0012               	return	
  1455  000F26                     l2953:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;debug.c: 59: LATBbits.LATB3 = !LATBbits.LATB3;
  1459  000F26  B68A               	btfsc	3978,3,c	;volatile
  1460  000F28  D002               	goto	u2040
  1461  000F2A  0E01               	movlw	1
  1462  000F2C  D001               	goto	u2046
  1463  000F2E                     u2040:
  1464  000F2E  0E00               	movlw	0
  1465  000F30                     u2046:
  1466  000F30  0100               	movlb	0	; () banked
  1467  000F32  6F94               	movwf	??_flipDBG& (0+255),b
  1468  000F34  0100               	movlb	0	; () banked
  1469  000F36  4794               	rlncf	??_flipDBG& (0+255),f,b
  1470  000F38  4794               	rlncf	??_flipDBG& (0+255),f,b
  1471  000F3A  4794               	rlncf	??_flipDBG& (0+255),f,b
  1472  000F3C  508A               	movf	3978,w,c	;volatile
  1473  000F3E  0100               	movlb	0	; () banked
  1474  000F40  1994               	xorwf	??_flipDBG& (0+255),w,b
  1475  000F42  0BF7               	andlw	-9
  1476  000F44  1994               	xorwf	??_flipDBG& (0+255),w,b
  1477  000F46  6E8A               	movwf	3978,c	;volatile
  1478                           
  1479                           ;debug.c: 60: break;
  1480  000F48  0012               	return	
  1481  000F4A                     l2955:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;debug.c: 62: LATBbits.LATB4 = !LATBbits.LATB4;
  1485  000F4A  B88A               	btfsc	3978,4,c	;volatile
  1486  000F4C  D002               	goto	u2050
  1487  000F4E  0E01               	movlw	1
  1488  000F50  D001               	goto	u2056
  1489  000F52                     u2050:
  1490  000F52  0E00               	movlw	0
  1491  000F54                     u2056:
  1492  000F54  0100               	movlb	0	; () banked
  1493  000F56  6F94               	movwf	??_flipDBG& (0+255),b
  1494  000F58  0100               	movlb	0	; () banked
  1495  000F5A  3B94               	swapf	??_flipDBG& (0+255),f,b
  1496  000F5C  508A               	movf	3978,w,c	;volatile
  1497  000F5E  0100               	movlb	0	; () banked
  1498  000F60  1994               	xorwf	??_flipDBG& (0+255),w,b
  1499  000F62  0BEF               	andlw	-17
  1500  000F64  1994               	xorwf	??_flipDBG& (0+255),w,b
  1501  000F66  6E8A               	movwf	3978,c	;volatile
  1502                           
  1503                           ;debug.c: 63: break;
  1504  000F68  0012               	return	
  1505  000F6A                     l2959:
  1506  000F6A  0100               	movlb	0	; () banked
  1507  000F6C  0100               	movlb	0	; () banked
  1508  000F6E  5195               	movf	flipDBG@b& (0+255),w,b
  1509                           
  1510                           ; Switch size 1, requested type "space"
  1511                           ; Number of cases is 5, Range of values is 0 to 4
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte           16     9 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516  000F70  0A00               	xorlw	0	; case 0
  1517  000F72  B4D8               	btfsc	status,2,c
  1518  000F74  D7A9               	goto	l2947
  1519  000F76  0A01               	xorlw	1	; case 1
  1520  000F78  B4D8               	btfsc	status,2,c
  1521  000F7A  D7B4               	goto	l2949
  1522  000F7C  0A03               	xorlw	3	; case 2
  1523  000F7E  B4D8               	btfsc	status,2,c
  1524  000F80  D7C1               	goto	l2951
  1525  000F82  0A01               	xorlw	1	; case 3
  1526  000F84  B4D8               	btfsc	status,2,c
  1527  000F86  D7CF               	goto	l2953
  1528  000F88  0A07               	xorlw	7	; case 4
  1529  000F8A  A4D8               	btfss	status,2,c
  1530  000F8C  0012               	return	
  1531  000F8E  D7DD               	goto	l2955
  1532  000F90                     __end_of_flipDBG:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           prodh	equ	0xFF4
  1539                           prodl	equ	0xFF3
  1540                           intcon	equ	0xFF2
  1541                           postinc0	equ	0xFEE
  1542                           wreg	equ	0xFE8
  1543                           indf2	equ	0xFDF
  1544                           fsr2h	equ	0xFDA
  1545                           fsr2l	equ	0xFD9
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _Write1USART *****************
  1549 ;; Defined at:
  1550 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/u1write.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  data            1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  data            1   52[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		wreg
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;Total ram usage:        1 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:   11
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_uart_write
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text3
  1579  001CAE                     __ptext3:
  1580                           	opt stack 0
  1581  001CAE                     _Write1USART:
  1582                           	opt stack 18
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;incstack = 0
  1586                           ;Write1USART@data stored from wreg
  1587  001CAE  CFE8 F094          	movff	wreg,Write1USART@data
  1588  001CB2  ACAD               	btfss	4013,6,c	;volatile
  1589  001CB4  D003               	goto	l2983
  1590  001CB6  90AD               	bcf	4013,0,c	;volatile
  1591  001CB8  B241               	btfsc	_USART1_Status,1,c
  1592  001CBA  80AD               	bsf	4013,0,c	;volatile
  1593  001CBC                     l2983:
  1594  001CBC  C094  FFAE         	movff	Write1USART@data,4014	;volatile
  1595  001CC0  0012               	return	
  1596  001CC2                     __end_of_Write1USART:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodh	equ	0xFF4
  1603                           prodl	equ	0xFF3
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           indf2	equ	0xFDF
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function _init_uart_recv *****************
  1613 ;; Defined at:
  1614 ;;		line 51 in file "../src/my_uart.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  uc              2   52[BANK0 ] PTR struct __uart_comm
  1617 ;;		 -> main@uc(23), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;Total ram usage:        2 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:   11
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text4
  1644  001C44                     __ptext4:
  1645                           	opt stack 0
  1646  001C44                     _init_uart_recv:
  1647                           	opt stack 19
  1648                           
  1649                           ;my_uart.c: 52: uc_ptr = uc;
  1650                           
  1651                           ;incstack = 0
  1652  001C44  0100               	movlb	0	; () banked
  1653  001C46  C095  F043         	movff	init_uart_recv@uc+1,_uc_ptr+1
  1654  001C4A  0100               	movlb	0	; () banked
  1655  001C4C  C094  F042         	movff	init_uart_recv@uc,_uc_ptr
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  1659  001C50  EE20 F016          	lfsr	2,22
  1660  001C54  5042               	movf	_uc_ptr,w,c
  1661  001C56  26D9               	addwf	fsr2l,f,c
  1662  001C58  5043               	movf	_uc_ptr+1,w,c
  1663  001C5A  22DA               	addwfc	fsr2h,f,c
  1664  001C5C  0E00               	movlw	0
  1665  001C5E  6EDF               	movwf	indf2,c
  1666                           
  1667                           ; BSR set to: 0
  1668  001C60  0012               	return	
  1669  001C62                     __end_of_init_uart_recv:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           prodh	equ	0xFF4
  1676                           prodl	equ	0xFF3
  1677                           intcon	equ	0xFF2
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           indf2	equ	0xFDF
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _init_queues *****************
  1686 ;; Defined at:
  1687 ;;		line 194 in file "../src/messages.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;		None               void
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:   12
  1708 ;; This function calls:
  1709 ;;		_init_queue
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text5
  1716  001638                     __ptext5:
  1717                           	opt stack 0
  1718  001638                     _init_queues:
  1719                           	opt stack 18
  1720                           
  1721                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;incstack = 0
  1725  001638  0100               	movlb	0	; () banked
  1726  00163A  6F98               	movwf	??_init_queues& (0+255),b
  1727  00163C  0E00               	movlw	0
  1728  00163E  0100               	movlb	0	; () banked
  1729  001640  0100               	movlb	0	; () banked
  1730  001642  6FB4               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  1731  001644  0100               	movlb	0	; () banked
  1732  001646  5198               	movf	??_init_queues& (0+255),w,b
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1736  001648  0101               	movlb	1	; () banked
  1737  00164A  0E01               	movlw	high _ToMainLow_MQ
  1738  00164C  0100               	movlb	0	; () banked
  1739  00164E  0100               	movlb	0	; () banked
  1740  001650  6F95               	movwf	(init_queue@qptr+1)& (0+255),b
  1741  001652  0101               	movlb	1	; () banked
  1742  001654  0E7F               	movlw	low _ToMainLow_MQ
  1743  001656  0100               	movlb	0	; () banked
  1744  001658  0100               	movlb	0	; () banked
  1745  00165A  6F94               	movwf	init_queue@qptr& (0+255),b
  1746  00165C  ECDF  F00A         	call	_init_queue	;wreg free
  1747                           
  1748                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1749  001660  0102               	movlb	2	; () banked
  1750  001662  0E02               	movlw	high _ToMainHigh_MQ
  1751  001664  0100               	movlb	0	; () banked
  1752  001666  0100               	movlb	0	; () banked
  1753  001668  6F95               	movwf	(init_queue@qptr+1)& (0+255),b
  1754  00166A  0102               	movlb	2	; () banked
  1755  00166C  0E66               	movlw	low _ToMainHigh_MQ
  1756  00166E  0100               	movlb	0	; () banked
  1757  001670  0100               	movlb	0	; () banked
  1758  001672  6F94               	movwf	init_queue@qptr& (0+255),b
  1759  001674  ECDF  F00A         	call	_init_queue	;wreg free
  1760                           
  1761                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1762  001678  0102               	movlb	2	; () banked
  1763  00167A  0E02               	movlw	high _FromMainLow_MQ
  1764  00167C  0100               	movlb	0	; () banked
  1765  00167E  0100               	movlb	0	; () banked
  1766  001680  6F95               	movwf	(init_queue@qptr+1)& (0+255),b
  1767  001682  0102               	movlb	2	; () banked
  1768  001684  0E00               	movlw	low _FromMainLow_MQ
  1769  001686  0100               	movlb	0	; () banked
  1770  001688  0100               	movlb	0	; () banked
  1771  00168A  6F94               	movwf	init_queue@qptr& (0+255),b
  1772  00168C  ECDF  F00A         	call	_init_queue	;wreg free
  1773                           
  1774                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1775  001690  0103               	movlb	3	; () banked
  1776  001692  0E03               	movlw	high _FromMainHigh_MQ
  1777  001694  0100               	movlb	0	; () banked
  1778  001696  0100               	movlb	0	; () banked
  1779  001698  6F95               	movwf	(init_queue@qptr+1)& (0+255),b
  1780  00169A  0103               	movlb	3	; () banked
  1781  00169C  0E00               	movlw	low _FromMainHigh_MQ
  1782  00169E  0100               	movlb	0	; () banked
  1783  0016A0  0100               	movlb	0	; () banked
  1784  0016A2  6F94               	movwf	init_queue@qptr& (0+255),b
  1785  0016A4  ECDF  F00A         	call	_init_queue	;wreg free
  1786  0016A8  0012               	return	
  1787  0016AA                     __end_of_init_queues:
  1788                           	opt stack 0
  1789                           tblptru	equ	0xFF8
  1790                           tblptrh	equ	0xFF7
  1791                           tblptrl	equ	0xFF6
  1792                           tablat	equ	0xFF5
  1793                           prodh	equ	0xFF4
  1794                           prodl	equ	0xFF3
  1795                           intcon	equ	0xFF2
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           indf2	equ	0xFDF
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _init_queue *****************
  1804 ;; Defined at:
  1805 ;;		line 14 in file "../src/messages.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  qptr            2   52[BANK0 ] PTR struct __msg_queue
  1808 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  i               1   55[BANK0 ] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:        4 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:   11
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_init_queues
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text6
  1835  0015BE                     __ptext6:
  1836                           	opt stack 0
  1837  0015BE                     _init_queue:
  1838                           	opt stack 18
  1839                           
  1840                           ;messages.c: 15: unsigned char i;
  1841                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1842                           
  1843                           ;incstack = 0
  1844  0015BE  0100               	movlb	0	; () banked
  1845  0015C0  EE20 F064          	lfsr	2,100
  1846  0015C4  0100               	movlb	0	; () banked
  1847  0015C6  5194               	movf	init_queue@qptr& (0+255),w,b
  1848  0015C8  26D9               	addwf	fsr2l,f,c
  1849  0015CA  0100               	movlb	0	; () banked
  1850  0015CC  5195               	movf	(init_queue@qptr+1)& (0+255),w,b
  1851  0015CE  22DA               	addwfc	fsr2h,f,c
  1852  0015D0  0E00               	movlw	0
  1853  0015D2  6EDF               	movwf	indf2,c
  1854                           
  1855                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1856  0015D4  0100               	movlb	0	; () banked
  1857  0015D6  EE20 F065          	lfsr	2,101
  1858  0015DA  0100               	movlb	0	; () banked
  1859  0015DC  5194               	movf	init_queue@qptr& (0+255),w,b
  1860  0015DE  26D9               	addwf	fsr2l,f,c
  1861  0015E0  0100               	movlb	0	; () banked
  1862  0015E2  5195               	movf	(init_queue@qptr+1)& (0+255),w,b
  1863  0015E4  22DA               	addwfc	fsr2h,f,c
  1864  0015E6  0E00               	movlw	0
  1865  0015E8  6EDF               	movwf	indf2,c
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1869  0015EA  0100               	movlb	0	; () banked
  1870  0015EC  6F96               	movwf	??_init_queue& (0+255),b
  1871  0015EE  0E00               	movlw	0
  1872  0015F0  0100               	movlb	0	; () banked
  1873  0015F2  0100               	movlb	0	; () banked
  1874  0015F4  6F97               	movwf	init_queue@i& (0+255),b
  1875  0015F6  0100               	movlb	0	; () banked
  1876  0015F8  5196               	movf	??_init_queue& (0+255),w,b
  1877                           
  1878                           ; BSR set to: 0
  1879  0015FA  0E03               	movlw	3
  1880  0015FC  0100               	movlb	0	; () banked
  1881  0015FE  0100               	movlb	0	; () banked
  1882  001600  6597               	cpfsgt	init_queue@i& (0+255),b
  1883  001602  D001               	goto	l2821
  1884  001604  0012               	return	
  1885  001606                     l2821:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;messages.c: 20: qptr->queue[i].full = 0;
  1889  001606  0100               	movlb	0	; () banked
  1890  001608  0100               	movlb	0	; () banked
  1891  00160A  5197               	movf	init_queue@i& (0+255),w,b
  1892  00160C  0D19               	mullw	25
  1893  00160E  50F3               	movf	prodl,w,c
  1894  001610  0100               	movlb	0	; () banked
  1895  001612  0100               	movlb	0	; () banked
  1896  001614  2594               	addwf	init_queue@qptr& (0+255),w,b
  1897  001616  6ED9               	movwf	fsr2l,c
  1898  001618  50F4               	movf	prodh,w,c
  1899  00161A  0100               	movlb	0	; () banked
  1900  00161C  0100               	movlb	0	; () banked
  1901  00161E  2195               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1902  001620  6EDA               	movwf	fsr2h,c
  1903  001622  0E00               	movlw	0
  1904  001624  6EDF               	movwf	indf2,c
  1905                           
  1906                           ; BSR set to: 0
  1907  001626  0100               	movlb	0	; () banked
  1908  001628  0100               	movlb	0	; () banked
  1909  00162A  2B97               	incf	init_queue@i& (0+255),f,b
  1910                           
  1911                           ; BSR set to: 0
  1912  00162C  0E03               	movlw	3
  1913  00162E  0100               	movlb	0	; () banked
  1914  001630  0100               	movlb	0	; () banked
  1915  001632  6597               	cpfsgt	init_queue@i& (0+255),b
  1916  001634  D7E8               	goto	l2821
  1917  001636  0012               	return	
  1918  001638                     __end_of_init_queue:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           intcon	equ	0xFF2
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           indf2	equ	0xFDF
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _init_i2c *****************
  1935 ;; Defined at:
  1936 ;;		line 325 in file "../src/my_i2c.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  ic              2   52[BANK0 ] PTR struct __i2c_comm
  1939 ;;		 -> main@ic(76), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:   11
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text7
  1966  000F90                     __ptext7:
  1967                           	opt stack 0
  1968  000F90                     _init_i2c:
  1969                           	opt stack 19
  1970                           
  1971                           ;my_i2c.c: 326: ic_ptr = ic;
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;incstack = 0
  1975  000F90  0100               	movlb	0	; () banked
  1976  000F92  0100               	movlb	0	; () banked
  1977  000F94  C095  F0B3         	movff	init_i2c@ic+1,_ic_ptr+1
  1978  000F98  0100               	movlb	0	; () banked
  1979  000F9A  0100               	movlb	0	; () banked
  1980  000F9C  C094  F0B2         	movff	init_i2c@ic,_ic_ptr
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;my_i2c.c: 327: ic_ptr->buffer[0] = 0;
  1984  000FA0  C0B2  FFD9         	movff	_ic_ptr,fsr2l
  1985  000FA4  C0B3  FFDA         	movff	_ic_ptr+1,fsr2h
  1986  000FA8  0E00               	movlw	0
  1987  000FAA  6EDF               	movwf	indf2,c
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;my_i2c.c: 328: ic_ptr->buffer[1] = 0;
  1991  000FAC  0100               	movlb	0	; () banked
  1992  000FAE  EE20 F001          	lfsr	2,1
  1993  000FB2  0100               	movlb	0	; () banked
  1994  000FB4  51B2               	movf	_ic_ptr& (0+255),w,b
  1995  000FB6  26D9               	addwf	fsr2l,f,c
  1996  000FB8  0100               	movlb	0	; () banked
  1997  000FBA  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  1998  000FBC  22DA               	addwfc	fsr2h,f,c
  1999  000FBE  0E00               	movlw	0
  2000  000FC0  6EDF               	movwf	indf2,c
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;my_i2c.c: 329: ic_ptr->buffer[2] = 0;
  2004  000FC2  0100               	movlb	0	; () banked
  2005  000FC4  EE20 F002          	lfsr	2,2
  2006  000FC8  0100               	movlb	0	; () banked
  2007  000FCA  51B2               	movf	_ic_ptr& (0+255),w,b
  2008  000FCC  26D9               	addwf	fsr2l,f,c
  2009  000FCE  0100               	movlb	0	; () banked
  2010  000FD0  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2011  000FD2  22DA               	addwfc	fsr2h,f,c
  2012  000FD4  0E00               	movlw	0
  2013  000FD6  6EDF               	movwf	indf2,c
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;my_i2c.c: 330: ic_ptr->buflen = 0;
  2017  000FD8  0100               	movlb	0	; () banked
  2018  000FDA  EE20 F016          	lfsr	2,22
  2019  000FDE  0100               	movlb	0	; () banked
  2020  000FE0  51B2               	movf	_ic_ptr& (0+255),w,b
  2021  000FE2  26D9               	addwf	fsr2l,f,c
  2022  000FE4  0100               	movlb	0	; () banked
  2023  000FE6  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2024  000FE8  22DA               	addwfc	fsr2h,f,c
  2025  000FEA  0E00               	movlw	0
  2026  000FEC  6EDF               	movwf	indf2,c
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;my_i2c.c: 331: ic_ptr->event_count = 0;
  2030  000FEE  0100               	movlb	0	; () banked
  2031  000FF0  EE20 F017          	lfsr	2,23
  2032  000FF4  0100               	movlb	0	; () banked
  2033  000FF6  51B2               	movf	_ic_ptr& (0+255),w,b
  2034  000FF8  26D9               	addwf	fsr2l,f,c
  2035  000FFA  0100               	movlb	0	; () banked
  2036  000FFC  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2037  000FFE  22DA               	addwfc	fsr2h,f,c
  2038  001000  0E00               	movlw	0
  2039  001002  6EDF               	movwf	indf2,c
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;my_i2c.c: 332: ic_ptr->status = 0x5;
  2043  001004  0100               	movlb	0	; () banked
  2044  001006  EE20 F018          	lfsr	2,24
  2045  00100A  0100               	movlb	0	; () banked
  2046  00100C  51B2               	movf	_ic_ptr& (0+255),w,b
  2047  00100E  26D9               	addwf	fsr2l,f,c
  2048  001010  0100               	movlb	0	; () banked
  2049  001012  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2050  001014  22DA               	addwfc	fsr2h,f,c
  2051  001016  0E05               	movlw	5
  2052  001018  6EDF               	movwf	indf2,c
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;my_i2c.c: 333: ic_ptr->error_count = 0;
  2056  00101A  0100               	movlb	0	; () banked
  2057  00101C  EE20 F01A          	lfsr	2,26
  2058  001020  0100               	movlb	0	; () banked
  2059  001022  51B2               	movf	_ic_ptr& (0+255),w,b
  2060  001024  26D9               	addwf	fsr2l,f,c
  2061  001026  0100               	movlb	0	; () banked
  2062  001028  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2063  00102A  22DA               	addwfc	fsr2h,f,c
  2064  00102C  0E00               	movlw	0
  2065  00102E  6EDF               	movwf	indf2,c
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;my_i2c.c: 334: ic_ptr->sendBufInd = 0;
  2069  001030  0100               	movlb	0	; () banked
  2070  001032  EE20 F04B          	lfsr	2,75
  2071  001036  0100               	movlb	0	; () banked
  2072  001038  51B2               	movf	_ic_ptr& (0+255),w,b
  2073  00103A  26D9               	addwf	fsr2l,f,c
  2074  00103C  0100               	movlb	0	; () banked
  2075  00103E  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2076  001040  22DA               	addwfc	fsr2h,f,c
  2077  001042  0E00               	movlw	0
  2078  001044  6EDF               	movwf	indf2,c
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;my_i2c.c: 335: ic_ptr->sendBufLen = 0;
  2082  001046  0100               	movlb	0	; () banked
  2083  001048  EE20 F04A          	lfsr	2,74
  2084  00104C  0100               	movlb	0	; () banked
  2085  00104E  51B2               	movf	_ic_ptr& (0+255),w,b
  2086  001050  26D9               	addwf	fsr2l,f,c
  2087  001052  0100               	movlb	0	; () banked
  2088  001054  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2089  001056  22DA               	addwfc	fsr2h,f,c
  2090  001058  0E00               	movlw	0
  2091  00105A  6EDF               	movwf	indf2,c
  2092                           
  2093                           ; BSR set to: 0
  2094  00105C  0012               	return	
  2095  00105E                     __end_of_init_i2c:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodh	equ	0xFF4
  2102                           prodl	equ	0xFF3
  2103                           intcon	equ	0xFF2
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           indf2	equ	0xFDF
  2107                           fsr2h	equ	0xFDA
  2108                           fsr2l	equ	0xFD9
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _i2c_configure_slave *****************
  2112 ;; Defined at:
  2113 ;;		line 341 in file "../src/my_i2c.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  addr            1    wreg     unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  addr            1   52[BANK0 ] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;		None               void
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;Total ram usage:        1 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:   11
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text8
  2142  001BF6                     __ptext8:
  2143                           	opt stack 0
  2144  001BF6                     _i2c_configure_slave:
  2145                           	opt stack 19
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;incstack = 0
  2149                           ;i2c_configure_slave@addr stored from wreg
  2150  001BF6  CFE8 F094          	movff	wreg,i2c_configure_slave@addr
  2151                           
  2152                           ;my_i2c.c: 350: TRISBbits.TRISB4 = 1;
  2153  001BFA  8893               	bsf	3987,4,c	;volatile
  2154                           
  2155                           ;my_i2c.c: 351: TRISBbits.TRISB5 = 1;
  2156  001BFC  8A93               	bsf	3987,5,c	;volatile
  2157                           
  2158                           ;my_i2c.c: 359: SSPADD = addr;
  2159  001BFE  C094  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2160                           
  2161                           ;my_i2c.c: 361: SSPSTAT = 0x0;
  2162  001C02  0E00               	movlw	0
  2163  001C04  6EC7               	movwf	4039,c	;volatile
  2164                           
  2165                           ;my_i2c.c: 362: SSPCON1 = 0x0;
  2166  001C06  0E00               	movlw	0
  2167  001C08  6EC6               	movwf	4038,c	;volatile
  2168                           
  2169                           ;my_i2c.c: 363: SSPCON2 = 0x0;
  2170  001C0A  0E00               	movlw	0
  2171  001C0C  6EC5               	movwf	4037,c	;volatile
  2172                           
  2173                           ;my_i2c.c: 364: SSPCON1 |= 0x0E;
  2174  001C0E  0E0E               	movlw	14
  2175  001C10  12C6               	iorwf	4038,f,c	;volatile
  2176                           
  2177                           ;my_i2c.c: 365: SSPSTAT |= 0b10000000;
  2178  001C12  8EC7               	bsf	4039,7,c	;volatile
  2179                           
  2180                           ;my_i2c.c: 380: PORTBbits.SCL1 = 1;
  2181  001C14  8881               	bsf	3969,4,c	;volatile
  2182                           
  2183                           ;my_i2c.c: 381: PORTBbits.SDA1 = 1;
  2184  001C16  8A81               	bsf	3969,5,c	;volatile
  2185                           
  2186                           ;my_i2c.c: 390: SSPCON2bits.SEN = 1;
  2187  001C18  80C5               	bsf	4037,0,c	;volatile
  2188                           
  2189                           ;my_i2c.c: 391: SSPCON1 |= 0b00100000;
  2190  001C1A  8AC6               	bsf	4038,5,c	;volatile
  2191  001C1C  0012               	return	
  2192  001C1E                     __end_of_i2c_configure_slave:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           intcon	equ	0xFF2
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           indf2	equ	0xFDF
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208 ;; *************** function _enable_interrupts *****************
  2209 ;; Defined at:
  2210 ;;		line 14 in file "../src/interrupts.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		None
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:   11
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text9
  2239  001D2C                     __ptext9:
  2240                           	opt stack 0
  2241  001D2C                     _enable_interrupts:
  2242                           	opt stack 19
  2243                           
  2244                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2245                           
  2246                           ;incstack = 0
  2247  001D2C  8ED0               	bsf	4048,7,c	;volatile
  2248                           
  2249                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2250  001D2E  8EF2               	bsf	intcon,7,c	;volatile
  2251                           
  2252                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2253  001D30  8CF2               	bsf	intcon,6,c	;volatile
  2254  001D32  0012               	return	
  2255  001D34                     __end_of_enable_interrupts:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           intcon	equ	0xFF2
  2264                           postinc0	equ	0xFEE
  2265                           wreg	equ	0xFE8
  2266                           indf2	equ	0xFDF
  2267                           fsr2h	equ	0xFDA
  2268                           fsr2l	equ	0xFD9
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function _block_on_To_msgqueues *****************
  2272 ;; Defined at:
  2273 ;;		line 258 in file "../src/messages.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;		None               void
  2280 ;; Registers used:
  2281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;Total ram usage:        1 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:   14
  2294 ;; This function calls:
  2295 ;;		_Delay1KTCYx
  2296 ;;		_check_msg
  2297 ;;		_in_main
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text10
  2304  0014B4                     __ptext10:
  2305                           	opt stack 0
  2306  0014B4                     _block_on_To_msgqueues:
  2307                           	opt stack 16
  2308                           
  2309                           ;messages.c: 259: if (!in_main()) {
  2310                           
  2311                           ;incstack = 0
  2312  0014B4  ECBE  F00C         	call	_in_main	;wreg free
  2313  0014B8  0100               	movlb	0	; () banked
  2314  0014BA  0100               	movlb	0	; () banked
  2315  0014BC  5199               	movf	(?_in_main+1)& (0+255),w,b
  2316  0014BE  0100               	movlb	0	; () banked
  2317  0014C0  1198               	iorwf	?_in_main& (0+255),w,b
  2318  0014C2  B4D8               	btfsc	status,2,c
  2319  0014C4  0012               	return	
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;messages.c: 261: }
  2323                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2324                           
  2325                           ; BSR set to: 0
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;messages.c: 260: return;
  2329  0014C6  0100               	movlb	0	; () banked
  2330  0014C8  6F9A               	movwf	??_block_on_To_msgqueues& (0+255),b
  2331  0014CA  0E01               	movlw	1
  2332  0014CC  0100               	movlb	0	; () banked
  2333  0014CE  0100               	movlb	0	; () banked
  2334  0014D0  6FB4               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2335  0014D2  0100               	movlb	0	; () banked
  2336  0014D4  519A               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2337  0014D6                     l2761:
  2338                           
  2339                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2340  0014D6  0102               	movlb	2	; () banked
  2341  0014D8  0E02               	movlw	high _ToMainHigh_MQ
  2342  0014DA  0100               	movlb	0	; () banked
  2343  0014DC  0100               	movlb	0	; () banked
  2344  0014DE  6F95               	movwf	(check_msg@qptr+1)& (0+255),b
  2345  0014E0  0102               	movlb	2	; () banked
  2346  0014E2  0E66               	movlw	low _ToMainHigh_MQ
  2347  0014E4  0100               	movlb	0	; () banked
  2348  0014E6  0100               	movlb	0	; () banked
  2349  0014E8  6F94               	movwf	check_msg@qptr& (0+255),b
  2350  0014EA  EC62  F00D         	call	_check_msg	;wreg free
  2351  0014EE  0900               	iorlw	0
  2352  0014F0  B4D8               	btfsc	status,2,c
  2353  0014F2  D009               	goto	l2767
  2354                           
  2355                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2356  0014F4  0100               	movlb	0	; () banked
  2357  0014F6  6F9A               	movwf	??_block_on_To_msgqueues& (0+255),b
  2358  0014F8  0E00               	movlw	0
  2359  0014FA  0100               	movlb	0	; () banked
  2360  0014FC  0100               	movlb	0	; () banked
  2361  0014FE  6FB4               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2362  001500  0100               	movlb	0	; () banked
  2363  001502  519A               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2364  001504  0012               	return	
  2365  001506                     l2767:
  2366                           
  2367                           ;messages.c: 271: }
  2368                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2369  001506  0101               	movlb	1	; () banked
  2370  001508  0E01               	movlw	high _ToMainLow_MQ
  2371  00150A  0100               	movlb	0	; () banked
  2372  00150C  0100               	movlb	0	; () banked
  2373  00150E  6F95               	movwf	(check_msg@qptr+1)& (0+255),b
  2374  001510  0101               	movlb	1	; () banked
  2375  001512  0E7F               	movlw	low _ToMainLow_MQ
  2376  001514  0100               	movlb	0	; () banked
  2377  001516  0100               	movlb	0	; () banked
  2378  001518  6F94               	movwf	check_msg@qptr& (0+255),b
  2379  00151A  EC62  F00D         	call	_check_msg	;wreg free
  2380  00151E  0900               	iorlw	0
  2381  001520  B4D8               	btfsc	status,2,c
  2382  001522  D009               	goto	l2773
  2383                           
  2384                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2385  001524  0100               	movlb	0	; () banked
  2386  001526  6F9A               	movwf	??_block_on_To_msgqueues& (0+255),b
  2387  001528  0E00               	movlw	0
  2388  00152A  0100               	movlb	0	; () banked
  2389  00152C  0100               	movlb	0	; () banked
  2390  00152E  6FB4               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2391  001530  0100               	movlb	0	; () banked
  2392  001532  519A               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2393  001534  0012               	return	
  2394  001536                     l2773:
  2395                           
  2396                           ;messages.c: 278: }
  2397                           ;messages.c: 279: Delay1KTCYx(10);
  2398  001536  0E0A               	movlw	10
  2399  001538  EC4C  F00E         	call	_Delay1KTCYx
  2400  00153C  D7CC               	goto	l2761
  2401  00153E                     __end_of_block_on_To_msgqueues:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           prodh	equ	0xFF4
  2408                           prodl	equ	0xFF3
  2409                           intcon	equ	0xFF2
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           indf2	equ	0xFDF
  2413                           fsr2h	equ	0xFDA
  2414                           fsr2l	equ	0xFD9
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _in_main *****************
  2418 ;; Defined at:
  2419 ;;		line 40 in file "../src/interrupts.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2   56[BANK0 ] int 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;Total ram usage:        2 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:   13
  2440 ;; This function calls:
  2441 ;;		_in_high_int
  2442 ;;		_in_low_int
  2443 ;; This function is called by:
  2444 ;;		_block_on_To_msgqueues
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text11
  2449  00197C                     __ptext11:
  2450                           	opt stack 0
  2451  00197C                     _in_main:
  2452                           	opt stack 16
  2453                           
  2454                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  2455                           
  2456                           ;incstack = 0
  2457  00197C  EC78  F00C         	call	_in_low_int	;wreg free
  2458  001980  0100               	movlb	0	; () banked
  2459  001982  0100               	movlb	0	; () banked
  2460  001984  5197               	movf	(?_in_low_int+1)& (0+255),w,b
  2461  001986  0100               	movlb	0	; () banked
  2462  001988  1196               	iorwf	?_in_low_int& (0+255),w,b
  2463  00198A  A4D8               	btfss	status,2,c
  2464  00198C  D011               	goto	l2343
  2465                           
  2466                           ; BSR set to: 0
  2467  00198E  EC61  F00E         	call	_in_high_int	;wreg free
  2468  001992  0100               	movlb	0	; () banked
  2469  001994  0100               	movlb	0	; () banked
  2470  001996  5195               	movf	(?_in_high_int+1)& (0+255),w,b
  2471  001998  0100               	movlb	0	; () banked
  2472  00199A  1194               	iorwf	?_in_high_int& (0+255),w,b
  2473  00199C  A4D8               	btfss	status,2,c
  2474  00199E  D008               	goto	l2343
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;interrupts.c: 42: return (1);
  2478  0019A0  0E00               	movlw	0
  2479  0019A2  0100               	movlb	0	; () banked
  2480  0019A4  0100               	movlb	0	; () banked
  2481  0019A6  6F99               	movwf	(?_in_main+1)& (0+255),b
  2482  0019A8  0E01               	movlw	1
  2483  0019AA  0100               	movlb	0	; () banked
  2484  0019AC  6F98               	movwf	?_in_main& (0+255),b
  2485  0019AE  0012               	return	
  2486  0019B0                     l2343:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;interrupts.c: 44: return (0);
  2490  0019B0  0E00               	movlw	0
  2491  0019B2  0100               	movlb	0	; () banked
  2492  0019B4  0100               	movlb	0	; () banked
  2493  0019B6  6F99               	movwf	(?_in_main+1)& (0+255),b
  2494  0019B8  0E00               	movlw	0
  2495  0019BA  0100               	movlb	0	; () banked
  2496  0019BC  6F98               	movwf	?_in_main& (0+255),b
  2497  0019BE  0012               	return	
  2498  0019C0                     __end_of_in_main:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           intcon	equ	0xFF2
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           indf2	equ	0xFDF
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _in_low_int *****************
  2515 ;; Defined at:
  2516 ;;		line 30 in file "../src/interrupts.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2   54[BANK0 ] int 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2530 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;Total ram usage:        2 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:   12
  2537 ;; This function calls:
  2538 ;;		_in_high_int
  2539 ;; This function is called by:
  2540 ;;		_in_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text12
  2545  0018F0                     __ptext12:
  2546                           	opt stack 0
  2547  0018F0                     _in_low_int:
  2548                           	opt stack 16
  2549                           
  2550                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;incstack = 0
  2554  0018F0  ACF2               	btfss	intcon,6,c	;volatile
  2555  0018F2  D008               	goto	l2321
  2556                           
  2557                           ;interrupts.c: 32: return (0);
  2558  0018F4  0E00               	movlw	0
  2559  0018F6  0100               	movlb	0	; () banked
  2560  0018F8  0100               	movlb	0	; () banked
  2561  0018FA  6F97               	movwf	(?_in_low_int+1)& (0+255),b
  2562  0018FC  0E00               	movlw	0
  2563  0018FE  0100               	movlb	0	; () banked
  2564  001900  6F96               	movwf	?_in_low_int& (0+255),b
  2565  001902  0012               	return	
  2566  001904                     l2321:
  2567  001904  EC61  F00E         	call	_in_high_int	;wreg free
  2568  001908  0100               	movlb	0	; () banked
  2569  00190A  0100               	movlb	0	; () banked
  2570  00190C  5195               	movf	(?_in_high_int+1)& (0+255),w,b
  2571  00190E  0100               	movlb	0	; () banked
  2572  001910  1194               	iorwf	?_in_high_int& (0+255),w,b
  2573  001912  B4D8               	btfsc	status,2,c
  2574  001914  D008               	goto	l2329
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;interrupts.c: 34: return (0);
  2578  001916  0E00               	movlw	0
  2579  001918  0100               	movlb	0	; () banked
  2580  00191A  0100               	movlb	0	; () banked
  2581  00191C  6F97               	movwf	(?_in_low_int+1)& (0+255),b
  2582  00191E  0E00               	movlw	0
  2583  001920  0100               	movlb	0	; () banked
  2584  001922  6F96               	movwf	?_in_low_int& (0+255),b
  2585  001924  0012               	return	
  2586  001926                     l2329:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;interrupts.c: 36: return (1);
  2590  001926  0E00               	movlw	0
  2591  001928  0100               	movlb	0	; () banked
  2592  00192A  0100               	movlb	0	; () banked
  2593  00192C  6F97               	movwf	(?_in_low_int+1)& (0+255),b
  2594  00192E  0E01               	movlw	1
  2595  001930  0100               	movlb	0	; () banked
  2596  001932  6F96               	movwf	?_in_low_int& (0+255),b
  2597  001934  0012               	return	
  2598  001936                     __end_of_in_low_int:
  2599                           	opt stack 0
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           prodh	equ	0xFF4
  2605                           prodl	equ	0xFF3
  2606                           intcon	equ	0xFF2
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           indf2	equ	0xFDF
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _in_high_int *****************
  2615 ;; Defined at:
  2616 ;;		line 22 in file "../src/interrupts.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  2   52[BANK0 ] int 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;Total ram usage:        2 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:   11
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_in_low_int
  2641 ;;		_in_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text13
  2646  001CC2                     __ptext13:
  2647                           	opt stack 0
  2648  001CC2                     _in_high_int:
  2649                           	opt stack 16
  2650                           
  2651                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;incstack = 0
  2655  001CC2  0E00               	movlw	0
  2656  001CC4  AEF2               	btfss	intcon,7,c	;volatile
  2657  001CC6  0E01               	movlw	1
  2658  001CC8  0100               	movlb	0	; () banked
  2659  001CCA  0100               	movlb	0	; () banked
  2660  001CCC  6F94               	movwf	?_in_high_int& (0+255),b
  2661  001CCE  0100               	movlb	0	; () banked
  2662  001CD0  6B95               	clrf	(?_in_high_int+1)& (0+255),b
  2663  001CD2  0012               	return	
  2664  001CD4                     __end_of_in_high_int:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           intcon	equ	0xFF2
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           indf2	equ	0xFDF
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _check_msg *****************
  2681 ;; Defined at:
  2682 ;;		line 222 in file "../src/messages.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  qptr            2   52[BANK0 ] PTR struct __msg_queue
  2685 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      unsigned char 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;Total ram usage:        3 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:   11
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_block_on_To_msgqueues
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text14
  2712  001AC4                     __ptext14:
  2713                           	opt stack 0
  2714  001AC4                     _check_msg:
  2715                           	opt stack 18
  2716                           
  2717                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;incstack = 0
  2721  001AC4  0100               	movlb	0	; () banked
  2722  001AC6  EE20 F065          	lfsr	2,101
  2723  001ACA  0100               	movlb	0	; () banked
  2724  001ACC  5194               	movf	check_msg@qptr& (0+255),w,b
  2725  001ACE  26D9               	addwf	fsr2l,f,c
  2726  001AD0  0100               	movlb	0	; () banked
  2727  001AD2  5195               	movf	(check_msg@qptr+1)& (0+255),w,b
  2728  001AD4  22DA               	addwfc	fsr2h,f,c
  2729  001AD6  50DF               	movf	indf2,w,c
  2730  001AD8  0100               	movlb	0	; () banked
  2731  001ADA  6F96               	movwf	??_check_msg& (0+255),b
  2732  001ADC  0100               	movlb	0	; () banked
  2733  001ADE  5196               	movf	??_check_msg& (0+255),w,b
  2734  001AE0  0D19               	mullw	25
  2735  001AE2  50F3               	movf	prodl,w,c
  2736  001AE4  0100               	movlb	0	; () banked
  2737  001AE6  0100               	movlb	0	; () banked
  2738  001AE8  2594               	addwf	check_msg@qptr& (0+255),w,b
  2739  001AEA  6ED9               	movwf	fsr2l,c
  2740  001AEC  50F4               	movf	prodh,w,c
  2741  001AEE  0100               	movlb	0	; () banked
  2742  001AF0  0100               	movlb	0	; () banked
  2743  001AF2  2195               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2744  001AF4  6EDA               	movwf	fsr2h,c
  2745  001AF6  50DF               	movf	indf2,w,c
  2746  001AF8  0012               	return	
  2747  001AFA                     __end_of_check_msg:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           intcon	equ	0xFF2
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           indf2	equ	0xFDF
  2759                           fsr2h	equ	0xFDA
  2760                           fsr2l	equ	0xFD9
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _Delay1KTCYx *****************
  2764 ;; Defined at:
  2765 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  unit            1    wreg     unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  unit            1   52[BANK0 ] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;		None               void
  2772 ;; Registers used:
  2773 ;;		wreg
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;Total ram usage:        1 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:   11
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_block_on_To_msgqueues
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text15
  2794  001C98                     __ptext15:
  2795                           	opt stack 0
  2796  001C98                     _Delay1KTCYx:
  2797                           	opt stack 18
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;incstack = 0
  2801                           ;Delay1KTCYx@unit stored from wreg
  2802  001C98  CFE8 F094          	movff	wreg,Delay1KTCYx@unit
  2803  001C9C                     l855:
  2804  001C9C  0EFA               	movlw	250
  2805  001C9E                     u2367:
  2806  001C9E  F000               	nop	
  2807  001CA0  2EE8               	decfsz	wreg,f,c
  2808  001CA2  D7FD               	goto	u2367
  2809  001CA4  0100               	movlb	0	; () banked
  2810  001CA6  0100               	movlb	0	; () banked
  2811  001CA8  2F94               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2812  001CAA  D7F8               	goto	l855
  2813  001CAC  0012               	return	
  2814  001CAE                     __end_of_Delay1KTCYx:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           indf2	equ	0xFDF
  2826                           fsr2h	equ	0xFDA
  2827                           fsr2l	equ	0xFD9
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _WriteI2CBuffer *****************
  2831 ;; Defined at:
  2832 ;;		line 68 in file "../src/my_i2c.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  length          1    wreg     unsigned char 
  2835 ;;  msg             2   52[BANK0 ] PTR unsigned char 
  2836 ;;		 -> main@msgbuffer(23), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  length          1   56[BANK0 ] unsigned char 
  2839 ;;  i               2   57[BANK0 ] unsigned short 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;		None               void
  2842 ;; Registers used:
  2843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2853 ;;Total ram usage:        7 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:   11
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text16
  2864  000DEC                     __ptext16:
  2865                           	opt stack 0
  2866  000DEC                     _WriteI2CBuffer:
  2867                           	opt stack 19
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;incstack = 0
  2871                           ;WriteI2CBuffer@length stored from wreg
  2872  000DEC  CFE8 F098          	movff	wreg,WriteI2CBuffer@length
  2873                           
  2874                           ;my_i2c.c: 70: if( length < 22){
  2875  000DF0  0E16               	movlw	22
  2876  000DF2  0100               	movlb	0	; () banked
  2877  000DF4  0100               	movlb	0	; () banked
  2878  000DF6  5D98               	subwf	WriteI2CBuffer@length& (0+255),w,b
  2879  000DF8  B0D8               	btfsc	status,0,c
  2880  000DFA  0012               	return	
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;my_i2c.c: 71: ic_ptr->sendBufLen = 0;
  2884  000DFC  0100               	movlb	0	; () banked
  2885  000DFE  EE20 F04A          	lfsr	2,74
  2886  000E02  0100               	movlb	0	; () banked
  2887  000E04  51B2               	movf	_ic_ptr& (0+255),w,b
  2888  000E06  26D9               	addwf	fsr2l,f,c
  2889  000E08  0100               	movlb	0	; () banked
  2890  000E0A  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2891  000E0C  22DA               	addwfc	fsr2h,f,c
  2892  000E0E  0E00               	movlw	0
  2893  000E10  6EDF               	movwf	indf2,c
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;my_i2c.c: 72: unsigned short i = 0;
  2897  000E12  0E00               	movlw	0
  2898  000E14  0100               	movlb	0	; () banked
  2899  000E16  0100               	movlb	0	; () banked
  2900  000E18  6F9A               	movwf	(WriteI2CBuffer@i+1)& (0+255),b
  2901  000E1A  0E00               	movlw	0
  2902  000E1C  0100               	movlb	0	; () banked
  2903  000E1E  6F99               	movwf	WriteI2CBuffer@i& (0+255),b
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;my_i2c.c: 73: for (i = 0; i < length; i++){
  2907  000E20  0E00               	movlw	0
  2908  000E22  0100               	movlb	0	; () banked
  2909  000E24  0100               	movlb	0	; () banked
  2910  000E26  6F9A               	movwf	(WriteI2CBuffer@i+1)& (0+255),b
  2911  000E28  0E00               	movlw	0
  2912  000E2A  0100               	movlb	0	; () banked
  2913  000E2C  6F99               	movwf	WriteI2CBuffer@i& (0+255),b
  2914  000E2E  D036               	goto	l2811
  2915  000E30                     l2805:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;my_i2c.c: 75: ic_ptr->sendBuf[i] = msg[i];
  2919  000E30  0100               	movlb	0	; () banked
  2920  000E32  0100               	movlb	0	; () banked
  2921  000E34  5199               	movf	WriteI2CBuffer@i& (0+255),w,b
  2922  000E36  0100               	movlb	0	; () banked
  2923  000E38  0100               	movlb	0	; () banked
  2924  000E3A  2594               	addwf	WriteI2CBuffer@msg& (0+255),w,b
  2925  000E3C  6ED9               	movwf	fsr2l,c
  2926  000E3E  0100               	movlb	0	; () banked
  2927  000E40  0100               	movlb	0	; () banked
  2928  000E42  519A               	movf	(WriteI2CBuffer@i+1)& (0+255),w,b
  2929  000E44  0100               	movlb	0	; () banked
  2930  000E46  0100               	movlb	0	; () banked
  2931  000E48  2195               	addwfc	(WriteI2CBuffer@msg+1)& (0+255),w,b
  2932  000E4A  6EDA               	movwf	fsr2h,c
  2933  000E4C  0E34               	movlw	52
  2934  000E4E  0100               	movlb	0	; () banked
  2935  000E50  0100               	movlb	0	; () banked
  2936  000E52  2599               	addwf	WriteI2CBuffer@i& (0+255),w,b
  2937  000E54  0100               	movlb	0	; () banked
  2938  000E56  6F96               	movwf	??_WriteI2CBuffer& (0+255),b
  2939  000E58  0E00               	movlw	0
  2940  000E5A  0100               	movlb	0	; () banked
  2941  000E5C  0100               	movlb	0	; () banked
  2942  000E5E  219A               	addwfc	(WriteI2CBuffer@i+1)& (0+255),w,b
  2943  000E60  0100               	movlb	0	; () banked
  2944  000E62  6F97               	movwf	(??_WriteI2CBuffer+1)& (0+255),b
  2945  000E64  0100               	movlb	0	; () banked
  2946  000E66  5196               	movf	??_WriteI2CBuffer& (0+255),w,b
  2947  000E68  0100               	movlb	0	; () banked
  2948  000E6A  0100               	movlb	0	; () banked
  2949  000E6C  25B2               	addwf	_ic_ptr& (0+255),w,b
  2950  000E6E  6EE1               	movwf	fsr1l,c
  2951  000E70  0100               	movlb	0	; () banked
  2952  000E72  5197               	movf	(??_WriteI2CBuffer+1)& (0+255),w,b
  2953  000E74  0100               	movlb	0	; () banked
  2954  000E76  0100               	movlb	0	; () banked
  2955  000E78  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2956  000E7A  6EE2               	movwf	fsr1h,c
  2957  000E7C  CFDF FFE7          	movff	indf2,indf1
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;my_i2c.c: 76: ic_ptr->sendBufLen++;
  2961  000E80  0100               	movlb	0	; () banked
  2962  000E82  EE20 F04A          	lfsr	2,74
  2963  000E86  0100               	movlb	0	; () banked
  2964  000E88  51B2               	movf	_ic_ptr& (0+255),w,b
  2965  000E8A  26D9               	addwf	fsr2l,f,c
  2966  000E8C  0100               	movlb	0	; () banked
  2967  000E8E  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  2968  000E90  22DA               	addwfc	fsr2h,f,c
  2969  000E92  2ADF               	incf	indf2,f,c
  2970                           
  2971                           ; BSR set to: 0
  2972  000E94  0100               	movlb	0	; () banked
  2973  000E96  0100               	movlb	0	; () banked
  2974  000E98  4B99               	infsnz	WriteI2CBuffer@i& (0+255),f,b
  2975  000E9A  2B9A               	incf	(WriteI2CBuffer@i+1)& (0+255),f,b
  2976  000E9C                     l2811:
  2977                           
  2978                           ; BSR set to: 0
  2979  000E9C  0100               	movlb	0	; () banked
  2980  000E9E  0100               	movlb	0	; () banked
  2981  000EA0  5198               	movf	WriteI2CBuffer@length& (0+255),w,b
  2982  000EA2  0100               	movlb	0	; () banked
  2983  000EA4  6F96               	movwf	??_WriteI2CBuffer& (0+255),b
  2984  000EA6  6B97               	clrf	(??_WriteI2CBuffer+1)& (0+255),b
  2985  000EA8  0100               	movlb	0	; () banked
  2986  000EAA  5196               	movf	??_WriteI2CBuffer& (0+255),w,b
  2987  000EAC  0100               	movlb	0	; () banked
  2988  000EAE  0100               	movlb	0	; () banked
  2989  000EB0  5D99               	subwf	WriteI2CBuffer@i& (0+255),w,b
  2990  000EB2  0100               	movlb	0	; () banked
  2991  000EB4  5197               	movf	(??_WriteI2CBuffer+1)& (0+255),w,b
  2992  000EB6  0100               	movlb	0	; () banked
  2993  000EB8  0100               	movlb	0	; () banked
  2994  000EBA  599A               	subwfb	(WriteI2CBuffer@i+1)& (0+255),w,b
  2995  000EBC  B0D8               	btfsc	status,0,c
  2996                           
  2997                           ; BSR set to: 0
  2998                           
  2999                           ; BSR set to: 0
  3000                           
  3001                           ; BSR set to: 0
  3002  000EBE  0012               	return	
  3003  000EC0  D7B7               	goto	l2805
  3004  000EC2                     __end_of_WriteI2CBuffer:
  3005                           	opt stack 0
  3006                           tblptru	equ	0xFF8
  3007                           tblptrh	equ	0xFF7
  3008                           tblptrl	equ	0xFF6
  3009                           tablat	equ	0xFF5
  3010                           prodh	equ	0xFF4
  3011                           prodl	equ	0xFF3
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           indf1	equ	0xFE7
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _ToMainLow_recvmsg *****************
  3024 ;; Defined at:
  3025 ;;		line 112 in file "../src/messages.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  maxlength       1    wreg     unsigned char 
  3028 ;;  msgtype         2   76[BANK0 ] PTR unsigned char 
  3029 ;;		 -> main@msgtype(1), 
  3030 ;;  data            2   78[BANK0 ] PTR void 
  3031 ;;		 -> main@msgbuffer(23), 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  maxlength       1   80[BANK0 ] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      char 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;Total ram usage:        5 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:   13
  3050 ;; This function calls:
  3051 ;;		_recv_msg
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text17
  3058  0019C0                     __ptext17:
  3059                           	opt stack 0
  3060  0019C0                     _ToMainLow_recvmsg:
  3061                           	opt stack 17
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;incstack = 0
  3065                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3066  0019C0  CFE8 F0B0          	movff	wreg,ToMainLow_recvmsg@maxlength
  3067                           
  3068                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3069  0019C4  0101               	movlb	1	; () banked
  3070  0019C6  0E01               	movlw	high _ToMainLow_MQ
  3071  0019C8  0100               	movlb	0	; () banked
  3072  0019CA  0100               	movlb	0	; () banked
  3073  0019CC  6F9F               	movwf	(recv_msg@qptr+1)& (0+255),b
  3074  0019CE  0101               	movlb	1	; () banked
  3075  0019D0  0E7F               	movlw	low _ToMainLow_MQ
  3076  0019D2  0100               	movlb	0	; () banked
  3077  0019D4  0100               	movlb	0	; () banked
  3078  0019D6  6F9E               	movwf	recv_msg@qptr& (0+255),b
  3079  0019D8  C0B0  F0A0         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3080  0019DC  0100               	movlb	0	; () banked
  3081  0019DE  0100               	movlb	0	; () banked
  3082  0019E0  C0AD  F0A2         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3083  0019E4  0100               	movlb	0	; () banked
  3084  0019E6  0100               	movlb	0	; () banked
  3085  0019E8  C0AC  F0A1         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3086  0019EC  0100               	movlb	0	; () banked
  3087  0019EE  0100               	movlb	0	; () banked
  3088  0019F0  C0AF  F0A4         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3089  0019F4  0100               	movlb	0	; () banked
  3090  0019F6  0100               	movlb	0	; () banked
  3091  0019F8  C0AE  F0A3         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3092  0019FC  ECD9  F005         	call	_recv_msg	;wreg free
  3093  001A00  0012               	return	
  3094  001A02                     __end_of_ToMainLow_recvmsg:
  3095                           	opt stack 0
  3096                           tblptru	equ	0xFF8
  3097                           tblptrh	equ	0xFF7
  3098                           tblptrl	equ	0xFF6
  3099                           tablat	equ	0xFF5
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           indf1	equ	0xFE7
  3106                           fsr1h	equ	0xFE2
  3107                           fsr1l	equ	0xFE1
  3108                           indf2	equ	0xFDF
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _ToMainHigh_recvmsg *****************
  3114 ;; Defined at:
  3115 ;;		line 135 in file "../src/messages.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  maxlength       1    wreg     unsigned char 
  3118 ;;  msgtype         2   76[BANK0 ] PTR unsigned char 
  3119 ;;		 -> main@msgtype(1), 
  3120 ;;  data            2   78[BANK0 ] PTR void 
  3121 ;;		 -> main@msgbuffer(23), 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  maxlength       1   80[BANK0 ] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      char 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3133 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;Total ram usage:        5 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:   13
  3140 ;; This function calls:
  3141 ;;		_recv_msg
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text18
  3148  001A02                     __ptext18:
  3149                           	opt stack 0
  3150  001A02                     _ToMainHigh_recvmsg:
  3151                           	opt stack 17
  3152                           
  3153                           ;incstack = 0
  3154                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3155  001A02  CFE8 F0B0          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3156                           
  3157                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3158  001A06  0102               	movlb	2	; () banked
  3159  001A08  0E02               	movlw	high _ToMainHigh_MQ
  3160  001A0A  0100               	movlb	0	; () banked
  3161  001A0C  0100               	movlb	0	; () banked
  3162  001A0E  6F9F               	movwf	(recv_msg@qptr+1)& (0+255),b
  3163  001A10  0102               	movlb	2	; () banked
  3164  001A12  0E66               	movlw	low _ToMainHigh_MQ
  3165  001A14  0100               	movlb	0	; () banked
  3166  001A16  0100               	movlb	0	; () banked
  3167  001A18  6F9E               	movwf	recv_msg@qptr& (0+255),b
  3168  001A1A  C0B0  F0A0         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3169  001A1E  0100               	movlb	0	; () banked
  3170  001A20  0100               	movlb	0	; () banked
  3171  001A22  C0AD  F0A2         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3172  001A26  0100               	movlb	0	; () banked
  3173  001A28  0100               	movlb	0	; () banked
  3174  001A2A  C0AC  F0A1         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3175  001A2E  0100               	movlb	0	; () banked
  3176  001A30  0100               	movlb	0	; () banked
  3177  001A32  C0AF  F0A4         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3178  001A36  0100               	movlb	0	; () banked
  3179  001A38  0100               	movlb	0	; () banked
  3180  001A3A  C0AE  F0A3         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3181  001A3E  ECD9  F005         	call	_recv_msg	;wreg free
  3182  001A42  0012               	return	
  3183  001A44                     __end_of_ToMainHigh_recvmsg:
  3184                           	opt stack 0
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           prodh	equ	0xFF4
  3190                           prodl	equ	0xFF3
  3191                           intcon	equ	0xFF2
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           indf1	equ	0xFE7
  3195                           fsr1h	equ	0xFE2
  3196                           fsr1l	equ	0xFE1
  3197                           indf2	equ	0xFDF
  3198                           fsr2h	equ	0xFDA
  3199                           fsr2l	equ	0xFD9
  3200                           status	equ	0xFD8
  3201                           
  3202 ;; *************** function _recv_msg *****************
  3203 ;; Defined at:
  3204 ;;		line 63 in file "../src/messages.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  qptr            2   62[BANK0 ] PTR struct __msg_queue
  3207 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3208 ;;  maxlength       1   64[BANK0 ] unsigned char 
  3209 ;;  msgtype         2   65[BANK0 ] PTR unsigned char 
  3210 ;;		 -> main@msgtype(1), 
  3211 ;;  data            2   67[BANK0 ] PTR void 
  3212 ;;		 -> main@msgbuffer(23), 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  qmsg            2   74[BANK0 ] PTR struct __msg
  3215 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  3216 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3217 ;;  tlength         2   72[BANK0 ] unsigned int 
  3218 ;;  slot            1   71[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      char 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3228 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3229 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3230 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3231 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3232 ;;Total ram usage:       14 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:   12
  3235 ;; This function calls:
  3236 ;;		_memcpy
  3237 ;; This function is called by:
  3238 ;;		_ToMainLow_recvmsg
  3239 ;;		_ToMainHigh_recvmsg
  3240 ;;		_FromMainLow_recvmsg
  3241 ;;		_FromMainHigh_recvmsg
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text19
  3246  000BB2                     __ptext19:
  3247                           	opt stack 0
  3248  000BB2                     _recv_msg:
  3249                           	opt stack 17
  3250                           
  3251                           ;messages.c: 64: unsigned char slot;
  3252                           ;messages.c: 68: msg *qmsg;
  3253                           ;messages.c: 69: size_t tlength;
  3254                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3255                           
  3256                           ;incstack = 0
  3257  000BB2  0100               	movlb	0	; () banked
  3258  000BB4  EE20 F065          	lfsr	2,101
  3259  000BB8  0100               	movlb	0	; () banked
  3260  000BBA  519E               	movf	recv_msg@qptr& (0+255),w,b
  3261  000BBC  26D9               	addwf	fsr2l,f,c
  3262  000BBE  0100               	movlb	0	; () banked
  3263  000BC0  519F               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3264  000BC2  22DA               	addwfc	fsr2h,f,c
  3265  000BC4  50DF               	movf	indf2,w,c
  3266  000BC6  0100               	movlb	0	; () banked
  3267  000BC8  0100               	movlb	0	; () banked
  3268  000BCA  6FA7               	movwf	recv_msg@slot& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3272  000BCC  0100               	movlb	0	; () banked
  3273  000BCE  0100               	movlb	0	; () banked
  3274  000BD0  51A7               	movf	recv_msg@slot& (0+255),w,b
  3275  000BD2  0D19               	mullw	25
  3276  000BD4  50F3               	movf	prodl,w,c
  3277  000BD6  0100               	movlb	0	; () banked
  3278  000BD8  0100               	movlb	0	; () banked
  3279  000BDA  259E               	addwf	recv_msg@qptr& (0+255),w,b
  3280  000BDC  0100               	movlb	0	; () banked
  3281  000BDE  0100               	movlb	0	; () banked
  3282  000BE0  6FAA               	movwf	recv_msg@qmsg& (0+255),b
  3283  000BE2  50F4               	movf	prodh,w,c
  3284  000BE4  0100               	movlb	0	; () banked
  3285  000BE6  0100               	movlb	0	; () banked
  3286  000BE8  219F               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3287  000BEA  0100               	movlb	0	; () banked
  3288  000BEC  6FAB               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;messages.c: 74: if (qmsg->full == 1) {
  3292  000BEE  0E01               	movlw	1
  3293  000BF0  C0AA  FFD9         	movff	recv_msg@qmsg,fsr2l
  3294  000BF4  C0AB  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3295  000BF8  62DF               	cpfseq	indf2,c
  3296  000BFA  D074               	goto	l2865
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3300  000BFC  0100               	movlb	0	; () banked
  3301  000BFE  EE20 F001          	lfsr	2,1
  3302  000C02  0100               	movlb	0	; () banked
  3303  000C04  51AA               	movf	recv_msg@qmsg& (0+255),w,b
  3304  000C06  26D9               	addwf	fsr2l,f,c
  3305  000C08  0100               	movlb	0	; () banked
  3306  000C0A  51AB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3307  000C0C  22DA               	addwfc	fsr2h,f,c
  3308  000C0E  50DF               	movf	indf2,w,c
  3309  000C10  0100               	movlb	0	; () banked
  3310  000C12  0100               	movlb	0	; () banked
  3311  000C14  5DA0               	subwf	recv_msg@maxlength& (0+255),w,b
  3312  000C16  B0D8               	btfsc	status,0,c
  3313  000C18  D002               	goto	l2849
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;messages.c: 77: return (-3);
  3317  000C1A  0EFD               	movlw	253
  3318  000C1C  0012               	return	
  3319  000C1E                     l2849:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;messages.c: 78: }
  3323                           ;messages.c: 80: tlength = qmsg->length;
  3324  000C1E  0100               	movlb	0	; () banked
  3325  000C20  EE20 F001          	lfsr	2,1
  3326  000C24  0100               	movlb	0	; () banked
  3327  000C26  51AA               	movf	recv_msg@qmsg& (0+255),w,b
  3328  000C28  26D9               	addwf	fsr2l,f,c
  3329  000C2A  0100               	movlb	0	; () banked
  3330  000C2C  51AB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3331  000C2E  22DA               	addwfc	fsr2h,f,c
  3332  000C30  50DF               	movf	indf2,w,c
  3333  000C32  0100               	movlb	0	; () banked
  3334  000C34  6FA5               	movwf	??_recv_msg& (0+255),b
  3335  000C36  0100               	movlb	0	; () banked
  3336  000C38  51A5               	movf	??_recv_msg& (0+255),w,b
  3337  000C3A  0100               	movlb	0	; () banked
  3338  000C3C  0100               	movlb	0	; () banked
  3339  000C3E  6FA8               	movwf	recv_msg@tlength& (0+255),b
  3340  000C40  0100               	movlb	0	; () banked
  3341  000C42  6BA9               	clrf	(recv_msg@tlength+1)& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3345  000C44  0100               	movlb	0	; () banked
  3346  000C46  0100               	movlb	0	; () banked
  3347  000C48  C0A4  F095         	movff	recv_msg@data+1,memcpy@d1+1
  3348  000C4C  0100               	movlb	0	; () banked
  3349  000C4E  0100               	movlb	0	; () banked
  3350  000C50  C0A3  F094         	movff	recv_msg@data,memcpy@d1
  3351  000C54  0E03               	movlw	3
  3352  000C56  0100               	movlb	0	; () banked
  3353  000C58  0100               	movlb	0	; () banked
  3354  000C5A  25AA               	addwf	recv_msg@qmsg& (0+255),w,b
  3355  000C5C  0100               	movlb	0	; () banked
  3356  000C5E  6FA5               	movwf	??_recv_msg& (0+255),b
  3357  000C60  0E00               	movlw	0
  3358  000C62  0100               	movlb	0	; () banked
  3359  000C64  0100               	movlb	0	; () banked
  3360  000C66  21AB               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3361  000C68  0100               	movlb	0	; () banked
  3362  000C6A  6FA6               	movwf	(??_recv_msg+1)& (0+255),b
  3363  000C6C  C0A5  F096         	movff	??_recv_msg,memcpy@s1
  3364  000C70  C0A6  F097         	movff	??_recv_msg+1,memcpy@s1+1
  3365  000C74  C0A8  F098         	movff	recv_msg@tlength,memcpy@n
  3366  000C78  C0A9  F099         	movff	recv_msg@tlength+1,memcpy@n+1
  3367  000C7C  ECC1  F00B         	call	_memcpy	;wreg free
  3368                           
  3369                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3370  000C80  0100               	movlb	0	; () banked
  3371  000C82  EE20 F065          	lfsr	2,101
  3372  000C86  0100               	movlb	0	; () banked
  3373  000C88  519E               	movf	recv_msg@qptr& (0+255),w,b
  3374  000C8A  26D9               	addwf	fsr2l,f,c
  3375  000C8C  0100               	movlb	0	; () banked
  3376  000C8E  519F               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3377  000C90  22DA               	addwfc	fsr2h,f,c
  3378  000C92  0100               	movlb	0	; () banked
  3379  000C94  EE10 F065          	lfsr	1,101
  3380  000C98  0100               	movlb	0	; () banked
  3381  000C9A  519E               	movf	recv_msg@qptr& (0+255),w,b
  3382  000C9C  26E1               	addwf	fsr1l,f,c
  3383  000C9E  0100               	movlb	0	; () banked
  3384  000CA0  519F               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3385  000CA2  22E2               	addwfc	fsr1h,f,c
  3386  000CA4  50E7               	movf	indf1,w,c
  3387  000CA6  0100               	movlb	0	; () banked
  3388  000CA8  6FA5               	movwf	??_recv_msg& (0+255),b
  3389  000CAA  0100               	movlb	0	; () banked
  3390  000CAC  29A5               	incf	??_recv_msg& (0+255),w,b
  3391  000CAE  0B03               	andlw	3
  3392  000CB0  6EDF               	movwf	indf2,c
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3396  000CB2  0100               	movlb	0	; () banked
  3397  000CB4  EE20 F002          	lfsr	2,2
  3398  000CB8  0100               	movlb	0	; () banked
  3399  000CBA  51AA               	movf	recv_msg@qmsg& (0+255),w,b
  3400  000CBC  26D9               	addwf	fsr2l,f,c
  3401  000CBE  0100               	movlb	0	; () banked
  3402  000CC0  51AB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3403  000CC2  22DA               	addwfc	fsr2h,f,c
  3404  000CC4  C0A1  FFE1         	movff	recv_msg@msgtype,fsr1l
  3405  000CC8  C0A2  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3406  000CCC  CFDF FFE7          	movff	indf2,indf1
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;messages.c: 91: qmsg->full = 0;
  3410  000CD0  C0AA  FFD9         	movff	recv_msg@qmsg,fsr2l
  3411  000CD4  C0AB  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3412  000CD8  0E00               	movlw	0
  3413  000CDA  6EDF               	movwf	indf2,c
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;messages.c: 92: return (tlength);
  3417  000CDC  0100               	movlb	0	; () banked
  3418  000CDE  0100               	movlb	0	; () banked
  3419  000CE0  51A8               	movf	recv_msg@tlength& (0+255),w,b
  3420  000CE2  0012               	return	
  3421  000CE4                     l2865:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;messages.c: 94: return (-4);
  3425  000CE4  0EFC               	movlw	252
  3426  000CE6  0012               	return	
  3427  000CE8                     __end_of_recv_msg:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           indf1	equ	0xFE7
  3439                           fsr1h	equ	0xFE2
  3440                           fsr1l	equ	0xFE1
  3441                           indf2	equ	0xFDF
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _memcpy *****************
  3447 ;; Defined at:
  3448 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  d1              2   52[BANK0 ] PTR void 
  3451 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  3452 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3453 ;;		 -> main@msgbuffer(23), 
  3454 ;;  s1              2   54[BANK0 ] PTR const void 
  3455 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  3456 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  3457 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  3458 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(76), 
  3459 ;;		 -> main@uc(23), 
  3460 ;;  n               2   56[BANK0 ] unsigned int 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  s               2   60[BANK0 ] PTR const unsigned char 
  3463 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  3464 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  3465 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  3466 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(76), 
  3467 ;;		 -> main@uc(23), 
  3468 ;;  d               2   58[BANK0 ] PTR unsigned char 
  3469 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  3470 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3471 ;;		 -> main@msgbuffer(23), 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  2   52[BANK0 ] PTR void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3481 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3482 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3484 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3485 ;;Total ram usage:       10 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:   11
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_recv_msg
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text20
  3496  001782                     __ptext20:
  3497                           	opt stack 0
  3498  001782                     _memcpy:
  3499                           	opt stack 17
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;incstack = 0
  3503  001782  0100               	movlb	0	; () banked
  3504  001784  0100               	movlb	0	; () banked
  3505  001786  C097  F09D         	movff	memcpy@s1+1,memcpy@s+1
  3506  00178A  0100               	movlb	0	; () banked
  3507  00178C  0100               	movlb	0	; () banked
  3508  00178E  C096  F09C         	movff	memcpy@s1,memcpy@s
  3509  001792  0100               	movlb	0	; () banked
  3510  001794  0100               	movlb	0	; () banked
  3511  001796  C095  F09B         	movff	memcpy@d1+1,memcpy@d+1
  3512  00179A  0100               	movlb	0	; () banked
  3513  00179C  0100               	movlb	0	; () banked
  3514  00179E  C094  F09A         	movff	memcpy@d1,memcpy@d
  3515  0017A2  D012               	goto	l2835
  3516  0017A4                     l2829:
  3517                           
  3518                           ; BSR set to: 0
  3519  0017A4  C09C  FFD9         	movff	memcpy@s,fsr2l
  3520  0017A8  C09D  FFDA         	movff	memcpy@s+1,fsr2h
  3521  0017AC  C09A  FFE1         	movff	memcpy@d,fsr1l
  3522  0017B0  C09B  FFE2         	movff	memcpy@d+1,fsr1h
  3523  0017B4  CFDF FFE7          	movff	indf2,indf1
  3524                           
  3525                           ; BSR set to: 0
  3526  0017B8  0100               	movlb	0	; () banked
  3527  0017BA  0100               	movlb	0	; () banked
  3528  0017BC  4B9C               	infsnz	memcpy@s& (0+255),f,b
  3529  0017BE  2B9D               	incf	(memcpy@s+1)& (0+255),f,b
  3530                           
  3531                           ; BSR set to: 0
  3532  0017C0  0100               	movlb	0	; () banked
  3533  0017C2  0100               	movlb	0	; () banked
  3534  0017C4  4B9A               	infsnz	memcpy@d& (0+255),f,b
  3535  0017C6  2B9B               	incf	(memcpy@d+1)& (0+255),f,b
  3536  0017C8                     l2835:
  3537                           
  3538                           ; BSR set to: 0
  3539  0017C8  0100               	movlb	0	; () banked
  3540  0017CA  0100               	movlb	0	; () banked
  3541  0017CC  0798               	decf	memcpy@n& (0+255),f,b
  3542  0017CE  A0D8               	btfss	status,0,c
  3543  0017D0  0799               	decf	(memcpy@n+1)& (0+255),f,b
  3544  0017D2  0100               	movlb	0	; () banked
  3545  0017D4  2998               	incf	memcpy@n& (0+255),w,b
  3546  0017D6  B4D8               	btfsc	status,2,c
  3547  0017D8  2999               	incf	(memcpy@n+1)& (0+255),w,b
  3548  0017DA  B4D8               	btfsc	status,2,c
  3549                           
  3550                           ; BSR set to: 0
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;	Return value of _memcpy is never used
  3554  0017DC  0012               	return	
  3555  0017DE  D7E2               	goto	l2829
  3556  0017E0                     __end_of_memcpy:
  3557                           	opt stack 0
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           indf2	equ	0xFDF
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _OpenTimer1 *****************
  3576 ;; Defined at:
  3577 ;;		line 43 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  config          1    wreg     unsigned char 
  3580 ;;  config1         1   52[BANK0 ] unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  config          1   54[BANK0 ] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;		None               void
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3592 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;Total ram usage:        3 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:   11
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text21
  3607  001A44                     __ptext21:
  3608                           	opt stack 0
  3609  001A44                     _OpenTimer1:
  3610                           	opt stack 19
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;incstack = 0
  3614                           ;OpenTimer1@config stored from wreg
  3615  001A44  CFE8 F096          	movff	wreg,OpenTimer1@config
  3616  001A48  0100               	movlb	0	; () banked
  3617  001A4A  0100               	movlb	0	; () banked
  3618  001A4C  5194               	movf	OpenTimer1@config1& (0+255),w,b
  3619  001A4E  0BF3               	andlw	243
  3620  001A50  6E9A               	movwf	3994,c	;volatile
  3621  001A52  C096  F095         	movff	OpenTimer1@config,??_OpenTimer1
  3622  001A56  0E7F               	movlw	127
  3623  001A58  0100               	movlb	0	; () banked
  3624  001A5A  1795               	andwf	??_OpenTimer1& (0+255),f,b
  3625  001A5C  0100               	movlb	0	; () banked
  3626  001A5E  90D8               	bcf	status,0,c
  3627  001A60  3595               	rlcf	??_OpenTimer1& (0+255),w,b
  3628  001A62  6ECD               	movwf	4045,c	;volatile
  3629                           
  3630                           ; BSR set to: 0
  3631  001A64  0E00               	movlw	0
  3632  001A66  6ECF               	movwf	4047,c	;volatile
  3633                           
  3634                           ; BSR set to: 0
  3635  001A68  0E00               	movlw	0
  3636  001A6A  6ECE               	movwf	4046,c	;volatile
  3637                           
  3638                           ; BSR set to: 0
  3639  001A6C  909E               	bcf	3998,0,c	;volatile
  3640                           
  3641                           ; BSR set to: 0
  3642  001A6E  0100               	movlb	0	; () banked
  3643  001A70  0100               	movlb	0	; () banked
  3644  001A72  AF96               	btfss	OpenTimer1@config& (0+255),7,b
  3645  001A74  D002               	goto	l573
  3646                           
  3647                           ; BSR set to: 0
  3648  001A76  809D               	bsf	3997,0,c	;volatile
  3649  001A78  D001               	goto	l574
  3650  001A7A                     l573:
  3651                           
  3652                           ; BSR set to: 0
  3653  001A7A  909D               	bcf	3997,0,c	;volatile
  3654  001A7C                     l574:
  3655                           
  3656                           ; BSR set to: 0
  3657  001A7C  BE9A               	btfsc	3994,7,c	;volatile
  3658                           
  3659                           ; BSR set to: 0
  3660  001A7E  869A               	bsf	3994,3,c	;volatile
  3661                           
  3662                           ; BSR set to: 0
  3663  001A80  80CD               	bsf	4045,0,c	;volatile
  3664                           
  3665                           ; BSR set to: 0
  3666  001A82  0012               	return	
  3667  001A84                     __end_of_OpenTimer1:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           prodh	equ	0xFF4
  3674                           prodl	equ	0xFF3
  3675                           intcon	equ	0xFF2
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           indf1	equ	0xFE7
  3679                           fsr1h	equ	0xFE2
  3680                           fsr1l	equ	0xFE1
  3681                           indf2	equ	0xFDF
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _OpenTimer0 *****************
  3687 ;; Defined at:
  3688 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  config          1    wreg     unsigned char 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  config          1   52[BANK0 ] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;		None               void
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:   11
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text22
  3717  001BCC                     __ptext22:
  3718                           	opt stack 0
  3719  001BCC                     _OpenTimer0:
  3720                           	opt stack 19
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;incstack = 0
  3724                           ;OpenTimer0@config stored from wreg
  3725  001BCC  CFE8 F094          	movff	wreg,OpenTimer0@config
  3726  001BD0  0100               	movlb	0	; () banked
  3727  001BD2  0100               	movlb	0	; () banked
  3728  001BD4  5194               	movf	OpenTimer0@config& (0+255),w,b
  3729  001BD6  0B7F               	andlw	127
  3730  001BD8  6ED5               	movwf	4053,c	;volatile
  3731                           
  3732                           ; BSR set to: 0
  3733  001BDA  0E00               	movlw	0
  3734  001BDC  6ED7               	movwf	4055,c	;volatile
  3735                           
  3736                           ; BSR set to: 0
  3737  001BDE  0E00               	movlw	0
  3738  001BE0  6ED6               	movwf	4054,c	;volatile
  3739                           
  3740                           ; BSR set to: 0
  3741  001BE2  94F2               	bcf	intcon,2,c	;volatile
  3742                           
  3743                           ; BSR set to: 0
  3744  001BE4  0100               	movlb	0	; () banked
  3745  001BE6  0100               	movlb	0	; () banked
  3746  001BE8  AF94               	btfss	OpenTimer0@config& (0+255),7,b
  3747  001BEA  D002               	goto	l545
  3748                           
  3749                           ; BSR set to: 0
  3750  001BEC  8AF2               	bsf	intcon,5,c	;volatile
  3751  001BEE  D001               	goto	l546
  3752  001BF0                     l545:
  3753                           
  3754                           ; BSR set to: 0
  3755  001BF0  9AF2               	bcf	intcon,5,c	;volatile
  3756  001BF2                     l546:
  3757                           
  3758                           ; BSR set to: 0
  3759  001BF2  8ED5               	bsf	4053,7,c	;volatile
  3760                           
  3761                           ; BSR set to: 0
  3762  001BF4  0012               	return	
  3763  001BF6                     __end_of_OpenTimer0:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           postinc0	equ	0xFEE
  3773                           wreg	equ	0xFE8
  3774                           indf1	equ	0xFE7
  3775                           fsr1h	equ	0xFE2
  3776                           fsr1l	equ	0xFE1
  3777                           indf2	equ	0xFDF
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _OpenADC *****************
  3783 ;; Defined at:
  3784 ;;		line 225 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcopen.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  config          1    wreg     unsigned char 
  3787 ;;  config2         1   52[BANK0 ] unsigned char 
  3788 ;;  config3         2   53[BANK0 ] unsigned int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  config          1   58[BANK0 ] unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;		None               void
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3800 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3802 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3803 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;Total ram usage:        7 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:   11
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text23
  3815  001414                     __ptext23:
  3816                           	opt stack 0
  3817  001414                     _OpenADC:
  3818                           	opt stack 19
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;incstack = 0
  3822                           ;OpenADC@config stored from wreg
  3823  001414  CFE8 F09A          	movff	wreg,OpenADC@config
  3824  001418  0E00               	movlw	0
  3825  00141A  6EC2               	movwf	4034,c	;volatile
  3826  00141C  0E00               	movlw	0
  3827  00141E  6EC1               	movwf	4033,c	;volatile
  3828  001420  C094  F097         	movff	OpenADC@config2,??_OpenADC
  3829  001424  0E06               	movlw	6
  3830  001426  0100               	movlb	0	; () banked
  3831  001428  6F98               	movwf	(??_OpenADC+1)& (0+255),b
  3832  00142A                     u1705:
  3833  00142A  0100               	movlb	0	; () banked
  3834  00142C  90D8               	bcf	status,0,c
  3835  00142E  3797               	rlcf	??_OpenADC& (0+255),f,b
  3836  001430  0100               	movlb	0	; () banked
  3837  001432  2F98               	decfsz	(??_OpenADC+1)& (0+255),f,b
  3838  001434  D7FA               	goto	u1705
  3839  001436  0EC0               	movlw	192
  3840  001438  0100               	movlb	0	; () banked
  3841  00143A  1797               	andwf	??_OpenADC& (0+255),f,b
  3842  00143C  0100               	movlb	0	; () banked
  3843  00143E  0100               	movlb	0	; () banked
  3844  001440  90D8               	bcf	status,0,c
  3845  001442  3194               	rrcf	OpenADC@config2& (0+255),w,b
  3846  001444  0B3C               	andlw	60
  3847  001446  0100               	movlb	0	; () banked
  3848  001448  1197               	iorwf	??_OpenADC& (0+255),w,b
  3849  00144A  6EC2               	movwf	4034,c	;volatile
  3850                           
  3851                           ; BSR set to: 0
  3852  00144C  C09A  F097         	movff	OpenADC@config,??_OpenADC
  3853  001450  0100               	movlb	0	; () banked
  3854  001452  90D8               	bcf	status,0,c
  3855  001454  3797               	rlcf	??_OpenADC& (0+255),f,b
  3856  001456  0100               	movlb	0	; () banked
  3857  001458  90D8               	bcf	status,0,c
  3858  00145A  3797               	rlcf	??_OpenADC& (0+255),f,b
  3859  00145C  0E38               	movlw	56
  3860  00145E  0100               	movlb	0	; () banked
  3861  001460  1797               	andwf	??_OpenADC& (0+255),f,b
  3862  001462  C09A  F098         	movff	OpenADC@config,??_OpenADC+1
  3863  001466  0100               	movlb	0	; () banked
  3864  001468  3B98               	swapf	(??_OpenADC+1)& (0+255),f,b
  3865  00146A  0E0F               	movlw	15
  3866  00146C  1798               	andwf	(??_OpenADC+1)& (0+255),f,b
  3867  00146E  0E07               	movlw	7
  3868  001470  0100               	movlb	0	; () banked
  3869  001472  1798               	andwf	(??_OpenADC+1)& (0+255),f,b
  3870  001474  0100               	movlb	0	; () banked
  3871  001476  0100               	movlb	0	; () banked
  3872  001478  519A               	movf	OpenADC@config& (0+255),w,b
  3873  00147A  0B80               	andlw	128
  3874  00147C  0100               	movlb	0	; () banked
  3875  00147E  1198               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3876  001480  0100               	movlb	0	; () banked
  3877  001482  1197               	iorwf	??_OpenADC& (0+255),w,b
  3878  001484  6EC1               	movwf	4033,c	;volatile
  3879                           
  3880                           ; BSR set to: 0
  3881  001486  C095  FF48         	movff	OpenADC@config3,3912	;volatile
  3882                           
  3883                           ; BSR set to: 0
  3884  00148A  0100               	movlb	0	; () banked
  3885  00148C  C096  F097         	movff	OpenADC@config3+1,??_OpenADC
  3886  001490  C097  F098         	movff	??_OpenADC,??_OpenADC+1
  3887  001494  0100               	movlb	0	; () banked
  3888  001496  6B99               	clrf	(??_OpenADC+2)& (0+255),b
  3889  001498  0100               	movlb	0	; () banked
  3890  00149A  5198               	movf	(??_OpenADC+1)& (0+255),w,b
  3891  00149C  010F               	movlb	15	; () banked
  3892  00149E  010F               	movlb	15	; () banked
  3893  0014A0  6F49               	movwf	73,b	;volatile
  3894                           
  3895                           ; BSR set to: 15
  3896  0014A2  0100               	movlb	0	; () banked
  3897  0014A4  0100               	movlb	0	; () banked
  3898  0014A6  AF94               	btfss	OpenADC@config2& (0+255),7,b
  3899  0014A8  D003               	goto	l524
  3900                           
  3901                           ; BSR set to: 0
  3902  0014AA  9C9E               	bcf	3998,6,c	;volatile
  3903  0014AC  8C9D               	bsf	3997,6,c	;volatile
  3904  0014AE  8CF2               	bsf	intcon,6,c	;volatile
  3905  0014B0                     l524:
  3906                           
  3907                           ; BSR set to: 0
  3908  0014B0  80C2               	bsf	4034,0,c	;volatile
  3909                           
  3910                           ; BSR set to: 0
  3911  0014B2  0012               	return	
  3912  0014B4                     __end_of_OpenADC:
  3913                           	opt stack 0
  3914                           tblptru	equ	0xFF8
  3915                           tblptrh	equ	0xFF7
  3916                           tblptrl	equ	0xFF6
  3917                           tablat	equ	0xFF5
  3918                           prodh	equ	0xFF4
  3919                           prodl	equ	0xFF3
  3920                           intcon	equ	0xFF2
  3921                           postinc0	equ	0xFEE
  3922                           wreg	equ	0xFE8
  3923                           indf1	equ	0xFE7
  3924                           fsr1h	equ	0xFE2
  3925                           fsr1l	equ	0xFE1
  3926                           indf2	equ	0xFDF
  3927                           fsr2h	equ	0xFDA
  3928                           fsr2l	equ	0xFD9
  3929                           status	equ	0xFD8
  3930                           
  3931 ;; *************** function _Open1USART *****************
  3932 ;; Defined at:
  3933 ;;		line 124 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/u1open.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  config          1    wreg     unsigned char 
  3936 ;;  spbrg           2   52[BANK0 ] unsigned int 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  config          1   57[BANK0 ] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;		None               void
  3941 ;; Registers used:
  3942 ;;		wreg, status,2
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3952 ;;Total ram usage:        6 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:   11
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text24
  3963  00153E                     __ptext24:
  3964                           	opt stack 0
  3965  00153E                     _Open1USART:
  3966                           	opt stack 19
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;incstack = 0
  3970                           ;Open1USART@config stored from wreg
  3971  00153E  CFE8 F099          	movff	wreg,Open1USART@config
  3972  001542  0E00               	movlw	0
  3973  001544  6EAD               	movwf	4013,c	;volatile
  3974  001546  0E00               	movlw	0
  3975  001548  6EAC               	movwf	4012,c	;volatile
  3976  00154A  0100               	movlb	0	; () banked
  3977  00154C  0100               	movlb	0	; () banked
  3978  00154E  B199               	btfsc	Open1USART@config& (0+255),0,b
  3979                           
  3980                           ; BSR set to: 0
  3981  001550  88AD               	bsf	4013,4,c	;volatile
  3982                           
  3983                           ; BSR set to: 0
  3984                           
  3985                           ; BSR set to: 0
  3986  001552  0100               	movlb	0	; () banked
  3987  001554  0100               	movlb	0	; () banked
  3988  001556  A399               	btfss	Open1USART@config& (0+255),1,b
  3989  001558  D002               	goto	l2725
  3990                           
  3991                           ; BSR set to: 0
  3992  00155A  8CAD               	bsf	4013,6,c	;volatile
  3993  00155C  8CAC               	bsf	4012,6,c	;volatile
  3994  00155E                     l2725:
  3995                           
  3996                           ; BSR set to: 0
  3997  00155E  0100               	movlb	0	; () banked
  3998  001560  0100               	movlb	0	; () banked
  3999  001562  B599               	btfsc	Open1USART@config& (0+255),2,b
  4000                           
  4001                           ; BSR set to: 0
  4002  001564  8EAD               	bsf	4013,7,c	;volatile
  4003                           
  4004                           ; BSR set to: 0
  4005                           
  4006                           ; BSR set to: 0
  4007  001566  0100               	movlb	0	; () banked
  4008  001568  0100               	movlb	0	; () banked
  4009  00156A  A799               	btfss	Open1USART@config& (0+255),3,b
  4010  00156C  D002               	goto	l612
  4011                           
  4012                           ; BSR set to: 0
  4013  00156E  88AC               	bsf	4012,4,c	;volatile
  4014  001570  D001               	goto	l2733
  4015  001572                     l612:
  4016                           
  4017                           ; BSR set to: 0
  4018  001572  8AAC               	bsf	4012,5,c	;volatile
  4019  001574                     l2733:
  4020                           
  4021                           ; BSR set to: 0
  4022  001574  0100               	movlb	0	; () banked
  4023  001576  0100               	movlb	0	; () banked
  4024  001578  B999               	btfsc	Open1USART@config& (0+255),4,b
  4025                           
  4026                           ; BSR set to: 0
  4027  00157A  84AD               	bsf	4013,2,c	;volatile
  4028                           
  4029                           ; BSR set to: 0
  4030                           
  4031                           ; BSR set to: 0
  4032  00157C  0100               	movlb	0	; () banked
  4033  00157E  0100               	movlb	0	; () banked
  4034  001580  BB99               	btfsc	Open1USART@config& (0+255),5,b
  4035                           
  4036                           ; BSR set to: 0
  4037  001582  86AC               	bsf	4012,3,c	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           
  4041                           ; BSR set to: 0
  4042  001584  0100               	movlb	0	; () banked
  4043  001586  0100               	movlb	0	; () banked
  4044  001588  AD99               	btfss	Open1USART@config& (0+255),6,b
  4045  00158A  D002               	goto	l616
  4046                           
  4047                           ; BSR set to: 0
  4048  00158C  8A9D               	bsf	3997,5,c	;volatile
  4049  00158E  D001               	goto	l2745
  4050  001590                     l616:
  4051                           
  4052                           ; BSR set to: 0
  4053  001590  9A9D               	bcf	3997,5,c	;volatile
  4054  001592                     l2745:
  4055                           
  4056                           ; BSR set to: 0
  4057  001592  0100               	movlb	0	; () banked
  4058  001594  0100               	movlb	0	; () banked
  4059  001596  AF99               	btfss	Open1USART@config& (0+255),7,b
  4060  001598  D002               	goto	l618
  4061                           
  4062                           ; BSR set to: 0
  4063  00159A  889D               	bsf	3997,4,c	;volatile
  4064  00159C  D001               	goto	l619
  4065  00159E                     l618:
  4066                           
  4067                           ; BSR set to: 0
  4068  00159E  989D               	bcf	3997,4,c	;volatile
  4069  0015A0                     l619:
  4070                           
  4071                           ; BSR set to: 0
  4072  0015A0  C094  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  4073                           
  4074                           ; BSR set to: 0
  4075  0015A4  0100               	movlb	0	; () banked
  4076  0015A6  C095  F096         	movff	Open1USART@spbrg+1,??_Open1USART
  4077  0015AA  C096  F097         	movff	??_Open1USART,??_Open1USART+1
  4078  0015AE  0100               	movlb	0	; () banked
  4079  0015B0  6B98               	clrf	(??_Open1USART+2)& (0+255),b
  4080  0015B2  0100               	movlb	0	; () banked
  4081  0015B4  5197               	movf	(??_Open1USART+1)& (0+255),w,b
  4082  0015B6  6E7F               	movwf	3967,c	;volatile
  4083                           
  4084                           ; BSR set to: 0
  4085  0015B8  8AAD               	bsf	4013,5,c	;volatile
  4086                           
  4087                           ; BSR set to: 0
  4088  0015BA  8EAC               	bsf	4012,7,c	;volatile
  4089                           
  4090                           ; BSR set to: 0
  4091  0015BC  0012               	return	
  4092  0015BE                     __end_of_Open1USART:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           indf1	equ	0xFE7
  4104                           fsr1h	equ	0xFE2
  4105                           fsr1l	equ	0xFE1
  4106                           indf2	equ	0xFDF
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _ConvertADC *****************
  4112 ;; Defined at:
  4113 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;		None               void
  4120 ;; Registers used:
  4121 ;;		None
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4131 ;;Total ram usage:        0 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:   11
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_main
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text25
  4142  001D3A                     __ptext25:
  4143                           	opt stack 0
  4144  001D3A                     _ConvertADC:
  4145                           	opt stack 19
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;incstack = 0
  4149  001D3A  82C2               	bsf	4034,1,c	;volatile
  4150  001D3C  0012               	return	
  4151  001D3E                     __end_of_ConvertADC:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodh	equ	0xFF4
  4158                           prodl	equ	0xFF3
  4159                           intcon	equ	0xFF2
  4160                           postinc0	equ	0xFEE
  4161                           wreg	equ	0xFE8
  4162                           indf1	equ	0xFE7
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           indf2	equ	0xFDF
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function _InterruptHandlerLow *****************
  4171 ;; Defined at:
  4172 ;;		line 130 in file "../src/interrupts.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;Total ram usage:       17 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:   10
  4193 ;; This function calls:
  4194 ;;		_timer1_int_handler
  4195 ;;		_uart_recv_int_handler
  4196 ;; This function is called by:
  4197 ;;		Interrupt level 1
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	intcodelo
  4202  000018                     __pintcodelo:
  4203                           	opt stack 0
  4204  000018                     _InterruptHandlerLow:
  4205                           	opt stack 16
  4206                           
  4207                           ;incstack = 0
  4208  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  4209  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  4210  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  4211  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  4212  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  4213  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  4214  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  4215  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  4216  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  4217  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  4218  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  4219  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  4220  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  4221  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  4222  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  4223  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  4224  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  4225                           
  4226                           ;interrupts.c: 132: if (PIR1bits.TMR1IF) {
  4227  00005C  A09E               	btfss	3998,0,c	;volatile
  4228  00005E  D003               	goto	i1l3205
  4229                           
  4230                           ;interrupts.c: 133: PIR1bits.TMR1IF = 0;
  4231  000060  909E               	bcf	3998,0,c	;volatile
  4232                           
  4233                           ;interrupts.c: 134: timer1_int_handler();
  4234  000062  ECCE  F00D         	call	_timer1_int_handler	;wreg free
  4235  000066                     i1l3205:
  4236                           
  4237                           ;interrupts.c: 135: }
  4238                           ;interrupts.c: 138: if (PIR1bits.RCIF) {
  4239  000066  AA9E               	btfss	3998,5,c	;volatile
  4240  000068  D003               	goto	i1l58
  4241                           
  4242                           ;interrupts.c: 139: PIR1bits.RCIF = 0;
  4243  00006A  9A9E               	bcf	3998,5,c	;volatile
  4244                           
  4245                           ;interrupts.c: 140: uart_recv_int_handler();
  4246  00006C  EC1F  F00C         	call	_uart_recv_int_handler	;wreg free
  4247  000070                     i1l58:
  4248  000070  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4249  000074  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4250  000078  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4251  00007C  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4252  000080  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4253  000084  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4254  000088  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4255  00008C  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4256  000090  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4257  000094  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4258  000098  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4259  00009C  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4260  0000A0  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4261  0000A4  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4262  0000A8  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4263  0000AC  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4264  0000B0  C023  FFD8         	movff	??_InterruptHandlerLow,status
  4265  0000B4  0010               	retfie	
  4266  0000B6                     __end_of_InterruptHandlerLow:
  4267                           	opt stack 0
  4268                           pclatu	equ	0xFFB
  4269                           pclath	equ	0xFFA
  4270                           tblptru	equ	0xFF8
  4271                           tblptrh	equ	0xFF7
  4272                           tblptrl	equ	0xFF6
  4273                           tablat	equ	0xFF5
  4274                           prodh	equ	0xFF4
  4275                           prodl	equ	0xFF3
  4276                           intcon	equ	0xFF2
  4277                           postinc0	equ	0xFEE
  4278                           fsr0h	equ	0xFEA
  4279                           fsr0l	equ	0xFE9
  4280                           wreg	equ	0xFE8
  4281                           indf1	equ	0xFE7
  4282                           fsr1h	equ	0xFE2
  4283                           fsr1l	equ	0xFE1
  4284                           bsr	equ	0xFE0
  4285                           indf2	equ	0xFDF
  4286                           fsr2h	equ	0xFDA
  4287                           fsr2l	equ	0xFD9
  4288                           status	equ	0xFD8
  4289                           
  4290 ;; *************** function _uart_recv_int_handler *****************
  4291 ;; Defined at:
  4292 ;;		line 12 in file "../src/my_uart.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;		None               void
  4299 ;; Registers used:
  4300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4310 ;;Total ram usage:        1 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    9
  4313 ;; This function calls:
  4314 ;;		_Read1USART
  4315 ;;		_ToMainLow_sendmsg
  4316 ;;		_retrieve_command
  4317 ;; This function is called by:
  4318 ;;		_InterruptHandlerLow
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text27
  4323  00183E                     __ptext27:
  4324                           	opt stack 0
  4325  00183E                     _uart_recv_int_handler:
  4326                           	opt stack 16
  4327                           
  4328                           ;my_uart.c: 18: if ((PIR1bits.RC1IF)) {
  4329                           
  4330                           ;incstack = 0
  4331  00183E  AA9E               	btfss	3998,5,c	;volatile
  4332  001840  D01C               	goto	i1l3193
  4333                           
  4334                           ;my_uart.c: 19: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  4335  001842  EE20 F016          	lfsr	2,22
  4336  001846  5042               	movf	_uc_ptr,w,c
  4337  001848  26D9               	addwf	fsr2l,f,c
  4338  00184A  5043               	movf	_uc_ptr+1,w,c
  4339  00184C  22DA               	addwfc	fsr2h,f,c
  4340  00184E  50DF               	movf	indf2,w,c
  4341  001850  6E22               	movwf	??_uart_recv_int_handler& (0+255),c
  4342  001852  5022               	movf	??_uart_recv_int_handler,w,c
  4343  001854  0D01               	mullw	1
  4344  001856  50F3               	movf	prodl,w,c
  4345  001858  2442               	addwf	_uc_ptr,w,c
  4346  00185A  6ED9               	movwf	fsr2l,c
  4347  00185C  50F4               	movf	prodh,w,c
  4348  00185E  2043               	addwfc	_uc_ptr+1,w,c
  4349  001860  6EDA               	movwf	fsr2h,c
  4350  001862  EC31  F00E         	call	_Read1USART	;wreg free
  4351  001866  6EDF               	movwf	indf2,c
  4352                           
  4353                           ;my_uart.c: 26: uc_ptr->buflen++;
  4354  001868  EE20 F016          	lfsr	2,22
  4355  00186C  5042               	movf	_uc_ptr,w,c
  4356  00186E  26D9               	addwf	fsr2l,f,c
  4357  001870  5043               	movf	_uc_ptr+1,w,c
  4358  001872  22DA               	addwfc	fsr2h,f,c
  4359  001874  2ADF               	incf	indf2,f,c
  4360                           
  4361                           ;my_uart.c: 27: retrieve_command();
  4362  001876  EC37  F005         	call	_retrieve_command	;wreg free
  4363  00187A                     i1l3193:
  4364                           
  4365                           ;my_uart.c: 33: }
  4366                           ;my_uart.c: 38: if (USART1_Status.OVERRUN_ERROR == 1) {
  4367  00187A  A641               	btfss	_USART1_Status,3,c
  4368  00187C  0012               	return	
  4369                           
  4370                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  4371  00187E  98AC               	bcf	4012,4,c	;volatile
  4372                           
  4373                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  4374  001880  88AC               	bsf	4012,4,c	;volatile
  4375                           
  4376                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  4377  001882  6E22               	movwf	??_uart_recv_int_handler& (0+255),c
  4378  001884  0E1E               	movlw	30
  4379  001886  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4380  001888  5022               	movf	??_uart_recv_int_handler& (0+255),w,c
  4381  00188A  0E00               	movlw	0
  4382  00188C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4383  00188E  0E00               	movlw	0
  4384  001890  6E18               	movwf	ToMainLow_sendmsg@data,c
  4385  001892  0E00               	movlw	0
  4386  001894  EC0F  F00E         	call	_ToMainLow_sendmsg
  4387  001898  0012               	return	
  4388  00189A                     __end_of_uart_recv_int_handler:
  4389                           	opt stack 0
  4390                           pclatu	equ	0xFFB
  4391                           pclath	equ	0xFFA
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           prodh	equ	0xFF4
  4397                           prodl	equ	0xFF3
  4398                           intcon	equ	0xFF2
  4399                           postinc0	equ	0xFEE
  4400                           fsr0h	equ	0xFEA
  4401                           fsr0l	equ	0xFE9
  4402                           wreg	equ	0xFE8
  4403                           indf1	equ	0xFE7
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           bsr	equ	0xFE0
  4407                           indf2	equ	0xFDF
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412 ;; *************** function _retrieve_command *****************
  4413 ;; Defined at:
  4414 ;;		line 78 in file "../src/my_uart.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;		None               void
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;Total ram usage:        7 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    8
  4435 ;; This function calls:
  4436 ;;		_ToMainLow_sendmsg
  4437 ;;		i1_flipDBG
  4438 ;; This function is called by:
  4439 ;;		_uart_recv_int_handler
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text28
  4444  000A6E                     __ptext28:
  4445                           	opt stack 0
  4446  000A6E                     _retrieve_command:
  4447                           	opt stack 16
  4448                           
  4449                           ;my_uart.c: 80: flipDBG(2);
  4450                           
  4451                           ;incstack = 0
  4452  000A6E  0E02               	movlw	2
  4453  000A70  EC5E  F009         	call	i1_flipDBG
  4454                           
  4455                           ;my_uart.c: 81: switch(STATE){
  4456  000A74  D087               	goto	i1l3183
  4457  000A76                     i1l3153:
  4458                           
  4459                           ;my_uart.c: 84: {
  4460                           ;my_uart.c: 85: MSG_LEN = uc_ptr->buffer[uc_ptr->buflen - 1] & 0xF;
  4461  000A76  0EFF               	movlw	255
  4462  000A78  6E1B               	movwf	??_retrieve_command& (0+255),c
  4463  000A7A  0EFF               	movlw	255
  4464  000A7C  6E1C               	movwf	(??_retrieve_command+1)& (0+255),c
  4465  000A7E  EE20 F016          	lfsr	2,22
  4466  000A82  5042               	movf	_uc_ptr,w,c
  4467  000A84  26D9               	addwf	fsr2l,f,c
  4468  000A86  5043               	movf	_uc_ptr+1,w,c
  4469  000A88  22DA               	addwfc	fsr2h,f,c
  4470  000A8A  50DF               	movf	indf2,w,c
  4471  000A8C  6E1D               	movwf	(??_retrieve_command+2)& (0+255),c
  4472  000A8E  6A1E               	clrf	(??_retrieve_command+3)& (0+255),c
  4473  000A90  501B               	movf	??_retrieve_command,w,c
  4474  000A92  261D               	addwf	??_retrieve_command+2,f,c
  4475  000A94  501C               	movf	??_retrieve_command+1,w,c
  4476  000A96  221E               	addwfc	??_retrieve_command+3,f,c
  4477  000A98  501D               	movf	??_retrieve_command+2,w,c
  4478  000A9A  2442               	addwf	_uc_ptr,w,c
  4479  000A9C  6ED9               	movwf	fsr2l,c
  4480  000A9E  501E               	movf	??_retrieve_command+3,w,c
  4481  000AA0  2043               	addwfc	_uc_ptr+1,w,c
  4482  000AA2  6EDA               	movwf	fsr2h,c
  4483  000AA4  50DF               	movf	indf2,w,c
  4484  000AA6  0B0F               	andlw	15
  4485  000AA8  6E3E               	movwf	_MSG_LEN,c
  4486                           
  4487                           ;my_uart.c: 87: if(MSG_LEN == 0)
  4488  000AAA  663E               	tstfsz	_MSG_LEN,c
  4489  000AAC  D005               	goto	i1l3159
  4490                           
  4491                           ;my_uart.c: 88: STATE = GET_DISTANCE_FEET_LEFT;
  4492  000AAE  6E1B               	movwf	??_retrieve_command& (0+255),c
  4493  000AB0  0E02               	movlw	2
  4494  000AB2  6E40               	movwf	_STATE,c
  4495  000AB4  501B               	movf	??_retrieve_command& (0+255),w,c
  4496  000AB6  0012               	return	
  4497  000AB8                     i1l3159:
  4498                           
  4499                           ;my_uart.c: 89: else
  4500                           ;my_uart.c: 90: STATE = GET_SAMPLE;
  4501  000AB8  6E1B               	movwf	??_retrieve_command& (0+255),c
  4502  000ABA  0E01               	movlw	1
  4503  000ABC  6E40               	movwf	_STATE,c
  4504  000ABE  501B               	movf	??_retrieve_command& (0+255),w,c
  4505  000AC0  0012               	return	
  4506  000AC2                     i1l3161:
  4507                           
  4508                           ;my_uart.c: 96: {
  4509                           ;my_uart.c: 97: if(MSG_REC < MSG_LEN - 1)
  4510  000AC2  0EFF               	movlw	255
  4511  000AC4  6E1B               	movwf	??_retrieve_command& (0+255),c
  4512  000AC6  0EFF               	movlw	255
  4513  000AC8  6E1C               	movwf	(??_retrieve_command+1)& (0+255),c
  4514  000ACA  503E               	movf	_MSG_LEN,w,c
  4515  000ACC  6E1D               	movwf	(??_retrieve_command+2)& (0+255),c
  4516  000ACE  6A1E               	clrf	(??_retrieve_command+3)& (0+255),c
  4517  000AD0  501B               	movf	??_retrieve_command,w,c
  4518  000AD2  261D               	addwf	??_retrieve_command+2,f,c
  4519  000AD4  501C               	movf	??_retrieve_command+1,w,c
  4520  000AD6  221E               	addwfc	??_retrieve_command+3,f,c
  4521  000AD8  503F               	movf	_MSG_REC,w,c
  4522  000ADA  6E1F               	movwf	(??_retrieve_command+4)& (0+255),c
  4523  000ADC  6A20               	clrf	(??_retrieve_command+5)& (0+255),c
  4524  000ADE  5020               	movf	??_retrieve_command+5,w,c
  4525  000AE0  0A80               	xorlw	128
  4526  000AE2  6E21               	movwf	(??_retrieve_command+6)& (0+255),c
  4527  000AE4  501D               	movf	??_retrieve_command+2,w,c
  4528  000AE6  5C1F               	subwf	??_retrieve_command+4,w,c
  4529  000AE8  501E               	movf	??_retrieve_command+3,w,c
  4530  000AEA  0A80               	xorlw	128
  4531  000AEC  5821               	subwfb	(??_retrieve_command+6)& (0+255),w,c
  4532  000AEE  B0D8               	btfsc	status,0,c
  4533  000AF0  D002               	goto	i1l3165
  4534                           
  4535                           ;my_uart.c: 98: MSG_REC++;
  4536  000AF2  2A3F               	incf	_MSG_REC,f,c
  4537  000AF4  0012               	return	
  4538  000AF6                     i1l3165:
  4539                           
  4540                           ;my_uart.c: 99: else {
  4541                           ;my_uart.c: 100: MSG_REC = 0;
  4542  000AF6  6E1B               	movwf	??_retrieve_command& (0+255),c
  4543  000AF8  0E00               	movlw	0
  4544  000AFA  6E3F               	movwf	_MSG_REC,c
  4545  000AFC  501B               	movf	??_retrieve_command& (0+255),w,c
  4546                           
  4547                           ;my_uart.c: 101: MSG_LEN = 0;
  4548  000AFE  6E1B               	movwf	??_retrieve_command& (0+255),c
  4549  000B00  0E00               	movlw	0
  4550  000B02  6E3E               	movwf	_MSG_LEN,c
  4551  000B04  501B               	movf	??_retrieve_command& (0+255),w,c
  4552                           
  4553                           ;my_uart.c: 102: STATE = GET_DISTANCE_FEET_LEFT;
  4554  000B06  6E1B               	movwf	??_retrieve_command& (0+255),c
  4555  000B08  0E02               	movlw	2
  4556  000B0A  6E40               	movwf	_STATE,c
  4557  000B0C  501B               	movf	??_retrieve_command& (0+255),w,c
  4558  000B0E  0012               	return	
  4559  000B10                     i1l3167:
  4560                           
  4561                           ;my_uart.c: 109: {
  4562                           ;my_uart.c: 110: STATE = GET_DISTANCE_INCHES_LEFT;
  4563  000B10  6E1B               	movwf	??_retrieve_command& (0+255),c
  4564  000B12  0E03               	movlw	3
  4565  000B14  6E40               	movwf	_STATE,c
  4566  000B16  501B               	movf	??_retrieve_command& (0+255),w,c
  4567                           
  4568                           ;my_uart.c: 111: break;
  4569  000B18  0012               	return	
  4570  000B1A                     i1l3169:
  4571                           
  4572                           ;my_uart.c: 115: {
  4573                           ;my_uart.c: 116: STATE = GET_DISTANCE_FEET_RIGHT;
  4574  000B1A  6E1B               	movwf	??_retrieve_command& (0+255),c
  4575  000B1C  0E04               	movlw	4
  4576  000B1E  6E40               	movwf	_STATE,c
  4577  000B20  501B               	movf	??_retrieve_command& (0+255),w,c
  4578                           
  4579                           ;my_uart.c: 117: break;
  4580  000B22  0012               	return	
  4581  000B24                     i1l3171:
  4582                           
  4583                           ;my_uart.c: 121: {
  4584                           ;my_uart.c: 122: STATE = GET_DISTANCE_INCHES_RIGHT;
  4585  000B24  6E1B               	movwf	??_retrieve_command& (0+255),c
  4586  000B26  0E05               	movlw	5
  4587  000B28  6E40               	movwf	_STATE,c
  4588  000B2A  501B               	movf	??_retrieve_command& (0+255),w,c
  4589                           
  4590                           ;my_uart.c: 123: break;
  4591  000B2C  0012               	return	
  4592  000B2E                     i1l3173:
  4593                           
  4594                           ;my_uart.c: 127: {
  4595                           ;my_uart.c: 128: STATE = GET_CHECK_SUM;
  4596  000B2E  6E1B               	movwf	??_retrieve_command& (0+255),c
  4597  000B30  0E06               	movlw	6
  4598  000B32  6E40               	movwf	_STATE,c
  4599  000B34  501B               	movf	??_retrieve_command& (0+255),w,c
  4600                           
  4601                           ;my_uart.c: 129: break;
  4602  000B36  0012               	return	
  4603  000B38                     i1l3175:
  4604                           
  4605                           ;my_uart.c: 133: {
  4606                           ;my_uart.c: 134: MSG_LEN = 0;
  4607  000B38  6E1B               	movwf	??_retrieve_command& (0+255),c
  4608  000B3A  0E00               	movlw	0
  4609  000B3C  6E3E               	movwf	_MSG_LEN,c
  4610  000B3E  501B               	movf	??_retrieve_command& (0+255),w,c
  4611                           
  4612                           ;my_uart.c: 135: MSG_REC = 0;
  4613  000B40  6E1B               	movwf	??_retrieve_command& (0+255),c
  4614  000B42  0E00               	movlw	0
  4615  000B44  6E3F               	movwf	_MSG_REC,c
  4616  000B46  501B               	movf	??_retrieve_command& (0+255),w,c
  4617                           
  4618                           ;my_uart.c: 136: STATE = GET_MSG_ID_AND_LEN;
  4619  000B48  6E1B               	movwf	??_retrieve_command& (0+255),c
  4620  000B4A  0E00               	movlw	0
  4621  000B4C  6E40               	movwf	_STATE,c
  4622  000B4E  501B               	movf	??_retrieve_command& (0+255),w,c
  4623                           
  4624                           ;my_uart.c: 137: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4625  000B50  6E1B               	movwf	??_retrieve_command& (0+255),c
  4626  000B52  0E1F               	movlw	31
  4627  000B54  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4628  000B56  501B               	movf	??_retrieve_command& (0+255),w,c
  4629  000B58  C043  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4630  000B5C  C042  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4631  000B60  EE20 F016          	lfsr	2,22
  4632  000B64  5042               	movf	_uc_ptr,w,c
  4633  000B66  26D9               	addwf	fsr2l,f,c
  4634  000B68  5043               	movf	_uc_ptr+1,w,c
  4635  000B6A  22DA               	addwfc	fsr2h,f,c
  4636  000B6C  50DF               	movf	indf2,w,c
  4637  000B6E  EC0F  F00E         	call	_ToMainLow_sendmsg
  4638                           
  4639                           ;my_uart.c: 138: uc_ptr->buflen = 0;
  4640  000B72  EE20 F016          	lfsr	2,22
  4641  000B76  5042               	movf	_uc_ptr,w,c
  4642  000B78  26D9               	addwf	fsr2l,f,c
  4643  000B7A  5043               	movf	_uc_ptr+1,w,c
  4644  000B7C  22DA               	addwfc	fsr2h,f,c
  4645  000B7E  0E00               	movlw	0
  4646  000B80  6EDF               	movwf	indf2,c
  4647                           
  4648                           ;my_uart.c: 139: break;
  4649  000B82  0012               	return	
  4650  000B84                     i1l3183:
  4651  000B84  5040               	movf	_STATE,w,c
  4652                           
  4653                           ; Switch size 1, requested type "space"
  4654                           ; Number of cases is 7, Range of values is 0 to 6
  4655                           ; switch strategies available:
  4656                           ; Name         Instructions Cycles
  4657                           ; simple_byte           22    12 (average)
  4658                           ;	Chosen strategy is simple_byte
  4659  000B86  0A00               	xorlw	0	; case 0
  4660  000B88  B4D8               	btfsc	status,2,c
  4661  000B8A  D775               	goto	i1l3153
  4662  000B8C  0A01               	xorlw	1	; case 1
  4663  000B8E  B4D8               	btfsc	status,2,c
  4664  000B90  D798               	goto	i1l3161
  4665  000B92  0A03               	xorlw	3	; case 2
  4666  000B94  B4D8               	btfsc	status,2,c
  4667  000B96  D7BC               	goto	i1l3167
  4668  000B98  0A01               	xorlw	1	; case 3
  4669  000B9A  B4D8               	btfsc	status,2,c
  4670  000B9C  D7BE               	goto	i1l3169
  4671  000B9E  0A07               	xorlw	7	; case 4
  4672  000BA0  B4D8               	btfsc	status,2,c
  4673  000BA2  D7C0               	goto	i1l3171
  4674  000BA4  0A01               	xorlw	1	; case 5
  4675  000BA6  B4D8               	btfsc	status,2,c
  4676  000BA8  D7C2               	goto	i1l3173
  4677  000BAA  0A03               	xorlw	3	; case 6
  4678  000BAC  A4D8               	btfss	status,2,c
  4679  000BAE  0012               	return	
  4680  000BB0  D7C3               	goto	i1l3175
  4681  000BB2                     __end_of_retrieve_command:
  4682                           	opt stack 0
  4683                           pclatu	equ	0xFFB
  4684                           pclath	equ	0xFFA
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           postinc0	equ	0xFEE
  4693                           fsr0h	equ	0xFEA
  4694                           fsr0l	equ	0xFE9
  4695                           wreg	equ	0xFE8
  4696                           indf1	equ	0xFE7
  4697                           fsr1h	equ	0xFE2
  4698                           fsr1l	equ	0xFE1
  4699                           bsr	equ	0xFE0
  4700                           indf2	equ	0xFDF
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           
  4705 ;; *************** function i1_flipDBG *****************
  4706 ;; Defined at:
  4707 ;;		line 47 in file "../src/debug.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  b               1    wreg     unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  b               1    1[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;		None               void
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4725 ;;Total ram usage:        2 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    5
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_retrieve_command
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text29
  4736  0012BC                     __ptext29:
  4737                           	opt stack 0
  4738  0012BC                     i1_flipDBG:
  4739                           	opt stack 18
  4740                           
  4741                           ;incstack = 0
  4742                           ;i1flipDBG@b stored from wreg
  4743  0012BC  CFE8 F002          	movff	wreg,i1flipDBG@b
  4744                           
  4745                           ;debug.c: 48: switch(b) {
  4746  0012C0  D043               	goto	i1l3077
  4747  0012C2                     i1l3065:
  4748                           
  4749                           ;debug.c: 50: LATBbits.LATB0 = !LATBbits.LATB0;
  4750  0012C2  B08A               	btfsc	3978,0,c	;volatile
  4751  0012C4  D002               	goto	i1u217_20
  4752  0012C6  0E01               	movlw	1
  4753  0012C8  D001               	goto	i1u217_26
  4754  0012CA                     i1u217_20:
  4755  0012CA  0E00               	movlw	0
  4756  0012CC                     i1u217_26:
  4757  0012CC  6E01               	movwf	??i1_flipDBG& (0+255),c
  4758  0012CE  508A               	movf	3978,w,c	;volatile
  4759  0012D0  1801               	xorwf	??i1_flipDBG,w,c
  4760  0012D2  0BFE               	andlw	-2
  4761  0012D4  1801               	xorwf	??i1_flipDBG,w,c
  4762  0012D6  6E8A               	movwf	3978,c	;volatile
  4763                           
  4764                           ;debug.c: 51: break;
  4765  0012D8  0012               	return	
  4766  0012DA                     i1l3067:
  4767                           
  4768                           ;debug.c: 53: LATBbits.LATB1 = !LATBbits.LATB1;
  4769  0012DA  B28A               	btfsc	3978,1,c	;volatile
  4770  0012DC  D002               	goto	i1u218_20
  4771  0012DE  0E01               	movlw	1
  4772  0012E0  D001               	goto	i1u218_26
  4773  0012E2                     i1u218_20:
  4774  0012E2  0E00               	movlw	0
  4775  0012E4                     i1u218_26:
  4776  0012E4  6E01               	movwf	??i1_flipDBG& (0+255),c
  4777  0012E6  4601               	rlncf	??i1_flipDBG,f,c
  4778  0012E8  508A               	movf	3978,w,c	;volatile
  4779  0012EA  1801               	xorwf	??i1_flipDBG,w,c
  4780  0012EC  0BFD               	andlw	-3
  4781  0012EE  1801               	xorwf	??i1_flipDBG,w,c
  4782  0012F0  6E8A               	movwf	3978,c	;volatile
  4783                           
  4784                           ;debug.c: 54: break;
  4785  0012F2  0012               	return	
  4786  0012F4                     i1l3069:
  4787                           
  4788                           ;debug.c: 56: LATBbits.LATB2 = !LATBbits.LATB2;
  4789  0012F4  B48A               	btfsc	3978,2,c	;volatile
  4790  0012F6  D002               	goto	i1u219_20
  4791  0012F8  0E01               	movlw	1
  4792  0012FA  D001               	goto	i1u219_26
  4793  0012FC                     i1u219_20:
  4794  0012FC  0E00               	movlw	0
  4795  0012FE                     i1u219_26:
  4796  0012FE  6E01               	movwf	??i1_flipDBG& (0+255),c
  4797  001300  4601               	rlncf	??i1_flipDBG,f,c
  4798  001302  4601               	rlncf	??i1_flipDBG,f,c
  4799  001304  508A               	movf	3978,w,c	;volatile
  4800  001306  1801               	xorwf	??i1_flipDBG,w,c
  4801  001308  0BFB               	andlw	-5
  4802  00130A  1801               	xorwf	??i1_flipDBG,w,c
  4803  00130C  6E8A               	movwf	3978,c	;volatile
  4804                           
  4805                           ;debug.c: 57: break;
  4806  00130E  0012               	return	
  4807  001310                     i1l3071:
  4808                           
  4809                           ;debug.c: 59: LATBbits.LATB3 = !LATBbits.LATB3;
  4810  001310  B68A               	btfsc	3978,3,c	;volatile
  4811  001312  D002               	goto	i1u220_20
  4812  001314  0E01               	movlw	1
  4813  001316  D001               	goto	i1u220_26
  4814  001318                     i1u220_20:
  4815  001318  0E00               	movlw	0
  4816  00131A                     i1u220_26:
  4817  00131A  6E01               	movwf	??i1_flipDBG& (0+255),c
  4818  00131C  4601               	rlncf	??i1_flipDBG,f,c
  4819  00131E  4601               	rlncf	??i1_flipDBG,f,c
  4820  001320  4601               	rlncf	??i1_flipDBG,f,c
  4821  001322  508A               	movf	3978,w,c	;volatile
  4822  001324  1801               	xorwf	??i1_flipDBG,w,c
  4823  001326  0BF7               	andlw	-9
  4824  001328  1801               	xorwf	??i1_flipDBG,w,c
  4825  00132A  6E8A               	movwf	3978,c	;volatile
  4826                           
  4827                           ;debug.c: 60: break;
  4828  00132C  0012               	return	
  4829  00132E                     i1l3073:
  4830                           
  4831                           ;debug.c: 62: LATBbits.LATB4 = !LATBbits.LATB4;
  4832  00132E  B88A               	btfsc	3978,4,c	;volatile
  4833  001330  D002               	goto	i1u221_20
  4834  001332  0E01               	movlw	1
  4835  001334  D001               	goto	i1u221_26
  4836  001336                     i1u221_20:
  4837  001336  0E00               	movlw	0
  4838  001338                     i1u221_26:
  4839  001338  6E01               	movwf	??i1_flipDBG& (0+255),c
  4840  00133A  3A01               	swapf	??i1_flipDBG,f,c
  4841  00133C  508A               	movf	3978,w,c	;volatile
  4842  00133E  1801               	xorwf	??i1_flipDBG,w,c
  4843  001340  0BEF               	andlw	-17
  4844  001342  1801               	xorwf	??i1_flipDBG,w,c
  4845  001344  6E8A               	movwf	3978,c	;volatile
  4846                           
  4847                           ;debug.c: 63: break;
  4848  001346  0012               	return	
  4849  001348                     i1l3077:
  4850  001348  5002               	movf	i1flipDBG@b,w,c
  4851                           
  4852                           ; Switch size 1, requested type "space"
  4853                           ; Number of cases is 5, Range of values is 0 to 4
  4854                           ; switch strategies available:
  4855                           ; Name         Instructions Cycles
  4856                           ; simple_byte           16     9 (average)
  4857                           ;	Chosen strategy is simple_byte
  4858  00134A  0A00               	xorlw	0	; case 0
  4859  00134C  B4D8               	btfsc	status,2,c
  4860  00134E  D7B9               	goto	i1l3065
  4861  001350  0A01               	xorlw	1	; case 1
  4862  001352  B4D8               	btfsc	status,2,c
  4863  001354  D7C2               	goto	i1l3067
  4864  001356  0A03               	xorlw	3	; case 2
  4865  001358  B4D8               	btfsc	status,2,c
  4866  00135A  D7CC               	goto	i1l3069
  4867  00135C  0A01               	xorlw	1	; case 3
  4868  00135E  B4D8               	btfsc	status,2,c
  4869  001360  D7D7               	goto	i1l3071
  4870  001362  0A07               	xorlw	7	; case 4
  4871  001364  A4D8               	btfss	status,2,c
  4872  001366  0012               	return	
  4873  001368  D7E2               	goto	i1l3073
  4874  00136A                     __end_ofi1_flipDBG:
  4875                           	opt stack 0
  4876                           pclatu	equ	0xFFB
  4877                           pclath	equ	0xFFA
  4878                           tblptru	equ	0xFF8
  4879                           tblptrh	equ	0xFF7
  4880                           tblptrl	equ	0xFF6
  4881                           tablat	equ	0xFF5
  4882                           prodh	equ	0xFF4
  4883                           prodl	equ	0xFF3
  4884                           intcon	equ	0xFF2
  4885                           postinc0	equ	0xFEE
  4886                           fsr0h	equ	0xFEA
  4887                           fsr0l	equ	0xFE9
  4888                           wreg	equ	0xFE8
  4889                           indf1	equ	0xFE7
  4890                           fsr1h	equ	0xFE2
  4891                           fsr1l	equ	0xFE1
  4892                           bsr	equ	0xFE0
  4893                           indf2	equ	0xFDF
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _Read1USART *****************
  4899 ;; Defined at:
  4900 ;;		line 17 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/u1read.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  data            1    0[COMRAM] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      unsigned char 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4918 ;;Total ram usage:        1 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    5
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_uart_recv_int_handler
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text30
  4929  001C62                     __ptext30:
  4930                           	opt stack 0
  4931  001C62                     _Read1USART:
  4932                           	opt stack 19
  4933                           
  4934                           ;incstack = 0
  4935  001C62  0EF2               	movlw	242
  4936  001C64  1641               	andwf	_USART1_Status,f,c
  4937  001C66  ACAC               	btfss	4012,6,c	;volatile
  4938  001C68  D003               	goto	i1l629
  4939  001C6A  9041               	bcf	_USART1_Status,0,c
  4940  001C6C  B0AC               	btfsc	4012,0,c	;volatile
  4941  001C6E  8041               	bsf	_USART1_Status,0,c
  4942  001C70                     i1l629:
  4943  001C70  B4AC               	btfsc	4012,2,c	;volatile
  4944  001C72  8441               	bsf	_USART1_Status,2,c
  4945  001C74  B2AC               	btfsc	4012,1,c	;volatile
  4946  001C76  8641               	bsf	_USART1_Status,3,c
  4947  001C78  CFAF F001          	movff	4015,Read1USART@data	;volatile
  4948  001C7C  5001               	movf	Read1USART@data,w,c
  4949  001C7E  0012               	return	
  4950  001C80                     __end_of_Read1USART:
  4951                           	opt stack 0
  4952                           pclatu	equ	0xFFB
  4953                           pclath	equ	0xFFA
  4954                           tblptru	equ	0xFF8
  4955                           tblptrh	equ	0xFF7
  4956                           tblptrl	equ	0xFF6
  4957                           tablat	equ	0xFF5
  4958                           prodh	equ	0xFF4
  4959                           prodl	equ	0xFF3
  4960                           intcon	equ	0xFF2
  4961                           postinc0	equ	0xFEE
  4962                           fsr0h	equ	0xFEA
  4963                           fsr0l	equ	0xFE9
  4964                           wreg	equ	0xFE8
  4965                           indf1	equ	0xFE7
  4966                           fsr1h	equ	0xFE2
  4967                           fsr1l	equ	0xFE1
  4968                           bsr	equ	0xFE0
  4969                           indf2	equ	0xFDF
  4970                           fsr2h	equ	0xFDA
  4971                           fsr2l	equ	0xFD9
  4972                           status	equ	0xFD8
  4973                           
  4974 ;; *************** function _timer1_int_handler *****************
  4975 ;; Defined at:
  4976 ;;		line 42 in file "../src/user_interrupts.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  result          2   27[COMRAM] unsigned int 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;		None               void
  4983 ;; Registers used:
  4984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;Total ram usage:        3 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    8
  4997 ;; This function calls:
  4998 ;;		_ReadTimer1
  4999 ;;		_ToMainLow_sendmsg
  5000 ;;		_WriteTimer1
  5001 ;; This function is called by:
  5002 ;;		_InterruptHandlerLow
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text31
  5007  001B9C                     __ptext31:
  5008                           	opt stack 0
  5009  001B9C                     _timer1_int_handler:
  5010                           	opt stack 17
  5011                           
  5012                           ;user_interrupts.c: 43: unsigned int result;
  5013                           ;user_interrupts.c: 50: result = ReadTimer1();
  5014                           
  5015                           ;incstack = 0
  5016  001B9C  EC73  F00E         	call	_ReadTimer1	;wreg free
  5017  001BA0  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5018  001BA4  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5019                           
  5020                           ;user_interrupts.c: 51: ToMainLow_sendmsg(0, 11, (void *) 0);
  5021  001BA8  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5022  001BAA  0E0B               	movlw	11
  5023  001BAC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5024  001BAE  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5025  001BB0  0E00               	movlw	0
  5026  001BB2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5027  001BB4  0E00               	movlw	0
  5028  001BB6  6E18               	movwf	ToMainLow_sendmsg@data,c
  5029  001BB8  0E00               	movlw	0
  5030  001BBA  EC0F  F00E         	call	_ToMainLow_sendmsg
  5031                           
  5032                           ;user_interrupts.c: 54: WriteTimer1(0);
  5033  001BBE  0E00               	movlw	0
  5034  001BC0  6E02               	movwf	WriteTimer1@timer1+1,c
  5035  001BC2  0E00               	movlw	0
  5036  001BC4  6E01               	movwf	WriteTimer1@timer1,c
  5037  001BC6  EC6A  F00E         	call	_WriteTimer1	;wreg free
  5038  001BCA  0012               	return	
  5039  001BCC                     __end_of_timer1_int_handler:
  5040                           	opt stack 0
  5041                           pclatu	equ	0xFFB
  5042                           pclath	equ	0xFFA
  5043                           tblptru	equ	0xFF8
  5044                           tblptrh	equ	0xFF7
  5045                           tblptrl	equ	0xFF6
  5046                           tablat	equ	0xFF5
  5047                           prodh	equ	0xFF4
  5048                           prodl	equ	0xFF3
  5049                           intcon	equ	0xFF2
  5050                           postinc0	equ	0xFEE
  5051                           fsr0h	equ	0xFEA
  5052                           fsr0l	equ	0xFE9
  5053                           wreg	equ	0xFE8
  5054                           indf1	equ	0xFE7
  5055                           fsr1h	equ	0xFE2
  5056                           fsr1l	equ	0xFE1
  5057                           bsr	equ	0xFE0
  5058                           indf2	equ	0xFDF
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _WriteTimer1 *****************
  5064 ;; Defined at:
  5065 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  timer1          2    0[COMRAM] unsigned int 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  timer           2    2[COMRAM] struct Timers
  5070 ;; Return value:  Size  Location     Type
  5071 ;;		None               void
  5072 ;; Registers used:
  5073 ;;		None
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    5
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_timer1_int_handler
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text32
  5094  001CD4                     __ptext32:
  5095                           	opt stack 0
  5096  001CD4                     _WriteTimer1:
  5097                           	opt stack 19
  5098                           
  5099                           ;incstack = 0
  5100  001CD4  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5101  001CD8  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5102  001CDC  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5103  001CE0  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5104  001CE4  0012               	return	
  5105  001CE6                     __end_of_WriteTimer1:
  5106                           	opt stack 0
  5107                           pclatu	equ	0xFFB
  5108                           pclath	equ	0xFFA
  5109                           tblptru	equ	0xFF8
  5110                           tblptrh	equ	0xFF7
  5111                           tblptrl	equ	0xFF6
  5112                           tablat	equ	0xFF5
  5113                           prodh	equ	0xFF4
  5114                           prodl	equ	0xFF3
  5115                           intcon	equ	0xFF2
  5116                           postinc0	equ	0xFEE
  5117                           fsr0h	equ	0xFEA
  5118                           fsr0l	equ	0xFE9
  5119                           wreg	equ	0xFE8
  5120                           indf1	equ	0xFE7
  5121                           fsr1h	equ	0xFE2
  5122                           fsr1l	equ	0xFE1
  5123                           bsr	equ	0xFE0
  5124                           indf2	equ	0xFDF
  5125                           fsr2h	equ	0xFDA
  5126                           fsr2l	equ	0xFD9
  5127                           status	equ	0xFD8
  5128                           
  5129 ;; *************** function _ToMainLow_sendmsg *****************
  5130 ;; Defined at:
  5131 ;;		line 103 in file "../src/messages.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  length          1    wreg     unsigned char 
  5134 ;;  msgtype         1   22[COMRAM] unsigned char 
  5135 ;;  data            2   23[COMRAM] PTR void 
  5136 ;;		 -> timer0_lthread@val(2), NULL(0), main@uc(23), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  length          1   25[COMRAM] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      char 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5148 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5152 ;;Total ram usage:        4 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    7
  5155 ;; This function calls:
  5156 ;;		_send_msg
  5157 ;; This function is called by:
  5158 ;;		_uart_recv_int_handler
  5159 ;;		_retrieve_command
  5160 ;;		_timer1_int_handler
  5161 ;;		_timer0_lthread
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text33
  5166  001C1E                     __ptext33:
  5167                           	opt stack 0
  5168  001C1E                     _ToMainLow_sendmsg:
  5169                           	opt stack 16
  5170                           
  5171                           ;incstack = 0
  5172                           ;ToMainLow_sendmsg@length stored from wreg
  5173  001C1E  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5174                           
  5175                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5176                           ;	Return value of _ToMainLow_sendmsg is never used
  5177  001C22  0101               	movlb	1	; () banked
  5178  001C24  0E01               	movlw	high _ToMainLow_MQ
  5179  001C26  6E0C               	movwf	send_msg@qptr+1,c
  5180  001C28  0101               	movlb	1	; () banked
  5181  001C2A  0E7F               	movlw	low _ToMainLow_MQ
  5182  001C2C  6E0B               	movwf	send_msg@qptr,c
  5183  001C2E  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  5184  001C32  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  5185  001C36  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  5186  001C3A  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  5187  001C3E  ECB5  F009         	call	_send_msg	;wreg free
  5188  001C42  0012               	return	
  5189  001C44                     __end_of_ToMainLow_sendmsg:
  5190                           	opt stack 0
  5191                           pclatu	equ	0xFFB
  5192                           pclath	equ	0xFFA
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           intcon	equ	0xFF2
  5200                           postinc0	equ	0xFEE
  5201                           fsr0h	equ	0xFEA
  5202                           fsr0l	equ	0xFE9
  5203                           wreg	equ	0xFE8
  5204                           indf1	equ	0xFE7
  5205                           fsr1h	equ	0xFE2
  5206                           fsr1l	equ	0xFE1
  5207                           bsr	equ	0xFE0
  5208                           indf2	equ	0xFDF
  5209                           fsr2h	equ	0xFDA
  5210                           fsr2l	equ	0xFD9
  5211                           status	equ	0xFD8
  5212                           
  5213 ;; *************** function _send_msg *****************
  5214 ;; Defined at:
  5215 ;;		line 24 in file "../src/messages.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5218 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5219 ;;  length          1   12[COMRAM] unsigned char 
  5220 ;;  msgtype         1   13[COMRAM] unsigned char 
  5221 ;;  data            2   14[COMRAM] PTR void 
  5222 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(76), 
  5223 ;;		 -> main@uc(23), 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  5226 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5227 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5228 ;;  tlength         2   17[COMRAM] unsigned int 
  5229 ;;  slot            1   19[COMRAM] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      char 
  5232 ;; Registers used:
  5233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5239 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5240 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5242 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;Total ram usage:       12 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    6
  5246 ;; This function calls:
  5247 ;;		i1_memcpy
  5248 ;; This function is called by:
  5249 ;;		_ToMainLow_sendmsg
  5250 ;;		_FromMainLow_sendmsg
  5251 ;;		_FromMainHigh_sendmsg
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text34
  5256  00136A                     __ptext34:
  5257                           	opt stack 0
  5258  00136A                     _send_msg:
  5259                           	opt stack 16
  5260                           
  5261                           ;messages.c: 25: unsigned char slot;
  5262                           ;messages.c: 27: msg *qmsg;
  5263                           ;messages.c: 28: size_t tlength = length;
  5264                           
  5265                           ;incstack = 0
  5266  00136A  C00D  F012         	movff	send_msg@length,send_msg@tlength
  5267  00136E  6A13               	clrf	send_msg@tlength+1,c
  5268                           
  5269                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5270  001370  EE20 F064          	lfsr	2,100
  5271  001374  500B               	movf	send_msg@qptr,w,c
  5272  001376  26D9               	addwf	fsr2l,f,c
  5273  001378  500C               	movf	send_msg@qptr+1,w,c
  5274  00137A  22DA               	addwfc	fsr2h,f,c
  5275  00137C  50DF               	movf	indf2,w,c
  5276  00137E  6E14               	movwf	send_msg@slot,c
  5277                           
  5278                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5279  001380  5014               	movf	send_msg@slot,w,c
  5280  001382  0D19               	mullw	25
  5281  001384  50F3               	movf	prodl,w,c
  5282  001386  240B               	addwf	send_msg@qptr,w,c
  5283  001388  6E15               	movwf	send_msg@qmsg,c
  5284  00138A  50F4               	movf	prodh,w,c
  5285  00138C  200C               	addwfc	send_msg@qptr+1,w,c
  5286  00138E  6E16               	movwf	send_msg@qmsg+1,c
  5287                           
  5288                           ;messages.c: 41: if (qmsg->full != 0) {
  5289  001390  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5290  001394  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5291  001398  50DF               	movf	indf2,w,c
  5292  00139A  B4D8               	btfsc	status,2,c
  5293  00139C  D002               	goto	i1l3129
  5294                           
  5295                           ;messages.c: 42: return (-1);
  5296  00139E  0EFF               	movlw	255
  5297  0013A0  0012               	return	
  5298  0013A2                     i1l3129:
  5299                           
  5300                           ;messages.c: 43: }
  5301                           ;messages.c: 46: qmsg->length = length;
  5302  0013A2  EE20 F001          	lfsr	2,1
  5303  0013A6  5015               	movf	send_msg@qmsg,w,c
  5304  0013A8  26D9               	addwf	fsr2l,f,c
  5305  0013AA  5016               	movf	send_msg@qmsg+1,w,c
  5306  0013AC  22DA               	addwfc	fsr2h,f,c
  5307  0013AE  C00D  FFDF         	movff	send_msg@length,indf2
  5308                           
  5309                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5310  0013B2  EE20 F002          	lfsr	2,2
  5311  0013B6  5015               	movf	send_msg@qmsg,w,c
  5312  0013B8  26D9               	addwf	fsr2l,f,c
  5313  0013BA  5016               	movf	send_msg@qmsg+1,w,c
  5314  0013BC  22DA               	addwfc	fsr2h,f,c
  5315  0013BE  C00E  FFDF         	movff	send_msg@msgtype,indf2
  5316                           
  5317                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5318  0013C2  0E03               	movlw	3
  5319  0013C4  2415               	addwf	send_msg@qmsg,w,c
  5320  0013C6  6E01               	movwf	i1memcpy@d1,c
  5321  0013C8  0E00               	movlw	0
  5322  0013CA  2016               	addwfc	send_msg@qmsg+1,w,c
  5323  0013CC  6E02               	movwf	i1memcpy@d1+1,c
  5324  0013CE  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  5325  0013D2  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  5326  0013D6  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  5327  0013DA  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  5328  0013DE  EC42  F00D         	call	i1_memcpy	;wreg free
  5329                           
  5330                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5331  0013E2  EE20 F064          	lfsr	2,100
  5332  0013E6  500B               	movf	send_msg@qptr,w,c
  5333  0013E8  26D9               	addwf	fsr2l,f,c
  5334  0013EA  500C               	movf	send_msg@qptr+1,w,c
  5335  0013EC  22DA               	addwfc	fsr2h,f,c
  5336  0013EE  EE10 F064          	lfsr	1,100
  5337  0013F2  500B               	movf	send_msg@qptr,w,c
  5338  0013F4  26E1               	addwf	fsr1l,f,c
  5339  0013F6  500C               	movf	send_msg@qptr+1,w,c
  5340  0013F8  22E2               	addwfc	fsr1h,f,c
  5341  0013FA  50E7               	movf	indf1,w,c
  5342  0013FC  6E11               	movwf	??_send_msg& (0+255),c
  5343  0013FE  2811               	incf	??_send_msg,w,c
  5344  001400  0B03               	andlw	3
  5345  001402  6EDF               	movwf	indf2,c
  5346                           
  5347                           ;messages.c: 59: qmsg->full = 1;
  5348  001404  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5349  001408  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5350  00140C  0E01               	movlw	1
  5351  00140E  6EDF               	movwf	indf2,c
  5352                           
  5353                           ;messages.c: 60: return (1);
  5354  001410  0E01               	movlw	1
  5355  001412  0012               	return	
  5356  001414                     __end_of_send_msg:
  5357                           	opt stack 0
  5358                           pclatu	equ	0xFFB
  5359                           pclath	equ	0xFFA
  5360                           tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           prodh	equ	0xFF4
  5365                           prodl	equ	0xFF3
  5366                           intcon	equ	0xFF2
  5367                           postinc0	equ	0xFEE
  5368                           fsr0h	equ	0xFEA
  5369                           fsr0l	equ	0xFE9
  5370                           wreg	equ	0xFE8
  5371                           indf1	equ	0xFE7
  5372                           fsr1h	equ	0xFE2
  5373                           fsr1l	equ	0xFE1
  5374                           bsr	equ	0xFE0
  5375                           indf2	equ	0xFDF
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function i1_memcpy *****************
  5381 ;; Defined at:
  5382 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  d1              2    0[COMRAM] PTR void 
  5385 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5386 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5387 ;;		 -> main@msgbuffer(23), 
  5388 ;;  s1              2    2[COMRAM] PTR const void 
  5389 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5390 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5391 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  5392 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(76), 
  5393 ;;		 -> main@uc(23), 
  5394 ;;  n               2    4[COMRAM] unsigned int 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5397 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5398 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5399 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  5400 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(76), 
  5401 ;;		 -> main@uc(23), 
  5402 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5403 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5404 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5405 ;;		 -> main@msgbuffer(23), 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  2    0[COMRAM] PTR void 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5415 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;Total ram usage:       10 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    5
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_send_msg
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text35
  5430  001A84                     __ptext35:
  5431                           	opt stack 0
  5432  001A84                     i1_memcpy:
  5433                           	opt stack 16
  5434                           
  5435                           ;incstack = 0
  5436  001A84  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5437  001A88  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5438  001A8C  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5439  001A90  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5440  001A94  D00E               	goto	i1l3105
  5441  001A96                     i1l3099:
  5442  001A96  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5443  001A9A  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5444  001A9E  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5445  001AA2  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5446  001AA6  CFDF FFE7          	movff	indf2,indf1
  5447  001AAA  4A09               	infsnz	i1memcpy@s,f,c
  5448  001AAC  2A0A               	incf	i1memcpy@s+1,f,c
  5449  001AAE  4A07               	infsnz	i1memcpy@d,f,c
  5450  001AB0  2A08               	incf	i1memcpy@d+1,f,c
  5451  001AB2                     i1l3105:
  5452  001AB2  0605               	decf	i1memcpy@n,f,c
  5453  001AB4  A0D8               	btfss	status,0,c
  5454  001AB6  0606               	decf	i1memcpy@n+1,f,c
  5455  001AB8  2805               	incf	i1memcpy@n& (0+255),w,c
  5456  001ABA  B4D8               	btfsc	status,2,c
  5457  001ABC  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5458  001ABE  B4D8               	btfsc	status,2,c
  5459                           
  5460                           ;	Return value of i1_memcpy is never used
  5461  001AC0  0012               	return	
  5462  001AC2  D7E9               	goto	i1l3099
  5463  001AC4                     __end_ofi1_memcpy:
  5464                           	opt stack 0
  5465                           pclatu	equ	0xFFB
  5466                           pclath	equ	0xFFA
  5467                           tblptru	equ	0xFF8
  5468                           tblptrh	equ	0xFF7
  5469                           tblptrl	equ	0xFF6
  5470                           tablat	equ	0xFF5
  5471                           prodh	equ	0xFF4
  5472                           prodl	equ	0xFF3
  5473                           intcon	equ	0xFF2
  5474                           postinc0	equ	0xFEE
  5475                           fsr0h	equ	0xFEA
  5476                           fsr0l	equ	0xFE9
  5477                           wreg	equ	0xFE8
  5478                           indf1	equ	0xFE7
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           bsr	equ	0xFE0
  5482                           indf2	equ	0xFDF
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _ReadTimer1 *****************
  5488 ;; Defined at:
  5489 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  timer           2    2[COMRAM] struct Timers
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  2    0[COMRAM] unsigned int 
  5496 ;; Registers used:
  5497 ;;		None
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5507 ;;Total ram usage:        4 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    5
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_timer1_int_handler
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text36
  5518  001CE6                     __ptext36:
  5519                           	opt stack 0
  5520  001CE6                     _ReadTimer1:
  5521                           	opt stack 19
  5522                           
  5523                           ;incstack = 0
  5524  001CE6  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5525  001CEA  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5526  001CEE  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5527  001CF2  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5528  001CF6  0012               	return	
  5529  001CF8                     __end_of_ReadTimer1:
  5530                           	opt stack 0
  5531                           pclatu	equ	0xFFB
  5532                           pclath	equ	0xFFA
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           intcon	equ	0xFF2
  5540                           postinc0	equ	0xFEE
  5541                           fsr0h	equ	0xFEA
  5542                           fsr0l	equ	0xFE9
  5543                           wreg	equ	0xFE8
  5544                           indf1	equ	0xFE7
  5545                           fsr1h	equ	0xFE2
  5546                           fsr1l	equ	0xFE1
  5547                           bsr	equ	0xFE0
  5548                           indf2	equ	0xFDF
  5549                           fsr2h	equ	0xFDA
  5550                           fsr2l	equ	0xFD9
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function _InterruptHandlerHigh *****************
  5554 ;; Defined at:
  5555 ;;		line 84 in file "../src/interrupts.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;		None
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;		None               void
  5562 ;; Registers used:
  5563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;Total ram usage:       15 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    4
  5576 ;; This function calls:
  5577 ;;		_SleepIfOkay
  5578 ;;		_adc_int_handler
  5579 ;;		_i2c_int_handler
  5580 ;;		_timer0_int_handler
  5581 ;; This function is called by:
  5582 ;;		Interrupt level 2
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	intcode
  5587  000008                     __pintcode:
  5588                           	opt stack 0
  5589  000008                     _InterruptHandlerHigh:
  5590                           	opt stack 16
  5591                           
  5592                           ;incstack = 0
  5593  000008  CFFA F086          	movff	pclath,??_InterruptHandlerHigh+1
  5594  00000C  CFFB F087          	movff	pclatu,??_InterruptHandlerHigh+2
  5595  000010  EFFC  F008         	goto	int_func
  5596                           pclatu	equ	0xFFB
  5597                           pclath	equ	0xFFA
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           intcon	equ	0xFF2
  5605                           postinc0	equ	0xFEE
  5606                           fsr0h	equ	0xFEA
  5607                           fsr0l	equ	0xFE9
  5608                           wreg	equ	0xFE8
  5609                           indf1	equ	0xFE7
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           bsr	equ	0xFE0
  5613                           indf2	equ	0xFDF
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618                           	psect	intcode_body
  5619  0011F8                     __pintcode_body:
  5620                           	opt stack 16
  5621  0011F8                     int_func:
  5622                           	opt stack 16
  5623  0011F8  CFE9 F088          	movff	fsr0l,??_InterruptHandlerHigh+3
  5624  0011FC  CFEA F089          	movff	fsr0h,??_InterruptHandlerHigh+4
  5625  001200  CFE1 F08A          	movff	fsr1l,??_InterruptHandlerHigh+5
  5626  001204  CFE2 F08B          	movff	fsr1h,??_InterruptHandlerHigh+6
  5627  001208  CFD9 F08C          	movff	fsr2l,??_InterruptHandlerHigh+7
  5628  00120C  CFDA F08D          	movff	fsr2h,??_InterruptHandlerHigh+8
  5629  001210  CFF3 F08E          	movff	prodl,??_InterruptHandlerHigh+9
  5630  001214  CFF4 F08F          	movff	prodh,??_InterruptHandlerHigh+10
  5631  001218  CFF6 F090          	movff	tblptrl,??_InterruptHandlerHigh+11
  5632  00121C  CFF7 F091          	movff	tblptrh,??_InterruptHandlerHigh+12
  5633  001220  CFF8 F092          	movff	tblptru,??_InterruptHandlerHigh+13
  5634  001224  CFF5 F093          	movff	tablat,??_InterruptHandlerHigh+14
  5635                           
  5636                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  5637  001228  A69E               	btfss	3998,3,c	;volatile
  5638  00122A  D003               	goto	i2l2353
  5639                           
  5640                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  5641  00122C  969E               	bcf	3998,3,c	;volatile
  5642                           
  5643                           ;interrupts.c: 93: i2c_int_handler();
  5644  00122E  EC5D  F000         	call	_i2c_int_handler	;wreg free
  5645  001232                     i2l2353:
  5646                           
  5647                           ;interrupts.c: 94: }
  5648                           ;interrupts.c: 95: if(PIR1bits.ADIF)
  5649  001232  AC9E               	btfss	3998,6,c	;volatile
  5650  001234  D012               	goto	i2l2361
  5651                           
  5652                           ;interrupts.c: 96: {
  5653                           ;interrupts.c: 97: LATBbits.LATB1 = !LATBbits.LATB1;
  5654  001236  B28A               	btfsc	3978,1,c	;volatile
  5655  001238  D002               	goto	i2u132_40
  5656  00123A  0E01               	movlw	1
  5657  00123C  D001               	goto	i2u132_46
  5658  00123E                     i2u132_40:
  5659  00123E  0E00               	movlw	0
  5660  001240                     i2u132_46:
  5661  001240  0100               	movlb	0	; () banked
  5662  001242  6F85               	movwf	??_InterruptHandlerHigh& (0+255),b
  5663  001244  0100               	movlb	0	; () banked
  5664  001246  4785               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  5665  001248  508A               	movf	3978,w,c	;volatile
  5666  00124A  0100               	movlb	0	; () banked
  5667  00124C  1985               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5668  00124E  0BFD               	andlw	-3
  5669  001250  1985               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5670  001252  6E8A               	movwf	3978,c	;volatile
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;interrupts.c: 99: PIR1bits.ADIF = 0;
  5674  001254  9C9E               	bcf	3998,6,c	;volatile
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;interrupts.c: 100: adc_int_handler();
  5678  001256  EC98  F00D         	call	_adc_int_handler	;wreg free
  5679  00125A                     i2l2361:
  5680                           
  5681                           ;interrupts.c: 101: }
  5682                           ;interrupts.c: 103: if (INTCONbits.TMR0IF) {
  5683  00125A  A4F2               	btfss	intcon,2,c	;volatile
  5684  00125C  D010               	goto	i2l2369
  5685                           
  5686                           ;interrupts.c: 104: LATBbits.LATB0 = !LATBbits.LATB0;
  5687  00125E  B08A               	btfsc	3978,0,c	;volatile
  5688  001260  D002               	goto	i2u134_40
  5689  001262  0E01               	movlw	1
  5690  001264  D001               	goto	i2u134_46
  5691  001266                     i2u134_40:
  5692  001266  0E00               	movlw	0
  5693  001268                     i2u134_46:
  5694  001268  0100               	movlb	0	; () banked
  5695  00126A  6F85               	movwf	??_InterruptHandlerHigh& (0+255),b
  5696  00126C  508A               	movf	3978,w,c	;volatile
  5697  00126E  0100               	movlb	0	; () banked
  5698  001270  1985               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5699  001272  0BFE               	andlw	-2
  5700  001274  1985               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  5701  001276  6E8A               	movwf	3978,c	;volatile
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;interrupts.c: 105: INTCONbits.TMR0IF = 0;
  5705  001278  94F2               	bcf	intcon,2,c	;volatile
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;interrupts.c: 107: timer0_int_handler();
  5709  00127A  EC40  F00E         	call	_timer0_int_handler	;wreg free
  5710  00127E                     i2l2369:
  5711                           
  5712                           ;interrupts.c: 108: }
  5713                           ;interrupts.c: 117: SleepIfOkay();
  5714  00127E  EC55  F00B         	call	_SleepIfOkay	;wreg free
  5715  001282  C093  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  5716  001286  C092  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  5717  00128A  C091  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  5718  00128E  C090  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  5719  001292  C08F  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  5720  001296  C08E  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  5721  00129A  C08D  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  5722  00129E  C08C  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  5723  0012A2  C08B  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  5724  0012A6  C08A  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  5725  0012AA  C089  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  5726  0012AE  C088  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  5727  0012B2  C087  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  5728  0012B6  C086  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  5729  0012BA  0011               	retfie		f
  5730  0012BC                     __end_of_InterruptHandlerHigh:
  5731                           	opt stack 0
  5732                           pclatu	equ	0xFFB
  5733                           pclath	equ	0xFFA
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           prodh	equ	0xFF4
  5739                           prodl	equ	0xFF3
  5740                           intcon	equ	0xFF2
  5741                           postinc0	equ	0xFEE
  5742                           fsr0h	equ	0xFEA
  5743                           fsr0l	equ	0xFE9
  5744                           wreg	equ	0xFE8
  5745                           indf1	equ	0xFE7
  5746                           fsr1h	equ	0xFE2
  5747                           fsr1l	equ	0xFE1
  5748                           bsr	equ	0xFE0
  5749                           indf2	equ	0xFDF
  5750                           fsr2h	equ	0xFDA
  5751                           fsr2l	equ	0xFD9
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function _timer0_int_handler *****************
  5755 ;; Defined at:
  5756 ;;		line 18 in file "../src/user_interrupts.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  msgtype         2    0        int 
  5761 ;;  length          2    0        int 
  5762 ;;  val             2    0        unsigned int 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;		None               void
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    1
  5779 ;; This function calls:
  5780 ;;		_WriteTimer0
  5781 ;;		i2_ConvertADC
  5782 ;; This function is called by:
  5783 ;;		_InterruptHandlerHigh
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text38
  5788  001C80                     __ptext38:
  5789                           	opt stack 0
  5790  001C80                     _timer0_int_handler:
  5791                           	opt stack 18
  5792                           
  5793                           ;user_interrupts.c: 19: unsigned int val;
  5794                           ;user_interrupts.c: 20: int length, msgtype;
  5795                           ;user_interrupts.c: 27: WriteTimer0(0);
  5796                           
  5797                           ;incstack = 0
  5798  001C80  0E00               	movlw	0
  5799  001C82  0100               	movlb	0	; () banked
  5800  001C84  0100               	movlb	0	; () banked
  5801  001C86  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  5802  001C88  0E00               	movlw	0
  5803  001C8A  0100               	movlb	0	; () banked
  5804  001C8C  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  5805  001C8E  EC7C  F00E         	call	_WriteTimer0	;wreg free
  5806                           
  5807                           ;user_interrupts.c: 33: ConvertADC();
  5808  001C92  EC9F  F00E         	call	i2_ConvertADC	;wreg free
  5809  001C96  0012               	return	
  5810  001C98                     __end_of_timer0_int_handler:
  5811                           	opt stack 0
  5812                           pclatu	equ	0xFFB
  5813                           pclath	equ	0xFFA
  5814                           tblptru	equ	0xFF8
  5815                           tblptrh	equ	0xFF7
  5816                           tblptrl	equ	0xFF6
  5817                           tablat	equ	0xFF5
  5818                           prodh	equ	0xFF4
  5819                           prodl	equ	0xFF3
  5820                           intcon	equ	0xFF2
  5821                           postinc0	equ	0xFEE
  5822                           fsr0h	equ	0xFEA
  5823                           fsr0l	equ	0xFE9
  5824                           wreg	equ	0xFE8
  5825                           indf1	equ	0xFE7
  5826                           fsr1h	equ	0xFE2
  5827                           fsr1l	equ	0xFE1
  5828                           bsr	equ	0xFE0
  5829                           indf2	equ	0xFDF
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function i2_ConvertADC *****************
  5835 ;; Defined at:
  5836 ;;		line 22 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcconv.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;		None               void
  5843 ;; Registers used:
  5844 ;;		None
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;Total ram usage:        0 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_timer0_int_handler
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text39
  5864  001D3E                     __ptext39:
  5865                           	opt stack 0
  5866  001D3E                     i2_ConvertADC:
  5867                           	opt stack 18
  5868                           
  5869                           ;incstack = 0
  5870  001D3E  82C2               	bsf	4034,1,c	;volatile
  5871  001D40  0012               	return	
  5872  001D42                     __end_ofi2_ConvertADC:
  5873                           	opt stack 0
  5874                           pclatu	equ	0xFFB
  5875                           pclath	equ	0xFFA
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           fsr0h	equ	0xFEA
  5885                           fsr0l	equ	0xFE9
  5886                           wreg	equ	0xFE8
  5887                           indf1	equ	0xFE7
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           bsr	equ	0xFE0
  5891                           indf2	equ	0xFDF
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function _WriteTimer0 *****************
  5897 ;; Defined at:
  5898 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  timer0          2    0[BANK0 ] unsigned int 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  timer           2    2[BANK0 ] struct Timers
  5903 ;; Return value:  Size  Location     Type
  5904 ;;		None               void
  5905 ;; Registers used:
  5906 ;;		None
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;Total ram usage:        4 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; This function calls:
  5919 ;;		Nothing
  5920 ;; This function is called by:
  5921 ;;		_timer0_int_handler
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text40
  5926  001CF8                     __ptext40:
  5927                           	opt stack 0
  5928  001CF8                     _WriteTimer0:
  5929                           	opt stack 18
  5930                           
  5931                           ;incstack = 0
  5932  001CF8  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5933  001CFC  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5934  001D00  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5935  001D04  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5936  001D08  0012               	return	
  5937  001D0A                     __end_of_WriteTimer0:
  5938                           	opt stack 0
  5939                           pclatu	equ	0xFFB
  5940                           pclath	equ	0xFFA
  5941                           tblptru	equ	0xFF8
  5942                           tblptrh	equ	0xFF7
  5943                           tblptrl	equ	0xFF6
  5944                           tablat	equ	0xFF5
  5945                           prodh	equ	0xFF4
  5946                           prodl	equ	0xFF3
  5947                           intcon	equ	0xFF2
  5948                           postinc0	equ	0xFEE
  5949                           fsr0h	equ	0xFEA
  5950                           fsr0l	equ	0xFE9
  5951                           wreg	equ	0xFE8
  5952                           indf1	equ	0xFE7
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           bsr	equ	0xFE0
  5956                           indf2	equ	0xFDF
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _i2c_int_handler *****************
  5962 ;; Defined at:
  5963 ;;		line 153 in file "../src/my_i2c.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  5968 ;;  data_read       1   36[BANK0 ] unsigned char 
  5969 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  5970 ;;  msg_to_send     1   34[BANK0 ] unsigned char 
  5971 ;;  i2c_data        1   33[BANK0 ] unsigned char 
  5972 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  5973 ;;  data_written    1   31[BANK0 ] unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;		None               void
  5976 ;; Registers used:
  5977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;Total ram usage:       11 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    3
  5990 ;; This function calls:
  5991 ;;		_ToMainHigh_sendmsg
  5992 ;;		_handle_start
  5993 ;;		_start_i2c_slave_reply
  5994 ;;		i2_flipDBG
  5995 ;; This function is called by:
  5996 ;;		_InterruptHandlerHigh
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text41
  6001  0000BA                     __ptext41:
  6002                           	opt stack 0
  6003  0000BA                     _i2c_int_handler:
  6004                           	opt stack 16
  6005                           
  6006                           ;my_i2c.c: 155: flipDBG(3);
  6007                           
  6008                           ;incstack = 0
  6009  0000BA  0E03               	movlw	3
  6010  0000BC  EC2F  F008         	call	i2_flipDBG
  6011                           
  6012                           ;my_i2c.c: 157: unsigned char i2c_data;
  6013                           ;my_i2c.c: 158: unsigned char data_read = 0;
  6014  0000C0  0100               	movlb	0	; () banked
  6015  0000C2  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6016  0000C4  0E00               	movlw	0
  6017  0000C6  0100               	movlb	0	; () banked
  6018  0000C8  0100               	movlb	0	; () banked
  6019  0000CA  6F84               	movwf	i2c_int_handler@data_read& (0+255),b
  6020  0000CC  0100               	movlb	0	; () banked
  6021  0000CE  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;my_i2c.c: 159: unsigned char data_written = 0;
  6025  0000D0  0100               	movlb	0	; () banked
  6026  0000D2  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6027  0000D4  0E00               	movlw	0
  6028  0000D6  0100               	movlb	0	; () banked
  6029  0000D8  0100               	movlb	0	; () banked
  6030  0000DA  6F7F               	movwf	i2c_int_handler@data_written& (0+255),b
  6031  0000DC  0100               	movlb	0	; () banked
  6032  0000DE  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;my_i2c.c: 160: unsigned char msg_ready = 0;
  6036  0000E0  0100               	movlb	0	; () banked
  6037  0000E2  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6038  0000E4  0E00               	movlw	0
  6039  0000E6  0100               	movlb	0	; () banked
  6040  0000E8  0100               	movlb	0	; () banked
  6041  0000EA  6F83               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6042  0000EC  0100               	movlb	0	; () banked
  6043  0000EE  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;my_i2c.c: 161: unsigned char msg_to_send = 0;
  6047  0000F0  0100               	movlb	0	; () banked
  6048  0000F2  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6049  0000F4  0E00               	movlw	0
  6050  0000F6  0100               	movlb	0	; () banked
  6051  0000F8  0100               	movlb	0	; () banked
  6052  0000FA  6F82               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6053  0000FC  0100               	movlb	0	; () banked
  6054  0000FE  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;my_i2c.c: 162: unsigned char overrun_error = 0;
  6058  000100  0100               	movlb	0	; () banked
  6059  000102  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6060  000104  0E00               	movlw	0
  6061  000106  0100               	movlb	0	; () banked
  6062  000108  0100               	movlb	0	; () banked
  6063  00010A  6F80               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6064  00010C  0100               	movlb	0	; () banked
  6065  00010E  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;my_i2c.c: 163: unsigned char error_buf[3];
  6069                           ;my_i2c.c: 166: if (SSPCON1bits.SSPOV == 1) {
  6070  000110  ACC6               	btfss	4038,6,c	;volatile
  6071  000112  D029               	goto	i2l2395
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;my_i2c.c: 167: SSPCON1bits.SSPOV = 0;
  6075  000114  9CC6               	bcf	4038,6,c	;volatile
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;my_i2c.c: 171: ic_ptr->status = 0x5;
  6079  000116  0100               	movlb	0	; () banked
  6080  000118  EE20 F018          	lfsr	2,24
  6081  00011C  0100               	movlb	0	; () banked
  6082  00011E  51B2               	movf	_ic_ptr& (0+255),w,b
  6083  000120  26D9               	addwf	fsr2l,f,c
  6084  000122  0100               	movlb	0	; () banked
  6085  000124  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6086  000126  22DA               	addwfc	fsr2h,f,c
  6087  000128  0E05               	movlw	5
  6088  00012A  6EDF               	movwf	indf2,c
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;my_i2c.c: 172: overrun_error = 1;
  6092  00012C  0100               	movlb	0	; () banked
  6093  00012E  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6094  000130  0E01               	movlw	1
  6095  000132  0100               	movlb	0	; () banked
  6096  000134  0100               	movlb	0	; () banked
  6097  000136  6F80               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6098  000138  0100               	movlb	0	; () banked
  6099  00013A  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;my_i2c.c: 173: ic_ptr->error_count++;
  6103  00013C  0100               	movlb	0	; () banked
  6104  00013E  EE20 F01A          	lfsr	2,26
  6105  000142  0100               	movlb	0	; () banked
  6106  000144  51B2               	movf	_ic_ptr& (0+255),w,b
  6107  000146  26D9               	addwf	fsr2l,f,c
  6108  000148  0100               	movlb	0	; () banked
  6109  00014A  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6110  00014C  22DA               	addwfc	fsr2h,f,c
  6111  00014E  2ADF               	incf	indf2,f,c
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;my_i2c.c: 174: ic_ptr->error_code = 0x4;
  6115  000150  0100               	movlb	0	; () banked
  6116  000152  EE20 F019          	lfsr	2,25
  6117  000156  0100               	movlb	0	; () banked
  6118  000158  51B2               	movf	_ic_ptr& (0+255),w,b
  6119  00015A  26D9               	addwf	fsr2l,f,c
  6120  00015C  0100               	movlb	0	; () banked
  6121  00015E  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6122  000160  22DA               	addwfc	fsr2h,f,c
  6123  000162  0E04               	movlw	4
  6124  000164  6EDF               	movwf	indf2,c
  6125  000166                     i2l2395:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;my_i2c.c: 175: }
  6129                           ;my_i2c.c: 177: if (SSPSTATbits.BF == 1) {
  6130  000166  A0C7               	btfss	4039,0,c	;volatile
  6131  000168  D00A               	goto	i2l2401
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;my_i2c.c: 178: i2c_data = SSPBUF;
  6135  00016A  CFC9 F081          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;my_i2c.c: 179: data_read = 1;
  6139  00016E  0100               	movlb	0	; () banked
  6140  000170  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6141  000172  0E01               	movlw	1
  6142  000174  0100               	movlb	0	; () banked
  6143  000176  0100               	movlb	0	; () banked
  6144  000178  6F84               	movwf	i2c_int_handler@data_read& (0+255),b
  6145  00017A  0100               	movlb	0	; () banked
  6146  00017C  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6147  00017E                     i2l2401:
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;my_i2c.c: 180: }
  6151                           ;my_i2c.c: 182: if (!overrun_error) {
  6152  00017E  0100               	movlb	0	; () banked
  6153  000180  0100               	movlb	0	; () banked
  6154  000182  6780               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6155  000184  D1CE               	goto	i2l296
  6156  000186  D1B7               	goto	i2l2489
  6157  000188                     i2l298:
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;my_i2c.c: 185: {
  6161                           ;my_i2c.c: 187: if (SSPSTATbits.S == 1) {
  6162  000188  A6C7               	btfss	4039,3,c	;volatile
  6163  00018A  D1CB               	goto	i2l296
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;my_i2c.c: 188: handle_start(data_read);
  6167  00018C  0100               	movlb	0	; () banked
  6168  00018E  0100               	movlb	0	; () banked
  6169  000190  5184               	movf	i2c_int_handler@data_read& (0+255),w,b
  6170  000192  EC96  F008         	call	_handle_start
  6171                           
  6172                           ;my_i2c.c: 190: if (ic_ptr->status == 0x8) {
  6173  000196  0100               	movlb	0	; () banked
  6174  000198  EE20 F018          	lfsr	2,24
  6175  00019C  0100               	movlb	0	; () banked
  6176  00019E  51B2               	movf	_ic_ptr& (0+255),w,b
  6177  0001A0  26D9               	addwf	fsr2l,f,c
  6178  0001A2  0100               	movlb	0	; () banked
  6179  0001A4  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6180  0001A6  22DA               	addwfc	fsr2h,f,c
  6181  0001A8  0E08               	movlw	8
  6182  0001AA  62DF               	cpfseq	indf2,c
  6183  0001AC  D1BA               	goto	i2l296
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;my_i2c.c: 191: data_read = 0;
  6187  0001AE  0100               	movlb	0	; () banked
  6188  0001B0  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6189  0001B2  0E00               	movlw	0
  6190  0001B4  0100               	movlb	0	; () banked
  6191  0001B6  0100               	movlb	0	; () banked
  6192  0001B8  6F84               	movwf	i2c_int_handler@data_read& (0+255),b
  6193  0001BA  0100               	movlb	0	; () banked
  6194  0001BC  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6195                           
  6196                           ;my_i2c.c: 192: msg_to_send = 1;
  6197  0001BE  0100               	movlb	0	; () banked
  6198  0001C0  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6199  0001C2  0E01               	movlw	1
  6200  0001C4  0100               	movlb	0	; () banked
  6201  0001C6  0100               	movlb	0	; () banked
  6202  0001C8  6F82               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6203  0001CA  D187               	goto	L6
  6204  0001CC                     i2l302:
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;my_i2c.c: 198: {
  6208                           ;my_i2c.c: 200: if (SSPSTATbits.P == 1) {
  6209  0001CC  A8C7               	btfss	4039,4,c	;volatile
  6210  0001CE  D030               	goto	i2l2421
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;my_i2c.c: 203: ic_ptr->event_count++;
  6214  0001D0  0100               	movlb	0	; () banked
  6215  0001D2  EE20 F017          	lfsr	2,23
  6216  0001D6  0100               	movlb	0	; () banked
  6217  0001D8  51B2               	movf	_ic_ptr& (0+255),w,b
  6218  0001DA  26D9               	addwf	fsr2l,f,c
  6219  0001DC  0100               	movlb	0	; () banked
  6220  0001DE  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6221  0001E0  22DA               	addwfc	fsr2h,f,c
  6222  0001E2  2ADF               	incf	indf2,f,c
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;my_i2c.c: 204: if (data_read) {
  6226  0001E4  0100               	movlb	0	; () banked
  6227  0001E6  0100               	movlb	0	; () banked
  6228  0001E8  5184               	movf	i2c_int_handler@data_read& (0+255),w,b
  6229  0001EA  B4D8               	btfsc	status,2,c
  6230  0001EC  D179               	goto	L8
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;my_i2c.c: 205: if (SSPSTATbits.D_A == 0) {
  6234  0001EE  BAC7               	btfsc	4039,5,c	;volatile
  6235  0001F0  D009               	goto	i2l2419
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;my_i2c.c: 206: msg_ready = 1;
  6239  0001F2  0100               	movlb	0	; () banked
  6240  0001F4  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6241  0001F6  0E01               	movlw	1
  6242  0001F8  0100               	movlb	0	; () banked
  6243  0001FA  0100               	movlb	0	; () banked
  6244  0001FC  6F83               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6245  0001FE  0100               	movlb	0	; () banked
  6246  000200  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6247                           
  6248                           ;my_i2c.c: 207: } else {
  6249  000202  D16E               	goto	L8
  6250  000204                     i2l2419:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;my_i2c.c: 208: ic_ptr->error_count++;
  6254  000204  0100               	movlb	0	; () banked
  6255  000206  EE20 F01A          	lfsr	2,26
  6256  00020A  0100               	movlb	0	; () banked
  6257  00020C  51B2               	movf	_ic_ptr& (0+255),w,b
  6258  00020E  26D9               	addwf	fsr2l,f,c
  6259  000210  0100               	movlb	0	; () banked
  6260  000212  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6261  000214  22DA               	addwfc	fsr2h,f,c
  6262  000216  2ADF               	incf	indf2,f,c
  6263                           
  6264                           ;my_i2c.c: 209: ic_ptr->error_code = 0x6;
  6265  000218  0100               	movlb	0	; () banked
  6266  00021A  EE20 F019          	lfsr	2,25
  6267  00021E  0100               	movlb	0	; () banked
  6268  000220  51B2               	movf	_ic_ptr& (0+255),w,b
  6269  000222  26D9               	addwf	fsr2l,f,c
  6270  000224  0100               	movlb	0	; () banked
  6271  000226  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6272  000228  22DA               	addwfc	fsr2h,f,c
  6273  00022A  0E06               	movlw	6
  6274  00022C  6EDF               	movwf	indf2,c
  6275                           
  6276                           ; BSR set to: 0
  6277  00022E  D158               	goto	L8
  6278  000230                     i2l2421:
  6279                           
  6280                           ; BSR set to: 0
  6281  000230  0100               	movlb	0	; () banked
  6282  000232  0100               	movlb	0	; () banked
  6283  000234  5184               	movf	i2c_int_handler@data_read& (0+255),w,b
  6284  000236  B4D8               	btfsc	status,2,c
  6285  000238  D174               	goto	i2l296
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;my_i2c.c: 214: ic_ptr->event_count++;
  6289  00023A  0100               	movlb	0	; () banked
  6290  00023C  EE20 F017          	lfsr	2,23
  6291  000240  0100               	movlb	0	; () banked
  6292  000242  51B2               	movf	_ic_ptr& (0+255),w,b
  6293  000244  26D9               	addwf	fsr2l,f,c
  6294  000246  0100               	movlb	0	; () banked
  6295  000248  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6296  00024A  22DA               	addwfc	fsr2h,f,c
  6297  00024C  2ADF               	incf	indf2,f,c
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 0) {
  6301  00024E  BAC7               	btfsc	4039,5,c	;volatile
  6302  000250  D019               	goto	i2l2437
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;my_i2c.c: 216: if (SSPSTATbits.R_W == 0) {
  6306  000252  B4C7               	btfsc	4039,2,c	;volatile
  6307  000254  D00B               	goto	i2l2431
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;my_i2c.c: 217: ic_ptr->status = 0x7;
  6311  000256  0100               	movlb	0	; () banked
  6312  000258  EE20 F018          	lfsr	2,24
  6313  00025C  0100               	movlb	0	; () banked
  6314  00025E  51B2               	movf	_ic_ptr& (0+255),w,b
  6315  000260  26D9               	addwf	fsr2l,f,c
  6316  000262  0100               	movlb	0	; () banked
  6317  000264  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6318  000266  22DA               	addwfc	fsr2h,f,c
  6319  000268  0E07               	movlw	7
  6320  00026A  D076               	goto	L5
  6321  00026C                     i2l2431:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;my_i2c.c: 219: ic_ptr->status = 0x8;
  6325  00026C  0100               	movlb	0	; () banked
  6326  00026E  EE20 F018          	lfsr	2,24
  6327  000272  0100               	movlb	0	; () banked
  6328  000274  51B2               	movf	_ic_ptr& (0+255),w,b
  6329  000276  26D9               	addwf	fsr2l,f,c
  6330  000278  0100               	movlb	0	; () banked
  6331  00027A  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6332  00027C  22DA               	addwfc	fsr2h,f,c
  6333  00027E  0E08               	movlw	8
  6334  000280  6EDF               	movwf	indf2,c
  6335  000282  D11D               	goto	L9
  6336  000284                     i2l2437:
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;my_i2c.c: 225: ic_ptr->error_count++;
  6340  000284  0100               	movlb	0	; () banked
  6341  000286  EE20 F01A          	lfsr	2,26
  6342  00028A  0100               	movlb	0	; () banked
  6343  00028C  51B2               	movf	_ic_ptr& (0+255),w,b
  6344  00028E  26D9               	addwf	fsr2l,f,c
  6345  000290  0100               	movlb	0	; () banked
  6346  000292  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6347  000294  22DA               	addwfc	fsr2h,f,c
  6348  000296  2ADF               	incf	indf2,f,c
  6349                           
  6350                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  6351  000298  0100               	movlb	0	; () banked
  6352  00029A  EE20 F018          	lfsr	2,24
  6353  00029E  0100               	movlb	0	; () banked
  6354  0002A0  51B2               	movf	_ic_ptr& (0+255),w,b
  6355  0002A2  26D9               	addwf	fsr2l,f,c
  6356  0002A4  0100               	movlb	0	; () banked
  6357  0002A6  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6358  0002A8  22DA               	addwfc	fsr2h,f,c
  6359  0002AA  0E05               	movlw	5
  6360  0002AC  6EDF               	movwf	indf2,c
  6361                           
  6362                           ;my_i2c.c: 227: ic_ptr->error_code = 0x6;
  6363  0002AE  0100               	movlb	0	; () banked
  6364  0002B0  EE20 F019          	lfsr	2,25
  6365  0002B4  0100               	movlb	0	; () banked
  6366  0002B6  51B2               	movf	_ic_ptr& (0+255),w,b
  6367  0002B8  26D9               	addwf	fsr2l,f,c
  6368  0002BA  0100               	movlb	0	; () banked
  6369  0002BC  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6370  0002BE  22DA               	addwfc	fsr2h,f,c
  6371  0002C0  0E06               	movlw	6
  6372  0002C2  D04A               	goto	L5
  6373  0002C4                     i2l2439:
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;my_i2c.c: 233: {
  6377                           ;my_i2c.c: 234: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6378  0002C4  0100               	movlb	0	; () banked
  6379  0002C6  EE20 F032          	lfsr	2,50
  6380  0002CA  0100               	movlb	0	; () banked
  6381  0002CC  51B2               	movf	_ic_ptr& (0+255),w,b
  6382  0002CE  26D9               	addwf	fsr2l,f,c
  6383  0002D0  0100               	movlb	0	; () banked
  6384  0002D2  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6385  0002D4  22DA               	addwfc	fsr2h,f,c
  6386  0002D6  50DF               	movf	indf2,w,c
  6387  0002D8  0100               	movlb	0	; () banked
  6388  0002DA  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6389  0002DC  0100               	movlb	0	; () banked
  6390  0002DE  EE20 F031          	lfsr	2,49
  6391  0002E2  0100               	movlb	0	; () banked
  6392  0002E4  51B2               	movf	_ic_ptr& (0+255),w,b
  6393  0002E6  26D9               	addwf	fsr2l,f,c
  6394  0002E8  0100               	movlb	0	; () banked
  6395  0002EA  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6396  0002EC  22DA               	addwfc	fsr2h,f,c
  6397  0002EE  50DF               	movf	indf2,w,c
  6398  0002F0  0100               	movlb	0	; () banked
  6399  0002F2  5D7A               	subwf	??_i2c_int_handler& (0+255),w,b
  6400  0002F4  B0D8               	btfsc	status,0,c
  6401  0002F6  D0F4               	goto	L8
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;my_i2c.c: 235: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6405  0002F8  0100               	movlb	0	; () banked
  6406  0002FA  EE20 F032          	lfsr	2,50
  6407  0002FE  0100               	movlb	0	; () banked
  6408  000300  51B2               	movf	_ic_ptr& (0+255),w,b
  6409  000302  26D9               	addwf	fsr2l,f,c
  6410  000304  0100               	movlb	0	; () banked
  6411  000306  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6412  000308  22DA               	addwfc	fsr2h,f,c
  6413  00030A  50DF               	movf	indf2,w,c
  6414  00030C  0100               	movlb	0	; () banked
  6415  00030E  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6416  000310  0100               	movlb	0	; () banked
  6417  000312  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6418  000314  0D01               	mullw	1
  6419  000316  0E1B               	movlw	27
  6420  000318  26F3               	addwf	prodl,f,c
  6421  00031A  0E00               	movlw	0
  6422  00031C  22F4               	addwfc	prodh,f,c
  6423  00031E  50F3               	movf	prodl,w,c
  6424  000320  0100               	movlb	0	; () banked
  6425  000322  0100               	movlb	0	; () banked
  6426  000324  25B2               	addwf	_ic_ptr& (0+255),w,b
  6427  000326  6ED9               	movwf	fsr2l,c
  6428  000328  50F4               	movf	prodh,w,c
  6429  00032A  0100               	movlb	0	; () banked
  6430  00032C  0100               	movlb	0	; () banked
  6431  00032E  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6432  000330  6EDA               	movwf	fsr2h,c
  6433  000332  50DF               	movf	indf2,w,c
  6434  000334  6EC9               	movwf	4041,c	;volatile
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;my_i2c.c: 236: ic_ptr->outbufind++;
  6438  000336  0100               	movlb	0	; () banked
  6439  000338  EE20 F032          	lfsr	2,50
  6440  00033C  0100               	movlb	0	; () banked
  6441  00033E  51B2               	movf	_ic_ptr& (0+255),w,b
  6442  000340  26D9               	addwf	fsr2l,f,c
  6443  000342  0100               	movlb	0	; () banked
  6444  000344  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6445  000346  22DA               	addwfc	fsr2h,f,c
  6446  000348  2ADF               	incf	indf2,f,c
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;my_i2c.c: 237: data_written = 1;
  6450  00034A  0100               	movlb	0	; () banked
  6451  00034C  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6452  00034E  0E01               	movlw	1
  6453  000350  0100               	movlb	0	; () banked
  6454  000352  0100               	movlb	0	; () banked
  6455  000354  6F7F               	movwf	i2c_int_handler@data_written& (0+255),b
  6456  000356  D0C1               	goto	L6
  6457  000358                     L5:
  6458  000358  6EDF               	movwf	indf2,c
  6459  00035A  D0E3               	goto	i2l296
  6460  00035C                     i2l316:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;my_i2c.c: 245: {
  6464                           ;my_i2c.c: 247: if (SSPSTATbits.P == 1) {
  6465  00035C  A8C7               	btfss	4039,4,c	;volatile
  6466  00035E  D062               	goto	i2l2467
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;my_i2c.c: 249: ic_ptr->event_count++;
  6470  000360  0100               	movlb	0	; () banked
  6471  000362  EE20 F017          	lfsr	2,23
  6472  000366  0100               	movlb	0	; () banked
  6473  000368  51B2               	movf	_ic_ptr& (0+255),w,b
  6474  00036A  26D9               	addwf	fsr2l,f,c
  6475  00036C  0100               	movlb	0	; () banked
  6476  00036E  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6477  000370  22DA               	addwfc	fsr2h,f,c
  6478  000372  2ADF               	incf	indf2,f,c
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;my_i2c.c: 250: if (data_read) {
  6482  000374  0100               	movlb	0	; () banked
  6483  000376  0100               	movlb	0	; () banked
  6484  000378  5184               	movf	i2c_int_handler@data_read& (0+255),w,b
  6485  00037A  B4D8               	btfsc	status,2,c
  6486  00037C  D04A               	goto	i2l2463
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;my_i2c.c: 251: if (SSPSTATbits.D_A == 1) {
  6490  00037E  AAC7               	btfss	4039,5,c	;volatile
  6491  000380  D027               	goto	i2l2461
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;my_i2c.c: 252: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6495  000382  0100               	movlb	0	; () banked
  6496  000384  EE20 F016          	lfsr	2,22
  6497  000388  0100               	movlb	0	; () banked
  6498  00038A  51B2               	movf	_ic_ptr& (0+255),w,b
  6499  00038C  26D9               	addwf	fsr2l,f,c
  6500  00038E  0100               	movlb	0	; () banked
  6501  000390  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6502  000392  22DA               	addwfc	fsr2h,f,c
  6503  000394  50DF               	movf	indf2,w,c
  6504  000396  0100               	movlb	0	; () banked
  6505  000398  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6506  00039A  0100               	movlb	0	; () banked
  6507  00039C  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6508  00039E  0D01               	mullw	1
  6509  0003A0  50F3               	movf	prodl,w,c
  6510  0003A2  0100               	movlb	0	; () banked
  6511  0003A4  0100               	movlb	0	; () banked
  6512  0003A6  25B2               	addwf	_ic_ptr& (0+255),w,b
  6513  0003A8  6ED9               	movwf	fsr2l,c
  6514  0003AA  50F4               	movf	prodh,w,c
  6515  0003AC  0100               	movlb	0	; () banked
  6516  0003AE  0100               	movlb	0	; () banked
  6517  0003B0  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6518  0003B2  6EDA               	movwf	fsr2h,c
  6519  0003B4  0100               	movlb	0	; () banked
  6520  0003B6  C081  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;my_i2c.c: 253: ic_ptr->buflen++;
  6524  0003BA  0100               	movlb	0	; () banked
  6525  0003BC  EE20 F016          	lfsr	2,22
  6526  0003C0  0100               	movlb	0	; () banked
  6527  0003C2  51B2               	movf	_ic_ptr& (0+255),w,b
  6528  0003C4  26D9               	addwf	fsr2l,f,c
  6529  0003C6  0100               	movlb	0	; () banked
  6530  0003C8  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6531  0003CA  22DA               	addwfc	fsr2h,f,c
  6532  0003CC  2ADF               	incf	indf2,f,c
  6533  0003CE  D021               	goto	i2l2463
  6534  0003D0                     i2l2461:
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;my_i2c.c: 256: ic_ptr->error_count++;
  6538  0003D0  0100               	movlb	0	; () banked
  6539  0003D2  EE20 F01A          	lfsr	2,26
  6540  0003D6  0100               	movlb	0	; () banked
  6541  0003D8  51B2               	movf	_ic_ptr& (0+255),w,b
  6542  0003DA  26D9               	addwf	fsr2l,f,c
  6543  0003DC  0100               	movlb	0	; () banked
  6544  0003DE  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6545  0003E0  22DA               	addwfc	fsr2h,f,c
  6546  0003E2  2ADF               	incf	indf2,f,c
  6547                           
  6548                           ;my_i2c.c: 257: ic_ptr->error_code = 0x6;
  6549  0003E4  0100               	movlb	0	; () banked
  6550  0003E6  EE20 F019          	lfsr	2,25
  6551  0003EA  0100               	movlb	0	; () banked
  6552  0003EC  51B2               	movf	_ic_ptr& (0+255),w,b
  6553  0003EE  26D9               	addwf	fsr2l,f,c
  6554  0003F0  0100               	movlb	0	; () banked
  6555  0003F2  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6556  0003F4  22DA               	addwfc	fsr2h,f,c
  6557  0003F6  0E06               	movlw	6
  6558  0003F8  6EDF               	movwf	indf2,c
  6559                           
  6560                           ;my_i2c.c: 258: ic_ptr->status = 0x5;
  6561  0003FA  0100               	movlb	0	; () banked
  6562  0003FC  EE20 F018          	lfsr	2,24
  6563  000400  0100               	movlb	0	; () banked
  6564  000402  51B2               	movf	_ic_ptr& (0+255),w,b
  6565  000404  26D9               	addwf	fsr2l,f,c
  6566  000406  0100               	movlb	0	; () banked
  6567  000408  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6568  00040A  22DA               	addwfc	fsr2h,f,c
  6569  00040C  0E05               	movlw	5
  6570  00040E  6EDF               	movwf	indf2,c
  6571  000410  D067               	goto	L8
  6572  000412                     i2l2463:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;my_i2c.c: 261: msg_ready = 1;
  6576  000412  0100               	movlb	0	; () banked
  6577  000414  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6578  000416  0E01               	movlw	1
  6579  000418  0100               	movlb	0	; () banked
  6580  00041A  0100               	movlb	0	; () banked
  6581  00041C  6F83               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6582  00041E  0100               	movlb	0	; () banked
  6583  000420  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6584                           
  6585                           ; BSR set to: 0
  6586  000422  D05E               	goto	L8
  6587  000424                     i2l2467:
  6588                           
  6589                           ; BSR set to: 0
  6590  000424  0100               	movlb	0	; () banked
  6591  000426  0100               	movlb	0	; () banked
  6592  000428  5184               	movf	i2c_int_handler@data_read& (0+255),w,b
  6593  00042A  B4D8               	btfsc	status,2,c
  6594  00042C  D07A               	goto	i2l296
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;my_i2c.c: 265: ic_ptr->event_count++;
  6598  00042E  0100               	movlb	0	; () banked
  6599  000430  EE20 F017          	lfsr	2,23
  6600  000434  0100               	movlb	0	; () banked
  6601  000436  51B2               	movf	_ic_ptr& (0+255),w,b
  6602  000438  26D9               	addwf	fsr2l,f,c
  6603  00043A  0100               	movlb	0	; () banked
  6604  00043C  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6605  00043E  22DA               	addwfc	fsr2h,f,c
  6606  000440  2ADF               	incf	indf2,f,c
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;my_i2c.c: 266: if (SSPSTATbits.D_A == 1) {
  6610  000442  AAC7               	btfss	4039,5,c	;volatile
  6611  000444  D027               	goto	i2l324
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;my_i2c.c: 267: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6615  000446  0100               	movlb	0	; () banked
  6616  000448  EE20 F016          	lfsr	2,22
  6617  00044C  0100               	movlb	0	; () banked
  6618  00044E  51B2               	movf	_ic_ptr& (0+255),w,b
  6619  000450  26D9               	addwf	fsr2l,f,c
  6620  000452  0100               	movlb	0	; () banked
  6621  000454  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6622  000456  22DA               	addwfc	fsr2h,f,c
  6623  000458  50DF               	movf	indf2,w,c
  6624  00045A  0100               	movlb	0	; () banked
  6625  00045C  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6626  00045E  0100               	movlb	0	; () banked
  6627  000460  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6628  000462  0D01               	mullw	1
  6629  000464  50F3               	movf	prodl,w,c
  6630  000466  0100               	movlb	0	; () banked
  6631  000468  0100               	movlb	0	; () banked
  6632  00046A  25B2               	addwf	_ic_ptr& (0+255),w,b
  6633  00046C  6ED9               	movwf	fsr2l,c
  6634  00046E  50F4               	movf	prodh,w,c
  6635  000470  0100               	movlb	0	; () banked
  6636  000472  0100               	movlb	0	; () banked
  6637  000474  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6638  000476  6EDA               	movwf	fsr2h,c
  6639  000478  0100               	movlb	0	; () banked
  6640  00047A  C081  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;my_i2c.c: 268: ic_ptr->buflen++;
  6644  00047E  0100               	movlb	0	; () banked
  6645  000480  EE20 F016          	lfsr	2,22
  6646  000484  0100               	movlb	0	; () banked
  6647  000486  51B2               	movf	_ic_ptr& (0+255),w,b
  6648  000488  26D9               	addwf	fsr2l,f,c
  6649  00048A  0100               	movlb	0	; () banked
  6650  00048C  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6651  00048E  22DA               	addwfc	fsr2h,f,c
  6652  000490  2ADF               	incf	indf2,f,c
  6653                           
  6654                           ;my_i2c.c: 269: } else {
  6655  000492  D047               	goto	i2l296
  6656  000494                     i2l324:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;my_i2c.c: 270: if (SSPSTATbits.R_W == 1) {
  6660  000494  A4C7               	btfss	4039,2,c	;volatile
  6661  000496  D6B6               	goto	i2l2419
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;my_i2c.c: 271: ic_ptr->status = 0x8;
  6665  000498  0100               	movlb	0	; () banked
  6666  00049A  EE20 F018          	lfsr	2,24
  6667  00049E  0100               	movlb	0	; () banked
  6668  0004A0  51B2               	movf	_ic_ptr& (0+255),w,b
  6669  0004A2  26D9               	addwf	fsr2l,f,c
  6670  0004A4  0100               	movlb	0	; () banked
  6671  0004A6  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6672  0004A8  22DA               	addwfc	fsr2h,f,c
  6673  0004AA  0E08               	movlw	8
  6674  0004AC  6EDF               	movwf	indf2,c
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;my_i2c.c: 272: msg_ready = 1;
  6678  0004AE  0100               	movlb	0	; () banked
  6679  0004B0  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6680  0004B2  0E01               	movlw	1
  6681  0004B4  0100               	movlb	0	; () banked
  6682  0004B6  0100               	movlb	0	; () banked
  6683  0004B8  6F83               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6684  0004BA  0100               	movlb	0	; () banked
  6685  0004BC  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6686  0004BE                     L9:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;my_i2c.c: 273: msg_to_send = 1;
  6690  0004BE  0100               	movlb	0	; () banked
  6691  0004C0  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6692  0004C2  0E01               	movlw	1
  6693  0004C4  0100               	movlb	0	; () banked
  6694  0004C6  0100               	movlb	0	; () banked
  6695  0004C8  6F82               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6696  0004CA  0100               	movlb	0	; () banked
  6697  0004CC  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;my_i2c.c: 275: data_read = 0;
  6701  0004CE  0100               	movlb	0	; () banked
  6702  0004D0  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6703  0004D2  0E00               	movlw	0
  6704  0004D4  0100               	movlb	0	; () banked
  6705  0004D6  0100               	movlb	0	; () banked
  6706  0004D8  6F84               	movwf	i2c_int_handler@data_read& (0+255),b
  6707  0004DA                     L6:
  6708  0004DA  0100               	movlb	0	; () banked
  6709  0004DC  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6710                           
  6711                           ;my_i2c.c: 276: } else {
  6712  0004DE  D021               	goto	i2l296
  6713  0004E0                     L8:
  6714                           
  6715                           ;my_i2c.c: 279: ic_ptr->status = 0x5;
  6716  0004E0  0100               	movlb	0	; () banked
  6717  0004E2  EE20 F018          	lfsr	2,24
  6718  0004E6  0100               	movlb	0	; () banked
  6719  0004E8  51B2               	movf	_ic_ptr& (0+255),w,b
  6720  0004EA  26D9               	addwf	fsr2l,f,c
  6721  0004EC  0100               	movlb	0	; () banked
  6722  0004EE  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6723  0004F0  22DA               	addwfc	fsr2h,f,c
  6724  0004F2  0E05               	movlw	5
  6725  0004F4  D731               	goto	L5
  6726  0004F6                     i2l2489:
  6727                           
  6728                           ; BSR set to: 0
  6729  0004F6  0100               	movlb	0	; () banked
  6730  0004F8  EE20 F018          	lfsr	2,24
  6731  0004FC  0100               	movlb	0	; () banked
  6732  0004FE  51B2               	movf	_ic_ptr& (0+255),w,b
  6733  000500  26D9               	addwf	fsr2l,f,c
  6734  000502  0100               	movlb	0	; () banked
  6735  000504  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6736  000506  22DA               	addwfc	fsr2h,f,c
  6737  000508  50DF               	movf	indf2,w,c
  6738                           
  6739                           ; Switch size 1, requested type "space"
  6740                           ; Number of cases is 4, Range of values is 5 to 8
  6741                           ; switch strategies available:
  6742                           ; Name         Instructions Cycles
  6743                           ; simple_byte           13     7 (average)
  6744                           ;	Chosen strategy is simple_byte
  6745  00050A  0A05               	xorlw	5	; case 5
  6746  00050C  B4D8               	btfsc	status,2,c
  6747  00050E  D63C               	goto	i2l298
  6748  000510  0A03               	xorlw	3	; case 6
  6749  000512  B4D8               	btfsc	status,2,c
  6750  000514  D65B               	goto	i2l302
  6751  000516  0A01               	xorlw	1	; case 7
  6752  000518  B4D8               	btfsc	status,2,c
  6753  00051A  D720               	goto	i2l316
  6754  00051C  0A0F               	xorlw	15	; case 8
  6755  00051E  B4D8               	btfsc	status,2,c
  6756  000520  D6D1               	goto	i2l2439
  6757  000522                     i2l296:
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;my_i2c.c: 286: }
  6761                           ;my_i2c.c: 289: if (data_read || data_written) {
  6762  000522  0100               	movlb	0	; () banked
  6763  000524  0100               	movlb	0	; () banked
  6764  000526  6784               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6765  000528  D005               	goto	i2l330
  6766                           
  6767                           ; BSR set to: 0
  6768  00052A  0100               	movlb	0	; () banked
  6769  00052C  0100               	movlb	0	; () banked
  6770  00052E  517F               	movf	i2c_int_handler@data_written& (0+255),w,b
  6771  000530  B4D8               	btfsc	status,2,c
  6772  000532  D002               	goto	i2l2495
  6773  000534                     i2l330:
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;my_i2c.c: 291: if (SSPCON1bits.CKP == 0) {
  6777  000534  A8C6               	btfss	4038,4,c	;volatile
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;my_i2c.c: 292: SSPCON1bits.CKP = 1;
  6781  000536  88C6               	bsf	4038,4,c	;volatile
  6782  000538                     i2l2495:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;my_i2c.c: 293: }
  6786                           ;my_i2c.c: 294: }
  6787                           ;my_i2c.c: 297: if ((ic_ptr->buflen > 22 - 2) && (!msg_ready)) {
  6788  000538  0100               	movlb	0	; () banked
  6789  00053A  EE20 F016          	lfsr	2,22
  6790  00053E  0100               	movlb	0	; () banked
  6791  000540  51B2               	movf	_ic_ptr& (0+255),w,b
  6792  000542  26D9               	addwf	fsr2l,f,c
  6793  000544  0100               	movlb	0	; () banked
  6794  000546  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6795  000548  22DA               	addwfc	fsr2h,f,c
  6796  00054A  0E14               	movlw	20
  6797  00054C  64DF               	cpfsgt	indf2,c
  6798  00054E  D024               	goto	i2l2501
  6799                           
  6800                           ; BSR set to: 0
  6801  000550  0100               	movlb	0	; () banked
  6802  000552  0100               	movlb	0	; () banked
  6803  000554  6783               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6804  000556  D020               	goto	i2l2501
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;my_i2c.c: 298: ic_ptr->status = 0x5;
  6808  000558  0100               	movlb	0	; () banked
  6809  00055A  EE20 F018          	lfsr	2,24
  6810  00055E  0100               	movlb	0	; () banked
  6811  000560  51B2               	movf	_ic_ptr& (0+255),w,b
  6812  000562  26D9               	addwf	fsr2l,f,c
  6813  000564  0100               	movlb	0	; () banked
  6814  000566  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6815  000568  22DA               	addwfc	fsr2h,f,c
  6816  00056A  0E05               	movlw	5
  6817  00056C  6EDF               	movwf	indf2,c
  6818                           
  6819                           ;my_i2c.c: 299: ic_ptr->error_count++;
  6820  00056E  0100               	movlb	0	; () banked
  6821  000570  EE20 F01A          	lfsr	2,26
  6822  000574  0100               	movlb	0	; () banked
  6823  000576  51B2               	movf	_ic_ptr& (0+255),w,b
  6824  000578  26D9               	addwf	fsr2l,f,c
  6825  00057A  0100               	movlb	0	; () banked
  6826  00057C  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6827  00057E  22DA               	addwfc	fsr2h,f,c
  6828  000580  2ADF               	incf	indf2,f,c
  6829                           
  6830                           ;my_i2c.c: 300: ic_ptr->error_code = 0x7;
  6831  000582  0100               	movlb	0	; () banked
  6832  000584  EE20 F019          	lfsr	2,25
  6833  000588  0100               	movlb	0	; () banked
  6834  00058A  51B2               	movf	_ic_ptr& (0+255),w,b
  6835  00058C  26D9               	addwf	fsr2l,f,c
  6836  00058E  0100               	movlb	0	; () banked
  6837  000590  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6838  000592  22DA               	addwfc	fsr2h,f,c
  6839  000594  0E07               	movlw	7
  6840  000596  6EDF               	movwf	indf2,c
  6841  000598                     i2l2501:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;my_i2c.c: 301: }
  6845                           ;my_i2c.c: 303: if (msg_ready) {
  6846  000598  0100               	movlb	0	; () banked
  6847  00059A  0100               	movlb	0	; () banked
  6848  00059C  5183               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6849  00059E  B4D8               	btfsc	status,2,c
  6850  0005A0  D048               	goto	i2l2509
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;my_i2c.c: 304: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6854  0005A2  0100               	movlb	0	; () banked
  6855  0005A4  EE20 F017          	lfsr	2,23
  6856  0005A8  0100               	movlb	0	; () banked
  6857  0005AA  51B2               	movf	_ic_ptr& (0+255),w,b
  6858  0005AC  26D9               	addwf	fsr2l,f,c
  6859  0005AE  0100               	movlb	0	; () banked
  6860  0005B0  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6861  0005B2  22DA               	addwfc	fsr2h,f,c
  6862  0005B4  0100               	movlb	0	; () banked
  6863  0005B6  EE10 F016          	lfsr	1,22
  6864  0005BA  0100               	movlb	0	; () banked
  6865  0005BC  51B2               	movf	_ic_ptr& (0+255),w,b
  6866  0005BE  26E1               	addwf	fsr1l,f,c
  6867  0005C0  0100               	movlb	0	; () banked
  6868  0005C2  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6869  0005C4  22E2               	addwfc	fsr1h,f,c
  6870  0005C6  50E7               	movf	indf1,w,c
  6871  0005C8  0100               	movlb	0	; () banked
  6872  0005CA  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6873  0005CC  0100               	movlb	0	; () banked
  6874  0005CE  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6875  0005D0  0D01               	mullw	1
  6876  0005D2  50F3               	movf	prodl,w,c
  6877  0005D4  0100               	movlb	0	; () banked
  6878  0005D6  0100               	movlb	0	; () banked
  6879  0005D8  25B2               	addwf	_ic_ptr& (0+255),w,b
  6880  0005DA  6EE1               	movwf	fsr1l,c
  6881  0005DC  50F4               	movf	prodh,w,c
  6882  0005DE  0100               	movlb	0	; () banked
  6883  0005E0  0100               	movlb	0	; () banked
  6884  0005E2  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6885  0005E4  6EE2               	movwf	fsr1h,c
  6886  0005E6  CFDF FFE7          	movff	indf2,indf1
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;my_i2c.c: 305: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6890  0005EA  0100               	movlb	0	; () banked
  6891  0005EC  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6892  0005EE  0E28               	movlw	40
  6893  0005F0  0100               	movlb	0	; () banked
  6894  0005F2  0100               	movlb	0	; () banked
  6895  0005F4  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6896  0005F6  0100               	movlb	0	; () banked
  6897  0005F8  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6898  0005FA  0100               	movlb	0	; () banked
  6899  0005FC  0100               	movlb	0	; () banked
  6900  0005FE  C0B3  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6901  000602  0100               	movlb	0	; () banked
  6902  000604  0100               	movlb	0	; () banked
  6903  000606  C0B2  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6904  00060A  0100               	movlb	0	; () banked
  6905  00060C  EE20 F016          	lfsr	2,22
  6906  000610  0100               	movlb	0	; () banked
  6907  000612  51B2               	movf	_ic_ptr& (0+255),w,b
  6908  000614  26D9               	addwf	fsr2l,f,c
  6909  000616  0100               	movlb	0	; () banked
  6910  000618  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6911  00061A  22DA               	addwfc	fsr2h,f,c
  6912  00061C  50DF               	movf	indf2,w,c
  6913  00061E  0100               	movlb	0	; () banked
  6914  000620  6F7B               	movwf	(??_i2c_int_handler+1)& (0+255),b
  6915  000622  0100               	movlb	0	; () banked
  6916  000624  297B               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  6917  000626  EC7D  F00D         	call	_ToMainHigh_sendmsg
  6918                           
  6919                           ;my_i2c.c: 306: ic_ptr->buflen = 0;
  6920  00062A  0100               	movlb	0	; () banked
  6921  00062C  EE20 F016          	lfsr	2,22
  6922  000630  D04B               	goto	L7
  6923  000632                     i2l2509:
  6924                           
  6925                           ; BSR set to: 0
  6926  000632  0100               	movlb	0	; () banked
  6927  000634  EE20 F01A          	lfsr	2,26
  6928  000638  0100               	movlb	0	; () banked
  6929  00063A  51B2               	movf	_ic_ptr& (0+255),w,b
  6930  00063C  26D9               	addwf	fsr2l,f,c
  6931  00063E  0100               	movlb	0	; () banked
  6932  000640  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6933  000642  22DA               	addwfc	fsr2h,f,c
  6934  000644  50DF               	movf	indf2,w,c
  6935  000646  B4D8               	btfsc	status,2,c
  6936  000648  D047               	goto	i2l2517
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;my_i2c.c: 308: error_buf[0] = ic_ptr->error_count;
  6940  00064A  0100               	movlb	0	; () banked
  6941  00064C  EE20 F01A          	lfsr	2,26
  6942  000650  0100               	movlb	0	; () banked
  6943  000652  51B2               	movf	_ic_ptr& (0+255),w,b
  6944  000654  26D9               	addwf	fsr2l,f,c
  6945  000656  0100               	movlb	0	; () banked
  6946  000658  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6947  00065A  22DA               	addwfc	fsr2h,f,c
  6948  00065C  50DF               	movf	indf2,w,c
  6949  00065E  0100               	movlb	0	; () banked
  6950  000660  0100               	movlb	0	; () banked
  6951  000662  6F7C               	movwf	i2c_int_handler@error_buf& (0+255),b
  6952                           
  6953                           ;my_i2c.c: 309: error_buf[1] = ic_ptr->error_code;
  6954  000664  0100               	movlb	0	; () banked
  6955  000666  EE20 F019          	lfsr	2,25
  6956  00066A  0100               	movlb	0	; () banked
  6957  00066C  51B2               	movf	_ic_ptr& (0+255),w,b
  6958  00066E  26D9               	addwf	fsr2l,f,c
  6959  000670  0100               	movlb	0	; () banked
  6960  000672  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6961  000674  22DA               	addwfc	fsr2h,f,c
  6962  000676  50DF               	movf	indf2,w,c
  6963  000678  0100               	movlb	0	; () banked
  6964  00067A  0100               	movlb	0	; () banked
  6965  00067C  6F7D               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6966                           
  6967                           ;my_i2c.c: 310: error_buf[2] = ic_ptr->event_count;
  6968  00067E  0100               	movlb	0	; () banked
  6969  000680  EE20 F017          	lfsr	2,23
  6970  000684  0100               	movlb	0	; () banked
  6971  000686  51B2               	movf	_ic_ptr& (0+255),w,b
  6972  000688  26D9               	addwf	fsr2l,f,c
  6973  00068A  0100               	movlb	0	; () banked
  6974  00068C  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  6975  00068E  22DA               	addwfc	fsr2h,f,c
  6976  000690  50DF               	movf	indf2,w,c
  6977  000692  0100               	movlb	0	; () banked
  6978  000694  0100               	movlb	0	; () banked
  6979  000696  6F7E               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 311: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6983  000698  0100               	movlb	0	; () banked
  6984  00069A  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  6985  00069C  0E29               	movlw	41
  6986  00069E  0100               	movlb	0	; () banked
  6987  0006A0  0100               	movlb	0	; () banked
  6988  0006A2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6989  0006A4  0100               	movlb	0	; () banked
  6990  0006A6  517A               	movf	??_i2c_int_handler& (0+255),w,b
  6991  0006A8  0100               	movlb	0	; () banked
  6992  0006AA  0E00               	movlw	high i2c_int_handler@error_buf
  6993  0006AC  0100               	movlb	0	; () banked
  6994  0006AE  0100               	movlb	0	; () banked
  6995  0006B0  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6996  0006B2  0100               	movlb	0	; () banked
  6997  0006B4  0E7C               	movlw	low i2c_int_handler@error_buf
  6998  0006B6  0100               	movlb	0	; () banked
  6999  0006B8  0100               	movlb	0	; () banked
  7000  0006BA  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7001  0006BC  0E03               	movlw	3
  7002  0006BE  EC7D  F00D         	call	_ToMainHigh_sendmsg
  7003                           
  7004                           ;my_i2c.c: 312: ic_ptr->error_count = 0;
  7005  0006C2  0100               	movlb	0	; () banked
  7006  0006C4  EE20 F01A          	lfsr	2,26
  7007  0006C8                     L7:
  7008  0006C8  0100               	movlb	0	; () banked
  7009  0006CA  51B2               	movf	_ic_ptr& (0+255),w,b
  7010  0006CC  26D9               	addwf	fsr2l,f,c
  7011  0006CE  0100               	movlb	0	; () banked
  7012  0006D0  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7013  0006D2  22DA               	addwfc	fsr2h,f,c
  7014  0006D4  0E00               	movlw	0
  7015  0006D6  6EDF               	movwf	indf2,c
  7016  0006D8                     i2l2517:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 313: }
  7020                           ;my_i2c.c: 314: if (msg_to_send) {
  7021  0006D8  0100               	movlb	0	; () banked
  7022  0006DA  0100               	movlb	0	; () banked
  7023  0006DC  5182               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7024  0006DE  B4D8               	btfsc	status,2,c
  7025  0006E0  0012               	return	
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;my_i2c.c: 317: start_i2c_slave_reply(22, 0);
  7029  0006E2  0E00               	movlw	0
  7030  0006E4  0100               	movlb	0	; () banked
  7031  0006E6  0100               	movlb	0	; () banked
  7032  0006E8  6F61               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7033  0006EA  0E00               	movlw	0
  7034  0006EC  0100               	movlb	0	; () banked
  7035  0006EE  0100               	movlb	0	; () banked
  7036  0006F0  6F60               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7037  0006F2  0E16               	movlw	22
  7038  0006F4  EC6F  F004         	call	_start_i2c_slave_reply
  7039                           
  7040                           ;my_i2c.c: 318: msg_to_send = 0;
  7041  0006F8  0100               	movlb	0	; () banked
  7042  0006FA  6F7A               	movwf	??_i2c_int_handler& (0+255),b
  7043  0006FC  0E00               	movlw	0
  7044  0006FE  0100               	movlb	0	; () banked
  7045  000700  0100               	movlb	0	; () banked
  7046  000702  6F82               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7047  000704  0100               	movlb	0	; () banked
  7048  000706  517A               	movf	??_i2c_int_handler& (0+255),w,b
  7049  000708  0012               	return	
  7050  00070A                     __end_of_i2c_int_handler:
  7051                           	opt stack 0
  7052                           pclatu	equ	0xFFB
  7053                           pclath	equ	0xFFA
  7054                           tblptru	equ	0xFF8
  7055                           tblptrh	equ	0xFF7
  7056                           tblptrl	equ	0xFF6
  7057                           tablat	equ	0xFF5
  7058                           prodh	equ	0xFF4
  7059                           prodl	equ	0xFF3
  7060                           intcon	equ	0xFF2
  7061                           postinc0	equ	0xFEE
  7062                           fsr0h	equ	0xFEA
  7063                           fsr0l	equ	0xFE9
  7064                           wreg	equ	0xFE8
  7065                           indf1	equ	0xFE7
  7066                           fsr1h	equ	0xFE2
  7067                           fsr1l	equ	0xFE1
  7068                           bsr	equ	0xFE0
  7069                           indf2	equ	0xFDF
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function i2_flipDBG *****************
  7075 ;; Defined at:
  7076 ;;		line 47 in file "../src/debug.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  b               1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  b               1    1[BANK0 ] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;		None               void
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7094 ;;Total ram usage:        2 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_i2c_int_handler
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text42
  7104  00105E                     __ptext42:
  7105                           	opt stack 0
  7106  00105E                     i2_flipDBG:
  7107                           	opt stack 18
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;incstack = 0
  7111                           ;i2flipDBG@b stored from wreg
  7112  00105E  CFE8 F061          	movff	wreg,i2flipDBG@b
  7113                           
  7114                           ;debug.c: 48: switch(b) {
  7115  001062  D051               	goto	i2l3093
  7116  001064                     i2l3081:
  7117                           
  7118                           ;debug.c: 50: LATBbits.LATB0 = !LATBbits.LATB0;
  7119  001064  B08A               	btfsc	3978,0,c	;volatile
  7120  001066  D002               	goto	i2u222_40
  7121  001068  0E01               	movlw	1
  7122  00106A  D001               	goto	i2u222_46
  7123  00106C                     i2u222_40:
  7124  00106C  0E00               	movlw	0
  7125  00106E                     i2u222_46:
  7126  00106E  0100               	movlb	0	; () banked
  7127  001070  6F60               	movwf	??i2_flipDBG& (0+255),b
  7128  001072  508A               	movf	3978,w,c	;volatile
  7129  001074  0100               	movlb	0	; () banked
  7130  001076  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7131  001078  0BFE               	andlw	-2
  7132  00107A  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7133  00107C  6E8A               	movwf	3978,c	;volatile
  7134                           
  7135                           ;debug.c: 51: break;
  7136  00107E  0012               	return	
  7137  001080                     i2l3083:
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;debug.c: 53: LATBbits.LATB1 = !LATBbits.LATB1;
  7141  001080  B28A               	btfsc	3978,1,c	;volatile
  7142  001082  D002               	goto	i2u223_40
  7143  001084  0E01               	movlw	1
  7144  001086  D001               	goto	i2u223_46
  7145  001088                     i2u223_40:
  7146  001088  0E00               	movlw	0
  7147  00108A                     i2u223_46:
  7148  00108A  0100               	movlb	0	; () banked
  7149  00108C  6F60               	movwf	??i2_flipDBG& (0+255),b
  7150  00108E  0100               	movlb	0	; () banked
  7151  001090  4760               	rlncf	??i2_flipDBG& (0+255),f,b
  7152  001092  508A               	movf	3978,w,c	;volatile
  7153  001094  0100               	movlb	0	; () banked
  7154  001096  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7155  001098  0BFD               	andlw	-3
  7156  00109A  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7157  00109C  6E8A               	movwf	3978,c	;volatile
  7158                           
  7159                           ;debug.c: 54: break;
  7160  00109E  0012               	return	
  7161  0010A0                     i2l3085:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;debug.c: 56: LATBbits.LATB2 = !LATBbits.LATB2;
  7165  0010A0  B48A               	btfsc	3978,2,c	;volatile
  7166  0010A2  D002               	goto	i2u224_40
  7167  0010A4  0E01               	movlw	1
  7168  0010A6  D001               	goto	i2u224_46
  7169  0010A8                     i2u224_40:
  7170  0010A8  0E00               	movlw	0
  7171  0010AA                     i2u224_46:
  7172  0010AA  0100               	movlb	0	; () banked
  7173  0010AC  6F60               	movwf	??i2_flipDBG& (0+255),b
  7174  0010AE  0100               	movlb	0	; () banked
  7175  0010B0  4760               	rlncf	??i2_flipDBG& (0+255),f,b
  7176  0010B2  4760               	rlncf	??i2_flipDBG& (0+255),f,b
  7177  0010B4  508A               	movf	3978,w,c	;volatile
  7178  0010B6  0100               	movlb	0	; () banked
  7179  0010B8  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7180  0010BA  0BFB               	andlw	-5
  7181  0010BC  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7182  0010BE  6E8A               	movwf	3978,c	;volatile
  7183                           
  7184                           ;debug.c: 57: break;
  7185  0010C0  0012               	return	
  7186  0010C2                     i2l3087:
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;debug.c: 59: LATBbits.LATB3 = !LATBbits.LATB3;
  7190  0010C2  B68A               	btfsc	3978,3,c	;volatile
  7191  0010C4  D002               	goto	i2u225_40
  7192  0010C6  0E01               	movlw	1
  7193  0010C8  D001               	goto	i2u225_46
  7194  0010CA                     i2u225_40:
  7195  0010CA  0E00               	movlw	0
  7196  0010CC                     i2u225_46:
  7197  0010CC  0100               	movlb	0	; () banked
  7198  0010CE  6F60               	movwf	??i2_flipDBG& (0+255),b
  7199  0010D0  0100               	movlb	0	; () banked
  7200  0010D2  4760               	rlncf	??i2_flipDBG& (0+255),f,b
  7201  0010D4  4760               	rlncf	??i2_flipDBG& (0+255),f,b
  7202  0010D6  4760               	rlncf	??i2_flipDBG& (0+255),f,b
  7203  0010D8  508A               	movf	3978,w,c	;volatile
  7204  0010DA  0100               	movlb	0	; () banked
  7205  0010DC  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7206  0010DE  0BF7               	andlw	-9
  7207  0010E0  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7208  0010E2  6E8A               	movwf	3978,c	;volatile
  7209                           
  7210                           ;debug.c: 60: break;
  7211  0010E4  0012               	return	
  7212  0010E6                     i2l3089:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;debug.c: 62: LATBbits.LATB4 = !LATBbits.LATB4;
  7216  0010E6  B88A               	btfsc	3978,4,c	;volatile
  7217  0010E8  D002               	goto	i2u226_40
  7218  0010EA  0E01               	movlw	1
  7219  0010EC  D001               	goto	i2u226_46
  7220  0010EE                     i2u226_40:
  7221  0010EE  0E00               	movlw	0
  7222  0010F0                     i2u226_46:
  7223  0010F0  0100               	movlb	0	; () banked
  7224  0010F2  6F60               	movwf	??i2_flipDBG& (0+255),b
  7225  0010F4  0100               	movlb	0	; () banked
  7226  0010F6  3B60               	swapf	??i2_flipDBG& (0+255),f,b
  7227  0010F8  508A               	movf	3978,w,c	;volatile
  7228  0010FA  0100               	movlb	0	; () banked
  7229  0010FC  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7230  0010FE  0BEF               	andlw	-17
  7231  001100  1960               	xorwf	??i2_flipDBG& (0+255),w,b
  7232  001102  6E8A               	movwf	3978,c	;volatile
  7233                           
  7234                           ;debug.c: 63: break;
  7235  001104  0012               	return	
  7236  001106                     i2l3093:
  7237  001106  0100               	movlb	0	; () banked
  7238  001108  0100               	movlb	0	; () banked
  7239  00110A  5161               	movf	i2flipDBG@b& (0+255),w,b
  7240                           
  7241                           ; Switch size 1, requested type "space"
  7242                           ; Number of cases is 5, Range of values is 0 to 4
  7243                           ; switch strategies available:
  7244                           ; Name         Instructions Cycles
  7245                           ; simple_byte           16     9 (average)
  7246                           ;	Chosen strategy is simple_byte
  7247  00110C  0A00               	xorlw	0	; case 0
  7248  00110E  B4D8               	btfsc	status,2,c
  7249  001110  D7A9               	goto	i2l3081
  7250  001112  0A01               	xorlw	1	; case 1
  7251  001114  B4D8               	btfsc	status,2,c
  7252  001116  D7B4               	goto	i2l3083
  7253  001118  0A03               	xorlw	3	; case 2
  7254  00111A  B4D8               	btfsc	status,2,c
  7255  00111C  D7C1               	goto	i2l3085
  7256  00111E  0A01               	xorlw	1	; case 3
  7257  001120  B4D8               	btfsc	status,2,c
  7258  001122  D7CF               	goto	i2l3087
  7259  001124  0A07               	xorlw	7	; case 4
  7260  001126  A4D8               	btfss	status,2,c
  7261  001128  0012               	return	
  7262  00112A  D7DD               	goto	i2l3089
  7263  00112C                     __end_ofi2_flipDBG:
  7264                           	opt stack 0
  7265                           pclatu	equ	0xFFB
  7266                           pclath	equ	0xFFA
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           prodh	equ	0xFF4
  7272                           prodl	equ	0xFF3
  7273                           intcon	equ	0xFF2
  7274                           postinc0	equ	0xFEE
  7275                           fsr0h	equ	0xFEA
  7276                           fsr0l	equ	0xFE9
  7277                           wreg	equ	0xFE8
  7278                           indf1	equ	0xFE7
  7279                           fsr1h	equ	0xFE2
  7280                           fsr1l	equ	0xFE1
  7281                           bsr	equ	0xFE0
  7282                           indf2	equ	0xFDF
  7283                           fsr2h	equ	0xFDA
  7284                           fsr2l	equ	0xFD9
  7285                           status	equ	0xFD8
  7286                           
  7287 ;; *************** function _start_i2c_slave_reply *****************
  7288 ;; Defined at:
  7289 ;;		line 82 in file "../src/my_i2c.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  length          1    wreg     unsigned char 
  7292 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  7293 ;;		 -> NULL(0), 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  length          1    4[BANK0 ] unsigned char 
  7296 ;;  i               1    5[BANK0 ] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;		None               void
  7299 ;; Registers used:
  7300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7308 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;Total ram usage:        6 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_i2c_int_handler
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           	psect	text43
  7320  0008DE                     __ptext43:
  7321                           	opt stack 0
  7322  0008DE                     _start_i2c_slave_reply:
  7323                           	opt stack 18
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;incstack = 0
  7327                           ;start_i2c_slave_reply@length stored from wreg
  7328  0008DE  CFE8 F064          	movff	wreg,start_i2c_slave_reply@length
  7329                           
  7330                           ;my_i2c.c: 86: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7331  0008E2  0100               	movlb	0	; () banked
  7332  0008E4  EE20 F031          	lfsr	2,49
  7333  0008E8  0100               	movlb	0	; () banked
  7334  0008EA  51B2               	movf	_ic_ptr& (0+255),w,b
  7335  0008EC  26D9               	addwf	fsr2l,f,c
  7336  0008EE  0100               	movlb	0	; () banked
  7337  0008F0  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7338  0008F2  22DA               	addwfc	fsr2h,f,c
  7339  0008F4  0E00               	movlw	0
  7340  0008F6  6EDF               	movwf	indf2,c
  7341  0008F8  D046               	goto	i2l2911
  7342  0008FA                     i2l2907:
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;my_i2c.c: 88: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen];
  7346  0008FA  0100               	movlb	0	; () banked
  7347  0008FC  EE20 F031          	lfsr	2,49
  7348  000900  0100               	movlb	0	; () banked
  7349  000902  51B2               	movf	_ic_ptr& (0+255),w,b
  7350  000904  26D9               	addwf	fsr2l,f,c
  7351  000906  0100               	movlb	0	; () banked
  7352  000908  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7353  00090A  22DA               	addwfc	fsr2h,f,c
  7354  00090C  50DF               	movf	indf2,w,c
  7355  00090E  0100               	movlb	0	; () banked
  7356  000910  6F62               	movwf	??_start_i2c_slave_reply& (0+255),b
  7357  000912  0100               	movlb	0	; () banked
  7358  000914  5162               	movf	??_start_i2c_slave_reply& (0+255),w,b
  7359  000916  0D01               	mullw	1
  7360  000918  0E34               	movlw	52
  7361  00091A  26F3               	addwf	prodl,f,c
  7362  00091C  0E00               	movlw	0
  7363  00091E  22F4               	addwfc	prodh,f,c
  7364  000920  50F3               	movf	prodl,w,c
  7365  000922  0100               	movlb	0	; () banked
  7366  000924  0100               	movlb	0	; () banked
  7367  000926  25B2               	addwf	_ic_ptr& (0+255),w,b
  7368  000928  6ED9               	movwf	fsr2l,c
  7369  00092A  50F4               	movf	prodh,w,c
  7370  00092C  0100               	movlb	0	; () banked
  7371  00092E  0100               	movlb	0	; () banked
  7372  000930  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7373  000932  6EDA               	movwf	fsr2h,c
  7374  000934  0100               	movlb	0	; () banked
  7375  000936  EE10 F031          	lfsr	1,49
  7376  00093A  0100               	movlb	0	; () banked
  7377  00093C  51B2               	movf	_ic_ptr& (0+255),w,b
  7378  00093E  26E1               	addwf	fsr1l,f,c
  7379  000940  0100               	movlb	0	; () banked
  7380  000942  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7381  000944  22E2               	addwfc	fsr1h,f,c
  7382  000946  50E7               	movf	indf1,w,c
  7383  000948  0100               	movlb	0	; () banked
  7384  00094A  6F63               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  7385  00094C  0100               	movlb	0	; () banked
  7386  00094E  5163               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  7387  000950  0D01               	mullw	1
  7388  000952  0E1B               	movlw	27
  7389  000954  26F3               	addwf	prodl,f,c
  7390  000956  0E00               	movlw	0
  7391  000958  22F4               	addwfc	prodh,f,c
  7392  00095A  50F3               	movf	prodl,w,c
  7393  00095C  0100               	movlb	0	; () banked
  7394  00095E  0100               	movlb	0	; () banked
  7395  000960  25B2               	addwf	_ic_ptr& (0+255),w,b
  7396  000962  6EE1               	movwf	fsr1l,c
  7397  000964  50F4               	movf	prodh,w,c
  7398  000966  0100               	movlb	0	; () banked
  7399  000968  0100               	movlb	0	; () banked
  7400  00096A  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7401  00096C  6EE2               	movwf	fsr1h,c
  7402  00096E  CFDF FFE7          	movff	indf2,indf1
  7403                           
  7404                           ; BSR set to: 0
  7405  000972  0100               	movlb	0	; () banked
  7406  000974  EE20 F031          	lfsr	2,49
  7407  000978  0100               	movlb	0	; () banked
  7408  00097A  51B2               	movf	_ic_ptr& (0+255),w,b
  7409  00097C  26D9               	addwf	fsr2l,f,c
  7410  00097E  0100               	movlb	0	; () banked
  7411  000980  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7412  000982  22DA               	addwfc	fsr2h,f,c
  7413  000984  2ADF               	incf	indf2,f,c
  7414  000986                     i2l2911:
  7415                           
  7416                           ; BSR set to: 0
  7417  000986  0100               	movlb	0	; () banked
  7418  000988  EE20 F031          	lfsr	2,49
  7419  00098C  0100               	movlb	0	; () banked
  7420  00098E  51B2               	movf	_ic_ptr& (0+255),w,b
  7421  000990  26D9               	addwf	fsr2l,f,c
  7422  000992  0100               	movlb	0	; () banked
  7423  000994  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7424  000996  22DA               	addwfc	fsr2h,f,c
  7425  000998  50DF               	movf	indf2,w,c
  7426  00099A  0100               	movlb	0	; () banked
  7427  00099C  6F62               	movwf	??_start_i2c_slave_reply& (0+255),b
  7428  00099E  0100               	movlb	0	; () banked
  7429  0009A0  0100               	movlb	0	; () banked
  7430  0009A2  5164               	movf	start_i2c_slave_reply@length& (0+255),w,b
  7431  0009A4  0100               	movlb	0	; () banked
  7432  0009A6  5D62               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  7433  0009A8  A0D8               	btfss	status,0,c
  7434  0009AA  D7A7               	goto	i2l2907
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 103: }
  7438                           ;my_i2c.c: 104: ic_ptr->sendBufLen =0;
  7439                           
  7440                           ; BSR set to: 0
  7441  0009AC  0100               	movlb	0	; () banked
  7442  0009AE  EE20 F04A          	lfsr	2,74
  7443  0009B2  0100               	movlb	0	; () banked
  7444  0009B4  51B2               	movf	_ic_ptr& (0+255),w,b
  7445  0009B6  26D9               	addwf	fsr2l,f,c
  7446  0009B8  0100               	movlb	0	; () banked
  7447  0009BA  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7448  0009BC  22DA               	addwfc	fsr2h,f,c
  7449  0009BE  0E00               	movlw	0
  7450  0009C0  6EDF               	movwf	indf2,c
  7451                           
  7452                           ;my_i2c.c: 105: ic_ptr->outbuflen = length;
  7453  0009C2  0100               	movlb	0	; () banked
  7454  0009C4  EE20 F031          	lfsr	2,49
  7455  0009C8  0100               	movlb	0	; () banked
  7456  0009CA  51B2               	movf	_ic_ptr& (0+255),w,b
  7457  0009CC  26D9               	addwf	fsr2l,f,c
  7458  0009CE  0100               	movlb	0	; () banked
  7459  0009D0  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7460  0009D2  22DA               	addwfc	fsr2h,f,c
  7461  0009D4  0100               	movlb	0	; () banked
  7462  0009D6  C064  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7463                           
  7464                           ;my_i2c.c: 106: ic_ptr->outbufind = 1;
  7465  0009DA  0100               	movlb	0	; () banked
  7466  0009DC  EE20 F032          	lfsr	2,50
  7467  0009E0  0100               	movlb	0	; () banked
  7468  0009E2  51B2               	movf	_ic_ptr& (0+255),w,b
  7469  0009E4  26D9               	addwf	fsr2l,f,c
  7470  0009E6  0100               	movlb	0	; () banked
  7471  0009E8  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  0009EA  22DA               	addwfc	fsr2h,f,c
  7473  0009EC  0E01               	movlw	1
  7474  0009EE  6EDF               	movwf	indf2,c
  7475                           
  7476                           ;my_i2c.c: 109: SSPBUF = ic_ptr->outbuffer[0];
  7477  0009F0  0100               	movlb	0	; () banked
  7478  0009F2  EE20 F01B          	lfsr	2,27
  7479  0009F6  0100               	movlb	0	; () banked
  7480  0009F8  51B2               	movf	_ic_ptr& (0+255),w,b
  7481  0009FA  26D9               	addwf	fsr2l,f,c
  7482  0009FC  0100               	movlb	0	; () banked
  7483  0009FE  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7484  000A00  22DA               	addwfc	fsr2h,f,c
  7485  000A02  50DF               	movf	indf2,w,c
  7486  000A04  6EC9               	movwf	4041,c	;volatile
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;my_i2c.c: 112: SSPCON1bits.CKP = 1;
  7490  000A06  88C6               	bsf	4038,4,c	;volatile
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;my_i2c.c: 114: unsigned char i = 0;
  7494  000A08  0100               	movlb	0	; () banked
  7495  000A0A  6F62               	movwf	??_start_i2c_slave_reply& (0+255),b
  7496  000A0C  0E00               	movlw	0
  7497  000A0E  0100               	movlb	0	; () banked
  7498  000A10  0100               	movlb	0	; () banked
  7499  000A12  6F65               	movwf	start_i2c_slave_reply@i& (0+255),b
  7500  000A14  0100               	movlb	0	; () banked
  7501  000A16  5162               	movf	??_start_i2c_slave_reply& (0+255),w,b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;my_i2c.c: 115: for (i = 0; i < 22; i++)
  7505  000A18  0100               	movlb	0	; () banked
  7506  000A1A  6F62               	movwf	??_start_i2c_slave_reply& (0+255),b
  7507  000A1C  0E00               	movlw	0
  7508  000A1E  0100               	movlb	0	; () banked
  7509  000A20  0100               	movlb	0	; () banked
  7510  000A22  6F65               	movwf	start_i2c_slave_reply@i& (0+255),b
  7511  000A24  0100               	movlb	0	; () banked
  7512  000A26  5162               	movf	??_start_i2c_slave_reply& (0+255),w,b
  7513                           
  7514                           ; BSR set to: 0
  7515  000A28  0E15               	movlw	21
  7516  000A2A  0100               	movlb	0	; () banked
  7517  000A2C  0100               	movlb	0	; () banked
  7518  000A2E  6565               	cpfsgt	start_i2c_slave_reply@i& (0+255),b
  7519  000A30  D001               	goto	i2l2925
  7520  000A32  0012               	return	
  7521  000A34                     i2l2925:
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;my_i2c.c: 116: {
  7525                           ;my_i2c.c: 117: ic_ptr->sendBuf[i] = 0xFF;
  7526  000A34  0100               	movlb	0	; () banked
  7527  000A36  0100               	movlb	0	; () banked
  7528  000A38  5165               	movf	start_i2c_slave_reply@i& (0+255),w,b
  7529  000A3A  0D01               	mullw	1
  7530  000A3C  0E34               	movlw	52
  7531  000A3E  26F3               	addwf	prodl,f,c
  7532  000A40  0E00               	movlw	0
  7533  000A42  22F4               	addwfc	prodh,f,c
  7534  000A44  50F3               	movf	prodl,w,c
  7535  000A46  0100               	movlb	0	; () banked
  7536  000A48  0100               	movlb	0	; () banked
  7537  000A4A  25B2               	addwf	_ic_ptr& (0+255),w,b
  7538  000A4C  6ED9               	movwf	fsr2l,c
  7539  000A4E  50F4               	movf	prodh,w,c
  7540  000A50  0100               	movlb	0	; () banked
  7541  000A52  0100               	movlb	0	; () banked
  7542  000A54  21B3               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7543  000A56  6EDA               	movwf	fsr2h,c
  7544  000A58  0EFF               	movlw	255
  7545  000A5A  6EDF               	movwf	indf2,c
  7546                           
  7547                           ; BSR set to: 0
  7548  000A5C  0100               	movlb	0	; () banked
  7549  000A5E  0100               	movlb	0	; () banked
  7550  000A60  2B65               	incf	start_i2c_slave_reply@i& (0+255),f,b
  7551                           
  7552                           ; BSR set to: 0
  7553  000A62  0E15               	movlw	21
  7554  000A64  0100               	movlb	0	; () banked
  7555  000A66  0100               	movlb	0	; () banked
  7556  000A68  6565               	cpfsgt	start_i2c_slave_reply@i& (0+255),b
  7557  000A6A  D7E4               	goto	i2l2925
  7558  000A6C  0012               	return	
  7559  000A6E                     __end_of_start_i2c_slave_reply:
  7560                           	opt stack 0
  7561                           pclatu	equ	0xFFB
  7562                           pclath	equ	0xFFA
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           intcon	equ	0xFF2
  7570                           postinc0	equ	0xFEE
  7571                           fsr0h	equ	0xFEA
  7572                           fsr0l	equ	0xFE9
  7573                           wreg	equ	0xFE8
  7574                           indf1	equ	0xFE7
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           bsr	equ	0xFE0
  7578                           indf2	equ	0xFDF
  7579                           fsr2h	equ	0xFDA
  7580                           fsr2l	equ	0xFD9
  7581                           status	equ	0xFD8
  7582                           
  7583 ;; *************** function _handle_start *****************
  7584 ;; Defined at:
  7585 ;;		line 124 in file "../src/my_i2c.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  data_read       1    wreg     unsigned char 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  data_read       1    0[BANK0 ] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;		None               void
  7592 ;; Registers used:
  7593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7600 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;Total ram usage:        1 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_i2c_int_handler
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text44
  7613  00112C                     __ptext44:
  7614                           	opt stack 0
  7615  00112C                     _handle_start:
  7616                           	opt stack 18
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;incstack = 0
  7620                           ;handle_start@data_read stored from wreg
  7621  00112C  CFE8 F060          	movff	wreg,handle_start@data_read
  7622                           
  7623                           ;my_i2c.c: 125: ic_ptr->event_count = 1;
  7624  001130  0100               	movlb	0	; () banked
  7625  001132  EE20 F017          	lfsr	2,23
  7626  001136  0100               	movlb	0	; () banked
  7627  001138  51B2               	movf	_ic_ptr& (0+255),w,b
  7628  00113A  26D9               	addwf	fsr2l,f,c
  7629  00113C  0100               	movlb	0	; () banked
  7630  00113E  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7631  001140  22DA               	addwfc	fsr2h,f,c
  7632  001142  0E01               	movlw	1
  7633  001144  6EDF               	movwf	indf2,c
  7634                           
  7635                           ;my_i2c.c: 126: ic_ptr->buflen = 0;
  7636  001146  0100               	movlb	0	; () banked
  7637  001148  EE20 F016          	lfsr	2,22
  7638  00114C  0100               	movlb	0	; () banked
  7639  00114E  51B2               	movf	_ic_ptr& (0+255),w,b
  7640  001150  26D9               	addwf	fsr2l,f,c
  7641  001152  0100               	movlb	0	; () banked
  7642  001154  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7643  001156  22DA               	addwfc	fsr2h,f,c
  7644  001158  0E00               	movlw	0
  7645  00115A  6EDF               	movwf	indf2,c
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;my_i2c.c: 128: if (data_read) {
  7649  00115C  0100               	movlb	0	; () banked
  7650  00115E  0100               	movlb	0	; () banked
  7651  001160  5160               	movf	handle_start@data_read& (0+255),w,b
  7652  001162  B4D8               	btfsc	status,2,c
  7653  001164  D03D               	goto	i2l2943
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;my_i2c.c: 129: if (SSPSTATbits.D_A == 1) {
  7657  001166  AAC7               	btfss	4039,5,c	;volatile
  7658  001168  D021               	goto	i2l286
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;my_i2c.c: 132: ic_ptr->status = 0x5;
  7662  00116A  0100               	movlb	0	; () banked
  7663  00116C  EE20 F018          	lfsr	2,24
  7664  001170  0100               	movlb	0	; () banked
  7665  001172  51B2               	movf	_ic_ptr& (0+255),w,b
  7666  001174  26D9               	addwf	fsr2l,f,c
  7667  001176  0100               	movlb	0	; () banked
  7668  001178  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7669  00117A  22DA               	addwfc	fsr2h,f,c
  7670  00117C  0E05               	movlw	5
  7671  00117E  6EDF               	movwf	indf2,c
  7672                           
  7673                           ;my_i2c.c: 133: ic_ptr->error_count++;
  7674  001180  0100               	movlb	0	; () banked
  7675  001182  EE20 F01A          	lfsr	2,26
  7676  001186  0100               	movlb	0	; () banked
  7677  001188  51B2               	movf	_ic_ptr& (0+255),w,b
  7678  00118A  26D9               	addwf	fsr2l,f,c
  7679  00118C  0100               	movlb	0	; () banked
  7680  00118E  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7681  001190  22DA               	addwfc	fsr2h,f,c
  7682  001192  2ADF               	incf	indf2,f,c
  7683                           
  7684                           ;my_i2c.c: 134: ic_ptr->error_code = 0x5;
  7685  001194  0100               	movlb	0	; () banked
  7686  001196  EE20 F019          	lfsr	2,25
  7687  00119A  0100               	movlb	0	; () banked
  7688  00119C  51B2               	movf	_ic_ptr& (0+255),w,b
  7689  00119E  26D9               	addwf	fsr2l,f,c
  7690  0011A0  0100               	movlb	0	; () banked
  7691  0011A2  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7692  0011A4  22DA               	addwfc	fsr2h,f,c
  7693  0011A6  0E05               	movlw	5
  7694  0011A8  6EDF               	movwf	indf2,c
  7695                           
  7696                           ;my_i2c.c: 135: } else {
  7697  0011AA  0012               	return	
  7698  0011AC                     i2l286:
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;my_i2c.c: 136: if (SSPSTATbits.R_W == 1) {
  7702  0011AC  A4C7               	btfss	4039,2,c	;volatile
  7703  0011AE  D00C               	goto	i2l2941
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;my_i2c.c: 137: ic_ptr->status = 0x8;
  7707  0011B0  0100               	movlb	0	; () banked
  7708  0011B2  EE20 F018          	lfsr	2,24
  7709  0011B6  0100               	movlb	0	; () banked
  7710  0011B8  51B2               	movf	_ic_ptr& (0+255),w,b
  7711  0011BA  26D9               	addwf	fsr2l,f,c
  7712  0011BC  0100               	movlb	0	; () banked
  7713  0011BE  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7714  0011C0  22DA               	addwfc	fsr2h,f,c
  7715  0011C2  0E08               	movlw	8
  7716  0011C4  6EDF               	movwf	indf2,c
  7717                           
  7718                           ;my_i2c.c: 138: } else {
  7719  0011C6  0012               	return	
  7720  0011C8                     i2l2941:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;my_i2c.c: 139: ic_ptr->status = 0x7;
  7724  0011C8  0100               	movlb	0	; () banked
  7725  0011CA  EE20 F018          	lfsr	2,24
  7726  0011CE  0100               	movlb	0	; () banked
  7727  0011D0  51B2               	movf	_ic_ptr& (0+255),w,b
  7728  0011D2  26D9               	addwf	fsr2l,f,c
  7729  0011D4  0100               	movlb	0	; () banked
  7730  0011D6  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7731  0011D8  22DA               	addwfc	fsr2h,f,c
  7732  0011DA  0E07               	movlw	7
  7733  0011DC  6EDF               	movwf	indf2,c
  7734  0011DE  0012               	return	
  7735  0011E0                     i2l2943:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;my_i2c.c: 143: ic_ptr->status = 0x6;
  7739  0011E0  0100               	movlb	0	; () banked
  7740  0011E2  EE20 F018          	lfsr	2,24
  7741  0011E6  0100               	movlb	0	; () banked
  7742  0011E8  51B2               	movf	_ic_ptr& (0+255),w,b
  7743  0011EA  26D9               	addwf	fsr2l,f,c
  7744  0011EC  0100               	movlb	0	; () banked
  7745  0011EE  51B3               	movf	(_ic_ptr+1)& (0+255),w,b
  7746  0011F0  22DA               	addwfc	fsr2h,f,c
  7747  0011F2  0E06               	movlw	6
  7748  0011F4  6EDF               	movwf	indf2,c
  7749  0011F6  0012               	return	
  7750  0011F8                     __end_of_handle_start:
  7751                           	opt stack 0
  7752                           pclatu	equ	0xFFB
  7753                           pclath	equ	0xFFA
  7754                           tblptru	equ	0xFF8
  7755                           tblptrh	equ	0xFF7
  7756                           tblptrl	equ	0xFF6
  7757                           tablat	equ	0xFF5
  7758                           prodh	equ	0xFF4
  7759                           prodl	equ	0xFF3
  7760                           intcon	equ	0xFF2
  7761                           postinc0	equ	0xFEE
  7762                           fsr0h	equ	0xFEA
  7763                           fsr0l	equ	0xFE9
  7764                           wreg	equ	0xFE8
  7765                           indf1	equ	0xFE7
  7766                           fsr1h	equ	0xFE2
  7767                           fsr1l	equ	0xFE1
  7768                           bsr	equ	0xFE0
  7769                           indf2	equ	0xFDF
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function _ToMainHigh_sendmsg *****************
  7775 ;; Defined at:
  7776 ;;		line 126 in file "../src/messages.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  length          1    wreg     unsigned char 
  7779 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7780 ;;  data            2   23[BANK0 ] PTR void 
  7781 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(76), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  length          1   25[BANK0 ] unsigned char 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      char 
  7786 ;; Registers used:
  7787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7793 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7796 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7797 ;;Total ram usage:        4 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    2
  7800 ;; This function calls:
  7801 ;;		i2_send_msg
  7802 ;; This function is called by:
  7803 ;;		_i2c_int_handler
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text45
  7808  001AFA                     __ptext45:
  7809                           	opt stack 0
  7810  001AFA                     _ToMainHigh_sendmsg:
  7811                           	opt stack 16
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;incstack = 0
  7815                           ;ToMainHigh_sendmsg@length stored from wreg
  7816  001AFA  CFE8 F079          	movff	wreg,ToMainHigh_sendmsg@length
  7817                           
  7818                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7819                           ;	Return value of _ToMainHigh_sendmsg is never used
  7820  001AFE  0102               	movlb	2	; () banked
  7821  001B00  0E02               	movlw	high _ToMainHigh_MQ
  7822  001B02  0100               	movlb	0	; () banked
  7823  001B04  0100               	movlb	0	; () banked
  7824  001B06  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7825  001B08  0102               	movlb	2	; () banked
  7826  001B0A  0E66               	movlw	low _ToMainHigh_MQ
  7827  001B0C  0100               	movlb	0	; () banked
  7828  001B0E  0100               	movlb	0	; () banked
  7829  001B10  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  7830  001B12  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7831  001B16  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7832  001B1A  0100               	movlb	0	; () banked
  7833  001B1C  0100               	movlb	0	; () banked
  7834  001B1E  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7835  001B22  0100               	movlb	0	; () banked
  7836  001B24  0100               	movlb	0	; () banked
  7837  001B26  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7838  001B2A  EC74  F006         	call	i2_send_msg	;wreg free
  7839  001B2E  0012               	return	
  7840  001B30                     __end_of_ToMainHigh_sendmsg:
  7841                           	opt stack 0
  7842                           pclatu	equ	0xFFB
  7843                           pclath	equ	0xFFA
  7844                           tblptru	equ	0xFF8
  7845                           tblptrh	equ	0xFF7
  7846                           tblptrl	equ	0xFF6
  7847                           tablat	equ	0xFF5
  7848                           prodh	equ	0xFF4
  7849                           prodl	equ	0xFF3
  7850                           intcon	equ	0xFF2
  7851                           postinc0	equ	0xFEE
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           indf1	equ	0xFE7
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           bsr	equ	0xFE0
  7859                           indf2	equ	0xFDF
  7860                           fsr2h	equ	0xFDA
  7861                           fsr2l	equ	0xFD9
  7862                           status	equ	0xFD8
  7863                           
  7864 ;; *************** function i2_send_msg *****************
  7865 ;; Defined at:
  7866 ;;		line 24 in file "../src/messages.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7869 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  7870 ;;  length          1   12[BANK0 ] unsigned char 
  7871 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7872 ;;  data            2   14[BANK0 ] PTR void 
  7873 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(76), 
  7874 ;;		 -> main@uc(23), 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7877 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  7878 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  7879 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7880 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      char 
  7883 ;; Registers used:
  7884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7890 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7891 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7892 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7893 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7894 ;;Total ram usage:       12 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; Hardware stack levels required when called:    1
  7897 ;; This function calls:
  7898 ;;		i2_memcpy
  7899 ;; This function is called by:
  7900 ;;		_ToMainHigh_sendmsg
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           	psect	text46
  7905  000CE8                     __ptext46:
  7906                           	opt stack 0
  7907  000CE8                     i2_send_msg:
  7908                           	opt stack 16
  7909                           
  7910                           ;messages.c: 25: unsigned char slot;
  7911                           ;messages.c: 27: msg *qmsg;
  7912                           ;messages.c: 28: size_t tlength = length;
  7913                           
  7914                           ;incstack = 0
  7915  000CE8  0100               	movlb	0	; () banked
  7916  000CEA  0100               	movlb	0	; () banked
  7917  000CEC  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  7918  000CF0  0100               	movlb	0	; () banked
  7919  000CF2  0100               	movlb	0	; () banked
  7920  000CF4  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7924  000CF6  0100               	movlb	0	; () banked
  7925  000CF8  EE20 F064          	lfsr	2,100
  7926  000CFC  0100               	movlb	0	; () banked
  7927  000CFE  516A               	movf	i2send_msg@qptr& (0+255),w,b
  7928  000D00  26D9               	addwf	fsr2l,f,c
  7929  000D02  0100               	movlb	0	; () banked
  7930  000D04  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7931  000D06  22DA               	addwfc	fsr2h,f,c
  7932  000D08  50DF               	movf	indf2,w,c
  7933  000D0A  0100               	movlb	0	; () banked
  7934  000D0C  0100               	movlb	0	; () banked
  7935  000D0E  6F73               	movwf	i2send_msg@slot& (0+255),b
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7939  000D10  0100               	movlb	0	; () banked
  7940  000D12  0100               	movlb	0	; () banked
  7941  000D14  5173               	movf	i2send_msg@slot& (0+255),w,b
  7942  000D16  0D19               	mullw	25
  7943  000D18  50F3               	movf	prodl,w,c
  7944  000D1A  0100               	movlb	0	; () banked
  7945  000D1C  0100               	movlb	0	; () banked
  7946  000D1E  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  7947  000D20  0100               	movlb	0	; () banked
  7948  000D22  0100               	movlb	0	; () banked
  7949  000D24  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  7950  000D26  50F4               	movf	prodh,w,c
  7951  000D28  0100               	movlb	0	; () banked
  7952  000D2A  0100               	movlb	0	; () banked
  7953  000D2C  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7954  000D2E  0100               	movlb	0	; () banked
  7955  000D30  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;messages.c: 41: if (qmsg->full != 0) {
  7959  000D32  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7960  000D36  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7961  000D3A  50DF               	movf	indf2,w,c
  7962  000D3C  B4D8               	btfsc	status,2,c
  7963  000D3E  D002               	goto	i2l3047
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;messages.c: 42: return (-1);
  7967  000D40  0EFF               	movlw	255
  7968  000D42  0012               	return	
  7969  000D44                     i2l3047:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;messages.c: 43: }
  7973                           ;messages.c: 46: qmsg->length = length;
  7974  000D44  0100               	movlb	0	; () banked
  7975  000D46  EE20 F001          	lfsr	2,1
  7976  000D4A  0100               	movlb	0	; () banked
  7977  000D4C  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  7978  000D4E  26D9               	addwf	fsr2l,f,c
  7979  000D50  0100               	movlb	0	; () banked
  7980  000D52  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7981  000D54  22DA               	addwfc	fsr2h,f,c
  7982  000D56  0100               	movlb	0	; () banked
  7983  000D58  C06C  FFDF         	movff	i2send_msg@length,indf2
  7984                           
  7985                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7986  000D5C  0100               	movlb	0	; () banked
  7987  000D5E  EE20 F002          	lfsr	2,2
  7988  000D62  0100               	movlb	0	; () banked
  7989  000D64  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  7990  000D66  26D9               	addwf	fsr2l,f,c
  7991  000D68  0100               	movlb	0	; () banked
  7992  000D6A  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7993  000D6C  22DA               	addwfc	fsr2h,f,c
  7994  000D6E  0100               	movlb	0	; () banked
  7995  000D70  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7999  000D74  0E03               	movlw	3
  8000  000D76  0100               	movlb	0	; () banked
  8001  000D78  0100               	movlb	0	; () banked
  8002  000D7A  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8003  000D7C  0100               	movlb	0	; () banked
  8004  000D7E  0100               	movlb	0	; () banked
  8005  000D80  6F60               	movwf	i2memcpy@d1& (0+255),b
  8006  000D82  0E00               	movlw	0
  8007  000D84  0100               	movlb	0	; () banked
  8008  000D86  0100               	movlb	0	; () banked
  8009  000D88  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8010  000D8A  0100               	movlb	0	; () banked
  8011  000D8C  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8012  000D8E  0100               	movlb	0	; () banked
  8013  000D90  0100               	movlb	0	; () banked
  8014  000D92  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8015  000D96  0100               	movlb	0	; () banked
  8016  000D98  0100               	movlb	0	; () banked
  8017  000D9A  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8018  000D9E  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8019  000DA2  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8020  000DA6  ECF0  F00B         	call	i2_memcpy	;wreg free
  8021                           
  8022                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8023  000DAA  0100               	movlb	0	; () banked
  8024  000DAC  EE20 F064          	lfsr	2,100
  8025  000DB0  0100               	movlb	0	; () banked
  8026  000DB2  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8027  000DB4  26D9               	addwf	fsr2l,f,c
  8028  000DB6  0100               	movlb	0	; () banked
  8029  000DB8  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8030  000DBA  22DA               	addwfc	fsr2h,f,c
  8031  000DBC  0100               	movlb	0	; () banked
  8032  000DBE  EE10 F064          	lfsr	1,100
  8033  000DC2  0100               	movlb	0	; () banked
  8034  000DC4  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8035  000DC6  26E1               	addwf	fsr1l,f,c
  8036  000DC8  0100               	movlb	0	; () banked
  8037  000DCA  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8038  000DCC  22E2               	addwfc	fsr1h,f,c
  8039  000DCE  50E7               	movf	indf1,w,c
  8040  000DD0  0100               	movlb	0	; () banked
  8041  000DD2  6F70               	movwf	??i2_send_msg& (0+255),b
  8042  000DD4  0100               	movlb	0	; () banked
  8043  000DD6  2970               	incf	??i2_send_msg& (0+255),w,b
  8044  000DD8  0B03               	andlw	3
  8045  000DDA  6EDF               	movwf	indf2,c
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;messages.c: 59: qmsg->full = 1;
  8049  000DDC  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8050  000DE0  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8051  000DE4  0E01               	movlw	1
  8052  000DE6  6EDF               	movwf	indf2,c
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;messages.c: 60: return (1);
  8056  000DE8  0E01               	movlw	1
  8057  000DEA  0012               	return	
  8058  000DEC                     __end_ofi2_send_msg:
  8059                           	opt stack 0
  8060                           pclatu	equ	0xFFB
  8061                           pclath	equ	0xFFA
  8062                           tblptru	equ	0xFF8
  8063                           tblptrh	equ	0xFF7
  8064                           tblptrl	equ	0xFF6
  8065                           tablat	equ	0xFF5
  8066                           prodh	equ	0xFF4
  8067                           prodl	equ	0xFF3
  8068                           intcon	equ	0xFF2
  8069                           postinc0	equ	0xFEE
  8070                           fsr0h	equ	0xFEA
  8071                           fsr0l	equ	0xFE9
  8072                           wreg	equ	0xFE8
  8073                           indf1	equ	0xFE7
  8074                           fsr1h	equ	0xFE2
  8075                           fsr1l	equ	0xFE1
  8076                           bsr	equ	0xFE0
  8077                           indf2	equ	0xFDF
  8078                           fsr2h	equ	0xFDA
  8079                           fsr2l	equ	0xFD9
  8080                           status	equ	0xFD8
  8081                           
  8082 ;; *************** function i2_memcpy *****************
  8083 ;; Defined at:
  8084 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  d1              2    0[BANK0 ] PTR void 
  8087 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  8088 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  8089 ;;		 -> main@msgbuffer(23), 
  8090 ;;  s1              2    2[BANK0 ] PTR const void 
  8091 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  8092 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  8093 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  8094 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(76), 
  8095 ;;		 -> main@uc(23), 
  8096 ;;  n               2    4[BANK0 ] unsigned int 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8099 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  8100 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  8101 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  8102 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(76), 
  8103 ;;		 -> main@uc(23), 
  8104 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8105 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  8106 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  8107 ;;		 -> main@msgbuffer(23), 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  2    0[BANK0 ] PTR void 
  8110 ;; Registers used:
  8111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8117 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8118 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8120 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8121 ;;Total ram usage:       10 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		i2_send_msg
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text47
  8131  0017E0                     __ptext47:
  8132                           	opt stack 0
  8133  0017E0                     i2_memcpy:
  8134                           	opt stack 16
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;incstack = 0
  8138  0017E0  0100               	movlb	0	; () banked
  8139  0017E2  0100               	movlb	0	; () banked
  8140  0017E4  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8141  0017E8  0100               	movlb	0	; () banked
  8142  0017EA  0100               	movlb	0	; () banked
  8143  0017EC  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8144  0017F0  0100               	movlb	0	; () banked
  8145  0017F2  0100               	movlb	0	; () banked
  8146  0017F4  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8147  0017F8  0100               	movlb	0	; () banked
  8148  0017FA  0100               	movlb	0	; () banked
  8149  0017FC  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8150  001800  D012               	goto	i2l3115
  8151  001802                     i2l3109:
  8152                           
  8153                           ; BSR set to: 0
  8154  001802  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8155  001806  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8156  00180A  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8157  00180E  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8158  001812  CFDF FFE7          	movff	indf2,indf1
  8159                           
  8160                           ; BSR set to: 0
  8161  001816  0100               	movlb	0	; () banked
  8162  001818  0100               	movlb	0	; () banked
  8163  00181A  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8164  00181C  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8165                           
  8166                           ; BSR set to: 0
  8167  00181E  0100               	movlb	0	; () banked
  8168  001820  0100               	movlb	0	; () banked
  8169  001822  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8170  001824  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8171  001826                     i2l3115:
  8172                           
  8173                           ; BSR set to: 0
  8174  001826  0100               	movlb	0	; () banked
  8175  001828  0100               	movlb	0	; () banked
  8176  00182A  0764               	decf	i2memcpy@n& (0+255),f,b
  8177  00182C  A0D8               	btfss	status,0,c
  8178  00182E  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8179  001830  0100               	movlb	0	; () banked
  8180  001832  2964               	incf	i2memcpy@n& (0+255),w,b
  8181  001834  B4D8               	btfsc	status,2,c
  8182  001836  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8183  001838  B4D8               	btfsc	status,2,c
  8184                           
  8185                           ; BSR set to: 0
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;	Return value of i2_memcpy is never used
  8189  00183A  0012               	return	
  8190  00183C  D7E2               	goto	i2l3109
  8191  00183E                     __end_ofi2_memcpy:
  8192                           	opt stack 0
  8193                           pclatu	equ	0xFFB
  8194                           pclath	equ	0xFFA
  8195                           tblptru	equ	0xFF8
  8196                           tblptrh	equ	0xFF7
  8197                           tblptrl	equ	0xFF6
  8198                           tablat	equ	0xFF5
  8199                           prodh	equ	0xFF4
  8200                           prodl	equ	0xFF3
  8201                           intcon	equ	0xFF2
  8202                           postinc0	equ	0xFEE
  8203                           fsr0h	equ	0xFEA
  8204                           fsr0l	equ	0xFE9
  8205                           wreg	equ	0xFE8
  8206                           indf1	equ	0xFE7
  8207                           fsr1h	equ	0xFE2
  8208                           fsr1l	equ	0xFE1
  8209                           bsr	equ	0xFE0
  8210                           indf2	equ	0xFDF
  8211                           fsr2h	equ	0xFDA
  8212                           fsr2l	equ	0xFD9
  8213                           status	equ	0xFD8
  8214                           
  8215 ;; *************** function _adc_int_handler *****************
  8216 ;; Defined at:
  8217 ;;		line 56 in file "../src/user_interrupts.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;  result          2    4[BANK0 ] unsigned int 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;		None               void
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8234 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8235 ;;Total ram usage:        4 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    1
  8238 ;; This function calls:
  8239 ;;		_ReadADC
  8240 ;; This function is called by:
  8241 ;;		_InterruptHandlerHigh
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text48
  8246  001B30                     __ptext48:
  8247                           	opt stack 0
  8248  001B30                     _adc_int_handler:
  8249                           	opt stack 18
  8250                           
  8251                           ;user_interrupts.c: 58: unsigned int result;
  8252                           ;user_interrupts.c: 59: result = ReadADC();
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;incstack = 0
  8256  001B30  EC8E  F00E         	call	_ReadADC	;wreg free
  8257  001B34  0100               	movlb	0	; () banked
  8258  001B36  C060  F064         	movff	?_ReadADC,adc_int_handler@result
  8259  001B3A  0100               	movlb	0	; () banked
  8260  001B3C  C061  F065         	movff	?_ReadADC+1,adc_int_handler@result+1
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;user_interrupts.c: 60: result = result /4;
  8264  001B40  0100               	movlb	0	; () banked
  8265  001B42  C064  F062         	movff	adc_int_handler@result,??_adc_int_handler
  8266  001B46  0100               	movlb	0	; () banked
  8267  001B48  C065  F063         	movff	adc_int_handler@result+1,??_adc_int_handler+1
  8268  001B4C  0100               	movlb	0	; () banked
  8269  001B4E  90D8               	bcf	status,0,c
  8270  001B50  3363               	rrcf	(??_adc_int_handler+1)& (0+255),f,b
  8271  001B52  3362               	rrcf	??_adc_int_handler& (0+255),f,b
  8272  001B54  0100               	movlb	0	; () banked
  8273  001B56  90D8               	bcf	status,0,c
  8274  001B58  3363               	rrcf	(??_adc_int_handler+1)& (0+255),f,b
  8275  001B5A  3362               	rrcf	??_adc_int_handler& (0+255),f,b
  8276  001B5C  C062  F064         	movff	??_adc_int_handler,adc_int_handler@result
  8277  001B60  C063  F065         	movff	??_adc_int_handler+1,adc_int_handler@result+1
  8278                           
  8279                           ; BSR set to: 0
  8280  001B64  0012               	return	
  8281  001B66                     __end_of_adc_int_handler:
  8282                           	opt stack 0
  8283                           pclatu	equ	0xFFB
  8284                           pclath	equ	0xFFA
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           postinc0	equ	0xFEE
  8293                           fsr0h	equ	0xFEA
  8294                           fsr0l	equ	0xFE9
  8295                           wreg	equ	0xFE8
  8296                           indf1	equ	0xFE7
  8297                           fsr1h	equ	0xFE2
  8298                           fsr1l	equ	0xFE1
  8299                           bsr	equ	0xFE0
  8300                           indf2	equ	0xFDF
  8301                           fsr2h	equ	0xFDA
  8302                           fsr2l	equ	0xFD9
  8303                           status	equ	0xFD8
  8304                           
  8305 ;; *************** function _ReadADC *****************
  8306 ;; Defined at:
  8307 ;;		line 24 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/ADC/adcread.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;		None
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  2    0[BANK0 ] int 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;Total ram usage:        2 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_adc_int_handler
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text49
  8335  001D1C                     __ptext49:
  8336                           	opt stack 0
  8337  001D1C                     _ReadADC:
  8338                           	opt stack 18
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;incstack = 0
  8342  001D1C  50C4               	movf	4036,w,c	;volatile
  8343  001D1E  0100               	movlb	0	; () banked
  8344  001D20  0100               	movlb	0	; () banked
  8345  001D22  6F61               	movwf	(?_ReadADC+1)& (0+255),b
  8346  001D24  50C3               	movf	4035,w,c	;volatile
  8347  001D26  0100               	movlb	0	; () banked
  8348  001D28  6F60               	movwf	?_ReadADC& (0+255),b
  8349  001D2A  0012               	return	
  8350  001D2C                     __end_of_ReadADC:
  8351                           	opt stack 0
  8352                           pclatu	equ	0xFFB
  8353                           pclath	equ	0xFFA
  8354                           tblptru	equ	0xFF8
  8355                           tblptrh	equ	0xFF7
  8356                           tblptrl	equ	0xFF6
  8357                           tablat	equ	0xFF5
  8358                           prodh	equ	0xFF4
  8359                           prodl	equ	0xFF3
  8360                           intcon	equ	0xFF2
  8361                           postinc0	equ	0xFEE
  8362                           fsr0h	equ	0xFEA
  8363                           fsr0l	equ	0xFE9
  8364                           wreg	equ	0xFE8
  8365                           indf1	equ	0xFE7
  8366                           fsr1h	equ	0xFE2
  8367                           fsr1l	equ	0xFE1
  8368                           bsr	equ	0xFE0
  8369                           indf2	equ	0xFDF
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _SleepIfOkay *****************
  8375 ;; Defined at:
  8376 ;;		line 228 in file "../src/messages.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;		None               void
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8394 ;;Total ram usage:        0 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:    2
  8397 ;; This function calls:
  8398 ;;		_enter_sleep_mode
  8399 ;;		i2_check_msg
  8400 ;;		i2_in_high_int
  8401 ;;		i2_in_low_int
  8402 ;; This function is called by:
  8403 ;;		_InterruptHandlerHigh
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text50
  8408  0016AA                     __ptext50:
  8409                           	opt stack 0
  8410  0016AA                     _SleepIfOkay:
  8411                           	opt stack 17
  8412                           
  8413                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;incstack = 0
  8417  0016AA  0100               	movlb	0	; () banked
  8418  0016AC  0100               	movlb	0	; () banked
  8419  0016AE  67B4               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  8420  0016B0  D001               	goto	i2l2535
  8421  0016B2  0012               	return	
  8422  0016B4                     i2l2535:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;messages.c: 232: }
  8426                           ;messages.c: 235: if (in_low_int()) {
  8427  0016B4  EC9B  F00C         	call	i2_in_low_int	;wreg free
  8428  0016B8  0100               	movlb	0	; () banked
  8429  0016BA  0100               	movlb	0	; () banked
  8430  0016BC  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8431  0016BE  0100               	movlb	0	; () banked
  8432  0016C0  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8433  0016C2  A4D8               	btfss	status,2,c
  8434  0016C4  0012               	return	
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;messages.c: 237: }
  8438                           ;messages.c: 240: if (!in_high_int()) {
  8439                           
  8440                           ; BSR set to: 0
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;messages.c: 236: return;
  8444  0016C6  EC85  F00E         	call	i2_in_high_int	;wreg free
  8445  0016CA  0100               	movlb	0	; () banked
  8446  0016CC  0100               	movlb	0	; () banked
  8447  0016CE  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8448  0016D0  0100               	movlb	0	; () banked
  8449  0016D2  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8450  0016D4  B4D8               	btfsc	status,2,c
  8451  0016D6  0012               	return	
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;messages.c: 242: }
  8455                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8456                           
  8457                           ; BSR set to: 0
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;messages.c: 241: return;
  8461  0016D8  0102               	movlb	2	; () banked
  8462  0016DA  0E02               	movlw	high _ToMainHigh_MQ
  8463  0016DC  0100               	movlb	0	; () banked
  8464  0016DE  0100               	movlb	0	; () banked
  8465  0016E0  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8466  0016E2  0102               	movlb	2	; () banked
  8467  0016E4  0E66               	movlw	low _ToMainHigh_MQ
  8468  0016E6  0100               	movlb	0	; () banked
  8469  0016E8  0100               	movlb	0	; () banked
  8470  0016EA  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8471  0016EC  ECB3  F00D         	call	i2_check_msg	;wreg free
  8472  0016F0  0900               	iorlw	0
  8473  0016F2  A4D8               	btfss	status,2,c
  8474  0016F4  0012               	return	
  8475                           
  8476                           ;messages.c: 249: }
  8477                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8478                           
  8479                           ;messages.c: 248: return;
  8480  0016F6  0101               	movlb	1	; () banked
  8481  0016F8  0E01               	movlw	high _ToMainLow_MQ
  8482  0016FA  0100               	movlb	0	; () banked
  8483  0016FC  0100               	movlb	0	; () banked
  8484  0016FE  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8485  001700  0101               	movlb	1	; () banked
  8486  001702  0E7F               	movlw	low _ToMainLow_MQ
  8487  001704  0100               	movlb	0	; () banked
  8488  001706  0100               	movlb	0	; () banked
  8489  001708  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8490  00170A  ECB3  F00D         	call	i2_check_msg	;wreg free
  8491  00170E  0900               	iorlw	0
  8492  001710  B4D8               	btfsc	status,2,c
  8493                           
  8494                           ;messages.c: 252: }
  8495                           ;messages.c: 253: enter_sleep_mode();
  8496                           
  8497                           ;messages.c: 251: return;
  8498  001712  EC9A  F00E         	call	_enter_sleep_mode	;wreg free
  8499  001716  0012               	return	
  8500  001718                     __end_of_SleepIfOkay:
  8501                           	opt stack 0
  8502                           pclatu	equ	0xFFB
  8503                           pclath	equ	0xFFA
  8504                           tblptru	equ	0xFF8
  8505                           tblptrh	equ	0xFF7
  8506                           tblptrl	equ	0xFF6
  8507                           tablat	equ	0xFF5
  8508                           prodh	equ	0xFF4
  8509                           prodl	equ	0xFF3
  8510                           intcon	equ	0xFF2
  8511                           postinc0	equ	0xFEE
  8512                           fsr0h	equ	0xFEA
  8513                           fsr0l	equ	0xFE9
  8514                           wreg	equ	0xFE8
  8515                           indf1	equ	0xFE7
  8516                           fsr1h	equ	0xFE2
  8517                           fsr1l	equ	0xFE1
  8518                           bsr	equ	0xFE0
  8519                           indf2	equ	0xFDF
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8
  8523                           
  8524 ;; *************** function i2_in_low_int *****************
  8525 ;; Defined at:
  8526 ;;		line 30 in file "../src/interrupts.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  2    2[BANK0 ] int 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2, status,0, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;Total ram usage:        2 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    1
  8547 ;; This function calls:
  8548 ;;		i2_in_high_int
  8549 ;; This function is called by:
  8550 ;;		_SleepIfOkay
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text51
  8555  001936                     __ptext51:
  8556                           	opt stack 0
  8557  001936                     i2_in_low_int:
  8558                           	opt stack 17
  8559                           
  8560                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8561                           
  8562                           ;incstack = 0
  8563  001936  ACF2               	btfss	intcon,6,c	;volatile
  8564  001938  D008               	goto	i2l3023
  8565                           
  8566                           ;interrupts.c: 32: return (0);
  8567  00193A  0E00               	movlw	0
  8568  00193C  0100               	movlb	0	; () banked
  8569  00193E  0100               	movlb	0	; () banked
  8570  001940  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8571  001942  0E00               	movlw	0
  8572  001944  0100               	movlb	0	; () banked
  8573  001946  6F62               	movwf	?i2_in_low_int& (0+255),b
  8574  001948  0012               	return	
  8575  00194A                     i2l3023:
  8576  00194A  EC85  F00E         	call	i2_in_high_int	;wreg free
  8577  00194E  0100               	movlb	0	; () banked
  8578  001950  0100               	movlb	0	; () banked
  8579  001952  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8580  001954  0100               	movlb	0	; () banked
  8581  001956  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8582  001958  B4D8               	btfsc	status,2,c
  8583  00195A  D008               	goto	i2l3031
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;interrupts.c: 34: return (0);
  8587  00195C  0E00               	movlw	0
  8588  00195E  0100               	movlb	0	; () banked
  8589  001960  0100               	movlb	0	; () banked
  8590  001962  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8591  001964  0E00               	movlw	0
  8592  001966  0100               	movlb	0	; () banked
  8593  001968  6F62               	movwf	?i2_in_low_int& (0+255),b
  8594  00196A  0012               	return	
  8595  00196C                     i2l3031:
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;interrupts.c: 36: return (1);
  8599  00196C  0E00               	movlw	0
  8600  00196E  0100               	movlb	0	; () banked
  8601  001970  0100               	movlb	0	; () banked
  8602  001972  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8603  001974  0E01               	movlw	1
  8604  001976  0100               	movlb	0	; () banked
  8605  001978  6F62               	movwf	?i2_in_low_int& (0+255),b
  8606  00197A  0012               	return	
  8607  00197C                     __end_ofi2_in_low_int:
  8608                           	opt stack 0
  8609                           pclatu	equ	0xFFB
  8610                           pclath	equ	0xFFA
  8611                           tblptru	equ	0xFF8
  8612                           tblptrh	equ	0xFF7
  8613                           tblptrl	equ	0xFF6
  8614                           tablat	equ	0xFF5
  8615                           prodh	equ	0xFF4
  8616                           prodl	equ	0xFF3
  8617                           intcon	equ	0xFF2
  8618                           postinc0	equ	0xFEE
  8619                           fsr0h	equ	0xFEA
  8620                           fsr0l	equ	0xFE9
  8621                           wreg	equ	0xFE8
  8622                           indf1	equ	0xFE7
  8623                           fsr1h	equ	0xFE2
  8624                           fsr1l	equ	0xFE1
  8625                           bsr	equ	0xFE0
  8626                           indf2	equ	0xFDF
  8627                           fsr2h	equ	0xFDA
  8628                           fsr2l	equ	0xFD9
  8629                           status	equ	0xFD8
  8630                           
  8631 ;; *************** function i2_in_high_int *****************
  8632 ;; Defined at:
  8633 ;;		line 22 in file "../src/interrupts.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;		None
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  2    0[BANK0 ] int 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8651 ;;Total ram usage:        2 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_SleepIfOkay
  8657 ;;		i2_in_low_int
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text52
  8662  001D0A                     __ptext52:
  8663                           	opt stack 0
  8664  001D0A                     i2_in_high_int:
  8665                           	opt stack 17
  8666                           
  8667                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;incstack = 0
  8671  001D0A  0E00               	movlw	0
  8672  001D0C  AEF2               	btfss	intcon,7,c	;volatile
  8673  001D0E  0E01               	movlw	1
  8674  001D10  0100               	movlb	0	; () banked
  8675  001D12  0100               	movlb	0	; () banked
  8676  001D14  6F60               	movwf	?i2_in_high_int& (0+255),b
  8677  001D16  0100               	movlb	0	; () banked
  8678  001D18  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  8679  001D1A  0012               	return	
  8680  001D1C                     __end_ofi2_in_high_int:
  8681                           	opt stack 0
  8682                           pclatu	equ	0xFFB
  8683                           pclath	equ	0xFFA
  8684                           tblptru	equ	0xFF8
  8685                           tblptrh	equ	0xFF7
  8686                           tblptrl	equ	0xFF6
  8687                           tablat	equ	0xFF5
  8688                           prodh	equ	0xFF4
  8689                           prodl	equ	0xFF3
  8690                           intcon	equ	0xFF2
  8691                           postinc0	equ	0xFEE
  8692                           fsr0h	equ	0xFEA
  8693                           fsr0l	equ	0xFE9
  8694                           wreg	equ	0xFE8
  8695                           indf1	equ	0xFE7
  8696                           fsr1h	equ	0xFE2
  8697                           fsr1l	equ	0xFE1
  8698                           bsr	equ	0xFE0
  8699                           indf2	equ	0xFDF
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704 ;; *************** function i2_check_msg *****************
  8705 ;; Defined at:
  8706 ;;		line 222 in file "../src/messages.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8709 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      unsigned char 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;Total ram usage:        3 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_SleepIfOkay
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text53
  8735  001B66                     __ptext53:
  8736                           	opt stack 0
  8737  001B66                     i2_check_msg:
  8738                           	opt stack 18
  8739                           
  8740                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;incstack = 0
  8744  001B66  0100               	movlb	0	; () banked
  8745  001B68  EE20 F065          	lfsr	2,101
  8746  001B6C  0100               	movlb	0	; () banked
  8747  001B6E  5160               	movf	i2check_msg@qptr& (0+255),w,b
  8748  001B70  26D9               	addwf	fsr2l,f,c
  8749  001B72  0100               	movlb	0	; () banked
  8750  001B74  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8751  001B76  22DA               	addwfc	fsr2h,f,c
  8752  001B78  50DF               	movf	indf2,w,c
  8753  001B7A  0100               	movlb	0	; () banked
  8754  001B7C  6F62               	movwf	??i2_check_msg& (0+255),b
  8755  001B7E  0100               	movlb	0	; () banked
  8756  001B80  5162               	movf	??i2_check_msg& (0+255),w,b
  8757  001B82  0D19               	mullw	25
  8758  001B84  50F3               	movf	prodl,w,c
  8759  001B86  0100               	movlb	0	; () banked
  8760  001B88  0100               	movlb	0	; () banked
  8761  001B8A  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  8762  001B8C  6ED9               	movwf	fsr2l,c
  8763  001B8E  50F4               	movf	prodh,w,c
  8764  001B90  0100               	movlb	0	; () banked
  8765  001B92  0100               	movlb	0	; () banked
  8766  001B94  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8767  001B96  6EDA               	movwf	fsr2h,c
  8768  001B98  50DF               	movf	indf2,w,c
  8769  001B9A  0012               	return	
  8770  001B9C                     __end_ofi2_check_msg:
  8771                           	opt stack 0
  8772                           pclatu	equ	0xFFB
  8773                           pclath	equ	0xFFA
  8774                           tblptru	equ	0xFF8
  8775                           tblptrh	equ	0xFF7
  8776                           tblptrl	equ	0xFF6
  8777                           tablat	equ	0xFF5
  8778                           prodh	equ	0xFF4
  8779                           prodl	equ	0xFF3
  8780                           intcon	equ	0xFF2
  8781                           postinc0	equ	0xFEE
  8782                           fsr0h	equ	0xFEA
  8783                           fsr0l	equ	0xFE9
  8784                           wreg	equ	0xFE8
  8785                           indf1	equ	0xFE7
  8786                           fsr1h	equ	0xFE2
  8787                           fsr1l	equ	0xFE1
  8788                           bsr	equ	0xFE0
  8789                           indf2	equ	0xFDF
  8790                           fsr2h	equ	0xFDA
  8791                           fsr2l	equ	0xFD9
  8792                           status	equ	0xFD8
  8793                           
  8794 ;; *************** function _enter_sleep_mode *****************
  8795 ;; Defined at:
  8796 ;;		line 202 in file "../src/messages.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;		None               void
  8803 ;; Registers used:
  8804 ;;		None
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;Total ram usage:        0 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_SleepIfOkay
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text54
  8824  001D34                     __ptext54:
  8825                           	opt stack 0
  8826  001D34                     _enter_sleep_mode:
  8827                           	opt stack 18
  8828                           
  8829                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;incstack = 0
  8833  001D34  8ED3               	bsf	4051,7,c	;volatile
  8834  001D36  0003               	sleep		;# 
  8835  001D38  0012               	return	
  8836  001D3A                     __end_of_enter_sleep_mode:
  8837                           	opt stack 0
  8838  0000                     pclatu	equ	0xFFB
  8839                           pclath	equ	0xFFA
  8840                           tblptru	equ	0xFF8
  8841                           tblptrh	equ	0xFF7
  8842                           tblptrl	equ	0xFF6
  8843                           tablat	equ	0xFF5
  8844                           prodh	equ	0xFF4
  8845                           prodl	equ	0xFF3
  8846                           intcon	equ	0xFF2
  8847                           postinc0	equ	0xFEE
  8848                           fsr0h	equ	0xFEA
  8849                           fsr0l	equ	0xFE9
  8850                           wreg	equ	0xFE8
  8851                           indf1	equ	0xFE7
  8852                           fsr1h	equ	0xFE2
  8853                           fsr1l	equ	0xFE1
  8854                           bsr	equ	0xFE0
  8855                           indf2	equ	0xFDF
  8856                           fsr2h	equ	0xFDA
  8857                           fsr2l	equ	0xFD9
  8858                           status	equ	0xFD8
  8859                           pclatu	equ	0xFFB
  8860                           pclath	equ	0xFFA
  8861                           tblptru	equ	0xFF8
  8862                           tblptrh	equ	0xFF7
  8863                           tblptrl	equ	0xFF6
  8864                           tablat	equ	0xFF5
  8865                           prodh	equ	0xFF4
  8866                           prodl	equ	0xFF3
  8867                           intcon	equ	0xFF2
  8868                           postinc0	equ	0xFEE
  8869                           fsr0h	equ	0xFEA
  8870                           fsr0l	equ	0xFE9
  8871                           wreg	equ	0xFE8
  8872                           indf1	equ	0xFE7
  8873                           fsr1h	equ	0xFE2
  8874                           fsr1l	equ	0xFE1
  8875                           bsr	equ	0xFE0
  8876                           indf2	equ	0xFDF
  8877                           fsr2h	equ	0xFDA
  8878                           fsr2l	equ	0xFD9
  8879                           status	equ	0xFD8
  8880                           
  8881                           	psect	param0
  8882  0000                     pclatu	equ	0xFFB
  8883                           pclath	equ	0xFFA
  8884                           tblptru	equ	0xFF8
  8885                           tblptrh	equ	0xFF7
  8886                           tblptrl	equ	0xFF6
  8887                           tablat	equ	0xFF5
  8888                           prodh	equ	0xFF4
  8889                           prodl	equ	0xFF3
  8890                           intcon	equ	0xFF2
  8891                           postinc0	equ	0xFEE
  8892                           fsr0h	equ	0xFEA
  8893                           fsr0l	equ	0xFE9
  8894                           wreg	equ	0xFE8
  8895                           indf1	equ	0xFE7
  8896                           fsr1h	equ	0xFE2
  8897                           fsr1l	equ	0xFE1
  8898                           bsr	equ	0xFE0
  8899                           indf2	equ	0xFDF
  8900                           fsr2h	equ	0xFDA
  8901                           fsr2l	equ	0xFD9
  8902                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         423
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      69
    BANK0           160     82      85
    BANK1           256    127     229
    BANK2           256      0     204
    BANK3           256      0     102
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), main@ic(BANK1[76]), 
		 -> main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), main@ic(BANK1[76]), 
		 -> main@uc(BANK1[23]), 

    uart_write@msg	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 76
		 -> main@ic(BANK1[76]), 

    WriteI2CBuffer@msg	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 76
		 -> NULL(NULL[0]), main@ic(BANK1[76]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 76
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[76]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 76
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[76]), 
		 -> main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_retrieve_command
    _retrieve_command->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_write->_flipDBG
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _adc_int_handler->_ReadADC
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               134   134      0    6616
                                             81 BANK0      1     1      0
                                              0 BANK1    127   127      0
                         _ConvertADC
                         _Open1USART
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                     _WriteI2CBuffer
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                     _init_uart_recv
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           5     3      2     199
                                             54 BANK0      5     3      2
                        _Write1USART
                            _flipDBG
 ---------------------------------------------------------------------------------
 (2) _flipDBG                                              2     2      0      22
                                             52 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Write1USART                                          1     1      0      22
                                             52 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             52 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             56 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             52 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             52 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             52 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             58 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             56 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             54 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             52 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             52 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             52 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteI2CBuffer                                       7     5      2     199
                                             52 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1999
                                             76 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1999
                                             76 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1805
                                             62 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     426
                                             52 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     130
                                             52 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             52 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              7     4      3     304
                                             52 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     284
                                             52 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    7308
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    4818
                                             33 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
                   _retrieve_command
 ---------------------------------------------------------------------------------
 (7) _retrieve_command                                     7     7      0    2434
                                             26 COMRAM     7     7      0
                  _ToMainLow_sendmsg
                          i1_flipDBG
 ---------------------------------------------------------------------------------
 (8) i1_flipDBG                                            2     2      0      73
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2490
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2361
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _send_msg                                            12     6      6    1783
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               15    15      0    3311
                                             37 BANK0     15    15      0
                        _SleepIfOkay
                    _adc_int_handler
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0     132
                        _WriteTimer0
                       i2_ConvertADC
 ---------------------------------------------------------------------------------
 (13) i2_ConvertADC                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     132
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    11    11      0    2919
                                             26 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                          i2_flipDBG
 ---------------------------------------------------------------------------------
 (13) i2_flipDBG                                           2     2      0      73
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               6     4      2     177
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    2265
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    1943
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     662
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _adc_int_handler                                     4     4      0      24
                                              2 BANK0      4     4      0
                            _ReadADC
 ---------------------------------------------------------------------------------
 (13) _ReadADC                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConvertADC
   _Open1USART
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteI2CBuffer
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_uart_recv
   _uart_write
     _Write1USART
     _flipDBG

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _retrieve_command
       _ToMainLow_sendmsg
         _send_msg
           i1_memcpy
       i1_flipDBG

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _adc_int_handler
     _ReadADC
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
     i2_flipDBG
   _timer0_int_handler
     _WriteTimer0
     i2_ConvertADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      66      12       39.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CC      10       79.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     7F      E5       8       89.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      55       5       53.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      45       1       72.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B1       6        0.0%
DATA                 0      0     2B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Apr  3 19:15:46 2014

                 uart_write@msg 0096                               _i 0036                               _j 0044  
                             _x 003C        _MQ_Main_Willing_to_block 00B4                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1A02                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1C44  
                  __CFG_CP0$OFF 000000                             l121 0840                             l113 07B8  
                           l612 1572                             l524 14B0                             l382 1744  
                           l616 1590                             l545 1BF0                             l618 159E  
                           l546 1BF2                             l619 15A0                             l573 1A7A  
                           l574 1A7C                             l855 1C9C            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0200                             wreg 000FE8  
                    _TXSTA1bits 000FAD                    __CFG_IESO$ON 000000                    ?_in_high_int 0094  
              ??_init_uart_recv 0096                 ReadTimer1@timer 0003                            l2321 1904  
                          l2343 19B0                            l2329 1926                            l2611 0898  
                          l2603 0846                            l2613 089E                            l2605 085A  
                          l2617 08BE                            l2811 0E9C                            l2733 1574  
                          l2725 155E                            l2805 0E30                            l2821 1606  
                          l2745 1592                            l2761 14D6                            l2835 17C8  
                          l2829 17A4                            l2773 1536                            l2597 07FA  
                          l2767 1506                            l2951 0F04                            l2849 0C1E  
                          l2865 0CE4                            l2953 0F26                            l2955 0F4A  
                          l2947 0EC8                            l2949 0EE4                            l2789 1770  
                          l2983 1CBC                            l2959 0F6A                            u2010 0ED0  
                          u2020 0EEC                            u2030 0F0C                            u2040 0F2E  
                          u2016 0ED2                            u2050 0F52                            u2026 0EEE  
                          u2036 0F0E                            u2046 0F30                            _LATB 000F8A  
                          u2056 0F54                            u1705 142A                            u2367 1C9E  
                          i1l58 0070                uart_write@length 0099                 _FromMainHigh_MQ 0300  
                          _Send 0034                  Read1USART@data 0001          ?_block_on_To_msgqueues 0001  
                          _main 070A                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          _swit 003A          __CFG_DSWDTOSC$T1OSCREF 000000                     main@msgtype 0131  
                          pclat 000FFA                     i2_check_msg 1B66                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 0060                      i1flipDBG@b 0002  
                          start 00B6                ?_adc_int_handler 0001                      i2_send_msg 0CE8  
     ToMainHigh_recvmsg@msgtype 00AC                      i2flipDBG@b 0061                 __end_of_ReadADC 1D2C  
             ?_retrieve_command 0001                  send_msg@length 000D                 __end_of_OpenADC 14B4  
   __size_of_timer0_int_handler 0018              ??_retrieve_command 001B                     _Delay1KTCYx 1C98  
                 __CFG_PLLDIV$3 000000                           ?_main 0001                           _T0CON 000FD5  
                         _T1CON 000FCD                      i1memcpy@d1 0001                           i2l302 01CC  
                         i2l330 0534                           i2l324 0494                           i2l316 035C  
                         i1l629 1C70                           i2l286 11AC                           i2l296 0522  
                         i2l298 0188                      i1memcpy@s1 0003                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _STATE 0040                           _TRISB 000F93                 __end_of_flipDBG 0F90  
                    i2memcpy@d1 0060                  __CFG_FCMEN$OFF 000000                      i2memcpy@s1 0062  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 19C0  
    ToMainLow_recvmsg@maxlength 00B0                      _Read1USART 1C62                      _ConvertADC 1D3A  
                __CFG_T1DIG$OFF 000000         i2c_configure_slave@addr 0094                           tablat 000FF5  
                         status 000FD8                __end_ofi1_memcpy 1AC4                __end_ofi2_memcpy 183E  
            __size_ofi1_flipDBG 00AE                 __initialization 189A              __size_ofi2_flipDBG 00CE  
                  __end_of_main 08DE                      _ReadTimer1 1CE6     __size_of_timer1_int_handler 0030  
    __size_of_ToMainLow_recvmsg 0042      __size_of_ToMainLow_sendmsg 0026           __size_ofi2_in_low_int 0046  
                __CFG_OSC$HSPLL 000000                      _Open1USART 153E                          ??_main 00B1  
               send_msg@msgtype 000E                   __activetblptr 000002                 send_msg@tlength 0012  
          __end_of_handle_start 11F8                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _ANCON0 000F48  
                        _ANCON1 000F49         ??_uart_recv_int_handler 0022                          _T1GCON 000F9A  
                        i1l3105 1AB2                          i1l3205 0066                          i1l3071 1310  
                        i1l3129 13A2                          i1l3073 132E                          i1l3065 12C2  
                        i1l3161 0AC2                          i1l3153 0A76                          i1l3067 12DA  
                        i1l3171 0B24                          i1l3069 12F4                          i1l3077 1348  
                        i1l3173 0B2E                          i1l3165 0AF6                          i1l3175 0B38  
                        i1l3167 0B10                          i1l3159 0AB8                          i1l3183 0B84  
                        i1l3169 0B1A                          i1l3193 187A                          i1l3099 1A96  
                        i2l3031 196C                          i2l3023 194A                          i2l2401 017E  
                        i2l3115 1826                          i2l3109 1802                          i2l2501 0598  
                        i2l2421 0230                          i2l3047 0D44                          i2l2431 026C  
                        i2l3081 1064                          i2l2361 125A                          i2l2353 1232  
                    _OpenTimer0 1BCC                      _OpenTimer1 1A44                          i2l3083 1080  
                        i2l2419 0204                          i2l3085 10A0                          i2l3093 1106  
                        i2l2517 06D8                          i2l2509 0632                          i2l2461 03D0  
                        i2l2437 0284                  __CFG_WDTEN$OFF 000000                          i2l2535 16B4  
                        i2l3087 10C2                          i2l2463 0412                          i2l2439 02C4  
                        i2l3089 10E6                          i2l2369 127E                          i2l2467 0424  
                        i2l2395 0166                          i2l2911 0986                          i2l2495 0538  
                        i2l2489 04F6                          i2l2907 08FA                          i2l2941 11C8  
                        i2l2925 0A34                          i2l2943 11E0                          _RCREG1 000FAF  
   __end_of_i2c_configure_slave 1C1E                   ??_SleepIfOkay 0064                  _WriteI2CBuffer 0DEC  
                        _RCSTA1 000FAC                          _OSCCON 000FD3                          _SPBRG1 000FB0  
                        _SSPADD 000FC8                  __CFG_WPCFG$OFF 000000                          _SSPBUF 000FC9  
__size_of_start_i2c_slave_reply 0190                          _TXREG1 000FAE                       ??_ReadADC 0062  
                        _TXSTA1 000FAD   __end_of_start_i2c_slave_reply 0A6E                  __CFG_WPDIS$OFF 000000  
                     ??_OpenADC 0097                    i2_in_low_int 1936                     ?i2_send_msg 006A  
                __CFG_XINST$OFF 000000                 _i2c_int_handler 00BA                OpenTimer0@config 0094  
                        _ic_ptr 00B2                   main@msgbuffer 0100                __end_of_init_i2c 105E  
              OpenTimer1@config 0096                          _length 0038                          _memcpy 1782  
                        clear_0 18A0                          clear_1 18AC                          clear_2 18B8  
                        clear_3 18C8                          _uc_ptr 0042                       ??_flipDBG 0094  
                        main@ic 0133                          main@uc 011A                __end_of_recv_msg 0CE8  
   start_i2c_slave_reply@length 0064                       ??_in_main 009A                __end_of_send_msg 1414  
                  __pdataCOMRAM 0044         i2c_int_handler@i2c_data 0081                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 0097  
             WriteI2CBuffer@msg 0094               __end_ofi1_flipDBG 136A               __end_ofi2_flipDBG 112C  
      ToMainLow_recvmsg@msgtype 00AC          __end_of_WriteI2CBuffer 0EC2            __size_of_in_high_int 0012  
                   ?_Read1USART 0001                     ?_ConvertADC 0001                      __accesstop 0060  
       __end_of__initialization 18E6      __end_of_ToMainHigh_recvmsg 1A44      __end_of_ToMainHigh_sendmsg 1B30  
               __CFG_IOL1WAY$ON 000000            __CFG_WPEND$PAGE_WPFP 000000             __end_of_SleepIfOkay 1718  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 0012                     ?_ReadTimer1 0001  
            __size_of_check_msg 0036                 __CFG_DSWDTPS$G2 000000                     ?_Open1USART 0094  
                     ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 12B4     __end_of_InterruptHandlerLow 00B6  
                     ?i2_memcpy 0060                   _ToMainHigh_MQ 0266                _enter_sleep_mode 1D34  
           __size_ofi2_send_msg 0104                   check_msg@qptr 0094         ??_block_on_To_msgqueues 009A  
               ?_WriteI2CBuffer 0094            __size_of_init_queues 0072                      __pbssBANK0 00B4  
                    __pbssBANK1 017F                      __pbssBANK2 0200                      __pbssBANK3 0300  
                   ?_OpenTimer0 0001                     ?_OpenTimer1 0094                   ??_Write1USART 0094  
                    __pnvCOMRAM 0042         __end_of_i2c_int_handler 070A                    ?i2_check_msg 0060  
             recv_msg@maxlength 00A0                 recv_msg@msgtype 00A1                 recv_msg@tlength 00A8  
         __size_of_handle_start 00CC                    ?_Delay1KTCYx 0001                WriteTimer0@timer 0062  
                       ?_memcpy 0094                WriteTimer1@timer 0003                   ??_WriteTimer0 0062  
                 ??_WriteTimer1 0003             __size_of_Read1USART 001E             __size_of_ConvertADC 0004  
              Open1USART@config 0099                      ??i1_memcpy 0007                      ??i2_memcpy 0066  
     __size_of_retrieve_command 0144                         _MSG_LEN 003E                         _MSG_REC 003F  
                       _SPBRGH1 000F7F                   i2_in_high_int 1D0A                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7             __size_of_ReadTimer1 0012  
             __end_of_check_msg 1AFA                       ?_init_i2c 0094                     _SleepIfOkay 16AA  
           __size_of_Open1USART 0080                         _ReadADC 1D1C                       ?_recv_msg 009E  
                       _OpenADC 1414                      _in_low_int 18F0                    _handle_start 112C  
                       __Hparam 0000                       ?_send_msg 000B                         __Lparam 0000  
    __end_of_timer0_int_handler 1C98             __end_of_Write1USART 1CC2                init_uart_recv@uc 0094  
        start_i2c_slave_reply@i 0065                 __CFG_STVREN$OFF 000000                         __pcinit 189A  
               __size_of_memcpy 005E        __size_of_adc_int_handler 0036                      _init_queue 15BE  
                       __ramtop 0F00             __size_of_OpenTimer0 002A             __size_of_OpenTimer1 0040  
                       _flipDBG 0EC2                         __ptext0 070A                         __ptext1 1718  
                       __ptext2 0EC2                         __ptext3 1CAE                         __ptext4 1C44  
                       __ptext5 1638                         __ptext6 15BE                         __ptext7 0F90  
                       __ptext8 1BF6                         __ptext9 1D2C                       _T0CONbits 000FD5  
             OpenTimer1@config1 0094                         _in_main 197C                       _T1CONbits 000FCD  
           __end_of_WriteTimer0 1D0A             __end_of_WriteTimer1 1CE6                  ?i2_in_high_int 0060  
                OpenADC@config2 0094                  OpenADC@config3 0095                  __pintcode_body 11F8  
          end_of_initialization 18E6                   ?i2_ConvertADC 0001  __size_of_uart_recv_int_handler 005C  
                       memcpy@d 009A                         memcpy@n 0098                         memcpy@s 009C  
 __end_of_uart_recv_int_handler 189A                      ??_init_i2c 0096     i2c_int_handler@data_written 007F  
                 __Lmediumconst 0000                         int_func 11F8         __size_of_init_uart_recv 001E  
              ?_i2c_int_handler 0001                      ??_recv_msg 00A5                    ??i2_send_msg 0070  
                    ??_send_msg 0011      __end_of_timer1_int_handler 1BCC                       _RCSTAbits 000FAC  
                       postinc0 000FEE       ToMainHigh_sendmsg@msgtype 0076                      _uart_write 1718  
                     _PORTBbits 000F81                __CFG_DSBOREN$OFF 000000                __CFG_CPUDIV$OSC1 000000  
                     _TRISBbits 000F93                     uart_write@i 009A              __end_ofi2_send_msg 0DEC  
                ??i2_ConvertADC 0060                    ??_Read1USART 0001                    ??_ConvertADC 0094  
                     i1_flipDBG 12BC        timer1_int_handler@result 001C                       i2_flipDBG 105E  
                   _Write1USART 1CAE               __CFG_WPFP$PAGE_63 000000                      main@length 0132  
                   ?_in_low_int 0096           _start_i2c_slave_reply 08DE             __CFG_MSSP7B_EN$MSK7 000000  
  __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0036        __end_of_enter_sleep_mode 1D3A  
                  ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1A02                       i1memcpy@d 0007  
            _ToMainHigh_sendmsg 1AFA                       i1memcpy@n 0005                       i1memcpy@s 0009  
                 __pidataCOMRAM 1D42                    ??_Open1USART 0096                     ?_init_queue 0094  
                     i2memcpy@d 0066                     _WriteTimer0 1CF8                     _WriteTimer1 1CD4  
                     i2memcpy@n 0064                       i2memcpy@s 0068              __end_of_Read1USART 1C80  
            __end_of_ConvertADC 1D3E                  __end_of_memcpy 17E0               _enable_interrupts 1D2C  
          __size_of_Delay1KTCYx 0016                __CFG_DSWDTEN$OFF 000000             ?_ToMainHigh_recvmsg 00AC  
               ??i2_in_high_int 0062                ??_WriteI2CBuffer 0096        i2c_int_handler@data_read 0084  
           ?_ToMainHigh_sendmsg 0076              ?_enable_interrupts 0001             start_initialization 189A  
                 ??_in_high_int 0096                _retrieve_command 0A6E               ??_adc_int_handler 0062  
             __size_ofi1_memcpy 0040               __size_ofi2_memcpy 005E             ??_enable_interrupts 0094  
                  ??_OpenTimer0 0094                    ??_OpenTimer1 0095                      ?i1_flipDBG 0001  
__size_of_block_on_To_msgqueues 008A              __end_of_ReadTimer1 1CF8   __end_of_block_on_To_msgqueues 153E  
                    ?i2_flipDBG 0001    __end_of_InterruptHandlerHigh 12BC              __end_of_Open1USART 15BE  
                    init_i2c@ic 0094            ??_ToMainHigh_recvmsg 00B0            ??_ToMainHigh_sendmsg 0079  
      i2c_int_handler@error_buf 007C                __CFG_LPT1OSC$OFF 000000       __end_of_enable_interrupts 1D34  
                      ??_memcpy 009A                     ?_uart_write 0096              __end_of_OpenTimer0 1BF6  
            __end_of_OpenTimer1 1A84        i2c_int_handler@msg_ready 0083                     __pbssCOMRAM 0034  
                 ??_init_queues 0098                   __pcstackBANK0 0060                   __pcstackBANK1 0100  
           __size_of_in_low_int 0046        start_i2c_slave_reply@msg 0060                 Delay1KTCYx@unit 0094  
      ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 1CD4  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 00AE                    _ToMainLow_MQ 017F  
           __size_of_init_queue 007A                  _init_uart_recv 1C44                        ?_ReadADC 0060  
                     _check_msg 1AC4                       __pnvBANK0 00B2          ?_start_i2c_slave_reply 0060  
             __size_of_init_i2c 00CE                        ?_OpenADC 0094                    recv_msg@data 00A3  
                  recv_msg@qmsg 00AA                    recv_msg@slot 00A7                    recv_msg@qptr 009E  
             __size_of_recv_msg 0136                       __pintcode 0008               __size_of_send_msg 00AA  
          __end_ofi2_ConvertADC 1D42                     __pintcodelo 0018          ToMainHigh_recvmsg@data 00AE  
               Open1USART@spbrg 0094                        ?_flipDBG 0001      i2c_int_handler@msg_to_send 0082  
                      ?_in_main 0098               WriteTimer0@timer0 0060              _timer0_int_handler 1C80  
             WriteTimer1@timer1 0001            __CFG_RTCOSC$T1OSCREF 000000           ToMainLow_sendmsg@data 0018  
               Write1USART@data 0094             ?_timer0_int_handler 0001                     ??i1_flipDBG 0001  
        __end_of_init_uart_recv 1C62             __end_of_init_queues 16AA                     ??i2_flipDBG 0060  
                 OpenADC@config 009A                        _LATBbits 000F8A             __size_of_uart_write 006A  
               i2check_msg@qptr 0060                      ?_check_msg 0094                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                        i1u220_20 1318                        i1u220_26 131A  
                      i1u221_20 1336                   ?i2_in_low_int 0062                        i1u221_26 1338  
                      i1u217_20 12CA                        i1u217_26 12CC                        i1u218_20 12E2  
                      i1u218_26 12E4                        i1u219_20 12FC                        i1u219_26 12FE  
                      i2u132_40 123E                        i2u132_46 1240                        i2u222_40 106C  
                      i2u134_40 1266                        i2u222_46 106E                        i2u134_46 1268  
                      i2u223_40 1088                        i2u223_46 108A                        i2u224_40 10A8  
                      i2u224_46 10AA                        i2u225_40 10CA                        i2u225_46 10CC  
                      i2u226_40 10EE                        i2u226_46 10F0                        _PIR1bits 000F9E  
        ToMainHigh_sendmsg@data 0077                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
          ??_timer0_int_handler 0064      __size_of_enable_interrupts 0008                      _ADCON0bits 000FC2  
            _timer1_int_handler 1B9C                        i1_memcpy 1A84            _InterruptHandlerHigh 0008  
                     main@msgId 0118                        i2_memcpy 17E0                     _in_high_int 1CC2  
                  send_msg@data 000F             _i2c_configure_slave 1BF6                    send_msg@qmsg 0015  
                  send_msg@slot 0014                    send_msg@qptr 000B             ?_timer1_int_handler 0001  
               ?_init_uart_recv 0094                    ?_Write1USART 0001                  ??i2_in_low_int 0064  
                      __Hparam0 0000           _uart_recv_int_handler 183E                    ??_in_low_int 0098  
              __size_of_ReadADC 0010                        __Lparam0 0000                __size_of_OpenADC 00A0  
          ?_i2c_configure_slave 0001        __end_of_retrieve_command 0BB2               ?_enter_sleep_mode 0001  
               WriteI2CBuffer@i 0099            ??_timer1_int_handler 001B                 _adc_int_handler 1B30  
      __size_of_i2c_int_handler 0650              ??_enter_sleep_mode 0060                    ??_init_queue 0096  
                  ?_WriteTimer0 0060                    ?_WriteTimer1 0001         ToMainLow_sendmsg@length 001A  
              __size_of_flipDBG 00CE           ?_InterruptHandlerHigh 0001                __size_of_in_main 0044  
             i2send_msg@msgtype 006D     ToMainHigh_recvmsg@maxlength 00B0               i2send_msg@tlength 0071  
                   _init_queues 1638              __end_of_in_low_int 1936                        __ptext10 14B4  
                      __ptext11 197C                        __ptext20 1782                        __ptext12 18F0  
                      __ptext21 1A44                        __ptext13 1CC2                      _T1GCONbits 000F9A  
                      __ptext30 1C62                        __ptext22 1BCC                        __ptext14 1AC4  
                      __ptext31 1B9C                        __ptext23 1414                        __ptext15 1C98  
                      __ptext40 1CF8                        __ptext32 1CD4                        __ptext24 153E  
                      __ptext16 0DEC                        __ptext41 00BA                        __ptext33 1C1E  
                      __ptext25 1D3A                        __ptext17 19C0                        __ptext50 16AA  
                      __ptext42 105E                        __ptext34 136A                        __ptext18 1A02  
                      __ptext51 1936                        __ptext43 08DE                        __ptext35 1A84  
                      __ptext27 183E                        __ptext19 0BB2                        __ptext52 1D0A  
                      __ptext44 112C                        __ptext36 1CE6                        __ptext28 0A6E  
                      __ptext53 1B66                        __ptext45 1AFA                        __ptext29 12BC  
                      __ptext54 1D34                        __ptext46 0CE8                        __ptext38 1C80  
                      __ptext47 17E0                        __ptext39 1D3E                        __ptext48 1B30  
                      __ptext49 1D1C                        _init_i2c 0F90                   __size_of_main 01D4  
                 ??i2_check_msg 0062                     ??_check_msg 0096              __end_of_init_queue 1638  
          __size_of_SleepIfOkay 006E                        _recv_msg 0BB2           ??_i2c_configure_slave 0094  
         __size_ofi2_ConvertADC 0004                        _send_msg 136A                        flipDBG@b 0095  
                init_queue@qptr 0094            WriteI2CBuffer@length 0098                   ??_Delay1KTCYx 0094  
           _InterruptHandlerLow 0018                    ??_uart_write 0098                   _USART1_Status 0041  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                        memcpy@d1 0094  
                      memcpy@s1 0096           __end_ofi2_in_high_int 1D1C    i2c_int_handler@overrun_error 0080  
              i2send_msg@length 006C                        intlevel1 0000                        intlevel2 0000  
                  i2_ConvertADC 1D3E            ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 0062  
        ?_uart_recv_int_handler 0001                      _RCSTA1bits 000FAC              __end_of_uart_write 1782  
         _block_on_To_msgqueues 14B4                   ?_handle_start 0001     __size_of_ToMainHigh_recvmsg 0042  
       __end_of_adc_int_handler 1B66     __size_of_ToMainHigh_sendmsg 0036                      _OSCCONbits 000FD3  
         adc_int_handler@result 0064        ToMainHigh_sendmsg@length 0079             __end_ofi2_check_msg 1B9C  
        ??_InterruptHandlerHigh 0085               _ToMainLow_recvmsg 19C0               _ToMainLow_sendmsg 1C1E  
            main@last_reg_recvd 0117            __end_ofi2_in_low_int 197C              ?_ToMainLow_recvmsg 00AC  
           __end_of_Delay1KTCYx 1CAE               ??_i2c_int_handler 007A              ?_ToMainLow_sendmsg 0017  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                  i2send_msg@data 006E  
         ??_InterruptHandlerLow 0023             ??_ToMainLow_recvmsg 00B0                  i2send_msg@qmsg 0074  
                i2send_msg@slot 0073                  i2send_msg@qptr 006A             ??_ToMainLow_sendmsg 001A  
       __size_of_WriteI2CBuffer 00D6                  ??_handle_start 0060            __size_of_Write1USART 0014  
