

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Apr 11 08:35:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATCbits	set	3979
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _PORTB	set	3969
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SSPADD	set	4040
    95  0000                     _SSPBUF	set	4041
    96  0000                     _SSPCON1	set	4038
    97  0000                     _SSPCON1bits	set	4038
    98  0000                     _SSPCON2	set	4037
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _SSPSTATbits	set	4039
   102  0000                     _T0CON	set	4053
   103  0000                     _T0CONbits	set	4053
   104  0000                     _T1CON	set	4045
   105  0000                     _T1CONbits	set	4045
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR1H	set	4047
   109  0000                     _TMR1L	set	4046
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TXREG	set	4013
   112  0000                     _TXSTA	set	4012
   113  0000                     _TXSTAbits	set	4012
   114                           
   115                           	psect	nvCOMRAM
   116  00004D                     __pnvCOMRAM:
   117                           	opt stack 0
   118  00004D                     _uc_ptr:
   119                           	opt stack 0
   120  00004D                     	ds	2
   121                           
   122                           	psect	nvBANK0
   123  0000D1                     __pnvBANK0:
   124                           	opt stack 0
   125  0000D1                     _ic_ptr:
   126                           	opt stack 0
   127  0000D1                     	ds	2
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  002202                     __pcinit:
   133                           	opt stack 0
   134  002202                     start_initialization:
   135                           	opt stack 0
   136  002202                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Clear objects allocated to BANK3 (102 bytes)
   140  002202  EE03  F000         	lfsr	0,__pbssBANK3
   141  002206  0E66               	movlw	102
   142  002208                     clear_0:
   143  002208  6AEE               	clrf	postinc0,c
   144  00220A  06E8               	decf	wreg,f,c
   145  00220C  E1FD               	bnz	clear_0
   146                           
   147                           ; Clear objects allocated to BANK2 (204 bytes)
   148  00220E  EE02  F000         	lfsr	0,__pbssBANK2
   149  002212  0ECC               	movlw	204
   150  002214                     clear_1:
   151  002214  6AEE               	clrf	postinc0,c
   152  002216  06E8               	decf	wreg,f,c
   153  002218  E1FD               	bnz	clear_1
   154                           
   155                           ; Clear objects allocated to BANK1 (102 bytes)
   156  00221A  EE01  F094         	lfsr	0,__pbssBANK1
   157  00221E  0E66               	movlw	102
   158  002220                     clear_2:
   159  002220  6AEE               	clrf	postinc0,c
   160  002222  06E8               	decf	wreg,f,c
   161  002224  E1FD               	bnz	clear_2
   162                           
   163                           ; Clear objects allocated to BANK0 (11 bytes)
   164  002226  EE00  F0C6         	lfsr	0,__pbssBANK0
   165  00222A  0E0B               	movlw	11
   166  00222C                     clear_3:
   167  00222C  6AEE               	clrf	postinc0,c
   168  00222E  06E8               	decf	wreg,f,c
   169  002230  E1FD               	bnz	clear_3
   170                           
   171                           ; Clear objects allocated to COMRAM (21 bytes)
   172  002232  EE00  F038         	lfsr	0,__pbssCOMRAM
   173  002236  0E15               	movlw	21
   174  002238                     clear_4:
   175  002238  6AEE               	clrf	postinc0,c
   176  00223A  06E8               	decf	wreg,f,c
   177  00223C  E1FD               	bnz	clear_4
   178  00223E                     end_of_initialization:
   179                           	opt stack 0
   180  00223E                     __end_of__initialization:
   181                           	opt stack 0
   182  00223E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  002240  6EF8               	movwf	tblptru,c
   184  002242  0100               	movlb	0
   185  002244  EFD6  F007         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           
   190                           	psect	bssCOMRAM
   191  000038                     __pbssCOMRAM:
   192                           	opt stack 0
   193  000038                     _NumOfOverflowL:
   194                           	opt stack 0
   195  000038                     	ds	2
   196  00003A                     _NumOfOverflowR:
   197                           	opt stack 0
   198  00003A                     	ds	2
   199  00003C                     _OverflowsL:
   200                           	opt stack 0
   201  00003C                     	ds	2
   202  00003E                     _OverflowsR:
   203                           	opt stack 0
   204  00003E                     	ds	2
   205  000040                     _Send:
   206                           	opt stack 0
   207  000040                     	ds	2
   208  000042                     _command_count:
   209                           	opt stack 0
   210  000042                     	ds	2
   211  000044                     _command_length:
   212                           	opt stack 0
   213  000044                     	ds	2
   214  000046                     _motor_count:
   215                           	opt stack 0
   216  000046                     	ds	2
   217  000048                     _motor_length:
   218                           	opt stack 0
   219  000048                     	ds	2
   220  00004A                     _MQ_Main_Willing_to_block:
   221                           	opt stack 0
   222  00004A                     	ds	1
   223  00004B                     _State:
   224                           	opt stack 0
   225  00004B                     	ds	1
   226  00004C                     _USART_Status:
   227                           	opt stack 0
   228  00004C                     	ds	1
   229                           tblptru	equ	0xFF8
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssBANK0
   234  0000C6                     __pbssBANK0:
   235                           	opt stack 0
   236  0000C6                     _ActiveL:
   237                           	opt stack 0
   238  0000C6                     	ds	2
   239  0000C8                     _ActiveR:
   240                           	opt stack 0
   241  0000C8                     	ds	2
   242  0000CA                     _DeltaOverflowL:
   243                           	opt stack 0
   244  0000CA                     	ds	2
   245  0000CC                     _DeltaOverflowR:
   246                           	opt stack 0
   247  0000CC                     	ds	2
   248  0000CE                     _motorDistance:
   249                           	opt stack 0
   250  0000CE                     	ds	2
   251  0000D0                     _i2c_mode:
   252                           	opt stack 0
   253  0000D0                     	ds	1
   254                           tblptru	equ	0xFF8
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	bssBANK1
   259  000194                     __pbssBANK1:
   260                           	opt stack 0
   261  000194                     _ToMainHigh_MQ:
   262                           	opt stack 0
   263  000194                     	ds	102
   264                           tblptru	equ	0xFF8
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssBANK2
   269  000200                     __pbssBANK2:
   270                           	opt stack 0
   271  000200                     _FromMainLow_MQ:
   272                           	opt stack 0
   273  000200                     	ds	102
   274  000266                     _ToMainLow_MQ:
   275                           	opt stack 0
   276  000266                     	ds	102
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssBANK3
   282  000300                     __pbssBANK3:
   283                           	opt stack 0
   284  000300                     _FromMainHigh_MQ:
   285                           	opt stack 0
   286  000300                     	ds	102
   287                           tblptru	equ	0xFF8
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	cstackBANK1
   292  000100                     __pcstackBANK1:
   293                           	opt stack 0
   294  000100                     ToMainHigh_sendmsg@length:
   295                           	opt stack 0
   296  000100                     ToMainLow_recvmsg@msgtype:
   297                           	opt stack 0
   298  000100                     ToMainHigh_recvmsg@msgtype:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x0
   302  000100                     	ds	1
   303  000101                     motor_lthread@msgtype:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x1
   307  000101                     	ds	1
   308  000102                     ToMainLow_recvmsg@data:
   309                           	opt stack 0
   310  000102                     ToMainHigh_recvmsg@data:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x2
   314  000102                     	ds	1
   315  000103                     motor_lthread@length:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x3
   319  000103                     	ds	2
   320  000105                     motor_lthread@msgbuffer:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x5
   324  000105                     	ds	2
   325  000107                     ??_motor_lthread:
   326                           
   327                           ; 0 bytes @ 0x7
   328  000107                     	ds	4
   329  00010B                     motor_lthread@message:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333  00010B                     	ds	1
   334  00010C                     motor_lthread@message_740:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0xC
   338  00010C                     	ds	1
   339  00010D                     motor_lthread@message_741:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0xD
   343  00010D                     	ds	1
   344  00010E                     motor_lthread@message_742:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0xE
   348  00010E                     	ds	2
   349  000110                     main@msgbuffer:
   350                           	opt stack 0
   351                           
   352                           ; 23 bytes @ 0x10
   353  000110                     	ds	23
   354  000127                     main@last_reg_recvd:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x27
   358  000127                     	ds	1
   359  000128                     main@t0thread_data:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x28
   363  000128                     	ds	2
   364  00012A                     main@t1thread_data:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2A
   368  00012A                     	ds	2
   369  00012C                     main@uthread_data:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x2C
   373  00012C                     	ds	2
   374  00012E                     main@uc:
   375                           	opt stack 0
   376                           
   377                           ; 23 bytes @ 0x2E
   378  00012E                     	ds	23
   379  000145                     main@msgtype:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x45
   383  000145                     	ds	1
   384  000146                     main@length:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x46
   388  000146                     	ds	1
   389  000147                     main@ic:
   390                           	opt stack 0
   391                           
   392                           ; 77 bytes @ 0x47
   393  000147                     	ds	77
   394                           tblptru	equ	0xFF8
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           
   398                           	psect	cstackBANK0
   399  000080                     __pcstackBANK0:
   400                           	opt stack 0
   401  000080                     ??i2_start_i2c_slave_reply:
   402  000080                     i2memcpy@d:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x0
   406  000080                     	ds	2
   407  000082                     i2start_i2c_slave_reply@distance:
   408                           	opt stack 0
   409  000082                     i2memcpy@s:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x2
   413  000082                     	ds	2
   414  000084                     i2send_msg@qptr:
   415                           	opt stack 0
   416  000084                     i2start_i2c_slave_reply@feetL:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x4
   420  000084                     	ds	2
   421  000086                     i2send_msg@length:
   422                           	opt stack 0
   423  000086                     i2start_i2c_slave_reply@inchesL:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x6
   427  000086                     	ds	1
   428  000087                     i2send_msg@msgtype:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x7
   432  000087                     	ds	1
   433  000088                     i2send_msg@data:
   434                           	opt stack 0
   435  000088                     i2start_i2c_slave_reply@feetR:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x8
   439  000088                     	ds	2
   440  00008A                     ??i2_send_msg:
   441  00008A                     i2start_i2c_slave_reply@inchesR:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0xA
   445  00008A                     	ds	1
   446  00008B                     i2send_msg@tlength:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0xB
   450  00008B                     	ds	2
   451  00008D                     i2send_msg@slot:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0xD
   455  00008D                     	ds	1
   456  00008E                     i2send_msg@qmsg:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0xE
   460  00008E                     	ds	2
   461  000090                     i2ToMainHigh_sendmsg@msgtype:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x10
   465  000090                     	ds	1
   466  000091                     i2ToMainHigh_sendmsg@data:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x11
   470  000091                     	ds	2
   471  000093                     i2ToMainHigh_sendmsg@length:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x13
   475  000093                     	ds	1
   476  000094                     ??_i2c_master_int_handler:
   477  000094                     ??_i2c_slave_int_handler:
   478  000094                     ??i2_timer0_int_handler:
   479                           
   480                           ; 0 bytes @ 0x14
   481  000094                     	ds	2
   482  000096                     i2c_slave_int_handler@error_buf:
   483                           	opt stack 0
   484                           
   485                           ; 3 bytes @ 0x16
   486  000096                     	ds	3
   487  000099                     i2c_slave_int_handler@data_written:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x19
   491  000099                     	ds	1
   492  00009A                     i2c_slave_int_handler@overrun_error:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x1A
   496  00009A                     	ds	1
   497  00009B                     i2c_slave_int_handler@i2c_data:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1B
   501  00009B                     	ds	1
   502  00009C                     i2c_slave_int_handler@msg_to_send:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1C
   506  00009C                     	ds	1
   507  00009D                     i2c_slave_int_handler@msg_ready:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1D
   511  00009D                     	ds	1
   512  00009E                     i2c_slave_int_handler@data_read:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x1E
   516  00009E                     	ds	1
   517  00009F                     ??_InterruptHandlerHigh:
   518                           
   519                           ; 0 bytes @ 0x1F
   520  00009F                     	ds	14
   521  0000AD                     ??_i2c_configure_slave:
   522  0000AD                     ?_ReadTimer1:
   523                           	opt stack 0
   524  0000AD                     ?_in_high_int:
   525                           	opt stack 0
   526  0000AD                     OpenTimer0@config:
   527                           	opt stack 0
   528  0000AD                     OpenTimer1@config:
   529                           	opt stack 0
   530  0000AD                     WriteUSART@data:
   531                           	opt stack 0
   532  0000AD                     Delay1KTCYx@unit:
   533                           	opt stack 0
   534  0000AD                     init_queue@qptr:
   535                           	opt stack 0
   536  0000AD                     check_msg@qptr:
   537                           	opt stack 0
   538  0000AD                     init_i2c@ic:
   539                           	opt stack 0
   540  0000AD                     init_uart_recv@uc:
   541                           	opt stack 0
   542  0000AD                     timer0_lthread@tptr:
   543                           	opt stack 0
   544  0000AD                     init_timer1_lthread@tptr:
   545                           	opt stack 0
   546  0000AD                     WriteTimer0@timer0:
   547                           	opt stack 0
   548  0000AD                     WriteTimer1@timer1:
   549                           	opt stack 0
   550  0000AD                     OpenUSART@spbrg:
   551                           	opt stack 0
   552  0000AD                     memcpy@d1:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x2D
   556  0000AD                     	ds	1
   557  0000AE                     i2c_configure_slave@addr:
   558                           	opt stack 0
   559  0000AE                     uart_lthread@uptr:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x2E
   563  0000AE                     	ds	1
   564  0000AF                     ??_init_uart_recv:
   565  0000AF                     ??_OpenUSART:
   566  0000AF                     ??_init_queue:
   567  0000AF                     ??_check_msg:
   568  0000AF                     ?_in_low_int:
   569                           	opt stack 0
   570  0000AF                     timer0_lthread@msgtype:
   571                           	opt stack 0
   572  0000AF                     WriteTimer0@timer:
   573                           	opt stack 0
   574  0000AF                     ReadTimer1@timer:
   575                           	opt stack 0
   576  0000AF                     WriteTimer1@timer:
   577                           	opt stack 0
   578  0000AF                     memcpy@s1:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x2F
   582  0000AF                     	ds	1
   583  0000B0                     init_queue@i:
   584                           	opt stack 0
   585  0000B0                     uart_lthread@msgtype:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x30
   589  0000B0                     	ds	1
   590  0000B1                     ??_init_queues:
   591  0000B1                     ?_in_main:
   592                           	opt stack 0
   593  0000B1                     start_i2c_slave_reply@msg:
   594                           	opt stack 0
   595  0000B1                     timer0_lthread@length:
   596                           	opt stack 0
   597  0000B1                     memcpy@n:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x31
   601  0000B1                     	ds	1
   602  0000B2                     OpenUSART@config:
   603                           	opt stack 0
   604  0000B2                     uart_lthread@length:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x32
   608  0000B2                     	ds	1
   609  0000B3                     ??_block_on_To_msgqueues:
   610  0000B3                     ??_start_i2c_slave_reply:
   611  0000B3                     timer0_lthread@msgbuffer:
   612                           	opt stack 0
   613  0000B3                     memcpy@d:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x33
   617  0000B3                     	ds	1
   618  0000B4                     uart_lthread@msgbuffer:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x34
   622  0000B4                     	ds	1
   623  0000B5                     start_i2c_slave_reply@distance:
   624                           	opt stack 0
   625  0000B5                     timer0_lthread@msgval:
   626                           	opt stack 0
   627  0000B5                     memcpy@s:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x35
   631  0000B5                     	ds	1
   632  0000B6                     ??_uart_lthread:
   633                           
   634                           ; 0 bytes @ 0x36
   635  0000B6                     	ds	1
   636  0000B7                     send_msg@qptr:
   637                           	opt stack 0
   638  0000B7                     recv_msg@qptr:
   639                           	opt stack 0
   640  0000B7                     start_i2c_slave_reply@feetL:
   641                           	opt stack 0
   642  0000B7                     uart_lthread@x:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x37
   646  0000B7                     	ds	2
   647  0000B9                     send_msg@length:
   648                           	opt stack 0
   649  0000B9                     recv_msg@maxlength:
   650                           	opt stack 0
   651  0000B9                     start_i2c_slave_reply@inchesL:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x39
   655  0000B9                     	ds	1
   656  0000BA                     send_msg@msgtype:
   657                           	opt stack 0
   658  0000BA                     recv_msg@msgtype:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x3A
   662  0000BA                     	ds	1
   663  0000BB                     send_msg@data:
   664                           	opt stack 0
   665  0000BB                     start_i2c_slave_reply@feetR:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x3B
   669  0000BB                     	ds	1
   670  0000BC                     recv_msg@data:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x3C
   674  0000BC                     	ds	1
   675  0000BD                     ??_send_msg:
   676  0000BD                     start_i2c_slave_reply@inchesR:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x3D
   680  0000BD                     	ds	1
   681  0000BE                     ??_recv_msg:
   682  0000BE                     send_msg@tlength:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x3E
   686  0000BE                     	ds	2
   687  0000C0                     send_msg@slot:
   688                           	opt stack 0
   689  0000C0                     recv_msg@slot:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x40
   693  0000C0                     	ds	1
   694  0000C1                     send_msg@qmsg:
   695                           	opt stack 0
   696  0000C1                     recv_msg@tlength:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x41
   700  0000C1                     	ds	2
   701  0000C3                     ToMainHigh_sendmsg@msgtype:
   702                           	opt stack 0
   703  0000C3                     recv_msg@qmsg:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x43
   707  0000C3                     	ds	1
   708  0000C4                     ToMainHigh_sendmsg@data:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x44
   712  0000C4                     	ds	1
   713  0000C5                     ToMainLow_recvmsg@maxlength:
   714                           	opt stack 0
   715  0000C5                     ToMainHigh_recvmsg@maxlength:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x45
   719  0000C5                     	ds	1
   720  0000C6                     tblptru	equ	0xFF8
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           
   724                           ; 0 bytes @ 0x46
   725                           
   726                           	psect	cstackCOMRAM
   727  000001                     __pcstackCOMRAM:
   728                           	opt stack 0
   729  000001                     ReadUSART@data:
   730                           	opt stack 0
   731  000001                     i1WriteTimer0@timer0:
   732                           	opt stack 0
   733  000001                     i1WriteTimer1@timer1:
   734                           	opt stack 0
   735  000001                     i1memcpy@d1:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x0
   739  000001                     	ds	2
   740  000003                     i1WriteTimer0@timer:
   741                           	opt stack 0
   742  000003                     i1WriteTimer1@timer:
   743                           	opt stack 0
   744  000003                     i1memcpy@s1:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x2
   748  000003                     	ds	2
   749  000005                     i1memcpy@n:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x4
   753  000005                     	ds	2
   754  000007                     i1memcpy@d:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x6
   758  000007                     	ds	2
   759  000009                     i1memcpy@s:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x8
   763  000009                     	ds	2
   764  00000B                     i1send_msg@qptr:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0xA
   768  00000B                     	ds	2
   769  00000D                     i1send_msg@length:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0xC
   773  00000D                     	ds	1
   774  00000E                     i1send_msg@msgtype:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0xD
   778  00000E                     	ds	1
   779  00000F                     i1send_msg@data:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0xE
   783  00000F                     	ds	2
   784  000011                     ??i1_send_msg:
   785                           
   786                           ; 0 bytes @ 0x10
   787  000011                     	ds	1
   788  000012                     i1send_msg@tlength:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x11
   792  000012                     	ds	2
   793  000014                     i1send_msg@slot:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x13
   797  000014                     	ds	1
   798  000015                     i1send_msg@qmsg:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x14
   802  000015                     	ds	2
   803  000017                     ToMainLow_sendmsg@msgtype:
   804                           	opt stack 0
   805  000017                     i1ToMainHigh_sendmsg@msgtype:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x16
   809  000017                     	ds	1
   810  000018                     ToMainLow_sendmsg@data:
   811                           	opt stack 0
   812  000018                     i1ToMainHigh_sendmsg@data:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x17
   816  000018                     	ds	2
   817  00001A                     ToMainLow_sendmsg@length:
   818                           	opt stack 0
   819  00001A                     i1ToMainHigh_sendmsg@length:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x19
   823  00001A                     	ds	1
   824  00001B                     ??_timer0_int_handler:
   825  00001B                     ??_timer1_int_handler:
   826  00001B                     ??_parseUART:
   827                           
   828                           ; 0 bytes @ 0x1A
   829  00001B                     	ds	1
   830  00001C                     timer1_int_handler@result:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x1B
   834  00001C                     	ds	4
   835  000020                     ??_uart_recv_int_handler:
   836                           
   837                           ; 0 bytes @ 0x1F
   838  000020                     	ds	1
   839  000021                     ??_InterruptHandlerLow:
   840                           
   841                           ; 0 bytes @ 0x20
   842  000021                     	ds	17
   843  000032                     ?i2_in_high_int:
   844                           	opt stack 0
   845  000032                     ?i2_ReadTimer1:
   846                           	opt stack 0
   847  000032                     handle_start@data_read:
   848                           	opt stack 0
   849  000032                     i2check_msg@qptr:
   850                           	opt stack 0
   851  000032                     i2WriteTimer0@timer0:
   852                           	opt stack 0
   853  000032                     i2memcpy@d1:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x31
   857  000032                     	ds	2
   858  000034                     ??i2_check_msg:
   859  000034                     ?i2_in_low_int:
   860                           	opt stack 0
   861  000034                     i2WriteTimer0@timer:
   862                           	opt stack 0
   863  000034                     i2ReadTimer1@timer:
   864                           	opt stack 0
   865  000034                     i2memcpy@s1:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x33
   869  000034                     	ds	2
   870  000036                     i2start_i2c_slave_reply@msg:
   871                           	opt stack 0
   872  000036                     i2memcpy@n:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x35
   876  000036                     	ds	2
   877  000038                     tblptru	equ	0xFF8
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           
   881                           ; 0 bytes @ 0x37
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 187 in file "source/main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  ic             77   71[BANK1 ] struct __i2c_comm
   892 ;;  msgbuffer      23   16[BANK1 ] unsigned char [23]
   893 ;;  uc             23   46[BANK1 ] struct __uart_comm
   894 ;;  uthread_data    2   44[BANK1 ] struct __uart_thread_str
   895 ;;  t1thread_dat    2   42[BANK1 ] struct __timer1_thread_s
   896 ;;  t0thread_dat    2   40[BANK1 ] struct __timer0_thread_s
   897 ;;  length          1   70[BANK1 ] char 
   898 ;;  msgtype         1   69[BANK1 ] unsigned char 
   899 ;;  last_reg_rec    1   39[BANK1 ] unsigned char 
   900 ;;  i               1    0        unsigned char 
   901 ;;  c               1    0        unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;		None               void
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0     132       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0     132       0       0
   915 ;;Total ram usage:      132 bytes
   916 ;; Hardware stack levels required when called:   16
   917 ;; This function calls:
   918 ;;		_OpenTimer0
   919 ;;		_OpenTimer1
   920 ;;		_OpenUSART
   921 ;;		_ToMainHigh_recvmsg
   922 ;;		_ToMainLow_recvmsg
   923 ;;		_block_on_To_msgqueues
   924 ;;		_enable_interrupts
   925 ;;		_i2c_configure_slave
   926 ;;		_init_i2c
   927 ;;		_init_queues
   928 ;;		_init_timer1_lthread
   929 ;;		_init_uart_recv
   930 ;;		_motor_lthread
   931 ;;		_start_i2c_slave_reply
   932 ;;		_timer0_lthread
   933 ;;		_uart_lthread
   934 ;; This function is called by:
   935 ;;		Startup code after reset
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text0
   940  000FAC                     __ptext0:
   941                           	opt stack 0
   942  000FAC                     _main:
   943                           	opt stack 15
   944                           
   945                           ;main.c: 188: char c;
   946                           ;main.c: 189: signed char length;
   947                           ;main.c: 190: unsigned char msgtype;
   948                           ;main.c: 191: unsigned char last_reg_recvd;
   949                           ;main.c: 192: uart_comm uc;
   950                           ;main.c: 193: i2c_comm ic;
   951                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   952                           ;main.c: 195: unsigned char i;
   953                           ;main.c: 196: uart_thread_struct uthread_data;
   954                           ;main.c: 197: timer1_thread_struct t1thread_data;
   955                           ;main.c: 198: timer0_thread_struct t0thread_data;
   956                           ;main.c: 206: OSCCON = 0x82;
   957                           
   958                           ;incstack = 0
   959  000FAC  0E82               	movlw	130
   960  000FAE  6ED3               	movwf	4051,c	;volatile
   961                           
   962                           ;main.c: 207: OSCTUNEbits.PLLEN = 1;
   963  000FB0  8C9B               	bsf	3995,6,c	;volatile
   964                           
   965                           ;main.c: 225: init_uart_recv(&uc);
   966  000FB2  0101               	movlb	1	; () banked
   967  000FB4  0E01               	movlw	high main@uc
   968  000FB6  0100               	movlb	0	; () banked
   969  000FB8  0100               	movlb	0	; () banked
   970  000FBA  6FAE               	movwf	(init_uart_recv@uc+1)& (0+255),b
   971  000FBC  0101               	movlb	1	; () banked
   972  000FBE  0E2E               	movlw	low main@uc
   973  000FC0  0100               	movlb	0	; () banked
   974  000FC2  0100               	movlb	0	; () banked
   975  000FC4  6FAD               	movwf	init_uart_recv@uc& (0+255),b
   976  000FC6  EC6B  F012         	call	_init_uart_recv	;wreg free
   977                           
   978                           ;main.c: 228: init_i2c(&ic);
   979  000FCA  0101               	movlb	1	; () banked
   980  000FCC  0E01               	movlw	high main@ic
   981  000FCE  0100               	movlb	0	; () banked
   982  000FD0  0100               	movlb	0	; () banked
   983  000FD2  6FAE               	movwf	(init_i2c@ic+1)& (0+255),b
   984  000FD4  0101               	movlb	1	; () banked
   985  000FD6  0E47               	movlw	low main@ic
   986  000FD8  0100               	movlb	0	; () banked
   987  000FDA  0100               	movlb	0	; () banked
   988  000FDC  6FAD               	movwf	init_i2c@ic& (0+255),b
   989  000FDE  ECFD  F00C         	call	_init_i2c	;wreg free
   990                           
   991                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   992  000FE2  0101               	movlb	1	; () banked
   993  000FE4  0E01               	movlw	high main@t1thread_data
   994  000FE6  0100               	movlb	0	; () banked
   995  000FE8  0100               	movlb	0	; () banked
   996  000FEA  6FAE               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   997  000FEC  0101               	movlb	1	; () banked
   998  000FEE  0E2A               	movlw	low main@t1thread_data
   999  000FF0  0100               	movlb	0	; () banked
  1000  000FF2  0100               	movlb	0	; () banked
  1001  000FF4  6FAD               	movwf	init_timer1_lthread@tptr& (0+255),b
  1002  000FF6  EC26  F013         	call	_init_timer1_lthread	;wreg free
  1003                           
  1004                           ;main.c: 234: init_queues();
  1005  000FFA  ECBC  F00F         	call	_init_queues	;wreg free
  1006                           
  1007                           ;main.c: 238: PORTB = 0xFF;
  1008  000FFE  6881               	setf	3969,c	;volatile
  1009                           
  1010                           ;main.c: 253: OpenTimer0(0b11111111 & 0b11111111 & 0b11101111 & 0b11111111 & 0b11111111);
  1011  001000  0EEF               	movlw	239
  1012  001002  EC80  F012         	call	_OpenTimer0
  1013                           
  1014                           ;main.c: 254: OpenTimer1(0b11111111& 0b11111111 & 0b10111111 & 0b11111111 & 0b11110111 &
      +                           0b11001111);
  1015  001006  0E87               	movlw	135
  1016  001008  ECE7  F011         	call	_OpenTimer1
  1017                           
  1018                           ;main.c: 271: IPR1bits.TMR1IP = 0;
  1019  00100C  909F               	bcf	3999,0,c	;volatile
  1020                           
  1021                           ;main.c: 273: IPR1bits.RCIP = 0;
  1022  00100E  9A9F               	bcf	3999,5,c	;volatile
  1023                           
  1024                           ;main.c: 275: IPR1bits.SSPIP = 1;
  1025  001010  869F               	bsf	3999,3,c	;volatile
  1026                           
  1027                           ;main.c: 284: i2c_configure_slave(0x9E);
  1028  001012  0E9E               	movlw	158
  1029  001014  ECCB  F011         	call	_i2c_configure_slave
  1030                           
  1031                           ;main.c: 299: PIE1bits.SSPIE = 1;
  1032  001018  869D               	bsf	3997,3,c	;volatile
  1033                           
  1034                           ;main.c: 310: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1035                           ;main.c: 311: 0b11111111 & 0b11101111, 0x26);
  1036  00101A  0E00               	movlw	0
  1037  00101C  0100               	movlb	0	; () banked
  1038  00101E  0100               	movlb	0	; () banked
  1039  001020  6FAE               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1040  001022  0E26               	movlw	38
  1041  001024  0100               	movlb	0	; () banked
  1042  001026  6FAD               	movwf	OpenUSART@spbrg& (0+255),b
  1043  001028  0E6C               	movlw	108
  1044  00102A  EC7D  F00E         	call	_OpenUSART
  1045                           
  1046                           ;main.c: 321: enable_interrupts();
  1047  00102E  EC62  F013         	call	_enable_interrupts	;wreg free
  1048                           
  1049                           ;main.c: 342: TRISCbits.RC0 = 1;
  1050  001032  8094               	bsf	3988,0,c	;volatile
  1051  001034                     l3901:
  1052                           
  1053                           ;main.c: 347: block_on_To_msgqueues();
  1054  001034  EC07  F00F         	call	_block_on_To_msgqueues	;wreg free
  1055                           
  1056                           ;main.c: 354: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
  1057  001038  0101               	movlb	1	; () banked
  1058  00103A  0E01               	movlw	high main@msgtype
  1059  00103C  0101               	movlb	1	; () banked
  1060  00103E  0101               	movlb	1	; () banked
  1061  001040  6F01               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1062  001042  0101               	movlb	1	; () banked
  1063  001044  0E45               	movlw	low main@msgtype
  1064  001046  0101               	movlb	1	; () banked
  1065  001048  0101               	movlb	1	; () banked
  1066  00104A  6F00               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1067  00104C  0101               	movlb	1	; () banked
  1068  00104E  0E01               	movlw	high main@msgbuffer
  1069  001050  0101               	movlb	1	; () banked
  1070  001052  0101               	movlb	1	; () banked
  1071  001054  6F03               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1072  001056  0101               	movlb	1	; () banked
  1073  001058  0E10               	movlw	low main@msgbuffer
  1074  00105A  0101               	movlb	1	; () banked
  1075  00105C  0101               	movlb	1	; () banked
  1076  00105E  6F02               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1077  001060  0E16               	movlw	22
  1078  001062  EC8A  F011         	call	_ToMainHigh_recvmsg
  1079  001066  0101               	movlb	1	; () banked
  1080  001068  0101               	movlb	1	; () banked
  1081  00106A  6F46               	movwf	main@length& (0+255),b
  1082                           
  1083                           ; BSR set to: 1
  1084                           ;main.c: 355: if (length < 0) {
  1085  00106C  0101               	movlb	1	; () banked
  1086  00106E  0101               	movlb	1	; () banked
  1087  001070  BF46               	btfsc	main@length& (0+255),7,b
  1088  001072  D0BC               	goto	l3923
  1089  001074  D0A3               	goto	l3921
  1090  001076                     l3909:
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;main.c: 363: {
  1094                           ;main.c: 364: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1095  001076  0101               	movlb	1	; () banked
  1096  001078  0E01               	movlw	high main@t0thread_data
  1097  00107A  0100               	movlb	0	; () banked
  1098  00107C  0100               	movlb	0	; () banked
  1099  00107E  6FAE               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1100  001080  0101               	movlb	1	; () banked
  1101  001082  0E28               	movlw	low main@t0thread_data
  1102  001084  0100               	movlb	0	; () banked
  1103  001086  0100               	movlb	0	; () banked
  1104  001088  6FAD               	movwf	timer0_lthread@tptr& (0+255),b
  1105  00108A  0101               	movlb	1	; () banked
  1106  00108C  0100               	movlb	0	; () banked
  1107  00108E  C145  F0AF         	movff	main@msgtype,timer0_lthread@msgtype
  1108  001092  0100               	movlb	0	; () banked
  1109  001094  0100               	movlb	0	; () banked
  1110  001096  6BB0               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1111  001098  0101               	movlb	1	; () banked
  1112  00109A  0101               	movlb	1	; () banked
  1113  00109C  5146               	movf	main@length& (0+255),w,b
  1114  00109E  0100               	movlb	0	; () banked
  1115  0010A0  0100               	movlb	0	; () banked
  1116  0010A2  6FB1               	movwf	timer0_lthread@length& (0+255),b
  1117  0010A4  0100               	movlb	0	; () banked
  1118  0010A6  6BB2               	clrf	(timer0_lthread@length+1)& (0+255),b
  1119  0010A8  0100               	movlb	0	; () banked
  1120  0010AA  BFB1               	btfsc	timer0_lthread@length& (0+255),7,b
  1121  0010AC  07B2               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1122  0010AE  0101               	movlb	1	; () banked
  1123  0010B0  0E01               	movlw	high main@msgbuffer
  1124  0010B2  0100               	movlb	0	; () banked
  1125  0010B4  0100               	movlb	0	; () banked
  1126  0010B6  6FB4               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1127  0010B8  0101               	movlb	1	; () banked
  1128  0010BA  0E10               	movlw	low main@msgbuffer
  1129  0010BC  0100               	movlb	0	; () banked
  1130  0010BE  0100               	movlb	0	; () banked
  1131  0010C0  6FB3               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1132  0010C2  EC02  F013         	call	_timer0_lthread	;wreg free
  1133                           
  1134                           ;main.c: 365: break;
  1135  0010C6  D092               	goto	l3923
  1136  0010C8                     l121:
  1137                           
  1138                           ; BSR set to: 1
  1139                           ;main.c: 372: {
  1140                           ;main.c: 375: last_reg_recvd = msgbuffer[0];
  1141  0010C8  C110  F127         	movff	main@msgbuffer,main@last_reg_recvd
  1142                           
  1143                           ;main.c: 376: break;
  1144  0010CC  D08F               	goto	l3923
  1145  0010CE                     l3911:
  1146                           
  1147                           ; BSR set to: 1
  1148                           ;main.c: 379: {
  1149                           ;main.c: 387: start_i2c_slave_reply(length, msgbuffer);
  1150  0010CE  0101               	movlb	1	; () banked
  1151  0010D0  0E01               	movlw	high main@msgbuffer
  1152  0010D2  0100               	movlb	0	; () banked
  1153  0010D4  0100               	movlb	0	; () banked
  1154  0010D6  6FB2               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1155  0010D8  0101               	movlb	1	; () banked
  1156  0010DA  0E10               	movlw	low main@msgbuffer
  1157  0010DC  0100               	movlb	0	; () banked
  1158  0010DE  0100               	movlb	0	; () banked
  1159  0010E0  6FB1               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1160  0010E2  0101               	movlb	1	; () banked
  1161  0010E4  0101               	movlb	1	; () banked
  1162  0010E6  5146               	movf	main@length& (0+255),w,b
  1163  0010E8  EC49  F009         	call	_start_i2c_slave_reply
  1164                           
  1165                           ;main.c: 388: break;
  1166  0010EC  D07F               	goto	l3923
  1167  0010EE                     l3913:
  1168                           
  1169                           ;main.c: 391: {
  1170                           ;main.c: 392: motor_lthread(msgtype,length,msgbuffer);
  1171  0010EE  0101               	movlb	1	; () banked
  1172  0010F0  0101               	movlb	1	; () banked
  1173  0010F2  C145  F101         	movff	main@msgtype,motor_lthread@msgtype
  1174  0010F6  0101               	movlb	1	; () banked
  1175  0010F8  0101               	movlb	1	; () banked
  1176  0010FA  6B02               	clrf	(motor_lthread@msgtype+1)& (0+255),b
  1177  0010FC  0101               	movlb	1	; () banked
  1178  0010FE  0101               	movlb	1	; () banked
  1179  001100  5146               	movf	main@length& (0+255),w,b
  1180  001102  0101               	movlb	1	; () banked
  1181  001104  0101               	movlb	1	; () banked
  1182  001106  6F03               	movwf	motor_lthread@length& (0+255),b
  1183  001108  0101               	movlb	1	; () banked
  1184  00110A  6B04               	clrf	(motor_lthread@length+1)& (0+255),b
  1185  00110C  0101               	movlb	1	; () banked
  1186  00110E  BF03               	btfsc	motor_lthread@length& (0+255),7,b
  1187  001110  0704               	decf	(motor_lthread@length+1)& (0+255),f,b
  1188  001112  0101               	movlb	1	; () banked
  1189  001114  0E01               	movlw	high main@msgbuffer
  1190  001116  0101               	movlb	1	; () banked
  1191  001118  0101               	movlb	1	; () banked
  1192  00111A  6F06               	movwf	(motor_lthread@msgbuffer+1)& (0+255),b
  1193  00111C  0101               	movlb	1	; () banked
  1194  00111E  0E10               	movlw	low main@msgbuffer
  1195  001120  0101               	movlb	1	; () banked
  1196  001122  0101               	movlb	1	; () banked
  1197  001124  6F05               	movwf	motor_lthread@msgbuffer& (0+255),b
  1198  001126  EC4C  F006         	call	_motor_lthread	;wreg free
  1199                           
  1200                           ;main.c: 393: break;
  1201  00112A  D060               	goto	l3923
  1202  00112C                     l3915:
  1203                           
  1204                           ;main.c: 396: {
  1205                           ;main.c: 397: motor_lthread(msgtype,length,msgbuffer);
  1206  00112C  0101               	movlb	1	; () banked
  1207  00112E  0101               	movlb	1	; () banked
  1208  001130  C145  F101         	movff	main@msgtype,motor_lthread@msgtype
  1209  001134  0101               	movlb	1	; () banked
  1210  001136  0101               	movlb	1	; () banked
  1211  001138  6B02               	clrf	(motor_lthread@msgtype+1)& (0+255),b
  1212  00113A  0101               	movlb	1	; () banked
  1213  00113C  0101               	movlb	1	; () banked
  1214  00113E  5146               	movf	main@length& (0+255),w,b
  1215  001140  0101               	movlb	1	; () banked
  1216  001142  0101               	movlb	1	; () banked
  1217  001144  6F03               	movwf	motor_lthread@length& (0+255),b
  1218  001146  0101               	movlb	1	; () banked
  1219  001148  6B04               	clrf	(motor_lthread@length+1)& (0+255),b
  1220  00114A  0101               	movlb	1	; () banked
  1221  00114C  BF03               	btfsc	motor_lthread@length& (0+255),7,b
  1222  00114E  0704               	decf	(motor_lthread@length+1)& (0+255),f,b
  1223  001150  0101               	movlb	1	; () banked
  1224  001152  0E01               	movlw	high main@msgbuffer
  1225  001154  0101               	movlb	1	; () banked
  1226  001156  0101               	movlb	1	; () banked
  1227  001158  6F06               	movwf	(motor_lthread@msgbuffer+1)& (0+255),b
  1228  00115A  0101               	movlb	1	; () banked
  1229  00115C  0E10               	movlw	low main@msgbuffer
  1230  00115E  0101               	movlb	1	; () banked
  1231  001160  0101               	movlb	1	; () banked
  1232  001162  6F05               	movwf	motor_lthread@msgbuffer& (0+255),b
  1233  001164  EC4C  F006         	call	_motor_lthread	;wreg free
  1234                           
  1235                           ;main.c: 398: break;
  1236  001168  D041               	goto	l3923
  1237  00116A                     l3917:
  1238                           
  1239                           ;main.c: 401: {
  1240                           ;main.c: 402: uart_lthread(&uthread_data,msgtype,length,msgbuffer);
  1241  00116A  0101               	movlb	1	; () banked
  1242  00116C  0E01               	movlw	high main@uthread_data
  1243  00116E  0100               	movlb	0	; () banked
  1244  001170  0100               	movlb	0	; () banked
  1245  001172  6FAF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1246  001174  0101               	movlb	1	; () banked
  1247  001176  0E2C               	movlw	low main@uthread_data
  1248  001178  0100               	movlb	0	; () banked
  1249  00117A  0100               	movlb	0	; () banked
  1250  00117C  6FAE               	movwf	uart_lthread@uptr& (0+255),b
  1251  00117E  0101               	movlb	1	; () banked
  1252  001180  0100               	movlb	0	; () banked
  1253  001182  C145  F0B0         	movff	main@msgtype,uart_lthread@msgtype
  1254  001186  0100               	movlb	0	; () banked
  1255  001188  0100               	movlb	0	; () banked
  1256  00118A  6BB1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1257  00118C  0101               	movlb	1	; () banked
  1258  00118E  0101               	movlb	1	; () banked
  1259  001190  5146               	movf	main@length& (0+255),w,b
  1260  001192  0100               	movlb	0	; () banked
  1261  001194  0100               	movlb	0	; () banked
  1262  001196  6FB2               	movwf	uart_lthread@length& (0+255),b
  1263  001198  0100               	movlb	0	; () banked
  1264  00119A  6BB3               	clrf	(uart_lthread@length+1)& (0+255),b
  1265  00119C  0100               	movlb	0	; () banked
  1266  00119E  BFB2               	btfsc	uart_lthread@length& (0+255),7,b
  1267  0011A0  07B3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1268  0011A2  0101               	movlb	1	; () banked
  1269  0011A4  0E01               	movlw	high main@msgbuffer
  1270  0011A6  0100               	movlb	0	; () banked
  1271  0011A8  0100               	movlb	0	; () banked
  1272  0011AA  6FB5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1273  0011AC  0101               	movlb	1	; () banked
  1274  0011AE  0E10               	movlw	low main@msgbuffer
  1275  0011B0  0100               	movlb	0	; () banked
  1276  0011B2  0100               	movlb	0	; () banked
  1277  0011B4  6FB4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1278  0011B6  ECC8  F00D         	call	_uart_lthread	;wreg free
  1279                           
  1280                           ;main.c: 403: break;
  1281  0011BA  D018               	goto	l3923
  1282  0011BC                     l3921:
  1283  0011BC  0101               	movlb	1	; () banked
  1284  0011BE  0101               	movlb	1	; () banked
  1285  0011C0  5145               	movf	main@msgtype& (0+255),w,b
  1286                           
  1287                           ; Switch size 1, requested type "space"
  1288                           ; Number of cases is 7, Range of values is 10 to 51
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte           22    12 (average)
  1292                           ;	Chosen strategy is simple_byte
  1293  0011C2  0A0A               	xorlw	10	; case 10
  1294  0011C4  B4D8               	btfsc	status,2,c
  1295  0011C6  D757               	goto	l3909
  1296  0011C8  0A22               	xorlw	34	; case 40
  1297  0011CA  B4D8               	btfsc	status,2,c
  1298  0011CC  D00F               	goto	l3923
  1299  0011CE  0A01               	xorlw	1	; case 41
  1300  0011D0  B4D8               	btfsc	status,2,c
  1301  0011D2  D77A               	goto	l121
  1302  0011D4  0A03               	xorlw	3	; case 42
  1303  0011D6  B4D8               	btfsc	status,2,c
  1304  0011D8  D77A               	goto	l3911
  1305  0011DA  0A05               	xorlw	5	; case 47
  1306  0011DC  B4D8               	btfsc	status,2,c
  1307  0011DE  D7C5               	goto	l3917
  1308  0011E0  0A1F               	xorlw	31	; case 48
  1309  0011E2  B4D8               	btfsc	status,2,c
  1310  0011E4  D784               	goto	l3913
  1311  0011E6  0A03               	xorlw	3	; case 51
  1312  0011E8  B4D8               	btfsc	status,2,c
  1313  0011EA  D7A0               	goto	l3915
  1314  0011EC                     l3923:
  1315                           
  1316                           ;main.c: 411: }
  1317                           ;main.c: 414: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
  1318  0011EC  0101               	movlb	1	; () banked
  1319  0011EE  0E01               	movlw	high main@msgtype
  1320  0011F0  0101               	movlb	1	; () banked
  1321  0011F2  0101               	movlb	1	; () banked
  1322  0011F4  6F01               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1323  0011F6  0101               	movlb	1	; () banked
  1324  0011F8  0E45               	movlw	low main@msgtype
  1325  0011FA  0101               	movlb	1	; () banked
  1326  0011FC  0101               	movlb	1	; () banked
  1327  0011FE  6F00               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1328  001200  0101               	movlb	1	; () banked
  1329  001202  0E01               	movlw	high main@msgbuffer
  1330  001204  0101               	movlb	1	; () banked
  1331  001206  0101               	movlb	1	; () banked
  1332  001208  6F03               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1333  00120A  0101               	movlb	1	; () banked
  1334  00120C  0E10               	movlw	low main@msgbuffer
  1335  00120E  0101               	movlb	1	; () banked
  1336  001210  0101               	movlb	1	; () banked
  1337  001212  6F02               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1338  001214  0E16               	movlw	22
  1339  001216  EC69  F011         	call	_ToMainLow_recvmsg
  1340  00121A  0101               	movlb	1	; () banked
  1341  00121C  0101               	movlb	1	; () banked
  1342  00121E  6F46               	movwf	main@length& (0+255),b
  1343                           
  1344                           ; BSR set to: 1
  1345                           ;main.c: 415: if (length < 0) {
  1346  001220  0101               	movlb	1	; () banked
  1347  001222  0101               	movlb	1	; () banked
  1348  001224  BF46               	btfsc	main@length& (0+255),7,b
  1349  001226  D706               	goto	l3901
  1350  001228  D029               	goto	l3933
  1351  00122A                     l3929:
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 428: case 31:
  1355                           ;main.c: 429: {
  1356                           ;main.c: 430: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1357  00122A  0101               	movlb	1	; () banked
  1358  00122C  0E01               	movlw	high main@uthread_data
  1359  00122E  0100               	movlb	0	; () banked
  1360  001230  0100               	movlb	0	; () banked
  1361  001232  6FAF               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1362  001234  0101               	movlb	1	; () banked
  1363  001236  0E2C               	movlw	low main@uthread_data
  1364  001238  0100               	movlb	0	; () banked
  1365  00123A  0100               	movlb	0	; () banked
  1366  00123C  6FAE               	movwf	uart_lthread@uptr& (0+255),b
  1367  00123E  0101               	movlb	1	; () banked
  1368  001240  0100               	movlb	0	; () banked
  1369  001242  C145  F0B0         	movff	main@msgtype,uart_lthread@msgtype
  1370  001246  0100               	movlb	0	; () banked
  1371  001248  0100               	movlb	0	; () banked
  1372  00124A  6BB1               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1373  00124C  0101               	movlb	1	; () banked
  1374  00124E  0101               	movlb	1	; () banked
  1375  001250  5146               	movf	main@length& (0+255),w,b
  1376  001252  0100               	movlb	0	; () banked
  1377  001254  0100               	movlb	0	; () banked
  1378  001256  6FB2               	movwf	uart_lthread@length& (0+255),b
  1379  001258  0100               	movlb	0	; () banked
  1380  00125A  6BB3               	clrf	(uart_lthread@length+1)& (0+255),b
  1381  00125C  0100               	movlb	0	; () banked
  1382  00125E  BFB2               	btfsc	uart_lthread@length& (0+255),7,b
  1383  001260  07B3               	decf	(uart_lthread@length+1)& (0+255),f,b
  1384  001262  0101               	movlb	1	; () banked
  1385  001264  0E01               	movlw	high main@msgbuffer
  1386  001266  0100               	movlb	0	; () banked
  1387  001268  0100               	movlb	0	; () banked
  1388  00126A  6FB5               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1389  00126C  0101               	movlb	1	; () banked
  1390  00126E  0E10               	movlw	low main@msgbuffer
  1391  001270  0100               	movlb	0	; () banked
  1392  001272  0100               	movlb	0	; () banked
  1393  001274  6FB4               	movwf	uart_lthread@msgbuffer& (0+255),b
  1394  001276  ECC8  F00D         	call	_uart_lthread	;wreg free
  1395                           
  1396                           ;main.c: 431: break;
  1397  00127A  D6DC               	goto	l3901
  1398  00127C                     l3933:
  1399  00127C  0101               	movlb	1	; () banked
  1400  00127E  0101               	movlb	1	; () banked
  1401  001280  5145               	movf	main@msgtype& (0+255),w,b
  1402                           
  1403                           ; Switch size 1, requested type "space"
  1404                           ; Number of cases is 3, Range of values is 30 to 50
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           10     6 (average)
  1408                           ;	Chosen strategy is simple_byte
  1409  001282  0A1E               	xorlw	30	; case 30
  1410  001284  B4D8               	btfsc	status,2,c
  1411  001286  D7D1               	goto	l3929
  1412  001288  0A01               	xorlw	1	; case 31
  1413  00128A  B4D8               	btfsc	status,2,c
  1414  00128C  D7CE               	goto	l3929
  1415  00128E  0A2D               	xorlw	45	; case 50
  1416  001290  D6D1               	goto	l3901
  1417  001292                     __end_of_main:
  1418                           	opt stack 0
  1419                           tblptru	equ	0xFF8
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _uart_lthread *****************
  1425 ;; Defined at:
  1426 ;;		line 9 in file "source/uart_thread.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  uptr            2   46[BANK0 ] PTR struct __uart_thread
  1429 ;;		 -> main@uthread_data(2), 
  1430 ;;  msgtype         2   48[BANK0 ] int 
  1431 ;;  length          2   50[BANK0 ] int 
  1432 ;;  msgbuffer       2   52[BANK0 ] PTR unsigned char 
  1433 ;;		 -> main@msgbuffer(23), 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  x               2   55[BANK0 ] int 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  2   46[BANK0 ] int 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1445 ;;      Params:         0       8       0       0       0
  1446 ;;      Locals:         0       2       0       0       0
  1447 ;;      Temps:          0       1       0       0       0
  1448 ;;      Totals:         0      11       0       0       0
  1449 ;;Total ram usage:       11 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:   13
  1452 ;; This function calls:
  1453 ;;		_WriteUSART
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text1
  1460  001B90                     __ptext1:
  1461                           	opt stack 0
  1462  001B90                     _uart_lthread:
  1463                           	opt stack 17
  1464                           
  1465                           ;uart_thread.c: 10: if (msgtype == 30) {
  1466                           
  1467                           ; BSR set to: 1
  1468                           ;incstack = 0
  1469  001B90  0100               	movlb	0	; () banked
  1470  001B92  0100               	movlb	0	; () banked
  1471  001B94  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1472  001B96  0A1E               	xorlw	30
  1473  001B98  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1474  001B9A  B4D8               	btfsc	status,2,c
  1475  001B9C  0012               	return	
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1479                           
  1480                           ; BSR set to: 0
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;uart_thread.c: 11: }
  1484  001B9E  0100               	movlb	0	; () banked
  1485  001BA0  0100               	movlb	0	; () banked
  1486  001BA2  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1487  001BA4  0A1F               	xorlw	31
  1488  001BA6  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1489  001BA8  A4D8               	btfss	status,2,c
  1490  001BAA  D011               	goto	l3065
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1494  001BAC  0100               	movlb	0	; () banked
  1495  001BAE  0100               	movlb	0	; () banked
  1496  001BB0  51B2               	movf	uart_lthread@length& (0+255),w,b
  1497  001BB2  0100               	movlb	0	; () banked
  1498  001BB4  0100               	movlb	0	; () banked
  1499  001BB6  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1500  001BB8  6ED9               	movwf	fsr2l,c
  1501  001BBA  0100               	movlb	0	; () banked
  1502  001BBC  0100               	movlb	0	; () banked
  1503  001BBE  51B3               	movf	(uart_lthread@length+1)& (0+255),w,b
  1504  001BC0  0100               	movlb	0	; () banked
  1505  001BC2  0100               	movlb	0	; () banked
  1506  001BC4  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1507  001BC6  6EDA               	movwf	fsr2h,c
  1508  001BC8  0E00               	movlw	0
  1509  001BCA  6EDF               	movwf	indf2,c
  1510                           
  1511                           ;uart_thread.c: 18: }
  1512  001BCC  0012               	return	
  1513  001BCE                     l3065:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;uart_thread.c: 19: else if(msgtype == 47)
  1517  001BCE  0100               	movlb	0	; () banked
  1518  001BD0  0100               	movlb	0	; () banked
  1519  001BD2  51B0               	movf	uart_lthread@msgtype& (0+255),w,b
  1520  001BD4  0A2F               	xorlw	47
  1521  001BD6  11B1               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1522  001BD8  A4D8               	btfss	status,2,c
  1523  001BDA  0012               	return	
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;uart_thread.c: 20: {
  1527                           ;uart_thread.c: 22: int x = 0;
  1528  001BDC  0E00               	movlw	0
  1529  001BDE  0100               	movlb	0	; () banked
  1530  001BE0  0100               	movlb	0	; () banked
  1531  001BE2  6FB8               	movwf	(uart_lthread@x+1)& (0+255),b
  1532  001BE4  0E00               	movlw	0
  1533  001BE6  0100               	movlb	0	; () banked
  1534  001BE8  6FB7               	movwf	uart_lthread@x& (0+255),b
  1535                           
  1536                           ;uart_thread.c: 24: for(x = 0; x < length; x++ )
  1537  001BEA  0E00               	movlw	0
  1538  001BEC  0100               	movlb	0	; () banked
  1539  001BEE  0100               	movlb	0	; () banked
  1540  001BF0  6FB8               	movwf	(uart_lthread@x+1)& (0+255),b
  1541  001BF2  0E00               	movlw	0
  1542  001BF4  0100               	movlb	0	; () banked
  1543  001BF6  6FB7               	movwf	uart_lthread@x& (0+255),b
  1544  001BF8  D017               	goto	l3073
  1545  001BFA                     l534:
  1546  001BFA  A2AC               	btfss	4012,1,c	;volatile
  1547  001BFC  D7FE               	goto	l534
  1548                           
  1549                           ;uart_thread.c: 27: WriteUSART(msgbuffer[x]);
  1550  001BFE  0100               	movlb	0	; () banked
  1551  001C00  0100               	movlb	0	; () banked
  1552  001C02  51B7               	movf	uart_lthread@x& (0+255),w,b
  1553  001C04  0100               	movlb	0	; () banked
  1554  001C06  0100               	movlb	0	; () banked
  1555  001C08  25B4               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1556  001C0A  6ED9               	movwf	fsr2l,c
  1557  001C0C  0100               	movlb	0	; () banked
  1558  001C0E  0100               	movlb	0	; () banked
  1559  001C10  51B8               	movf	(uart_lthread@x+1)& (0+255),w,b
  1560  001C12  0100               	movlb	0	; () banked
  1561  001C14  0100               	movlb	0	; () banked
  1562  001C16  21B5               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1563  001C18  6EDA               	movwf	fsr2h,c
  1564  001C1A  50DF               	movf	indf2,w,c
  1565  001C1C  ECF8  F012         	call	_WriteUSART
  1566  001C20  0100               	movlb	0	; () banked
  1567  001C22  0100               	movlb	0	; () banked
  1568  001C24  4BB7               	infsnz	uart_lthread@x& (0+255),f,b
  1569  001C26  2BB8               	incf	(uart_lthread@x+1)& (0+255),f,b
  1570  001C28                     l3073:
  1571                           
  1572                           ; BSR set to: 0
  1573  001C28  0100               	movlb	0	; () banked
  1574  001C2A  0100               	movlb	0	; () banked
  1575  001C2C  51B8               	movf	(uart_lthread@x+1)& (0+255),w,b
  1576  001C2E  0A80               	xorlw	128
  1577  001C30  0100               	movlb	0	; () banked
  1578  001C32  6FB6               	movwf	??_uart_lthread& (0+255),b
  1579  001C34  0100               	movlb	0	; () banked
  1580  001C36  51B2               	movf	uart_lthread@length& (0+255),w,b
  1581  001C38  0100               	movlb	0	; () banked
  1582  001C3A  0100               	movlb	0	; () banked
  1583  001C3C  5DB7               	subwf	uart_lthread@x& (0+255),w,b
  1584  001C3E  0100               	movlb	0	; () banked
  1585  001C40  0100               	movlb	0	; () banked
  1586  001C42  51B3               	movf	(uart_lthread@length+1)& (0+255),w,b
  1587  001C44  0A80               	xorlw	128
  1588  001C46  0100               	movlb	0	; () banked
  1589  001C48  59B6               	subwfb	??_uart_lthread& (0+255),w,b
  1590  001C4A  B0D8               	btfsc	status,0,c
  1591                           
  1592                           ; BSR set to: 0
  1593                           
  1594                           ; BSR set to: 0
  1595                           
  1596                           ; BSR set to: 0
  1597                           
  1598                           ; BSR set to: 0
  1599                           
  1600                           ; BSR set to: 0
  1601  001C4C  0012               	return	
  1602  001C4E  D7D5               	goto	l534
  1603  001C50                     __end_of_uart_lthread:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           indf2	equ	0xFDF
  1609                           fsr2h	equ	0xFDA
  1610                           fsr2l	equ	0xFD9
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _WriteUSART *****************
  1614 ;; Defined at:
  1615 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  data            1    wreg     unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  data            1   45[BANK0 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       1       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         0       1       0       0       0
  1633 ;;Total ram usage:        1 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:   12
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_uart_lthread
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text2
  1644  0025F0                     __ptext2:
  1645                           	opt stack 0
  1646  0025F0                     _WriteUSART:
  1647                           	opt stack 17
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;incstack = 0
  1651                           ;WriteUSART@data stored from wreg
  1652  0025F0  CFE8 F0AD          	movff	wreg,WriteUSART@data
  1653  0025F4  ACAC               	btfss	4012,6,c	;volatile
  1654  0025F6  D003               	goto	l3565
  1655  0025F8  90AC               	bcf	4012,0,c	;volatile
  1656  0025FA  B24C               	btfsc	_USART_Status,1,c
  1657  0025FC  80AC               	bsf	4012,0,c	;volatile
  1658  0025FE                     l3565:
  1659  0025FE  C0AD  FFAD         	movff	WriteUSART@data,4013	;volatile
  1660  002602  0012               	return	
  1661  002604                     __end_of_WriteUSART:
  1662                           	opt stack 0
  1663                           tblptru	equ	0xFF8
  1664                           postinc0	equ	0xFEE
  1665                           wreg	equ	0xFE8
  1666                           indf2	equ	0xFDF
  1667                           fsr2h	equ	0xFDA
  1668                           fsr2l	equ	0xFD9
  1669                           status	equ	0xFD8
  1670                           
  1671 ;; *************** function _timer0_lthread *****************
  1672 ;; Defined at:
  1673 ;;		line 9 in file "source/timer0_thread.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  1676 ;;		 -> main@t0thread_data(2), 
  1677 ;;  msgtype         2   47[BANK0 ] int 
  1678 ;;  length          2   49[BANK0 ] int 
  1679 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  1680 ;;		 -> main@msgbuffer(23), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  1683 ;;		 -> main@msgbuffer(23), 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2   45[BANK0 ] int 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1693 ;;      Params:         0       8       0       0       0
  1694 ;;      Locals:         0       2       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         0      10       0       0       0
  1697 ;;Total ram usage:       10 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:   12
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text3
  1708  002604                     __ptext3:
  1709                           	opt stack 0
  1710  002604                     _timer0_lthread:
  1711                           	opt stack 18
  1712                           
  1713                           ;timer0_thread.c: 10: unsigned int *msgval;
  1714                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1715                           
  1716                           ;incstack = 0
  1717  002604  0100               	movlb	0	; () banked
  1718  002606  0100               	movlb	0	; () banked
  1719  002608  C0B4  F0B6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1720  00260C  0100               	movlb	0	; () banked
  1721  00260E  0100               	movlb	0	; () banked
  1722  002610  C0B3  F0B5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1723                           
  1724                           ; BSR set to: 0
  1725  002614  0012               	return	
  1726  002616                     __end_of_timer0_lthread:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           indf2	equ	0xFDF
  1732                           fsr2h	equ	0xFDA
  1733                           fsr2l	equ	0xFD9
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function _start_i2c_slave_reply *****************
  1737 ;; Defined at:
  1738 ;;		line 123 in file "source/my_i2c.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  length          1    wreg     unsigned char 
  1741 ;;  msg             2   49[BANK0 ] PTR unsigned char 
  1742 ;;		 -> NULL(0), main@msgbuffer(23), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  length          1    0[COMRAM] unsigned char 
  1745 ;;  inchesR         2   61[BANK0 ] int 
  1746 ;;  feetR           2   59[BANK0 ] int 
  1747 ;;  inchesL         2   57[BANK0 ] int 
  1748 ;;  feetL           2   55[BANK0 ] int 
  1749 ;;  distance        2   53[BANK0 ] unsigned int 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;		None               void
  1752 ;; Registers used:
  1753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1759 ;;      Params:         0       2       0       0       0
  1760 ;;      Locals:         0      10       0       0       0
  1761 ;;      Temps:          0       2       0       0       0
  1762 ;;      Totals:         0      14       0       0       0
  1763 ;;Total ram usage:       14 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:   13
  1766 ;; This function calls:
  1767 ;;		_ReadTimer1
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text4
  1774  001292                     __ptext4:
  1775                           	opt stack 0
  1776  001292                     _start_i2c_slave_reply:
  1777                           	opt stack 17
  1778                           
  1779                           ;my_i2c.c: 125: int feetL = DeltaOverflowL / 0x08;
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;incstack = 0
  1783  001292  0100               	movlb	0	; () banked
  1784  001294  C0CA  F0B3         	movff	_DeltaOverflowL,??_start_i2c_slave_reply
  1785  001298  0100               	movlb	0	; () banked
  1786  00129A  C0CB  F0B4         	movff	_DeltaOverflowL+1,??_start_i2c_slave_reply+1
  1787  00129E  0100               	movlb	0	; () banked
  1788  0012A0  90D8               	bcf	status,0,c
  1789  0012A2  33B4               	rrcf	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1790  0012A4  33B3               	rrcf	??_start_i2c_slave_reply& (0+255),f,b
  1791  0012A6  0100               	movlb	0	; () banked
  1792  0012A8  90D8               	bcf	status,0,c
  1793  0012AA  33B4               	rrcf	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1794  0012AC  33B3               	rrcf	??_start_i2c_slave_reply& (0+255),f,b
  1795  0012AE  0100               	movlb	0	; () banked
  1796  0012B0  90D8               	bcf	status,0,c
  1797  0012B2  33B4               	rrcf	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1798  0012B4  33B3               	rrcf	??_start_i2c_slave_reply& (0+255),f,b
  1799  0012B6  C0B3  F0B7         	movff	??_start_i2c_slave_reply,start_i2c_slave_reply@feetL
  1800  0012BA  C0B4  F0B8         	movff	??_start_i2c_slave_reply+1,start_i2c_slave_reply@feetL+1
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;my_i2c.c: 126: int inchesL = DeltaOverflowL % 0x08;
  1804  0012BE  0E07               	movlw	7
  1805  0012C0  0100               	movlb	0	; () banked
  1806  0012C2  0100               	movlb	0	; () banked
  1807  0012C4  15CA               	andwf	_DeltaOverflowL& (0+255),w,b
  1808  0012C6  0100               	movlb	0	; () banked
  1809  0012C8  0100               	movlb	0	; () banked
  1810  0012CA  6FB9               	movwf	start_i2c_slave_reply@inchesL& (0+255),b
  1811  0012CC  0E00               	movlw	0
  1812  0012CE  0100               	movlb	0	; () banked
  1813  0012D0  0100               	movlb	0	; () banked
  1814  0012D2  15CB               	andwf	(_DeltaOverflowL+1)& (0+255),w,b
  1815  0012D4  0100               	movlb	0	; () banked
  1816  0012D6  6FBA               	movwf	(start_i2c_slave_reply@inchesL+1)& (0+255),b
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;my_i2c.c: 127: int feetR = DeltaOverflowR / 0x08;
  1820  0012D8  0100               	movlb	0	; () banked
  1821  0012DA  C0CC  F0B3         	movff	_DeltaOverflowR,??_start_i2c_slave_reply
  1822  0012DE  0100               	movlb	0	; () banked
  1823  0012E0  C0CD  F0B4         	movff	_DeltaOverflowR+1,??_start_i2c_slave_reply+1
  1824  0012E4  0100               	movlb	0	; () banked
  1825  0012E6  90D8               	bcf	status,0,c
  1826  0012E8  33B4               	rrcf	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1827  0012EA  33B3               	rrcf	??_start_i2c_slave_reply& (0+255),f,b
  1828  0012EC  0100               	movlb	0	; () banked
  1829  0012EE  90D8               	bcf	status,0,c
  1830  0012F0  33B4               	rrcf	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1831  0012F2  33B3               	rrcf	??_start_i2c_slave_reply& (0+255),f,b
  1832  0012F4  0100               	movlb	0	; () banked
  1833  0012F6  90D8               	bcf	status,0,c
  1834  0012F8  33B4               	rrcf	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1835  0012FA  33B3               	rrcf	??_start_i2c_slave_reply& (0+255),f,b
  1836  0012FC  C0B3  F0BB         	movff	??_start_i2c_slave_reply,start_i2c_slave_reply@feetR
  1837  001300  C0B4  F0BC         	movff	??_start_i2c_slave_reply+1,start_i2c_slave_reply@feetR+1
  1838                           
  1839                           ;my_i2c.c: 128: int inchesR = DeltaOverflowR % 0x08;
  1840  001304  0E07               	movlw	7
  1841  001306  0100               	movlb	0	; () banked
  1842  001308  0100               	movlb	0	; () banked
  1843  00130A  15CC               	andwf	_DeltaOverflowR& (0+255),w,b
  1844  00130C  0100               	movlb	0	; () banked
  1845  00130E  0100               	movlb	0	; () banked
  1846  001310  6FBD               	movwf	start_i2c_slave_reply@inchesR& (0+255),b
  1847  001312  0E00               	movlw	0
  1848  001314  0100               	movlb	0	; () banked
  1849  001316  0100               	movlb	0	; () banked
  1850  001318  15CD               	andwf	(_DeltaOverflowR+1)& (0+255),w,b
  1851  00131A  0100               	movlb	0	; () banked
  1852  00131C  6FBE               	movwf	(start_i2c_slave_reply@inchesR+1)& (0+255),b
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;my_i2c.c: 130: unsigned int distance = motorDistance + ReadTimer1();
  1856  00131E  EC0B  F013         	call	_ReadTimer1	;wreg free
  1857  001322  0100               	movlb	0	; () banked
  1858  001324  0100               	movlb	0	; () banked
  1859  001326  51CE               	movf	_motorDistance& (0+255),w,b
  1860  001328  0100               	movlb	0	; () banked
  1861  00132A  0100               	movlb	0	; () banked
  1862  00132C  25AD               	addwf	?_ReadTimer1& (0+255),w,b
  1863  00132E  0100               	movlb	0	; () banked
  1864  001330  0100               	movlb	0	; () banked
  1865  001332  6FB5               	movwf	start_i2c_slave_reply@distance& (0+255),b
  1866  001334  0100               	movlb	0	; () banked
  1867  001336  0100               	movlb	0	; () banked
  1868  001338  51CF               	movf	(_motorDistance+1)& (0+255),w,b
  1869  00133A  0100               	movlb	0	; () banked
  1870  00133C  0100               	movlb	0	; () banked
  1871  00133E  21AE               	addwfc	(?_ReadTimer1+1)& (0+255),w,b
  1872  001340  0100               	movlb	0	; () banked
  1873  001342  6FB6               	movwf	(start_i2c_slave_reply@distance+1)& (0+255),b
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;my_i2c.c: 131: ic_ptr->outbuffer[0] = ActiveL | ActiveR;
  1877  001344  0100               	movlb	0	; () banked
  1878  001346  EE20 F01C          	lfsr	2,28
  1879  00134A  0100               	movlb	0	; () banked
  1880  00134C  51D1               	movf	_ic_ptr& (0+255),w,b
  1881  00134E  26D9               	addwf	fsr2l,f,c
  1882  001350  0100               	movlb	0	; () banked
  1883  001352  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1884  001354  22DA               	addwfc	fsr2h,f,c
  1885  001356  0100               	movlb	0	; () banked
  1886  001358  0100               	movlb	0	; () banked
  1887  00135A  51C6               	movf	_ActiveL& (0+255),w,b
  1888  00135C  0100               	movlb	0	; () banked
  1889  00135E  0100               	movlb	0	; () banked
  1890  001360  11C8               	iorwf	_ActiveR& (0+255),w,b
  1891  001362  6EDF               	movwf	indf2,c
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;my_i2c.c: 132: ic_ptr->outbuffer[1] = feetL;
  1895  001364  0100               	movlb	0	; () banked
  1896  001366  EE20 F01D          	lfsr	2,29
  1897  00136A  0100               	movlb	0	; () banked
  1898  00136C  51D1               	movf	_ic_ptr& (0+255),w,b
  1899  00136E  26D9               	addwf	fsr2l,f,c
  1900  001370  0100               	movlb	0	; () banked
  1901  001372  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1902  001374  22DA               	addwfc	fsr2h,f,c
  1903  001376  0100               	movlb	0	; () banked
  1904  001378  C0B7  FFDF         	movff	start_i2c_slave_reply@feetL,indf2
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;my_i2c.c: 133: ic_ptr->outbuffer[2] = inchesL;
  1908  00137C  0100               	movlb	0	; () banked
  1909  00137E  EE20 F01E          	lfsr	2,30
  1910  001382  0100               	movlb	0	; () banked
  1911  001384  51D1               	movf	_ic_ptr& (0+255),w,b
  1912  001386  26D9               	addwf	fsr2l,f,c
  1913  001388  0100               	movlb	0	; () banked
  1914  00138A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1915  00138C  22DA               	addwfc	fsr2h,f,c
  1916  00138E  0100               	movlb	0	; () banked
  1917  001390  C0B9  FFDF         	movff	start_i2c_slave_reply@inchesL,indf2
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;my_i2c.c: 134: ic_ptr->outbuffer[3] = feetR;
  1921  001394  0100               	movlb	0	; () banked
  1922  001396  EE20 F01F          	lfsr	2,31
  1923  00139A  0100               	movlb	0	; () banked
  1924  00139C  51D1               	movf	_ic_ptr& (0+255),w,b
  1925  00139E  26D9               	addwf	fsr2l,f,c
  1926  0013A0  0100               	movlb	0	; () banked
  1927  0013A2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1928  0013A4  22DA               	addwfc	fsr2h,f,c
  1929  0013A6  0100               	movlb	0	; () banked
  1930  0013A8  C0BB  FFDF         	movff	start_i2c_slave_reply@feetR,indf2
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;my_i2c.c: 135: ic_ptr->outbuffer[4] = inchesR;
  1934  0013AC  0100               	movlb	0	; () banked
  1935  0013AE  EE20 F020          	lfsr	2,32
  1936  0013B2  0100               	movlb	0	; () banked
  1937  0013B4  51D1               	movf	_ic_ptr& (0+255),w,b
  1938  0013B6  26D9               	addwf	fsr2l,f,c
  1939  0013B8  0100               	movlb	0	; () banked
  1940  0013BA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1941  0013BC  22DA               	addwfc	fsr2h,f,c
  1942  0013BE  0100               	movlb	0	; () banked
  1943  0013C0  C0BD  FFDF         	movff	start_i2c_slave_reply@inchesR,indf2
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;my_i2c.c: 138: DeltaOverflowL = 0;
  1947  0013C4  0E00               	movlw	0
  1948  0013C6  0100               	movlb	0	; () banked
  1949  0013C8  0100               	movlb	0	; () banked
  1950  0013CA  6FCB               	movwf	(_DeltaOverflowL+1)& (0+255),b
  1951  0013CC  0E00               	movlw	0
  1952  0013CE  0100               	movlb	0	; () banked
  1953  0013D0  6FCA               	movwf	_DeltaOverflowL& (0+255),b
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;my_i2c.c: 139: DeltaOverflowR = 0;
  1957  0013D2  0E00               	movlw	0
  1958  0013D4  0100               	movlb	0	; () banked
  1959  0013D6  0100               	movlb	0	; () banked
  1960  0013D8  6FCD               	movwf	(_DeltaOverflowR+1)& (0+255),b
  1961  0013DA  0E00               	movlw	0
  1962  0013DC  0100               	movlb	0	; () banked
  1963  0013DE  6FCC               	movwf	_DeltaOverflowR& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;my_i2c.c: 157: ic_ptr->sendBufLen =0;
  1967  0013E0  0100               	movlb	0	; () banked
  1968  0013E2  EE20 F04B          	lfsr	2,75
  1969  0013E6  0100               	movlb	0	; () banked
  1970  0013E8  51D1               	movf	_ic_ptr& (0+255),w,b
  1971  0013EA  26D9               	addwf	fsr2l,f,c
  1972  0013EC  0100               	movlb	0	; () banked
  1973  0013EE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1974  0013F0  22DA               	addwfc	fsr2h,f,c
  1975  0013F2  0E00               	movlw	0
  1976  0013F4  6EDF               	movwf	indf2,c
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;my_i2c.c: 158: ic_ptr->outbuflen = 5;
  1980  0013F6  0100               	movlb	0	; () banked
  1981  0013F8  EE20 F032          	lfsr	2,50
  1982  0013FC  0100               	movlb	0	; () banked
  1983  0013FE  51D1               	movf	_ic_ptr& (0+255),w,b
  1984  001400  26D9               	addwf	fsr2l,f,c
  1985  001402  0100               	movlb	0	; () banked
  1986  001404  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  1987  001406  22DA               	addwfc	fsr2h,f,c
  1988  001408  0E05               	movlw	5
  1989  00140A  6EDF               	movwf	indf2,c
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;my_i2c.c: 159: ic_ptr->outbufind = 1;
  1993  00140C  0100               	movlb	0	; () banked
  1994  00140E  EE20 F033          	lfsr	2,51
  1995  001412  0100               	movlb	0	; () banked
  1996  001414  51D1               	movf	_ic_ptr& (0+255),w,b
  1997  001416  26D9               	addwf	fsr2l,f,c
  1998  001418  0100               	movlb	0	; () banked
  1999  00141A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2000  00141C  22DA               	addwfc	fsr2h,f,c
  2001  00141E  0E01               	movlw	1
  2002  001420  6EDF               	movwf	indf2,c
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;my_i2c.c: 162: SSPBUF = ic_ptr->outbuffer[0];
  2006  001422  0100               	movlb	0	; () banked
  2007  001424  EE20 F01C          	lfsr	2,28
  2008  001428  0100               	movlb	0	; () banked
  2009  00142A  51D1               	movf	_ic_ptr& (0+255),w,b
  2010  00142C  26D9               	addwf	fsr2l,f,c
  2011  00142E  0100               	movlb	0	; () banked
  2012  001430  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2013  001432  22DA               	addwfc	fsr2h,f,c
  2014  001434  50DF               	movf	indf2,w,c
  2015  001436  6EC9               	movwf	4041,c	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;my_i2c.c: 165: SSPCON1bits.CKP = 1;
  2019  001438  88C6               	bsf	4038,4,c	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022  00143A  0012               	return	
  2023  00143C                     __end_of_start_i2c_slave_reply:
  2024                           	opt stack 0
  2025                           tblptru	equ	0xFF8
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           indf2	equ	0xFDF
  2029                           fsr2h	equ	0xFDA
  2030                           fsr2l	equ	0xFD9
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _ReadTimer1 *****************
  2034 ;; Defined at:
  2035 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  timer           2   47[BANK0 ] struct Timers
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2   45[BANK0 ] unsigned int 
  2042 ;; Registers used:
  2043 ;;		None
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2049 ;;      Params:         0       2       0       0       0
  2050 ;;      Locals:         0       2       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         0       4       0       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:   12
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_start_i2c_slave_reply
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text5
  2064  002616                     __ptext5:
  2065                           	opt stack 0
  2066  002616                     _ReadTimer1:
  2067                           	opt stack 17
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;incstack = 0
  2071  002616  CFCE F0AF          	movff	4046,ReadTimer1@timer	;volatile
  2072  00261A  CFCF F0B0          	movff	4047,ReadTimer1@timer+1	;volatile
  2073  00261E  C0AF  F0AD         	movff	ReadTimer1@timer,?_ReadTimer1
  2074  002622  C0B0  F0AE         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2075  002626  0012               	return	
  2076  002628                     __end_of_ReadTimer1:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           indf2	equ	0xFDF
  2082                           fsr2h	equ	0xFDA
  2083                           fsr2l	equ	0xFD9
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _motor_lthread *****************
  2087 ;; Defined at:
  2088 ;;		line 16 in file "source/Motor_thread.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  msgtype         2    1[BANK1 ] int 
  2091 ;;  length          2    3[BANK1 ] int 
  2092 ;;  msgbuffer       2    5[BANK1 ] PTR unsigned char 
  2093 ;;		 -> main@msgbuffer(23), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  message         2   14[BANK1 ] unsigned char [2]
  2096 ;;  message         1   13[BANK1 ] unsigned char [1]
  2097 ;;  message         1   12[BANK1 ] unsigned char [1]
  2098 ;;  message         1   11[BANK1 ] unsigned char [1]
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    1[BANK1 ] int 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2108 ;;      Params:         0       0       6       0       0
  2109 ;;      Locals:         0       0       5       0       0
  2110 ;;      Temps:          0       0       4       0       0
  2111 ;;      Totals:         0       0      15       0       0
  2112 ;;Total ram usage:       15 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:   15
  2115 ;; This function calls:
  2116 ;;		_ToMainHigh_sendmsg
  2117 ;;		_WriteTimer0
  2118 ;;		_WriteTimer1
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text6
  2125  000C98                     __ptext6:
  2126                           	opt stack 0
  2127  000C98                     _motor_lthread:
  2128                           	opt stack 15
  2129                           
  2130                           ;Motor_thread.c: 19: switch (msgtype)
  2131                           
  2132                           ;incstack = 0
  2133  000C98  D169               	goto	l3993
  2134  000C9A                     l3941:
  2135                           
  2136                           ;Motor_thread.c: 22: {
  2137                           ;Motor_thread.c: 23: unsigned char message[1];
  2138                           ;Motor_thread.c: 24: message[0] = 0x00;
  2139  000C9A  0101               	movlb	1	; () banked
  2140  000C9C  6F07               	movwf	??_motor_lthread& (0+255),b
  2141  000C9E  0E00               	movlw	0
  2142  000CA0  0101               	movlb	1	; () banked
  2143  000CA2  0101               	movlb	1	; () banked
  2144  000CA4  6F0B               	movwf	motor_lthread@message& (0+255),b
  2145  000CA6  0101               	movlb	1	; () banked
  2146  000CA8  5107               	movf	??_motor_lthread& (0+255),w,b
  2147                           
  2148                           ; BSR set to: 1
  2149                           ;Motor_thread.c: 25: ToMainHigh_sendmsg(sizeof(message),47,&message );
  2150  000CAA  0101               	movlb	1	; () banked
  2151  000CAC  6F07               	movwf	??_motor_lthread& (0+255),b
  2152  000CAE  0E2F               	movlw	47
  2153  000CB0  0100               	movlb	0	; () banked
  2154  000CB2  0100               	movlb	0	; () banked
  2155  000CB4  6FC3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2156  000CB6  0101               	movlb	1	; () banked
  2157  000CB8  5107               	movf	??_motor_lthread& (0+255),w,b
  2158  000CBA  0101               	movlb	1	; () banked
  2159  000CBC  0E01               	movlw	high motor_lthread@message
  2160  000CBE  0100               	movlb	0	; () banked
  2161  000CC0  0100               	movlb	0	; () banked
  2162  000CC2  6FC5               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  2163  000CC4  0101               	movlb	1	; () banked
  2164  000CC6  0E0B               	movlw	low motor_lthread@message
  2165  000CC8  0100               	movlb	0	; () banked
  2166  000CCA  0100               	movlb	0	; () banked
  2167  000CCC  6FC4               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  2168  000CCE  0E01               	movlw	1
  2169  000CD0  EC03  F012         	call	_ToMainHigh_sendmsg
  2170                           
  2171                           ;Motor_thread.c: 26: ActiveL = 0;
  2172  000CD4  0E00               	movlw	0
  2173  000CD6  0100               	movlb	0	; () banked
  2174  000CD8  0100               	movlb	0	; () banked
  2175  000CDA  6FC7               	movwf	(_ActiveL+1)& (0+255),b
  2176  000CDC  0E00               	movlw	0
  2177  000CDE  0100               	movlb	0	; () banked
  2178  000CE0  6FC6               	movwf	_ActiveL& (0+255),b
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;Motor_thread.c: 27: ActiveR = 0;
  2182  000CE2  0E00               	movlw	0
  2183  000CE4  0100               	movlb	0	; () banked
  2184  000CE6  0100               	movlb	0	; () banked
  2185  000CE8  6FC9               	movwf	(_ActiveR+1)& (0+255),b
  2186  000CEA  0E00               	movlw	0
  2187  000CEC  0100               	movlb	0	; () banked
  2188  000CEE  6FC8               	movwf	_ActiveR& (0+255),b
  2189                           
  2190                           ;Motor_thread.c: 28: break;
  2191  000CF0  0012               	return	
  2192  000CF2                     l3949:
  2193                           
  2194                           ;Motor_thread.c: 31: {
  2195                           ;Motor_thread.c: 32: unsigned char message[1];
  2196                           ;Motor_thread.c: 33: message[0] = 0x64;
  2197  000CF2  0101               	movlb	1	; () banked
  2198  000CF4  6F07               	movwf	??_motor_lthread& (0+255),b
  2199  000CF6  0E64               	movlw	100
  2200  000CF8  0101               	movlb	1	; () banked
  2201  000CFA  0101               	movlb	1	; () banked
  2202  000CFC  6F0C               	movwf	motor_lthread@message_740& (0+255),b
  2203  000CFE  0101               	movlb	1	; () banked
  2204  000D00  5107               	movf	??_motor_lthread& (0+255),w,b
  2205                           
  2206                           ; BSR set to: 1
  2207                           ;Motor_thread.c: 34: ToMainHigh_sendmsg(sizeof(message),47,&message );
  2208  000D02  0101               	movlb	1	; () banked
  2209  000D04  6F07               	movwf	??_motor_lthread& (0+255),b
  2210  000D06  0E2F               	movlw	47
  2211  000D08  0100               	movlb	0	; () banked
  2212  000D0A  0100               	movlb	0	; () banked
  2213  000D0C  6FC3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2214  000D0E  0101               	movlb	1	; () banked
  2215  000D10  5107               	movf	??_motor_lthread& (0+255),w,b
  2216  000D12  0101               	movlb	1	; () banked
  2217  000D14  0E01               	movlw	high motor_lthread@message_740
  2218  000D16  0100               	movlb	0	; () banked
  2219  000D18  0100               	movlb	0	; () banked
  2220  000D1A  6FC5               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  2221  000D1C  0101               	movlb	1	; () banked
  2222  000D1E  0E0C               	movlw	low motor_lthread@message_740
  2223  000D20  0100               	movlb	0	; () banked
  2224  000D22  0100               	movlb	0	; () banked
  2225  000D24  6FC4               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  2226  000D26  0E01               	movlw	1
  2227  000D28  EC03  F012         	call	_ToMainHigh_sendmsg
  2228                           
  2229                           ;Motor_thread.c: 35: break;
  2230  000D2C  0012               	return	
  2231  000D2E                     l3953:
  2232                           
  2233                           ;Motor_thread.c: 38: {
  2234                           ;Motor_thread.c: 39: unsigned char message[1];
  2235                           ;Motor_thread.c: 40: message[0] = 0x44;
  2236  000D2E  0101               	movlb	1	; () banked
  2237  000D30  6F07               	movwf	??_motor_lthread& (0+255),b
  2238  000D32  0E44               	movlw	68
  2239  000D34  0101               	movlb	1	; () banked
  2240  000D36  0101               	movlb	1	; () banked
  2241  000D38  6F0D               	movwf	motor_lthread@message_741& (0+255),b
  2242  000D3A  0101               	movlb	1	; () banked
  2243  000D3C  5107               	movf	??_motor_lthread& (0+255),w,b
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;Motor_thread.c: 41: ToMainHigh_sendmsg(sizeof(message),47,&message );
  2247  000D3E  0101               	movlb	1	; () banked
  2248  000D40  6F07               	movwf	??_motor_lthread& (0+255),b
  2249  000D42  0E2F               	movlw	47
  2250  000D44  0100               	movlb	0	; () banked
  2251  000D46  0100               	movlb	0	; () banked
  2252  000D48  6FC3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2253  000D4A  0101               	movlb	1	; () banked
  2254  000D4C  5107               	movf	??_motor_lthread& (0+255),w,b
  2255  000D4E  0101               	movlb	1	; () banked
  2256  000D50  0E01               	movlw	high motor_lthread@message_741
  2257  000D52  0100               	movlb	0	; () banked
  2258  000D54  0100               	movlb	0	; () banked
  2259  000D56  6FC5               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  2260  000D58  0101               	movlb	1	; () banked
  2261  000D5A  0E0D               	movlw	low motor_lthread@message_741
  2262  000D5C  0100               	movlb	0	; () banked
  2263  000D5E  0100               	movlb	0	; () banked
  2264  000D60  6FC4               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  2265  000D62  0E01               	movlw	1
  2266  000D64  EC03  F012         	call	_ToMainHigh_sendmsg
  2267                           
  2268                           ;Motor_thread.c: 42: break;
  2269  000D68  0012               	return	
  2270  000D6A                     l3957:
  2271                           
  2272                           ;Motor_thread.c: 53: {
  2273                           ;Motor_thread.c: 54: unsigned char message[2];
  2274                           ;Motor_thread.c: 55: ActiveL = 1;
  2275  000D6A  0E00               	movlw	0
  2276  000D6C  0100               	movlb	0	; () banked
  2277  000D6E  0100               	movlb	0	; () banked
  2278  000D70  6FC7               	movwf	(_ActiveL+1)& (0+255),b
  2279  000D72  0E01               	movlw	1
  2280  000D74  0100               	movlb	0	; () banked
  2281  000D76  6FC6               	movwf	_ActiveL& (0+255),b
  2282                           
  2283                           ;Motor_thread.c: 56: ActiveR = 1;
  2284  000D78  0E00               	movlw	0
  2285  000D7A  0100               	movlb	0	; () banked
  2286  000D7C  0100               	movlb	0	; () banked
  2287  000D7E  6FC9               	movwf	(_ActiveR+1)& (0+255),b
  2288  000D80  0E01               	movlw	1
  2289  000D82  0100               	movlb	0	; () banked
  2290  000D84  6FC8               	movwf	_ActiveR& (0+255),b
  2291                           
  2292                           ;Motor_thread.c: 57: NumOfOverflowL = 0;
  2293  000D86  0E00               	movlw	0
  2294  000D88  6E39               	movwf	_NumOfOverflowL+1,c
  2295  000D8A  0E00               	movlw	0
  2296  000D8C  6E38               	movwf	_NumOfOverflowL,c
  2297                           
  2298                           ;Motor_thread.c: 58: NumOfOverflowR = 0;
  2299  000D8E  0E00               	movlw	0
  2300  000D90  6E3B               	movwf	_NumOfOverflowR+1,c
  2301  000D92  0E00               	movlw	0
  2302  000D94  6E3A               	movwf	_NumOfOverflowR,c
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;Motor_thread.c: 59: WriteTimer0(0);
  2306  000D96  0E00               	movlw	0
  2307  000D98  0100               	movlb	0	; () banked
  2308  000D9A  0100               	movlb	0	; () banked
  2309  000D9C  6FAE               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  2310  000D9E  0E00               	movlw	0
  2311  000DA0  0100               	movlb	0	; () banked
  2312  000DA2  6FAD               	movwf	WriteTimer0@timer0& (0+255),b
  2313  000DA4  EC1D  F013         	call	_WriteTimer0	;wreg free
  2314                           
  2315                           ;Motor_thread.c: 60: WriteTimer1(0);
  2316  000DA8  0E00               	movlw	0
  2317  000DAA  0100               	movlb	0	; () banked
  2318  000DAC  0100               	movlb	0	; () banked
  2319  000DAE  6FAE               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  2320  000DB0  0E00               	movlw	0
  2321  000DB2  0100               	movlb	0	; () banked
  2322  000DB4  6FAD               	movwf	WriteTimer1@timer1& (0+255),b
  2323  000DB6  EC14  F013         	call	_WriteTimer1	;wreg free
  2324                           
  2325                           ;Motor_thread.c: 61: OverflowsL = ((msgbuffer[1] << 8) | (msgbuffer[2]));
  2326  000DBA  0101               	movlb	1	; () banked
  2327  000DBC  EE20 F001          	lfsr	2,1
  2328  000DC0  0101               	movlb	1	; () banked
  2329  000DC2  5105               	movf	motor_lthread@msgbuffer& (0+255),w,b
  2330  000DC4  26D9               	addwf	fsr2l,f,c
  2331  000DC6  0101               	movlb	1	; () banked
  2332  000DC8  5106               	movf	(motor_lthread@msgbuffer+1)& (0+255),w,b
  2333  000DCA  22DA               	addwfc	fsr2h,f,c
  2334  000DCC  50DF               	movf	indf2,w,c
  2335  000DCE  0101               	movlb	1	; () banked
  2336  000DD0  6F07               	movwf	??_motor_lthread& (0+255),b
  2337  000DD2  0101               	movlb	1	; () banked
  2338  000DD4  5107               	movf	??_motor_lthread& (0+255),w,b
  2339  000DD6  0101               	movlb	1	; () banked
  2340  000DD8  6F09               	movwf	(??_motor_lthread+2)& (0+255),b
  2341  000DDA  6B08               	clrf	(??_motor_lthread+1)& (0+255),b
  2342  000DDC  0101               	movlb	1	; () banked
  2343  000DDE  EE20 F002          	lfsr	2,2
  2344  000DE2  0101               	movlb	1	; () banked
  2345  000DE4  5105               	movf	motor_lthread@msgbuffer& (0+255),w,b
  2346  000DE6  26D9               	addwf	fsr2l,f,c
  2347  000DE8  0101               	movlb	1	; () banked
  2348  000DEA  5106               	movf	(motor_lthread@msgbuffer+1)& (0+255),w,b
  2349  000DEC  22DA               	addwfc	fsr2h,f,c
  2350  000DEE  50DF               	movf	indf2,w,c
  2351  000DF0  0101               	movlb	1	; () banked
  2352  000DF2  6F0A               	movwf	(??_motor_lthread+3)& (0+255),b
  2353  000DF4  0101               	movlb	1	; () banked
  2354  000DF6  510A               	movf	(??_motor_lthread+3)& (0+255),w,b
  2355  000DF8  0101               	movlb	1	; () banked
  2356  000DFA  1108               	iorwf	(??_motor_lthread+1)& (0+255),w,b
  2357  000DFC  6E3C               	movwf	_OverflowsL,c
  2358  000DFE  0101               	movlb	1	; () banked
  2359  000E00  5109               	movf	(??_motor_lthread+2)& (0+255),w,b
  2360  000E02  6E3D               	movwf	_OverflowsL+1,c
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;Motor_thread.c: 62: OverflowsR = ((msgbuffer[3] << 8) | (msgbuffer[4]));
  2364  000E04  0101               	movlb	1	; () banked
  2365  000E06  EE20 F003          	lfsr	2,3
  2366  000E0A  0101               	movlb	1	; () banked
  2367  000E0C  5105               	movf	motor_lthread@msgbuffer& (0+255),w,b
  2368  000E0E  26D9               	addwf	fsr2l,f,c
  2369  000E10  0101               	movlb	1	; () banked
  2370  000E12  5106               	movf	(motor_lthread@msgbuffer+1)& (0+255),w,b
  2371  000E14  22DA               	addwfc	fsr2h,f,c
  2372  000E16  50DF               	movf	indf2,w,c
  2373  000E18  0101               	movlb	1	; () banked
  2374  000E1A  6F07               	movwf	??_motor_lthread& (0+255),b
  2375  000E1C  0101               	movlb	1	; () banked
  2376  000E1E  5107               	movf	??_motor_lthread& (0+255),w,b
  2377  000E20  0101               	movlb	1	; () banked
  2378  000E22  6F09               	movwf	(??_motor_lthread+2)& (0+255),b
  2379  000E24  6B08               	clrf	(??_motor_lthread+1)& (0+255),b
  2380  000E26  0101               	movlb	1	; () banked
  2381  000E28  EE20 F004          	lfsr	2,4
  2382  000E2C  0101               	movlb	1	; () banked
  2383  000E2E  5105               	movf	motor_lthread@msgbuffer& (0+255),w,b
  2384  000E30  26D9               	addwf	fsr2l,f,c
  2385  000E32  0101               	movlb	1	; () banked
  2386  000E34  5106               	movf	(motor_lthread@msgbuffer+1)& (0+255),w,b
  2387  000E36  22DA               	addwfc	fsr2h,f,c
  2388  000E38  50DF               	movf	indf2,w,c
  2389  000E3A  0101               	movlb	1	; () banked
  2390  000E3C  6F0A               	movwf	(??_motor_lthread+3)& (0+255),b
  2391  000E3E  0101               	movlb	1	; () banked
  2392  000E40  510A               	movf	(??_motor_lthread+3)& (0+255),w,b
  2393  000E42  0101               	movlb	1	; () banked
  2394  000E44  1108               	iorwf	(??_motor_lthread+1)& (0+255),w,b
  2395  000E46  6E3E               	movwf	_OverflowsR,c
  2396  000E48  0101               	movlb	1	; () banked
  2397  000E4A  5109               	movf	(??_motor_lthread+2)& (0+255),w,b
  2398  000E4C  6E3F               	movwf	_OverflowsR+1,c
  2399                           
  2400                           ;Motor_thread.c: 63: switch(msgbuffer[0])
  2401  000E4E  D05A               	goto	l3987
  2402  000E50                     l3967:
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;Motor_thread.c: 66: {
  2406                           ;Motor_thread.c: 68: message[0] = 0xE3;
  2407  000E50  0101               	movlb	1	; () banked
  2408  000E52  6F07               	movwf	??_motor_lthread& (0+255),b
  2409  000E54  0EE3               	movlw	227
  2410  000E56  0101               	movlb	1	; () banked
  2411  000E58  0101               	movlb	1	; () banked
  2412  000E5A  6F0E               	movwf	motor_lthread@message_742& (0+255),b
  2413  000E5C  0101               	movlb	1	; () banked
  2414  000E5E  5107               	movf	??_motor_lthread& (0+255),w,b
  2415                           
  2416                           ;Motor_thread.c: 69: message[1] = 0x1F;
  2417  000E60  0101               	movlb	1	; () banked
  2418  000E62  6F07               	movwf	??_motor_lthread& (0+255),b
  2419  000E64  0E1F               	movlw	31
  2420  000E66  D02C               	goto	L5
  2421  000E68                     l3969:
  2422                           
  2423                           ; BSR set to: 1
  2424                           ;Motor_thread.c: 74: {
  2425                           ;Motor_thread.c: 76: message[0] = 0x5C;
  2426  000E68  0101               	movlb	1	; () banked
  2427  000E6A  6F07               	movwf	??_motor_lthread& (0+255),b
  2428  000E6C  0E5C               	movlw	92
  2429  000E6E  0101               	movlb	1	; () banked
  2430  000E70  0101               	movlb	1	; () banked
  2431  000E72  6F0E               	movwf	motor_lthread@message_742& (0+255),b
  2432  000E74  0101               	movlb	1	; () banked
  2433  000E76  5107               	movf	??_motor_lthread& (0+255),w,b
  2434                           
  2435                           ;Motor_thread.c: 77: message[1] = 0xA0;
  2436  000E78  0101               	movlb	1	; () banked
  2437  000E7A  6F07               	movwf	??_motor_lthread& (0+255),b
  2438  000E7C  0EA0               	movlw	160
  2439  000E7E  D020               	goto	L5
  2440  000E80                     l3971:
  2441                           
  2442                           ; BSR set to: 1
  2443                           ;Motor_thread.c: 81: {
  2444                           ;Motor_thread.c: 83: message[0] = 0x1F;
  2445  000E80  0101               	movlb	1	; () banked
  2446  000E82  6F07               	movwf	??_motor_lthread& (0+255),b
  2447  000E84  0E1F               	movlw	31
  2448  000E86  0101               	movlb	1	; () banked
  2449  000E88  0101               	movlb	1	; () banked
  2450  000E8A  6F0E               	movwf	motor_lthread@message_742& (0+255),b
  2451  000E8C  0101               	movlb	1	; () banked
  2452  000E8E  5107               	movf	??_motor_lthread& (0+255),w,b
  2453                           
  2454                           ;Motor_thread.c: 84: message[1] = 0x9D;
  2455  000E90  0101               	movlb	1	; () banked
  2456  000E92  6F07               	movwf	??_motor_lthread& (0+255),b
  2457  000E94  0E9D               	movlw	157
  2458  000E96  D014               	goto	L5
  2459  000E98                     l3973:
  2460                           
  2461                           ; BSR set to: 1
  2462                           ;Motor_thread.c: 88: {
  2463                           ;Motor_thread.c: 90: message[0] = 0x00;
  2464  000E98  0101               	movlb	1	; () banked
  2465  000E9A  6F07               	movwf	??_motor_lthread& (0+255),b
  2466  000E9C  0E00               	movlw	0
  2467  000E9E  0101               	movlb	1	; () banked
  2468  000EA0  0101               	movlb	1	; () banked
  2469  000EA2  6F0E               	movwf	motor_lthread@message_742& (0+255),b
  2470  000EA4  0101               	movlb	1	; () banked
  2471  000EA6  5107               	movf	??_motor_lthread& (0+255),w,b
  2472                           
  2473                           ;Motor_thread.c: 91: message[1] = 0x00;
  2474  000EA8  0101               	movlb	1	; () banked
  2475  000EAA  6F07               	movwf	??_motor_lthread& (0+255),b
  2476  000EAC  0E00               	movlw	0
  2477  000EAE  D008               	goto	L5
  2478  000EB0                     l3975:
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;Motor_thread.c: 95: {
  2482                           ;Motor_thread.c: 97: message[0] = 0xC6;
  2483  000EB0  0101               	movlb	1	; () banked
  2484  000EB2  6F07               	movwf	??_motor_lthread& (0+255),b
  2485  000EB4  0EC6               	movlw	198
  2486  000EB6  D011               	goto	L7
  2487  000EB8                     l3977:
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;Motor_thread.c: 102: {
  2491                           ;Motor_thread.c: 104: message[0] = 0x46;
  2492  000EB8  0101               	movlb	1	; () banked
  2493  000EBA  6F07               	movwf	??_motor_lthread& (0+255),b
  2494  000EBC  0E46               	movlw	70
  2495  000EBE  D019               	goto	L8
  2496  000EC0                     L5:
  2497  000EC0  0101               	movlb	1	; () banked
  2498  000EC2  0101               	movlb	1	; () banked
  2499  000EC4  6F0F               	movwf	(motor_lthread@message_742+1)& (0+255),b
  2500  000EC6  0101               	movlb	1	; () banked
  2501  000EC8  5107               	movf	??_motor_lthread& (0+255),w,b
  2502                           
  2503                           ;Motor_thread.c: 106: break;
  2504  000ECA  D03A               	goto	l3989
  2505  000ECC                     l3979:
  2506                           
  2507                           ; BSR set to: 1
  2508                           ;Motor_thread.c: 109: {
  2509                           ;Motor_thread.c: 110: message[0] = 0x00;
  2510  000ECC  0101               	movlb	1	; () banked
  2511  000ECE  6F07               	movwf	??_motor_lthread& (0+255),b
  2512  000ED0  0E00               	movlw	0
  2513  000ED2  D00F               	goto	L8
  2514  000ED4                     l3981:
  2515                           
  2516                           ; BSR set to: 1
  2517                           ;Motor_thread.c: 116: {
  2518                           ;Motor_thread.c: 117: message[0] = 0x00;
  2519  000ED4  0101               	movlb	1	; () banked
  2520  000ED6  6F07               	movwf	??_motor_lthread& (0+255),b
  2521  000ED8  0E00               	movlw	0
  2522  000EDA                     L7:
  2523  000EDA  0101               	movlb	1	; () banked
  2524  000EDC  0101               	movlb	1	; () banked
  2525  000EDE  6F0E               	movwf	motor_lthread@message_742& (0+255),b
  2526  000EE0  0101               	movlb	1	; () banked
  2527  000EE2  5107               	movf	??_motor_lthread& (0+255),w,b
  2528                           
  2529                           ;Motor_thread.c: 118: message[1] = 0x36;
  2530  000EE4  0101               	movlb	1	; () banked
  2531  000EE6  6F07               	movwf	??_motor_lthread& (0+255),b
  2532  000EE8  0E36               	movlw	54
  2533  000EEA  D7EA               	goto	L5
  2534  000EEC                     l3983:
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;Motor_thread.c: 122: {
  2538                           ;Motor_thread.c: 124: message[0] = 0x36;
  2539  000EEC  0101               	movlb	1	; () banked
  2540  000EEE  6F07               	movwf	??_motor_lthread& (0+255),b
  2541  000EF0  0E36               	movlw	54
  2542  000EF2                     L8:
  2543  000EF2  0101               	movlb	1	; () banked
  2544  000EF4  0101               	movlb	1	; () banked
  2545  000EF6  6F0E               	movwf	motor_lthread@message_742& (0+255),b
  2546  000EF8  0101               	movlb	1	; () banked
  2547  000EFA  5107               	movf	??_motor_lthread& (0+255),w,b
  2548                           
  2549                           ;Motor_thread.c: 125: message[1] = 0xB6;
  2550  000EFC  0101               	movlb	1	; () banked
  2551  000EFE  6F07               	movwf	??_motor_lthread& (0+255),b
  2552  000F00  0EB6               	movlw	182
  2553  000F02  D7DE               	goto	L5
  2554  000F04                     l3987:
  2555                           
  2556                           ; BSR set to: 1
  2557  000F04  C105  FFD9         	movff	motor_lthread@msgbuffer,fsr2l
  2558  000F08  C106  FFDA         	movff	motor_lthread@msgbuffer+1,fsr2h
  2559  000F0C  50DF               	movf	indf2,w,c
  2560                           
  2561                           ; Switch size 1, requested type "space"
  2562                           ; Number of cases is 8, Range of values is 1 to 17
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte           25    13 (average)
  2566                           ;	Chosen strategy is simple_byte
  2567  000F0E  0A01               	xorlw	1	; case 1
  2568  000F10  B4D8               	btfsc	status,2,c
  2569  000F12  D79E               	goto	l3967
  2570  000F14  0A03               	xorlw	3	; case 2
  2571  000F16  B4D8               	btfsc	status,2,c
  2572  000F18  D7A7               	goto	l3969
  2573  000F1A  0A01               	xorlw	1	; case 3
  2574  000F1C  B4D8               	btfsc	status,2,c
  2575  000F1E  D7B0               	goto	l3971
  2576  000F20  0A07               	xorlw	7	; case 4
  2577  000F22  B4D8               	btfsc	status,2,c
  2578  000F24  D7B9               	goto	l3973
  2579  000F26  0A01               	xorlw	1	; case 5
  2580  000F28  B4D8               	btfsc	status,2,c
  2581  000F2A  D7C2               	goto	l3975
  2582  000F2C  0A03               	xorlw	3	; case 6
  2583  000F2E  B4D8               	btfsc	status,2,c
  2584  000F30  D7C3               	goto	l3977
  2585  000F32  0A16               	xorlw	22	; case 16
  2586  000F34  B4D8               	btfsc	status,2,c
  2587  000F36  D7CA               	goto	l3979
  2588  000F38  0A01               	xorlw	1	; case 17
  2589  000F3A  B4D8               	btfsc	status,2,c
  2590  000F3C  D7CB               	goto	l3981
  2591  000F3E  D7D6               	goto	l3983
  2592  000F40                     l3989:
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;Motor_thread.c: 130: ToMainHigh_sendmsg(sizeof(message),47,&message );
  2596  000F40  0101               	movlb	1	; () banked
  2597  000F42  6F07               	movwf	??_motor_lthread& (0+255),b
  2598  000F44  0E2F               	movlw	47
  2599  000F46  0100               	movlb	0	; () banked
  2600  000F48  0100               	movlb	0	; () banked
  2601  000F4A  6FC3               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2602  000F4C  0101               	movlb	1	; () banked
  2603  000F4E  5107               	movf	??_motor_lthread& (0+255),w,b
  2604  000F50  0101               	movlb	1	; () banked
  2605  000F52  0E01               	movlw	high motor_lthread@message_742
  2606  000F54  0100               	movlb	0	; () banked
  2607  000F56  0100               	movlb	0	; () banked
  2608  000F58  6FC5               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  2609  000F5A  0101               	movlb	1	; () banked
  2610  000F5C  0E0E               	movlw	low motor_lthread@message_742
  2611  000F5E  0100               	movlb	0	; () banked
  2612  000F60  0100               	movlb	0	; () banked
  2613  000F62  6FC4               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  2614  000F64  0E02               	movlw	2
  2615  000F66  EC03  F012         	call	_ToMainHigh_sendmsg
  2616                           
  2617                           ;Motor_thread.c: 131: break;
  2618  000F6A  0012               	return	
  2619  000F6C                     l3993:
  2620  000F6C  0101               	movlb	1	; () banked
  2621  000F6E  C101  F107         	movff	motor_lthread@msgtype,??_motor_lthread
  2622  000F72  0101               	movlb	1	; () banked
  2623  000F74  C102  F108         	movff	motor_lthread@msgtype+1,??_motor_lthread+1
  2624                           
  2625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2626                           ; Switch size 1, requested type "space"
  2627                           ; Number of cases is 1, Range of values is 0 to 0
  2628                           ; switch strategies available:
  2629                           ; Name         Instructions Cycles
  2630                           ; simple_byte            4     3 (average)
  2631                           ;	Chosen strategy is simple_byte
  2632  000F78  0101               	movlb	1	; () banked
  2633  000F7A  5108               	movf	(??_motor_lthread+1)& (0+255),w,b
  2634  000F7C  0A00               	xorlw	0	; case 0
  2635  000F7E  A4D8               	btfss	status,2,c
  2636  000F80  0012               	return	
  2637                           
  2638                           ; BSR set to: 1
  2639                           ; Switch size 1, requested type "space"
  2640                           ; Number of cases is 6, Range of values is 48 to 55
  2641                           ; switch strategies available:
  2642                           ; Name         Instructions Cycles
  2643                           ; simple_byte           19    10 (average)
  2644                           ;	Chosen strategy is simple_byte
  2645  000F82  0101               	movlb	1	; () banked
  2646  000F84  5107               	movf	??_motor_lthread& (0+255),w,b
  2647  000F86  0A30               	xorlw	48	; case 48
  2648  000F88  B4D8               	btfsc	status,2,c
  2649  000F8A  D6EF               	goto	l3957
  2650  000F8C  0A03               	xorlw	3	; case 51
  2651  000F8E  B4D8               	btfsc	status,2,c
  2652  000F90  D684               	goto	l3941
  2653  000F92  0A07               	xorlw	7	; case 52
  2654  000F94  B4D8               	btfsc	status,2,c
  2655  000F96  D6AD               	goto	l3949
  2656  000F98  0A01               	xorlw	1	; case 53
  2657  000F9A  B4D8               	btfsc	status,2,c
  2658  000F9C  D6C8               	goto	l3953
  2659  000F9E  0A03               	xorlw	3	; case 54
  2660  000FA0  B4D8               	btfsc	status,2,c
  2661  000FA2  D6E3               	goto	l3957
  2662  000FA4  0A01               	xorlw	1	; case 55
  2663  000FA6  A4D8               	btfss	status,2,c
  2664  000FA8  0012               	return	
  2665  000FAA  D6DF               	goto	l3957
  2666  000FAC                     __end_of_motor_lthread:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           postinc0	equ	0xFEE
  2670                           wreg	equ	0xFE8
  2671                           indf2	equ	0xFDF
  2672                           fsr2h	equ	0xFDA
  2673                           fsr2l	equ	0xFD9
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _WriteTimer1 *****************
  2677 ;; Defined at:
  2678 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  timer1          2   45[BANK0 ] unsigned int 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  timer           2   47[BANK0 ] struct Timers
  2683 ;; Return value:  Size  Location     Type
  2684 ;;		None               void
  2685 ;; Registers used:
  2686 ;;		None
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2692 ;;      Params:         0       2       0       0       0
  2693 ;;      Locals:         0       2       0       0       0
  2694 ;;      Temps:          0       0       0       0       0
  2695 ;;      Totals:         0       4       0       0       0
  2696 ;;Total ram usage:        4 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:   12
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_motor_lthread
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text7
  2707  002628                     __ptext7:
  2708                           	opt stack 0
  2709  002628                     _WriteTimer1:
  2710                           	opt stack 17
  2711                           
  2712                           ;incstack = 0
  2713  002628  C0AD  F0AF         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2714  00262C  C0AE  F0B0         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2715  002630  C0B0  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2716  002634  C0AF  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2717  002638  0012               	return	
  2718  00263A                     __end_of_WriteTimer1:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           indf2	equ	0xFDF
  2724                           fsr2h	equ	0xFDA
  2725                           fsr2l	equ	0xFD9
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _WriteTimer0 *****************
  2729 ;; Defined at:
  2730 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  timer0          2   45[BANK0 ] unsigned int 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  timer           2   47[BANK0 ] struct Timers
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		None
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2744 ;;      Params:         0       2       0       0       0
  2745 ;;      Locals:         0       2       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       4       0       0       0
  2748 ;;Total ram usage:        4 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:   12
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_motor_lthread
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text8
  2759  00263A                     __ptext8:
  2760                           	opt stack 0
  2761  00263A                     _WriteTimer0:
  2762                           	opt stack 17
  2763                           
  2764                           ;incstack = 0
  2765  00263A  C0AD  F0AF         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2766  00263E  C0AE  F0B0         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2767  002642  C0B0  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2768  002646  C0AF  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2769  00264A  0012               	return	
  2770  00264C                     __end_of_WriteTimer0:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           indf2	equ	0xFDF
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _ToMainHigh_sendmsg *****************
  2781 ;; Defined at:
  2782 ;;		line 126 in file "source/messages.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  length          1    wreg     unsigned char 
  2785 ;;  msgtype         1   67[BANK0 ] unsigned char 
  2786 ;;  data            2   68[BANK0 ] PTR void 
  2787 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  2788 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), main@ic(77), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  length          1    0[BANK1 ] unsigned char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      char 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2800 ;;      Params:         0       3       0       0       0
  2801 ;;      Locals:         0       0       1       0       0
  2802 ;;      Temps:          0       0       0       0       0
  2803 ;;      Totals:         0       3       1       0       0
  2804 ;;Total ram usage:        4 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:   14
  2807 ;; This function calls:
  2808 ;;		_send_msg
  2809 ;; This function is called by:
  2810 ;;		_motor_lthread
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text9
  2815  002406                     __ptext9:
  2816                           	opt stack 0
  2817  002406                     _ToMainHigh_sendmsg:
  2818                           	opt stack 15
  2819                           
  2820                           ;incstack = 0
  2821                           ;ToMainHigh_sendmsg@length stored from wreg
  2822  002406  CFE8 F100          	movff	wreg,ToMainHigh_sendmsg@length
  2823                           
  2824                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  2825                           ;	Return value of _ToMainHigh_sendmsg is never used
  2826  00240A  0101               	movlb	1	; () banked
  2827  00240C  0E01               	movlw	high _ToMainHigh_MQ
  2828  00240E  0100               	movlb	0	; () banked
  2829  002410  0100               	movlb	0	; () banked
  2830  002412  6FB8               	movwf	(send_msg@qptr+1)& (0+255),b
  2831  002414  0101               	movlb	1	; () banked
  2832  002416  0E94               	movlw	low _ToMainHigh_MQ
  2833  002418  0100               	movlb	0	; () banked
  2834  00241A  0100               	movlb	0	; () banked
  2835  00241C  6FB7               	movwf	send_msg@qptr& (0+255),b
  2836  00241E  C100  F0B9         	movff	ToMainHigh_sendmsg@length,send_msg@length
  2837  002422  C0C3  F0BA         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  2838  002426  0100               	movlb	0	; () banked
  2839  002428  0100               	movlb	0	; () banked
  2840  00242A  C0C5  F0BC         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  2841  00242E  0100               	movlb	0	; () banked
  2842  002430  0100               	movlb	0	; () banked
  2843  002432  C0C4  F0BB         	movff	ToMainHigh_sendmsg@data,send_msg@data
  2844  002436  EC8A  F00B         	call	_send_msg	;wreg free
  2845  00243A  0012               	return	
  2846  00243C                     __end_of_ToMainHigh_sendmsg:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           indf2	equ	0xFDF
  2852                           fsr2h	equ	0xFDA
  2853                           fsr2l	equ	0xFD9
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function _send_msg *****************
  2857 ;; Defined at:
  2858 ;;		line 24 in file "source/messages.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  2861 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2862 ;;  length          1   57[BANK0 ] unsigned char 
  2863 ;;  msgtype         1   58[BANK0 ] unsigned char 
  2864 ;;  data            2   59[BANK0 ] PTR void 
  2865 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  2866 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), main@ic(77), main@uc(23), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  qmsg            2   65[BANK0 ] PTR struct __msg
  2869 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  2870 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2871 ;;  tlength         2   62[BANK0 ] unsigned int 
  2872 ;;  slot            1   64[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      char 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2882 ;;      Params:         0       6       0       0       0
  2883 ;;      Locals:         0       5       0       0       0
  2884 ;;      Temps:          0       1       0       0       0
  2885 ;;      Totals:         0      12       0       0       0
  2886 ;;Total ram usage:       12 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:   13
  2889 ;; This function calls:
  2890 ;;		_memcpy
  2891 ;; This function is called by:
  2892 ;;		_ToMainHigh_sendmsg
  2893 ;;		_FromMainLow_sendmsg
  2894 ;;		_FromMainHigh_sendmsg
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text10
  2899  001714                     __ptext10:
  2900                           	opt stack 0
  2901  001714                     _send_msg:
  2902                           	opt stack 15
  2903                           
  2904                           ;messages.c: 25: unsigned char slot;
  2905                           ;messages.c: 27: msg *qmsg;
  2906                           ;messages.c: 28: size_t tlength = length;
  2907                           
  2908                           ;incstack = 0
  2909  001714  0100               	movlb	0	; () banked
  2910  001716  0100               	movlb	0	; () banked
  2911  001718  C0B9  F0BE         	movff	send_msg@length,send_msg@tlength
  2912  00171C  0100               	movlb	0	; () banked
  2913  00171E  0100               	movlb	0	; () banked
  2914  001720  6BBF               	clrf	(send_msg@tlength+1)& (0+255),b
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2918  001722  0100               	movlb	0	; () banked
  2919  001724  EE20 F064          	lfsr	2,100
  2920  001728  0100               	movlb	0	; () banked
  2921  00172A  51B7               	movf	send_msg@qptr& (0+255),w,b
  2922  00172C  26D9               	addwf	fsr2l,f,c
  2923  00172E  0100               	movlb	0	; () banked
  2924  001730  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  2925  001732  22DA               	addwfc	fsr2h,f,c
  2926  001734  50DF               	movf	indf2,w,c
  2927  001736  0100               	movlb	0	; () banked
  2928  001738  0100               	movlb	0	; () banked
  2929  00173A  6FC0               	movwf	send_msg@slot& (0+255),b
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2933  00173C  0100               	movlb	0	; () banked
  2934  00173E  0100               	movlb	0	; () banked
  2935  001740  51C0               	movf	send_msg@slot& (0+255),w,b
  2936  001742  0D19               	mullw	25
  2937  001744  50F3               	movf	prodl,w,c
  2938  001746  0100               	movlb	0	; () banked
  2939  001748  0100               	movlb	0	; () banked
  2940  00174A  25B7               	addwf	send_msg@qptr& (0+255),w,b
  2941  00174C  0100               	movlb	0	; () banked
  2942  00174E  0100               	movlb	0	; () banked
  2943  001750  6FC1               	movwf	send_msg@qmsg& (0+255),b
  2944  001752  50F4               	movf	prodh,w,c
  2945  001754  0100               	movlb	0	; () banked
  2946  001756  0100               	movlb	0	; () banked
  2947  001758  21B8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2948  00175A  0100               	movlb	0	; () banked
  2949  00175C  6FC2               	movwf	(send_msg@qmsg+1)& (0+255),b
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;messages.c: 41: if (qmsg->full != 0) {
  2953  00175E  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  2954  001762  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2955  001766  50DF               	movf	indf2,w,c
  2956  001768  B4D8               	btfsc	status,2,c
  2957  00176A  D002               	goto	l4015
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;messages.c: 42: return (-1);
  2961  00176C  0EFF               	movlw	255
  2962  00176E  0012               	return	
  2963  001770                     l4015:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;messages.c: 43: }
  2967                           ;messages.c: 46: qmsg->length = length;
  2968  001770  0100               	movlb	0	; () banked
  2969  001772  EE20 F001          	lfsr	2,1
  2970  001776  0100               	movlb	0	; () banked
  2971  001778  51C1               	movf	send_msg@qmsg& (0+255),w,b
  2972  00177A  26D9               	addwf	fsr2l,f,c
  2973  00177C  0100               	movlb	0	; () banked
  2974  00177E  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2975  001780  22DA               	addwfc	fsr2h,f,c
  2976  001782  0100               	movlb	0	; () banked
  2977  001784  C0B9  FFDF         	movff	send_msg@length,indf2
  2978                           
  2979                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2980  001788  0100               	movlb	0	; () banked
  2981  00178A  EE20 F002          	lfsr	2,2
  2982  00178E  0100               	movlb	0	; () banked
  2983  001790  51C1               	movf	send_msg@qmsg& (0+255),w,b
  2984  001792  26D9               	addwf	fsr2l,f,c
  2985  001794  0100               	movlb	0	; () banked
  2986  001796  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2987  001798  22DA               	addwfc	fsr2h,f,c
  2988  00179A  0100               	movlb	0	; () banked
  2989  00179C  C0BA  FFDF         	movff	send_msg@msgtype,indf2
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2993  0017A0  0E03               	movlw	3
  2994  0017A2  0100               	movlb	0	; () banked
  2995  0017A4  0100               	movlb	0	; () banked
  2996  0017A6  25C1               	addwf	send_msg@qmsg& (0+255),w,b
  2997  0017A8  0100               	movlb	0	; () banked
  2998  0017AA  0100               	movlb	0	; () banked
  2999  0017AC  6FAD               	movwf	memcpy@d1& (0+255),b
  3000  0017AE  0E00               	movlw	0
  3001  0017B0  0100               	movlb	0	; () banked
  3002  0017B2  0100               	movlb	0	; () banked
  3003  0017B4  21C2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3004  0017B6  0100               	movlb	0	; () banked
  3005  0017B8  6FAE               	movwf	(memcpy@d1+1)& (0+255),b
  3006  0017BA  0100               	movlb	0	; () banked
  3007  0017BC  0100               	movlb	0	; () banked
  3008  0017BE  C0BC  F0B0         	movff	send_msg@data+1,memcpy@s1+1
  3009  0017C2  0100               	movlb	0	; () banked
  3010  0017C4  0100               	movlb	0	; () banked
  3011  0017C6  C0BB  F0AF         	movff	send_msg@data,memcpy@s1
  3012  0017CA  C0BE  F0B1         	movff	send_msg@tlength,memcpy@n
  3013  0017CE  C0BF  F0B2         	movff	send_msg@tlength+1,memcpy@n+1
  3014  0017D2  EC26  F010         	call	_memcpy	;wreg free
  3015                           
  3016                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3017  0017D6  0100               	movlb	0	; () banked
  3018  0017D8  EE20 F064          	lfsr	2,100
  3019  0017DC  0100               	movlb	0	; () banked
  3020  0017DE  51B7               	movf	send_msg@qptr& (0+255),w,b
  3021  0017E0  26D9               	addwf	fsr2l,f,c
  3022  0017E2  0100               	movlb	0	; () banked
  3023  0017E4  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3024  0017E6  22DA               	addwfc	fsr2h,f,c
  3025  0017E8  0100               	movlb	0	; () banked
  3026  0017EA  EE10 F064          	lfsr	1,100
  3027  0017EE  0100               	movlb	0	; () banked
  3028  0017F0  51B7               	movf	send_msg@qptr& (0+255),w,b
  3029  0017F2  26E1               	addwf	fsr1l,f,c
  3030  0017F4  0100               	movlb	0	; () banked
  3031  0017F6  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  3032  0017F8  22E2               	addwfc	fsr1h,f,c
  3033  0017FA  50E7               	movf	indf1,w,c
  3034  0017FC  0100               	movlb	0	; () banked
  3035  0017FE  6FBD               	movwf	??_send_msg& (0+255),b
  3036  001800  0100               	movlb	0	; () banked
  3037  001802  29BD               	incf	??_send_msg& (0+255),w,b
  3038  001804  0B03               	andlw	3
  3039  001806  6EDF               	movwf	indf2,c
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;messages.c: 59: qmsg->full = 1;
  3043  001808  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  3044  00180C  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3045  001810  0E01               	movlw	1
  3046  001812  6EDF               	movwf	indf2,c
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;messages.c: 60: return (1);
  3050  001814  0E01               	movlw	1
  3051  001816  0012               	return	
  3052  001818                     __end_of_send_msg:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           postinc0	equ	0xFEE
  3058                           wreg	equ	0xFE8
  3059                           indf1	equ	0xFE7
  3060                           fsr1h	equ	0xFE2
  3061                           fsr1l	equ	0xFE1
  3062                           indf2	equ	0xFDF
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _init_uart_recv *****************
  3068 ;; Defined at:
  3069 ;;		line 51 in file "source/my_uart.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  3072 ;;		 -> main@uc(23), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3084 ;;      Params:         0       2       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       1       0       0       0
  3087 ;;      Totals:         0       3       0       0       0
  3088 ;;Total ram usage:        3 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:   12
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text11
  3099  0024D6                     __ptext11:
  3100                           	opt stack 0
  3101  0024D6                     _init_uart_recv:
  3102                           	opt stack 18
  3103                           
  3104                           ;my_uart.c: 52: uc_ptr = uc;
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;incstack = 0
  3108  0024D6  0100               	movlb	0	; () banked
  3109  0024D8  C0AE  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3110  0024DC  0100               	movlb	0	; () banked
  3111  0024DE  C0AD  F04D         	movff	init_uart_recv@uc,_uc_ptr
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  3115  0024E2  EE20 F016          	lfsr	2,22
  3116  0024E6  504D               	movf	_uc_ptr,w,c
  3117  0024E8  26D9               	addwf	fsr2l,f,c
  3118  0024EA  504E               	movf	_uc_ptr+1,w,c
  3119  0024EC  22DA               	addwfc	fsr2h,f,c
  3120  0024EE  0E00               	movlw	0
  3121  0024F0  6EDF               	movwf	indf2,c
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;my_uart.c: 54: State = MSGCOUNT;
  3125  0024F2  0100               	movlb	0	; () banked
  3126  0024F4  6FAF               	movwf	??_init_uart_recv& (0+255),b
  3127  0024F6  0E00               	movlw	0
  3128  0024F8  6E4B               	movwf	_State,c
  3129  0024FA  0100               	movlb	0	; () banked
  3130  0024FC  51AF               	movf	??_init_uart_recv& (0+255),w,b
  3131                           
  3132                           ; BSR set to: 0
  3133  0024FE  0012               	return	
  3134  002500                     __end_of_init_uart_recv:
  3135                           	opt stack 0
  3136                           tblptru	equ	0xFF8
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           indf1	equ	0xFE7
  3142                           fsr1h	equ	0xFE2
  3143                           fsr1l	equ	0xFE1
  3144                           indf2	equ	0xFDF
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _init_timer1_lthread *****************
  3150 ;; Defined at:
  3151 ;;		line 6 in file "source/timer1_thread.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  3154 ;;		 -> main@t1thread_data(2), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;		None               void
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3166 ;;      Params:         0       2       0       0       0
  3167 ;;      Locals:         0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0
  3169 ;;      Totals:         0       2       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:   12
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text12
  3181  00264C                     __ptext12:
  3182                           	opt stack 0
  3183  00264C                     _init_timer1_lthread:
  3184                           	opt stack 18
  3185                           
  3186                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;incstack = 0
  3190  00264C  C0AD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3191  002650  C0AE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3192  002654  0E00               	movlw	0
  3193  002656  6EDE               	movwf	postinc2,c
  3194  002658  0E00               	movlw	0
  3195  00265A  6EDD               	movwf	postdec2,c
  3196  00265C  0012               	return	
  3197  00265E                     __end_of_init_timer1_lthread:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           prodh	equ	0xFF4
  3201                           prodl	equ	0xFF3
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           indf1	equ	0xFE7
  3205                           fsr1h	equ	0xFE2
  3206                           fsr1l	equ	0xFE1
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           postdec2	equ	0xFDD
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _init_queues *****************
  3215 ;; Defined at:
  3216 ;;		line 194 in file "source/messages.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       1       0       0       0
  3233 ;;      Totals:         0       1       0       0       0
  3234 ;;Total ram usage:        1 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:   13
  3237 ;; This function calls:
  3238 ;;		_init_queue
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text13
  3245  001F78                     __ptext13:
  3246                           	opt stack 0
  3247  001F78                     _init_queues:
  3248                           	opt stack 17
  3249                           
  3250                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3251                           
  3252                           ;incstack = 0
  3253  001F78  0100               	movlb	0	; () banked
  3254  001F7A  6FB1               	movwf	??_init_queues& (0+255),b
  3255  001F7C  0E00               	movlw	0
  3256  001F7E  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3257  001F80  0100               	movlb	0	; () banked
  3258  001F82  51B1               	movf	??_init_queues& (0+255),w,b
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3262  001F84  0102               	movlb	2	; () banked
  3263  001F86  0E02               	movlw	high _ToMainLow_MQ
  3264  001F88  0100               	movlb	0	; () banked
  3265  001F8A  0100               	movlb	0	; () banked
  3266  001F8C  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  3267  001F8E  0102               	movlb	2	; () banked
  3268  001F90  0E66               	movlw	low _ToMainLow_MQ
  3269  001F92  0100               	movlb	0	; () banked
  3270  001F94  0100               	movlb	0	; () banked
  3271  001F96  6FAD               	movwf	init_queue@qptr& (0+255),b
  3272  001F98  EC46  F00F         	call	_init_queue	;wreg free
  3273                           
  3274                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3275  001F9C  0101               	movlb	1	; () banked
  3276  001F9E  0E01               	movlw	high _ToMainHigh_MQ
  3277  001FA0  0100               	movlb	0	; () banked
  3278  001FA2  0100               	movlb	0	; () banked
  3279  001FA4  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  3280  001FA6  0101               	movlb	1	; () banked
  3281  001FA8  0E94               	movlw	low _ToMainHigh_MQ
  3282  001FAA  0100               	movlb	0	; () banked
  3283  001FAC  0100               	movlb	0	; () banked
  3284  001FAE  6FAD               	movwf	init_queue@qptr& (0+255),b
  3285  001FB0  EC46  F00F         	call	_init_queue	;wreg free
  3286                           
  3287                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3288  001FB4  0102               	movlb	2	; () banked
  3289  001FB6  0E02               	movlw	high _FromMainLow_MQ
  3290  001FB8  0100               	movlb	0	; () banked
  3291  001FBA  0100               	movlb	0	; () banked
  3292  001FBC  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  3293  001FBE  0102               	movlb	2	; () banked
  3294  001FC0  0E00               	movlw	low _FromMainLow_MQ
  3295  001FC2  0100               	movlb	0	; () banked
  3296  001FC4  0100               	movlb	0	; () banked
  3297  001FC6  6FAD               	movwf	init_queue@qptr& (0+255),b
  3298  001FC8  EC46  F00F         	call	_init_queue	;wreg free
  3299                           
  3300                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3301  001FCC  0103               	movlb	3	; () banked
  3302  001FCE  0E03               	movlw	high _FromMainHigh_MQ
  3303  001FD0  0100               	movlb	0	; () banked
  3304  001FD2  0100               	movlb	0	; () banked
  3305  001FD4  6FAE               	movwf	(init_queue@qptr+1)& (0+255),b
  3306  001FD6  0103               	movlb	3	; () banked
  3307  001FD8  0E00               	movlw	low _FromMainHigh_MQ
  3308  001FDA  0100               	movlb	0	; () banked
  3309  001FDC  0100               	movlb	0	; () banked
  3310  001FDE  6FAD               	movwf	init_queue@qptr& (0+255),b
  3311  001FE0  EC46  F00F         	call	_init_queue	;wreg free
  3312  001FE4  0012               	return	
  3313  001FE6                     __end_of_init_queues:
  3314                           	opt stack 0
  3315                           tblptru	equ	0xFF8
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           indf1	equ	0xFE7
  3321                           fsr1h	equ	0xFE2
  3322                           fsr1l	equ	0xFE1
  3323                           indf2	equ	0xFDF
  3324                           postinc2	equ	0xFDE
  3325                           postdec2	equ	0xFDD
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _init_queue *****************
  3331 ;; Defined at:
  3332 ;;		line 14 in file "source/messages.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3335 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  i               1   48[BANK0 ] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3347 ;;      Params:         0       2       0       0       0
  3348 ;;      Locals:         0       1       0       0       0
  3349 ;;      Temps:          0       1       0       0       0
  3350 ;;      Totals:         0       4       0       0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:   12
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_init_queues
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text14
  3362  001E8C                     __ptext14:
  3363                           	opt stack 0
  3364  001E8C                     _init_queue:
  3365                           	opt stack 17
  3366                           
  3367                           ;messages.c: 15: unsigned char i;
  3368                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3369                           
  3370                           ;incstack = 0
  3371  001E8C  0100               	movlb	0	; () banked
  3372  001E8E  EE20 F064          	lfsr	2,100
  3373  001E92  0100               	movlb	0	; () banked
  3374  001E94  51AD               	movf	init_queue@qptr& (0+255),w,b
  3375  001E96  26D9               	addwf	fsr2l,f,c
  3376  001E98  0100               	movlb	0	; () banked
  3377  001E9A  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3378  001E9C  22DA               	addwfc	fsr2h,f,c
  3379  001E9E  0E00               	movlw	0
  3380  001EA0  6EDF               	movwf	indf2,c
  3381                           
  3382                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3383  001EA2  0100               	movlb	0	; () banked
  3384  001EA4  EE20 F065          	lfsr	2,101
  3385  001EA8  0100               	movlb	0	; () banked
  3386  001EAA  51AD               	movf	init_queue@qptr& (0+255),w,b
  3387  001EAC  26D9               	addwf	fsr2l,f,c
  3388  001EAE  0100               	movlb	0	; () banked
  3389  001EB0  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3390  001EB2  22DA               	addwfc	fsr2h,f,c
  3391  001EB4  0E00               	movlw	0
  3392  001EB6  6EDF               	movwf	indf2,c
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3396  001EB8  0100               	movlb	0	; () banked
  3397  001EBA  6FAF               	movwf	??_init_queue& (0+255),b
  3398  001EBC  0E00               	movlw	0
  3399  001EBE  0100               	movlb	0	; () banked
  3400  001EC0  0100               	movlb	0	; () banked
  3401  001EC2  6FB0               	movwf	init_queue@i& (0+255),b
  3402  001EC4  0100               	movlb	0	; () banked
  3403  001EC6  51AF               	movf	??_init_queue& (0+255),w,b
  3404                           
  3405                           ; BSR set to: 0
  3406  001EC8  0E03               	movlw	3
  3407  001ECA  0100               	movlb	0	; () banked
  3408  001ECC  0100               	movlb	0	; () banked
  3409  001ECE  65B0               	cpfsgt	init_queue@i& (0+255),b
  3410  001ED0  D001               	goto	l3087
  3411  001ED2  0012               	return	
  3412  001ED4                     l3087:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;messages.c: 20: qptr->queue[i].full = 0;
  3416  001ED4  0100               	movlb	0	; () banked
  3417  001ED6  0100               	movlb	0	; () banked
  3418  001ED8  51B0               	movf	init_queue@i& (0+255),w,b
  3419  001EDA  0D19               	mullw	25
  3420  001EDC  50F3               	movf	prodl,w,c
  3421  001EDE  0100               	movlb	0	; () banked
  3422  001EE0  0100               	movlb	0	; () banked
  3423  001EE2  25AD               	addwf	init_queue@qptr& (0+255),w,b
  3424  001EE4  6ED9               	movwf	fsr2l,c
  3425  001EE6  50F4               	movf	prodh,w,c
  3426  001EE8  0100               	movlb	0	; () banked
  3427  001EEA  0100               	movlb	0	; () banked
  3428  001EEC  21AE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3429  001EEE  6EDA               	movwf	fsr2h,c
  3430  001EF0  0E00               	movlw	0
  3431  001EF2  6EDF               	movwf	indf2,c
  3432                           
  3433                           ; BSR set to: 0
  3434  001EF4  0100               	movlb	0	; () banked
  3435  001EF6  0100               	movlb	0	; () banked
  3436  001EF8  2BB0               	incf	init_queue@i& (0+255),f,b
  3437                           
  3438                           ; BSR set to: 0
  3439  001EFA  0E03               	movlw	3
  3440  001EFC  0100               	movlb	0	; () banked
  3441  001EFE  0100               	movlb	0	; () banked
  3442  001F00  65B0               	cpfsgt	init_queue@i& (0+255),b
  3443  001F02  D7E8               	goto	l3087
  3444  001F04  0012               	return	
  3445  001F06                     __end_of_init_queue:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           prodh	equ	0xFF4
  3449                           prodl	equ	0xFF3
  3450                           postinc0	equ	0xFEE
  3451                           wreg	equ	0xFE8
  3452                           indf1	equ	0xFE7
  3453                           fsr1h	equ	0xFE2
  3454                           fsr1l	equ	0xFE1
  3455                           indf2	equ	0xFDF
  3456                           postinc2	equ	0xFDE
  3457                           postdec2	equ	0xFDD
  3458                           fsr2h	equ	0xFDA
  3459                           fsr2l	equ	0xFD9
  3460                           status	equ	0xFD8
  3461                           
  3462 ;; *************** function _init_i2c *****************
  3463 ;; Defined at:
  3464 ;;		line 385 in file "source/my_i2c.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  3467 ;;		 -> main@ic(77), 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;		None               void
  3472 ;; Registers used:
  3473 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3479 ;;      Params:         0       2       0       0       0
  3480 ;;      Locals:         0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0
  3482 ;;      Totals:         0       2       0       0       0
  3483 ;;Total ram usage:        2 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:   12
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text15
  3494  0019FA                     __ptext15:
  3495                           	opt stack 0
  3496  0019FA                     _init_i2c:
  3497                           	opt stack 18
  3498                           
  3499                           ;my_i2c.c: 386: ic_ptr = ic;
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;incstack = 0
  3503  0019FA  0100               	movlb	0	; () banked
  3504  0019FC  0100               	movlb	0	; () banked
  3505  0019FE  C0AE  F0D2         	movff	init_i2c@ic+1,_ic_ptr+1
  3506  001A02  0100               	movlb	0	; () banked
  3507  001A04  0100               	movlb	0	; () banked
  3508  001A06  C0AD  F0D1         	movff	init_i2c@ic,_ic_ptr
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;my_i2c.c: 387: ic_ptr->buffer[0] = 0;
  3512  001A0A  C0D1  FFD9         	movff	_ic_ptr,fsr2l
  3513  001A0E  C0D2  FFDA         	movff	_ic_ptr+1,fsr2h
  3514  001A12  0E00               	movlw	0
  3515  001A14  6EDF               	movwf	indf2,c
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;my_i2c.c: 388: ic_ptr->buffer[1] = 0;
  3519  001A16  0100               	movlb	0	; () banked
  3520  001A18  EE20 F001          	lfsr	2,1
  3521  001A1C  0100               	movlb	0	; () banked
  3522  001A1E  51D1               	movf	_ic_ptr& (0+255),w,b
  3523  001A20  26D9               	addwf	fsr2l,f,c
  3524  001A22  0100               	movlb	0	; () banked
  3525  001A24  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3526  001A26  22DA               	addwfc	fsr2h,f,c
  3527  001A28  0E00               	movlw	0
  3528  001A2A  6EDF               	movwf	indf2,c
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;my_i2c.c: 389: ic_ptr->buffer[2] = 0;
  3532  001A2C  0100               	movlb	0	; () banked
  3533  001A2E  EE20 F002          	lfsr	2,2
  3534  001A32  0100               	movlb	0	; () banked
  3535  001A34  51D1               	movf	_ic_ptr& (0+255),w,b
  3536  001A36  26D9               	addwf	fsr2l,f,c
  3537  001A38  0100               	movlb	0	; () banked
  3538  001A3A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3539  001A3C  22DA               	addwfc	fsr2h,f,c
  3540  001A3E  0E00               	movlw	0
  3541  001A40  6EDF               	movwf	indf2,c
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;my_i2c.c: 390: ic_ptr->buflen = 0;
  3545  001A42  0100               	movlb	0	; () banked
  3546  001A44  EE20 F016          	lfsr	2,22
  3547  001A48  0100               	movlb	0	; () banked
  3548  001A4A  51D1               	movf	_ic_ptr& (0+255),w,b
  3549  001A4C  26D9               	addwf	fsr2l,f,c
  3550  001A4E  0100               	movlb	0	; () banked
  3551  001A50  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3552  001A52  22DA               	addwfc	fsr2h,f,c
  3553  001A54  0E00               	movlw	0
  3554  001A56  6EDF               	movwf	indf2,c
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;my_i2c.c: 391: ic_ptr->event_count = 0;
  3558  001A58  0100               	movlb	0	; () banked
  3559  001A5A  EE20 F018          	lfsr	2,24
  3560  001A5E  0100               	movlb	0	; () banked
  3561  001A60  51D1               	movf	_ic_ptr& (0+255),w,b
  3562  001A62  26D9               	addwf	fsr2l,f,c
  3563  001A64  0100               	movlb	0	; () banked
  3564  001A66  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3565  001A68  22DA               	addwfc	fsr2h,f,c
  3566  001A6A  0E00               	movlw	0
  3567  001A6C  6EDF               	movwf	indf2,c
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;my_i2c.c: 392: ic_ptr->status = 0x5;
  3571  001A6E  0100               	movlb	0	; () banked
  3572  001A70  EE20 F019          	lfsr	2,25
  3573  001A74  0100               	movlb	0	; () banked
  3574  001A76  51D1               	movf	_ic_ptr& (0+255),w,b
  3575  001A78  26D9               	addwf	fsr2l,f,c
  3576  001A7A  0100               	movlb	0	; () banked
  3577  001A7C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3578  001A7E  22DA               	addwfc	fsr2h,f,c
  3579  001A80  0E05               	movlw	5
  3580  001A82  6EDF               	movwf	indf2,c
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;my_i2c.c: 393: ic_ptr->error_count = 0;
  3584  001A84  0100               	movlb	0	; () banked
  3585  001A86  EE20 F01B          	lfsr	2,27
  3586  001A8A  0100               	movlb	0	; () banked
  3587  001A8C  51D1               	movf	_ic_ptr& (0+255),w,b
  3588  001A8E  26D9               	addwf	fsr2l,f,c
  3589  001A90  0100               	movlb	0	; () banked
  3590  001A92  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3591  001A94  22DA               	addwfc	fsr2h,f,c
  3592  001A96  0E00               	movlw	0
  3593  001A98  6EDF               	movwf	indf2,c
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;my_i2c.c: 394: ic_ptr->sendBufInd = 0;
  3597  001A9A  0100               	movlb	0	; () banked
  3598  001A9C  EE20 F04C          	lfsr	2,76
  3599  001AA0  0100               	movlb	0	; () banked
  3600  001AA2  51D1               	movf	_ic_ptr& (0+255),w,b
  3601  001AA4  26D9               	addwf	fsr2l,f,c
  3602  001AA6  0100               	movlb	0	; () banked
  3603  001AA8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3604  001AAA  22DA               	addwfc	fsr2h,f,c
  3605  001AAC  0E00               	movlw	0
  3606  001AAE  6EDF               	movwf	indf2,c
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;my_i2c.c: 395: ic_ptr->sendBufLen = 0;
  3610  001AB0  0100               	movlb	0	; () banked
  3611  001AB2  EE20 F04B          	lfsr	2,75
  3612  001AB6  0100               	movlb	0	; () banked
  3613  001AB8  51D1               	movf	_ic_ptr& (0+255),w,b
  3614  001ABA  26D9               	addwf	fsr2l,f,c
  3615  001ABC  0100               	movlb	0	; () banked
  3616  001ABE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3617  001AC0  22DA               	addwfc	fsr2h,f,c
  3618  001AC2  0E00               	movlw	0
  3619  001AC4  6EDF               	movwf	indf2,c
  3620                           
  3621                           ; BSR set to: 0
  3622  001AC6  0012               	return	
  3623  001AC8                     __end_of_init_i2c:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           prodh	equ	0xFF4
  3627                           prodl	equ	0xFF3
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           indf1	equ	0xFE7
  3631                           fsr1h	equ	0xFE2
  3632                           fsr1l	equ	0xFE1
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function _i2c_configure_slave *****************
  3641 ;; Defined at:
  3642 ;;		line 401 in file "source/my_i2c.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  addr            1    wreg     unsigned char 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  addr            1   46[BANK0 ] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;		None               void
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3656 ;;      Params:         0       0       0       0       0
  3657 ;;      Locals:         0       1       0       0       0
  3658 ;;      Temps:          0       1       0       0       0
  3659 ;;      Totals:         0       2       0       0       0
  3660 ;;Total ram usage:        2 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:   12
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text16
  3671  002396                     __ptext16:
  3672                           	opt stack 0
  3673  002396                     _i2c_configure_slave:
  3674                           	opt stack 18
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;incstack = 0
  3678                           ;i2c_configure_slave@addr stored from wreg
  3679  002396  CFE8 F0AE          	movff	wreg,i2c_configure_slave@addr
  3680                           
  3681                           ;my_i2c.c: 413: TRISCbits.TRISC3 = 1;
  3682  00239A  8694               	bsf	3988,3,c	;volatile
  3683                           
  3684                           ;my_i2c.c: 414: TRISCbits.TRISC4 = 1;
  3685  00239C  8894               	bsf	3988,4,c	;volatile
  3686                           
  3687                           ;my_i2c.c: 419: SSPADD = addr;
  3688  00239E  C0AE  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3689                           
  3690                           ;my_i2c.c: 421: SSPSTAT = 0x0;
  3691  0023A2  0E00               	movlw	0
  3692  0023A4  6EC7               	movwf	4039,c	;volatile
  3693                           
  3694                           ;my_i2c.c: 422: SSPCON1 = 0x0;
  3695  0023A6  0E00               	movlw	0
  3696  0023A8  6EC6               	movwf	4038,c	;volatile
  3697                           
  3698                           ;my_i2c.c: 423: SSPCON2 = 0x0;
  3699  0023AA  0E00               	movlw	0
  3700  0023AC  6EC5               	movwf	4037,c	;volatile
  3701                           
  3702                           ;my_i2c.c: 424: SSPCON1 |= 0x0E;
  3703  0023AE  0E0E               	movlw	14
  3704  0023B0  12C6               	iorwf	4038,f,c	;volatile
  3705                           
  3706                           ;my_i2c.c: 425: SSPSTAT |= 0b10000000;
  3707  0023B2  8EC7               	bsf	4039,7,c	;volatile
  3708                           
  3709                           ;my_i2c.c: 428: TRISCbits.TRISC3 = 1;
  3710  0023B4  8694               	bsf	3988,3,c	;volatile
  3711                           
  3712                           ;my_i2c.c: 429: TRISCbits.TRISC4 = 1;
  3713  0023B6  8894               	bsf	3988,4,c	;volatile
  3714                           
  3715                           ;my_i2c.c: 448: i2c_mode = 2;
  3716  0023B8  0100               	movlb	0	; () banked
  3717  0023BA  6FAD               	movwf	??_i2c_configure_slave& (0+255),b
  3718  0023BC  0E02               	movlw	2
  3719  0023BE  0100               	movlb	0	; () banked
  3720  0023C0  0100               	movlb	0	; () banked
  3721  0023C2  6FD0               	movwf	_i2c_mode& (0+255),b
  3722  0023C4  0100               	movlb	0	; () banked
  3723  0023C6  51AD               	movf	??_i2c_configure_slave& (0+255),w,b
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;my_i2c.c: 450: SSPCON2bits.SEN = 1;
  3727  0023C8  80C5               	bsf	4037,0,c	;volatile
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;my_i2c.c: 451: SSPCON1 |= 0b00100000;
  3731  0023CA  8AC6               	bsf	4038,5,c	;volatile
  3732                           
  3733                           ; BSR set to: 0
  3734  0023CC  0012               	return	
  3735  0023CE                     __end_of_i2c_configure_slave:
  3736                           	opt stack 0
  3737                           tblptru	equ	0xFF8
  3738                           prodh	equ	0xFF4
  3739                           prodl	equ	0xFF3
  3740                           postinc0	equ	0xFEE
  3741                           wreg	equ	0xFE8
  3742                           indf1	equ	0xFE7
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           postdec2	equ	0xFDD
  3748                           fsr2h	equ	0xFDA
  3749                           fsr2l	equ	0xFD9
  3750                           status	equ	0xFD8
  3751                           
  3752 ;; *************** function _enable_interrupts *****************
  3753 ;; Defined at:
  3754 ;;		line 14 in file "source/interrupts.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;		None               void
  3761 ;; Registers used:
  3762 ;;		None
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3768 ;;      Params:         0       0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         0       0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:   12
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text17
  3783  0026C4                     __ptext17:
  3784                           	opt stack 0
  3785  0026C4                     _enable_interrupts:
  3786                           	opt stack 18
  3787                           
  3788                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;incstack = 0
  3792  0026C4  8ED0               	bsf	4048,7,c	;volatile
  3793                           
  3794                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3795  0026C6  8EF2               	bsf	intcon,7,c	;volatile
  3796                           
  3797                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3798  0026C8  8CF2               	bsf	intcon,6,c	;volatile
  3799  0026CA  0012               	return	
  3800  0026CC                     __end_of_enable_interrupts:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           prodh	equ	0xFF4
  3804                           prodl	equ	0xFF3
  3805                           intcon	equ	0xFF2
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           indf1	equ	0xFE7
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _block_on_To_msgqueues *****************
  3819 ;; Defined at:
  3820 ;;		line 258 in file "source/messages.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;		None               void
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3834 ;;      Params:         0       0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0
  3836 ;;      Temps:          0       1       0       0       0
  3837 ;;      Totals:         0       1       0       0       0
  3838 ;;Total ram usage:        1 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   15
  3841 ;; This function calls:
  3842 ;;		_Delay1KTCYx
  3843 ;;		_check_msg
  3844 ;;		_in_main
  3845 ;; This function is called by:
  3846 ;;		_main
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text18
  3851  001E0E                     __ptext18:
  3852                           	opt stack 0
  3853  001E0E                     _block_on_To_msgqueues:
  3854                           	opt stack 15
  3855                           
  3856                           ;messages.c: 259: if (!in_main()) {
  3857                           
  3858                           ;incstack = 0
  3859  001E0E  EC47  F011         	call	_in_main	;wreg free
  3860  001E12  0100               	movlb	0	; () banked
  3861  001E14  0100               	movlb	0	; () banked
  3862  001E16  51B2               	movf	(?_in_main+1)& (0+255),w,b
  3863  001E18  0100               	movlb	0	; () banked
  3864  001E1A  11B1               	iorwf	?_in_main& (0+255),w,b
  3865  001E1C  B4D8               	btfsc	status,2,c
  3866  001E1E  0012               	return	
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;messages.c: 261: }
  3870                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3871                           
  3872                           ; BSR set to: 0
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;messages.c: 260: return;
  3876  001E20  0100               	movlb	0	; () banked
  3877  001E22  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3878  001E24  0E01               	movlw	1
  3879  001E26  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3880  001E28  0100               	movlb	0	; () banked
  3881  001E2A  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3882  001E2C                     l2945:
  3883                           
  3884                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3885  001E2C  0101               	movlb	1	; () banked
  3886  001E2E  0E01               	movlw	high _ToMainHigh_MQ
  3887  001E30  0100               	movlb	0	; () banked
  3888  001E32  0100               	movlb	0	; () banked
  3889  001E34  6FAE               	movwf	(check_msg@qptr+1)& (0+255),b
  3890  001E36  0101               	movlb	1	; () banked
  3891  001E38  0E94               	movlw	low _ToMainHigh_MQ
  3892  001E3A  0100               	movlb	0	; () banked
  3893  001E3C  0100               	movlb	0	; () banked
  3894  001E3E  6FAD               	movwf	check_msg@qptr& (0+255),b
  3895  001E40  EC1E  F012         	call	_check_msg	;wreg free
  3896  001E44  0900               	iorlw	0
  3897  001E46  B4D8               	btfsc	status,2,c
  3898  001E48  D007               	goto	l2951
  3899                           
  3900                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3901  001E4A  0100               	movlb	0	; () banked
  3902  001E4C  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3903  001E4E  0E00               	movlw	0
  3904  001E50  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3905  001E52  0100               	movlb	0	; () banked
  3906  001E54  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3907  001E56  0012               	return	
  3908  001E58                     l2951:
  3909                           
  3910                           ;messages.c: 271: }
  3911                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3912  001E58  0102               	movlb	2	; () banked
  3913  001E5A  0E02               	movlw	high _ToMainLow_MQ
  3914  001E5C  0100               	movlb	0	; () banked
  3915  001E5E  0100               	movlb	0	; () banked
  3916  001E60  6FAE               	movwf	(check_msg@qptr+1)& (0+255),b
  3917  001E62  0102               	movlb	2	; () banked
  3918  001E64  0E66               	movlw	low _ToMainLow_MQ
  3919  001E66  0100               	movlb	0	; () banked
  3920  001E68  0100               	movlb	0	; () banked
  3921  001E6A  6FAD               	movwf	check_msg@qptr& (0+255),b
  3922  001E6C  EC1E  F012         	call	_check_msg	;wreg free
  3923  001E70  0900               	iorlw	0
  3924  001E72  B4D8               	btfsc	status,2,c
  3925  001E74  D007               	goto	l2957
  3926                           
  3927                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3928  001E76  0100               	movlb	0	; () banked
  3929  001E78  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  3930  001E7A  0E00               	movlw	0
  3931  001E7C  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3932  001E7E  0100               	movlb	0	; () banked
  3933  001E80  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3934  001E82  0012               	return	
  3935  001E84                     l2957:
  3936                           
  3937                           ;messages.c: 278: }
  3938                           ;messages.c: 279: Delay1KTCYx(10);
  3939  001E84  0E0A               	movlw	10
  3940  001E86  ECED  F012         	call	_Delay1KTCYx
  3941  001E8A  D7D0               	goto	l2945
  3942  001E8C                     __end_of_block_on_To_msgqueues:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           prodh	equ	0xFF4
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           indf1	equ	0xFE7
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _in_main *****************
  3961 ;; Defined at:
  3962 ;;		line 40 in file "source/interrupts.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  2   49[BANK0 ] int 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3976 ;;      Params:         0       2       0       0       0
  3977 ;;      Locals:         0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0
  3979 ;;      Totals:         0       2       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:   14
  3983 ;; This function calls:
  3984 ;;		_in_high_int
  3985 ;;		_in_low_int
  3986 ;; This function is called by:
  3987 ;;		_block_on_To_msgqueues
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text19
  3992  00228E                     __ptext19:
  3993                           	opt stack 0
  3994  00228E                     _in_main:
  3995                           	opt stack 15
  3996                           
  3997                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3998                           
  3999                           ;incstack = 0
  4000  00228E  EC24  F011         	call	_in_low_int	;wreg free
  4001  002292  0100               	movlb	0	; () banked
  4002  002294  0100               	movlb	0	; () banked
  4003  002296  51B0               	movf	(?_in_low_int+1)& (0+255),w,b
  4004  002298  0100               	movlb	0	; () banked
  4005  00229A  11AF               	iorwf	?_in_low_int& (0+255),w,b
  4006  00229C  A4D8               	btfss	status,2,c
  4007  00229E  D011               	goto	l2685
  4008                           
  4009                           ; BSR set to: 0
  4010  0022A0  EC2F  F013         	call	_in_high_int	;wreg free
  4011  0022A4  0100               	movlb	0	; () banked
  4012  0022A6  0100               	movlb	0	; () banked
  4013  0022A8  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  4014  0022AA  0100               	movlb	0	; () banked
  4015  0022AC  11AD               	iorwf	?_in_high_int& (0+255),w,b
  4016  0022AE  A4D8               	btfss	status,2,c
  4017  0022B0  D008               	goto	l2685
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;interrupts.c: 42: return (1);
  4021  0022B2  0E00               	movlw	0
  4022  0022B4  0100               	movlb	0	; () banked
  4023  0022B6  0100               	movlb	0	; () banked
  4024  0022B8  6FB2               	movwf	(?_in_main+1)& (0+255),b
  4025  0022BA  0E01               	movlw	1
  4026  0022BC  0100               	movlb	0	; () banked
  4027  0022BE  6FB1               	movwf	?_in_main& (0+255),b
  4028  0022C0  0012               	return	
  4029  0022C2                     l2685:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;interrupts.c: 44: return (0);
  4033  0022C2  0E00               	movlw	0
  4034  0022C4  0100               	movlb	0	; () banked
  4035  0022C6  0100               	movlb	0	; () banked
  4036  0022C8  6FB2               	movwf	(?_in_main+1)& (0+255),b
  4037  0022CA  0E00               	movlw	0
  4038  0022CC  0100               	movlb	0	; () banked
  4039  0022CE  6FB1               	movwf	?_in_main& (0+255),b
  4040  0022D0  0012               	return	
  4041  0022D2                     __end_of_in_main:
  4042                           	opt stack 0
  4043                           tblptru	equ	0xFF8
  4044                           prodh	equ	0xFF4
  4045                           prodl	equ	0xFF3
  4046                           intcon	equ	0xFF2
  4047                           postinc0	equ	0xFEE
  4048                           wreg	equ	0xFE8
  4049                           indf1	equ	0xFE7
  4050                           fsr1h	equ	0xFE2
  4051                           fsr1l	equ	0xFE1
  4052                           indf2	equ	0xFDF
  4053                           postinc2	equ	0xFDE
  4054                           postdec2	equ	0xFDD
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function _in_low_int *****************
  4060 ;; Defined at:
  4061 ;;		line 30 in file "source/interrupts.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2   47[BANK0 ] int 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4075 ;;      Params:         0       2       0       0       0
  4076 ;;      Locals:         0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0
  4078 ;;      Totals:         0       2       0       0       0
  4079 ;;Total ram usage:        2 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:   13
  4082 ;; This function calls:
  4083 ;;		_in_high_int
  4084 ;; This function is called by:
  4085 ;;		_in_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text20
  4090  002248                     __ptext20:
  4091                           	opt stack 0
  4092  002248                     _in_low_int:
  4093                           	opt stack 15
  4094                           
  4095                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;incstack = 0
  4099  002248  ACF2               	btfss	intcon,6,c	;volatile
  4100  00224A  D008               	goto	l2663
  4101                           
  4102                           ;interrupts.c: 32: return (0);
  4103  00224C  0E00               	movlw	0
  4104  00224E  0100               	movlb	0	; () banked
  4105  002250  0100               	movlb	0	; () banked
  4106  002252  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  4107  002254  0E00               	movlw	0
  4108  002256  0100               	movlb	0	; () banked
  4109  002258  6FAF               	movwf	?_in_low_int& (0+255),b
  4110  00225A  0012               	return	
  4111  00225C                     l2663:
  4112  00225C  EC2F  F013         	call	_in_high_int	;wreg free
  4113  002260  0100               	movlb	0	; () banked
  4114  002262  0100               	movlb	0	; () banked
  4115  002264  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  4116  002266  0100               	movlb	0	; () banked
  4117  002268  11AD               	iorwf	?_in_high_int& (0+255),w,b
  4118  00226A  B4D8               	btfsc	status,2,c
  4119  00226C  D008               	goto	l2671
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;interrupts.c: 34: return (0);
  4123  00226E  0E00               	movlw	0
  4124  002270  0100               	movlb	0	; () banked
  4125  002272  0100               	movlb	0	; () banked
  4126  002274  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  4127  002276  0E00               	movlw	0
  4128  002278  0100               	movlb	0	; () banked
  4129  00227A  6FAF               	movwf	?_in_low_int& (0+255),b
  4130  00227C  0012               	return	
  4131  00227E                     l2671:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;interrupts.c: 36: return (1);
  4135  00227E  0E00               	movlw	0
  4136  002280  0100               	movlb	0	; () banked
  4137  002282  0100               	movlb	0	; () banked
  4138  002284  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  4139  002286  0E01               	movlw	1
  4140  002288  0100               	movlb	0	; () banked
  4141  00228A  6FAF               	movwf	?_in_low_int& (0+255),b
  4142  00228C  0012               	return	
  4143  00228E                     __end_of_in_low_int:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           prodh	equ	0xFF4
  4147                           prodl	equ	0xFF3
  4148                           intcon	equ	0xFF2
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           indf1	equ	0xFE7
  4152                           fsr1h	equ	0xFE2
  4153                           fsr1l	equ	0xFE1
  4154                           indf2	equ	0xFDF
  4155                           postinc2	equ	0xFDE
  4156                           postdec2	equ	0xFDD
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function _in_high_int *****************
  4162 ;; Defined at:
  4163 ;;		line 22 in file "source/interrupts.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  2   45[BANK0 ] int 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4177 ;;      Params:         0       2       0       0       0
  4178 ;;      Locals:         0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0
  4180 ;;      Totals:         0       2       0       0       0
  4181 ;;Total ram usage:        2 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:   12
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_in_low_int
  4188 ;;		_in_main
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text21
  4193  00265E                     __ptext21:
  4194                           	opt stack 0
  4195  00265E                     _in_high_int:
  4196                           	opt stack 15
  4197                           
  4198                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;incstack = 0
  4202  00265E  0E00               	movlw	0
  4203  002660  AEF2               	btfss	intcon,7,c	;volatile
  4204  002662  0E01               	movlw	1
  4205  002664  0100               	movlb	0	; () banked
  4206  002666  0100               	movlb	0	; () banked
  4207  002668  6FAD               	movwf	?_in_high_int& (0+255),b
  4208  00266A  0100               	movlb	0	; () banked
  4209  00266C  6BAE               	clrf	(?_in_high_int+1)& (0+255),b
  4210  00266E  0012               	return	
  4211  002670                     __end_of_in_high_int:
  4212                           	opt stack 0
  4213                           tblptru	equ	0xFF8
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           intcon	equ	0xFF2
  4217                           postinc0	equ	0xFEE
  4218                           wreg	equ	0xFE8
  4219                           indf1	equ	0xFE7
  4220                           fsr1h	equ	0xFE2
  4221                           fsr1l	equ	0xFE1
  4222                           indf2	equ	0xFDF
  4223                           postinc2	equ	0xFDE
  4224                           postdec2	equ	0xFDD
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _check_msg *****************
  4230 ;; Defined at:
  4231 ;;		line 222 in file "source/messages.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  4234 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      unsigned char 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4246 ;;      Params:         0       2       0       0       0
  4247 ;;      Locals:         0       0       0       0       0
  4248 ;;      Temps:          0       1       0       0       0
  4249 ;;      Totals:         0       3       0       0       0
  4250 ;;Total ram usage:        3 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:   12
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_block_on_To_msgqueues
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text22
  4261  00243C                     __ptext22:
  4262                           	opt stack 0
  4263  00243C                     _check_msg:
  4264                           	opt stack 17
  4265                           
  4266                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;incstack = 0
  4270  00243C  0100               	movlb	0	; () banked
  4271  00243E  EE20 F065          	lfsr	2,101
  4272  002442  0100               	movlb	0	; () banked
  4273  002444  51AD               	movf	check_msg@qptr& (0+255),w,b
  4274  002446  26D9               	addwf	fsr2l,f,c
  4275  002448  0100               	movlb	0	; () banked
  4276  00244A  51AE               	movf	(check_msg@qptr+1)& (0+255),w,b
  4277  00244C  22DA               	addwfc	fsr2h,f,c
  4278  00244E  50DF               	movf	indf2,w,c
  4279  002450  0100               	movlb	0	; () banked
  4280  002452  6FAF               	movwf	??_check_msg& (0+255),b
  4281  002454  0100               	movlb	0	; () banked
  4282  002456  51AF               	movf	??_check_msg& (0+255),w,b
  4283  002458  0D19               	mullw	25
  4284  00245A  50F3               	movf	prodl,w,c
  4285  00245C  0100               	movlb	0	; () banked
  4286  00245E  0100               	movlb	0	; () banked
  4287  002460  25AD               	addwf	check_msg@qptr& (0+255),w,b
  4288  002462  6ED9               	movwf	fsr2l,c
  4289  002464  50F4               	movf	prodh,w,c
  4290  002466  0100               	movlb	0	; () banked
  4291  002468  0100               	movlb	0	; () banked
  4292  00246A  21AE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4293  00246C  6EDA               	movwf	fsr2h,c
  4294  00246E  50DF               	movf	indf2,w,c
  4295  002470  0012               	return	
  4296  002472                     __end_of_check_msg:
  4297                           	opt stack 0
  4298                           tblptru	equ	0xFF8
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           postinc0	equ	0xFEE
  4303                           wreg	equ	0xFE8
  4304                           indf1	equ	0xFE7
  4305                           fsr1h	equ	0xFE2
  4306                           fsr1l	equ	0xFE1
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           postdec2	equ	0xFDD
  4310                           fsr2h	equ	0xFDA
  4311                           fsr2l	equ	0xFD9
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _Delay1KTCYx *****************
  4315 ;; Defined at:
  4316 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  unit            1    wreg     unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  unit            1   45[BANK0 ] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;		None               void
  4323 ;; Registers used:
  4324 ;;		wreg
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4330 ;;      Params:         0       0       0       0       0
  4331 ;;      Locals:         0       1       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         0       1       0       0       0
  4334 ;;Total ram usage:        1 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:   12
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_block_on_To_msgqueues
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text23
  4345  0025DA                     __ptext23:
  4346                           	opt stack 0
  4347  0025DA                     _Delay1KTCYx:
  4348                           	opt stack 17
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;incstack = 0
  4352                           ;Delay1KTCYx@unit stored from wreg
  4353  0025DA  CFE8 F0AD          	movff	wreg,Delay1KTCYx@unit
  4354  0025DE                     l895:
  4355  0025DE  0EFA               	movlw	250
  4356  0025E0                     u2927:
  4357  0025E0  F000               	nop	
  4358  0025E2  2EE8               	decfsz	wreg,f,c
  4359  0025E4  D7FD               	goto	u2927
  4360  0025E6  0100               	movlb	0	; () banked
  4361  0025E8  0100               	movlb	0	; () banked
  4362  0025EA  2FAD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4363  0025EC  D7F8               	goto	l895
  4364  0025EE  0012               	return	
  4365  0025F0                     __end_of_Delay1KTCYx:
  4366                           	opt stack 0
  4367                           tblptru	equ	0xFF8
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           postinc0	equ	0xFEE
  4372                           wreg	equ	0xFE8
  4373                           indf1	equ	0xFE7
  4374                           fsr1h	equ	0xFE2
  4375                           fsr1l	equ	0xFE1
  4376                           indf2	equ	0xFDF
  4377                           postinc2	equ	0xFDE
  4378                           postdec2	equ	0xFDD
  4379                           fsr2h	equ	0xFDA
  4380                           fsr2l	equ	0xFD9
  4381                           status	equ	0xFD8
  4382                           
  4383 ;; *************** function _ToMainLow_recvmsg *****************
  4384 ;; Defined at:
  4385 ;;		line 112 in file "source/messages.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  maxlength       1    wreg     unsigned char 
  4388 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4389 ;;		 -> main@msgtype(1), 
  4390 ;;  data            2    2[BANK1 ] PTR void 
  4391 ;;		 -> main@msgbuffer(23), 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  maxlength       1   69[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      char 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4403 ;;      Params:         0       0       4       0       0
  4404 ;;      Locals:         0       1       0       0       0
  4405 ;;      Temps:          0       0       0       0       0
  4406 ;;      Totals:         0       1       4       0       0
  4407 ;;Total ram usage:        5 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:   14
  4410 ;; This function calls:
  4411 ;;		_recv_msg
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text24
  4418  0022D2                     __ptext24:
  4419                           	opt stack 0
  4420  0022D2                     _ToMainLow_recvmsg:
  4421                           	opt stack 16
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;incstack = 0
  4425                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4426  0022D2  CFE8 F0C5          	movff	wreg,ToMainLow_recvmsg@maxlength
  4427                           
  4428                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4429  0022D6  0102               	movlb	2	; () banked
  4430  0022D8  0E02               	movlw	high _ToMainLow_MQ
  4431  0022DA  0100               	movlb	0	; () banked
  4432  0022DC  0100               	movlb	0	; () banked
  4433  0022DE  6FB8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4434  0022E0  0102               	movlb	2	; () banked
  4435  0022E2  0E66               	movlw	low _ToMainLow_MQ
  4436  0022E4  0100               	movlb	0	; () banked
  4437  0022E6  0100               	movlb	0	; () banked
  4438  0022E8  6FB7               	movwf	recv_msg@qptr& (0+255),b
  4439  0022EA  C0C5  F0B9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4440  0022EE  0101               	movlb	1	; () banked
  4441  0022F0  0100               	movlb	0	; () banked
  4442  0022F2  C101  F0BB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4443  0022F6  0101               	movlb	1	; () banked
  4444  0022F8  0100               	movlb	0	; () banked
  4445  0022FA  C100  F0BA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4446  0022FE  0101               	movlb	1	; () banked
  4447  002300  0100               	movlb	0	; () banked
  4448  002302  C103  F0BD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4449  002306  0101               	movlb	1	; () banked
  4450  002308  0100               	movlb	0	; () banked
  4451  00230A  C102  F0BC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4452  00230E  ECEF  F00A         	call	_recv_msg	;wreg free
  4453  002312  0012               	return	
  4454  002314                     __end_of_ToMainLow_recvmsg:
  4455                           	opt stack 0
  4456                           tblptru	equ	0xFF8
  4457                           prodh	equ	0xFF4
  4458                           prodl	equ	0xFF3
  4459                           intcon	equ	0xFF2
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           indf1	equ	0xFE7
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           indf2	equ	0xFDF
  4466                           postinc2	equ	0xFDE
  4467                           postdec2	equ	0xFDD
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _ToMainHigh_recvmsg *****************
  4473 ;; Defined at:
  4474 ;;		line 135 in file "source/messages.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  maxlength       1    wreg     unsigned char 
  4477 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  4478 ;;		 -> main@msgtype(1), 
  4479 ;;  data            2    2[BANK1 ] PTR void 
  4480 ;;		 -> main@msgbuffer(23), 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  maxlength       1   69[BANK0 ] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      char 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4492 ;;      Params:         0       0       4       0       0
  4493 ;;      Locals:         0       1       0       0       0
  4494 ;;      Temps:          0       0       0       0       0
  4495 ;;      Totals:         0       1       4       0       0
  4496 ;;Total ram usage:        5 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:   14
  4499 ;; This function calls:
  4500 ;;		_recv_msg
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text25
  4507  002314                     __ptext25:
  4508                           	opt stack 0
  4509  002314                     _ToMainHigh_recvmsg:
  4510                           	opt stack 16
  4511                           
  4512                           ;incstack = 0
  4513                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4514  002314  CFE8 F0C5          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4515                           
  4516                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4517  002318  0101               	movlb	1	; () banked
  4518  00231A  0E01               	movlw	high _ToMainHigh_MQ
  4519  00231C  0100               	movlb	0	; () banked
  4520  00231E  0100               	movlb	0	; () banked
  4521  002320  6FB8               	movwf	(recv_msg@qptr+1)& (0+255),b
  4522  002322  0101               	movlb	1	; () banked
  4523  002324  0E94               	movlw	low _ToMainHigh_MQ
  4524  002326  0100               	movlb	0	; () banked
  4525  002328  0100               	movlb	0	; () banked
  4526  00232A  6FB7               	movwf	recv_msg@qptr& (0+255),b
  4527  00232C  C0C5  F0B9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4528  002330  0101               	movlb	1	; () banked
  4529  002332  0100               	movlb	0	; () banked
  4530  002334  C101  F0BB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4531  002338  0101               	movlb	1	; () banked
  4532  00233A  0100               	movlb	0	; () banked
  4533  00233C  C100  F0BA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4534  002340  0101               	movlb	1	; () banked
  4535  002342  0100               	movlb	0	; () banked
  4536  002344  C103  F0BD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4537  002348  0101               	movlb	1	; () banked
  4538  00234A  0100               	movlb	0	; () banked
  4539  00234C  C102  F0BC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4540  002350  ECEF  F00A         	call	_recv_msg	;wreg free
  4541  002354  0012               	return	
  4542  002356                     __end_of_ToMainHigh_recvmsg:
  4543                           	opt stack 0
  4544                           tblptru	equ	0xFF8
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           fsr1h	equ	0xFE2
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           postinc2	equ	0xFDE
  4555                           postdec2	equ	0xFDD
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560 ;; *************** function _recv_msg *****************
  4561 ;; Defined at:
  4562 ;;		line 63 in file "source/messages.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  4565 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4566 ;;  maxlength       1   57[BANK0 ] unsigned char 
  4567 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  4568 ;;		 -> main@msgtype(1), 
  4569 ;;  data            2   60[BANK0 ] PTR void 
  4570 ;;		 -> main@msgbuffer(23), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  4573 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4574 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4575 ;;  tlength         2   65[BANK0 ] unsigned int 
  4576 ;;  slot            1   64[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      char 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4586 ;;      Params:         0       7       0       0       0
  4587 ;;      Locals:         0       5       0       0       0
  4588 ;;      Temps:          0       2       0       0       0
  4589 ;;      Totals:         0      14       0       0       0
  4590 ;;Total ram usage:       14 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:   13
  4593 ;; This function calls:
  4594 ;;		_memcpy
  4595 ;; This function is called by:
  4596 ;;		_ToMainLow_recvmsg
  4597 ;;		_ToMainHigh_recvmsg
  4598 ;;		_FromMainLow_recvmsg
  4599 ;;		_FromMainHigh_recvmsg
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text26
  4604  0015DE                     __ptext26:
  4605                           	opt stack 0
  4606  0015DE                     _recv_msg:
  4607                           	opt stack 16
  4608                           
  4609                           ;messages.c: 64: unsigned char slot;
  4610                           ;messages.c: 68: msg *qmsg;
  4611                           ;messages.c: 69: size_t tlength;
  4612                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4613                           
  4614                           ;incstack = 0
  4615  0015DE  0100               	movlb	0	; () banked
  4616  0015E0  EE20 F065          	lfsr	2,101
  4617  0015E4  0100               	movlb	0	; () banked
  4618  0015E6  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4619  0015E8  26D9               	addwf	fsr2l,f,c
  4620  0015EA  0100               	movlb	0	; () banked
  4621  0015EC  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4622  0015EE  22DA               	addwfc	fsr2h,f,c
  4623  0015F0  50DF               	movf	indf2,w,c
  4624  0015F2  0100               	movlb	0	; () banked
  4625  0015F4  0100               	movlb	0	; () banked
  4626  0015F6  6FC0               	movwf	recv_msg@slot& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4630  0015F8  0100               	movlb	0	; () banked
  4631  0015FA  0100               	movlb	0	; () banked
  4632  0015FC  51C0               	movf	recv_msg@slot& (0+255),w,b
  4633  0015FE  0D19               	mullw	25
  4634  001600  50F3               	movf	prodl,w,c
  4635  001602  0100               	movlb	0	; () banked
  4636  001604  0100               	movlb	0	; () banked
  4637  001606  25B7               	addwf	recv_msg@qptr& (0+255),w,b
  4638  001608  0100               	movlb	0	; () banked
  4639  00160A  0100               	movlb	0	; () banked
  4640  00160C  6FC3               	movwf	recv_msg@qmsg& (0+255),b
  4641  00160E  50F4               	movf	prodh,w,c
  4642  001610  0100               	movlb	0	; () banked
  4643  001612  0100               	movlb	0	; () banked
  4644  001614  21B8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4645  001616  0100               	movlb	0	; () banked
  4646  001618  6FC4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;messages.c: 74: if (qmsg->full == 1) {
  4650  00161A  0E01               	movlw	1
  4651  00161C  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4652  001620  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4653  001624  62DF               	cpfseq	indf2,c
  4654  001626  D074               	goto	l4065
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4658  001628  0100               	movlb	0	; () banked
  4659  00162A  EE20 F001          	lfsr	2,1
  4660  00162E  0100               	movlb	0	; () banked
  4661  001630  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4662  001632  26D9               	addwf	fsr2l,f,c
  4663  001634  0100               	movlb	0	; () banked
  4664  001636  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4665  001638  22DA               	addwfc	fsr2h,f,c
  4666  00163A  50DF               	movf	indf2,w,c
  4667  00163C  0100               	movlb	0	; () banked
  4668  00163E  0100               	movlb	0	; () banked
  4669  001640  5DB9               	subwf	recv_msg@maxlength& (0+255),w,b
  4670  001642  B0D8               	btfsc	status,0,c
  4671  001644  D002               	goto	l4049
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;messages.c: 77: return (-3);
  4675  001646  0EFD               	movlw	253
  4676  001648  0012               	return	
  4677  00164A                     l4049:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;messages.c: 78: }
  4681                           ;messages.c: 80: tlength = qmsg->length;
  4682  00164A  0100               	movlb	0	; () banked
  4683  00164C  EE20 F001          	lfsr	2,1
  4684  001650  0100               	movlb	0	; () banked
  4685  001652  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4686  001654  26D9               	addwf	fsr2l,f,c
  4687  001656  0100               	movlb	0	; () banked
  4688  001658  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4689  00165A  22DA               	addwfc	fsr2h,f,c
  4690  00165C  50DF               	movf	indf2,w,c
  4691  00165E  0100               	movlb	0	; () banked
  4692  001660  6FBE               	movwf	??_recv_msg& (0+255),b
  4693  001662  0100               	movlb	0	; () banked
  4694  001664  51BE               	movf	??_recv_msg& (0+255),w,b
  4695  001666  0100               	movlb	0	; () banked
  4696  001668  0100               	movlb	0	; () banked
  4697  00166A  6FC1               	movwf	recv_msg@tlength& (0+255),b
  4698  00166C  0100               	movlb	0	; () banked
  4699  00166E  6BC2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4703  001670  0100               	movlb	0	; () banked
  4704  001672  0100               	movlb	0	; () banked
  4705  001674  C0BD  F0AE         	movff	recv_msg@data+1,memcpy@d1+1
  4706  001678  0100               	movlb	0	; () banked
  4707  00167A  0100               	movlb	0	; () banked
  4708  00167C  C0BC  F0AD         	movff	recv_msg@data,memcpy@d1
  4709  001680  0E03               	movlw	3
  4710  001682  0100               	movlb	0	; () banked
  4711  001684  0100               	movlb	0	; () banked
  4712  001686  25C3               	addwf	recv_msg@qmsg& (0+255),w,b
  4713  001688  0100               	movlb	0	; () banked
  4714  00168A  6FBE               	movwf	??_recv_msg& (0+255),b
  4715  00168C  0E00               	movlw	0
  4716  00168E  0100               	movlb	0	; () banked
  4717  001690  0100               	movlb	0	; () banked
  4718  001692  21C4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4719  001694  0100               	movlb	0	; () banked
  4720  001696  6FBF               	movwf	(??_recv_msg+1)& (0+255),b
  4721  001698  C0BE  F0AF         	movff	??_recv_msg,memcpy@s1
  4722  00169C  C0BF  F0B0         	movff	??_recv_msg+1,memcpy@s1+1
  4723  0016A0  C0C1  F0B1         	movff	recv_msg@tlength,memcpy@n
  4724  0016A4  C0C2  F0B2         	movff	recv_msg@tlength+1,memcpy@n+1
  4725  0016A8  EC26  F010         	call	_memcpy	;wreg free
  4726                           
  4727                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4728  0016AC  0100               	movlb	0	; () banked
  4729  0016AE  EE20 F065          	lfsr	2,101
  4730  0016B2  0100               	movlb	0	; () banked
  4731  0016B4  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4732  0016B6  26D9               	addwf	fsr2l,f,c
  4733  0016B8  0100               	movlb	0	; () banked
  4734  0016BA  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4735  0016BC  22DA               	addwfc	fsr2h,f,c
  4736  0016BE  0100               	movlb	0	; () banked
  4737  0016C0  EE10 F065          	lfsr	1,101
  4738  0016C4  0100               	movlb	0	; () banked
  4739  0016C6  51B7               	movf	recv_msg@qptr& (0+255),w,b
  4740  0016C8  26E1               	addwf	fsr1l,f,c
  4741  0016CA  0100               	movlb	0	; () banked
  4742  0016CC  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4743  0016CE  22E2               	addwfc	fsr1h,f,c
  4744  0016D0  50E7               	movf	indf1,w,c
  4745  0016D2  0100               	movlb	0	; () banked
  4746  0016D4  6FBE               	movwf	??_recv_msg& (0+255),b
  4747  0016D6  0100               	movlb	0	; () banked
  4748  0016D8  29BE               	incf	??_recv_msg& (0+255),w,b
  4749  0016DA  0B03               	andlw	3
  4750  0016DC  6EDF               	movwf	indf2,c
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4754  0016DE  0100               	movlb	0	; () banked
  4755  0016E0  EE20 F002          	lfsr	2,2
  4756  0016E4  0100               	movlb	0	; () banked
  4757  0016E6  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  4758  0016E8  26D9               	addwf	fsr2l,f,c
  4759  0016EA  0100               	movlb	0	; () banked
  4760  0016EC  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4761  0016EE  22DA               	addwfc	fsr2h,f,c
  4762  0016F0  C0BA  FFE1         	movff	recv_msg@msgtype,fsr1l
  4763  0016F4  C0BB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4764  0016F8  CFDF FFE7          	movff	indf2,indf1
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;messages.c: 91: qmsg->full = 0;
  4768  0016FC  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4769  001700  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4770  001704  0E00               	movlw	0
  4771  001706  6EDF               	movwf	indf2,c
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;messages.c: 92: return (tlength);
  4775  001708  0100               	movlb	0	; () banked
  4776  00170A  0100               	movlb	0	; () banked
  4777  00170C  51C1               	movf	recv_msg@tlength& (0+255),w,b
  4778  00170E  0012               	return	
  4779  001710                     l4065:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;messages.c: 94: return (-4);
  4783  001710  0EFC               	movlw	252
  4784  001712  0012               	return	
  4785  001714                     __end_of_recv_msg:
  4786                           	opt stack 0
  4787                           tblptru	equ	0xFF8
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           intcon	equ	0xFF2
  4791                           postinc0	equ	0xFEE
  4792                           wreg	equ	0xFE8
  4793                           indf1	equ	0xFE7
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           postinc2	equ	0xFDE
  4798                           postdec2	equ	0xFDD
  4799                           fsr2h	equ	0xFDA
  4800                           fsr2l	equ	0xFD9
  4801                           status	equ	0xFD8
  4802                           
  4803 ;; *************** function _memcpy *****************
  4804 ;; Defined at:
  4805 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  d1              2   45[BANK0 ] PTR void 
  4808 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4809 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4810 ;;		 -> main@msgbuffer(23), 
  4811 ;;  s1              2   47[BANK0 ] PTR const void 
  4812 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4813 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4814 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  4815 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), FromMainHigh_MQ(102), FromMainLow_MQ(102), 
  4816 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  4817 ;;  n               2   49[BANK0 ] unsigned int 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4820 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4821 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4822 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  4823 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), FromMainHigh_MQ(102), FromMainLow_MQ(102), 
  4824 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  4825 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4826 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4827 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4828 ;;		 -> main@msgbuffer(23), 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  2   45[BANK0 ] PTR void 
  4831 ;; Registers used:
  4832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4838 ;;      Params:         0       6       0       0       0
  4839 ;;      Locals:         0       4       0       0       0
  4840 ;;      Temps:          0       0       0       0       0
  4841 ;;      Totals:         0      10       0       0       0
  4842 ;;Total ram usage:       10 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:   12
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_send_msg
  4849 ;;		_recv_msg
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text27
  4854  00204C                     __ptext27:
  4855                           	opt stack 0
  4856  00204C                     _memcpy:
  4857                           	opt stack 15
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;incstack = 0
  4861  00204C  0100               	movlb	0	; () banked
  4862  00204E  0100               	movlb	0	; () banked
  4863  002050  C0B0  F0B6         	movff	memcpy@s1+1,memcpy@s+1
  4864  002054  0100               	movlb	0	; () banked
  4865  002056  0100               	movlb	0	; () banked
  4866  002058  C0AF  F0B5         	movff	memcpy@s1,memcpy@s
  4867  00205C  0100               	movlb	0	; () banked
  4868  00205E  0100               	movlb	0	; () banked
  4869  002060  C0AE  F0B4         	movff	memcpy@d1+1,memcpy@d+1
  4870  002064  0100               	movlb	0	; () banked
  4871  002066  0100               	movlb	0	; () banked
  4872  002068  C0AD  F0B3         	movff	memcpy@d1,memcpy@d
  4873  00206C  D012               	goto	l4035
  4874  00206E                     l4029:
  4875                           
  4876                           ; BSR set to: 0
  4877  00206E  C0B5  FFD9         	movff	memcpy@s,fsr2l
  4878  002072  C0B6  FFDA         	movff	memcpy@s+1,fsr2h
  4879  002076  C0B3  FFE1         	movff	memcpy@d,fsr1l
  4880  00207A  C0B4  FFE2         	movff	memcpy@d+1,fsr1h
  4881  00207E  CFDF FFE7          	movff	indf2,indf1
  4882                           
  4883                           ; BSR set to: 0
  4884  002082  0100               	movlb	0	; () banked
  4885  002084  0100               	movlb	0	; () banked
  4886  002086  4BB5               	infsnz	memcpy@s& (0+255),f,b
  4887  002088  2BB6               	incf	(memcpy@s+1)& (0+255),f,b
  4888                           
  4889                           ; BSR set to: 0
  4890  00208A  0100               	movlb	0	; () banked
  4891  00208C  0100               	movlb	0	; () banked
  4892  00208E  4BB3               	infsnz	memcpy@d& (0+255),f,b
  4893  002090  2BB4               	incf	(memcpy@d+1)& (0+255),f,b
  4894  002092                     l4035:
  4895                           
  4896                           ; BSR set to: 0
  4897  002092  0100               	movlb	0	; () banked
  4898  002094  0100               	movlb	0	; () banked
  4899  002096  07B1               	decf	memcpy@n& (0+255),f,b
  4900  002098  A0D8               	btfss	status,0,c
  4901  00209A  07B2               	decf	(memcpy@n+1)& (0+255),f,b
  4902  00209C  0100               	movlb	0	; () banked
  4903  00209E  29B1               	incf	memcpy@n& (0+255),w,b
  4904  0020A0  B4D8               	btfsc	status,2,c
  4905  0020A2  29B2               	incf	(memcpy@n+1)& (0+255),w,b
  4906  0020A4  B4D8               	btfsc	status,2,c
  4907                           
  4908                           ; BSR set to: 0
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;	Return value of _memcpy is never used
  4912  0020A6  0012               	return	
  4913  0020A8  D7E2               	goto	l4029
  4914  0020AA                     __end_of_memcpy:
  4915                           	opt stack 0
  4916                           tblptru	equ	0xFF8
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           indf1	equ	0xFE7
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           indf2	equ	0xFDF
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function _OpenUSART *****************
  4933 ;; Defined at:
  4934 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  config          1    wreg     unsigned char 
  4937 ;;  spbrg           2   45[BANK0 ] unsigned int 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  config          1   50[BANK0 ] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		wreg, status,2
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4949 ;;      Params:         0       2       0       0       0
  4950 ;;      Locals:         0       1       0       0       0
  4951 ;;      Temps:          0       3       0       0       0
  4952 ;;      Totals:         0       6       0       0       0
  4953 ;;Total ram usage:        6 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:   12
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text28
  4964  001CFA                     __ptext28:
  4965                           	opt stack 0
  4966  001CFA                     _OpenUSART:
  4967                           	opt stack 18
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;incstack = 0
  4971                           ;OpenUSART@config stored from wreg
  4972  001CFA  CFE8 F0B2          	movff	wreg,OpenUSART@config
  4973  001CFE  0E00               	movlw	0
  4974  001D00  6EAC               	movwf	4012,c	;volatile
  4975  001D02  0E00               	movlw	0
  4976  001D04  6EAB               	movwf	4011,c	;volatile
  4977  001D06  0100               	movlb	0	; () banked
  4978  001D08  0100               	movlb	0	; () banked
  4979  001D0A  B1B2               	btfsc	OpenUSART@config& (0+255),0,b
  4980                           
  4981                           ; BSR set to: 0
  4982  001D0C  88AC               	bsf	4012,4,c	;volatile
  4983                           
  4984                           ; BSR set to: 0
  4985                           
  4986                           ; BSR set to: 0
  4987  001D0E  0100               	movlb	0	; () banked
  4988  001D10  0100               	movlb	0	; () banked
  4989  001D12  A3B2               	btfss	OpenUSART@config& (0+255),1,b
  4990  001D14  D002               	goto	l2899
  4991                           
  4992                           ; BSR set to: 0
  4993  001D16  8CAC               	bsf	4012,6,c	;volatile
  4994  001D18  8CAB               	bsf	4011,6,c	;volatile
  4995  001D1A                     l2899:
  4996                           
  4997                           ; BSR set to: 0
  4998  001D1A  0100               	movlb	0	; () banked
  4999  001D1C  0100               	movlb	0	; () banked
  5000  001D1E  B5B2               	btfsc	OpenUSART@config& (0+255),2,b
  5001                           
  5002                           ; BSR set to: 0
  5003  001D20  8EAC               	bsf	4012,7,c	;volatile
  5004                           
  5005                           ; BSR set to: 0
  5006                           
  5007                           ; BSR set to: 0
  5008  001D22  0100               	movlb	0	; () banked
  5009  001D24  0100               	movlb	0	; () banked
  5010  001D26  A7B2               	btfss	OpenUSART@config& (0+255),3,b
  5011  001D28  D002               	goto	l651
  5012                           
  5013                           ; BSR set to: 0
  5014  001D2A  88AB               	bsf	4011,4,c	;volatile
  5015  001D2C  D001               	goto	l2907
  5016  001D2E                     l651:
  5017                           
  5018                           ; BSR set to: 0
  5019  001D2E  8AAB               	bsf	4011,5,c	;volatile
  5020  001D30                     l2907:
  5021                           
  5022                           ; BSR set to: 0
  5023  001D30  0100               	movlb	0	; () banked
  5024  001D32  0100               	movlb	0	; () banked
  5025  001D34  B9B2               	btfsc	OpenUSART@config& (0+255),4,b
  5026                           
  5027                           ; BSR set to: 0
  5028  001D36  84AC               	bsf	4012,2,c	;volatile
  5029                           
  5030                           ; BSR set to: 0
  5031  001D38  989E               	bcf	3998,4,c	;volatile
  5032                           
  5033                           ; BSR set to: 0
  5034  001D3A  0100               	movlb	0	; () banked
  5035  001D3C  0100               	movlb	0	; () banked
  5036  001D3E  BBB2               	btfsc	OpenUSART@config& (0+255),5,b
  5037                           
  5038                           ; BSR set to: 0
  5039  001D40  86AB               	bsf	4011,3,c	;volatile
  5040                           
  5041                           ; BSR set to: 0
  5042                           
  5043                           ; BSR set to: 0
  5044  001D42  0100               	movlb	0	; () banked
  5045  001D44  0100               	movlb	0	; () banked
  5046  001D46  ADB2               	btfss	OpenUSART@config& (0+255),6,b
  5047  001D48  D002               	goto	l655
  5048                           
  5049                           ; BSR set to: 0
  5050  001D4A  8A9D               	bsf	3997,5,c	;volatile
  5051  001D4C  D001               	goto	l656
  5052  001D4E                     l655:
  5053                           
  5054                           ; BSR set to: 0
  5055  001D4E  9A9D               	bcf	3997,5,c	;volatile
  5056  001D50                     l656:
  5057                           
  5058                           ; BSR set to: 0
  5059  001D50  9A9E               	bcf	3998,5,c	;volatile
  5060                           
  5061                           ; BSR set to: 0
  5062  001D52  0100               	movlb	0	; () banked
  5063  001D54  0100               	movlb	0	; () banked
  5064  001D56  AFB2               	btfss	OpenUSART@config& (0+255),7,b
  5065  001D58  D002               	goto	l657
  5066                           
  5067                           ; BSR set to: 0
  5068  001D5A  889D               	bsf	3997,4,c	;volatile
  5069  001D5C  D001               	goto	l658
  5070  001D5E                     l657:
  5071                           
  5072                           ; BSR set to: 0
  5073  001D5E  989D               	bcf	3997,4,c	;volatile
  5074  001D60                     l658:
  5075                           
  5076                           ; BSR set to: 0
  5077  001D60  C0AD  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5078                           
  5079                           ; BSR set to: 0
  5080  001D64  0100               	movlb	0	; () banked
  5081  001D66  C0AE  F0AF         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5082  001D6A  C0AF  F0B0         	movff	??_OpenUSART,??_OpenUSART+1
  5083  001D6E  0100               	movlb	0	; () banked
  5084  001D70  6BB1               	clrf	(??_OpenUSART+2)& (0+255),b
  5085  001D72  0100               	movlb	0	; () banked
  5086  001D74  51B0               	movf	(??_OpenUSART+1)& (0+255),w,b
  5087  001D76  6EB0               	movwf	4016,c	;volatile
  5088                           
  5089                           ; BSR set to: 0
  5090  001D78  8AAC               	bsf	4012,5,c	;volatile
  5091                           
  5092                           ; BSR set to: 0
  5093  001D7A  8EAB               	bsf	4011,7,c	;volatile
  5094                           
  5095                           ; BSR set to: 0
  5096  001D7C  9C94               	bcf	3988,6,c	;volatile
  5097                           
  5098                           ; BSR set to: 0
  5099  001D7E  8E94               	bsf	3988,7,c	;volatile
  5100                           
  5101                           ; BSR set to: 0
  5102  001D80  A8AC               	btfss	4012,4,c	;volatile
  5103  001D82  0012               	return	
  5104                           
  5105                           ; BSR set to: 0
  5106  001D84  BEAC               	btfsc	4012,7,c	;volatile
  5107  001D86  0012               	return	
  5108                           
  5109                           ; BSR set to: 0
  5110  001D88  8C94               	bsf	3988,6,c	;volatile
  5111  001D8A  0012               	return	
  5112  001D8C                     __end_of_OpenUSART:
  5113                           	opt stack 0
  5114                           tblptru	equ	0xFF8
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           wreg	equ	0xFE8
  5120                           indf1	equ	0xFE7
  5121                           fsr1h	equ	0xFE2
  5122                           fsr1l	equ	0xFE1
  5123                           indf2	equ	0xFDF
  5124                           postinc2	equ	0xFDE
  5125                           postdec2	equ	0xFDD
  5126                           fsr2h	equ	0xFDA
  5127                           fsr2l	equ	0xFD9
  5128                           status	equ	0xFD8
  5129                           
  5130 ;; *************** function _OpenTimer1 *****************
  5131 ;; Defined at:
  5132 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  config          1    wreg     unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  config          1   45[BANK0 ] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;		None               void
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5146 ;;      Params:         0       0       0       0       0
  5147 ;;      Locals:         0       1       0       0       0
  5148 ;;      Temps:          0       0       0       0       0
  5149 ;;      Totals:         0       1       0       0       0
  5150 ;;Total ram usage:        1 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:   12
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_main
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text29
  5161  0023CE                     __ptext29:
  5162                           	opt stack 0
  5163  0023CE                     _OpenTimer1:
  5164                           	opt stack 18
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;incstack = 0
  5168                           ;OpenTimer1@config stored from wreg
  5169  0023CE  CFE8 F0AD          	movff	wreg,OpenTimer1@config
  5170  0023D2  0100               	movlb	0	; () banked
  5171  0023D4  0100               	movlb	0	; () banked
  5172  0023D6  51AD               	movf	OpenTimer1@config& (0+255),w,b
  5173  0023D8  0B7E               	andlw	126
  5174  0023DA  6ECD               	movwf	4045,c	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177  0023DC  0100               	movlb	0	; () banked
  5178  0023DE  0100               	movlb	0	; () banked
  5179  0023E0  ADAD               	btfss	OpenTimer1@config& (0+255),6,b
  5180  0023E2  D002               	goto	l607
  5181                           
  5182                           ; BSR set to: 0
  5183  0023E4  8ECD               	bsf	4045,7,c	;volatile
  5184  0023E6  D001               	goto	l2859
  5185  0023E8                     l607:
  5186                           
  5187                           ; BSR set to: 0
  5188  0023E8  9ECD               	bcf	4045,7,c	;volatile
  5189  0023EA                     l2859:
  5190                           
  5191                           ; BSR set to: 0
  5192  0023EA  0E00               	movlw	0
  5193  0023EC  6ECF               	movwf	4047,c	;volatile
  5194  0023EE  0E00               	movlw	0
  5195  0023F0  6ECE               	movwf	4046,c	;volatile
  5196                           
  5197                           ; BSR set to: 0
  5198  0023F2  909E               	bcf	3998,0,c	;volatile
  5199                           
  5200                           ; BSR set to: 0
  5201  0023F4  0100               	movlb	0	; () banked
  5202  0023F6  0100               	movlb	0	; () banked
  5203  0023F8  AFAD               	btfss	OpenTimer1@config& (0+255),7,b
  5204  0023FA  D002               	goto	l609
  5205                           
  5206                           ; BSR set to: 0
  5207  0023FC  809D               	bsf	3997,0,c	;volatile
  5208  0023FE  D001               	goto	l610
  5209  002400                     l609:
  5210                           
  5211                           ; BSR set to: 0
  5212  002400  909D               	bcf	3997,0,c	;volatile
  5213  002402                     l610:
  5214                           
  5215                           ; BSR set to: 0
  5216  002402  80CD               	bsf	4045,0,c	;volatile
  5217                           
  5218                           ; BSR set to: 0
  5219  002404  0012               	return	
  5220  002406                     __end_of_OpenTimer1:
  5221                           	opt stack 0
  5222                           tblptru	equ	0xFF8
  5223                           prodh	equ	0xFF4
  5224                           prodl	equ	0xFF3
  5225                           intcon	equ	0xFF2
  5226                           postinc0	equ	0xFEE
  5227                           wreg	equ	0xFE8
  5228                           indf1	equ	0xFE7
  5229                           fsr1h	equ	0xFE2
  5230                           fsr1l	equ	0xFE1
  5231                           indf2	equ	0xFDF
  5232                           postinc2	equ	0xFDE
  5233                           postdec2	equ	0xFDD
  5234                           fsr2h	equ	0xFDA
  5235                           fsr2l	equ	0xFD9
  5236                           status	equ	0xFD8
  5237                           
  5238 ;; *************** function _OpenTimer0 *****************
  5239 ;; Defined at:
  5240 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  config          1    wreg     unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  config          1   45[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;		None               void
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5254 ;;      Params:         0       0       0       0       0
  5255 ;;      Locals:         0       1       0       0       0
  5256 ;;      Temps:          0       0       0       0       0
  5257 ;;      Totals:         0       1       0       0       0
  5258 ;;Total ram usage:        1 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:   12
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_main
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text30
  5269  002500                     __ptext30:
  5270                           	opt stack 0
  5271  002500                     _OpenTimer0:
  5272                           	opt stack 18
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;incstack = 0
  5276                           ;OpenTimer0@config stored from wreg
  5277  002500  CFE8 F0AD          	movff	wreg,OpenTimer0@config
  5278  002504  0100               	movlb	0	; () banked
  5279  002506  0100               	movlb	0	; () banked
  5280  002508  51AD               	movf	OpenTimer0@config& (0+255),w,b
  5281  00250A  0B7F               	andlw	127
  5282  00250C  6ED5               	movwf	4053,c	;volatile
  5283                           
  5284                           ; BSR set to: 0
  5285  00250E  0E00               	movlw	0
  5286  002510  6ED7               	movwf	4055,c	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289  002512  0E00               	movlw	0
  5290  002514  6ED6               	movwf	4054,c	;volatile
  5291                           
  5292                           ; BSR set to: 0
  5293  002516  94F2               	bcf	intcon,2,c	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296  002518  0100               	movlb	0	; () banked
  5297  00251A  0100               	movlb	0	; () banked
  5298  00251C  AFAD               	btfss	OpenTimer0@config& (0+255),7,b
  5299  00251E  D002               	goto	l583
  5300                           
  5301                           ; BSR set to: 0
  5302  002520  8AF2               	bsf	intcon,5,c	;volatile
  5303  002522  D001               	goto	l584
  5304  002524                     l583:
  5305                           
  5306                           ; BSR set to: 0
  5307  002524  9AF2               	bcf	intcon,5,c	;volatile
  5308  002526                     l584:
  5309                           
  5310                           ; BSR set to: 0
  5311  002526  8ED5               	bsf	4053,7,c	;volatile
  5312                           
  5313                           ; BSR set to: 0
  5314  002528  0012               	return	
  5315  00252A                     __end_of_OpenTimer0:
  5316                           	opt stack 0
  5317                           tblptru	equ	0xFF8
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           intcon	equ	0xFF2
  5321                           postinc0	equ	0xFEE
  5322                           wreg	equ	0xFE8
  5323                           indf1	equ	0xFE7
  5324                           fsr1h	equ	0xFE2
  5325                           fsr1l	equ	0xFE1
  5326                           indf2	equ	0xFDF
  5327                           postinc2	equ	0xFDE
  5328                           postdec2	equ	0xFDD
  5329                           fsr2h	equ	0xFDA
  5330                           fsr2l	equ	0xFD9
  5331                           status	equ	0xFD8
  5332                           
  5333 ;; *************** function _InterruptHandlerLow *****************
  5334 ;; Defined at:
  5335 ;;		line 122 in file "source/interrupts.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;		None               void
  5342 ;; Registers used:
  5343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5349 ;;      Params:         0       0       0       0       0
  5350 ;;      Locals:         0       0       0       0       0
  5351 ;;      Temps:         17       0       0       0       0
  5352 ;;      Totals:        17       0       0       0       0
  5353 ;;Total ram usage:       17 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:   11
  5356 ;; This function calls:
  5357 ;;		_timer0_int_handler
  5358 ;;		_timer1_int_handler
  5359 ;;		_uart_recv_int_handler
  5360 ;; This function is called by:
  5361 ;;		Interrupt level 1
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	intcodelo
  5366  000018                     __pintcodelo:
  5367                           	opt stack 0
  5368  000018                     _InterruptHandlerLow:
  5369                           	opt stack 15
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;incstack = 0
  5373  000018  CFD8 F021          	movff	status,??_InterruptHandlerLow
  5374  00001C  CFE8 F022          	movff	wreg,??_InterruptHandlerLow+1
  5375  000020  CFE0 F023          	movff	bsr,??_InterruptHandlerLow+2
  5376  000024  CFFA F024          	movff	pclath,??_InterruptHandlerLow+3
  5377  000028  CFFB F025          	movff	pclatu,??_InterruptHandlerLow+4
  5378  00002C  CFE9 F026          	movff	fsr0l,??_InterruptHandlerLow+5
  5379  000030  CFEA F027          	movff	fsr0h,??_InterruptHandlerLow+6
  5380  000034  CFE1 F028          	movff	fsr1l,??_InterruptHandlerLow+7
  5381  000038  CFE2 F029          	movff	fsr1h,??_InterruptHandlerLow+8
  5382  00003C  CFD9 F02A          	movff	fsr2l,??_InterruptHandlerLow+9
  5383  000040  CFDA F02B          	movff	fsr2h,??_InterruptHandlerLow+10
  5384  000044  CFF3 F02C          	movff	prodl,??_InterruptHandlerLow+11
  5385  000048  CFF4 F02D          	movff	prodh,??_InterruptHandlerLow+12
  5386  00004C  CFF6 F02E          	movff	tblptrl,??_InterruptHandlerLow+13
  5387  000050  CFF7 F02F          	movff	tblptrh,??_InterruptHandlerLow+14
  5388  000054  CFF8 F030          	movff	tblptru,??_InterruptHandlerLow+15
  5389  000058  CFF5 F031          	movff	tablat,??_InterruptHandlerLow+16
  5390                           
  5391                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5392  00005C  A09E               	btfss	3998,0,c	;volatile
  5393  00005E  D003               	goto	i1l4551
  5394                           
  5395                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5396  000060  909E               	bcf	3998,0,c	;volatile
  5397                           
  5398                           ;interrupts.c: 126: timer1_int_handler();
  5399  000062  ECF3  F00F         	call	_timer1_int_handler	;wreg free
  5400  000066                     i1l4551:
  5401                           
  5402                           ;interrupts.c: 127: }
  5403                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5404  000066  AA9E               	btfss	3998,5,c	;volatile
  5405  000068  D003               	goto	i1l4557
  5406                           
  5407                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5408  00006A  9A9E               	bcf	3998,5,c	;volatile
  5409                           
  5410                           ;interrupts.c: 132: uart_recv_int_handler();
  5411  00006C  EC84  F010         	call	_uart_recv_int_handler	;wreg free
  5412  000070                     i1l4557:
  5413                           
  5414                           ;interrupts.c: 133: }
  5415                           ;interrupts.c: 134: if (INTCONbits.TMR0IF) {
  5416  000070  A4F2               	btfss	intcon,2,c	;volatile
  5417  000072  D003               	goto	i1l48
  5418                           
  5419                           ;interrupts.c: 135: INTCONbits.TMR0IF = 0;
  5420  000074  94F2               	bcf	intcon,2,c	;volatile
  5421                           
  5422                           ;interrupts.c: 137: timer0_int_handler();
  5423  000076  EC55  F010         	call	_timer0_int_handler	;wreg free
  5424  00007A                     i1l48:
  5425  00007A  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5426  00007E  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5427  000082  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5428  000086  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5429  00008A  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5430  00008E  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5431  000092  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5432  000096  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5433  00009A  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5434  00009E  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5435  0000A2  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5436  0000A6  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5437  0000AA  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5438  0000AE  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5439  0000B2  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5440  0000B6  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5441  0000BA  C021  FFD8         	movff	??_InterruptHandlerLow,status
  5442  0000BE  0010               	retfie	
  5443  0000C0                     __end_of_InterruptHandlerLow:
  5444                           	opt stack 0
  5445                           pclatu	equ	0xFFB
  5446                           pclath	equ	0xFFA
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           fsr0h	equ	0xFEA
  5456                           fsr0l	equ	0xFE9
  5457                           wreg	equ	0xFE8
  5458                           indf1	equ	0xFE7
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           bsr	equ	0xFE0
  5462                           indf2	equ	0xFDF
  5463                           postinc2	equ	0xFDE
  5464                           postdec2	equ	0xFDD
  5465                           fsr2h	equ	0xFDA
  5466                           fsr2l	equ	0xFD9
  5467                           status	equ	0xFD8
  5468                           
  5469 ;; *************** function _uart_recv_int_handler *****************
  5470 ;; Defined at:
  5471 ;;		line 16 in file "source/my_uart.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;		None               void
  5478 ;; Registers used:
  5479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5485 ;;      Params:         0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0
  5487 ;;      Temps:          1       0       0       0       0
  5488 ;;      Totals:         1       0       0       0       0
  5489 ;;Total ram usage:        1 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:   10
  5492 ;; This function calls:
  5493 ;;		_ReadUSART
  5494 ;;		_ToMainLow_sendmsg
  5495 ;;		_parseUART
  5496 ;; This function is called by:
  5497 ;;		_InterruptHandlerLow
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text32
  5502  002108                     __ptext32:
  5503                           	opt stack 0
  5504  002108                     _uart_recv_int_handler:
  5505                           	opt stack 15
  5506                           
  5507                           ;my_uart.c: 25: if ((PIR1bits.RCIF)) {
  5508                           
  5509                           ;incstack = 0
  5510  002108  AA9E               	btfss	3998,5,c	;volatile
  5511  00210A  D01C               	goto	i1l4539
  5512                           
  5513                           ;my_uart.c: 26: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5514  00210C  EE20 F016          	lfsr	2,22
  5515  002110  504D               	movf	_uc_ptr,w,c
  5516  002112  26D9               	addwf	fsr2l,f,c
  5517  002114  504E               	movf	_uc_ptr+1,w,c
  5518  002116  22DA               	addwfc	fsr2h,f,c
  5519  002118  50DF               	movf	indf2,w,c
  5520  00211A  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  5521  00211C  5020               	movf	??_uart_recv_int_handler,w,c
  5522  00211E  0D01               	mullw	1
  5523  002120  50F3               	movf	prodl,w,c
  5524  002122  244D               	addwf	_uc_ptr,w,c
  5525  002124  6ED9               	movwf	fsr2l,c
  5526  002126  50F4               	movf	prodh,w,c
  5527  002128  204E               	addwfc	_uc_ptr+1,w,c
  5528  00212A  6EDA               	movwf	fsr2h,c
  5529  00212C  ECDE  F012         	call	_ReadUSART	;wreg free
  5530  002130  6EDF               	movwf	indf2,c
  5531                           
  5532                           ;my_uart.c: 29: uc_ptr->buflen++;
  5533  002132  EE20 F016          	lfsr	2,22
  5534  002136  504D               	movf	_uc_ptr,w,c
  5535  002138  26D9               	addwf	fsr2l,f,c
  5536  00213A  504E               	movf	_uc_ptr+1,w,c
  5537  00213C  22DA               	addwfc	fsr2h,f,c
  5538  00213E  2ADF               	incf	indf2,f,c
  5539                           
  5540                           ;my_uart.c: 30: parseUART();
  5541  002140  EC89  F00C         	call	_parseUART	;wreg free
  5542  002144                     i1l4539:
  5543                           
  5544                           ;my_uart.c: 33: }
  5545                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  5546  002144  A64C               	btfss	_USART_Status,3,c
  5547  002146  0012               	return	
  5548                           
  5549                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  5550  002148  98AB               	bcf	4011,4,c	;volatile
  5551                           
  5552                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  5553  00214A  88AB               	bsf	4011,4,c	;volatile
  5554                           
  5555                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  5556  00214C  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  5557  00214E  0E1E               	movlw	30
  5558  002150  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5559  002152  5020               	movf	??_uart_recv_int_handler& (0+255),w,c
  5560  002154  0E00               	movlw	0
  5561  002156  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5562  002158  0E00               	movlw	0
  5563  00215A  6E18               	movwf	ToMainLow_sendmsg@data,c
  5564  00215C  0E00               	movlw	0
  5565  00215E  EC95  F012         	call	_ToMainLow_sendmsg
  5566  002162  0012               	return	
  5567  002164                     __end_of_uart_recv_int_handler:
  5568                           	opt stack 0
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           fsr0h	equ	0xFEA
  5580                           fsr0l	equ	0xFE9
  5581                           wreg	equ	0xFE8
  5582                           indf1	equ	0xFE7
  5583                           fsr1h	equ	0xFE2
  5584                           fsr1l	equ	0xFE1
  5585                           bsr	equ	0xFE0
  5586                           indf2	equ	0xFDF
  5587                           postinc2	equ	0xFDE
  5588                           postdec2	equ	0xFDD
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _parseUART *****************
  5594 ;; Defined at:
  5595 ;;		line 56 in file "source/my_uart.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0
  5611 ;;      Temps:          5       0       0       0       0
  5612 ;;      Totals:         5       0       0       0       0
  5613 ;;Total ram usage:        5 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    9
  5616 ;; This function calls:
  5617 ;;		_ToMainLow_sendmsg
  5618 ;; This function is called by:
  5619 ;;		_uart_recv_int_handler
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text33
  5624  001912                     __ptext33:
  5625                           	opt stack 0
  5626  001912                     _parseUART:
  5627                           	opt stack 15
  5628                           
  5629                           ;my_uart.c: 58: switch(State)
  5630                           
  5631                           ;incstack = 0
  5632  001912  D065               	goto	i1l4529
  5633  001914                     i1l4503:
  5634                           
  5635                           ;my_uart.c: 61: {
  5636                           ;my_uart.c: 62: State = MSGID;
  5637  001914  6E1B               	movwf	??_parseUART& (0+255),c
  5638  001916  0E01               	movlw	1
  5639  001918  6E4B               	movwf	_State,c
  5640  00191A  501B               	movf	??_parseUART& (0+255),w,c
  5641                           
  5642                           ;my_uart.c: 63: command_count = 0;
  5643  00191C  0E00               	movlw	0
  5644  00191E  6E43               	movwf	_command_count+1,c
  5645  001920  0E00               	movlw	0
  5646  001922  6E42               	movwf	_command_count,c
  5647                           
  5648                           ;my_uart.c: 64: command_length = 0;
  5649  001924  0E00               	movlw	0
  5650  001926  6E45               	movwf	_command_length+1,c
  5651  001928  0E00               	movlw	0
  5652  00192A  6E44               	movwf	_command_length,c
  5653                           
  5654                           ;my_uart.c: 65: motor_count = 0;
  5655  00192C  0E00               	movlw	0
  5656  00192E  6E47               	movwf	_motor_count+1,c
  5657  001930  0E00               	movlw	0
  5658  001932  6E46               	movwf	_motor_count,c
  5659                           
  5660                           ;my_uart.c: 66: break;
  5661  001934  0012               	return	
  5662  001936                     i1l4511:
  5663                           
  5664                           ;my_uart.c: 69: {
  5665                           ;my_uart.c: 70: command_length = uc_ptr->buffer[uc_ptr->buflen-1] & 0x0f;
  5666  001936  0EFF               	movlw	255
  5667  001938  6E1B               	movwf	??_parseUART& (0+255),c
  5668  00193A  0EFF               	movlw	255
  5669  00193C  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5670  00193E  EE20 F016          	lfsr	2,22
  5671  001942  504D               	movf	_uc_ptr,w,c
  5672  001944  26D9               	addwf	fsr2l,f,c
  5673  001946  504E               	movf	_uc_ptr+1,w,c
  5674  001948  22DA               	addwfc	fsr2h,f,c
  5675  00194A  50DF               	movf	indf2,w,c
  5676  00194C  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5677  00194E  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  5678  001950  501B               	movf	??_parseUART,w,c
  5679  001952  261D               	addwf	??_parseUART+2,f,c
  5680  001954  501C               	movf	??_parseUART+1,w,c
  5681  001956  221E               	addwfc	??_parseUART+3,f,c
  5682  001958  501D               	movf	??_parseUART+2,w,c
  5683  00195A  244D               	addwf	_uc_ptr,w,c
  5684  00195C  6ED9               	movwf	fsr2l,c
  5685  00195E  501E               	movf	??_parseUART+3,w,c
  5686  001960  204E               	addwfc	_uc_ptr+1,w,c
  5687  001962  6EDA               	movwf	fsr2h,c
  5688  001964  50DF               	movf	indf2,w,c
  5689  001966  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  5690  001968  0E0F               	movlw	15
  5691  00196A  161F               	andwf	??_parseUART+4,f,c
  5692  00196C  501F               	movf	??_parseUART+4,w,c
  5693  00196E  6E44               	movwf	_command_length,c
  5694  001970  6A45               	clrf	_command_length+1,c
  5695                           
  5696                           ;my_uart.c: 71: State = COMMAND;
  5697  001972  6E1B               	movwf	??_parseUART& (0+255),c
  5698  001974  0E02               	movlw	2
  5699  001976  6E4B               	movwf	_State,c
  5700  001978  501B               	movf	??_parseUART& (0+255),w,c
  5701                           
  5702                           ;my_uart.c: 72: break;
  5703  00197A  0012               	return	
  5704  00197C                     i1l4515:
  5705                           
  5706                           ;my_uart.c: 75: {
  5707                           ;my_uart.c: 76: if(command_count+1 < command_length)
  5708  00197C  0E01               	movlw	1
  5709  00197E  2442               	addwf	_command_count,w,c
  5710  001980  6E1B               	movwf	??_parseUART& (0+255),c
  5711  001982  0E00               	movlw	0
  5712  001984  2043               	addwfc	_command_count+1,w,c
  5713  001986  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5714  001988  501C               	movf	??_parseUART+1,w,c
  5715  00198A  0A80               	xorlw	128
  5716  00198C  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5717  00198E  5044               	movf	_command_length,w,c
  5718  001990  5C1B               	subwf	??_parseUART,w,c
  5719  001992  5045               	movf	_command_length+1,w,c
  5720  001994  0A80               	xorlw	128
  5721  001996  581D               	subwfb	(??_parseUART+2)& (0+255),w,c
  5722  001998  B0D8               	btfsc	status,0,c
  5723  00199A  D003               	goto	i1l4519
  5724                           
  5725                           ;my_uart.c: 77: {command_count++;}
  5726  00199C  4A42               	infsnz	_command_count,f,c
  5727  00199E  2A43               	incf	_command_count+1,f,c
  5728  0019A0  0012               	return	
  5729  0019A2                     i1l4519:
  5730                           
  5731                           ;my_uart.c: 78: else
  5732                           ;my_uart.c: 79: {State = CHECKSUM;}
  5733  0019A2  6E1B               	movwf	??_parseUART& (0+255),c
  5734  0019A4  0E03               	movlw	3
  5735  0019A6  6E4B               	movwf	_State,c
  5736  0019A8  501B               	movf	??_parseUART& (0+255),w,c
  5737  0019AA  0012               	return	
  5738  0019AC                     i1l4521:
  5739                           
  5740                           ;my_uart.c: 83: {
  5741                           ;my_uart.c: 84: ToMainLow_sendmsg(sizeof(unsigned char)*(3 + command_length),50,uc_ptr->
      +                          buffer);
  5742  0019AC  6E1B               	movwf	??_parseUART& (0+255),c
  5743  0019AE  0E32               	movlw	50
  5744  0019B0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5745  0019B2  501B               	movf	??_parseUART& (0+255),w,c
  5746  0019B4  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5747  0019B8  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5748  0019BC  5044               	movf	_command_length,w,c
  5749  0019BE  0F03               	addlw	3
  5750  0019C0  EC95  F012         	call	_ToMainLow_sendmsg
  5751                           
  5752                           ;my_uart.c: 85: uc_ptr->buflen = 0;
  5753  0019C4  EE20 F016          	lfsr	2,22
  5754  0019C8  504D               	movf	_uc_ptr,w,c
  5755  0019CA  26D9               	addwf	fsr2l,f,c
  5756  0019CC  504E               	movf	_uc_ptr+1,w,c
  5757  0019CE  22DA               	addwfc	fsr2h,f,c
  5758  0019D0  0E00               	movlw	0
  5759  0019D2  6EDF               	movwf	indf2,c
  5760                           
  5761                           ;my_uart.c: 86: State = MSGCOUNT;
  5762  0019D4  6E1B               	movwf	??_parseUART& (0+255),c
  5763  0019D6  0E00               	movlw	0
  5764  0019D8  6E4B               	movwf	_State,c
  5765  0019DA  501B               	movf	??_parseUART& (0+255),w,c
  5766                           
  5767                           ;my_uart.c: 87: break;
  5768  0019DC  0012               	return	
  5769  0019DE                     i1l4529:
  5770  0019DE  504B               	movf	_State,w,c
  5771                           
  5772                           ; Switch size 1, requested type "space"
  5773                           ; Number of cases is 4, Range of values is 0 to 3
  5774                           ; switch strategies available:
  5775                           ; Name         Instructions Cycles
  5776                           ; simple_byte           13     7 (average)
  5777                           ;	Chosen strategy is simple_byte
  5778  0019E0  0A00               	xorlw	0	; case 0
  5779  0019E2  B4D8               	btfsc	status,2,c
  5780  0019E4  D797               	goto	i1l4503
  5781  0019E6  0A01               	xorlw	1	; case 1
  5782  0019E8  B4D8               	btfsc	status,2,c
  5783  0019EA  D7A5               	goto	i1l4511
  5784  0019EC  0A03               	xorlw	3	; case 2
  5785  0019EE  B4D8               	btfsc	status,2,c
  5786  0019F0  D7C5               	goto	i1l4515
  5787  0019F2  0A01               	xorlw	1	; case 3
  5788  0019F4  A4D8               	btfss	status,2,c
  5789  0019F6  0012               	return	
  5790  0019F8  D7D9               	goto	i1l4521
  5791  0019FA                     __end_of_parseUART:
  5792                           	opt stack 0
  5793                           pclatu	equ	0xFFB
  5794                           pclath	equ	0xFFA
  5795                           tblptru	equ	0xFF8
  5796                           tblptrh	equ	0xFF7
  5797                           tblptrl	equ	0xFF6
  5798                           tablat	equ	0xFF5
  5799                           prodh	equ	0xFF4
  5800                           prodl	equ	0xFF3
  5801                           intcon	equ	0xFF2
  5802                           postinc0	equ	0xFEE
  5803                           fsr0h	equ	0xFEA
  5804                           fsr0l	equ	0xFE9
  5805                           wreg	equ	0xFE8
  5806                           indf1	equ	0xFE7
  5807                           fsr1h	equ	0xFE2
  5808                           fsr1l	equ	0xFE1
  5809                           bsr	equ	0xFE0
  5810                           indf2	equ	0xFDF
  5811                           postinc2	equ	0xFDE
  5812                           postdec2	equ	0xFDD
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _ToMainLow_sendmsg *****************
  5818 ;; Defined at:
  5819 ;;		line 103 in file "source/messages.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  length          1    wreg     unsigned char 
  5822 ;;  msgtype         1   22[COMRAM] unsigned char 
  5823 ;;  data            2   23[COMRAM] PTR void 
  5824 ;;		 -> NULL(0), main@uc(23), 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  length          1   25[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      char 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5836 ;;      Params:         3       0       0       0       0
  5837 ;;      Locals:         1       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0
  5839 ;;      Totals:         4       0       0       0       0
  5840 ;;Total ram usage:        4 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    8
  5843 ;; This function calls:
  5844 ;;		i1_send_msg
  5845 ;; This function is called by:
  5846 ;;		_uart_recv_int_handler
  5847 ;;		_parseUART
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text34
  5852  00252A                     __ptext34:
  5853                           	opt stack 0
  5854  00252A                     _ToMainLow_sendmsg:
  5855                           	opt stack 15
  5856                           
  5857                           ;incstack = 0
  5858                           ;ToMainLow_sendmsg@length stored from wreg
  5859  00252A  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5860                           
  5861                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5862                           ;	Return value of _ToMainLow_sendmsg is never used
  5863  00252E  0102               	movlb	2	; () banked
  5864  002530  0E02               	movlw	high _ToMainLow_MQ
  5865  002532  6E0C               	movwf	i1send_msg@qptr+1,c
  5866  002534  0102               	movlb	2	; () banked
  5867  002536  0E66               	movlw	low _ToMainLow_MQ
  5868  002538  6E0B               	movwf	i1send_msg@qptr,c
  5869  00253A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5870  00253E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5871  002542  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5872  002546  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5873  00254A  EC28  F00E         	call	i1_send_msg	;wreg free
  5874  00254E  0012               	return	
  5875  002550                     __end_of_ToMainLow_sendmsg:
  5876                           	opt stack 0
  5877                           pclatu	equ	0xFFB
  5878                           pclath	equ	0xFFA
  5879                           tblptru	equ	0xFF8
  5880                           tblptrh	equ	0xFF7
  5881                           tblptrl	equ	0xFF6
  5882                           tablat	equ	0xFF5
  5883                           prodh	equ	0xFF4
  5884                           prodl	equ	0xFF3
  5885                           intcon	equ	0xFF2
  5886                           postinc0	equ	0xFEE
  5887                           fsr0h	equ	0xFEA
  5888                           fsr0l	equ	0xFE9
  5889                           wreg	equ	0xFE8
  5890                           indf1	equ	0xFE7
  5891                           fsr1h	equ	0xFE2
  5892                           fsr1l	equ	0xFE1
  5893                           bsr	equ	0xFE0
  5894                           indf2	equ	0xFDF
  5895                           postinc2	equ	0xFDE
  5896                           postdec2	equ	0xFDD
  5897                           fsr2h	equ	0xFDA
  5898                           fsr2l	equ	0xFD9
  5899                           status	equ	0xFD8
  5900                           
  5901 ;; *************** function _ReadUSART *****************
  5902 ;; Defined at:
  5903 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  data            1    0[COMRAM] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      unsigned char 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5917 ;;      Params:         0       0       0       0       0
  5918 ;;      Locals:         1       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0
  5920 ;;      Totals:         1       0       0       0       0
  5921 ;;Total ram usage:        1 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    6
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_uart_recv_int_handler
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text35
  5932  0025BC                     __ptext35:
  5933                           	opt stack 0
  5934  0025BC                     _ReadUSART:
  5935                           	opt stack 18
  5936                           
  5937                           ;incstack = 0
  5938  0025BC  0EF2               	movlw	242
  5939  0025BE  164C               	andwf	_USART_Status,f,c
  5940  0025C0  ACAB               	btfss	4011,6,c	;volatile
  5941  0025C2  D003               	goto	i1l669
  5942  0025C4  904C               	bcf	_USART_Status,0,c
  5943  0025C6  B0AB               	btfsc	4011,0,c	;volatile
  5944  0025C8  804C               	bsf	_USART_Status,0,c
  5945  0025CA                     i1l669:
  5946  0025CA  B4AB               	btfsc	4011,2,c	;volatile
  5947  0025CC  844C               	bsf	_USART_Status,2,c
  5948  0025CE  B2AB               	btfsc	4011,1,c	;volatile
  5949  0025D0  864C               	bsf	_USART_Status,3,c
  5950  0025D2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5951  0025D6  5001               	movf	ReadUSART@data,w,c
  5952  0025D8  0012               	return	
  5953  0025DA                     __end_of_ReadUSART:
  5954                           	opt stack 0
  5955                           pclatu	equ	0xFFB
  5956                           pclath	equ	0xFFA
  5957                           tblptru	equ	0xFF8
  5958                           tblptrh	equ	0xFF7
  5959                           tblptrl	equ	0xFF6
  5960                           tablat	equ	0xFF5
  5961                           prodh	equ	0xFF4
  5962                           prodl	equ	0xFF3
  5963                           intcon	equ	0xFF2
  5964                           postinc0	equ	0xFEE
  5965                           fsr0h	equ	0xFEA
  5966                           fsr0l	equ	0xFE9
  5967                           wreg	equ	0xFE8
  5968                           indf1	equ	0xFE7
  5969                           fsr1h	equ	0xFE2
  5970                           fsr1l	equ	0xFE1
  5971                           bsr	equ	0xFE0
  5972                           indf2	equ	0xFDF
  5973                           postinc2	equ	0xFDE
  5974                           postdec2	equ	0xFDD
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function _timer1_int_handler *****************
  5980 ;; Defined at:
  5981 ;;		line 46 in file "source/user_interrupts.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  result          2   27[COMRAM] unsigned int 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;		None               void
  5988 ;; Registers used:
  5989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5995 ;;      Params:         0       0       0       0       0
  5996 ;;      Locals:         2       0       0       0       0
  5997 ;;      Temps:          1       0       0       0       0
  5998 ;;      Totals:         3       0       0       0       0
  5999 ;;Total ram usage:        3 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    9
  6002 ;; This function calls:
  6003 ;;		i1_ToMainHigh_sendmsg
  6004 ;;		i1_WriteTimer1
  6005 ;; This function is called by:
  6006 ;;		_InterruptHandlerLow
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text36
  6011  001FE6                     __ptext36:
  6012                           	opt stack 0
  6013  001FE6                     _timer1_int_handler:
  6014                           	opt stack 16
  6015                           
  6016                           ;user_interrupts.c: 47: unsigned int result = 0x04;
  6017                           
  6018                           ;incstack = 0
  6019  001FE6  0E00               	movlw	0
  6020  001FE8  6E1D               	movwf	timer1_int_handler@result+1,c
  6021  001FEA  0E04               	movlw	4
  6022  001FEC  6E1C               	movwf	timer1_int_handler@result,c
  6023                           
  6024                           ;user_interrupts.c: 53: NumOfOverflowR++;
  6025  001FEE  4A3A               	infsnz	_NumOfOverflowR,f,c
  6026  001FF0  2A3B               	incf	_NumOfOverflowR+1,f,c
  6027                           
  6028                           ;user_interrupts.c: 54: DeltaOverflowR++;
  6029  001FF2  0100               	movlb	0	; () banked
  6030  001FF4  0100               	movlb	0	; () banked
  6031  001FF6  4BCC               	infsnz	_DeltaOverflowR& (0+255),f,b
  6032  001FF8  2BCD               	incf	(_DeltaOverflowR+1)& (0+255),f,b
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;user_interrupts.c: 55: if(NumOfOverflowR >= OverflowsR && ActiveR == 1)
  6036  001FFA  503B               	movf	_NumOfOverflowR+1,w,c
  6037  001FFC  0A80               	xorlw	128
  6038  001FFE  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6039  002000  503E               	movf	_OverflowsR,w,c
  6040  002002  5C3A               	subwf	_NumOfOverflowR,w,c
  6041  002004  503F               	movf	_OverflowsR+1,w,c
  6042  002006  0A80               	xorlw	128
  6043  002008  581B               	subwfb	??_timer1_int_handler& (0+255),w,c
  6044  00200A  A0D8               	btfss	status,0,c
  6045  00200C  D018               	goto	i1l4499
  6046                           
  6047                           ; BSR set to: 0
  6048  00200E  0100               	movlb	0	; () banked
  6049  002010  0100               	movlb	0	; () banked
  6050  002012  05C8               	decf	_ActiveR& (0+255),w,b
  6051  002014  11C9               	iorwf	(_ActiveR+1)& (0+255),w,b
  6052  002016  A4D8               	btfss	status,2,c
  6053  002018  D012               	goto	i1l4499
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;user_interrupts.c: 56: {
  6057                           ;user_interrupts.c: 57: ActiveR = 0;
  6058  00201A  0E00               	movlw	0
  6059  00201C  0100               	movlb	0	; () banked
  6060  00201E  0100               	movlb	0	; () banked
  6061  002020  6FC9               	movwf	(_ActiveR+1)& (0+255),b
  6062  002022  0E00               	movlw	0
  6063  002024  0100               	movlb	0	; () banked
  6064  002026  6FC8               	movwf	_ActiveR& (0+255),b
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;user_interrupts.c: 58: ToMainHigh_sendmsg(0, 51, (void *) 0);
  6068  002028  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6069  00202A  0E33               	movlw	51
  6070  00202C  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  6071  00202E  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6072  002030  0E00               	movlw	0
  6073  002032  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  6074  002034  0E00               	movlw	0
  6075  002036  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  6076  002038  0E00               	movlw	0
  6077  00203A  ECA8  F012         	call	i1_ToMainHigh_sendmsg
  6078  00203E                     i1l4499:
  6079                           
  6080                           ;user_interrupts.c: 59: }
  6081                           ;user_interrupts.c: 63: WriteTimer1(0);
  6082  00203E  0E00               	movlw	0
  6083  002040  6E02               	movwf	i1WriteTimer1@timer1+1,c
  6084  002042  0E00               	movlw	0
  6085  002044  6E01               	movwf	i1WriteTimer1@timer1,c
  6086  002046  EC38  F013         	call	i1_WriteTimer1	;wreg free
  6087  00204A  0012               	return	
  6088  00204C                     __end_of_timer1_int_handler:
  6089                           	opt stack 0
  6090                           pclatu	equ	0xFFB
  6091                           pclath	equ	0xFFA
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           postinc0	equ	0xFEE
  6100                           fsr0h	equ	0xFEA
  6101                           fsr0l	equ	0xFE9
  6102                           wreg	equ	0xFE8
  6103                           indf1	equ	0xFE7
  6104                           fsr1h	equ	0xFE2
  6105                           fsr1l	equ	0xFE1
  6106                           bsr	equ	0xFE0
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function i1_WriteTimer1 *****************
  6115 ;; Defined at:
  6116 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  timer1          2    0[COMRAM] unsigned int 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  6121 ;; Return value:  Size  Location     Type
  6122 ;;		None               void
  6123 ;; Registers used:
  6124 ;;		None
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6130 ;;      Params:         2       0       0       0       0
  6131 ;;      Locals:         2       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0
  6133 ;;      Totals:         4       0       0       0       0
  6134 ;;Total ram usage:        4 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    6
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_timer1_int_handler
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text37
  6145  002670                     __ptext37:
  6146                           	opt stack 0
  6147  002670                     i1_WriteTimer1:
  6148                           	opt stack 18
  6149                           
  6150                           ;incstack = 0
  6151  002670  C001  F003         	movff	i1WriteTimer1@timer1,i1WriteTimer1@timer
  6152  002674  C002  F004         	movff	i1WriteTimer1@timer1+1,i1WriteTimer1@timer+1
  6153  002678  C004  FFCF         	movff	i1WriteTimer1@timer+1,4047	;volatile
  6154  00267C  C003  FFCE         	movff	i1WriteTimer1@timer,4046	;volatile
  6155  002680  0012               	return	
  6156  002682                     __end_ofi1_WriteTimer1:
  6157                           	opt stack 0
  6158                           pclatu	equ	0xFFB
  6159                           pclath	equ	0xFFA
  6160                           tblptru	equ	0xFF8
  6161                           tblptrh	equ	0xFF7
  6162                           tblptrl	equ	0xFF6
  6163                           tablat	equ	0xFF5
  6164                           prodh	equ	0xFF4
  6165                           prodl	equ	0xFF3
  6166                           intcon	equ	0xFF2
  6167                           postinc0	equ	0xFEE
  6168                           fsr0h	equ	0xFEA
  6169                           fsr0l	equ	0xFE9
  6170                           wreg	equ	0xFE8
  6171                           indf1	equ	0xFE7
  6172                           fsr1h	equ	0xFE2
  6173                           fsr1l	equ	0xFE1
  6174                           bsr	equ	0xFE0
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _timer0_int_handler *****************
  6183 ;; Defined at:
  6184 ;;		line 17 in file "source/user_interrupts.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;		None               void
  6191 ;; Registers used:
  6192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6198 ;;      Params:         0       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0
  6200 ;;      Temps:          1       0       0       0       0
  6201 ;;      Totals:         1       0       0       0       0
  6202 ;;Total ram usage:        1 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    9
  6205 ;; This function calls:
  6206 ;;		i1_ToMainHigh_sendmsg
  6207 ;;		i1_WriteTimer0
  6208 ;; This function is called by:
  6209 ;;		_InterruptHandlerLow
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text38
  6214  0020AA                     __ptext38:
  6215                           	opt stack 0
  6216  0020AA                     _timer0_int_handler:
  6217                           	opt stack 16
  6218                           
  6219                           ;user_interrupts.c: 25: WriteTimer0(0);
  6220                           
  6221                           ;incstack = 0
  6222  0020AA  0E00               	movlw	0
  6223  0020AC  6E02               	movwf	i1WriteTimer0@timer0+1,c
  6224  0020AE  0E00               	movlw	0
  6225  0020B0  6E01               	movwf	i1WriteTimer0@timer0,c
  6226  0020B2  EC41  F013         	call	i1_WriteTimer0	;wreg free
  6227                           
  6228                           ;user_interrupts.c: 26: NumOfOverflowL++;
  6229  0020B6  4A38               	infsnz	_NumOfOverflowL,f,c
  6230  0020B8  2A39               	incf	_NumOfOverflowL+1,f,c
  6231                           
  6232                           ;user_interrupts.c: 27: DeltaOverflowL++;
  6233  0020BA  0100               	movlb	0	; () banked
  6234  0020BC  0100               	movlb	0	; () banked
  6235  0020BE  4BCA               	infsnz	_DeltaOverflowL& (0+255),f,b
  6236  0020C0  2BCB               	incf	(_DeltaOverflowL+1)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;user_interrupts.c: 31: if(NumOfOverflowL >= OverflowsL && ActiveL == 1)
  6240  0020C2  5039               	movf	_NumOfOverflowL+1,w,c
  6241  0020C4  0A80               	xorlw	128
  6242  0020C6  6E1B               	movwf	??_timer0_int_handler& (0+255),c
  6243  0020C8  503C               	movf	_OverflowsL,w,c
  6244  0020CA  5C38               	subwf	_NumOfOverflowL,w,c
  6245  0020CC  503D               	movf	_OverflowsL+1,w,c
  6246  0020CE  0A80               	xorlw	128
  6247  0020D0  581B               	subwfb	??_timer0_int_handler& (0+255),w,c
  6248  0020D2  A0D8               	btfss	status,0,c
  6249  0020D4  0012               	return	
  6250                           
  6251                           ; BSR set to: 0
  6252  0020D6  0100               	movlb	0	; () banked
  6253  0020D8  0100               	movlb	0	; () banked
  6254  0020DA  05C6               	decf	_ActiveL& (0+255),w,b
  6255  0020DC  11C7               	iorwf	(_ActiveL+1)& (0+255),w,b
  6256  0020DE  A4D8               	btfss	status,2,c
  6257  0020E0  0012               	return	
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;user_interrupts.c: 32: {
  6261                           ;user_interrupts.c: 33: ToMainHigh_sendmsg(0, 51, (void *) 0);
  6262  0020E2  6E1B               	movwf	??_timer0_int_handler& (0+255),c
  6263  0020E4  0E33               	movlw	51
  6264  0020E6  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  6265  0020E8  501B               	movf	??_timer0_int_handler& (0+255),w,c
  6266  0020EA  0E00               	movlw	0
  6267  0020EC  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  6268  0020EE  0E00               	movlw	0
  6269  0020F0  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  6270  0020F2  0E00               	movlw	0
  6271  0020F4  ECA8  F012         	call	i1_ToMainHigh_sendmsg
  6272                           
  6273                           ;user_interrupts.c: 34: ActiveL = 0;
  6274  0020F8  0E00               	movlw	0
  6275  0020FA  0100               	movlb	0	; () banked
  6276  0020FC  0100               	movlb	0	; () banked
  6277  0020FE  6FC7               	movwf	(_ActiveL+1)& (0+255),b
  6278  002100  0E00               	movlw	0
  6279  002102  0100               	movlb	0	; () banked
  6280  002104  6FC6               	movwf	_ActiveL& (0+255),b
  6281  002106  0012               	return	
  6282  002108                     __end_of_timer0_int_handler:
  6283                           	opt stack 0
  6284                           pclatu	equ	0xFFB
  6285                           pclath	equ	0xFFA
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           postinc0	equ	0xFEE
  6294                           fsr0h	equ	0xFEA
  6295                           fsr0l	equ	0xFE9
  6296                           wreg	equ	0xFE8
  6297                           indf1	equ	0xFE7
  6298                           fsr1h	equ	0xFE2
  6299                           fsr1l	equ	0xFE1
  6300                           bsr	equ	0xFE0
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           fsr2h	equ	0xFDA
  6305                           fsr2l	equ	0xFD9
  6306                           status	equ	0xFD8
  6307                           
  6308 ;; *************** function i1_WriteTimer0 *****************
  6309 ;; Defined at:
  6310 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  timer0          2    0[COMRAM] unsigned int 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  6315 ;; Return value:  Size  Location     Type
  6316 ;;		None               void
  6317 ;; Registers used:
  6318 ;;		None
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6324 ;;      Params:         2       0       0       0       0
  6325 ;;      Locals:         2       0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0
  6327 ;;      Totals:         4       0       0       0       0
  6328 ;;Total ram usage:        4 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    6
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_timer0_int_handler
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text39
  6339  002682                     __ptext39:
  6340                           	opt stack 0
  6341  002682                     i1_WriteTimer0:
  6342                           	opt stack 18
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;incstack = 0
  6346  002682  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
  6347  002686  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
  6348  00268A  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
  6349  00268E  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
  6350  002692  0012               	return	
  6351  002694                     __end_ofi1_WriteTimer0:
  6352                           	opt stack 0
  6353                           pclatu	equ	0xFFB
  6354                           pclath	equ	0xFFA
  6355                           tblptru	equ	0xFF8
  6356                           tblptrh	equ	0xFF7
  6357                           tblptrl	equ	0xFF6
  6358                           tablat	equ	0xFF5
  6359                           prodh	equ	0xFF4
  6360                           prodl	equ	0xFF3
  6361                           intcon	equ	0xFF2
  6362                           postinc0	equ	0xFEE
  6363                           fsr0h	equ	0xFEA
  6364                           fsr0l	equ	0xFE9
  6365                           wreg	equ	0xFE8
  6366                           indf1	equ	0xFE7
  6367                           fsr1h	equ	0xFE2
  6368                           fsr1l	equ	0xFE1
  6369                           bsr	equ	0xFE0
  6370                           indf2	equ	0xFDF
  6371                           postinc2	equ	0xFDE
  6372                           postdec2	equ	0xFDD
  6373                           fsr2h	equ	0xFDA
  6374                           fsr2l	equ	0xFD9
  6375                           status	equ	0xFD8
  6376                           
  6377 ;; *************** function i1_ToMainHigh_sendmsg *****************
  6378 ;; Defined at:
  6379 ;;		line 126 in file "source/messages.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  length          1    wreg     unsigned char 
  6382 ;;  msgtype         1   22[COMRAM] unsigned char 
  6383 ;;  data            2   23[COMRAM] PTR void 
  6384 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  6385 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), main@ic(77), 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  length          1   25[COMRAM] unsigned char 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      char 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6397 ;;      Params:         3       0       0       0       0
  6398 ;;      Locals:         1       0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0
  6400 ;;      Totals:         4       0       0       0       0
  6401 ;;Total ram usage:        4 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    8
  6404 ;; This function calls:
  6405 ;;		i1_send_msg
  6406 ;; This function is called by:
  6407 ;;		_timer0_int_handler
  6408 ;;		_timer1_int_handler
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text40
  6413  002550                     __ptext40:
  6414                           	opt stack 0
  6415  002550                     i1_ToMainHigh_sendmsg:
  6416                           	opt stack 16
  6417                           
  6418                           ;incstack = 0
  6419                           ;i1ToMainHigh_sendmsg@length stored from wreg
  6420  002550  CFE8 F01A          	movff	wreg,i1ToMainHigh_sendmsg@length
  6421                           
  6422                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6423                           ;	Return value of i1_ToMainHigh_sendmsg is never used
  6424  002554  0101               	movlb	1	; () banked
  6425  002556  0E01               	movlw	high _ToMainHigh_MQ
  6426  002558  6E0C               	movwf	i1send_msg@qptr+1,c
  6427  00255A  0101               	movlb	1	; () banked
  6428  00255C  0E94               	movlw	low _ToMainHigh_MQ
  6429  00255E  6E0B               	movwf	i1send_msg@qptr,c
  6430  002560  C01A  F00D         	movff	i1ToMainHigh_sendmsg@length,i1send_msg@length
  6431  002564  C017  F00E         	movff	i1ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  6432  002568  C019  F010         	movff	i1ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  6433  00256C  C018  F00F         	movff	i1ToMainHigh_sendmsg@data,i1send_msg@data
  6434  002570  EC28  F00E         	call	i1_send_msg	;wreg free
  6435  002574  0012               	return	
  6436  002576                     __end_ofi1_ToMainHigh_sendmsg:
  6437                           	opt stack 0
  6438                           pclatu	equ	0xFFB
  6439                           pclath	equ	0xFFA
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           postinc0	equ	0xFEE
  6448                           fsr0h	equ	0xFEA
  6449                           fsr0l	equ	0xFE9
  6450                           wreg	equ	0xFE8
  6451                           indf1	equ	0xFE7
  6452                           fsr1h	equ	0xFE2
  6453                           fsr1l	equ	0xFE1
  6454                           bsr	equ	0xFE0
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462 ;; *************** function i1_send_msg *****************
  6463 ;; Defined at:
  6464 ;;		line 24 in file "source/messages.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6467 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6468 ;;  length          1   12[COMRAM] unsigned char 
  6469 ;;  msgtype         1   13[COMRAM] unsigned char 
  6470 ;;  data            2   14[COMRAM] PTR void 
  6471 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  6472 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), main@ic(77), main@uc(23), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6475 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6476 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6477 ;;  send_msg        2   17[COMRAM] unsigned int 
  6478 ;;  send_msg        1   19[COMRAM] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      char 
  6481 ;; Registers used:
  6482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6488 ;;      Params:         6       0       0       0       0
  6489 ;;      Locals:         5       0       0       0       0
  6490 ;;      Temps:          1       0       0       0       0
  6491 ;;      Totals:        12       0       0       0       0
  6492 ;;Total ram usage:       12 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    7
  6495 ;; This function calls:
  6496 ;;		i1_memcpy
  6497 ;; This function is called by:
  6498 ;;		_ToMainLow_sendmsg
  6499 ;;		i1_ToMainHigh_sendmsg
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text41
  6504  001C50                     __ptext41:
  6505                           	opt stack 0
  6506  001C50                     i1_send_msg:
  6507                           	opt stack 15
  6508                           
  6509                           ;messages.c: 25: unsigned char slot;
  6510                           ;messages.c: 27: msg *qmsg;
  6511                           ;messages.c: 28: size_t tlength = length;
  6512                           
  6513                           ;incstack = 0
  6514  001C50  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6515  001C54  6A13               	clrf	i1send_msg@tlength+1,c
  6516                           
  6517                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6518  001C56  EE20 F064          	lfsr	2,100
  6519  001C5A  500B               	movf	i1send_msg@qptr,w,c
  6520  001C5C  26D9               	addwf	fsr2l,f,c
  6521  001C5E  500C               	movf	i1send_msg@qptr+1,w,c
  6522  001C60  22DA               	addwfc	fsr2h,f,c
  6523  001C62  50DF               	movf	indf2,w,c
  6524  001C64  6E14               	movwf	i1send_msg@slot,c
  6525                           
  6526                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6527  001C66  5014               	movf	i1send_msg@slot,w,c
  6528  001C68  0D19               	mullw	25
  6529  001C6A  50F3               	movf	prodl,w,c
  6530  001C6C  240B               	addwf	i1send_msg@qptr,w,c
  6531  001C6E  6E15               	movwf	i1send_msg@qmsg,c
  6532  001C70  50F4               	movf	prodh,w,c
  6533  001C72  200C               	addwfc	i1send_msg@qptr+1,w,c
  6534  001C74  6E16               	movwf	i1send_msg@qmsg+1,c
  6535                           
  6536                           ;messages.c: 41: if (qmsg->full != 0) {
  6537  001C76  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6538  001C7A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6539  001C7E  50DF               	movf	indf2,w,c
  6540  001C80  B4D8               	btfsc	status,2,c
  6541  001C82  D002               	goto	i1l4451
  6542                           
  6543                           ;messages.c: 42: return (-1);
  6544  001C84  0EFF               	movlw	255
  6545  001C86  0012               	return	
  6546  001C88                     i1l4451:
  6547                           
  6548                           ;messages.c: 43: }
  6549                           ;messages.c: 46: qmsg->length = length;
  6550  001C88  EE20 F001          	lfsr	2,1
  6551  001C8C  5015               	movf	i1send_msg@qmsg,w,c
  6552  001C8E  26D9               	addwf	fsr2l,f,c
  6553  001C90  5016               	movf	i1send_msg@qmsg+1,w,c
  6554  001C92  22DA               	addwfc	fsr2h,f,c
  6555  001C94  C00D  FFDF         	movff	i1send_msg@length,indf2
  6556                           
  6557                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6558  001C98  EE20 F002          	lfsr	2,2
  6559  001C9C  5015               	movf	i1send_msg@qmsg,w,c
  6560  001C9E  26D9               	addwf	fsr2l,f,c
  6561  001CA0  5016               	movf	i1send_msg@qmsg+1,w,c
  6562  001CA2  22DA               	addwfc	fsr2h,f,c
  6563  001CA4  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6564                           
  6565                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6566  001CA8  0E03               	movlw	3
  6567  001CAA  2415               	addwf	i1send_msg@qmsg,w,c
  6568  001CAC  6E01               	movwf	i1memcpy@d1,c
  6569  001CAE  0E00               	movlw	0
  6570  001CB0  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6571  001CB2  6E02               	movwf	i1memcpy@d1+1,c
  6572  001CB4  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6573  001CB8  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6574  001CBC  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6575  001CC0  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6576  001CC4  ECAB  F011         	call	i1_memcpy	;wreg free
  6577                           
  6578                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6579  001CC8  EE20 F064          	lfsr	2,100
  6580  001CCC  500B               	movf	i1send_msg@qptr,w,c
  6581  001CCE  26D9               	addwf	fsr2l,f,c
  6582  001CD0  500C               	movf	i1send_msg@qptr+1,w,c
  6583  001CD2  22DA               	addwfc	fsr2h,f,c
  6584  001CD4  EE10 F064          	lfsr	1,100
  6585  001CD8  500B               	movf	i1send_msg@qptr,w,c
  6586  001CDA  26E1               	addwf	fsr1l,f,c
  6587  001CDC  500C               	movf	i1send_msg@qptr+1,w,c
  6588  001CDE  22E2               	addwfc	fsr1h,f,c
  6589  001CE0  50E7               	movf	indf1,w,c
  6590  001CE2  6E11               	movwf	??i1_send_msg& (0+255),c
  6591  001CE4  2811               	incf	??i1_send_msg,w,c
  6592  001CE6  0B03               	andlw	3
  6593  001CE8  6EDF               	movwf	indf2,c
  6594                           
  6595                           ;messages.c: 59: qmsg->full = 1;
  6596  001CEA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6597  001CEE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6598  001CF2  0E01               	movlw	1
  6599  001CF4  6EDF               	movwf	indf2,c
  6600                           
  6601                           ;messages.c: 60: return (1);
  6602  001CF6  0E01               	movlw	1
  6603  001CF8  0012               	return	
  6604  001CFA                     __end_ofi1_send_msg:
  6605                           	opt stack 0
  6606                           pclatu	equ	0xFFB
  6607                           pclath	equ	0xFFA
  6608                           tblptru	equ	0xFF8
  6609                           tblptrh	equ	0xFF7
  6610                           tblptrl	equ	0xFF6
  6611                           tablat	equ	0xFF5
  6612                           prodh	equ	0xFF4
  6613                           prodl	equ	0xFF3
  6614                           intcon	equ	0xFF2
  6615                           postinc0	equ	0xFEE
  6616                           fsr0h	equ	0xFEA
  6617                           fsr0l	equ	0xFE9
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           fsr1h	equ	0xFE2
  6621                           fsr1l	equ	0xFE1
  6622                           bsr	equ	0xFE0
  6623                           indf2	equ	0xFDF
  6624                           postinc2	equ	0xFDE
  6625                           postdec2	equ	0xFDD
  6626                           fsr2h	equ	0xFDA
  6627                           fsr2l	equ	0xFD9
  6628                           status	equ	0xFD8
  6629                           
  6630 ;; *************** function i1_memcpy *****************
  6631 ;; Defined at:
  6632 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  d1              2    0[COMRAM] PTR void 
  6635 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6636 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6637 ;;		 -> main@msgbuffer(23), 
  6638 ;;  s1              2    2[COMRAM] PTR const void 
  6639 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  6640 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  6641 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  6642 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), FromMainHigh_MQ(102), FromMainLow_MQ(102), 
  6643 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  6644 ;;  n               2    4[COMRAM] unsigned int 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6647 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  6648 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  6649 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  6650 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), FromMainHigh_MQ(102), FromMainLow_MQ(102), 
  6651 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  6652 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6653 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6654 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6655 ;;		 -> main@msgbuffer(23), 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  2    0[COMRAM] PTR void 
  6658 ;; Registers used:
  6659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6665 ;;      Params:         6       0       0       0       0
  6666 ;;      Locals:         4       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0
  6668 ;;      Totals:        10       0       0       0       0
  6669 ;;Total ram usage:       10 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    6
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		i1_send_msg
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text42
  6680  002356                     __ptext42:
  6681                           	opt stack 0
  6682  002356                     i1_memcpy:
  6683                           	opt stack 15
  6684                           
  6685                           ;incstack = 0
  6686  002356  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6687  00235A  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6688  00235E  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6689  002362  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6690  002366  D00E               	goto	i1l4427
  6691  002368                     i1l4421:
  6692  002368  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6693  00236C  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6694  002370  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6695  002374  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6696  002378  CFDF FFE7          	movff	indf2,indf1
  6697  00237C  4A09               	infsnz	i1memcpy@s,f,c
  6698  00237E  2A0A               	incf	i1memcpy@s+1,f,c
  6699  002380  4A07               	infsnz	i1memcpy@d,f,c
  6700  002382  2A08               	incf	i1memcpy@d+1,f,c
  6701  002384                     i1l4427:
  6702  002384  0605               	decf	i1memcpy@n,f,c
  6703  002386  A0D8               	btfss	status,0,c
  6704  002388  0606               	decf	i1memcpy@n+1,f,c
  6705  00238A  2805               	incf	i1memcpy@n& (0+255),w,c
  6706  00238C  B4D8               	btfsc	status,2,c
  6707  00238E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6708  002390  B4D8               	btfsc	status,2,c
  6709                           
  6710                           ;	Return value of i1_memcpy is never used
  6711  002392  0012               	return	
  6712  002394  D7E9               	goto	i1l4421
  6713  002396                     __end_ofi1_memcpy:
  6714                           	opt stack 0
  6715                           pclatu	equ	0xFFB
  6716                           pclath	equ	0xFFA
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           prodh	equ	0xFF4
  6722                           prodl	equ	0xFF3
  6723                           intcon	equ	0xFF2
  6724                           postinc0	equ	0xFEE
  6725                           fsr0h	equ	0xFEA
  6726                           fsr0l	equ	0xFE9
  6727                           wreg	equ	0xFE8
  6728                           indf1	equ	0xFE7
  6729                           fsr1h	equ	0xFE2
  6730                           fsr1l	equ	0xFE1
  6731                           bsr	equ	0xFE0
  6732                           indf2	equ	0xFDF
  6733                           postinc2	equ	0xFDE
  6734                           postdec2	equ	0xFDD
  6735                           fsr2h	equ	0xFDA
  6736                           fsr2l	equ	0xFD9
  6737                           status	equ	0xFD8
  6738                           
  6739 ;; *************** function _InterruptHandlerHigh *****************
  6740 ;; Defined at:
  6741 ;;		line 83 in file "source/interrupts.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;		None               void
  6748 ;; Registers used:
  6749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6755 ;;      Params:         0       0       0       0       0
  6756 ;;      Locals:         0       0       0       0       0
  6757 ;;      Temps:          0      14       0       0       0
  6758 ;;      Totals:         0      14       0       0       0
  6759 ;;Total ram usage:       14 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    5
  6762 ;; This function calls:
  6763 ;;		_SleepIfOkay
  6764 ;;		_i2c_int_handler
  6765 ;;		i2_timer0_int_handler
  6766 ;; This function is called by:
  6767 ;;		Interrupt level 2
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	intcode
  6772  000008                     __pintcode:
  6773                           	opt stack 0
  6774  000008                     _InterruptHandlerHigh:
  6775                           	opt stack 15
  6776                           
  6777                           ;incstack = 0
  6778  000008  CFFA F09F          	movff	pclath,??_InterruptHandlerHigh
  6779  00000C  CFFB F0A0          	movff	pclatu,??_InterruptHandlerHigh+1
  6780  000010  EFC6  F00E         	goto	int_func
  6781                           pclatu	equ	0xFFB
  6782                           pclath	equ	0xFFA
  6783                           tblptru	equ	0xFF8
  6784                           tblptrh	equ	0xFF7
  6785                           tblptrl	equ	0xFF6
  6786                           tablat	equ	0xFF5
  6787                           prodh	equ	0xFF4
  6788                           prodl	equ	0xFF3
  6789                           intcon	equ	0xFF2
  6790                           postinc0	equ	0xFEE
  6791                           fsr0h	equ	0xFEA
  6792                           fsr0l	equ	0xFE9
  6793                           wreg	equ	0xFE8
  6794                           indf1	equ	0xFE7
  6795                           fsr1h	equ	0xFE2
  6796                           fsr1l	equ	0xFE1
  6797                           bsr	equ	0xFE0
  6798                           indf2	equ	0xFDF
  6799                           postinc2	equ	0xFDE
  6800                           postdec2	equ	0xFDD
  6801                           fsr2h	equ	0xFDA
  6802                           fsr2l	equ	0xFD9
  6803                           status	equ	0xFD8
  6804                           
  6805                           	psect	intcode_body
  6806  001D8C                     __pintcode_body:
  6807                           	opt stack 15
  6808  001D8C                     int_func:
  6809                           	opt stack 15
  6810  001D8C  CFE9 F0A1          	movff	fsr0l,??_InterruptHandlerHigh+2
  6811  001D90  CFEA F0A2          	movff	fsr0h,??_InterruptHandlerHigh+3
  6812  001D94  CFE1 F0A3          	movff	fsr1l,??_InterruptHandlerHigh+4
  6813  001D98  CFE2 F0A4          	movff	fsr1h,??_InterruptHandlerHigh+5
  6814  001D9C  CFD9 F0A5          	movff	fsr2l,??_InterruptHandlerHigh+6
  6815  001DA0  CFDA F0A6          	movff	fsr2h,??_InterruptHandlerHigh+7
  6816  001DA4  CFF3 F0A7          	movff	prodl,??_InterruptHandlerHigh+8
  6817  001DA8  CFF4 F0A8          	movff	prodh,??_InterruptHandlerHigh+9
  6818  001DAC  CFF6 F0A9          	movff	tblptrl,??_InterruptHandlerHigh+10
  6819  001DB0  CFF7 F0AA          	movff	tblptrh,??_InterruptHandlerHigh+11
  6820  001DB4  CFF8 F0AB          	movff	tblptru,??_InterruptHandlerHigh+12
  6821  001DB8  CFF5 F0AC          	movff	tablat,??_InterruptHandlerHigh+13
  6822                           
  6823                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6824  001DBC  A69E               	btfss	3998,3,c	;volatile
  6825  001DBE  D003               	goto	i2l3849
  6826                           
  6827                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6828  001DC0  969E               	bcf	3998,3,c	;volatile
  6829                           
  6830                           ;interrupts.c: 92: i2c_int_handler();
  6831  001DC2  ECCD  F012         	call	_i2c_int_handler	;wreg free
  6832  001DC6                     i2l3849:
  6833                           
  6834                           ;interrupts.c: 93: }
  6835                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6836  001DC6  A4F2               	btfss	intcon,2,c	;volatile
  6837  001DC8  D003               	goto	i2l3855
  6838                           
  6839                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6840  001DCA  94F2               	bcf	intcon,2,c	;volatile
  6841                           
  6842                           ;interrupts.c: 99: timer0_int_handler();
  6843  001DCC  EC83  F00F         	call	i2_timer0_int_handler	;wreg free
  6844  001DD0                     i2l3855:
  6845                           
  6846                           ;interrupts.c: 100: }
  6847                           ;interrupts.c: 109: SleepIfOkay();
  6848  001DD0  ECDA  F010         	call	_SleepIfOkay	;wreg free
  6849  001DD4  C0AC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6850  001DD8  C0AB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6851  001DDC  C0AA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6852  001DE0  C0A9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6853  001DE4  C0A8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6854  001DE8  C0A7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6855  001DEC  C0A6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6856  001DF0  C0A5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6857  001DF4  C0A4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6858  001DF8  C0A3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6859  001DFC  C0A2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6860  001E00  C0A1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6861  001E04  C0A0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6862  001E08  C09F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6863  001E0C  0011               	retfie		f
  6864  001E0E                     __end_of_InterruptHandlerHigh:
  6865                           	opt stack 0
  6866                           pclatu	equ	0xFFB
  6867                           pclath	equ	0xFFA
  6868                           tblptru	equ	0xFF8
  6869                           tblptrh	equ	0xFF7
  6870                           tblptrl	equ	0xFF6
  6871                           tablat	equ	0xFF5
  6872                           prodh	equ	0xFF4
  6873                           prodl	equ	0xFF3
  6874                           intcon	equ	0xFF2
  6875                           postinc0	equ	0xFEE
  6876                           fsr0h	equ	0xFEA
  6877                           fsr0l	equ	0xFE9
  6878                           wreg	equ	0xFE8
  6879                           indf1	equ	0xFE7
  6880                           fsr1h	equ	0xFE2
  6881                           fsr1l	equ	0xFE1
  6882                           bsr	equ	0xFE0
  6883                           indf2	equ	0xFDF
  6884                           postinc2	equ	0xFDE
  6885                           postdec2	equ	0xFDD
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function i2_timer0_int_handler *****************
  6891 ;; Defined at:
  6892 ;;		line 17 in file "source/user_interrupts.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;		None
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;		None               void
  6899 ;; Registers used:
  6900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6906 ;;      Params:         0       0       0       0       0
  6907 ;;      Locals:         0       0       0       0       0
  6908 ;;      Temps:          0       1       0       0       0
  6909 ;;      Totals:         0       1       0       0       0
  6910 ;;Total ram usage:        1 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:    3
  6913 ;; This function calls:
  6914 ;;		i2_ToMainHigh_sendmsg
  6915 ;;		i2_WriteTimer0
  6916 ;; This function is called by:
  6917 ;;		_InterruptHandlerHigh
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text44
  6922  001F06                     __ptext44:
  6923                           	opt stack 0
  6924  001F06                     i2_timer0_int_handler:
  6925                           	opt stack 16
  6926                           
  6927                           ;user_interrupts.c: 25: WriteTimer0(0);
  6928                           
  6929                           ;incstack = 0
  6930  001F06  0E00               	movlw	0
  6931  001F08  6E33               	movwf	i2WriteTimer0@timer0+1,c
  6932  001F0A  0E00               	movlw	0
  6933  001F0C  6E32               	movwf	i2WriteTimer0@timer0,c
  6934  001F0E  EC4A  F013         	call	i2_WriteTimer0	;wreg free
  6935                           
  6936                           ;user_interrupts.c: 26: NumOfOverflowL++;
  6937  001F12  4A38               	infsnz	_NumOfOverflowL,f,c
  6938  001F14  2A39               	incf	_NumOfOverflowL+1,f,c
  6939                           
  6940                           ;user_interrupts.c: 27: DeltaOverflowL++;
  6941  001F16  0100               	movlb	0	; () banked
  6942  001F18  0100               	movlb	0	; () banked
  6943  001F1A  4BCA               	infsnz	_DeltaOverflowL& (0+255),f,b
  6944  001F1C  2BCB               	incf	(_DeltaOverflowL+1)& (0+255),f,b
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;user_interrupts.c: 31: if(NumOfOverflowL >= OverflowsL && ActiveL == 1)
  6948  001F1E  5039               	movf	_NumOfOverflowL+1,w,c
  6949  001F20  0A80               	xorlw	128
  6950  001F22  0100               	movlb	0	; () banked
  6951  001F24  6F94               	movwf	??i2_timer0_int_handler& (0+255),b
  6952  001F26  503C               	movf	_OverflowsL,w,c
  6953  001F28  5C38               	subwf	_NumOfOverflowL,w,c
  6954  001F2A  503D               	movf	_OverflowsL+1,w,c
  6955  001F2C  0A80               	xorlw	128
  6956  001F2E  0100               	movlb	0	; () banked
  6957  001F30  5994               	subwfb	??i2_timer0_int_handler& (0+255),w,b
  6958  001F32  A0D8               	btfss	status,0,c
  6959  001F34  0012               	return	
  6960                           
  6961                           ; BSR set to: 0
  6962  001F36  0100               	movlb	0	; () banked
  6963  001F38  0100               	movlb	0	; () banked
  6964  001F3A  05C6               	decf	_ActiveL& (0+255),w,b
  6965  001F3C  11C7               	iorwf	(_ActiveL+1)& (0+255),w,b
  6966  001F3E  A4D8               	btfss	status,2,c
  6967  001F40  0012               	return	
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;user_interrupts.c: 32: {
  6971                           ;user_interrupts.c: 33: ToMainHigh_sendmsg(0, 51, (void *) 0);
  6972  001F42  0100               	movlb	0	; () banked
  6973  001F44  6F94               	movwf	??i2_timer0_int_handler& (0+255),b
  6974  001F46  0E33               	movlw	51
  6975  001F48  0100               	movlb	0	; () banked
  6976  001F4A  0100               	movlb	0	; () banked
  6977  001F4C  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6978  001F4E  0100               	movlb	0	; () banked
  6979  001F50  5194               	movf	??i2_timer0_int_handler& (0+255),w,b
  6980  001F52  0E00               	movlw	0
  6981  001F54  0100               	movlb	0	; () banked
  6982  001F56  0100               	movlb	0	; () banked
  6983  001F58  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  6984  001F5A  0E00               	movlw	0
  6985  001F5C  0100               	movlb	0	; () banked
  6986  001F5E  0100               	movlb	0	; () banked
  6987  001F60  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  6988  001F62  0E00               	movlw	0
  6989  001F64  EC39  F012         	call	i2_ToMainHigh_sendmsg
  6990                           
  6991                           ;user_interrupts.c: 34: ActiveL = 0;
  6992  001F68  0E00               	movlw	0
  6993  001F6A  0100               	movlb	0	; () banked
  6994  001F6C  0100               	movlb	0	; () banked
  6995  001F6E  6FC7               	movwf	(_ActiveL+1)& (0+255),b
  6996  001F70  0E00               	movlw	0
  6997  001F72  0100               	movlb	0	; () banked
  6998  001F74  6FC6               	movwf	_ActiveL& (0+255),b
  6999  001F76  0012               	return	
  7000  001F78                     __end_ofi2_timer0_int_handler:
  7001                           	opt stack 0
  7002                           pclatu	equ	0xFFB
  7003                           pclath	equ	0xFFA
  7004                           tblptru	equ	0xFF8
  7005                           tblptrh	equ	0xFF7
  7006                           tblptrl	equ	0xFF6
  7007                           tablat	equ	0xFF5
  7008                           prodh	equ	0xFF4
  7009                           prodl	equ	0xFF3
  7010                           intcon	equ	0xFF2
  7011                           postinc0	equ	0xFEE
  7012                           fsr0h	equ	0xFEA
  7013                           fsr0l	equ	0xFE9
  7014                           wreg	equ	0xFE8
  7015                           indf1	equ	0xFE7
  7016                           fsr1h	equ	0xFE2
  7017                           fsr1l	equ	0xFE1
  7018                           bsr	equ	0xFE0
  7019                           indf2	equ	0xFDF
  7020                           postinc2	equ	0xFDE
  7021                           postdec2	equ	0xFDD
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026 ;; *************** function i2_WriteTimer0 *****************
  7027 ;; Defined at:
  7028 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  timer0          2   49[COMRAM] unsigned int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  WriteTimer0     2   51[COMRAM] struct Timers
  7033 ;; Return value:  Size  Location     Type
  7034 ;;		None               void
  7035 ;; Registers used:
  7036 ;;		None
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7042 ;;      Params:         2       0       0       0       0
  7043 ;;      Locals:         2       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0
  7045 ;;      Totals:         4       0       0       0       0
  7046 ;;Total ram usage:        4 bytes
  7047 ;; Hardware stack levels used:    1
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		i2_timer0_int_handler
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text45
  7056  002694                     __ptext45:
  7057                           	opt stack 0
  7058  002694                     i2_WriteTimer0:
  7059                           	opt stack 18
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;incstack = 0
  7063  002694  C032  F034         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  7064  002698  C033  F035         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  7065  00269C  C035  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  7066  0026A0  C034  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  7067  0026A4  0012               	return	
  7068  0026A6                     __end_ofi2_WriteTimer0:
  7069                           	opt stack 0
  7070                           pclatu	equ	0xFFB
  7071                           pclath	equ	0xFFA
  7072                           tblptru	equ	0xFF8
  7073                           tblptrh	equ	0xFF7
  7074                           tblptrl	equ	0xFF6
  7075                           tablat	equ	0xFF5
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           postinc0	equ	0xFEE
  7080                           fsr0h	equ	0xFEA
  7081                           fsr0l	equ	0xFE9
  7082                           wreg	equ	0xFE8
  7083                           indf1	equ	0xFE7
  7084                           fsr1h	equ	0xFE2
  7085                           fsr1l	equ	0xFE1
  7086                           bsr	equ	0xFE0
  7087                           indf2	equ	0xFDF
  7088                           postinc2	equ	0xFDE
  7089                           postdec2	equ	0xFDD
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8
  7093                           
  7094 ;; *************** function _i2c_int_handler *****************
  7095 ;; Defined at:
  7096 ;;		line 200 in file "source/my_i2c.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;		None               void
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7110 ;;      Params:         0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    4
  7117 ;; This function calls:
  7118 ;;		_i2c_master_int_handler
  7119 ;;		_i2c_slave_int_handler
  7120 ;; This function is called by:
  7121 ;;		_InterruptHandlerHigh
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text46
  7126  00259A                     __ptext46:
  7127                           	opt stack 0
  7128  00259A                     _i2c_int_handler:
  7129                           	opt stack 15
  7130                           
  7131                           ;my_i2c.c: 201: switch (i2c_mode){
  7132                           
  7133                           ;incstack = 0
  7134  00259A  D006               	goto	i2l3865
  7135  00259C                     i2l3859:
  7136                           
  7137                           ;my_i2c.c: 203: i2c_master_int_handler();
  7138  00259C  EC83  F003         	call	_i2c_master_int_handler	;wreg free
  7139                           
  7140                           ;my_i2c.c: 204: break;
  7141  0025A0  0012               	return	
  7142  0025A2                     i2l3861:
  7143                           
  7144                           ;my_i2c.c: 207: i2c_slave_int_handler();
  7145  0025A2  EC62  F000         	call	_i2c_slave_int_handler	;wreg free
  7146                           
  7147                           ;my_i2c.c: 208: break;
  7148  0025A6  0012               	return	
  7149  0025A8                     i2l3865:
  7150  0025A8  0100               	movlb	0	; () banked
  7151  0025AA  0100               	movlb	0	; () banked
  7152  0025AC  51D0               	movf	_i2c_mode& (0+255),w,b
  7153                           
  7154                           ; Switch size 1, requested type "space"
  7155                           ; Number of cases is 2, Range of values is 1 to 2
  7156                           ; switch strategies available:
  7157                           ; Name         Instructions Cycles
  7158                           ; simple_byte            7     4 (average)
  7159                           ;	Chosen strategy is simple_byte
  7160  0025AE  0A01               	xorlw	1	; case 1
  7161  0025B0  B4D8               	btfsc	status,2,c
  7162  0025B2  D7F4               	goto	i2l3859
  7163  0025B4  0A03               	xorlw	3	; case 2
  7164  0025B6  A4D8               	btfss	status,2,c
  7165  0025B8  0012               	return	
  7166  0025BA  D7F3               	goto	i2l3861
  7167  0025BC                     __end_of_i2c_int_handler:
  7168                           	opt stack 0
  7169                           pclatu	equ	0xFFB
  7170                           pclath	equ	0xFFA
  7171                           tblptru	equ	0xFF8
  7172                           tblptrh	equ	0xFF7
  7173                           tblptrl	equ	0xFF6
  7174                           tablat	equ	0xFF5
  7175                           prodh	equ	0xFF4
  7176                           prodl	equ	0xFF3
  7177                           intcon	equ	0xFF2
  7178                           postinc0	equ	0xFEE
  7179                           fsr0h	equ	0xFEA
  7180                           fsr0l	equ	0xFE9
  7181                           wreg	equ	0xFE8
  7182                           indf1	equ	0xFE7
  7183                           fsr1h	equ	0xFE2
  7184                           fsr1l	equ	0xFE1
  7185                           bsr	equ	0xFE0
  7186                           indf2	equ	0xFDF
  7187                           postinc2	equ	0xFDE
  7188                           postdec2	equ	0xFDD
  7189                           fsr2h	equ	0xFDA
  7190                           fsr2l	equ	0xFD9
  7191                           status	equ	0xFD8
  7192                           
  7193 ;; *************** function _i2c_slave_int_handler *****************
  7194 ;; Defined at:
  7195 ;;		line 217 in file "source/my_i2c.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  error_buf       3   22[BANK0 ] unsigned char [3]
  7200 ;;  data_read       1   30[BANK0 ] unsigned char 
  7201 ;;  msg_ready       1   29[BANK0 ] unsigned char 
  7202 ;;  msg_to_send     1   28[BANK0 ] unsigned char 
  7203 ;;  i2c_data        1   27[BANK0 ] unsigned char 
  7204 ;;  overrun_erro    1   26[BANK0 ] unsigned char 
  7205 ;;  data_written    1   25[BANK0 ] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;		None               void
  7208 ;; Registers used:
  7209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7215 ;;      Params:         0       0       0       0       0
  7216 ;;      Locals:         0       9       0       0       0
  7217 ;;      Temps:          0       2       0       0       0
  7218 ;;      Totals:         0      11       0       0       0
  7219 ;;Total ram usage:       11 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    3
  7222 ;; This function calls:
  7223 ;;		_handle_start
  7224 ;;		i2_ToMainHigh_sendmsg
  7225 ;;		i2_start_i2c_slave_reply
  7226 ;; This function is called by:
  7227 ;;		_i2c_int_handler
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text47
  7232  0000C4                     __ptext47:
  7233                           	opt stack 0
  7234  0000C4                     _i2c_slave_int_handler:
  7235                           	opt stack 15
  7236                           
  7237                           ;my_i2c.c: 218: unsigned char i2c_data;
  7238                           ;my_i2c.c: 219: unsigned char data_read = 0;
  7239                           
  7240                           ;incstack = 0
  7241  0000C4  0100               	movlb	0	; () banked
  7242  0000C6  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7243  0000C8  0E00               	movlw	0
  7244  0000CA  0100               	movlb	0	; () banked
  7245  0000CC  0100               	movlb	0	; () banked
  7246  0000CE  6F9E               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7247  0000D0  0100               	movlb	0	; () banked
  7248  0000D2  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7249                           
  7250                           ;my_i2c.c: 220: unsigned char data_written = 0;
  7251  0000D4  0100               	movlb	0	; () banked
  7252  0000D6  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7253  0000D8  0E00               	movlw	0
  7254  0000DA  0100               	movlb	0	; () banked
  7255  0000DC  0100               	movlb	0	; () banked
  7256  0000DE  6F99               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7257  0000E0  0100               	movlb	0	; () banked
  7258  0000E2  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7259                           
  7260                           ;my_i2c.c: 221: unsigned char msg_ready = 0;
  7261  0000E4  0100               	movlb	0	; () banked
  7262  0000E6  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7263  0000E8  0E00               	movlw	0
  7264  0000EA  0100               	movlb	0	; () banked
  7265  0000EC  0100               	movlb	0	; () banked
  7266  0000EE  6F9D               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7267  0000F0  0100               	movlb	0	; () banked
  7268  0000F2  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7269                           
  7270                           ;my_i2c.c: 222: unsigned char msg_to_send = 0;
  7271  0000F4  0100               	movlb	0	; () banked
  7272  0000F6  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7273  0000F8  0E00               	movlw	0
  7274  0000FA  0100               	movlb	0	; () banked
  7275  0000FC  0100               	movlb	0	; () banked
  7276  0000FE  6F9C               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7277  000100  0100               	movlb	0	; () banked
  7278  000102  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7279                           
  7280                           ;my_i2c.c: 223: unsigned char overrun_error = 0;
  7281  000104  0100               	movlb	0	; () banked
  7282  000106  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7283  000108  0E00               	movlw	0
  7284  00010A  0100               	movlb	0	; () banked
  7285  00010C  0100               	movlb	0	; () banked
  7286  00010E  6F9A               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7287  000110  0100               	movlb	0	; () banked
  7288  000112  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;my_i2c.c: 224: unsigned char error_buf[3];
  7292                           ;my_i2c.c: 227: if (SSPCON1bits.SSPOV == 1) {
  7293  000114  ACC6               	btfss	4038,6,c	;volatile
  7294  000116  D029               	goto	i2l4211
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;my_i2c.c: 228: SSPCON1bits.SSPOV = 0;
  7298  000118  9CC6               	bcf	4038,6,c	;volatile
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;my_i2c.c: 232: ic_ptr->status = 0x5;
  7302  00011A  0100               	movlb	0	; () banked
  7303  00011C  EE20 F019          	lfsr	2,25
  7304  000120  0100               	movlb	0	; () banked
  7305  000122  51D1               	movf	_ic_ptr& (0+255),w,b
  7306  000124  26D9               	addwf	fsr2l,f,c
  7307  000126  0100               	movlb	0	; () banked
  7308  000128  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7309  00012A  22DA               	addwfc	fsr2h,f,c
  7310  00012C  0E05               	movlw	5
  7311  00012E  6EDF               	movwf	indf2,c
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 233: overrun_error = 1;
  7315  000130  0100               	movlb	0	; () banked
  7316  000132  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7317  000134  0E01               	movlw	1
  7318  000136  0100               	movlb	0	; () banked
  7319  000138  0100               	movlb	0	; () banked
  7320  00013A  6F9A               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7321  00013C  0100               	movlb	0	; () banked
  7322  00013E  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 234: ic_ptr->error_count++;
  7326  000140  0100               	movlb	0	; () banked
  7327  000142  EE20 F01B          	lfsr	2,27
  7328  000146  0100               	movlb	0	; () banked
  7329  000148  51D1               	movf	_ic_ptr& (0+255),w,b
  7330  00014A  26D9               	addwf	fsr2l,f,c
  7331  00014C  0100               	movlb	0	; () banked
  7332  00014E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7333  000150  22DA               	addwfc	fsr2h,f,c
  7334  000152  2ADF               	incf	indf2,f,c
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;my_i2c.c: 235: ic_ptr->error_code = 0x4;
  7338  000154  0100               	movlb	0	; () banked
  7339  000156  EE20 F01A          	lfsr	2,26
  7340  00015A  0100               	movlb	0	; () banked
  7341  00015C  51D1               	movf	_ic_ptr& (0+255),w,b
  7342  00015E  26D9               	addwf	fsr2l,f,c
  7343  000160  0100               	movlb	0	; () banked
  7344  000162  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7345  000164  22DA               	addwfc	fsr2h,f,c
  7346  000166  0E04               	movlw	4
  7347  000168  6EDF               	movwf	indf2,c
  7348  00016A                     i2l4211:
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;my_i2c.c: 236: }
  7352                           ;my_i2c.c: 238: if (SSPSTATbits.BF == 1) {
  7353  00016A  A0C7               	btfss	4039,0,c	;volatile
  7354  00016C  D00A               	goto	i2l4217
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 239: i2c_data = SSPBUF;
  7358  00016E  CFC9 F09B          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;my_i2c.c: 240: data_read = 1;
  7362  000172  0100               	movlb	0	; () banked
  7363  000174  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7364  000176  0E01               	movlw	1
  7365  000178  0100               	movlb	0	; () banked
  7366  00017A  0100               	movlb	0	; () banked
  7367  00017C  6F9E               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7368  00017E  0100               	movlb	0	; () banked
  7369  000180  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7370  000182                     i2l4217:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;my_i2c.c: 241: }
  7374                           ;my_i2c.c: 243: if (!overrun_error) {
  7375  000182  0100               	movlb	0	; () banked
  7376  000184  0100               	movlb	0	; () banked
  7377  000186  679A               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7378  000188  D1CE               	goto	i2l370
  7379  00018A  D1B7               	goto	i2l4303
  7380  00018C                     i2l372:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;my_i2c.c: 246: {
  7384                           ;my_i2c.c: 248: if (SSPSTATbits.S == 1) {
  7385  00018C  A6C7               	btfss	4039,3,c	;volatile
  7386  00018E  D1CB               	goto	i2l370
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;my_i2c.c: 249: handle_start(data_read);
  7390  000190  0100               	movlb	0	; () banked
  7391  000192  0100               	movlb	0	; () banked
  7392  000194  519E               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7393  000196  EC64  F00D         	call	_handle_start
  7394                           
  7395                           ;my_i2c.c: 251: if (ic_ptr->status == 0x8) {
  7396  00019A  0100               	movlb	0	; () banked
  7397  00019C  EE20 F019          	lfsr	2,25
  7398  0001A0  0100               	movlb	0	; () banked
  7399  0001A2  51D1               	movf	_ic_ptr& (0+255),w,b
  7400  0001A4  26D9               	addwf	fsr2l,f,c
  7401  0001A6  0100               	movlb	0	; () banked
  7402  0001A8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7403  0001AA  22DA               	addwfc	fsr2h,f,c
  7404  0001AC  0E08               	movlw	8
  7405  0001AE  62DF               	cpfseq	indf2,c
  7406  0001B0  D1BA               	goto	i2l370
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;my_i2c.c: 252: data_read = 0;
  7410  0001B2  0100               	movlb	0	; () banked
  7411  0001B4  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7412  0001B6  0E00               	movlw	0
  7413  0001B8  0100               	movlb	0	; () banked
  7414  0001BA  0100               	movlb	0	; () banked
  7415  0001BC  6F9E               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7416  0001BE  0100               	movlb	0	; () banked
  7417  0001C0  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7418                           
  7419                           ;my_i2c.c: 253: msg_to_send = 1;
  7420  0001C2  0100               	movlb	0	; () banked
  7421  0001C4  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7422  0001C6  0E01               	movlw	1
  7423  0001C8  0100               	movlb	0	; () banked
  7424  0001CA  0100               	movlb	0	; () banked
  7425  0001CC  6F9C               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7426  0001CE  D187               	goto	L14
  7427  0001D0                     i2l376:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;my_i2c.c: 259: {
  7431                           ;my_i2c.c: 261: if (SSPSTATbits.P == 1) {
  7432  0001D0  A8C7               	btfss	4039,4,c	;volatile
  7433  0001D2  D030               	goto	i2l4237
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;my_i2c.c: 264: ic_ptr->event_count++;
  7437  0001D4  0100               	movlb	0	; () banked
  7438  0001D6  EE20 F018          	lfsr	2,24
  7439  0001DA  0100               	movlb	0	; () banked
  7440  0001DC  51D1               	movf	_ic_ptr& (0+255),w,b
  7441  0001DE  26D9               	addwf	fsr2l,f,c
  7442  0001E0  0100               	movlb	0	; () banked
  7443  0001E2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7444  0001E4  22DA               	addwfc	fsr2h,f,c
  7445  0001E6  2ADF               	incf	indf2,f,c
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;my_i2c.c: 265: if (data_read) {
  7449  0001E8  0100               	movlb	0	; () banked
  7450  0001EA  0100               	movlb	0	; () banked
  7451  0001EC  519E               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7452  0001EE  B4D8               	btfsc	status,2,c
  7453  0001F0  D179               	goto	L16
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;my_i2c.c: 266: if (SSPSTATbits.D_A == 0) {
  7457  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  7458  0001F4  D009               	goto	i2l4235
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;my_i2c.c: 267: msg_ready = 1;
  7462  0001F6  0100               	movlb	0	; () banked
  7463  0001F8  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7464  0001FA  0E01               	movlw	1
  7465  0001FC  0100               	movlb	0	; () banked
  7466  0001FE  0100               	movlb	0	; () banked
  7467  000200  6F9D               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7468  000202  0100               	movlb	0	; () banked
  7469  000204  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7470                           
  7471                           ;my_i2c.c: 268: } else {
  7472  000206  D16E               	goto	L16
  7473  000208                     i2l4235:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;my_i2c.c: 269: ic_ptr->error_count++;
  7477  000208  0100               	movlb	0	; () banked
  7478  00020A  EE20 F01B          	lfsr	2,27
  7479  00020E  0100               	movlb	0	; () banked
  7480  000210  51D1               	movf	_ic_ptr& (0+255),w,b
  7481  000212  26D9               	addwf	fsr2l,f,c
  7482  000214  0100               	movlb	0	; () banked
  7483  000216  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7484  000218  22DA               	addwfc	fsr2h,f,c
  7485  00021A  2ADF               	incf	indf2,f,c
  7486                           
  7487                           ;my_i2c.c: 270: ic_ptr->error_code = 0x6;
  7488  00021C  0100               	movlb	0	; () banked
  7489  00021E  EE20 F01A          	lfsr	2,26
  7490  000222  0100               	movlb	0	; () banked
  7491  000224  51D1               	movf	_ic_ptr& (0+255),w,b
  7492  000226  26D9               	addwf	fsr2l,f,c
  7493  000228  0100               	movlb	0	; () banked
  7494  00022A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7495  00022C  22DA               	addwfc	fsr2h,f,c
  7496  00022E  0E06               	movlw	6
  7497  000230  6EDF               	movwf	indf2,c
  7498                           
  7499                           ; BSR set to: 0
  7500  000232  D158               	goto	L16
  7501  000234                     i2l4237:
  7502                           
  7503                           ; BSR set to: 0
  7504  000234  0100               	movlb	0	; () banked
  7505  000236  0100               	movlb	0	; () banked
  7506  000238  519E               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7507  00023A  B4D8               	btfsc	status,2,c
  7508  00023C  D174               	goto	i2l370
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;my_i2c.c: 275: ic_ptr->event_count++;
  7512  00023E  0100               	movlb	0	; () banked
  7513  000240  EE20 F018          	lfsr	2,24
  7514  000244  0100               	movlb	0	; () banked
  7515  000246  51D1               	movf	_ic_ptr& (0+255),w,b
  7516  000248  26D9               	addwf	fsr2l,f,c
  7517  00024A  0100               	movlb	0	; () banked
  7518  00024C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7519  00024E  22DA               	addwfc	fsr2h,f,c
  7520  000250  2ADF               	incf	indf2,f,c
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;my_i2c.c: 276: if (SSPSTATbits.D_A == 0) {
  7524  000252  BAC7               	btfsc	4039,5,c	;volatile
  7525  000254  D019               	goto	i2l4253
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;my_i2c.c: 277: if (SSPSTATbits.R_W == 0) {
  7529  000256  B4C7               	btfsc	4039,2,c	;volatile
  7530  000258  D00B               	goto	i2l4247
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;my_i2c.c: 278: ic_ptr->status = 0x7;
  7534  00025A  0100               	movlb	0	; () banked
  7535  00025C  EE20 F019          	lfsr	2,25
  7536  000260  0100               	movlb	0	; () banked
  7537  000262  51D1               	movf	_ic_ptr& (0+255),w,b
  7538  000264  26D9               	addwf	fsr2l,f,c
  7539  000266  0100               	movlb	0	; () banked
  7540  000268  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7541  00026A  22DA               	addwfc	fsr2h,f,c
  7542  00026C  0E07               	movlw	7
  7543  00026E  D076               	goto	L13
  7544  000270                     i2l4247:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;my_i2c.c: 280: ic_ptr->status = 0x8;
  7548  000270  0100               	movlb	0	; () banked
  7549  000272  EE20 F019          	lfsr	2,25
  7550  000276  0100               	movlb	0	; () banked
  7551  000278  51D1               	movf	_ic_ptr& (0+255),w,b
  7552  00027A  26D9               	addwf	fsr2l,f,c
  7553  00027C  0100               	movlb	0	; () banked
  7554  00027E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7555  000280  22DA               	addwfc	fsr2h,f,c
  7556  000282  0E08               	movlw	8
  7557  000284  6EDF               	movwf	indf2,c
  7558  000286  D11D               	goto	L17
  7559  000288                     i2l4253:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;my_i2c.c: 286: ic_ptr->error_count++;
  7563  000288  0100               	movlb	0	; () banked
  7564  00028A  EE20 F01B          	lfsr	2,27
  7565  00028E  0100               	movlb	0	; () banked
  7566  000290  51D1               	movf	_ic_ptr& (0+255),w,b
  7567  000292  26D9               	addwf	fsr2l,f,c
  7568  000294  0100               	movlb	0	; () banked
  7569  000296  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7570  000298  22DA               	addwfc	fsr2h,f,c
  7571  00029A  2ADF               	incf	indf2,f,c
  7572                           
  7573                           ;my_i2c.c: 287: ic_ptr->status = 0x5;
  7574  00029C  0100               	movlb	0	; () banked
  7575  00029E  EE20 F019          	lfsr	2,25
  7576  0002A2  0100               	movlb	0	; () banked
  7577  0002A4  51D1               	movf	_ic_ptr& (0+255),w,b
  7578  0002A6  26D9               	addwf	fsr2l,f,c
  7579  0002A8  0100               	movlb	0	; () banked
  7580  0002AA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7581  0002AC  22DA               	addwfc	fsr2h,f,c
  7582  0002AE  0E05               	movlw	5
  7583  0002B0  6EDF               	movwf	indf2,c
  7584                           
  7585                           ;my_i2c.c: 288: ic_ptr->error_code = 0x6;
  7586  0002B2  0100               	movlb	0	; () banked
  7587  0002B4  EE20 F01A          	lfsr	2,26
  7588  0002B8  0100               	movlb	0	; () banked
  7589  0002BA  51D1               	movf	_ic_ptr& (0+255),w,b
  7590  0002BC  26D9               	addwf	fsr2l,f,c
  7591  0002BE  0100               	movlb	0	; () banked
  7592  0002C0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7593  0002C2  22DA               	addwfc	fsr2h,f,c
  7594  0002C4  0E06               	movlw	6
  7595  0002C6  D04A               	goto	L13
  7596  0002C8                     i2l4255:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;my_i2c.c: 294: {
  7600                           ;my_i2c.c: 295: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7601  0002C8  0100               	movlb	0	; () banked
  7602  0002CA  EE20 F033          	lfsr	2,51
  7603  0002CE  0100               	movlb	0	; () banked
  7604  0002D0  51D1               	movf	_ic_ptr& (0+255),w,b
  7605  0002D2  26D9               	addwf	fsr2l,f,c
  7606  0002D4  0100               	movlb	0	; () banked
  7607  0002D6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7608  0002D8  22DA               	addwfc	fsr2h,f,c
  7609  0002DA  50DF               	movf	indf2,w,c
  7610  0002DC  0100               	movlb	0	; () banked
  7611  0002DE  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7612  0002E0  0100               	movlb	0	; () banked
  7613  0002E2  EE20 F032          	lfsr	2,50
  7614  0002E6  0100               	movlb	0	; () banked
  7615  0002E8  51D1               	movf	_ic_ptr& (0+255),w,b
  7616  0002EA  26D9               	addwf	fsr2l,f,c
  7617  0002EC  0100               	movlb	0	; () banked
  7618  0002EE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7619  0002F0  22DA               	addwfc	fsr2h,f,c
  7620  0002F2  50DF               	movf	indf2,w,c
  7621  0002F4  0100               	movlb	0	; () banked
  7622  0002F6  5D94               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7623  0002F8  B0D8               	btfsc	status,0,c
  7624  0002FA  D0F4               	goto	L16
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;my_i2c.c: 296: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7628  0002FC  0100               	movlb	0	; () banked
  7629  0002FE  EE20 F033          	lfsr	2,51
  7630  000302  0100               	movlb	0	; () banked
  7631  000304  51D1               	movf	_ic_ptr& (0+255),w,b
  7632  000306  26D9               	addwf	fsr2l,f,c
  7633  000308  0100               	movlb	0	; () banked
  7634  00030A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7635  00030C  22DA               	addwfc	fsr2h,f,c
  7636  00030E  50DF               	movf	indf2,w,c
  7637  000310  0100               	movlb	0	; () banked
  7638  000312  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7639  000314  0100               	movlb	0	; () banked
  7640  000316  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7641  000318  0D01               	mullw	1
  7642  00031A  0E1C               	movlw	28
  7643  00031C  26F3               	addwf	prodl,f,c
  7644  00031E  0E00               	movlw	0
  7645  000320  22F4               	addwfc	prodh,f,c
  7646  000322  50F3               	movf	prodl,w,c
  7647  000324  0100               	movlb	0	; () banked
  7648  000326  0100               	movlb	0	; () banked
  7649  000328  25D1               	addwf	_ic_ptr& (0+255),w,b
  7650  00032A  6ED9               	movwf	fsr2l,c
  7651  00032C  50F4               	movf	prodh,w,c
  7652  00032E  0100               	movlb	0	; () banked
  7653  000330  0100               	movlb	0	; () banked
  7654  000332  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7655  000334  6EDA               	movwf	fsr2h,c
  7656  000336  50DF               	movf	indf2,w,c
  7657  000338  6EC9               	movwf	4041,c	;volatile
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;my_i2c.c: 297: ic_ptr->outbufind++;
  7661  00033A  0100               	movlb	0	; () banked
  7662  00033C  EE20 F033          	lfsr	2,51
  7663  000340  0100               	movlb	0	; () banked
  7664  000342  51D1               	movf	_ic_ptr& (0+255),w,b
  7665  000344  26D9               	addwf	fsr2l,f,c
  7666  000346  0100               	movlb	0	; () banked
  7667  000348  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7668  00034A  22DA               	addwfc	fsr2h,f,c
  7669  00034C  2ADF               	incf	indf2,f,c
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;my_i2c.c: 298: data_written = 1;
  7673  00034E  0100               	movlb	0	; () banked
  7674  000350  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7675  000352  0E01               	movlw	1
  7676  000354  0100               	movlb	0	; () banked
  7677  000356  0100               	movlb	0	; () banked
  7678  000358  6F99               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7679  00035A  D0C1               	goto	L14
  7680  00035C                     L13:
  7681  00035C  6EDF               	movwf	indf2,c
  7682  00035E  D0E3               	goto	i2l370
  7683  000360                     i2l390:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;my_i2c.c: 306: {
  7687                           ;my_i2c.c: 308: if (SSPSTATbits.P == 1) {
  7688  000360  A8C7               	btfss	4039,4,c	;volatile
  7689  000362  D062               	goto	i2l4281
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;my_i2c.c: 310: ic_ptr->event_count++;
  7693  000364  0100               	movlb	0	; () banked
  7694  000366  EE20 F018          	lfsr	2,24
  7695  00036A  0100               	movlb	0	; () banked
  7696  00036C  51D1               	movf	_ic_ptr& (0+255),w,b
  7697  00036E  26D9               	addwf	fsr2l,f,c
  7698  000370  0100               	movlb	0	; () banked
  7699  000372  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7700  000374  22DA               	addwfc	fsr2h,f,c
  7701  000376  2ADF               	incf	indf2,f,c
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;my_i2c.c: 311: if (data_read) {
  7705  000378  0100               	movlb	0	; () banked
  7706  00037A  0100               	movlb	0	; () banked
  7707  00037C  519E               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7708  00037E  B4D8               	btfsc	status,2,c
  7709  000380  D04A               	goto	i2l4277
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;my_i2c.c: 312: if (SSPSTATbits.D_A == 1) {
  7713  000382  AAC7               	btfss	4039,5,c	;volatile
  7714  000384  D027               	goto	i2l4275
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;my_i2c.c: 313: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7718  000386  0100               	movlb	0	; () banked
  7719  000388  EE20 F016          	lfsr	2,22
  7720  00038C  0100               	movlb	0	; () banked
  7721  00038E  51D1               	movf	_ic_ptr& (0+255),w,b
  7722  000390  26D9               	addwf	fsr2l,f,c
  7723  000392  0100               	movlb	0	; () banked
  7724  000394  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7725  000396  22DA               	addwfc	fsr2h,f,c
  7726  000398  50DF               	movf	indf2,w,c
  7727  00039A  0100               	movlb	0	; () banked
  7728  00039C  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7729  00039E  0100               	movlb	0	; () banked
  7730  0003A0  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7731  0003A2  0D01               	mullw	1
  7732  0003A4  50F3               	movf	prodl,w,c
  7733  0003A6  0100               	movlb	0	; () banked
  7734  0003A8  0100               	movlb	0	; () banked
  7735  0003AA  25D1               	addwf	_ic_ptr& (0+255),w,b
  7736  0003AC  6ED9               	movwf	fsr2l,c
  7737  0003AE  50F4               	movf	prodh,w,c
  7738  0003B0  0100               	movlb	0	; () banked
  7739  0003B2  0100               	movlb	0	; () banked
  7740  0003B4  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7741  0003B6  6EDA               	movwf	fsr2h,c
  7742  0003B8  0100               	movlb	0	; () banked
  7743  0003BA  C09B  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;my_i2c.c: 314: ic_ptr->buflen++;
  7747  0003BE  0100               	movlb	0	; () banked
  7748  0003C0  EE20 F016          	lfsr	2,22
  7749  0003C4  0100               	movlb	0	; () banked
  7750  0003C6  51D1               	movf	_ic_ptr& (0+255),w,b
  7751  0003C8  26D9               	addwf	fsr2l,f,c
  7752  0003CA  0100               	movlb	0	; () banked
  7753  0003CC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7754  0003CE  22DA               	addwfc	fsr2h,f,c
  7755  0003D0  2ADF               	incf	indf2,f,c
  7756                           
  7757                           ;my_i2c.c: 315: } else {
  7758  0003D2  D088               	goto	L16
  7759  0003D4                     i2l4275:
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;my_i2c.c: 316: ic_ptr->error_count++;
  7763  0003D4  0100               	movlb	0	; () banked
  7764  0003D6  EE20 F01B          	lfsr	2,27
  7765  0003DA  0100               	movlb	0	; () banked
  7766  0003DC  51D1               	movf	_ic_ptr& (0+255),w,b
  7767  0003DE  26D9               	addwf	fsr2l,f,c
  7768  0003E0  0100               	movlb	0	; () banked
  7769  0003E2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7770  0003E4  22DA               	addwfc	fsr2h,f,c
  7771  0003E6  2ADF               	incf	indf2,f,c
  7772                           
  7773                           ;my_i2c.c: 317: ic_ptr->error_code = 0x6;
  7774  0003E8  0100               	movlb	0	; () banked
  7775  0003EA  EE20 F01A          	lfsr	2,26
  7776  0003EE  0100               	movlb	0	; () banked
  7777  0003F0  51D1               	movf	_ic_ptr& (0+255),w,b
  7778  0003F2  26D9               	addwf	fsr2l,f,c
  7779  0003F4  0100               	movlb	0	; () banked
  7780  0003F6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7781  0003F8  22DA               	addwfc	fsr2h,f,c
  7782  0003FA  0E06               	movlw	6
  7783  0003FC  6EDF               	movwf	indf2,c
  7784                           
  7785                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7786  0003FE  0100               	movlb	0	; () banked
  7787  000400  EE20 F019          	lfsr	2,25
  7788  000404  0100               	movlb	0	; () banked
  7789  000406  51D1               	movf	_ic_ptr& (0+255),w,b
  7790  000408  26D9               	addwf	fsr2l,f,c
  7791  00040A  0100               	movlb	0	; () banked
  7792  00040C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7793  00040E  22DA               	addwfc	fsr2h,f,c
  7794  000410  0E05               	movlw	5
  7795  000412  6EDF               	movwf	indf2,c
  7796  000414  D067               	goto	L16
  7797  000416                     i2l4277:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;my_i2c.c: 321: msg_ready = 1;
  7801  000416  0100               	movlb	0	; () banked
  7802  000418  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7803  00041A  0E01               	movlw	1
  7804  00041C  0100               	movlb	0	; () banked
  7805  00041E  0100               	movlb	0	; () banked
  7806  000420  6F9D               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7807  000422  0100               	movlb	0	; () banked
  7808  000424  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7809                           
  7810                           ; BSR set to: 0
  7811  000426  D05E               	goto	L16
  7812  000428                     i2l4281:
  7813                           
  7814                           ; BSR set to: 0
  7815  000428  0100               	movlb	0	; () banked
  7816  00042A  0100               	movlb	0	; () banked
  7817  00042C  519E               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7818  00042E  B4D8               	btfsc	status,2,c
  7819  000430  D07A               	goto	i2l370
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;my_i2c.c: 325: ic_ptr->event_count++;
  7823  000432  0100               	movlb	0	; () banked
  7824  000434  EE20 F018          	lfsr	2,24
  7825  000438  0100               	movlb	0	; () banked
  7826  00043A  51D1               	movf	_ic_ptr& (0+255),w,b
  7827  00043C  26D9               	addwf	fsr2l,f,c
  7828  00043E  0100               	movlb	0	; () banked
  7829  000440  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7830  000442  22DA               	addwfc	fsr2h,f,c
  7831  000444  2ADF               	incf	indf2,f,c
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;my_i2c.c: 326: if (SSPSTATbits.D_A == 1) {
  7835  000446  AAC7               	btfss	4039,5,c	;volatile
  7836  000448  D027               	goto	i2l398
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;my_i2c.c: 327: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7840  00044A  0100               	movlb	0	; () banked
  7841  00044C  EE20 F016          	lfsr	2,22
  7842  000450  0100               	movlb	0	; () banked
  7843  000452  51D1               	movf	_ic_ptr& (0+255),w,b
  7844  000454  26D9               	addwf	fsr2l,f,c
  7845  000456  0100               	movlb	0	; () banked
  7846  000458  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7847  00045A  22DA               	addwfc	fsr2h,f,c
  7848  00045C  50DF               	movf	indf2,w,c
  7849  00045E  0100               	movlb	0	; () banked
  7850  000460  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7851  000462  0100               	movlb	0	; () banked
  7852  000464  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7853  000466  0D01               	mullw	1
  7854  000468  50F3               	movf	prodl,w,c
  7855  00046A  0100               	movlb	0	; () banked
  7856  00046C  0100               	movlb	0	; () banked
  7857  00046E  25D1               	addwf	_ic_ptr& (0+255),w,b
  7858  000470  6ED9               	movwf	fsr2l,c
  7859  000472  50F4               	movf	prodh,w,c
  7860  000474  0100               	movlb	0	; () banked
  7861  000476  0100               	movlb	0	; () banked
  7862  000478  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7863  00047A  6EDA               	movwf	fsr2h,c
  7864  00047C  0100               	movlb	0	; () banked
  7865  00047E  C09B  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;my_i2c.c: 328: ic_ptr->buflen++;
  7869  000482  0100               	movlb	0	; () banked
  7870  000484  EE20 F016          	lfsr	2,22
  7871  000488  0100               	movlb	0	; () banked
  7872  00048A  51D1               	movf	_ic_ptr& (0+255),w,b
  7873  00048C  26D9               	addwf	fsr2l,f,c
  7874  00048E  0100               	movlb	0	; () banked
  7875  000490  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7876  000492  22DA               	addwfc	fsr2h,f,c
  7877  000494  2ADF               	incf	indf2,f,c
  7878                           
  7879                           ;my_i2c.c: 329: } else {
  7880  000496  D047               	goto	i2l370
  7881  000498                     i2l398:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;my_i2c.c: 330: if (SSPSTATbits.R_W == 1) {
  7885  000498  A4C7               	btfss	4039,2,c	;volatile
  7886  00049A  D6B6               	goto	i2l4235
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;my_i2c.c: 331: ic_ptr->status = 0x8;
  7890  00049C  0100               	movlb	0	; () banked
  7891  00049E  EE20 F019          	lfsr	2,25
  7892  0004A2  0100               	movlb	0	; () banked
  7893  0004A4  51D1               	movf	_ic_ptr& (0+255),w,b
  7894  0004A6  26D9               	addwf	fsr2l,f,c
  7895  0004A8  0100               	movlb	0	; () banked
  7896  0004AA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7897  0004AC  22DA               	addwfc	fsr2h,f,c
  7898  0004AE  0E08               	movlw	8
  7899  0004B0  6EDF               	movwf	indf2,c
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;my_i2c.c: 332: msg_ready = 1;
  7903  0004B2  0100               	movlb	0	; () banked
  7904  0004B4  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7905  0004B6  0E01               	movlw	1
  7906  0004B8  0100               	movlb	0	; () banked
  7907  0004BA  0100               	movlb	0	; () banked
  7908  0004BC  6F9D               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7909  0004BE  0100               	movlb	0	; () banked
  7910  0004C0  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7911  0004C2                     L17:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;my_i2c.c: 333: msg_to_send = 1;
  7915  0004C2  0100               	movlb	0	; () banked
  7916  0004C4  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7917  0004C6  0E01               	movlw	1
  7918  0004C8  0100               	movlb	0	; () banked
  7919  0004CA  0100               	movlb	0	; () banked
  7920  0004CC  6F9C               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7921  0004CE  0100               	movlb	0	; () banked
  7922  0004D0  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;my_i2c.c: 335: data_read = 0;
  7926  0004D2  0100               	movlb	0	; () banked
  7927  0004D4  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  7928  0004D6  0E00               	movlw	0
  7929  0004D8  0100               	movlb	0	; () banked
  7930  0004DA  0100               	movlb	0	; () banked
  7931  0004DC  6F9E               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7932  0004DE                     L14:
  7933  0004DE  0100               	movlb	0	; () banked
  7934  0004E0  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7935                           
  7936                           ;my_i2c.c: 336: } else {
  7937  0004E2  D021               	goto	i2l370
  7938  0004E4                     L16:
  7939                           
  7940                           ;my_i2c.c: 339: ic_ptr->status = 0x5;
  7941  0004E4  0100               	movlb	0	; () banked
  7942  0004E6  EE20 F019          	lfsr	2,25
  7943  0004EA  0100               	movlb	0	; () banked
  7944  0004EC  51D1               	movf	_ic_ptr& (0+255),w,b
  7945  0004EE  26D9               	addwf	fsr2l,f,c
  7946  0004F0  0100               	movlb	0	; () banked
  7947  0004F2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7948  0004F4  22DA               	addwfc	fsr2h,f,c
  7949  0004F6  0E05               	movlw	5
  7950  0004F8  D731               	goto	L13
  7951  0004FA                     i2l4303:
  7952                           
  7953                           ; BSR set to: 0
  7954  0004FA  0100               	movlb	0	; () banked
  7955  0004FC  EE20 F019          	lfsr	2,25
  7956  000500  0100               	movlb	0	; () banked
  7957  000502  51D1               	movf	_ic_ptr& (0+255),w,b
  7958  000504  26D9               	addwf	fsr2l,f,c
  7959  000506  0100               	movlb	0	; () banked
  7960  000508  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7961  00050A  22DA               	addwfc	fsr2h,f,c
  7962  00050C  50DF               	movf	indf2,w,c
  7963                           
  7964                           ; Switch size 1, requested type "space"
  7965                           ; Number of cases is 4, Range of values is 5 to 8
  7966                           ; switch strategies available:
  7967                           ; Name         Instructions Cycles
  7968                           ; simple_byte           13     7 (average)
  7969                           ;	Chosen strategy is simple_byte
  7970  00050E  0A05               	xorlw	5	; case 5
  7971  000510  B4D8               	btfsc	status,2,c
  7972  000512  D63C               	goto	i2l372
  7973  000514  0A03               	xorlw	3	; case 6
  7974  000516  B4D8               	btfsc	status,2,c
  7975  000518  D65B               	goto	i2l376
  7976  00051A  0A01               	xorlw	1	; case 7
  7977  00051C  B4D8               	btfsc	status,2,c
  7978  00051E  D720               	goto	i2l390
  7979  000520  0A0F               	xorlw	15	; case 8
  7980  000522  B4D8               	btfsc	status,2,c
  7981  000524  D6D1               	goto	i2l4255
  7982  000526                     i2l370:
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;my_i2c.c: 346: }
  7986                           ;my_i2c.c: 349: if (data_read || data_written) {
  7987  000526  0100               	movlb	0	; () banked
  7988  000528  0100               	movlb	0	; () banked
  7989  00052A  679E               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7990  00052C  D005               	goto	i2l404
  7991                           
  7992                           ; BSR set to: 0
  7993  00052E  0100               	movlb	0	; () banked
  7994  000530  0100               	movlb	0	; () banked
  7995  000532  5199               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7996  000534  B4D8               	btfsc	status,2,c
  7997  000536  D002               	goto	i2l4309
  7998  000538                     i2l404:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;my_i2c.c: 351: if (SSPCON1bits.CKP == 0) {
  8002  000538  A8C6               	btfss	4038,4,c	;volatile
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;my_i2c.c: 352: SSPCON1bits.CKP = 1;
  8006  00053A  88C6               	bsf	4038,4,c	;volatile
  8007  00053C                     i2l4309:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;my_i2c.c: 353: }
  8011                           ;my_i2c.c: 354: }
  8012                           ;my_i2c.c: 357: if ((ic_ptr->buflen > 22 - 2) && (!msg_ready)) {
  8013  00053C  0100               	movlb	0	; () banked
  8014  00053E  EE20 F016          	lfsr	2,22
  8015  000542  0100               	movlb	0	; () banked
  8016  000544  51D1               	movf	_ic_ptr& (0+255),w,b
  8017  000546  26D9               	addwf	fsr2l,f,c
  8018  000548  0100               	movlb	0	; () banked
  8019  00054A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8020  00054C  22DA               	addwfc	fsr2h,f,c
  8021  00054E  0E14               	movlw	20
  8022  000550  64DF               	cpfsgt	indf2,c
  8023  000552  D024               	goto	i2l4315
  8024                           
  8025                           ; BSR set to: 0
  8026  000554  0100               	movlb	0	; () banked
  8027  000556  0100               	movlb	0	; () banked
  8028  000558  679D               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  8029  00055A  D020               	goto	i2l4315
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;my_i2c.c: 358: ic_ptr->status = 0x5;
  8033  00055C  0100               	movlb	0	; () banked
  8034  00055E  EE20 F019          	lfsr	2,25
  8035  000562  0100               	movlb	0	; () banked
  8036  000564  51D1               	movf	_ic_ptr& (0+255),w,b
  8037  000566  26D9               	addwf	fsr2l,f,c
  8038  000568  0100               	movlb	0	; () banked
  8039  00056A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8040  00056C  22DA               	addwfc	fsr2h,f,c
  8041  00056E  0E05               	movlw	5
  8042  000570  6EDF               	movwf	indf2,c
  8043                           
  8044                           ;my_i2c.c: 359: ic_ptr->error_count++;
  8045  000572  0100               	movlb	0	; () banked
  8046  000574  EE20 F01B          	lfsr	2,27
  8047  000578  0100               	movlb	0	; () banked
  8048  00057A  51D1               	movf	_ic_ptr& (0+255),w,b
  8049  00057C  26D9               	addwf	fsr2l,f,c
  8050  00057E  0100               	movlb	0	; () banked
  8051  000580  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8052  000582  22DA               	addwfc	fsr2h,f,c
  8053  000584  2ADF               	incf	indf2,f,c
  8054                           
  8055                           ;my_i2c.c: 360: ic_ptr->error_code = 0x7;
  8056  000586  0100               	movlb	0	; () banked
  8057  000588  EE20 F01A          	lfsr	2,26
  8058  00058C  0100               	movlb	0	; () banked
  8059  00058E  51D1               	movf	_ic_ptr& (0+255),w,b
  8060  000590  26D9               	addwf	fsr2l,f,c
  8061  000592  0100               	movlb	0	; () banked
  8062  000594  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8063  000596  22DA               	addwfc	fsr2h,f,c
  8064  000598  0E07               	movlw	7
  8065  00059A  6EDF               	movwf	indf2,c
  8066  00059C                     i2l4315:
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;my_i2c.c: 361: }
  8070                           ;my_i2c.c: 363: if (msg_ready) {
  8071  00059C  0100               	movlb	0	; () banked
  8072  00059E  0100               	movlb	0	; () banked
  8073  0005A0  519D               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  8074  0005A2  B4D8               	btfsc	status,2,c
  8075  0005A4  D048               	goto	i2l4323
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;my_i2c.c: 364: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8079  0005A6  0100               	movlb	0	; () banked
  8080  0005A8  EE20 F018          	lfsr	2,24
  8081  0005AC  0100               	movlb	0	; () banked
  8082  0005AE  51D1               	movf	_ic_ptr& (0+255),w,b
  8083  0005B0  26D9               	addwf	fsr2l,f,c
  8084  0005B2  0100               	movlb	0	; () banked
  8085  0005B4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8086  0005B6  22DA               	addwfc	fsr2h,f,c
  8087  0005B8  0100               	movlb	0	; () banked
  8088  0005BA  EE10 F016          	lfsr	1,22
  8089  0005BE  0100               	movlb	0	; () banked
  8090  0005C0  51D1               	movf	_ic_ptr& (0+255),w,b
  8091  0005C2  26E1               	addwf	fsr1l,f,c
  8092  0005C4  0100               	movlb	0	; () banked
  8093  0005C6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8094  0005C8  22E2               	addwfc	fsr1h,f,c
  8095  0005CA  50E7               	movf	indf1,w,c
  8096  0005CC  0100               	movlb	0	; () banked
  8097  0005CE  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  8098  0005D0  0100               	movlb	0	; () banked
  8099  0005D2  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8100  0005D4  0D01               	mullw	1
  8101  0005D6  50F3               	movf	prodl,w,c
  8102  0005D8  0100               	movlb	0	; () banked
  8103  0005DA  0100               	movlb	0	; () banked
  8104  0005DC  25D1               	addwf	_ic_ptr& (0+255),w,b
  8105  0005DE  6EE1               	movwf	fsr1l,c
  8106  0005E0  50F4               	movf	prodh,w,c
  8107  0005E2  0100               	movlb	0	; () banked
  8108  0005E4  0100               	movlb	0	; () banked
  8109  0005E6  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8110  0005E8  6EE2               	movwf	fsr1h,c
  8111  0005EA  CFDF FFE7          	movff	indf2,indf1
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;my_i2c.c: 365: ToMainHigh_sendmsg(sizeof(unsigned char) * (ic_ptr->buflen + 1), 48, (vo
      +                          id *) ic_ptr->buffer);
  8115  0005EE  0100               	movlb	0	; () banked
  8116  0005F0  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  8117  0005F2  0E30               	movlw	48
  8118  0005F4  0100               	movlb	0	; () banked
  8119  0005F6  0100               	movlb	0	; () banked
  8120  0005F8  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8121  0005FA  0100               	movlb	0	; () banked
  8122  0005FC  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8123  0005FE  0100               	movlb	0	; () banked
  8124  000600  0100               	movlb	0	; () banked
  8125  000602  C0D2  F092         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  8126  000606  0100               	movlb	0	; () banked
  8127  000608  0100               	movlb	0	; () banked
  8128  00060A  C0D1  F091         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  8129  00060E  0100               	movlb	0	; () banked
  8130  000610  EE20 F016          	lfsr	2,22
  8131  000614  0100               	movlb	0	; () banked
  8132  000616  51D1               	movf	_ic_ptr& (0+255),w,b
  8133  000618  26D9               	addwf	fsr2l,f,c
  8134  00061A  0100               	movlb	0	; () banked
  8135  00061C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8136  00061E  22DA               	addwfc	fsr2h,f,c
  8137  000620  50DF               	movf	indf2,w,c
  8138  000622  0100               	movlb	0	; () banked
  8139  000624  6F95               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  8140  000626  0100               	movlb	0	; () banked
  8141  000628  2995               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  8142  00062A  EC39  F012         	call	i2_ToMainHigh_sendmsg
  8143                           
  8144                           ;my_i2c.c: 366: ic_ptr->buflen = 0;
  8145  00062E  0100               	movlb	0	; () banked
  8146  000630  EE20 F016          	lfsr	2,22
  8147  000634  D04B               	goto	L15
  8148  000636                     i2l4323:
  8149                           
  8150                           ; BSR set to: 0
  8151  000636  0100               	movlb	0	; () banked
  8152  000638  EE20 F01B          	lfsr	2,27
  8153  00063C  0100               	movlb	0	; () banked
  8154  00063E  51D1               	movf	_ic_ptr& (0+255),w,b
  8155  000640  26D9               	addwf	fsr2l,f,c
  8156  000642  0100               	movlb	0	; () banked
  8157  000644  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8158  000646  22DA               	addwfc	fsr2h,f,c
  8159  000648  50DF               	movf	indf2,w,c
  8160  00064A  B4D8               	btfsc	status,2,c
  8161  00064C  D047               	goto	i2l4331
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;my_i2c.c: 368: error_buf[0] = ic_ptr->error_count;
  8165  00064E  0100               	movlb	0	; () banked
  8166  000650  EE20 F01B          	lfsr	2,27
  8167  000654  0100               	movlb	0	; () banked
  8168  000656  51D1               	movf	_ic_ptr& (0+255),w,b
  8169  000658  26D9               	addwf	fsr2l,f,c
  8170  00065A  0100               	movlb	0	; () banked
  8171  00065C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8172  00065E  22DA               	addwfc	fsr2h,f,c
  8173  000660  50DF               	movf	indf2,w,c
  8174  000662  0100               	movlb	0	; () banked
  8175  000664  0100               	movlb	0	; () banked
  8176  000666  6F96               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8177                           
  8178                           ;my_i2c.c: 369: error_buf[1] = ic_ptr->error_code;
  8179  000668  0100               	movlb	0	; () banked
  8180  00066A  EE20 F01A          	lfsr	2,26
  8181  00066E  0100               	movlb	0	; () banked
  8182  000670  51D1               	movf	_ic_ptr& (0+255),w,b
  8183  000672  26D9               	addwf	fsr2l,f,c
  8184  000674  0100               	movlb	0	; () banked
  8185  000676  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8186  000678  22DA               	addwfc	fsr2h,f,c
  8187  00067A  50DF               	movf	indf2,w,c
  8188  00067C  0100               	movlb	0	; () banked
  8189  00067E  0100               	movlb	0	; () banked
  8190  000680  6F97               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8191                           
  8192                           ;my_i2c.c: 370: error_buf[2] = ic_ptr->event_count;
  8193  000682  0100               	movlb	0	; () banked
  8194  000684  EE20 F018          	lfsr	2,24
  8195  000688  0100               	movlb	0	; () banked
  8196  00068A  51D1               	movf	_ic_ptr& (0+255),w,b
  8197  00068C  26D9               	addwf	fsr2l,f,c
  8198  00068E  0100               	movlb	0	; () banked
  8199  000690  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8200  000692  22DA               	addwfc	fsr2h,f,c
  8201  000694  50DF               	movf	indf2,w,c
  8202  000696  0100               	movlb	0	; () banked
  8203  000698  0100               	movlb	0	; () banked
  8204  00069A  6F98               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;my_i2c.c: 371: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8208  00069C  0100               	movlb	0	; () banked
  8209  00069E  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  8210  0006A0  0E29               	movlw	41
  8211  0006A2  0100               	movlb	0	; () banked
  8212  0006A4  0100               	movlb	0	; () banked
  8213  0006A6  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8214  0006A8  0100               	movlb	0	; () banked
  8215  0006AA  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8216  0006AC  0100               	movlb	0	; () banked
  8217  0006AE  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8218  0006B0  0100               	movlb	0	; () banked
  8219  0006B2  0100               	movlb	0	; () banked
  8220  0006B4  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8221  0006B6  0100               	movlb	0	; () banked
  8222  0006B8  0E96               	movlw	low i2c_slave_int_handler@error_buf
  8223  0006BA  0100               	movlb	0	; () banked
  8224  0006BC  0100               	movlb	0	; () banked
  8225  0006BE  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8226  0006C0  0E03               	movlw	3
  8227  0006C2  EC39  F012         	call	i2_ToMainHigh_sendmsg
  8228                           
  8229                           ;my_i2c.c: 372: ic_ptr->error_count = 0;
  8230  0006C6  0100               	movlb	0	; () banked
  8231  0006C8  EE20 F01B          	lfsr	2,27
  8232  0006CC                     L15:
  8233  0006CC  0100               	movlb	0	; () banked
  8234  0006CE  51D1               	movf	_ic_ptr& (0+255),w,b
  8235  0006D0  26D9               	addwf	fsr2l,f,c
  8236  0006D2  0100               	movlb	0	; () banked
  8237  0006D4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8238  0006D6  22DA               	addwfc	fsr2h,f,c
  8239  0006D8  0E00               	movlw	0
  8240  0006DA  6EDF               	movwf	indf2,c
  8241  0006DC                     i2l4331:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;my_i2c.c: 373: }
  8245                           ;my_i2c.c: 374: if (msg_to_send) {
  8246  0006DC  0100               	movlb	0	; () banked
  8247  0006DE  0100               	movlb	0	; () banked
  8248  0006E0  519C               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8249  0006E2  B4D8               	btfsc	status,2,c
  8250  0006E4  0012               	return	
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;my_i2c.c: 377: start_i2c_slave_reply(22, 0);
  8254  0006E6  0E00               	movlw	0
  8255  0006E8  6E37               	movwf	i2start_i2c_slave_reply@msg+1,c
  8256  0006EA  0E00               	movlw	0
  8257  0006EC  6E36               	movwf	i2start_i2c_slave_reply@msg,c
  8258  0006EE  0E16               	movlw	22
  8259  0006F0  EC1E  F00A         	call	i2_start_i2c_slave_reply
  8260                           
  8261                           ;my_i2c.c: 378: msg_to_send = 0;
  8262  0006F4  0100               	movlb	0	; () banked
  8263  0006F6  6F94               	movwf	??_i2c_slave_int_handler& (0+255),b
  8264  0006F8  0E00               	movlw	0
  8265  0006FA  0100               	movlb	0	; () banked
  8266  0006FC  0100               	movlb	0	; () banked
  8267  0006FE  6F9C               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8268  000700  0100               	movlb	0	; () banked
  8269  000702  5194               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8270  000704  0012               	return	
  8271  000706                     __end_of_i2c_slave_int_handler:
  8272                           	opt stack 0
  8273                           pclatu	equ	0xFFB
  8274                           pclath	equ	0xFFA
  8275                           tblptru	equ	0xFF8
  8276                           tblptrh	equ	0xFF7
  8277                           tblptrl	equ	0xFF6
  8278                           tablat	equ	0xFF5
  8279                           prodh	equ	0xFF4
  8280                           prodl	equ	0xFF3
  8281                           intcon	equ	0xFF2
  8282                           postinc0	equ	0xFEE
  8283                           fsr0h	equ	0xFEA
  8284                           fsr0l	equ	0xFE9
  8285                           wreg	equ	0xFE8
  8286                           indf1	equ	0xFE7
  8287                           fsr1h	equ	0xFE2
  8288                           fsr1l	equ	0xFE1
  8289                           bsr	equ	0xFE0
  8290                           indf2	equ	0xFDF
  8291                           postinc2	equ	0xFDE
  8292                           postdec2	equ	0xFDD
  8293                           fsr2h	equ	0xFDA
  8294                           fsr2l	equ	0xFD9
  8295                           status	equ	0xFD8
  8296                           
  8297 ;; *************** function i2_start_i2c_slave_reply *****************
  8298 ;; Defined at:
  8299 ;;		line 123 in file "source/my_i2c.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  length          1    wreg     unsigned char 
  8302 ;;  msg             2   53[COMRAM] PTR unsigned char 
  8303 ;;		 -> NULL(0), main@msgbuffer(23), 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  length          1  (no storage) unsigned char 
  8306 ;;  start_i2c_sl    2   10[BANK0 ] int 
  8307 ;;  start_i2c_sl    2    8[BANK0 ] int 
  8308 ;;  start_i2c_sl    2    6[BANK0 ] int 
  8309 ;;  start_i2c_sl    2    4[BANK0 ] int 
  8310 ;;  start_i2c_sl    2    2[BANK0 ] unsigned int 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;		None               void
  8313 ;; Registers used:
  8314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8320 ;;      Params:         2       0       0       0       0
  8321 ;;      Locals:         0      10       0       0       0
  8322 ;;      Temps:          0       2       0       0       0
  8323 ;;      Totals:         2      12       0       0       0
  8324 ;;Total ram usage:       14 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    1
  8327 ;; This function calls:
  8328 ;;		i2_ReadTimer1
  8329 ;; This function is called by:
  8330 ;;		_i2c_slave_int_handler
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text48
  8335  00143C                     __ptext48:
  8336                           	opt stack 0
  8337  00143C                     i2_start_i2c_slave_reply:
  8338                           	opt stack 16
  8339                           
  8340                           ;my_i2c.c: 125: int feetL = DeltaOverflowL / 0x08;
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;incstack = 0
  8344  00143C  0100               	movlb	0	; () banked
  8345  00143E  C0CA  F080         	movff	_DeltaOverflowL,??i2_start_i2c_slave_reply
  8346  001442  0100               	movlb	0	; () banked
  8347  001444  C0CB  F081         	movff	_DeltaOverflowL+1,??i2_start_i2c_slave_reply+1
  8348  001448  0100               	movlb	0	; () banked
  8349  00144A  90D8               	bcf	status,0,c
  8350  00144C  3381               	rrcf	(??i2_start_i2c_slave_reply+1)& (0+255),f,b
  8351  00144E  3380               	rrcf	??i2_start_i2c_slave_reply& (0+255),f,b
  8352  001450  0100               	movlb	0	; () banked
  8353  001452  90D8               	bcf	status,0,c
  8354  001454  3381               	rrcf	(??i2_start_i2c_slave_reply+1)& (0+255),f,b
  8355  001456  3380               	rrcf	??i2_start_i2c_slave_reply& (0+255),f,b
  8356  001458  0100               	movlb	0	; () banked
  8357  00145A  90D8               	bcf	status,0,c
  8358  00145C  3381               	rrcf	(??i2_start_i2c_slave_reply+1)& (0+255),f,b
  8359  00145E  3380               	rrcf	??i2_start_i2c_slave_reply& (0+255),f,b
  8360  001460  C080  F084         	movff	??i2_start_i2c_slave_reply,i2start_i2c_slave_reply@feetL
  8361  001464  C081  F085         	movff	??i2_start_i2c_slave_reply+1,i2start_i2c_slave_reply@feetL+1
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;my_i2c.c: 126: int inchesL = DeltaOverflowL % 0x08;
  8365  001468  0E07               	movlw	7
  8366  00146A  0100               	movlb	0	; () banked
  8367  00146C  0100               	movlb	0	; () banked
  8368  00146E  15CA               	andwf	_DeltaOverflowL& (0+255),w,b
  8369  001470  0100               	movlb	0	; () banked
  8370  001472  0100               	movlb	0	; () banked
  8371  001474  6F86               	movwf	i2start_i2c_slave_reply@inchesL& (0+255),b
  8372  001476  0E00               	movlw	0
  8373  001478  0100               	movlb	0	; () banked
  8374  00147A  0100               	movlb	0	; () banked
  8375  00147C  15CB               	andwf	(_DeltaOverflowL+1)& (0+255),w,b
  8376  00147E  0100               	movlb	0	; () banked
  8377  001480  6F87               	movwf	(i2start_i2c_slave_reply@inchesL+1)& (0+255),b
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;my_i2c.c: 127: int feetR = DeltaOverflowR / 0x08;
  8381  001482  0100               	movlb	0	; () banked
  8382  001484  C0CC  F080         	movff	_DeltaOverflowR,??i2_start_i2c_slave_reply
  8383  001488  0100               	movlb	0	; () banked
  8384  00148A  C0CD  F081         	movff	_DeltaOverflowR+1,??i2_start_i2c_slave_reply+1
  8385  00148E  0100               	movlb	0	; () banked
  8386  001490  90D8               	bcf	status,0,c
  8387  001492  3381               	rrcf	(??i2_start_i2c_slave_reply+1)& (0+255),f,b
  8388  001494  3380               	rrcf	??i2_start_i2c_slave_reply& (0+255),f,b
  8389  001496  0100               	movlb	0	; () banked
  8390  001498  90D8               	bcf	status,0,c
  8391  00149A  3381               	rrcf	(??i2_start_i2c_slave_reply+1)& (0+255),f,b
  8392  00149C  3380               	rrcf	??i2_start_i2c_slave_reply& (0+255),f,b
  8393  00149E  0100               	movlb	0	; () banked
  8394  0014A0  90D8               	bcf	status,0,c
  8395  0014A2  3381               	rrcf	(??i2_start_i2c_slave_reply+1)& (0+255),f,b
  8396  0014A4  3380               	rrcf	??i2_start_i2c_slave_reply& (0+255),f,b
  8397  0014A6  C080  F088         	movff	??i2_start_i2c_slave_reply,i2start_i2c_slave_reply@feetR
  8398  0014AA  C081  F089         	movff	??i2_start_i2c_slave_reply+1,i2start_i2c_slave_reply@feetR+1
  8399                           
  8400                           ;my_i2c.c: 128: int inchesR = DeltaOverflowR % 0x08;
  8401  0014AE  0E07               	movlw	7
  8402  0014B0  0100               	movlb	0	; () banked
  8403  0014B2  0100               	movlb	0	; () banked
  8404  0014B4  15CC               	andwf	_DeltaOverflowR& (0+255),w,b
  8405  0014B6  0100               	movlb	0	; () banked
  8406  0014B8  0100               	movlb	0	; () banked
  8407  0014BA  6F8A               	movwf	i2start_i2c_slave_reply@inchesR& (0+255),b
  8408  0014BC  0E00               	movlw	0
  8409  0014BE  0100               	movlb	0	; () banked
  8410  0014C0  0100               	movlb	0	; () banked
  8411  0014C2  15CD               	andwf	(_DeltaOverflowR+1)& (0+255),w,b
  8412  0014C4  0100               	movlb	0	; () banked
  8413  0014C6  6F8B               	movwf	(i2start_i2c_slave_reply@inchesR+1)& (0+255),b
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;my_i2c.c: 130: unsigned int distance = motorDistance + ReadTimer1();
  8417  0014C8  EC53  F013         	call	i2_ReadTimer1	;wreg free
  8418  0014CC  0100               	movlb	0	; () banked
  8419  0014CE  0100               	movlb	0	; () banked
  8420  0014D0  51CE               	movf	_motorDistance& (0+255),w,b
  8421  0014D2  2432               	addwf	?i2_ReadTimer1,w,c
  8422  0014D4  0100               	movlb	0	; () banked
  8423  0014D6  0100               	movlb	0	; () banked
  8424  0014D8  6F82               	movwf	i2start_i2c_slave_reply@distance& (0+255),b
  8425  0014DA  0100               	movlb	0	; () banked
  8426  0014DC  0100               	movlb	0	; () banked
  8427  0014DE  51CF               	movf	(_motorDistance+1)& (0+255),w,b
  8428  0014E0  2033               	addwfc	?i2_ReadTimer1+1,w,c
  8429  0014E2  0100               	movlb	0	; () banked
  8430  0014E4  6F83               	movwf	(i2start_i2c_slave_reply@distance+1)& (0+255),b
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;my_i2c.c: 131: ic_ptr->outbuffer[0] = ActiveL | ActiveR;
  8434  0014E6  0100               	movlb	0	; () banked
  8435  0014E8  EE20 F01C          	lfsr	2,28
  8436  0014EC  0100               	movlb	0	; () banked
  8437  0014EE  51D1               	movf	_ic_ptr& (0+255),w,b
  8438  0014F0  26D9               	addwf	fsr2l,f,c
  8439  0014F2  0100               	movlb	0	; () banked
  8440  0014F4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8441  0014F6  22DA               	addwfc	fsr2h,f,c
  8442  0014F8  0100               	movlb	0	; () banked
  8443  0014FA  0100               	movlb	0	; () banked
  8444  0014FC  51C6               	movf	_ActiveL& (0+255),w,b
  8445  0014FE  0100               	movlb	0	; () banked
  8446  001500  0100               	movlb	0	; () banked
  8447  001502  11C8               	iorwf	_ActiveR& (0+255),w,b
  8448  001504  6EDF               	movwf	indf2,c
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;my_i2c.c: 132: ic_ptr->outbuffer[1] = feetL;
  8452  001506  0100               	movlb	0	; () banked
  8453  001508  EE20 F01D          	lfsr	2,29
  8454  00150C  0100               	movlb	0	; () banked
  8455  00150E  51D1               	movf	_ic_ptr& (0+255),w,b
  8456  001510  26D9               	addwf	fsr2l,f,c
  8457  001512  0100               	movlb	0	; () banked
  8458  001514  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8459  001516  22DA               	addwfc	fsr2h,f,c
  8460  001518  0100               	movlb	0	; () banked
  8461  00151A  C084  FFDF         	movff	i2start_i2c_slave_reply@feetL,indf2
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;my_i2c.c: 133: ic_ptr->outbuffer[2] = inchesL;
  8465  00151E  0100               	movlb	0	; () banked
  8466  001520  EE20 F01E          	lfsr	2,30
  8467  001524  0100               	movlb	0	; () banked
  8468  001526  51D1               	movf	_ic_ptr& (0+255),w,b
  8469  001528  26D9               	addwf	fsr2l,f,c
  8470  00152A  0100               	movlb	0	; () banked
  8471  00152C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8472  00152E  22DA               	addwfc	fsr2h,f,c
  8473  001530  0100               	movlb	0	; () banked
  8474  001532  C086  FFDF         	movff	i2start_i2c_slave_reply@inchesL,indf2
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;my_i2c.c: 134: ic_ptr->outbuffer[3] = feetR;
  8478  001536  0100               	movlb	0	; () banked
  8479  001538  EE20 F01F          	lfsr	2,31
  8480  00153C  0100               	movlb	0	; () banked
  8481  00153E  51D1               	movf	_ic_ptr& (0+255),w,b
  8482  001540  26D9               	addwf	fsr2l,f,c
  8483  001542  0100               	movlb	0	; () banked
  8484  001544  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8485  001546  22DA               	addwfc	fsr2h,f,c
  8486  001548  0100               	movlb	0	; () banked
  8487  00154A  C088  FFDF         	movff	i2start_i2c_slave_reply@feetR,indf2
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;my_i2c.c: 135: ic_ptr->outbuffer[4] = inchesR;
  8491  00154E  0100               	movlb	0	; () banked
  8492  001550  EE20 F020          	lfsr	2,32
  8493  001554  0100               	movlb	0	; () banked
  8494  001556  51D1               	movf	_ic_ptr& (0+255),w,b
  8495  001558  26D9               	addwf	fsr2l,f,c
  8496  00155A  0100               	movlb	0	; () banked
  8497  00155C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8498  00155E  22DA               	addwfc	fsr2h,f,c
  8499  001560  0100               	movlb	0	; () banked
  8500  001562  C08A  FFDF         	movff	i2start_i2c_slave_reply@inchesR,indf2
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;my_i2c.c: 138: DeltaOverflowL = 0;
  8504  001566  0E00               	movlw	0
  8505  001568  0100               	movlb	0	; () banked
  8506  00156A  0100               	movlb	0	; () banked
  8507  00156C  6FCB               	movwf	(_DeltaOverflowL+1)& (0+255),b
  8508  00156E  0E00               	movlw	0
  8509  001570  0100               	movlb	0	; () banked
  8510  001572  6FCA               	movwf	_DeltaOverflowL& (0+255),b
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;my_i2c.c: 139: DeltaOverflowR = 0;
  8514  001574  0E00               	movlw	0
  8515  001576  0100               	movlb	0	; () banked
  8516  001578  0100               	movlb	0	; () banked
  8517  00157A  6FCD               	movwf	(_DeltaOverflowR+1)& (0+255),b
  8518  00157C  0E00               	movlw	0
  8519  00157E  0100               	movlb	0	; () banked
  8520  001580  6FCC               	movwf	_DeltaOverflowR& (0+255),b
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;my_i2c.c: 157: ic_ptr->sendBufLen =0;
  8524  001582  0100               	movlb	0	; () banked
  8525  001584  EE20 F04B          	lfsr	2,75
  8526  001588  0100               	movlb	0	; () banked
  8527  00158A  51D1               	movf	_ic_ptr& (0+255),w,b
  8528  00158C  26D9               	addwf	fsr2l,f,c
  8529  00158E  0100               	movlb	0	; () banked
  8530  001590  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8531  001592  22DA               	addwfc	fsr2h,f,c
  8532  001594  0E00               	movlw	0
  8533  001596  6EDF               	movwf	indf2,c
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;my_i2c.c: 158: ic_ptr->outbuflen = 5;
  8537  001598  0100               	movlb	0	; () banked
  8538  00159A  EE20 F032          	lfsr	2,50
  8539  00159E  0100               	movlb	0	; () banked
  8540  0015A0  51D1               	movf	_ic_ptr& (0+255),w,b
  8541  0015A2  26D9               	addwf	fsr2l,f,c
  8542  0015A4  0100               	movlb	0	; () banked
  8543  0015A6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8544  0015A8  22DA               	addwfc	fsr2h,f,c
  8545  0015AA  0E05               	movlw	5
  8546  0015AC  6EDF               	movwf	indf2,c
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;my_i2c.c: 159: ic_ptr->outbufind = 1;
  8550  0015AE  0100               	movlb	0	; () banked
  8551  0015B0  EE20 F033          	lfsr	2,51
  8552  0015B4  0100               	movlb	0	; () banked
  8553  0015B6  51D1               	movf	_ic_ptr& (0+255),w,b
  8554  0015B8  26D9               	addwf	fsr2l,f,c
  8555  0015BA  0100               	movlb	0	; () banked
  8556  0015BC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8557  0015BE  22DA               	addwfc	fsr2h,f,c
  8558  0015C0  0E01               	movlw	1
  8559  0015C2  6EDF               	movwf	indf2,c
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;my_i2c.c: 162: SSPBUF = ic_ptr->outbuffer[0];
  8563  0015C4  0100               	movlb	0	; () banked
  8564  0015C6  EE20 F01C          	lfsr	2,28
  8565  0015CA  0100               	movlb	0	; () banked
  8566  0015CC  51D1               	movf	_ic_ptr& (0+255),w,b
  8567  0015CE  26D9               	addwf	fsr2l,f,c
  8568  0015D0  0100               	movlb	0	; () banked
  8569  0015D2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8570  0015D4  22DA               	addwfc	fsr2h,f,c
  8571  0015D6  50DF               	movf	indf2,w,c
  8572  0015D8  6EC9               	movwf	4041,c	;volatile
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;my_i2c.c: 165: SSPCON1bits.CKP = 1;
  8576  0015DA  88C6               	bsf	4038,4,c	;volatile
  8577                           
  8578                           ; BSR set to: 0
  8579  0015DC  0012               	return	
  8580  0015DE                     __end_ofi2_start_i2c_slave_reply:
  8581                           	opt stack 0
  8582                           pclatu	equ	0xFFB
  8583                           pclath	equ	0xFFA
  8584                           tblptru	equ	0xFF8
  8585                           tblptrh	equ	0xFF7
  8586                           tblptrl	equ	0xFF6
  8587                           tablat	equ	0xFF5
  8588                           prodh	equ	0xFF4
  8589                           prodl	equ	0xFF3
  8590                           intcon	equ	0xFF2
  8591                           postinc0	equ	0xFEE
  8592                           fsr0h	equ	0xFEA
  8593                           fsr0l	equ	0xFE9
  8594                           wreg	equ	0xFE8
  8595                           indf1	equ	0xFE7
  8596                           fsr1h	equ	0xFE2
  8597                           fsr1l	equ	0xFE1
  8598                           bsr	equ	0xFE0
  8599                           indf2	equ	0xFDF
  8600                           postinc2	equ	0xFDE
  8601                           postdec2	equ	0xFDD
  8602                           fsr2h	equ	0xFDA
  8603                           fsr2l	equ	0xFD9
  8604                           status	equ	0xFD8
  8605                           
  8606 ;; *************** function i2_ReadTimer1 *****************
  8607 ;; Defined at:
  8608 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;		None
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  ReadTimer1      2   51[COMRAM] struct Timers
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  2   49[COMRAM] unsigned int 
  8615 ;; Registers used:
  8616 ;;		None
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8622 ;;      Params:         2       0       0       0       0
  8623 ;;      Locals:         2       0       0       0       0
  8624 ;;      Temps:          0       0       0       0       0
  8625 ;;      Totals:         4       0       0       0       0
  8626 ;;Total ram usage:        4 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; This function calls:
  8629 ;;		Nothing
  8630 ;; This function is called by:
  8631 ;;		i2_start_i2c_slave_reply
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text49
  8636  0026A6                     __ptext49:
  8637                           	opt stack 0
  8638  0026A6                     i2_ReadTimer1:
  8639                           	opt stack 16
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;incstack = 0
  8643  0026A6  CFCE F034          	movff	4046,i2ReadTimer1@timer	;volatile
  8644  0026AA  CFCF F035          	movff	4047,i2ReadTimer1@timer+1	;volatile
  8645  0026AE  C034  F032         	movff	i2ReadTimer1@timer,?i2_ReadTimer1
  8646  0026B2  C035  F033         	movff	i2ReadTimer1@timer+1,?i2_ReadTimer1+1
  8647  0026B6  0012               	return	
  8648  0026B8                     __end_ofi2_ReadTimer1:
  8649                           	opt stack 0
  8650                           pclatu	equ	0xFFB
  8651                           pclath	equ	0xFFA
  8652                           tblptru	equ	0xFF8
  8653                           tblptrh	equ	0xFF7
  8654                           tblptrl	equ	0xFF6
  8655                           tablat	equ	0xFF5
  8656                           prodh	equ	0xFF4
  8657                           prodl	equ	0xFF3
  8658                           intcon	equ	0xFF2
  8659                           postinc0	equ	0xFEE
  8660                           fsr0h	equ	0xFEA
  8661                           fsr0l	equ	0xFE9
  8662                           wreg	equ	0xFE8
  8663                           indf1	equ	0xFE7
  8664                           fsr1h	equ	0xFE2
  8665                           fsr1l	equ	0xFE1
  8666                           bsr	equ	0xFE0
  8667                           indf2	equ	0xFDF
  8668                           postinc2	equ	0xFDE
  8669                           postdec2	equ	0xFDD
  8670                           fsr2h	equ	0xFDA
  8671                           fsr2l	equ	0xFD9
  8672                           status	equ	0xFD8
  8673                           
  8674 ;; *************** function _handle_start *****************
  8675 ;; Defined at:
  8676 ;;		line 171 in file "source/my_i2c.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;  data_read       1    wreg     unsigned char 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  data_read       1   49[COMRAM] unsigned char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;		None               void
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8690 ;;      Params:         0       0       0       0       0
  8691 ;;      Locals:         1       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0
  8693 ;;      Totals:         1       0       0       0       0
  8694 ;;Total ram usage:        1 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_i2c_slave_int_handler
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text50
  8704  001AC8                     __ptext50:
  8705                           	opt stack 0
  8706  001AC8                     _handle_start:
  8707                           	opt stack 17
  8708                           
  8709                           ;incstack = 0
  8710                           ;handle_start@data_read stored from wreg
  8711  001AC8  CFE8 F032          	movff	wreg,handle_start@data_read
  8712                           
  8713                           ;my_i2c.c: 172: ic_ptr->event_count = 1;
  8714  001ACC  0100               	movlb	0	; () banked
  8715  001ACE  EE20 F018          	lfsr	2,24
  8716  001AD2  0100               	movlb	0	; () banked
  8717  001AD4  51D1               	movf	_ic_ptr& (0+255),w,b
  8718  001AD6  26D9               	addwf	fsr2l,f,c
  8719  001AD8  0100               	movlb	0	; () banked
  8720  001ADA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8721  001ADC  22DA               	addwfc	fsr2h,f,c
  8722  001ADE  0E01               	movlw	1
  8723  001AE0  6EDF               	movwf	indf2,c
  8724                           
  8725                           ;my_i2c.c: 173: ic_ptr->buflen = 0;
  8726  001AE2  0100               	movlb	0	; () banked
  8727  001AE4  EE20 F016          	lfsr	2,22
  8728  001AE8  0100               	movlb	0	; () banked
  8729  001AEA  51D1               	movf	_ic_ptr& (0+255),w,b
  8730  001AEC  26D9               	addwf	fsr2l,f,c
  8731  001AEE  0100               	movlb	0	; () banked
  8732  001AF0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8733  001AF2  22DA               	addwfc	fsr2h,f,c
  8734  001AF4  0E00               	movlw	0
  8735  001AF6  6EDF               	movwf	indf2,c
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;my_i2c.c: 175: if (data_read) {
  8739  001AF8  5032               	movf	handle_start@data_read,w,c
  8740  001AFA  B4D8               	btfsc	status,2,c
  8741  001AFC  D03D               	goto	i2l3267
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;my_i2c.c: 176: if (SSPSTATbits.D_A == 1) {
  8745  001AFE  AAC7               	btfss	4039,5,c	;volatile
  8746  001B00  D021               	goto	i2l352
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;my_i2c.c: 179: ic_ptr->status = 0x5;
  8750  001B02  0100               	movlb	0	; () banked
  8751  001B04  EE20 F019          	lfsr	2,25
  8752  001B08  0100               	movlb	0	; () banked
  8753  001B0A  51D1               	movf	_ic_ptr& (0+255),w,b
  8754  001B0C  26D9               	addwf	fsr2l,f,c
  8755  001B0E  0100               	movlb	0	; () banked
  8756  001B10  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8757  001B12  22DA               	addwfc	fsr2h,f,c
  8758  001B14  0E05               	movlw	5
  8759  001B16  6EDF               	movwf	indf2,c
  8760                           
  8761                           ;my_i2c.c: 180: ic_ptr->error_count++;
  8762  001B18  0100               	movlb	0	; () banked
  8763  001B1A  EE20 F01B          	lfsr	2,27
  8764  001B1E  0100               	movlb	0	; () banked
  8765  001B20  51D1               	movf	_ic_ptr& (0+255),w,b
  8766  001B22  26D9               	addwf	fsr2l,f,c
  8767  001B24  0100               	movlb	0	; () banked
  8768  001B26  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8769  001B28  22DA               	addwfc	fsr2h,f,c
  8770  001B2A  2ADF               	incf	indf2,f,c
  8771                           
  8772                           ;my_i2c.c: 181: ic_ptr->error_code = 0x5;
  8773  001B2C  0100               	movlb	0	; () banked
  8774  001B2E  EE20 F01A          	lfsr	2,26
  8775  001B32  0100               	movlb	0	; () banked
  8776  001B34  51D1               	movf	_ic_ptr& (0+255),w,b
  8777  001B36  26D9               	addwf	fsr2l,f,c
  8778  001B38  0100               	movlb	0	; () banked
  8779  001B3A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8780  001B3C  22DA               	addwfc	fsr2h,f,c
  8781  001B3E  0E05               	movlw	5
  8782  001B40  6EDF               	movwf	indf2,c
  8783                           
  8784                           ;my_i2c.c: 182: } else {
  8785  001B42  0012               	return	
  8786  001B44                     i2l352:
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;my_i2c.c: 183: if (SSPSTATbits.R_W == 1) {
  8790  001B44  A4C7               	btfss	4039,2,c	;volatile
  8791  001B46  D00C               	goto	i2l3265
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;my_i2c.c: 184: ic_ptr->status = 0x8;
  8795  001B48  0100               	movlb	0	; () banked
  8796  001B4A  EE20 F019          	lfsr	2,25
  8797  001B4E  0100               	movlb	0	; () banked
  8798  001B50  51D1               	movf	_ic_ptr& (0+255),w,b
  8799  001B52  26D9               	addwf	fsr2l,f,c
  8800  001B54  0100               	movlb	0	; () banked
  8801  001B56  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8802  001B58  22DA               	addwfc	fsr2h,f,c
  8803  001B5A  0E08               	movlw	8
  8804  001B5C  6EDF               	movwf	indf2,c
  8805                           
  8806                           ;my_i2c.c: 185: } else {
  8807  001B5E  0012               	return	
  8808  001B60                     i2l3265:
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;my_i2c.c: 186: ic_ptr->status = 0x7;
  8812  001B60  0100               	movlb	0	; () banked
  8813  001B62  EE20 F019          	lfsr	2,25
  8814  001B66  0100               	movlb	0	; () banked
  8815  001B68  51D1               	movf	_ic_ptr& (0+255),w,b
  8816  001B6A  26D9               	addwf	fsr2l,f,c
  8817  001B6C  0100               	movlb	0	; () banked
  8818  001B6E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8819  001B70  22DA               	addwfc	fsr2h,f,c
  8820  001B72  0E07               	movlw	7
  8821  001B74  6EDF               	movwf	indf2,c
  8822  001B76  0012               	return	
  8823  001B78                     i2l3267:
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;my_i2c.c: 190: ic_ptr->status = 0x6;
  8827  001B78  0100               	movlb	0	; () banked
  8828  001B7A  EE20 F019          	lfsr	2,25
  8829  001B7E  0100               	movlb	0	; () banked
  8830  001B80  51D1               	movf	_ic_ptr& (0+255),w,b
  8831  001B82  26D9               	addwf	fsr2l,f,c
  8832  001B84  0100               	movlb	0	; () banked
  8833  001B86  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8834  001B88  22DA               	addwfc	fsr2h,f,c
  8835  001B8A  0E06               	movlw	6
  8836  001B8C  6EDF               	movwf	indf2,c
  8837  001B8E  0012               	return	
  8838  001B90                     __end_of_handle_start:
  8839                           	opt stack 0
  8840                           pclatu	equ	0xFFB
  8841                           pclath	equ	0xFFA
  8842                           tblptru	equ	0xFF8
  8843                           tblptrh	equ	0xFF7
  8844                           tblptrl	equ	0xFF6
  8845                           tablat	equ	0xFF5
  8846                           prodh	equ	0xFF4
  8847                           prodl	equ	0xFF3
  8848                           intcon	equ	0xFF2
  8849                           postinc0	equ	0xFEE
  8850                           fsr0h	equ	0xFEA
  8851                           fsr0l	equ	0xFE9
  8852                           wreg	equ	0xFE8
  8853                           indf1	equ	0xFE7
  8854                           fsr1h	equ	0xFE2
  8855                           fsr1l	equ	0xFE1
  8856                           bsr	equ	0xFE0
  8857                           indf2	equ	0xFDF
  8858                           postinc2	equ	0xFDE
  8859                           postdec2	equ	0xFDD
  8860                           fsr2h	equ	0xFDA
  8861                           fsr2l	equ	0xFD9
  8862                           status	equ	0xFD8
  8863                           
  8864 ;; *************** function _i2c_master_int_handler *****************
  8865 ;; Defined at:
  8866 ;;		line 455 in file "source/my_i2c.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;		None               void
  8873 ;; Registers used:
  8874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8880 ;;      Params:         0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0
  8882 ;;      Temps:          0       1       0       0       0
  8883 ;;      Totals:         0       1       0       0       0
  8884 ;;Total ram usage:        1 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:    3
  8887 ;; This function calls:
  8888 ;;		i2_ToMainHigh_sendmsg
  8889 ;; This function is called by:
  8890 ;;		_i2c_int_handler
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text51
  8895  000706                     __ptext51:
  8896                           	opt stack 0
  8897  000706                     _i2c_master_int_handler:
  8898                           	opt stack 15
  8899                           
  8900                           ;my_i2c.c: 456: switch (ic_ptr->status){
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;incstack = 0
  8904  000706  D29C               	goto	i2l4195
  8905  000708                     i2l4095:
  8906                           
  8907                           ;my_i2c.c: 459: ic_ptr->status = 0x11;
  8908  000708  0100               	movlb	0	; () banked
  8909  00070A  EE20 F019          	lfsr	2,25
  8910  00070E  0100               	movlb	0	; () banked
  8911  000710  51D1               	movf	_ic_ptr& (0+255),w,b
  8912  000712  26D9               	addwf	fsr2l,f,c
  8913  000714  0100               	movlb	0	; () banked
  8914  000716  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8915  000718  22DA               	addwfc	fsr2h,f,c
  8916  00071A  0E11               	movlw	17
  8917  00071C  6EDF               	movwf	indf2,c
  8918                           
  8919                           ;my_i2c.c: 460: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  8920  00071E  0100               	movlb	0	; () banked
  8921  000720  EE20 F034          	lfsr	2,52
  8922  000724  0100               	movlb	0	; () banked
  8923  000726  51D1               	movf	_ic_ptr& (0+255),w,b
  8924  000728  26D9               	addwf	fsr2l,f,c
  8925  00072A  0100               	movlb	0	; () banked
  8926  00072C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8927  00072E  22DA               	addwfc	fsr2h,f,c
  8928  000730  50DF               	movf	indf2,w,c
  8929  000732  0100               	movlb	0	; () banked
  8930  000734  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  8931  000736  0100               	movlb	0	; () banked
  8932  000738  90D8               	bcf	status,0,c
  8933  00073A  3594               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  8934  00073C  0BFE               	andlw	254
  8935  00073E  6EC9               	movwf	4041,c	;volatile
  8936                           
  8937                           ;my_i2c.c: 461: break;
  8938  000740  0012               	return	
  8939  000742                     i2l423:
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;my_i2c.c: 464: if (SSPCON2bits.ACKSTAT == 0) {
  8943  000742  BCC5               	btfsc	4037,6,c	;volatile
  8944  000744  D07A               	goto	i2l4113
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;my_i2c.c: 465: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8948  000746  0100               	movlb	0	; () banked
  8949  000748  EE20 F033          	lfsr	2,51
  8950  00074C  0100               	movlb	0	; () banked
  8951  00074E  51D1               	movf	_ic_ptr& (0+255),w,b
  8952  000750  26D9               	addwf	fsr2l,f,c
  8953  000752  0100               	movlb	0	; () banked
  8954  000754  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8955  000756  22DA               	addwfc	fsr2h,f,c
  8956  000758  50DF               	movf	indf2,w,c
  8957  00075A  0100               	movlb	0	; () banked
  8958  00075C  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  8959  00075E  0100               	movlb	0	; () banked
  8960  000760  EE20 F032          	lfsr	2,50
  8961  000764  0100               	movlb	0	; () banked
  8962  000766  51D1               	movf	_ic_ptr& (0+255),w,b
  8963  000768  26D9               	addwf	fsr2l,f,c
  8964  00076A  0100               	movlb	0	; () banked
  8965  00076C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8966  00076E  22DA               	addwfc	fsr2h,f,c
  8967  000770  50DF               	movf	indf2,w,c
  8968  000772  0100               	movlb	0	; () banked
  8969  000774  5D94               	subwf	??_i2c_master_int_handler& (0+255),w,b
  8970  000776  B0D8               	btfsc	status,0,c
  8971  000778  D035               	goto	i2l4105
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;my_i2c.c: 466: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8975  00077A  0100               	movlb	0	; () banked
  8976  00077C  EE20 F033          	lfsr	2,51
  8977  000780  0100               	movlb	0	; () banked
  8978  000782  51D1               	movf	_ic_ptr& (0+255),w,b
  8979  000784  26D9               	addwf	fsr2l,f,c
  8980  000786  0100               	movlb	0	; () banked
  8981  000788  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8982  00078A  22DA               	addwfc	fsr2h,f,c
  8983  00078C  50DF               	movf	indf2,w,c
  8984  00078E  0100               	movlb	0	; () banked
  8985  000790  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  8986  000792  0100               	movlb	0	; () banked
  8987  000794  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  8988  000796  0D01               	mullw	1
  8989  000798  0E1C               	movlw	28
  8990  00079A  26F3               	addwf	prodl,f,c
  8991  00079C  0E00               	movlw	0
  8992  00079E  22F4               	addwfc	prodh,f,c
  8993  0007A0  50F3               	movf	prodl,w,c
  8994  0007A2  0100               	movlb	0	; () banked
  8995  0007A4  0100               	movlb	0	; () banked
  8996  0007A6  25D1               	addwf	_ic_ptr& (0+255),w,b
  8997  0007A8  6ED9               	movwf	fsr2l,c
  8998  0007AA  50F4               	movf	prodh,w,c
  8999  0007AC  0100               	movlb	0	; () banked
  9000  0007AE  0100               	movlb	0	; () banked
  9001  0007B0  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9002  0007B2  6EDA               	movwf	fsr2h,c
  9003  0007B4  50DF               	movf	indf2,w,c
  9004  0007B6  6EC9               	movwf	4041,c	;volatile
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;my_i2c.c: 467: ic_ptr->outbufind++;
  9008  0007B8  0100               	movlb	0	; () banked
  9009  0007BA  EE20 F033          	lfsr	2,51
  9010  0007BE  0100               	movlb	0	; () banked
  9011  0007C0  51D1               	movf	_ic_ptr& (0+255),w,b
  9012  0007C2  26D9               	addwf	fsr2l,f,c
  9013  0007C4  0100               	movlb	0	; () banked
  9014  0007C6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9015  0007C8  22DA               	addwfc	fsr2h,f,c
  9016  0007CA  2ADF               	incf	indf2,f,c
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;my_i2c.c: 468: ic_ptr->status = 0x12;
  9020  0007CC  0100               	movlb	0	; () banked
  9021  0007CE  EE20 F019          	lfsr	2,25
  9022  0007D2  0100               	movlb	0	; () banked
  9023  0007D4  51D1               	movf	_ic_ptr& (0+255),w,b
  9024  0007D6  26D9               	addwf	fsr2l,f,c
  9025  0007D8  0100               	movlb	0	; () banked
  9026  0007DA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9027  0007DC  22DA               	addwfc	fsr2h,f,c
  9028  0007DE  0E12               	movlw	18
  9029  0007E0  6EDF               	movwf	indf2,c
  9030                           
  9031                           ;my_i2c.c: 469: }
  9032  0007E2  0012               	return	
  9033  0007E4                     i2l4105:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;my_i2c.c: 470: else {
  9037                           ;my_i2c.c: 471: ToMainHigh_sendmsg(0, 43, 0);
  9038  0007E4  0100               	movlb	0	; () banked
  9039  0007E6  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9040  0007E8  0E2B               	movlw	43
  9041  0007EA  0100               	movlb	0	; () banked
  9042  0007EC  0100               	movlb	0	; () banked
  9043  0007EE  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9044  0007F0  0100               	movlb	0	; () banked
  9045  0007F2  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9046  0007F4  0E00               	movlw	0
  9047  0007F6  0100               	movlb	0	; () banked
  9048  0007F8  0100               	movlb	0	; () banked
  9049  0007FA  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9050  0007FC  0E00               	movlw	0
  9051  0007FE  0100               	movlb	0	; () banked
  9052  000800  0100               	movlb	0	; () banked
  9053  000802  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9054  000804  0E00               	movlw	0
  9055  000806  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9056                           
  9057                           ;my_i2c.c: 472: ic_ptr->outbuflen = 0;
  9058  00080A  0100               	movlb	0	; () banked
  9059  00080C  EE20 F032          	lfsr	2,50
  9060  000810  0100               	movlb	0	; () banked
  9061  000812  51D1               	movf	_ic_ptr& (0+255),w,b
  9062  000814  26D9               	addwf	fsr2l,f,c
  9063  000816  0100               	movlb	0	; () banked
  9064  000818  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9065  00081A  22DA               	addwfc	fsr2h,f,c
  9066  00081C  0E00               	movlw	0
  9067  00081E  6EDF               	movwf	indf2,c
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;my_i2c.c: 473: ic_ptr->status = 0x5;
  9071  000820  0100               	movlb	0	; () banked
  9072  000822  EE20 F019          	lfsr	2,25
  9073  000826  0100               	movlb	0	; () banked
  9074  000828  51D1               	movf	_ic_ptr& (0+255),w,b
  9075  00082A  26D9               	addwf	fsr2l,f,c
  9076  00082C  0100               	movlb	0	; () banked
  9077  00082E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9078  000830  22DA               	addwfc	fsr2h,f,c
  9079  000832  0E05               	movlw	5
  9080  000834  6EDF               	movwf	indf2,c
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;my_i2c.c: 474: SSPCON2bits.PEN = 1;
  9084  000836  84C5               	bsf	4037,2,c	;volatile
  9085  000838  0012               	return	
  9086  00083A                     i2l4113:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;my_i2c.c: 477: else {
  9090                           ;my_i2c.c: 478: ToMainHigh_sendmsg(0, 44, 0);
  9091  00083A  0100               	movlb	0	; () banked
  9092  00083C  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9093  00083E  0E2C               	movlw	44
  9094  000840  0100               	movlb	0	; () banked
  9095  000842  0100               	movlb	0	; () banked
  9096  000844  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9097  000846  0100               	movlb	0	; () banked
  9098  000848  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9099  00084A  0E00               	movlw	0
  9100  00084C  0100               	movlb	0	; () banked
  9101  00084E  0100               	movlb	0	; () banked
  9102  000850  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9103  000852  0E00               	movlw	0
  9104  000854  0100               	movlb	0	; () banked
  9105  000856  0100               	movlb	0	; () banked
  9106  000858  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9107  00085A  0E00               	movlw	0
  9108  00085C  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9109                           
  9110                           ;my_i2c.c: 479: ic_ptr->status = 0x5;
  9111  000860  0100               	movlb	0	; () banked
  9112  000862  EE20 F019          	lfsr	2,25
  9113  000866  0100               	movlb	0	; () banked
  9114  000868  51D1               	movf	_ic_ptr& (0+255),w,b
  9115  00086A  26D9               	addwf	fsr2l,f,c
  9116  00086C  0100               	movlb	0	; () banked
  9117  00086E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9118  000870  22DA               	addwfc	fsr2h,f,c
  9119  000872  0E05               	movlw	5
  9120  000874  6EDF               	movwf	indf2,c
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;my_i2c.c: 480: SSPCON2bits.PEN = 1;
  9124  000876  84C5               	bsf	4037,2,c	;volatile
  9125  000878  0012               	return	
  9126  00087A                     i2l428:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;my_i2c.c: 485: if (SSPCON2bits.ACKSTAT == 1) {
  9130  00087A  ACC5               	btfss	4037,6,c	;volatile
  9131  00087C  D00D               	goto	i2l4123
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;my_i2c.c: 486: ic_ptr->status = 0x13;
  9135  00087E  0100               	movlb	0	; () banked
  9136  000880  EE20 F019          	lfsr	2,25
  9137  000884  0100               	movlb	0	; () banked
  9138  000886  51D1               	movf	_ic_ptr& (0+255),w,b
  9139  000888  26D9               	addwf	fsr2l,f,c
  9140  00088A  0100               	movlb	0	; () banked
  9141  00088C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9142  00088E  22DA               	addwfc	fsr2h,f,c
  9143  000890  0E13               	movlw	19
  9144  000892  6EDF               	movwf	indf2,c
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;my_i2c.c: 487: SSPCON2bits.PEN = 1;
  9148  000894  84C5               	bsf	4037,2,c	;volatile
  9149                           
  9150                           ;my_i2c.c: 488: }
  9151  000896  0012               	return	
  9152  000898                     i2l4123:
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;my_i2c.c: 489: else {
  9156                           ;my_i2c.c: 490: ToMainHigh_sendmsg(0, 44, 0);
  9157  000898  0100               	movlb	0	; () banked
  9158  00089A  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9159  00089C  0E2C               	movlw	44
  9160  00089E  0100               	movlb	0	; () banked
  9161  0008A0  0100               	movlb	0	; () banked
  9162  0008A2  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9163  0008A4  0100               	movlb	0	; () banked
  9164  0008A6  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9165  0008A8  0E00               	movlw	0
  9166  0008AA  0100               	movlb	0	; () banked
  9167  0008AC  0100               	movlb	0	; () banked
  9168  0008AE  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9169  0008B0  0E00               	movlw	0
  9170  0008B2  0100               	movlb	0	; () banked
  9171  0008B4  0100               	movlb	0	; () banked
  9172  0008B6  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9173  0008B8  0E00               	movlw	0
  9174  0008BA  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9175                           
  9176                           ;my_i2c.c: 491: ic_ptr->status = 0x5;
  9177  0008BE  0100               	movlb	0	; () banked
  9178  0008C0  EE20 F019          	lfsr	2,25
  9179  0008C4  0100               	movlb	0	; () banked
  9180  0008C6  51D1               	movf	_ic_ptr& (0+255),w,b
  9181  0008C8  26D9               	addwf	fsr2l,f,c
  9182  0008CA  0100               	movlb	0	; () banked
  9183  0008CC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9184  0008CE  22DA               	addwfc	fsr2h,f,c
  9185  0008D0  0E05               	movlw	5
  9186  0008D2  6EDF               	movwf	indf2,c
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;my_i2c.c: 492: SSPCON2bits.PEN = 1;
  9190  0008D4  84C5               	bsf	4037,2,c	;volatile
  9191  0008D6  0012               	return	
  9192  0008D8                     i2l4129:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;my_i2c.c: 497: ToMainHigh_sendmsg(0, 43, 0);
  9196  0008D8  0100               	movlb	0	; () banked
  9197  0008DA  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9198  0008DC  0E2B               	movlw	43
  9199  0008DE  0100               	movlb	0	; () banked
  9200  0008E0  0100               	movlb	0	; () banked
  9201  0008E2  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9202  0008E4  0100               	movlb	0	; () banked
  9203  0008E6  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9204  0008E8  0E00               	movlw	0
  9205  0008EA  0100               	movlb	0	; () banked
  9206  0008EC  0100               	movlb	0	; () banked
  9207  0008EE  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9208  0008F0  0E00               	movlw	0
  9209  0008F2  0100               	movlb	0	; () banked
  9210  0008F4  0100               	movlb	0	; () banked
  9211  0008F6  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9212  0008F8  0E00               	movlw	0
  9213  0008FA  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9214                           
  9215                           ;my_i2c.c: 498: ic_ptr->status = 0x5;
  9216  0008FE  0100               	movlb	0	; () banked
  9217  000900  EE20 F019          	lfsr	2,25
  9218  000904  0100               	movlb	0	; () banked
  9219  000906  51D1               	movf	_ic_ptr& (0+255),w,b
  9220  000908  26D9               	addwf	fsr2l,f,c
  9221  00090A  0100               	movlb	0	; () banked
  9222  00090C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9223  00090E  22DA               	addwfc	fsr2h,f,c
  9224  000910  0E05               	movlw	5
  9225  000912  6EDF               	movwf	indf2,c
  9226                           
  9227                           ;my_i2c.c: 499: break;
  9228  000914  0012               	return	
  9229  000916                     i2l432:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;my_i2c.c: 551: if (SSPCON2bits.ACKSTAT == 0) {
  9233  000916  BCC5               	btfsc	4037,6,c	;volatile
  9234  000918  D017               	goto	i2l4135
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;my_i2c.c: 552: ic_ptr->status = 0x14;
  9238  00091A  0100               	movlb	0	; () banked
  9239  00091C  EE20 F019          	lfsr	2,25
  9240  000920  0100               	movlb	0	; () banked
  9241  000922  51D1               	movf	_ic_ptr& (0+255),w,b
  9242  000924  26D9               	addwf	fsr2l,f,c
  9243  000926  0100               	movlb	0	; () banked
  9244  000928  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9245  00092A  22DA               	addwfc	fsr2h,f,c
  9246  00092C  0E14               	movlw	20
  9247  00092E  6EDF               	movwf	indf2,c
  9248                           
  9249                           ;my_i2c.c: 553: SSPBUF = ic_ptr->slave_addr;
  9250  000930  0100               	movlb	0	; () banked
  9251  000932  EE20 F034          	lfsr	2,52
  9252  000936  0100               	movlb	0	; () banked
  9253  000938  51D1               	movf	_ic_ptr& (0+255),w,b
  9254  00093A  26D9               	addwf	fsr2l,f,c
  9255  00093C  0100               	movlb	0	; () banked
  9256  00093E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9257  000940  22DA               	addwfc	fsr2h,f,c
  9258  000942  50DF               	movf	indf2,w,c
  9259  000944  6EC9               	movwf	4041,c	;volatile
  9260                           
  9261                           ;my_i2c.c: 554: }
  9262  000946  0012               	return	
  9263  000948                     i2l4135:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;my_i2c.c: 556: else {
  9267                           ;my_i2c.c: 557: ToMainHigh_sendmsg(0, 46, 0);
  9268  000948  0100               	movlb	0	; () banked
  9269  00094A  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9270  00094C  0E2E               	movlw	46
  9271  00094E  0100               	movlb	0	; () banked
  9272  000950  0100               	movlb	0	; () banked
  9273  000952  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9274  000954  0100               	movlb	0	; () banked
  9275  000956  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9276  000958  0E00               	movlw	0
  9277  00095A  0100               	movlb	0	; () banked
  9278  00095C  0100               	movlb	0	; () banked
  9279  00095E  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9280  000960  0E00               	movlw	0
  9281  000962  0100               	movlb	0	; () banked
  9282  000964  0100               	movlb	0	; () banked
  9283  000966  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9284  000968  0E00               	movlw	0
  9285  00096A  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9286                           
  9287                           ;my_i2c.c: 558: ic_ptr->status = 0x5;
  9288  00096E  0100               	movlb	0	; () banked
  9289  000970  EE20 F019          	lfsr	2,25
  9290  000974  0100               	movlb	0	; () banked
  9291  000976  51D1               	movf	_ic_ptr& (0+255),w,b
  9292  000978  26D9               	addwf	fsr2l,f,c
  9293  00097A  0100               	movlb	0	; () banked
  9294  00097C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9295  00097E  22DA               	addwfc	fsr2h,f,c
  9296  000980  0E05               	movlw	5
  9297  000982  6EDF               	movwf	indf2,c
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;my_i2c.c: 559: SSPCON2bits.PEN = 1;
  9301  000984  84C5               	bsf	4037,2,c	;volatile
  9302  000986  0012               	return	
  9303  000988                     i2l435:
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;my_i2c.c: 564: if (SSPCON2bits.ACKSTAT == 0) {
  9307  000988  BCC5               	btfsc	4037,6,c	;volatile
  9308  00098A  D022               	goto	i2l4143
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;my_i2c.c: 565: ic_ptr->status = 0x15;
  9312  00098C  0100               	movlb	0	; () banked
  9313  00098E  EE20 F019          	lfsr	2,25
  9314  000992  0100               	movlb	0	; () banked
  9315  000994  51D1               	movf	_ic_ptr& (0+255),w,b
  9316  000996  26D9               	addwf	fsr2l,f,c
  9317  000998  0100               	movlb	0	; () banked
  9318  00099A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9319  00099C  22DA               	addwfc	fsr2h,f,c
  9320  00099E  0E15               	movlw	21
  9321  0009A0  6EDF               	movwf	indf2,c
  9322                           
  9323                           ;my_i2c.c: 566: ic_ptr->outbuflen = 0;
  9324  0009A2  0100               	movlb	0	; () banked
  9325  0009A4  EE20 F032          	lfsr	2,50
  9326  0009A8  0100               	movlb	0	; () banked
  9327  0009AA  51D1               	movf	_ic_ptr& (0+255),w,b
  9328  0009AC  26D9               	addwf	fsr2l,f,c
  9329  0009AE  0100               	movlb	0	; () banked
  9330  0009B0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9331  0009B2  22DA               	addwfc	fsr2h,f,c
  9332  0009B4  0E00               	movlw	0
  9333  0009B6  6EDF               	movwf	indf2,c
  9334                           
  9335                           ;my_i2c.c: 567: SSPBUF = ic_ptr->outbuffer[0];
  9336  0009B8  0100               	movlb	0	; () banked
  9337  0009BA  EE20 F01C          	lfsr	2,28
  9338  0009BE  0100               	movlb	0	; () banked
  9339  0009C0  51D1               	movf	_ic_ptr& (0+255),w,b
  9340  0009C2  26D9               	addwf	fsr2l,f,c
  9341  0009C4  0100               	movlb	0	; () banked
  9342  0009C6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9343  0009C8  22DA               	addwfc	fsr2h,f,c
  9344  0009CA  50DF               	movf	indf2,w,c
  9345  0009CC  6EC9               	movwf	4041,c	;volatile
  9346                           
  9347                           ;my_i2c.c: 568: }
  9348  0009CE  0012               	return	
  9349  0009D0                     i2l4143:
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;my_i2c.c: 569: else {
  9353                           ;my_i2c.c: 570: ToMainHigh_sendmsg(0, 46, 0);
  9354  0009D0  0100               	movlb	0	; () banked
  9355  0009D2  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9356  0009D4  0E2E               	movlw	46
  9357  0009D6  0100               	movlb	0	; () banked
  9358  0009D8  0100               	movlb	0	; () banked
  9359  0009DA  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9360  0009DC  0100               	movlb	0	; () banked
  9361  0009DE  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9362  0009E0  0E00               	movlw	0
  9363  0009E2  0100               	movlb	0	; () banked
  9364  0009E4  0100               	movlb	0	; () banked
  9365  0009E6  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9366  0009E8  0E00               	movlw	0
  9367  0009EA  0100               	movlb	0	; () banked
  9368  0009EC  0100               	movlb	0	; () banked
  9369  0009EE  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9370  0009F0  0E00               	movlw	0
  9371  0009F2  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9372                           
  9373                           ;my_i2c.c: 571: ic_ptr->status = 0x5;
  9374  0009F6  0100               	movlb	0	; () banked
  9375  0009F8  EE20 F019          	lfsr	2,25
  9376  0009FC  0100               	movlb	0	; () banked
  9377  0009FE  51D1               	movf	_ic_ptr& (0+255),w,b
  9378  000A00  26D9               	addwf	fsr2l,f,c
  9379  000A02  0100               	movlb	0	; () banked
  9380  000A04  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9381  000A06  22DA               	addwfc	fsr2h,f,c
  9382  000A08  0E05               	movlw	5
  9383  000A0A  6EDF               	movwf	indf2,c
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;my_i2c.c: 572: SSPCON2bits.PEN = 1;
  9387  000A0C  84C5               	bsf	4037,2,c	;volatile
  9388  000A0E  0012               	return	
  9389  000A10                     i2l438:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;my_i2c.c: 577: if (SSPCON2bits.ACKSTAT == 0) {
  9393  000A10  BCC5               	btfsc	4037,6,c	;volatile
  9394  000A12  D00D               	goto	i2l4153
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;my_i2c.c: 578: ic_ptr->status = 0x20;
  9398  000A14  0100               	movlb	0	; () banked
  9399  000A16  EE20 F019          	lfsr	2,25
  9400  000A1A  0100               	movlb	0	; () banked
  9401  000A1C  51D1               	movf	_ic_ptr& (0+255),w,b
  9402  000A1E  26D9               	addwf	fsr2l,f,c
  9403  000A20  0100               	movlb	0	; () banked
  9404  000A22  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9405  000A24  22DA               	addwfc	fsr2h,f,c
  9406  000A26  0E20               	movlw	32
  9407  000A28  6EDF               	movwf	indf2,c
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;my_i2c.c: 579: SSPCON2bits.RSEN = 1;
  9411  000A2A  82C5               	bsf	4037,1,c	;volatile
  9412                           
  9413                           ;my_i2c.c: 580: }
  9414  000A2C  0012               	return	
  9415  000A2E                     i2l4153:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;my_i2c.c: 581: else {
  9419                           ;my_i2c.c: 582: ToMainHigh_sendmsg(0, 46, 0);
  9420  000A2E  0100               	movlb	0	; () banked
  9421  000A30  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9422  000A32  0E2E               	movlw	46
  9423  000A34  0100               	movlb	0	; () banked
  9424  000A36  0100               	movlb	0	; () banked
  9425  000A38  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9426  000A3A  0100               	movlb	0	; () banked
  9427  000A3C  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9428  000A3E  0E00               	movlw	0
  9429  000A40  0100               	movlb	0	; () banked
  9430  000A42  0100               	movlb	0	; () banked
  9431  000A44  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9432  000A46  0E00               	movlw	0
  9433  000A48  0100               	movlb	0	; () banked
  9434  000A4A  0100               	movlb	0	; () banked
  9435  000A4C  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9436  000A4E  0E00               	movlw	0
  9437  000A50  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9438                           
  9439                           ;my_i2c.c: 583: ic_ptr->status = 0x5;
  9440  000A54  0100               	movlb	0	; () banked
  9441  000A56  EE20 F019          	lfsr	2,25
  9442  000A5A  0100               	movlb	0	; () banked
  9443  000A5C  51D1               	movf	_ic_ptr& (0+255),w,b
  9444  000A5E  26D9               	addwf	fsr2l,f,c
  9445  000A60  0100               	movlb	0	; () banked
  9446  000A62  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9447  000A64  22DA               	addwfc	fsr2h,f,c
  9448  000A66  0E05               	movlw	5
  9449  000A68  6EDF               	movwf	indf2,c
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;my_i2c.c: 584: SSPCON2bits.PEN = 1;
  9453  000A6A  84C5               	bsf	4037,2,c	;volatile
  9454  000A6C  0012               	return	
  9455  000A6E                     i2l4159:
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;my_i2c.c: 589: ic_ptr->status = 0x21;
  9459  000A6E  0100               	movlb	0	; () banked
  9460  000A70  EE20 F019          	lfsr	2,25
  9461  000A74  0100               	movlb	0	; () banked
  9462  000A76  51D1               	movf	_ic_ptr& (0+255),w,b
  9463  000A78  26D9               	addwf	fsr2l,f,c
  9464  000A7A  0100               	movlb	0	; () banked
  9465  000A7C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9466  000A7E  22DA               	addwfc	fsr2h,f,c
  9467  000A80  0E21               	movlw	33
  9468  000A82  6EDF               	movwf	indf2,c
  9469                           
  9470                           ;my_i2c.c: 590: SSPBUF = ic_ptr->slave_addr | 0x1;
  9471  000A84  0100               	movlb	0	; () banked
  9472  000A86  EE20 F034          	lfsr	2,52
  9473  000A8A  0100               	movlb	0	; () banked
  9474  000A8C  51D1               	movf	_ic_ptr& (0+255),w,b
  9475  000A8E  26D9               	addwf	fsr2l,f,c
  9476  000A90  0100               	movlb	0	; () banked
  9477  000A92  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9478  000A94  22DA               	addwfc	fsr2h,f,c
  9479  000A96  50DF               	movf	indf2,w,c
  9480  000A98  0901               	iorlw	1
  9481  000A9A  6EC9               	movwf	4041,c	;volatile
  9482                           
  9483                           ;my_i2c.c: 591: break;
  9484  000A9C  0012               	return	
  9485  000A9E                     i2l442:
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;my_i2c.c: 594: if (SSPCON2bits.ACKSTAT == 0) {
  9489  000A9E  BCC5               	btfsc	4037,6,c	;volatile
  9490  000AA0  D00D               	goto	i2l4165
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;my_i2c.c: 595: ic_ptr->status = 0x22;
  9494  000AA2  0100               	movlb	0	; () banked
  9495  000AA4  EE20 F019          	lfsr	2,25
  9496  000AA8  0100               	movlb	0	; () banked
  9497  000AAA  51D1               	movf	_ic_ptr& (0+255),w,b
  9498  000AAC  26D9               	addwf	fsr2l,f,c
  9499  000AAE  0100               	movlb	0	; () banked
  9500  000AB0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9501  000AB2  22DA               	addwfc	fsr2h,f,c
  9502  000AB4  0E22               	movlw	34
  9503  000AB6  6EDF               	movwf	indf2,c
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;my_i2c.c: 596: SSPCON2bits.RCEN = 1;
  9507  000AB8  86C5               	bsf	4037,3,c	;volatile
  9508                           
  9509                           ;my_i2c.c: 597: }
  9510  000ABA  0012               	return	
  9511  000ABC                     i2l4165:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;my_i2c.c: 598: else {
  9515                           ;my_i2c.c: 599: ToMainHigh_sendmsg(0, 46, 0);
  9516  000ABC  0100               	movlb	0	; () banked
  9517  000ABE  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9518  000AC0  0E2E               	movlw	46
  9519  000AC2  0100               	movlb	0	; () banked
  9520  000AC4  0100               	movlb	0	; () banked
  9521  000AC6  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9522  000AC8  0100               	movlb	0	; () banked
  9523  000ACA  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9524  000ACC  0E00               	movlw	0
  9525  000ACE  0100               	movlb	0	; () banked
  9526  000AD0  0100               	movlb	0	; () banked
  9527  000AD2  6F92               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9528  000AD4  0E00               	movlw	0
  9529  000AD6  0100               	movlb	0	; () banked
  9530  000AD8  0100               	movlb	0	; () banked
  9531  000ADA  6F91               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9532  000ADC  0E00               	movlw	0
  9533  000ADE  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9534                           
  9535                           ;my_i2c.c: 600: ic_ptr->status = 0x5;
  9536  000AE2  0100               	movlb	0	; () banked
  9537  000AE4  EE20 F019          	lfsr	2,25
  9538  000AE8  0100               	movlb	0	; () banked
  9539  000AEA  51D1               	movf	_ic_ptr& (0+255),w,b
  9540  000AEC  26D9               	addwf	fsr2l,f,c
  9541  000AEE  0100               	movlb	0	; () banked
  9542  000AF0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9543  000AF2  22DA               	addwfc	fsr2h,f,c
  9544  000AF4  0E05               	movlw	5
  9545  000AF6  6EDF               	movwf	indf2,c
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;my_i2c.c: 601: SSPCON2bits.PEN = 1;
  9549  000AF8  84C5               	bsf	4037,2,c	;volatile
  9550  000AFA  0012               	return	
  9551  000AFC                     i2l445:
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;my_i2c.c: 606: if (SSPSTATbits.BF == 1) {
  9555  000AFC  A0C7               	btfss	4039,0,c	;volatile
  9556  000AFE  0012               	return	
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;my_i2c.c: 607: ic_ptr->status = 0x23;
  9560  000B00  0100               	movlb	0	; () banked
  9561  000B02  EE20 F019          	lfsr	2,25
  9562  000B06  0100               	movlb	0	; () banked
  9563  000B08  51D1               	movf	_ic_ptr& (0+255),w,b
  9564  000B0A  26D9               	addwf	fsr2l,f,c
  9565  000B0C  0100               	movlb	0	; () banked
  9566  000B0E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9567  000B10  22DA               	addwfc	fsr2h,f,c
  9568  000B12  0E23               	movlw	35
  9569  000B14  6EDF               	movwf	indf2,c
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;my_i2c.c: 608: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  9573  000B16  0100               	movlb	0	; () banked
  9574  000B18  EE20 F017          	lfsr	2,23
  9575  000B1C  0100               	movlb	0	; () banked
  9576  000B1E  51D1               	movf	_ic_ptr& (0+255),w,b
  9577  000B20  26D9               	addwf	fsr2l,f,c
  9578  000B22  0100               	movlb	0	; () banked
  9579  000B24  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9580  000B26  22DA               	addwfc	fsr2h,f,c
  9581  000B28  50DF               	movf	indf2,w,c
  9582  000B2A  0100               	movlb	0	; () banked
  9583  000B2C  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9584  000B2E  0100               	movlb	0	; () banked
  9585  000B30  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9586  000B32  0D01               	mullw	1
  9587  000B34  50F3               	movf	prodl,w,c
  9588  000B36  0100               	movlb	0	; () banked
  9589  000B38  0100               	movlb	0	; () banked
  9590  000B3A  25D1               	addwf	_ic_ptr& (0+255),w,b
  9591  000B3C  6ED9               	movwf	fsr2l,c
  9592  000B3E  50F4               	movf	prodh,w,c
  9593  000B40  0100               	movlb	0	; () banked
  9594  000B42  0100               	movlb	0	; () banked
  9595  000B44  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9596  000B46  6EDA               	movwf	fsr2h,c
  9597  000B48  CFC9 FFDF          	movff	4041,indf2	;volatile
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;my_i2c.c: 609: ic_ptr->bufind++;
  9601  000B4C  0100               	movlb	0	; () banked
  9602  000B4E  EE20 F017          	lfsr	2,23
  9603  000B52  0100               	movlb	0	; () banked
  9604  000B54  51D1               	movf	_ic_ptr& (0+255),w,b
  9605  000B56  26D9               	addwf	fsr2l,f,c
  9606  000B58  0100               	movlb	0	; () banked
  9607  000B5A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9608  000B5C  22DA               	addwfc	fsr2h,f,c
  9609  000B5E  2ADF               	incf	indf2,f,c
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;my_i2c.c: 610: if (ic_ptr->bufind < ic_ptr->buflen) {
  9613  000B60  0100               	movlb	0	; () banked
  9614  000B62  EE20 F017          	lfsr	2,23
  9615  000B66  0100               	movlb	0	; () banked
  9616  000B68  51D1               	movf	_ic_ptr& (0+255),w,b
  9617  000B6A  26D9               	addwf	fsr2l,f,c
  9618  000B6C  0100               	movlb	0	; () banked
  9619  000B6E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9620  000B70  22DA               	addwfc	fsr2h,f,c
  9621  000B72  50DF               	movf	indf2,w,c
  9622  000B74  0100               	movlb	0	; () banked
  9623  000B76  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9624  000B78  0100               	movlb	0	; () banked
  9625  000B7A  EE20 F016          	lfsr	2,22
  9626  000B7E  0100               	movlb	0	; () banked
  9627  000B80  51D1               	movf	_ic_ptr& (0+255),w,b
  9628  000B82  26D9               	addwf	fsr2l,f,c
  9629  000B84  0100               	movlb	0	; () banked
  9630  000B86  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9631  000B88  22DA               	addwfc	fsr2h,f,c
  9632  000B8A  50DF               	movf	indf2,w,c
  9633  000B8C  0100               	movlb	0	; () banked
  9634  000B8E  5D94               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9635  000B90  B0D8               	btfsc	status,0,c
  9636  000B92  D003               	goto	i2l447
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;my_i2c.c: 611: SSPCON2bits.ACKDT = 0;
  9640  000B94  9AC5               	bcf	4037,5,c	;volatile
  9641                           
  9642                           ;my_i2c.c: 612: SSPCON2bits.ACKEN = 1;
  9643  000B96  88C5               	bsf	4037,4,c	;volatile
  9644                           
  9645                           ;my_i2c.c: 613: }
  9646  000B98  0012               	return	
  9647  000B9A                     i2l447:
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;my_i2c.c: 614: else {
  9651                           ;my_i2c.c: 615: SSPCON2bits.ACKDT = 1;
  9652  000B9A  8AC5               	bsf	4037,5,c	;volatile
  9653                           
  9654                           ;my_i2c.c: 616: SSPCON2bits.ACKEN = 1;
  9655  000B9C  88C5               	bsf	4037,4,c	;volatile
  9656  000B9E  0012               	return	
  9657  000BA0                     i2l4181:
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;my_i2c.c: 622: if (ic_ptr->bufind < ic_ptr->buflen) {
  9661  000BA0  0100               	movlb	0	; () banked
  9662  000BA2  EE20 F017          	lfsr	2,23
  9663  000BA6  0100               	movlb	0	; () banked
  9664  000BA8  51D1               	movf	_ic_ptr& (0+255),w,b
  9665  000BAA  26D9               	addwf	fsr2l,f,c
  9666  000BAC  0100               	movlb	0	; () banked
  9667  000BAE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9668  000BB0  22DA               	addwfc	fsr2h,f,c
  9669  000BB2  50DF               	movf	indf2,w,c
  9670  000BB4  0100               	movlb	0	; () banked
  9671  000BB6  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9672  000BB8  0100               	movlb	0	; () banked
  9673  000BBA  EE20 F016          	lfsr	2,22
  9674  000BBE  0100               	movlb	0	; () banked
  9675  000BC0  51D1               	movf	_ic_ptr& (0+255),w,b
  9676  000BC2  26D9               	addwf	fsr2l,f,c
  9677  000BC4  0100               	movlb	0	; () banked
  9678  000BC6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9679  000BC8  22DA               	addwfc	fsr2h,f,c
  9680  000BCA  50DF               	movf	indf2,w,c
  9681  000BCC  0100               	movlb	0	; () banked
  9682  000BCE  5D94               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9683  000BD0  B0D8               	btfsc	status,0,c
  9684  000BD2  D00D               	goto	i2l4187
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;my_i2c.c: 623: ic_ptr->status = 0x22;
  9688  000BD4  0100               	movlb	0	; () banked
  9689  000BD6  EE20 F019          	lfsr	2,25
  9690  000BDA  0100               	movlb	0	; () banked
  9691  000BDC  51D1               	movf	_ic_ptr& (0+255),w,b
  9692  000BDE  26D9               	addwf	fsr2l,f,c
  9693  000BE0  0100               	movlb	0	; () banked
  9694  000BE2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9695  000BE4  22DA               	addwfc	fsr2h,f,c
  9696  000BE6  0E22               	movlw	34
  9697  000BE8  6EDF               	movwf	indf2,c
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;my_i2c.c: 624: SSPCON2bits.RCEN = 1;
  9701  000BEA  86C5               	bsf	4037,3,c	;volatile
  9702                           
  9703                           ;my_i2c.c: 625: }
  9704  000BEC  0012               	return	
  9705  000BEE                     i2l4187:
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;my_i2c.c: 626: else {
  9709                           ;my_i2c.c: 627: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
  9710                           ;my_i2c.c: 628: (void *)(ic_ptr->buffer));
  9711  000BEE  0100               	movlb	0	; () banked
  9712  000BF0  6F94               	movwf	??_i2c_master_int_handler& (0+255),b
  9713  000BF2  0E2D               	movlw	45
  9714  000BF4  0100               	movlb	0	; () banked
  9715  000BF6  0100               	movlb	0	; () banked
  9716  000BF8  6F90               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9717  000BFA  0100               	movlb	0	; () banked
  9718  000BFC  5194               	movf	??_i2c_master_int_handler& (0+255),w,b
  9719  000BFE  0100               	movlb	0	; () banked
  9720  000C00  0100               	movlb	0	; () banked
  9721  000C02  C0D2  F092         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  9722  000C06  0100               	movlb	0	; () banked
  9723  000C08  0100               	movlb	0	; () banked
  9724  000C0A  C0D1  F091         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  9725  000C0E  0100               	movlb	0	; () banked
  9726  000C10  EE20 F016          	lfsr	2,22
  9727  000C14  0100               	movlb	0	; () banked
  9728  000C16  51D1               	movf	_ic_ptr& (0+255),w,b
  9729  000C18  26D9               	addwf	fsr2l,f,c
  9730  000C1A  0100               	movlb	0	; () banked
  9731  000C1C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9732  000C1E  22DA               	addwfc	fsr2h,f,c
  9733  000C20  50DF               	movf	indf2,w,c
  9734  000C22  EC39  F012         	call	i2_ToMainHigh_sendmsg
  9735                           
  9736                           ;my_i2c.c: 629: ic_ptr->status = 0x5;
  9737  000C26  0100               	movlb	0	; () banked
  9738  000C28  EE20 F019          	lfsr	2,25
  9739  000C2C  0100               	movlb	0	; () banked
  9740  000C2E  51D1               	movf	_ic_ptr& (0+255),w,b
  9741  000C30  26D9               	addwf	fsr2l,f,c
  9742  000C32  0100               	movlb	0	; () banked
  9743  000C34  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9744  000C36  22DA               	addwfc	fsr2h,f,c
  9745  000C38  0E05               	movlw	5
  9746  000C3A  6EDF               	movwf	indf2,c
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;my_i2c.c: 630: SSPCON2bits.PEN = 1;
  9750  000C3C  84C5               	bsf	4037,2,c	;volatile
  9751  000C3E  0012               	return	
  9752  000C40                     i2l4195:
  9753  000C40  0100               	movlb	0	; () banked
  9754  000C42  EE20 F019          	lfsr	2,25
  9755  000C46  0100               	movlb	0	; () banked
  9756  000C48  51D1               	movf	_ic_ptr& (0+255),w,b
  9757  000C4A  26D9               	addwf	fsr2l,f,c
  9758  000C4C  0100               	movlb	0	; () banked
  9759  000C4E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  9760  000C50  22DA               	addwfc	fsr2h,f,c
  9761  000C52  50DF               	movf	indf2,w,c
  9762                           
  9763                           ; Switch size 1, requested type "space"
  9764                           ; Number of cases is 11, Range of values is 9 to 35
  9765                           ; switch strategies available:
  9766                           ; Name         Instructions Cycles
  9767                           ; simple_byte           34    18 (average)
  9768                           ;	Chosen strategy is simple_byte
  9769  000C54  0A09               	xorlw	9	; case 9
  9770  000C56  B4D8               	btfsc	status,2,c
  9771  000C58  D557               	goto	i2l4095
  9772  000C5A  0A19               	xorlw	25	; case 16
  9773  000C5C  B4D8               	btfsc	status,2,c
  9774  000C5E  D65B               	goto	i2l432
  9775  000C60  0A01               	xorlw	1	; case 17
  9776  000C62  B4D8               	btfsc	status,2,c
  9777  000C64  D56E               	goto	i2l423
  9778  000C66  0A03               	xorlw	3	; case 18
  9779  000C68  B4D8               	btfsc	status,2,c
  9780  000C6A  D607               	goto	i2l428
  9781  000C6C  0A01               	xorlw	1	; case 19
  9782  000C6E  B4D8               	btfsc	status,2,c
  9783  000C70  D633               	goto	i2l4129
  9784  000C72  0A07               	xorlw	7	; case 20
  9785  000C74  B4D8               	btfsc	status,2,c
  9786  000C76  D688               	goto	i2l435
  9787  000C78  0A01               	xorlw	1	; case 21
  9788  000C7A  B4D8               	btfsc	status,2,c
  9789  000C7C  D6C9               	goto	i2l438
  9790  000C7E  0A35               	xorlw	53	; case 32
  9791  000C80  B4D8               	btfsc	status,2,c
  9792  000C82  D6F5               	goto	i2l4159
  9793  000C84  0A01               	xorlw	1	; case 33
  9794  000C86  B4D8               	btfsc	status,2,c
  9795  000C88  D70A               	goto	i2l442
  9796  000C8A  0A03               	xorlw	3	; case 34
  9797  000C8C  B4D8               	btfsc	status,2,c
  9798  000C8E  D736               	goto	i2l445
  9799  000C90  0A01               	xorlw	1	; case 35
  9800  000C92  A4D8               	btfss	status,2,c
  9801  000C94  0012               	return	
  9802  000C96  D784               	goto	i2l4181
  9803  000C98                     __end_of_i2c_master_int_handler:
  9804                           	opt stack 0
  9805                           pclatu	equ	0xFFB
  9806                           pclath	equ	0xFFA
  9807                           tblptru	equ	0xFF8
  9808                           tblptrh	equ	0xFF7
  9809                           tblptrl	equ	0xFF6
  9810                           tablat	equ	0xFF5
  9811                           prodh	equ	0xFF4
  9812                           prodl	equ	0xFF3
  9813                           intcon	equ	0xFF2
  9814                           postinc0	equ	0xFEE
  9815                           fsr0h	equ	0xFEA
  9816                           fsr0l	equ	0xFE9
  9817                           wreg	equ	0xFE8
  9818                           indf1	equ	0xFE7
  9819                           fsr1h	equ	0xFE2
  9820                           fsr1l	equ	0xFE1
  9821                           bsr	equ	0xFE0
  9822                           indf2	equ	0xFDF
  9823                           postinc2	equ	0xFDE
  9824                           postdec2	equ	0xFDD
  9825                           fsr2h	equ	0xFDA
  9826                           fsr2l	equ	0xFD9
  9827                           status	equ	0xFD8
  9828                           
  9829 ;; *************** function i2_ToMainHigh_sendmsg *****************
  9830 ;; Defined at:
  9831 ;;		line 126 in file "source/messages.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  length          1    wreg     unsigned char 
  9834 ;;  msgtype         1   16[BANK0 ] unsigned char 
  9835 ;;  data            2   17[BANK0 ] PTR void 
  9836 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  9837 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), main@ic(77), 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;  length          1   19[BANK0 ] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  1    wreg      char 
  9842 ;; Registers used:
  9843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9849 ;;      Params:         0       3       0       0       0
  9850 ;;      Locals:         0       1       0       0       0
  9851 ;;      Temps:          0       0       0       0       0
  9852 ;;      Totals:         0       4       0       0       0
  9853 ;;Total ram usage:        4 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:    2
  9856 ;; This function calls:
  9857 ;;		i2_send_msg
  9858 ;; This function is called by:
  9859 ;;		_i2c_slave_int_handler
  9860 ;;		_i2c_master_int_handler
  9861 ;;		i2_timer0_int_handler
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           	psect	text52
  9866  002472                     __ptext52:
  9867                           	opt stack 0
  9868  002472                     i2_ToMainHigh_sendmsg:
  9869                           	opt stack 16
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;incstack = 0
  9873                           ;i2ToMainHigh_sendmsg@length stored from wreg
  9874  002472  CFE8 F093          	movff	wreg,i2ToMainHigh_sendmsg@length
  9875                           
  9876                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9877                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  9878  002476  0101               	movlb	1	; () banked
  9879  002478  0E01               	movlw	high _ToMainHigh_MQ
  9880  00247A  0100               	movlb	0	; () banked
  9881  00247C  0100               	movlb	0	; () banked
  9882  00247E  6F85               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9883  002480  0101               	movlb	1	; () banked
  9884  002482  0E94               	movlw	low _ToMainHigh_MQ
  9885  002484  0100               	movlb	0	; () banked
  9886  002486  0100               	movlb	0	; () banked
  9887  002488  6F84               	movwf	i2send_msg@qptr& (0+255),b
  9888  00248A  C093  F086         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  9889  00248E  C090  F087         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9890  002492  0100               	movlb	0	; () banked
  9891  002494  0100               	movlb	0	; () banked
  9892  002496  C092  F089         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9893  00249A  0100               	movlb	0	; () banked
  9894  00249C  0100               	movlb	0	; () banked
  9895  00249E  C091  F088         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  9896  0024A2  EC0C  F00C         	call	i2_send_msg	;wreg free
  9897  0024A6  0012               	return	
  9898  0024A8                     __end_ofi2_ToMainHigh_sendmsg:
  9899                           	opt stack 0
  9900                           pclatu	equ	0xFFB
  9901                           pclath	equ	0xFFA
  9902                           tblptru	equ	0xFF8
  9903                           tblptrh	equ	0xFF7
  9904                           tblptrl	equ	0xFF6
  9905                           tablat	equ	0xFF5
  9906                           prodh	equ	0xFF4
  9907                           prodl	equ	0xFF3
  9908                           intcon	equ	0xFF2
  9909                           postinc0	equ	0xFEE
  9910                           fsr0h	equ	0xFEA
  9911                           fsr0l	equ	0xFE9
  9912                           wreg	equ	0xFE8
  9913                           indf1	equ	0xFE7
  9914                           fsr1h	equ	0xFE2
  9915                           fsr1l	equ	0xFE1
  9916                           bsr	equ	0xFE0
  9917                           indf2	equ	0xFDF
  9918                           postinc2	equ	0xFDE
  9919                           postdec2	equ	0xFDD
  9920                           fsr2h	equ	0xFDA
  9921                           fsr2l	equ	0xFD9
  9922                           status	equ	0xFD8
  9923                           
  9924 ;; *************** function i2_send_msg *****************
  9925 ;; Defined at:
  9926 ;;		line 24 in file "source/messages.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  qptr            2    4[BANK0 ] PTR struct __msg_queue
  9929 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9930 ;;  length          1    6[BANK0 ] unsigned char 
  9931 ;;  msgtype         1    7[BANK0 ] unsigned char 
  9932 ;;  data            2    8[BANK0 ] PTR void 
  9933 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
  9934 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), main@ic(77), main@uc(23), 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  send_msg        2   14[BANK0 ] PTR struct __msg
  9937 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9938 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9939 ;;  send_msg        2   11[BANK0 ] unsigned int 
  9940 ;;  send_msg        1   13[BANK0 ] unsigned char 
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      char 
  9943 ;; Registers used:
  9944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9950 ;;      Params:         0       6       0       0       0
  9951 ;;      Locals:         0       5       0       0       0
  9952 ;;      Temps:          0       1       0       0       0
  9953 ;;      Totals:         0      12       0       0       0
  9954 ;;Total ram usage:       12 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; Hardware stack levels required when called:    1
  9957 ;; This function calls:
  9958 ;;		i2_memcpy
  9959 ;; This function is called by:
  9960 ;;		i2_ToMainHigh_sendmsg
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           	psect	text53
  9965  001818                     __ptext53:
  9966                           	opt stack 0
  9967  001818                     i2_send_msg:
  9968                           	opt stack 16
  9969                           
  9970                           ;messages.c: 25: unsigned char slot;
  9971                           ;messages.c: 27: msg *qmsg;
  9972                           ;messages.c: 28: size_t tlength = length;
  9973                           
  9974                           ;incstack = 0
  9975  001818  0100               	movlb	0	; () banked
  9976  00181A  0100               	movlb	0	; () banked
  9977  00181C  C086  F08B         	movff	i2send_msg@length,i2send_msg@tlength
  9978  001820  0100               	movlb	0	; () banked
  9979  001822  0100               	movlb	0	; () banked
  9980  001824  6B8C               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9984  001826  0100               	movlb	0	; () banked
  9985  001828  EE20 F064          	lfsr	2,100
  9986  00182C  0100               	movlb	0	; () banked
  9987  00182E  5184               	movf	i2send_msg@qptr& (0+255),w,b
  9988  001830  26D9               	addwf	fsr2l,f,c
  9989  001832  0100               	movlb	0	; () banked
  9990  001834  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9991  001836  22DA               	addwfc	fsr2h,f,c
  9992  001838  50DF               	movf	indf2,w,c
  9993  00183A  0100               	movlb	0	; () banked
  9994  00183C  0100               	movlb	0	; () banked
  9995  00183E  6F8D               	movwf	i2send_msg@slot& (0+255),b
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9999  001840  0100               	movlb	0	; () banked
 10000  001842  0100               	movlb	0	; () banked
 10001  001844  518D               	movf	i2send_msg@slot& (0+255),w,b
 10002  001846  0D19               	mullw	25
 10003  001848  50F3               	movf	prodl,w,c
 10004  00184A  0100               	movlb	0	; () banked
 10005  00184C  0100               	movlb	0	; () banked
 10006  00184E  2584               	addwf	i2send_msg@qptr& (0+255),w,b
 10007  001850  0100               	movlb	0	; () banked
 10008  001852  0100               	movlb	0	; () banked
 10009  001854  6F8E               	movwf	i2send_msg@qmsg& (0+255),b
 10010  001856  50F4               	movf	prodh,w,c
 10011  001858  0100               	movlb	0	; () banked
 10012  00185A  0100               	movlb	0	; () banked
 10013  00185C  2185               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
 10014  00185E  0100               	movlb	0	; () banked
 10015  001860  6F8F               	movwf	(i2send_msg@qmsg+1)& (0+255),b
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;messages.c: 41: if (qmsg->full != 0) {
 10019  001862  C08E  FFD9         	movff	i2send_msg@qmsg,fsr2l
 10020  001866  C08F  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 10021  00186A  50DF               	movf	indf2,w,c
 10022  00186C  B4D8               	btfsc	status,2,c
 10023  00186E  D002               	goto	i2l4355
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;messages.c: 42: return (-1);
 10027  001870  0EFF               	movlw	255
 10028  001872  0012               	return	
 10029  001874                     i2l4355:
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;messages.c: 43: }
 10033                           ;messages.c: 46: qmsg->length = length;
 10034  001874  0100               	movlb	0	; () banked
 10035  001876  EE20 F001          	lfsr	2,1
 10036  00187A  0100               	movlb	0	; () banked
 10037  00187C  518E               	movf	i2send_msg@qmsg& (0+255),w,b
 10038  00187E  26D9               	addwf	fsr2l,f,c
 10039  001880  0100               	movlb	0	; () banked
 10040  001882  518F               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 10041  001884  22DA               	addwfc	fsr2h,f,c
 10042  001886  0100               	movlb	0	; () banked
 10043  001888  C086  FFDF         	movff	i2send_msg@length,indf2
 10044                           
 10045                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10046  00188C  0100               	movlb	0	; () banked
 10047  00188E  EE20 F002          	lfsr	2,2
 10048  001892  0100               	movlb	0	; () banked
 10049  001894  518E               	movf	i2send_msg@qmsg& (0+255),w,b
 10050  001896  26D9               	addwf	fsr2l,f,c
 10051  001898  0100               	movlb	0	; () banked
 10052  00189A  518F               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 10053  00189C  22DA               	addwfc	fsr2h,f,c
 10054  00189E  0100               	movlb	0	; () banked
 10055  0018A0  C087  FFDF         	movff	i2send_msg@msgtype,indf2
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10059  0018A4  0E03               	movlw	3
 10060  0018A6  0100               	movlb	0	; () banked
 10061  0018A8  0100               	movlb	0	; () banked
 10062  0018AA  258E               	addwf	i2send_msg@qmsg& (0+255),w,b
 10063  0018AC  6E32               	movwf	i2memcpy@d1,c
 10064  0018AE  0E00               	movlw	0
 10065  0018B0  0100               	movlb	0	; () banked
 10066  0018B2  0100               	movlb	0	; () banked
 10067  0018B4  218F               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
 10068  0018B6  6E33               	movwf	i2memcpy@d1+1,c
 10069  0018B8  0100               	movlb	0	; () banked
 10070  0018BA  C089  F035         	movff	i2send_msg@data+1,i2memcpy@s1+1
 10071  0018BE  0100               	movlb	0	; () banked
 10072  0018C0  C088  F034         	movff	i2send_msg@data,i2memcpy@s1
 10073  0018C4  C08B  F036         	movff	i2send_msg@tlength,i2memcpy@n
 10074  0018C8  C08C  F037         	movff	i2send_msg@tlength+1,i2memcpy@n+1
 10075  0018CC  ECB2  F010         	call	i2_memcpy	;wreg free
 10076                           
 10077                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10078  0018D0  0100               	movlb	0	; () banked
 10079  0018D2  EE20 F064          	lfsr	2,100
 10080  0018D6  0100               	movlb	0	; () banked
 10081  0018D8  5184               	movf	i2send_msg@qptr& (0+255),w,b
 10082  0018DA  26D9               	addwf	fsr2l,f,c
 10083  0018DC  0100               	movlb	0	; () banked
 10084  0018DE  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 10085  0018E0  22DA               	addwfc	fsr2h,f,c
 10086  0018E2  0100               	movlb	0	; () banked
 10087  0018E4  EE10 F064          	lfsr	1,100
 10088  0018E8  0100               	movlb	0	; () banked
 10089  0018EA  5184               	movf	i2send_msg@qptr& (0+255),w,b
 10090  0018EC  26E1               	addwf	fsr1l,f,c
 10091  0018EE  0100               	movlb	0	; () banked
 10092  0018F0  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 10093  0018F2  22E2               	addwfc	fsr1h,f,c
 10094  0018F4  50E7               	movf	indf1,w,c
 10095  0018F6  0100               	movlb	0	; () banked
 10096  0018F8  6F8A               	movwf	??i2_send_msg& (0+255),b
 10097  0018FA  0100               	movlb	0	; () banked
 10098  0018FC  298A               	incf	??i2_send_msg& (0+255),w,b
 10099  0018FE  0B03               	andlw	3
 10100  001900  6EDF               	movwf	indf2,c
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;messages.c: 59: qmsg->full = 1;
 10104  001902  C08E  FFD9         	movff	i2send_msg@qmsg,fsr2l
 10105  001906  C08F  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 10106  00190A  0E01               	movlw	1
 10107  00190C  6EDF               	movwf	indf2,c
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;messages.c: 60: return (1);
 10111  00190E  0E01               	movlw	1
 10112  001910  0012               	return	
 10113  001912                     __end_ofi2_send_msg:
 10114                           	opt stack 0
 10115                           pclatu	equ	0xFFB
 10116                           pclath	equ	0xFFA
 10117                           tblptru	equ	0xFF8
 10118                           tblptrh	equ	0xFF7
 10119                           tblptrl	equ	0xFF6
 10120                           tablat	equ	0xFF5
 10121                           prodh	equ	0xFF4
 10122                           prodl	equ	0xFF3
 10123                           intcon	equ	0xFF2
 10124                           postinc0	equ	0xFEE
 10125                           fsr0h	equ	0xFEA
 10126                           fsr0l	equ	0xFE9
 10127                           wreg	equ	0xFE8
 10128                           indf1	equ	0xFE7
 10129                           fsr1h	equ	0xFE2
 10130                           fsr1l	equ	0xFE1
 10131                           bsr	equ	0xFE0
 10132                           indf2	equ	0xFDF
 10133                           postinc2	equ	0xFDE
 10134                           postdec2	equ	0xFDD
 10135                           fsr2h	equ	0xFDA
 10136                           fsr2l	equ	0xFD9
 10137                           status	equ	0xFD8
 10138                           
 10139 ;; *************** function i2_memcpy *****************
 10140 ;; Defined at:
 10141 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  d1              2   49[COMRAM] PTR void 
 10144 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
 10145 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
 10146 ;;		 -> main@msgbuffer(23), 
 10147 ;;  s1              2   51[COMRAM] PTR const void 
 10148 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
 10149 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
 10150 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
 10151 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), FromMainHigh_MQ(102), FromMainLow_MQ(102), 
 10152 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), main@uc(23), 
 10153 ;;  n               2   53[COMRAM] unsigned int 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  memcpy          2    2[BANK0 ] PTR const unsigned char 
 10156 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
 10157 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
 10158 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message_742(2), motor_lthread@message_741(1), 
 10159 ;;		 -> motor_lthread@message_740(1), motor_lthread@message(1), FromMainHigh_MQ(102), FromMainLow_MQ(102), 
 10160 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), main@uc(23), 
 10161 ;;  memcpy          2    0[BANK0 ] PTR unsigned char 
 10162 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
 10163 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
 10164 ;;		 -> main@msgbuffer(23), 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  2   49[COMRAM] PTR void 
 10167 ;; Registers used:
 10168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10174 ;;      Params:         6       0       0       0       0
 10175 ;;      Locals:         0       4       0       0       0
 10176 ;;      Temps:          0       0       0       0       0
 10177 ;;      Totals:         6       4       0       0       0
 10178 ;;Total ram usage:       10 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		i2_send_msg
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           	psect	text54
 10188  002164                     __ptext54:
 10189                           	opt stack 0
 10190  002164                     i2_memcpy:
 10191                           	opt stack 16
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;incstack = 0
 10195  002164  0100               	movlb	0	; () banked
 10196  002166  C035  F083         	movff	i2memcpy@s1+1,i2memcpy@s+1
 10197  00216A  0100               	movlb	0	; () banked
 10198  00216C  C034  F082         	movff	i2memcpy@s1,i2memcpy@s
 10199  002170  0100               	movlb	0	; () banked
 10200  002172  C033  F081         	movff	i2memcpy@d1+1,i2memcpy@d+1
 10201  002176  0100               	movlb	0	; () banked
 10202  002178  C032  F080         	movff	i2memcpy@d1,i2memcpy@d
 10203  00217C  D012               	goto	i2l4437
 10204  00217E                     i2l4431:
 10205  00217E  C082  FFD9         	movff	i2memcpy@s,fsr2l
 10206  002182  C083  FFDA         	movff	i2memcpy@s+1,fsr2h
 10207  002186  C080  FFE1         	movff	i2memcpy@d,fsr1l
 10208  00218A  C081  FFE2         	movff	i2memcpy@d+1,fsr1h
 10209  00218E  CFDF FFE7          	movff	indf2,indf1
 10210  002192  0100               	movlb	0	; () banked
 10211  002194  0100               	movlb	0	; () banked
 10212  002196  4B82               	infsnz	i2memcpy@s& (0+255),f,b
 10213  002198  2B83               	incf	(i2memcpy@s+1)& (0+255),f,b
 10214                           
 10215                           ; BSR set to: 0
 10216  00219A  0100               	movlb	0	; () banked
 10217  00219C  0100               	movlb	0	; () banked
 10218  00219E  4B80               	infsnz	i2memcpy@d& (0+255),f,b
 10219  0021A0  2B81               	incf	(i2memcpy@d+1)& (0+255),f,b
 10220  0021A2                     i2l4437:
 10221                           
 10222                           ; BSR set to: 0
 10223  0021A2  0636               	decf	i2memcpy@n,f,c
 10224  0021A4  A0D8               	btfss	status,0,c
 10225  0021A6  0637               	decf	i2memcpy@n+1,f,c
 10226  0021A8  2836               	incf	i2memcpy@n& (0+255),w,c
 10227  0021AA  B4D8               	btfsc	status,2,c
 10228  0021AC  2837               	incf	(i2memcpy@n+1)& (0+255),w,c
 10229  0021AE  B4D8               	btfsc	status,2,c
 10230                           
 10231                           ;	Return value of i2_memcpy is never used
 10232  0021B0  0012               	return	
 10233  0021B2  D7E5               	goto	i2l4431
 10234  0021B4                     __end_ofi2_memcpy:
 10235                           	opt stack 0
 10236                           pclatu	equ	0xFFB
 10237                           pclath	equ	0xFFA
 10238                           tblptru	equ	0xFF8
 10239                           tblptrh	equ	0xFF7
 10240                           tblptrl	equ	0xFF6
 10241                           tablat	equ	0xFF5
 10242                           prodh	equ	0xFF4
 10243                           prodl	equ	0xFF3
 10244                           intcon	equ	0xFF2
 10245                           postinc0	equ	0xFEE
 10246                           fsr0h	equ	0xFEA
 10247                           fsr0l	equ	0xFE9
 10248                           wreg	equ	0xFE8
 10249                           indf1	equ	0xFE7
 10250                           fsr1h	equ	0xFE2
 10251                           fsr1l	equ	0xFE1
 10252                           bsr	equ	0xFE0
 10253                           indf2	equ	0xFDF
 10254                           postinc2	equ	0xFDE
 10255                           postdec2	equ	0xFDD
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function _SleepIfOkay *****************
 10261 ;; Defined at:
 10262 ;;		line 228 in file "source/messages.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;		None               void
 10269 ;; Registers used:
 10270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10276 ;;      Params:         0       0       0       0       0
 10277 ;;      Locals:         0       0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0
 10279 ;;      Totals:         0       0       0       0       0
 10280 ;;Total ram usage:        0 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    2
 10283 ;; This function calls:
 10284 ;;		_enter_sleep_mode
 10285 ;;		i2_check_msg
 10286 ;;		i2_in_high_int
 10287 ;;		i2_in_low_int
 10288 ;; This function is called by:
 10289 ;;		_InterruptHandlerHigh
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           	psect	text55
 10294  0021B4                     __ptext55:
 10295                           	opt stack 0
 10296  0021B4                     _SleepIfOkay:
 10297                           	opt stack 17
 10298                           
 10299                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 10300                           
 10301                           ;incstack = 0
 10302  0021B4  664A               	tstfsz	_MQ_Main_Willing_to_block,c
 10303  0021B6  D001               	goto	i2l2717
 10304  0021B8  0012               	return	
 10305  0021BA                     i2l2717:
 10306                           
 10307                           ;messages.c: 232: }
 10308                           ;messages.c: 235: if (in_low_int()) {
 10309  0021BA  EC54  F012         	call	i2_in_low_int	;wreg free
 10310  0021BE  5035               	movf	?i2_in_low_int+1,w,c
 10311  0021C0  1034               	iorwf	?i2_in_low_int,w,c
 10312  0021C2  A4D8               	btfss	status,2,c
 10313  0021C4  0012               	return	
 10314                           
 10315                           ;messages.c: 237: }
 10316                           ;messages.c: 240: if (!in_high_int()) {
 10317                           
 10318                           ;messages.c: 236: return;
 10319  0021C6  EC5C  F013         	call	i2_in_high_int	;wreg free
 10320  0021CA  5033               	movf	?i2_in_high_int+1,w,c
 10321  0021CC  1032               	iorwf	?i2_in_high_int,w,c
 10322  0021CE  B4D8               	btfsc	status,2,c
 10323  0021D0  0012               	return	
 10324                           
 10325                           ;messages.c: 242: }
 10326                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 10327                           
 10328                           ;messages.c: 241: return;
 10329  0021D2  0101               	movlb	1	; () banked
 10330  0021D4  0E01               	movlw	high _ToMainHigh_MQ
 10331  0021D6  6E33               	movwf	i2check_msg@qptr+1,c
 10332  0021D8  0101               	movlb	1	; () banked
 10333  0021DA  0E94               	movlw	low _ToMainHigh_MQ
 10334  0021DC  6E32               	movwf	i2check_msg@qptr,c
 10335  0021DE  ECBB  F012         	call	i2_check_msg	;wreg free
 10336  0021E2  0900               	iorlw	0
 10337  0021E4  A4D8               	btfss	status,2,c
 10338  0021E6  0012               	return	
 10339                           
 10340                           ;messages.c: 249: }
 10341                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 10342                           
 10343                           ;messages.c: 248: return;
 10344  0021E8  0102               	movlb	2	; () banked
 10345  0021EA  0E02               	movlw	high _ToMainLow_MQ
 10346  0021EC  6E33               	movwf	i2check_msg@qptr+1,c
 10347  0021EE  0102               	movlb	2	; () banked
 10348  0021F0  0E66               	movlw	low _ToMainLow_MQ
 10349  0021F2  6E32               	movwf	i2check_msg@qptr,c
 10350  0021F4  ECBB  F012         	call	i2_check_msg	;wreg free
 10351  0021F8  0900               	iorlw	0
 10352  0021FA  B4D8               	btfsc	status,2,c
 10353                           
 10354                           ;messages.c: 252: }
 10355                           ;messages.c: 253: enter_sleep_mode();
 10356                           
 10357                           ;messages.c: 251: return;
 10358  0021FC  EC66  F013         	call	_enter_sleep_mode	;wreg free
 10359  002200  0012               	return	
 10360  002202                     __end_of_SleepIfOkay:
 10361                           	opt stack 0
 10362                           pclatu	equ	0xFFB
 10363                           pclath	equ	0xFFA
 10364                           tblptru	equ	0xFF8
 10365                           tblptrh	equ	0xFF7
 10366                           tblptrl	equ	0xFF6
 10367                           tablat	equ	0xFF5
 10368                           prodh	equ	0xFF4
 10369                           prodl	equ	0xFF3
 10370                           intcon	equ	0xFF2
 10371                           postinc0	equ	0xFEE
 10372                           fsr0h	equ	0xFEA
 10373                           fsr0l	equ	0xFE9
 10374                           wreg	equ	0xFE8
 10375                           indf1	equ	0xFE7
 10376                           fsr1h	equ	0xFE2
 10377                           fsr1l	equ	0xFE1
 10378                           bsr	equ	0xFE0
 10379                           indf2	equ	0xFDF
 10380                           postinc2	equ	0xFDE
 10381                           postdec2	equ	0xFDD
 10382                           fsr2h	equ	0xFDA
 10383                           fsr2l	equ	0xFD9
 10384                           status	equ	0xFD8
 10385                           
 10386 ;; *************** function i2_in_low_int *****************
 10387 ;; Defined at:
 10388 ;;		line 30 in file "source/interrupts.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  2   51[COMRAM] int 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10402 ;;      Params:         2       0       0       0       0
 10403 ;;      Locals:         0       0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0
 10405 ;;      Totals:         2       0       0       0       0
 10406 ;;Total ram usage:        2 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    1
 10409 ;; This function calls:
 10410 ;;		i2_in_high_int
 10411 ;; This function is called by:
 10412 ;;		_SleepIfOkay
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text56
 10417  0024A8                     __ptext56:
 10418                           	opt stack 0
 10419  0024A8                     i2_in_low_int:
 10420                           	opt stack 17
 10421                           
 10422                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 10423                           
 10424                           ;incstack = 0
 10425  0024A8  ACF2               	btfss	intcon,6,c	;volatile
 10426  0024AA  D005               	goto	i2l3579
 10427                           
 10428                           ;interrupts.c: 32: return (0);
 10429  0024AC  0E00               	movlw	0
 10430  0024AE  6E35               	movwf	?i2_in_low_int+1,c
 10431  0024B0  0E00               	movlw	0
 10432  0024B2  6E34               	movwf	?i2_in_low_int,c
 10433  0024B4  0012               	return	
 10434  0024B6                     i2l3579:
 10435  0024B6  EC5C  F013         	call	i2_in_high_int	;wreg free
 10436  0024BA  5033               	movf	?i2_in_high_int+1,w,c
 10437  0024BC  1032               	iorwf	?i2_in_high_int,w,c
 10438  0024BE  B4D8               	btfsc	status,2,c
 10439  0024C0  D005               	goto	i2l3587
 10440                           
 10441                           ;interrupts.c: 34: return (0);
 10442  0024C2  0E00               	movlw	0
 10443  0024C4  6E35               	movwf	?i2_in_low_int+1,c
 10444  0024C6  0E00               	movlw	0
 10445  0024C8  6E34               	movwf	?i2_in_low_int,c
 10446  0024CA  0012               	return	
 10447  0024CC                     i2l3587:
 10448                           
 10449                           ;interrupts.c: 36: return (1);
 10450  0024CC  0E00               	movlw	0
 10451  0024CE  6E35               	movwf	?i2_in_low_int+1,c
 10452  0024D0  0E01               	movlw	1
 10453  0024D2  6E34               	movwf	?i2_in_low_int,c
 10454  0024D4  0012               	return	
 10455  0024D6                     __end_ofi2_in_low_int:
 10456                           	opt stack 0
 10457                           pclatu	equ	0xFFB
 10458                           pclath	equ	0xFFA
 10459                           tblptru	equ	0xFF8
 10460                           tblptrh	equ	0xFF7
 10461                           tblptrl	equ	0xFF6
 10462                           tablat	equ	0xFF5
 10463                           prodh	equ	0xFF4
 10464                           prodl	equ	0xFF3
 10465                           intcon	equ	0xFF2
 10466                           postinc0	equ	0xFEE
 10467                           fsr0h	equ	0xFEA
 10468                           fsr0l	equ	0xFE9
 10469                           wreg	equ	0xFE8
 10470                           indf1	equ	0xFE7
 10471                           fsr1h	equ	0xFE2
 10472                           fsr1l	equ	0xFE1
 10473                           bsr	equ	0xFE0
 10474                           indf2	equ	0xFDF
 10475                           postinc2	equ	0xFDE
 10476                           postdec2	equ	0xFDD
 10477                           fsr2h	equ	0xFDA
 10478                           fsr2l	equ	0xFD9
 10479                           status	equ	0xFD8
 10480                           
 10481 ;; *************** function i2_in_high_int *****************
 10482 ;; Defined at:
 10483 ;;		line 22 in file "source/interrupts.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;		None
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  2   49[COMRAM] int 
 10490 ;; Registers used:
 10491 ;;		wreg, status,2
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10497 ;;      Params:         2       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0
 10499 ;;      Temps:          0       0       0       0       0
 10500 ;;      Totals:         2       0       0       0       0
 10501 ;;Total ram usage:        2 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; This function calls:
 10504 ;;		Nothing
 10505 ;; This function is called by:
 10506 ;;		_SleepIfOkay
 10507 ;;		i2_in_low_int
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text57
 10512  0026B8                     __ptext57:
 10513                           	opt stack 0
 10514  0026B8                     i2_in_high_int:
 10515                           	opt stack 17
 10516                           
 10517                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 10518                           
 10519                           ;incstack = 0
 10520  0026B8  0E00               	movlw	0
 10521  0026BA  AEF2               	btfss	intcon,7,c	;volatile
 10522  0026BC  0E01               	movlw	1
 10523  0026BE  6E32               	movwf	?i2_in_high_int,c
 10524  0026C0  6A33               	clrf	?i2_in_high_int+1,c
 10525  0026C2  0012               	return	
 10526  0026C4                     __end_ofi2_in_high_int:
 10527                           	opt stack 0
 10528                           pclatu	equ	0xFFB
 10529                           pclath	equ	0xFFA
 10530                           tblptru	equ	0xFF8
 10531                           tblptrh	equ	0xFF7
 10532                           tblptrl	equ	0xFF6
 10533                           tablat	equ	0xFF5
 10534                           prodh	equ	0xFF4
 10535                           prodl	equ	0xFF3
 10536                           intcon	equ	0xFF2
 10537                           postinc0	equ	0xFEE
 10538                           fsr0h	equ	0xFEA
 10539                           fsr0l	equ	0xFE9
 10540                           wreg	equ	0xFE8
 10541                           indf1	equ	0xFE7
 10542                           fsr1h	equ	0xFE2
 10543                           fsr1l	equ	0xFE1
 10544                           bsr	equ	0xFE0
 10545                           indf2	equ	0xFDF
 10546                           postinc2	equ	0xFDE
 10547                           postdec2	equ	0xFDD
 10548                           fsr2h	equ	0xFDA
 10549                           fsr2l	equ	0xFD9
 10550                           status	equ	0xFD8
 10551                           
 10552 ;; *************** function i2_check_msg *****************
 10553 ;; Defined at:
 10554 ;;		line 222 in file "source/messages.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;  qptr            2   49[COMRAM] PTR struct __msg_queue
 10557 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  1    wreg      unsigned char 
 10562 ;; Registers used:
 10563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10569 ;;      Params:         2       0       0       0       0
 10570 ;;      Locals:         0       0       0       0       0
 10571 ;;      Temps:          1       0       0       0       0
 10572 ;;      Totals:         3       0       0       0       0
 10573 ;;Total ram usage:        3 bytes
 10574 ;; Hardware stack levels used:    1
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_SleepIfOkay
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text58
 10583  002576                     __ptext58:
 10584                           	opt stack 0
 10585  002576                     i2_check_msg:
 10586                           	opt stack 18
 10587                           
 10588                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 10589                           
 10590                           ;incstack = 0
 10591  002576  EE20 F065          	lfsr	2,101
 10592  00257A  5032               	movf	i2check_msg@qptr,w,c
 10593  00257C  26D9               	addwf	fsr2l,f,c
 10594  00257E  5033               	movf	i2check_msg@qptr+1,w,c
 10595  002580  22DA               	addwfc	fsr2h,f,c
 10596  002582  50DF               	movf	indf2,w,c
 10597  002584  6E34               	movwf	??i2_check_msg& (0+255),c
 10598  002586  5034               	movf	??i2_check_msg,w,c
 10599  002588  0D19               	mullw	25
 10600  00258A  50F3               	movf	prodl,w,c
 10601  00258C  2432               	addwf	i2check_msg@qptr,w,c
 10602  00258E  6ED9               	movwf	fsr2l,c
 10603  002590  50F4               	movf	prodh,w,c
 10604  002592  2033               	addwfc	i2check_msg@qptr+1,w,c
 10605  002594  6EDA               	movwf	fsr2h,c
 10606  002596  50DF               	movf	indf2,w,c
 10607  002598  0012               	return	
 10608  00259A                     __end_ofi2_check_msg:
 10609                           	opt stack 0
 10610                           pclatu	equ	0xFFB
 10611                           pclath	equ	0xFFA
 10612                           tblptru	equ	0xFF8
 10613                           tblptrh	equ	0xFF7
 10614                           tblptrl	equ	0xFF6
 10615                           tablat	equ	0xFF5
 10616                           prodh	equ	0xFF4
 10617                           prodl	equ	0xFF3
 10618                           intcon	equ	0xFF2
 10619                           postinc0	equ	0xFEE
 10620                           fsr0h	equ	0xFEA
 10621                           fsr0l	equ	0xFE9
 10622                           wreg	equ	0xFE8
 10623                           indf1	equ	0xFE7
 10624                           fsr1h	equ	0xFE2
 10625                           fsr1l	equ	0xFE1
 10626                           bsr	equ	0xFE0
 10627                           indf2	equ	0xFDF
 10628                           postinc2	equ	0xFDE
 10629                           postdec2	equ	0xFDD
 10630                           fsr2h	equ	0xFDA
 10631                           fsr2l	equ	0xFD9
 10632                           status	equ	0xFD8
 10633                           
 10634 ;; *************** function _enter_sleep_mode *****************
 10635 ;; Defined at:
 10636 ;;		line 202 in file "source/messages.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;		None
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;		None
 10641 ;; Return value:  Size  Location     Type
 10642 ;;		None               void
 10643 ;; Registers used:
 10644 ;;		None
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10650 ;;      Params:         0       0       0       0       0
 10651 ;;      Locals:         0       0       0       0       0
 10652 ;;      Temps:          0       0       0       0       0
 10653 ;;      Totals:         0       0       0       0       0
 10654 ;;Total ram usage:        0 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_SleepIfOkay
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text59
 10664  0026CC                     __ptext59:
 10665                           	opt stack 0
 10666  0026CC                     _enter_sleep_mode:
 10667                           	opt stack 18
 10668                           
 10669                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10670                           
 10671                           ;incstack = 0
 10672  0026CC  8ED3               	bsf	4051,7,c	;volatile
 10673  0026CE  0003               	sleep		;# 
 10674  0026D0  0012               	return	
 10675  0026D2                     __end_of_enter_sleep_mode:
 10676                           	opt stack 0
 10677  0000                     pclatu	equ	0xFFB
 10678                           pclath	equ	0xFFA
 10679                           tblptru	equ	0xFF8
 10680                           tblptrh	equ	0xFF7
 10681                           tblptrl	equ	0xFF6
 10682                           tablat	equ	0xFF5
 10683                           prodh	equ	0xFF4
 10684                           prodl	equ	0xFF3
 10685                           intcon	equ	0xFF2
 10686                           postinc0	equ	0xFEE
 10687                           fsr0h	equ	0xFEA
 10688                           fsr0l	equ	0xFE9
 10689                           wreg	equ	0xFE8
 10690                           indf1	equ	0xFE7
 10691                           fsr1h	equ	0xFE2
 10692                           fsr1l	equ	0xFE1
 10693                           bsr	equ	0xFE0
 10694                           indf2	equ	0xFDF
 10695                           postinc2	equ	0xFDE
 10696                           postdec2	equ	0xFDD
 10697                           fsr2h	equ	0xFDA
 10698                           fsr2l	equ	0xFD9
 10699                           status	equ	0xFD8
 10700                           pclatu	equ	0xFFB
 10701                           pclath	equ	0xFFA
 10702                           tblptru	equ	0xFF8
 10703                           tblptrh	equ	0xFF7
 10704                           tblptrl	equ	0xFF6
 10705                           tablat	equ	0xFF5
 10706                           prodh	equ	0xFF4
 10707                           prodl	equ	0xFF3
 10708                           intcon	equ	0xFF2
 10709                           postinc0	equ	0xFEE
 10710                           fsr0h	equ	0xFEA
 10711                           fsr0l	equ	0xFE9
 10712                           wreg	equ	0xFE8
 10713                           indf1	equ	0xFE7
 10714                           fsr1h	equ	0xFE2
 10715                           fsr1l	equ	0xFE1
 10716                           bsr	equ	0xFE0
 10717                           indf2	equ	0xFDF
 10718                           postinc2	equ	0xFDE
 10719                           postdec2	equ	0xFDD
 10720                           fsr2h	equ	0xFDA
 10721                           fsr2l	equ	0xFD9
 10722                           status	equ	0xFD8
 10723                           
 10724                           	psect	rparam
 10725  0000                     pclatu	equ	0xFFB
 10726                           pclath	equ	0xFFA
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           intcon	equ	0xFF2
 10734                           postinc0	equ	0xFEE
 10735                           fsr0h	equ	0xFEA
 10736                           fsr0l	equ	0xFE9
 10737                           wreg	equ	0xFE8
 10738                           indf1	equ	0xFE7
 10739                           fsr1h	equ	0xFE2
 10740                           fsr1l	equ	0xFE1
 10741                           bsr	equ	0xFE0
 10742                           indf2	equ	0xFDF
 10743                           postinc2	equ	0xFDE
 10744                           postdec2	equ	0xFDD
 10745                           fsr2h	equ	0xFDA
 10746                           fsr2l	equ	0xFD9
 10747                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         440
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     55      78
    BANK0           128     70      83
    BANK1           256    148     250
    BANK2           256      0     204
    BANK3           256      0     102

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[23]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK2[22]), ToMainHigh_MQ.data(BANK1[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK2[22]), ToMainHigh_MQ.queue.data(BANK1[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message_742(BANK1[2]), motor_lthread@message_741(BANK1[1]), 
		 -> motor_lthread@message_740(BANK1[1]), motor_lthread@message(BANK1[1]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), 
		 -> ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), main@ic(BANK1[77]), main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK2[22]), ToMainHigh_MQ.data(BANK1[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK2[22]), ToMainHigh_MQ.queue.data(BANK1[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message_742(BANK1[2]), motor_lthread@message_741(BANK1[1]), 
		 -> motor_lthread@message_740(BANK1[1]), motor_lthread@message(BANK1[1]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), 
		 -> ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), main@ic(BANK1[77]), main@uc(BANK1[23]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 77
		 -> main@ic(BANK1[77]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 77
		 -> NULL(NULL[0]), main@ic(BANK1[77]), 

    motor_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 77
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message_742(BANK1[2]), motor_lthread@message_741(BANK1[1]), 
		 -> motor_lthread@message_740(BANK1[1]), motor_lthread@message(BANK1[1]), main@ic(BANK1[77]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 77
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message_742(BANK1[2]), motor_lthread@message_741(BANK1[1]), 
		 -> motor_lthread@message_740(BANK1[1]), motor_lthread@message(BANK1[1]), main@ic(BANK1[77]), main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _i2c_slave_int_handler->i2_start_i2c_slave_reply
    i2_start_i2c_slave_reply->i2_ReadTimer1
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    _timer1_int_handler->i1_ToMainHigh_sendmsg
    _timer0_int_handler->i1_ToMainHigh_sendmsg
    i1_ToMainHigh_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_lthread->_WriteUSART
    _start_i2c_slave_reply->_ReadTimer1
    _motor_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    i2_timer0_int_handler->i2_ToMainHigh_sendmsg
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_motor_lthread
    _motor_lthread->_ToMainHigh_sendmsg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               134   134      0   13744
                                             16 BANK1    132   132      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                      _motor_lthread
              _start_i2c_slave_reply
                     _timer0_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8     647
                                             46 BANK0     11     3      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                               15    13      2     224
                                             49 BANK0     14    12      2
                         _ReadTimer1
 ---------------------------------------------------------------------------------
 (2) _ReadTimer1                                           4     2      2      51
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _motor_lthread                                       15     9      6    4855
                                              1 BANK1     15     9      6
                 _ToMainHigh_sendmsg
                        _WriteTimer0
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     199
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     204
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    3331
                                             67 BANK0      3     0      3
                                              0 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             55 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      75
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     2      0      22
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                             69 BANK0      1     1      0
                                              0 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                             69 BANK0      1     1      0
                                              0 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             55 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   13276
                                             32 COMRAM    17    17      0
                 _timer0_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    6255
                                             31 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
                          _parseUART
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            5     5      0    3116
                                             26 COMRAM     5     5      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    3116
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    3512
                                             26 COMRAM     3     3      0
               i1_ToMainHigh_sendmsg
                      i1_WriteTimer1
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer1                                        4     2      2     266
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _timer0_int_handler                                   1     1      0    3509
                                             26 COMRAM     1     1      0
               i1_ToMainHigh_sendmsg
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer0                                        4     2      2     266
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i1_ToMainHigh_sendmsg                                 4     1      3    3243
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    2763
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   14382
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
               i2_timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) i2_timer0_int_handler                                1     1      0    4517
                                             20 BANK0      1     1      0
               i2_ToMainHigh_sendmsg
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     310
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0    9629
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    5422
                                             20 BANK0     11    11      0
                       _handle_start
               i2_ToMainHigh_sendmsg
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                            15    13      2     612
                                             53 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                       i2_ReadTimer1
 ---------------------------------------------------------------------------------
 (15) i2_ReadTimer1                                        4     2      2     181
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      22
                                             49 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    4207
                                             20 BANK0      1     1      0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) i2_ToMainHigh_sendmsg                                4     1      3    4207
                                             16 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2547
                                              4 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             49 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _motor_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _WriteTimer0
     _WriteTimer1
   _start_i2c_slave_reply
     _ReadTimer1
   _timer0_lthread
   _uart_lthread
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer0_int_handler
     i1_ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
     i1_WriteTimer0
   _timer1_int_handler
     i1_ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
     i1_WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _parseUART
       _ToMainLow_sendmsg
         i1_send_msg
           i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _handle_start
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       i2_start_i2c_slave_reply
         i2_ReadTimer1
   i2_timer0_int_handler
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      66      10       39.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CC       8       79.7%
BITBANK1           100      0       0       5        0.0%
BANK1              100     94      FA       6       97.7%
BITBANK0            80      0       0       3        0.0%
BANK0               80     46      53       4       64.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     37      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CD      11        0.0%
DATA                 0      0     2CD      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Apr 11 08:35:24 2014

                  main@uthread_data 012C            _MQ_Main_Willing_to_block 004A  
             ?i2_ToMainHigh_sendmsg 0090                     ??_motor_lthread 0107  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 2314  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 2550  
                      __CFG_CP0$OFF 000000                                 l121 10C8  
                               l610 2402                                 l534 1BFA  
                               l607 23E8                                 l609 2400  
                               l651 1D2E                                 l583 2524  
                               l655 1D4E                                 l584 2526  
                               l656 1D50                                 l657 1D5E  
                               l658 1D60                                 l895 25DE  
                    _DeltaOverflowL 00CA                      _DeltaOverflowR 00CC  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                    _FromMainLow_MQ 0200                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00AD  
                  ??_init_uart_recv 00AF                     ReadTimer1@timer 00AF  
                              l4015 1770                                l3073 1C28  
                              l3065 1BCE                                l4035 2092  
                              l4029 206E                                l3087 1ED4  
                              l4049 164A                                l4065 1710  
                              l2671 227E                                l2663 225C  
                              l2907 1D30                                l2685 22C2  
                              l3565 25FE                                l3901 1034  
                              l2951 1E58                                l3911 10CE  
                              l2945 1E2C                                l3913 10EE  
                              l3921 11BC                                l2859 23EA  
                              l3915 112C                                l3923 11EC  
                              l2957 1E84                                l3941 0C9A  
                              l3933 127C                                l3917 116A  
                              l3909 1076                                l3953 0D2E  
                              l3929 122A                                l2899 1D1A  
                              l3971 0E80                                l3981 0ED4  
                              l3973 0E98                                l3957 0D6A  
                              l3949 0CF2                                l3983 0EEC  
                              l3975 0EB0                                l3967 0E50  
                              l3977 0EB8                                l3969 0E68  
                              l3993 0F6C                                l3979 0ECC  
                              l3987 0F04                                l3989 0F40  
                              u2927 25E0                                i1l48 007A  
                   _FromMainHigh_MQ 0300                                _Send 0040  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 0FAC                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 0145  
                        i1_send_msg 1C50              __size_ofi2_WriteTimer0 0012  
                              pclat 000FFA                 i1WriteTimer0@timer0 0001  
                       i2_check_msg 2576                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0032  
                              start 00C0                 i1WriteTimer1@timer1 0001  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 1818  
         ToMainHigh_recvmsg@msgtype 0100                      send_msg@length 00B9  
       __size_of_timer0_int_handler 005E             ??_i2c_slave_int_handler 0094  
                       _Delay1KTCYx 25DA                               ?_main 0001  
                     i1_WriteTimer0 2682                       i1_WriteTimer1 2670  
                             _T0CON 000FD5                               _T1CON 000FCD  
                        i1memcpy@d1 0001                               i2l404 0538  
                             i2l423 0742                               i2l432 0916  
                             i2l352 1B44                               i2l442 0A9E  
                             i2l370 0526                               i2l435 0988  
                             i2l428 087A                               i2l372 018C  
                             i2l445 0AFC                               i1l669 25CA  
                             i2l438 0A10                               i2l390 0360  
                             i2l447 0B9A                               i2l376 01D0  
                             i2l398 0498                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
              i2_timer0_int_handler 1F06                               _SPBRG 000FAF  
                             _PORTB 000F81                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0032  
                        i2memcpy@s1 0034                        ?_init_queues 0001  
                             _State 004B           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 22D2        __end_ofi1_ToMainHigh_sendmsg 2576  
        ToMainLow_recvmsg@maxlength 00C5             timer0_lthread@msgbuffer 00B3  
           i2c_configure_slave@addr 00AE                               tablat 000FF5  
                             status 000FD8            i2ToMainHigh_sendmsg@data 0091  
                  __end_ofi1_memcpy 2396                    __end_ofi2_memcpy 21B4  
                    WriteUSART@data 00AD                     __initialization 2202  
            ??i2_ToMainHigh_sendmsg 0038                        __end_of_main 1292  
                        _ReadTimer1 2616         __size_of_timer1_int_handler 0066  
    i2start_i2c_slave_reply@inchesL 0086      i2start_i2c_slave_reply@inchesR 008A  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 002E                      ?i1_WriteTimer0 0001  
                    ?i1_WriteTimer1 0001                              ??_main 00C6  
                     i2_WriteTimer0 2694                     send_msg@msgtype 00BA  
                     __activetblptr 000002               ?i2_timer0_int_handler 0001  
                   send_msg@tlength 00BE                __end_of_handle_start 1B90  
           ??_uart_recv_int_handler 0020                              i1l4421 2368  
                            i1l4511 1936                              i1l4503 1914  
                            i1l4521 19AC                              i1l4427 2384  
                            i1l4451 1C88                              i1l4515 197C  
                            i1l4519 19A2                              i1l4551 0066  
                            i1l4529 19DE                              i1l4539 2144  
                            i1l4557 0070                              i2l4105 07E4  
                            i2l4113 083A                          _OpenTimer0 2500  
                        _OpenTimer1 23CE                              i2l4123 0898  
                            i2l4211 016A                              i1l4499 203E  
                    __CFG_WDTEN$OFF 000000                              i2l4143 09D0  
                            i2l4135 0948                              i2l4303 04FA  
                            i2l4153 0A2E                              i2l4129 08D8  
                            i2l3265 1B60                              i2l4217 0182  
                            i2l3267 1B78                              i2l4331 06DC  
                            i2l4323 0636                              i2l4315 059C  
                            i2l4235 0208                              i2l2717 21BA  
                            i2l4181 0BA0                              i2l4165 0ABC  
                            i2l4309 053C                              i2l4253 0288  
                            i2l4237 0234                              i2l4431 217E  
                            i2l4159 0A6E                              i2l4095 0708  
                            i2l4255 02C8                              i2l4247 0270  
                            i2l4281 0428                              i2l4355 1874  
                            i2l4187 0BEE                              i2l4195 0C40  
                            i2l4275 03D4                              i2l4437 21A2  
                            i2l4277 0416                              i2l3587 24CC  
                            i2l3579 24B6                              i2l3861 25A2  
                            i2l3855 1DD0                              i2l3865 25A8  
                            i2l3849 1DC6                              i2l3859 259C  
       __end_of_i2c_configure_slave 23CE                       ??_SleepIfOkay 0036  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 01AA  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 143C  
                timer0_lthread@tptr 00AD                        i2_in_low_int 24A8  
                       ?i2_send_msg 0084                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 259A  
 i2c_slave_int_handler@data_written 0099                    OpenTimer0@config 00AD  
                            _ic_ptr 00D1                       main@msgbuffer 0110  
                  __end_of_init_i2c 1AC8                    OpenTimer1@config 00AD  
                            _memcpy 204C                              clear_0 2208  
                            clear_1 2214                              clear_2 2220  
                            clear_3 222C                              clear_4 2238  
                            _uc_ptr 004D                      ?i2_WriteTimer0 0032  
                            main@ic 0147                              main@uc 012E  
                  __end_of_recv_msg 1714         start_i2c_slave_reply@length 0001  
                        _OverflowsL 003C                          _OverflowsR 003E  
                         ??_in_main 00B3                    __end_of_send_msg 1818  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00B0  
          ?i2_start_i2c_slave_reply 0036            ToMainLow_recvmsg@msgtype 0100  
      i2start_i2c_slave_reply@feetL 0084        i2start_i2c_slave_reply@feetR 0088  
              __size_of_in_high_int 0012                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 223E  
        __end_of_ToMainHigh_recvmsg 2356          __end_of_ToMainHigh_sendmsg 243C  
       __end_of_init_timer1_lthread 265E                 __end_of_SleepIfOkay 2202  
                        _WriteUSART 25F0                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 000C                         ?_ReadTimer1 00AD  
                   ??i1_WriteTimer0 0003                     ??i1_WriteTimer1 0003  
                __size_of_check_msg 0036                i1_ToMainHigh_sendmsg 2550  
            ??i2_timer0_int_handler 0094                   __end_of_ReadUSART 25DA  
               __size_ofi1_send_msg 00AA                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 1E06         __end_of_InterruptHandlerLow 00C0  
                         ?i2_memcpy 0032                       _ToMainHigh_MQ 0194  
                  _enter_sleep_mode 26CC                 __size_ofi2_send_msg 00FA  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1D8C  
                     check_msg@qptr 00AD             ??_block_on_To_msgqueues 00B3  
              __size_of_init_queues 006E                          __pbssBANK0 00C6  
                        __pbssBANK1 0194                          __pbssBANK2 0200  
                        __pbssBANK3 0300          start_i2c_slave_reply@feetL 00B7  
        start_i2c_slave_reply@feetR 00BB                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 004D  
           __end_of_i2c_int_handler 25BC                        ?i2_check_msg 0032  
          ??_i2c_master_int_handler 0094                  __size_of_parseUART 00E8  
             ?i1_ToMainHigh_sendmsg 0017                   recv_msg@maxlength 00B9  
                   recv_msg@msgtype 00BA                     ??i2_WriteTimer0 0034  
                   recv_msg@tlength 00C1               __size_of_handle_start 00C8  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 00AF  
                           ?_memcpy 00AD                    WriteTimer1@timer 00AF  
                     ??_WriteTimer0 00AF                       ??_WriteTimer1 00AF  
    __size_of_i2c_slave_int_handler 0642               __end_of_motor_lthread 0FAC  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 0706  
   __end_ofi2_start_i2c_slave_reply 15DE                          ??i1_memcpy 0007  
                        ??i2_memcpy 0038          i2start_i2c_slave_reply@msg 0036  
                  i1send_msg@length 000D                       i2_in_high_int 26B8  
               motor_lthread@length 0103                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 2472  
                           _ActiveL 00C6                             _ActiveR 00C8  
                         ?_init_i2c 00AD                         _SleepIfOkay 21B4  
               i2WriteTimer0@timer0 0032                           ?_recv_msg 00B7  
                        _in_low_int 2248                        _handle_start 1AC8  
                           __Hparam 0000                           ?_send_msg 00B7  
                           __Lparam 0000          __end_of_timer0_int_handler 2108  
                       ?_WriteUSART 0001                    init_uart_recv@uc 00AD  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 009A  
                           __pcinit 2202                     __size_of_memcpy 005E  
                        _init_queue 1E8C                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 0FAC                             __ptext1 1B90  
                           __ptext2 25F0                             __ptext3 2604  
                           __ptext4 1292                             __ptext5 2616  
                           __ptext6 0C98                             __ptext7 2628  
                           __ptext8 263A                             __ptext9 2406  
                         _T0CONbits 000FD5                             _in_main 228E  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 264C  
               __end_of_WriteTimer1 263A                   __end_of_parseUART 19FA  
                    ?i2_in_high_int 0032        start_i2c_slave_reply@inchesL 00B9  
      start_i2c_slave_reply@inchesR 00BD                      __pintcode_body 1D8C  
              end_of_initialization 223E      __size_of_uart_recv_int_handler 005C  
                           memcpy@d 00B3                             memcpy@n 00B1  
                           memcpy@s 00B5            i1ToMainHigh_sendmsg@data 0018  
     __end_of_uart_recv_int_handler 2164                          ??_init_i2c 00AF  
                     __Lmediumconst 0000                             int_func 1D8C  
                      ??i1_send_msg 0011                       ?_uart_lthread 00AE  
           __size_of_init_uart_recv 002A                    ?_i2c_int_handler 0001  
                        ??_recv_msg 00BE                        ??i2_send_msg 008A  
                        ??_send_msg 00BD     __size_of_i2c_master_int_handler 0592  
        __end_of_timer1_int_handler 204C                           _RCSTAbits 000FAB  
            ??i1_ToMainHigh_sendmsg 001A                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 00C3                       ?i2_ReadTimer1 0032  
     __size_ofi2_ToMainHigh_sendmsg 0036                  __end_ofi1_send_msg 1CFA  
                         _TRISCbits 000F94                  __end_ofi2_send_msg 1912  
               __size_of_WriteUSART 0014            timer1_int_handler@result 001C  
                    ??_uart_lthread 00B6                           _TXSTAbits 000FAC  
                        main@length 0146                         ?_in_low_int 00AF  
                i1WriteTimer0@timer 0003                  i1WriteTimer1@timer 0003  
             timer0_lthread@msgtype 00AF    __size_ofi2_start_i2c_slave_reply 01A2  
             _start_i2c_slave_reply 1292        __size_of_i2c_configure_slave 0038  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 26D2  
                    ??i2_ReadTimer1 0034                        ??_ReadTimer1 00AF  
                _ToMainHigh_recvmsg 2314                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 2406                           i1memcpy@n 0005  
                         i1memcpy@s 0009                      _timer0_lthread 2604  
                       ?_init_queue 00AD                           i2memcpy@d 0080  
                       _WriteTimer0 263A                         _WriteTimer1 2628  
                         i2memcpy@n 0036                           i2memcpy@s 0082  
                    __end_of_memcpy 20AA                   _enable_interrupts 26C4  
              __size_of_Delay1KTCYx 0016                 ?_ToMainHigh_recvmsg 0100  
                   ??i2_in_high_int 0034                 ?_ToMainHigh_sendmsg 00C3  
                ?_enable_interrupts 0001                 start_initialization 2202  
            _i2c_master_int_handler 0706                       ??_in_high_int 00AF  
                         _ReadUSART 25BC                   __size_ofi1_memcpy 0040  
       i1ToMainHigh_sendmsg@msgtype 0017                   __size_ofi2_memcpy 0050  
               ??_enable_interrupts 00AD                        ??_OpenTimer0 00AD  
                      ??_OpenTimer1 00AD      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 2628       __end_of_block_on_To_msgqueues 1E8C  
                         _OpenUSART 1CFA        __end_of_InterruptHandlerHigh 1E0E  
                        init_i2c@ic 00AD                ??_ToMainHigh_recvmsg 00C5  
              ??_ToMainHigh_sendmsg 00C6              __end_of_timer0_lthread 2616  
         __end_of_enable_interrupts 26CC                            ??_memcpy 00B3  
             __end_ofi1_WriteTimer0 2694               __end_ofi1_WriteTimer1 2682  
      __size_of_init_timer1_lthread 0012                  __end_of_OpenTimer0 252A  
                __end_of_OpenTimer1 2406       __size_ofi2_timer0_int_handler 0072  
                       __pbssCOMRAM 0038                          ?_ReadUSART 0001  
                     ??_init_queues 00B1                       __pcstackBANK0 0080  
                     __pcstackBANK1 0100                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 00B1                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00AD            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00A8      i2c_slave_int_handler@data_read 009E  
               __end_of_in_high_int 2670                          ?_OpenUSART 00AD  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 0102  
                      _ToMainLow_MQ 0266                 __size_of_init_queue 007A  
                    _init_uart_recv 24D6                           _check_msg 243C  
                         __pnvBANK0 00D1              ?_start_i2c_slave_reply 00B1  
                 __size_of_init_i2c 00CE                        recv_msg@data 00BC  
                      ??_WriteUSART 00AD                        recv_msg@qmsg 00C3  
                      recv_msg@slot 00C0                        recv_msg@qptr 00B7  
        i2ToMainHigh_sendmsg@length 0093                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                   ?_timer0_lthread 00AD                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 0102               __end_ofi2_WriteTimer0 26A6  
              __end_of_uart_lthread 1C50                            ?_in_main 00B1  
                 WriteTimer0@timer0 00AD                  _timer0_int_handler 20AA  
                 WriteTimer1@timer1 00AD               _i2c_slave_int_handler 00C4  
                i2WriteTimer0@timer 0034                 uart_lthread@msgtype 00B0  
    i2c_slave_int_handler@error_buf 0096               ToMainLow_sendmsg@data 0018  
              __end_ofi2_ReadTimer1 26B8                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 2604                   i2ReadTimer1@timer 0034  
                         _parseUART 1912                    uart_lthread@uptr 00AE  
    i2c_slave_int_handler@msg_ready 009D              __end_of_init_uart_recv 2500  
               __end_of_init_queues 1FE6                            _LATCbits 000F8B  
            __size_of_motor_lthread 0314                     i2check_msg@qptr 0032  
                        ?_check_msg 00AD                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D             i2_start_i2c_slave_reply 143C  
                     ?i2_in_low_int 0034                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 00C4                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 001B  
        __size_of_enable_interrupts 0008                motor_lthread@message 010B  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
              motor_lthread@msgtype 0101                timer0_lthread@length 00B1  
                _timer1_int_handler 1FE6                            i1_memcpy 2356  
              _InterruptHandlerHigh 0008                       _motorDistance 00CE  
                       ??_ReadUSART 0001                            i2_memcpy 2164  
              timer0_lthread@msgval 00B5                         _in_high_int 265E  
                      send_msg@data 00BB                 _i2c_configure_slave 2396  
                      send_msg@qmsg 00C1                        send_msg@slot 00C0  
                      send_msg@qptr 00B7        __end_ofi2_ToMainHigh_sendmsg 24A8  
             uart_lthread@msgbuffer 00B4                 ?_timer1_int_handler 0001  
                        ?_parseUART 0001                     ?_init_uart_recv 00AD  
                          _i2c_mode 00D0                         ??_OpenUSART 00AF  
                   OpenUSART@config 00B2                      ??i2_in_low_int 0036  
             _uart_recv_int_handler 2108                        ??_in_low_int 00B1  
                          __Hrparam 0000                ?_i2c_configure_slave 0001  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
              ??_timer1_int_handler 001B       __size_ofi1_ToMainHigh_sendmsg 0026  
          __size_of_i2c_int_handler 0022                  ??_enter_sleep_mode 0032  
                      ??_init_queue 00AF                        ?_WriteTimer0 00AD  
                      ?_WriteTimer1 00AD             ToMainLow_sendmsg@length 001A  
           ?_i2c_master_int_handler 0001                       _motor_lthread 0C98  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 0128  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0087         ToMainHigh_recvmsg@maxlength 00C5  
                 i2send_msg@tlength 008B             init_timer1_lthread@tptr 00AD  
                       _init_queues 1F78                  __end_of_in_low_int 228E  
                          __ptext10 1714                            __ptext11 24D6  
                          __ptext20 2248                            __ptext12 264C  
                          __ptext21 265E                            __ptext13 1F78  
                          __ptext30 2500                            __ptext22 243C  
                          __ptext14 1E8C                            __ptext23 25DA  
                          __ptext15 19FA                            __ptext40 2550  
                          __ptext32 2108                            __ptext24 22D2  
                          __ptext16 2396                            __ptext41 1C50  
                          __ptext33 1912                            __ptext25 2314  
                          __ptext17 26C4                            __ptext50 1AC8  
                          __ptext42 2356                            __ptext34 252A  
                          __ptext26 15DE                            __ptext18 1E0E  
                          __ptext51 0706                            __ptext35 25BC  
                          __ptext27 204C                            __ptext19 228E  
                          __ptext52 2472                            __ptext44 1F06  
                          __ptext36 1FE6                            __ptext28 1CFA  
                          __ptext53 1818                            __ptext45 2694  
                          __ptext37 2670                            __ptext29 23CE  
                          __ptext54 2164                            __ptext46 259A  
                          __ptext38 20AA                            __ptext55 21B4  
                          __ptext47 00C4                            __ptext39 2682  
                          __ptext56 24A8                            __ptext48 143C  
                          __ptext57 26B8                            __ptext49 26A6  
                          __ptext58 2576                            __ptext59 26CC  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 00B2           ??i2_start_i2c_slave_reply 0080  
                          _init_i2c 19FA                 _init_timer1_lthread 264C  
                     __size_of_main 02E6                       ??i2_check_msg 0034  
                 main@t1thread_data 012A                         ??_check_msg 00AF  
                __end_of_init_queue 1F06                __size_of_SleepIfOkay 004E  
                          _recv_msg 15DE    i2c_slave_int_handler@msg_to_send 009C  
             ??_i2c_configure_slave 00AD                            _send_msg 1714  
                    init_queue@qptr 00AD               __size_of_uart_lthread 00C0  
     start_i2c_slave_reply@distance 00B5     i2start_i2c_slave_reply@distance 0082  
                     ??_Delay1KTCYx 00AD      __end_of_i2c_master_int_handler 0C98  
               _InterruptHandlerLow 0018                      ?_motor_lthread 0101  
              ?_init_timer1_lthread 00AD               __size_ofi2_ReadTimer1 0012  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 00AD                            memcpy@d1 00AD  
                    _command_length 0044                            memcpy@s1 00AF  
             __end_ofi2_in_high_int 26C4                        _motor_length 0048  
                  i2send_msg@length 0086                            intlevel1 0000  
                          intlevel2 0000                         ??_parseUART 001B  
                    _NumOfOverflowL 0038                      _NumOfOverflowR 003A  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 00B3  
            ?_uart_recv_int_handler 0001        __end_ofi2_timer0_int_handler 1F78  
                      _uart_lthread 1B90               _block_on_To_msgqueues 1E0E  
                     ?_handle_start 0001                    ??_timer0_lthread 00B5  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3            motor_lthread@message_740 010C  
          motor_lthread@message_741 010D            motor_lthread@message_742 010E  
       i2ToMainHigh_sendmsg@msgtype 0090            ToMainHigh_sendmsg@length 0100  
               __end_ofi2_check_msg 259A                        i2_ReadTimer1 26A6  
              i2_ToMainHigh_sendmsg 2472               ??_init_timer1_lthread 00AF  
                     _command_count 0042                         _motor_count 0046  
            ??_InterruptHandlerHigh 009F                   _ToMainLow_recvmsg 22D2  
                 _ToMainLow_sendmsg 252A                  main@last_reg_recvd 0127  
              __end_ofi2_in_low_int 24D6                  ?_ToMainLow_recvmsg 0100  
               __end_of_Delay1KTCYx 25F0                   ??_i2c_int_handler 0038  
                ?_ToMainLow_sendmsg 0017                       uart_lthread@x 00B7  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 0088               ??_InterruptHandlerLow 0021  
               ??_ToMainLow_recvmsg 00C5                      i2send_msg@qmsg 008E  
                    i2send_msg@slot 008D                      i2send_msg@qptr 0084  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 009B  
        i1ToMainHigh_sendmsg@length 001A              __size_ofi1_WriteTimer0 0012  
            __size_ofi1_WriteTimer1 0012                      ??_handle_start 0032  
                      _USART_Status 004C              motor_lthread@msgbuffer 0105  
