

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Apr 11 08:37:50 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataCOMRAM
    76  00235A                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _lastMotorCommand
    80  00235A  FF                 	db	255
    81  0000                     _INTCONbits	set	4082
    82  0000                     _IPR1bits	set	3999
    83  0000                     _LATB	set	3978
    84  0000                     _LATCbits	set	3979
    85  0000                     _OSCCON	set	4051
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _OSCTUNEbits	set	3995
    88  0000                     _PIE1bits	set	3997
    89  0000                     _PIR1bits	set	3998
    90  0000                     _RCONbits	set	4048
    91  0000                     _RCREG	set	4014
    92  0000                     _RCSTA	set	4011
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _SSPADD	set	4040
    97  0000                     _SSPBUF	set	4041
    98  0000                     _SSPCON1	set	4038
    99  0000                     _SSPCON1bits	set	4038
   100  0000                     _SSPCON2	set	4037
   101  0000                     _SSPCON2bits	set	4037
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _SSPSTATbits	set	4039
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TMR1H	set	4047
   107  0000                     _TMR1L	set	4046
   108  0000                     _TRISB	set	3987
   109  0000                     _TRISCbits	set	3988
   110  0000                     _TXREG	set	4013
   111  0000                     _TXSTA	set	4012
   112  0000                     _TXSTAbits	set	4012
   113                           
   114                           	psect	nvCOMRAM
   115  00004B                     __pnvCOMRAM:
   116                           	opt stack 0
   117  00004B                     _uc_ptr:
   118                           	opt stack 0
   119  00004B                     	ds	2
   120  00004D                     _State:
   121                           	opt stack 0
   122  00004D                     	ds	1
   123                           
   124                           	psect	nvBANK0
   125  0000C6                     __pnvBANK0:
   126                           	opt stack 0
   127  0000C6                     _ic_ptr:
   128                           	opt stack 0
   129  0000C6                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  001E82                     __pcinit:
   135                           	opt stack 0
   136  001E82                     start_initialization:
   137                           	opt stack 0
   138  001E82                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK3 (102 bytes)
   142  001E82  EE03  F000         	lfsr	0,__pbssBANK3
   143  001E86  0E66               	movlw	102
   144  001E88                     clear_0:
   145  001E88  6AEE               	clrf	postinc0,c
   146  001E8A  06E8               	decf	wreg,f,c
   147  001E8C  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK2 (204 bytes)
   150  001E8E  EE02  F000         	lfsr	0,__pbssBANK2
   151  001E92  0ECC               	movlw	204
   152  001E94                     clear_1:
   153  001E94  6AEE               	clrf	postinc0,c
   154  001E96  06E8               	decf	wreg,f,c
   155  001E98  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to BANK1 (102 bytes)
   158  001E9A  EE01  F084         	lfsr	0,__pbssBANK1
   159  001E9E  0E66               	movlw	102
   160  001EA0                     clear_2:
   161  001EA0  6AEE               	clrf	postinc0,c
   162  001EA2  06E8               	decf	wreg,f,c
   163  001EA4  E1FD               	bnz	clear_2
   164                           
   165                           ; Clear objects allocated to BANK0 (1 bytes)
   166  001EA6  0100               	movlb	0
   167  001EA8  6BC8               	clrf	__pbssBANK0& (0+255),b
   168                           
   169                           ; Clear objects allocated to COMRAM (12 bytes)
   170  001EAA  EE00  F03F         	lfsr	0,__pbssCOMRAM
   171  001EAE  0E0C               	movlw	12
   172  001EB0                     clear_3:
   173  001EB0  6AEE               	clrf	postinc0,c
   174  001EB2  06E8               	decf	wreg,f,c
   175  001EB4  E1FD               	bnz	clear_3
   176                           
   177                           ; Initialize objects allocated to COMRAM (1 bytes)
   178                           ; load TBLPTR registers with __pidataCOMRAM
   179  001EB6  0E5A               	movlw	low __pidataCOMRAM
   180  001EB8  6EF6               	movwf	tblptrl,c
   181  001EBA  0E23               	movlw	high __pidataCOMRAM
   182  001EBC  6EF7               	movwf	tblptrh,c
   183  001EBE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   184  001EC0  6EF8               	movwf	tblptru,c
   185  001EC2  0009               	tblrd		*+	;fetch initializer
   186  001EC4  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   187  001EC8                     end_of_initialization:
   188                           	opt stack 0
   189  001EC8                     __end_of__initialization:
   190                           	opt stack 0
   191  001EC8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  001ECA  6EF8               	movwf	tblptru,c
   193  001ECC  0100               	movlb	0
   194  001ECE  EFF9  F005         	goto	_main	;jump to C main() function
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           
   202                           	psect	bssCOMRAM
   203  00003F                     __pbssCOMRAM:
   204                           	opt stack 0
   205  00003F                     _Send:
   206                           	opt stack 0
   207  00003F                     	ds	2
   208  000041                     _command_count:
   209                           	opt stack 0
   210  000041                     	ds	2
   211  000043                     _command_length:
   212                           	opt stack 0
   213  000043                     	ds	2
   214  000045                     _motor_count:
   215                           	opt stack 0
   216  000045                     	ds	2
   217  000047                     _motor_length:
   218                           	opt stack 0
   219  000047                     	ds	2
   220  000049                     _MQ_Main_Willing_to_block:
   221                           	opt stack 0
   222  000049                     	ds	1
   223  00004A                     _USART_Status:
   224                           	opt stack 0
   225  00004A                     	ds	1
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	dataCOMRAM
   234  00004E                     __pdataCOMRAM:
   235                           	opt stack 0
   236  00004E                     _lastMotorCommand:
   237                           	opt stack 0
   238  00004E                     	ds	1
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	bssBANK0
   247  0000C8                     __pbssBANK0:
   248                           	opt stack 0
   249  0000C8                     _i2c_mode:
   250                           	opt stack 0
   251  0000C8                     	ds	1
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	bssBANK1
   260  000184                     __pbssBANK1:
   261                           	opt stack 0
   262  000184                     _ToMainLow_MQ:
   263                           	opt stack 0
   264  000184                     	ds	102
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	bssBANK2
   273  000200                     __pbssBANK2:
   274                           	opt stack 0
   275  000200                     _FromMainLow_MQ:
   276                           	opt stack 0
   277  000200                     	ds	102
   278  000266                     _ToMainHigh_MQ:
   279                           	opt stack 0
   280  000266                     	ds	102
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	bssBANK3
   289  000300                     __pbssBANK3:
   290                           	opt stack 0
   291  000300                     _FromMainHigh_MQ:
   292                           	opt stack 0
   293  000300                     	ds	102
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackBANK1
   302  000100                     __pcstackBANK1:
   303                           	opt stack 0
   304  000100                     main@msgbuffer:
   305                           	opt stack 0
   306                           
   307                           ; 23 bytes @ 0x0
   308  000100                     	ds	23
   309  000117                     main@last_reg_recvd:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x17
   313  000117                     	ds	1
   314  000118                     main@uthread_data:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x18
   318  000118                     	ds	2
   319  00011A                     main@t0thread_data:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x1A
   323  00011A                     	ds	2
   324  00011C                     main@t1thread_data:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x1C
   328  00011C                     	ds	2
   329  00011E                     main@uc:
   330                           	opt stack 0
   331                           
   332                           ; 23 bytes @ 0x1E
   333  00011E                     	ds	23
   334  000135                     main@length:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x35
   338  000135                     	ds	1
   339  000136                     main@msgtype:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x36
   343  000136                     	ds	1
   344  000137                     main@ic:
   345                           	opt stack 0
   346                           
   347                           ; 77 bytes @ 0x37
   348  000137                     	ds	77
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           
   356                           	psect	cstackBANK0
   357  000080                     __pcstackBANK0:
   358                           	opt stack 0
   359  000080                     i2send_msg@qptr:
   360                           	opt stack 0
   361  000080                     i2recv_msg@qptr:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x0
   365  000080                     	ds	2
   366  000082                     i2send_msg@length:
   367                           	opt stack 0
   368  000082                     i2recv_msg@maxlength:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x2
   372  000082                     	ds	1
   373  000083                     i2send_msg@msgtype:
   374                           	opt stack 0
   375  000083                     i2recv_msg@msgtype:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x3
   379  000083                     	ds	1
   380  000084                     i2send_msg@data:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4
   384  000084                     	ds	1
   385  000085                     i2recv_msg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x5
   389  000085                     	ds	1
   390  000086                     i2send_msg@tlength:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x6
   394  000086                     	ds	1
   395  000087                     i2recv_msg@slot:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x7
   399  000087                     	ds	1
   400  000088                     i2send_msg@slot:
   401                           	opt stack 0
   402  000088                     i2recv_msg@tlength:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x8
   406  000088                     	ds	1
   407  000089                     i2send_msg@qmsg:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x9
   411  000089                     	ds	1
   412  00008A                     i2recv_msg@qmsg:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0xA
   416  00008A                     	ds	1
   417  00008B                     ToMainHigh_sendmsg@msgtype:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0xB
   421  00008B                     	ds	1
   422  00008C                     ToMainHigh_sendmsg@data:
   423                           	opt stack 0
   424  00008C                     FromMainHigh_recvmsg@msgtype:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0xC
   428  00008C                     	ds	2
   429  00008E                     ??_i2c_slave_int_handler:
   430  00008E                     FromMainHigh_recvmsg@data:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xE
   434  00008E                     	ds	2
   435  000090                     ??_timer0_int_handler:
   436  000090                     i2c_slave_int_handler@error_buf:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x10
   440  000090                     	ds	1
   441  000091                     timer0_int_handler@length:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x11
   445  000091                     	ds	2
   446  000093                     i2c_slave_int_handler@data_written:
   447                           	opt stack 0
   448  000093                     timer0_int_handler@msgtype:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x13
   452  000093                     	ds	1
   453  000094                     i2c_slave_int_handler@overrun_error:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x14
   457  000094                     	ds	1
   458  000095                     i2c_slave_int_handler@i2c_data:
   459                           	opt stack 0
   460  000095                     timer0_int_handler@val:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x15
   464  000095                     	ds	1
   465  000096                     i2c_slave_int_handler@msg_to_send:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x16
   469  000096                     	ds	1
   470  000097                     i2c_slave_int_handler@msg_ready:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x17
   474  000097                     	ds	1
   475  000098                     i2c_slave_int_handler@data_read:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x18
   479  000098                     	ds	1
   480  000099                     ??_InterruptHandlerHigh:
   481                           
   482                           ; 0 bytes @ 0x19
   483  000099                     	ds	14
   484  0000A7                     ??_i2c_configure_master:
   485  0000A7                     ?_in_high_int:
   486                           	opt stack 0
   487  0000A7                     i2c_master_recv@length:
   488                           	opt stack 0
   489  0000A7                     WriteUSART@data:
   490                           	opt stack 0
   491  0000A7                     Delay1KTCYx@unit:
   492                           	opt stack 0
   493  0000A7                     init_queue@qptr:
   494                           	opt stack 0
   495  0000A7                     check_msg@qptr:
   496                           	opt stack 0
   497  0000A7                     i2c_master_send@msg:
   498                           	opt stack 0
   499  0000A7                     init_i2c@ic:
   500                           	opt stack 0
   501  0000A7                     init_uart_recv@uc:
   502                           	opt stack 0
   503  0000A7                     timer0_lthread@tptr:
   504                           	opt stack 0
   505  0000A7                     init_timer1_lthread@tptr:
   506                           	opt stack 0
   507  0000A7                     OpenUSART@spbrg:
   508                           	opt stack 0
   509  0000A7                     memcpy@d1:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x27
   513  0000A7                     	ds	1
   514  0000A8                     i2c_configure_master@slave_addr:
   515                           	opt stack 0
   516  0000A8                     uart_lthread@uptr:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x28
   520  0000A8                     	ds	1
   521  0000A9                     ??_init_uart_recv:
   522  0000A9                     ??_OpenUSART:
   523  0000A9                     ??_init_queue:
   524  0000A9                     ??_check_msg:
   525  0000A9                     ??_i2c_master_send:
   526  0000A9                     ?_in_low_int:
   527                           	opt stack 0
   528  0000A9                     timer0_lthread@msgtype:
   529                           	opt stack 0
   530  0000A9                     memcpy@s1:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x29
   534  0000A9                     	ds	1
   535  0000AA                     init_queue@i:
   536                           	opt stack 0
   537  0000AA                     uart_lthread@msgtype:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x2A
   541  0000AA                     	ds	1
   542  0000AB                     ??_init_queues:
   543  0000AB                     ?_in_main:
   544                           	opt stack 0
   545  0000AB                     i2c_master_send@length:
   546                           	opt stack 0
   547  0000AB                     timer0_lthread@length:
   548                           	opt stack 0
   549  0000AB                     memcpy@n:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x2B
   553  0000AB                     	ds	1
   554  0000AC                     OpenUSART@config:
   555                           	opt stack 0
   556  0000AC                     i2c_master_send@currentLength:
   557                           	opt stack 0
   558  0000AC                     uart_lthread@length:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x2C
   562  0000AC                     	ds	1
   563  0000AD                     ??_block_on_To_msgqueues:
   564  0000AD                     timer0_lthread@msgbuffer:
   565                           	opt stack 0
   566  0000AD                     memcpy@d:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x2D
   570  0000AD                     	ds	1
   571  0000AE                     parser_lthread@msgtype:
   572                           	opt stack 0
   573  0000AE                     uart_lthread@msgbuffer:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x2E
   577  0000AE                     	ds	1
   578  0000AF                     timer0_lthread@msgval:
   579                           	opt stack 0
   580  0000AF                     memcpy@s:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x2F
   584  0000AF                     	ds	1
   585  0000B0                     ??_uart_lthread:
   586  0000B0                     parser_lthread@length:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x30
   590  0000B0                     	ds	1
   591  0000B1                     recv_msg@qptr:
   592                           	opt stack 0
   593  0000B1                     uart_lthread@x:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x31
   597  0000B1                     	ds	1
   598  0000B2                     parser_lthread@msgbuf:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x32
   602  0000B2                     	ds	1
   603  0000B3                     recv_msg@maxlength:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x33
   607  0000B3                     	ds	1
   608  0000B4                     ??_parser_lthread:
   609  0000B4                     recv_msg@msgtype:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x34
   613  0000B4                     	ds	2
   614  0000B6                     recv_msg@data:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x36
   618  0000B6                     	ds	2
   619  0000B8                     ??_recv_msg:
   620                           
   621                           ; 0 bytes @ 0x38
   622  0000B8                     	ds	1
   623  0000B9                     parser_lthread@data:
   624                           	opt stack 0
   625                           
   626                           ; 5 bytes @ 0x39
   627  0000B9                     	ds	1
   628  0000BA                     recv_msg@slot:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x3A
   632  0000BA                     	ds	1
   633  0000BB                     recv_msg@tlength:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x3B
   637  0000BB                     	ds	2
   638  0000BD                     recv_msg@qmsg:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x3D
   642  0000BD                     	ds	1
   643  0000BE                     parser_lthread@checksum:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x3E
   647  0000BE                     	ds	1
   648  0000BF                     parser_lthread@Command:
   649                           	opt stack 0
   650  0000BF                     ToMainLow_recvmsg@msgtype:
   651                           	opt stack 0
   652  0000BF                     ToMainHigh_recvmsg@msgtype:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x3F
   656  0000BF                     	ds	1
   657  0000C0                     parser_lthread@i:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x40
   661  0000C0                     	ds	1
   662  0000C1                     ToMainLow_recvmsg@data:
   663                           	opt stack 0
   664  0000C1                     ToMainHigh_recvmsg@data:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x41
   668  0000C1                     	ds	1
   669  0000C2                     parser_lthread@movement:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x42
   673  0000C2                     	ds	1
   674  0000C3                     ToMainLow_recvmsg@maxlength:
   675                           	opt stack 0
   676  0000C3                     ToMainHigh_recvmsg@maxlength:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x43
   680  0000C3                     	ds	1
   681  0000C4                     ??_main:
   682                           
   683                           ; 0 bytes @ 0x44
   684  0000C4                     	ds	2
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           tblptrl	equ	0xFF6
   688                           tablat	equ	0xFF5
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           
   692                           	psect	cstackCOMRAM
   693  000001                     __pcstackCOMRAM:
   694                           	opt stack 0
   695  000001                     ?_ReadTimer1:
   696                           	opt stack 0
   697  000001                     ReadUSART@data:
   698                           	opt stack 0
   699  000001                     WriteTimer1@timer1:
   700                           	opt stack 0
   701  000001                     i1memcpy@d1:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x0
   705  000001                     	ds	2
   706  000003                     ReadTimer1@timer:
   707                           	opt stack 0
   708  000003                     WriteTimer1@timer:
   709                           	opt stack 0
   710  000003                     i1memcpy@s1:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x2
   714  000003                     	ds	2
   715  000005                     i1memcpy@n:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x4
   719  000005                     	ds	2
   720  000007                     i1memcpy@d:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x6
   724  000007                     	ds	2
   725  000009                     i1memcpy@s:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x8
   729  000009                     	ds	2
   730  00000B                     send_msg@qptr:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0xA
   734  00000B                     	ds	2
   735  00000D                     send_msg@length:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0xC
   739  00000D                     	ds	1
   740  00000E                     send_msg@msgtype:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0xD
   744  00000E                     	ds	1
   745  00000F                     send_msg@data:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0xE
   749  00000F                     	ds	2
   750  000011                     ??_send_msg:
   751                           
   752                           ; 0 bytes @ 0x10
   753  000011                     	ds	1
   754  000012                     send_msg@tlength:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x11
   758  000012                     	ds	2
   759  000014                     send_msg@slot:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x13
   763  000014                     	ds	1
   764  000015                     send_msg@qmsg:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x14
   768  000015                     	ds	2
   769  000017                     ToMainLow_sendmsg@msgtype:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x16
   773  000017                     	ds	1
   774  000018                     ToMainLow_sendmsg@data:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x17
   778  000018                     	ds	2
   779  00001A                     ToMainLow_sendmsg@length:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x19
   783  00001A                     	ds	1
   784  00001B                     ??_timer1_int_handler:
   785  00001B                     ??_parseUART:
   786                           
   787                           ; 0 bytes @ 0x1A
   788  00001B                     	ds	1
   789  00001C                     timer1_int_handler@result:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x1B
   793  00001C                     	ds	4
   794  000020                     ??_uart_recv_int_handler:
   795                           
   796                           ; 0 bytes @ 0x1F
   797  000020                     	ds	1
   798  000021                     ??_InterruptHandlerLow:
   799                           
   800                           ; 0 bytes @ 0x20
   801  000021                     	ds	17
   802  000032                     ?i2_in_high_int:
   803                           	opt stack 0
   804  000032                     handle_start@data_read:
   805                           	opt stack 0
   806  000032                     start_i2c_slave_reply@msg:
   807                           	opt stack 0
   808  000032                     WriteTimer0@timer0:
   809                           	opt stack 0
   810  000032                     i2check_msg@qptr:
   811                           	opt stack 0
   812  000032                     i2memcpy@d1:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x31
   816  000032                     	ds	2
   817  000034                     ??_start_i2c_slave_reply:
   818  000034                     ??i2_check_msg:
   819  000034                     ?i2_in_low_int:
   820                           	opt stack 0
   821  000034                     WriteTimer0@timer:
   822                           	opt stack 0
   823  000034                     i2memcpy@s1:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x33
   827  000034                     	ds	2
   828  000036                     i2memcpy@n:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x35
   832  000036                     	ds	1
   833  000037                     start_i2c_slave_reply@length:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x36
   837  000037                     	ds	1
   838  000038                     i2memcpy@d:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x37
   842  000038                     	ds	2
   843  00003A                     i2memcpy@s:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x39
   847  00003A                     	ds	2
   848  00003C                     ??i2_send_msg:
   849  00003C                     ??i2_recv_msg:
   850                           
   851                           ; 0 bytes @ 0x3B
   852  00003C                     	ds	1
   853  00003D                     ToMainHigh_sendmsg@length:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x3C
   857  00003D                     	ds	1
   858  00003E                     ??_i2c_master_int_handler:
   859  00003E                     FromMainHigh_recvmsg@maxlength:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x3D
   863  00003E                     	ds	1
   864  00003F                     tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           
   871                           ; 0 bytes @ 0x3E
   872 ;;
   873 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   874 ;;
   875 ;; *************** function _main *****************
   876 ;; Defined at:
   877 ;;		line 187 in file "source/main.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  ic             77   55[BANK1 ] struct __i2c_comm
   882 ;;  msgbuffer      23    0[BANK1 ] unsigned char [23]
   883 ;;  uc             23   30[BANK1 ] struct __uart_comm
   884 ;;  t1thread_dat    2   28[BANK1 ] struct __timer1_thread_s
   885 ;;  t0thread_dat    2   26[BANK1 ] struct __timer0_thread_s
   886 ;;  uthread_data    2   24[BANK1 ] struct __uart_thread_str
   887 ;;  msgtype         1   54[BANK1 ] unsigned char 
   888 ;;  length          1   53[BANK1 ] char 
   889 ;;  last_reg_rec    1   23[BANK1 ] unsigned char 
   890 ;;  i               1    0        unsigned char 
   891 ;;  c               1    0        unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;		None               void
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0     132       0       0
   903 ;;      Temps:          0       2       0       0       0
   904 ;;      Totals:         0       2     132       0       0
   905 ;;Total ram usage:      134 bytes
   906 ;; Hardware stack levels required when called:   16
   907 ;; This function calls:
   908 ;;		_OpenUSART
   909 ;;		_ToMainHigh_recvmsg
   910 ;;		_ToMainLow_recvmsg
   911 ;;		_block_on_To_msgqueues
   912 ;;		_enable_interrupts
   913 ;;		_init_i2c
   914 ;;		_init_queues
   915 ;;		_init_timer1_lthread
   916 ;;		_init_uart_recv
   917 ;;		_parser_lthread
   918 ;;		_timer0_lthread
   919 ;;		_uart_lthread
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926  000BF2                     __ptext0:
   927                           	opt stack 0
   928  000BF2                     _main:
   929                           	opt stack 14
   930                           
   931                           ;main.c: 188: char c;
   932                           ;main.c: 189: signed char length;
   933                           ;main.c: 190: unsigned char msgtype;
   934                           ;main.c: 191: unsigned char last_reg_recvd;
   935                           ;main.c: 192: uart_comm uc;
   936                           ;main.c: 193: i2c_comm ic;
   937                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   938                           ;main.c: 195: unsigned char i;
   939                           ;main.c: 196: uart_thread_struct uthread_data;
   940                           ;main.c: 197: timer1_thread_struct t1thread_data;
   941                           ;main.c: 198: timer0_thread_struct t0thread_data;
   942                           ;main.c: 206: OSCCON = 0x82;
   943                           
   944                           ;incstack = 0
   945  000BF2  0E82               	movlw	130
   946  000BF4  6ED3               	movwf	4051,c	;volatile
   947                           
   948                           ;main.c: 207: OSCTUNEbits.PLLEN = 1;
   949  000BF6  8C9B               	bsf	3995,6,c	;volatile
   950                           
   951                           ;main.c: 225: init_uart_recv(&uc);
   952  000BF8  0101               	movlb	1	; () banked
   953  000BFA  0E01               	movlw	high main@uc
   954  000BFC  0100               	movlb	0	; () banked
   955  000BFE  0100               	movlb	0	; () banked
   956  000C00  6FA8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   957  000C02  0101               	movlb	1	; () banked
   958  000C04  0E1E               	movlw	low main@uc
   959  000C06  0100               	movlb	0	; () banked
   960  000C08  0100               	movlb	0	; () banked
   961  000C0A  6FA7               	movwf	init_uart_recv@uc& (0+255),b
   962  000C0C  ECFB  F010         	call	_init_uart_recv	;wreg free
   963                           
   964                           ;main.c: 228: init_i2c(&ic);
   965  000C10  0101               	movlb	1	; () banked
   966  000C12  0E01               	movlw	high main@ic
   967  000C14  0100               	movlb	0	; () banked
   968  000C16  0100               	movlb	0	; () banked
   969  000C18  6FA8               	movwf	(init_i2c@ic+1)& (0+255),b
   970  000C1A  0101               	movlb	1	; () banked
   971  000C1C  0E37               	movlw	low main@ic
   972  000C1E  0100               	movlb	0	; () banked
   973  000C20  0100               	movlb	0	; () banked
   974  000C22  6FA7               	movwf	init_i2c@ic& (0+255),b
   975  000C24  ECBB  F00B         	call	_init_i2c	;wreg free
   976                           
   977                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   978  000C28  0101               	movlb	1	; () banked
   979  000C2A  0E01               	movlw	high main@t1thread_data
   980  000C2C  0100               	movlb	0	; () banked
   981  000C2E  0100               	movlb	0	; () banked
   982  000C30  6FA8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   983  000C32  0101               	movlb	1	; () banked
   984  000C34  0E1C               	movlw	low main@t1thread_data
   985  000C36  0100               	movlb	0	; () banked
   986  000C38  0100               	movlb	0	; () banked
   987  000C3A  6FA7               	movwf	init_timer1_lthread@tptr& (0+255),b
   988  000C3C  EC73  F011         	call	_init_timer1_lthread	;wreg free
   989                           
   990                           ;main.c: 234: init_queues();
   991  000C40  EC83  F00E         	call	_init_queues	;wreg free
   992                           
   993                           ;main.c: 238: TRISB = 0x0;
   994  000C44  0E00               	movlw	0
   995  000C46  6E93               	movwf	3987,c	;volatile
   996                           
   997                           ;main.c: 239: LATB = 0x0;
   998  000C48  0E00               	movlw	0
   999  000C4A  6E8A               	movwf	3978,c	;volatile
  1000                           
  1001                           ;main.c: 268: IPR1bits.TMR1IP = 0;
  1002  000C4C  909F               	bcf	3999,0,c	;volatile
  1003                           
  1004                           ;main.c: 270: IPR1bits.RCIP = 0;
  1005  000C4E  9A9F               	bcf	3999,5,c	;volatile
  1006                           
  1007                           ;main.c: 272: IPR1bits.SSPIP = 1;
  1008  000C50  869F               	bsf	3999,3,c	;volatile
  1009                           
  1010                           ;main.c: 296: PIE1bits.SSPIE = 1;
  1011  000C52  869D               	bsf	3997,3,c	;volatile
  1012                           
  1013                           ;main.c: 307: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1014                           ;main.c: 308: 0b11111111 & 0b11101111, 0x26);
  1015  000C54  0E00               	movlw	0
  1016  000C56  0100               	movlb	0	; () banked
  1017  000C58  0100               	movlb	0	; () banked
  1018  000C5A  6FA8               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1019  000C5C  0E26               	movlw	38
  1020  000C5E  0100               	movlb	0	; () banked
  1021  000C60  6FA7               	movwf	OpenUSART@spbrg& (0+255),b
  1022  000C62  0E6C               	movlw	108
  1023  000C64  EC3B  F00D         	call	_OpenUSART
  1024                           
  1025                           ;main.c: 314: enable_interrupts();
  1026  000C68  ECA6  F011         	call	_enable_interrupts	;wreg free
  1027  000C6C                     l2456:
  1028                           
  1029                           ;main.c: 341: block_on_To_msgqueues();
  1030  000C6C  EC07  F00E         	call	_block_on_To_msgqueues	;wreg free
  1031                           
  1032                           ;main.c: 348: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
  1033  000C70  0101               	movlb	1	; () banked
  1034  000C72  0E01               	movlw	high main@msgtype
  1035  000C74  0100               	movlb	0	; () banked
  1036  000C76  0100               	movlb	0	; () banked
  1037  000C78  6FC0               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1038  000C7A  0101               	movlb	1	; () banked
  1039  000C7C  0E36               	movlw	low main@msgtype
  1040  000C7E  0100               	movlb	0	; () banked
  1041  000C80  0100               	movlb	0	; () banked
  1042  000C82  6FBF               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1043  000C84  0101               	movlb	1	; () banked
  1044  000C86  0E01               	movlw	high main@msgbuffer
  1045  000C88  0100               	movlb	0	; () banked
  1046  000C8A  0100               	movlb	0	; () banked
  1047  000C8C  6FC2               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1048  000C8E  0101               	movlb	1	; () banked
  1049  000C90  0E00               	movlw	low main@msgbuffer
  1050  000C92  0100               	movlb	0	; () banked
  1051  000C94  0100               	movlb	0	; () banked
  1052  000C96  6FC1               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1053  000C98  0E16               	movlw	22
  1054  000C9A  ECF6  F00F         	call	_ToMainHigh_recvmsg
  1055  000C9E  0101               	movlb	1	; () banked
  1056  000CA0  0101               	movlb	1	; () banked
  1057  000CA2  6F35               	movwf	main@length& (0+255),b
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;main.c: 349: if (length < 0) {
  1061  000CA4  0101               	movlb	1	; () banked
  1062  000CA6  0101               	movlb	1	; () banked
  1063  000CA8  AF35               	btfss	main@length& (0+255),7,b
  1064  000CAA  D08B               	goto	l2474
  1065                           
  1066                           ; BSR set to: 1
  1067                           ;main.c: 351: if (length != -4) {
  1068  000CAC  0101               	movlb	1	; () banked
  1069  000CAE  0101               	movlb	1	; () banked
  1070  000CB0  5135               	movf	main@length& (0+255),w,b
  1071  000CB2  0AFC               	xorlw	252
  1072  000CB4  B4D8               	btfsc	status,2,c
  1073  000CB6  D094               	goto	l2476
  1074                           
  1075                           ; BSR set to: 1
  1076                           ;main.c: 352: LATB = 0x01;
  1077  000CB8  0E01               	movlw	1
  1078  000CBA  6E8A               	movwf	3978,c	;volatile
  1079  000CBC  D091               	goto	l2476
  1080  000CBE                     l2466:
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;main.c: 359: {
  1084                           ;main.c: 360: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1085  000CBE  0101               	movlb	1	; () banked
  1086  000CC0  0E01               	movlw	high main@t0thread_data
  1087  000CC2  0100               	movlb	0	; () banked
  1088  000CC4  0100               	movlb	0	; () banked
  1089  000CC6  6FA8               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1090  000CC8  0101               	movlb	1	; () banked
  1091  000CCA  0E1A               	movlw	low main@t0thread_data
  1092  000CCC  0100               	movlb	0	; () banked
  1093  000CCE  0100               	movlb	0	; () banked
  1094  000CD0  6FA7               	movwf	timer0_lthread@tptr& (0+255),b
  1095  000CD2  0101               	movlb	1	; () banked
  1096  000CD4  0100               	movlb	0	; () banked
  1097  000CD6  C136  F0A9         	movff	main@msgtype,timer0_lthread@msgtype
  1098  000CDA  0100               	movlb	0	; () banked
  1099  000CDC  0100               	movlb	0	; () banked
  1100  000CDE  6BAA               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1101  000CE0  0101               	movlb	1	; () banked
  1102  000CE2  0101               	movlb	1	; () banked
  1103  000CE4  5135               	movf	main@length& (0+255),w,b
  1104  000CE6  0100               	movlb	0	; () banked
  1105  000CE8  0100               	movlb	0	; () banked
  1106  000CEA  6FAB               	movwf	timer0_lthread@length& (0+255),b
  1107  000CEC  0100               	movlb	0	; () banked
  1108  000CEE  6BAC               	clrf	(timer0_lthread@length+1)& (0+255),b
  1109  000CF0  0100               	movlb	0	; () banked
  1110  000CF2  BFAB               	btfsc	timer0_lthread@length& (0+255),7,b
  1111  000CF4  07AC               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1112  000CF6  0101               	movlb	1	; () banked
  1113  000CF8  0E01               	movlw	high main@msgbuffer
  1114  000CFA  0100               	movlb	0	; () banked
  1115  000CFC  0100               	movlb	0	; () banked
  1116  000CFE  6FAE               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1117  000D00  0101               	movlb	1	; () banked
  1118  000D02  0E00               	movlw	low main@msgbuffer
  1119  000D04  0100               	movlb	0	; () banked
  1120  000D06  0100               	movlb	0	; () banked
  1121  000D08  6FAD               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1122  000D0A  EC6A  F011         	call	_timer0_lthread	;wreg free
  1123                           
  1124                           ;main.c: 361: break;
  1125  000D0E  D068               	goto	l2476
  1126  000D10                     l93:
  1127                           
  1128                           ; BSR set to: 1
  1129                           ;main.c: 364: {
  1130                           ;main.c: 367: last_reg_recvd = msgbuffer[0];
  1131  000D10  C100  F117         	movff	main@msgbuffer,main@last_reg_recvd
  1132                           
  1133                           ;main.c: 368: break;
  1134  000D14  D065               	goto	l2476
  1135  000D16                     l2468:
  1136                           
  1137                           ; BSR set to: 1
  1138                           ;main.c: 371: {
  1139                           ;main.c: 372: uart_lthread(&uthread_data,msgtype,length,msgbuffer);
  1140  000D16  0101               	movlb	1	; () banked
  1141  000D18  0E01               	movlw	high main@uthread_data
  1142  000D1A  0100               	movlb	0	; () banked
  1143  000D1C  0100               	movlb	0	; () banked
  1144  000D1E  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1145  000D20  0101               	movlb	1	; () banked
  1146  000D22  0E18               	movlw	low main@uthread_data
  1147  000D24  0100               	movlb	0	; () banked
  1148  000D26  0100               	movlb	0	; () banked
  1149  000D28  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1150  000D2A  0101               	movlb	1	; () banked
  1151  000D2C  0100               	movlb	0	; () banked
  1152  000D2E  C136  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1153  000D32  0100               	movlb	0	; () banked
  1154  000D34  0100               	movlb	0	; () banked
  1155  000D36  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1156  000D38  0101               	movlb	1	; () banked
  1157  000D3A  0101               	movlb	1	; () banked
  1158  000D3C  5135               	movf	main@length& (0+255),w,b
  1159  000D3E  0100               	movlb	0	; () banked
  1160  000D40  0100               	movlb	0	; () banked
  1161  000D42  6FAC               	movwf	uart_lthread@length& (0+255),b
  1162  000D44  0100               	movlb	0	; () banked
  1163  000D46  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1164  000D48  0100               	movlb	0	; () banked
  1165  000D4A  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1166  000D4C  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1167  000D4E  0101               	movlb	1	; () banked
  1168  000D50  0E01               	movlw	high main@msgbuffer
  1169  000D52  0100               	movlb	0	; () banked
  1170  000D54  0100               	movlb	0	; () banked
  1171  000D56  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1172  000D58  0101               	movlb	1	; () banked
  1173  000D5A  0E00               	movlw	low main@msgbuffer
  1174  000D5C  0100               	movlb	0	; () banked
  1175  000D5E  0100               	movlb	0	; () banked
  1176  000D60  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1177  000D62  EC86  F00C         	call	_uart_lthread	;wreg free
  1178                           
  1179                           ;main.c: 373: break;
  1180  000D66  D03C               	goto	l2476
  1181  000D68                     l2470:
  1182                           
  1183                           ;main.c: 376: {
  1184                           ;main.c: 377: uart_lthread(0,47,length * sizeof(unsigned int),msgbuffer);
  1185  000D68  0E00               	movlw	0
  1186  000D6A  0100               	movlb	0	; () banked
  1187  000D6C  0100               	movlb	0	; () banked
  1188  000D6E  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1189  000D70  0E00               	movlw	0
  1190  000D72  0100               	movlb	0	; () banked
  1191  000D74  0100               	movlb	0	; () banked
  1192  000D76  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1193  000D78  0E00               	movlw	0
  1194  000D7A  0100               	movlb	0	; () banked
  1195  000D7C  0100               	movlb	0	; () banked
  1196  000D7E  6FAB               	movwf	(uart_lthread@msgtype+1)& (0+255),b
  1197  000D80  0E2F               	movlw	47
  1198  000D82  0100               	movlb	0	; () banked
  1199  000D84  6FAA               	movwf	uart_lthread@msgtype& (0+255),b
  1200  000D86  0101               	movlb	1	; () banked
  1201  000D88  C135  F0C4         	movff	main@length,??_main
  1202  000D8C  0100               	movlb	0	; () banked
  1203  000D8E  6BC5               	clrf	(??_main+1)& (0+255),b
  1204  000D90  BFC4               	btfsc	??_main& (0+255),7,b
  1205  000D92  07C5               	decf	(??_main+1)& (0+255),f,b
  1206  000D94  90D8               	bcf	status,0,c
  1207  000D96  0100               	movlb	0	; () banked
  1208  000D98  35C4               	rlcf	??_main& (0+255),w,b
  1209  000D9A  0100               	movlb	0	; () banked
  1210  000D9C  0100               	movlb	0	; () banked
  1211  000D9E  6FAC               	movwf	uart_lthread@length& (0+255),b
  1212  000DA0  0100               	movlb	0	; () banked
  1213  000DA2  35C5               	rlcf	(??_main+1)& (0+255),w,b
  1214  000DA4  0100               	movlb	0	; () banked
  1215  000DA6  6FAD               	movwf	(uart_lthread@length+1)& (0+255),b
  1216  000DA8  0101               	movlb	1	; () banked
  1217  000DAA  0E01               	movlw	high main@msgbuffer
  1218  000DAC  0100               	movlb	0	; () banked
  1219  000DAE  0100               	movlb	0	; () banked
  1220  000DB0  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1221  000DB2  0101               	movlb	1	; () banked
  1222  000DB4  0E00               	movlw	low main@msgbuffer
  1223  000DB6  0100               	movlb	0	; () banked
  1224  000DB8  0100               	movlb	0	; () banked
  1225  000DBA  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1226  000DBC  EC86  F00C         	call	_uart_lthread	;wreg free
  1227                           
  1228                           ;main.c: 378: break;
  1229  000DC0  D00F               	goto	l2476
  1230  000DC2                     l2474:
  1231  000DC2  0101               	movlb	1	; () banked
  1232  000DC4  0101               	movlb	1	; () banked
  1233  000DC6  5136               	movf	main@msgtype& (0+255),w,b
  1234                           
  1235                           ; Switch size 1, requested type "space"
  1236                           ; Number of cases is 4, Range of values is 10 to 47
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte           13     7 (average)
  1240                           ;	Chosen strategy is simple_byte
  1241  000DC8  0A0A               	xorlw	10	; case 10
  1242  000DCA  B4D8               	btfsc	status,2,c
  1243  000DCC  D778               	goto	l2466
  1244  000DCE  0A23               	xorlw	35	; case 41
  1245  000DD0  B4D8               	btfsc	status,2,c
  1246  000DD2  D79E               	goto	l93
  1247  000DD4  0A04               	xorlw	4	; case 45
  1248  000DD6  B4D8               	btfsc	status,2,c
  1249  000DD8  D7C7               	goto	l2470
  1250  000DDA  0A02               	xorlw	2	; case 47
  1251  000DDC  B4D8               	btfsc	status,2,c
  1252  000DDE  D79B               	goto	l2468
  1253  000DE0                     l2476:
  1254                           
  1255                           ;main.c: 386: }
  1256                           ;main.c: 389: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
  1257  000DE0  0101               	movlb	1	; () banked
  1258  000DE2  0E01               	movlw	high main@msgtype
  1259  000DE4  0100               	movlb	0	; () banked
  1260  000DE6  0100               	movlb	0	; () banked
  1261  000DE8  6FC0               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1262  000DEA  0101               	movlb	1	; () banked
  1263  000DEC  0E36               	movlw	low main@msgtype
  1264  000DEE  0100               	movlb	0	; () banked
  1265  000DF0  0100               	movlb	0	; () banked
  1266  000DF2  6FBF               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1267  000DF4  0101               	movlb	1	; () banked
  1268  000DF6  0E01               	movlw	high main@msgbuffer
  1269  000DF8  0100               	movlb	0	; () banked
  1270  000DFA  0100               	movlb	0	; () banked
  1271  000DFC  6FC2               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1272  000DFE  0101               	movlb	1	; () banked
  1273  000E00  0E00               	movlw	low main@msgbuffer
  1274  000E02  0100               	movlb	0	; () banked
  1275  000E04  0100               	movlb	0	; () banked
  1276  000E06  6FC1               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1277  000E08  0E16               	movlw	22
  1278  000E0A  ECD5  F00F         	call	_ToMainLow_recvmsg
  1279  000E0E  0101               	movlb	1	; () banked
  1280  000E10  0101               	movlb	1	; () banked
  1281  000E12  6F35               	movwf	main@length& (0+255),b
  1282                           
  1283                           ; BSR set to: 1
  1284                           ;main.c: 390: if (length < 0) {
  1285  000E14  0101               	movlb	1	; () banked
  1286  000E16  0101               	movlb	1	; () banked
  1287  000E18  AF35               	btfss	main@length& (0+255),7,b
  1288  000E1A  D028               	goto	l2488
  1289                           
  1290                           ; BSR set to: 1
  1291                           ;main.c: 392: if (length != -4) {
  1292  000E1C  0101               	movlb	1	; () banked
  1293  000E1E  0101               	movlb	1	; () banked
  1294  000E20  5135               	movf	main@length& (0+255),w,b
  1295  000E22  0AFC               	xorlw	252
  1296  000E24  B4D8               	btfsc	status,2,c
  1297  000E26  D722               	goto	l2456
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 393: LATB = 0x02;
  1301  000E28  0E02               	movlw	2
  1302  000E2A  6E8A               	movwf	3978,c	;volatile
  1303  000E2C  D71F               	goto	l2456
  1304  000E2E                     l2484:
  1305                           
  1306                           ; BSR set to: 1
  1307                           ;main.c: 400: {
  1308                           ;main.c: 401: parser_lthread(msgtype,length,msgbuffer);
  1309  000E2E  0101               	movlb	1	; () banked
  1310  000E30  0100               	movlb	0	; () banked
  1311  000E32  C136  F0AE         	movff	main@msgtype,parser_lthread@msgtype
  1312  000E36  0100               	movlb	0	; () banked
  1313  000E38  0100               	movlb	0	; () banked
  1314  000E3A  6BAF               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1315  000E3C  0101               	movlb	1	; () banked
  1316  000E3E  0101               	movlb	1	; () banked
  1317  000E40  5135               	movf	main@length& (0+255),w,b
  1318  000E42  0100               	movlb	0	; () banked
  1319  000E44  0100               	movlb	0	; () banked
  1320  000E46  6FB0               	movwf	parser_lthread@length& (0+255),b
  1321  000E48  0100               	movlb	0	; () banked
  1322  000E4A  6BB1               	clrf	(parser_lthread@length+1)& (0+255),b
  1323  000E4C  0100               	movlb	0	; () banked
  1324  000E4E  BFB0               	btfsc	parser_lthread@length& (0+255),7,b
  1325  000E50  07B1               	decf	(parser_lthread@length+1)& (0+255),f,b
  1326  000E52  0101               	movlb	1	; () banked
  1327  000E54  0E01               	movlw	high main@msgbuffer
  1328  000E56  0100               	movlb	0	; () banked
  1329  000E58  0100               	movlb	0	; () banked
  1330  000E5A  6FB3               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1331  000E5C  0101               	movlb	1	; () banked
  1332  000E5E  0E00               	movlw	low main@msgbuffer
  1333  000E60  0100               	movlb	0	; () banked
  1334  000E62  0100               	movlb	0	; () banked
  1335  000E64  6FB2               	movwf	parser_lthread@msgbuf& (0+255),b
  1336  000E66  EC40  F007         	call	_parser_lthread	;wreg free
  1337                           
  1338                           ;main.c: 402: break;
  1339  000E6A  D700               	goto	l2456
  1340  000E6C                     l2488:
  1341  000E6C  0101               	movlb	1	; () banked
  1342  000E6E  0101               	movlb	1	; () banked
  1343  000E70  5136               	movf	main@msgtype& (0+255),w,b
  1344                           
  1345                           ; Switch size 1, requested type "space"
  1346                           ; Number of cases is 2, Range of values is 30 to 50
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte            7     4 (average)
  1350                           ;	Chosen strategy is simple_byte
  1351  000E72  0A1E               	xorlw	30	; case 30
  1352  000E74  B4D8               	btfsc	status,2,c
  1353  000E76  D6FA               	goto	l2456
  1354  000E78  0A2C               	xorlw	44	; case 50
  1355  000E7A  B4D8               	btfsc	status,2,c
  1356  000E7C  D7D8               	goto	l2484
  1357  000E7E  D6F6               	goto	l2456
  1358  000E80                     __end_of_main:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function _uart_lthread *****************
  1369 ;; Defined at:
  1370 ;;		line 9 in file "source/uart_thread.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1373 ;;		 -> NULL(0), main@uthread_data(2), 
  1374 ;;  msgtype         2   42[BANK0 ] int 
  1375 ;;  length          2   44[BANK0 ] int 
  1376 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1377 ;;		 -> main@msgbuffer(23), 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  x               2   49[BANK0 ] int 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  2   40[BANK0 ] int 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1389 ;;      Params:         0       8       0       0       0
  1390 ;;      Locals:         0       2       0       0       0
  1391 ;;      Temps:          0       1       0       0       0
  1392 ;;      Totals:         0      11       0       0       0
  1393 ;;Total ram usage:       11 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:   13
  1396 ;; This function calls:
  1397 ;;		_WriteUSART
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text1
  1404  00190C                     __ptext1:
  1405                           	opt stack 0
  1406  00190C                     _uart_lthread:
  1407                           	opt stack 16
  1408                           
  1409                           ;uart_thread.c: 10: if (msgtype == 30) {
  1410                           
  1411                           ; BSR set to: 1
  1412                           ;incstack = 0
  1413  00190C  0100               	movlb	0	; () banked
  1414  00190E  0100               	movlb	0	; () banked
  1415  001910  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1416  001912  0A1E               	xorlw	30
  1417  001914  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1418  001916  B4D8               	btfsc	status,2,c
  1419  001918  0012               	return	
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1423                           
  1424                           ; BSR set to: 0
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;uart_thread.c: 11: }
  1428  00191A  0100               	movlb	0	; () banked
  1429  00191C  0100               	movlb	0	; () banked
  1430  00191E  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1431  001920  0A1F               	xorlw	31
  1432  001922  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1433  001924  A4D8               	btfss	status,2,c
  1434  001926  D011               	goto	l2612
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1438  001928  0100               	movlb	0	; () banked
  1439  00192A  0100               	movlb	0	; () banked
  1440  00192C  51AC               	movf	uart_lthread@length& (0+255),w,b
  1441  00192E  0100               	movlb	0	; () banked
  1442  001930  0100               	movlb	0	; () banked
  1443  001932  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1444  001934  6ED9               	movwf	fsr2l,c
  1445  001936  0100               	movlb	0	; () banked
  1446  001938  0100               	movlb	0	; () banked
  1447  00193A  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1448  00193C  0100               	movlb	0	; () banked
  1449  00193E  0100               	movlb	0	; () banked
  1450  001940  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1451  001942  6EDA               	movwf	fsr2h,c
  1452  001944  0E00               	movlw	0
  1453  001946  6EDF               	movwf	indf2,c
  1454                           
  1455                           ;uart_thread.c: 18: }
  1456  001948  0012               	return	
  1457  00194A                     l2612:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;uart_thread.c: 19: else if(msgtype == 47)
  1461  00194A  0100               	movlb	0	; () banked
  1462  00194C  0100               	movlb	0	; () banked
  1463  00194E  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1464  001950  0A2F               	xorlw	47
  1465  001952  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1466  001954  A4D8               	btfss	status,2,c
  1467  001956  0012               	return	
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;uart_thread.c: 20: {
  1471                           ;uart_thread.c: 22: int x = 0;
  1472  001958  0E00               	movlw	0
  1473  00195A  0100               	movlb	0	; () banked
  1474  00195C  0100               	movlb	0	; () banked
  1475  00195E  6FB2               	movwf	(uart_lthread@x+1)& (0+255),b
  1476  001960  0E00               	movlw	0
  1477  001962  0100               	movlb	0	; () banked
  1478  001964  6FB1               	movwf	uart_lthread@x& (0+255),b
  1479                           
  1480                           ;uart_thread.c: 24: for(x = 0; x < length; x++ )
  1481  001966  0E00               	movlw	0
  1482  001968  0100               	movlb	0	; () banked
  1483  00196A  0100               	movlb	0	; () banked
  1484  00196C  6FB2               	movwf	(uart_lthread@x+1)& (0+255),b
  1485  00196E  0E00               	movlw	0
  1486  001970  0100               	movlb	0	; () banked
  1487  001972  6FB1               	movwf	uart_lthread@x& (0+255),b
  1488  001974  D017               	goto	l2620
  1489  001976                     l474:
  1490  001976  A2AC               	btfss	4012,1,c	;volatile
  1491  001978  D7FE               	goto	l474
  1492                           
  1493                           ;uart_thread.c: 27: WriteUSART(msgbuffer[x]);
  1494  00197A  0100               	movlb	0	; () banked
  1495  00197C  0100               	movlb	0	; () banked
  1496  00197E  51B1               	movf	uart_lthread@x& (0+255),w,b
  1497  001980  0100               	movlb	0	; () banked
  1498  001982  0100               	movlb	0	; () banked
  1499  001984  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1500  001986  6ED9               	movwf	fsr2l,c
  1501  001988  0100               	movlb	0	; () banked
  1502  00198A  0100               	movlb	0	; () banked
  1503  00198C  51B2               	movf	(uart_lthread@x+1)& (0+255),w,b
  1504  00198E  0100               	movlb	0	; () banked
  1505  001990  0100               	movlb	0	; () banked
  1506  001992  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1507  001994  6EDA               	movwf	fsr2h,c
  1508  001996  50DF               	movf	indf2,w,c
  1509  001998  EC60  F011         	call	_WriteUSART
  1510  00199C  0100               	movlb	0	; () banked
  1511  00199E  0100               	movlb	0	; () banked
  1512  0019A0  4BB1               	infsnz	uart_lthread@x& (0+255),f,b
  1513  0019A2  2BB2               	incf	(uart_lthread@x+1)& (0+255),f,b
  1514  0019A4                     l2620:
  1515                           
  1516                           ; BSR set to: 0
  1517  0019A4  0100               	movlb	0	; () banked
  1518  0019A6  0100               	movlb	0	; () banked
  1519  0019A8  51B2               	movf	(uart_lthread@x+1)& (0+255),w,b
  1520  0019AA  0A80               	xorlw	128
  1521  0019AC  0100               	movlb	0	; () banked
  1522  0019AE  6FB0               	movwf	??_uart_lthread& (0+255),b
  1523  0019B0  0100               	movlb	0	; () banked
  1524  0019B2  51AC               	movf	uart_lthread@length& (0+255),w,b
  1525  0019B4  0100               	movlb	0	; () banked
  1526  0019B6  0100               	movlb	0	; () banked
  1527  0019B8  5DB1               	subwf	uart_lthread@x& (0+255),w,b
  1528  0019BA  0100               	movlb	0	; () banked
  1529  0019BC  0100               	movlb	0	; () banked
  1530  0019BE  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1531  0019C0  0A80               	xorlw	128
  1532  0019C2  0100               	movlb	0	; () banked
  1533  0019C4  59B0               	subwfb	??_uart_lthread& (0+255),w,b
  1534  0019C6  B0D8               	btfsc	status,0,c
  1535                           
  1536                           ; BSR set to: 0
  1537                           
  1538                           ; BSR set to: 0
  1539                           
  1540                           ; BSR set to: 0
  1541                           
  1542                           ; BSR set to: 0
  1543                           
  1544                           ; BSR set to: 0
  1545  0019C8  0012               	return	
  1546  0019CA  D7D5               	goto	l474
  1547  0019CC                     __end_of_uart_lthread:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           indf2	equ	0xFDF
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function _WriteUSART *****************
  1561 ;; Defined at:
  1562 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  data            1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  data            1   39[BANK0 ] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1576 ;;      Params:         0       0       0       0       0
  1577 ;;      Locals:         0       1       0       0       0
  1578 ;;      Temps:          0       0       0       0       0
  1579 ;;      Totals:         0       1       0       0       0
  1580 ;;Total ram usage:        1 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:   12
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_uart_lthread
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text2
  1591  0022C0                     __ptext2:
  1592                           	opt stack 0
  1593  0022C0                     _WriteUSART:
  1594                           	opt stack 16
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;incstack = 0
  1598                           ;WriteUSART@data stored from wreg
  1599  0022C0  CFE8 F0A7          	movff	wreg,WriteUSART@data
  1600  0022C4  ACAC               	btfss	4012,6,c	;volatile
  1601  0022C6  D003               	goto	l3180
  1602  0022C8  90AC               	bcf	4012,0,c	;volatile
  1603  0022CA  B24A               	btfsc	_USART_Status,1,c
  1604  0022CC  80AC               	bsf	4012,0,c	;volatile
  1605  0022CE                     l3180:
  1606  0022CE  C0A7  FFAD         	movff	WriteUSART@data,4013	;volatile
  1607  0022D2  0012               	return	
  1608  0022D4                     __end_of_WriteUSART:
  1609                           	opt stack 0
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           indf2	equ	0xFDF
  1617                           fsr2h	equ	0xFDA
  1618                           fsr2l	equ	0xFD9
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _timer0_lthread *****************
  1622 ;; Defined at:
  1623 ;;		line 9 in file "source/timer0_thread.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  tptr            2   39[BANK0 ] PTR struct __timer0_thre
  1626 ;;		 -> main@t0thread_data(2), 
  1627 ;;  msgtype         2   41[BANK0 ] int 
  1628 ;;  length          2   43[BANK0 ] int 
  1629 ;;  msgbuffer       2   45[BANK0 ] PTR unsigned char 
  1630 ;;		 -> main@msgbuffer(23), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  msgval          2   47[BANK0 ] PTR unsigned int 
  1633 ;;		 -> main@msgbuffer(23), 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2   39[BANK0 ] int 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1643 ;;      Params:         0       8       0       0       0
  1644 ;;      Locals:         0       2       0       0       0
  1645 ;;      Temps:          0       0       0       0       0
  1646 ;;      Totals:         0      10       0       0       0
  1647 ;;Total ram usage:       10 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:   12
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text3
  1658  0022D4                     __ptext3:
  1659                           	opt stack 0
  1660  0022D4                     _timer0_lthread:
  1661                           	opt stack 17
  1662                           
  1663                           ;timer0_thread.c: 10: unsigned int *msgval;
  1664                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1665                           
  1666                           ;incstack = 0
  1667  0022D4  0100               	movlb	0	; () banked
  1668  0022D6  0100               	movlb	0	; () banked
  1669  0022D8  C0AE  F0B0         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1670  0022DC  0100               	movlb	0	; () banked
  1671  0022DE  0100               	movlb	0	; () banked
  1672  0022E0  C0AD  F0AF         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1673                           
  1674                           ; BSR set to: 0
  1675  0022E4  0012               	return	
  1676  0022E6                     __end_of_timer0_lthread:
  1677                           	opt stack 0
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           indf2	equ	0xFDF
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function _parser_lthread *****************
  1690 ;; Defined at:
  1691 ;;		line 6 in file "source/Parser_thread.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  msgtype         2   46[BANK0 ] int 
  1694 ;;  length          2   48[BANK0 ] int 
  1695 ;;  msgbuf          2   50[BANK0 ] PTR unsigned char 
  1696 ;;		 -> main@msgbuffer(23), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  movement        1   66[BANK0 ] unsigned char 
  1699 ;;  data            5   57[BANK0 ] unsigned char [5]
  1700 ;;  Command         1   63[BANK0 ] unsigned char 
  1701 ;;  i               2   64[BANK0 ] int 
  1702 ;;  checksum        1   62[BANK0 ] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  2   46[BANK0 ] int 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1712 ;;      Params:         0       6       0       0       0
  1713 ;;      Locals:         0      10       0       0       0
  1714 ;;      Temps:          0       5       0       0       0
  1715 ;;      Totals:         0      21       0       0       0
  1716 ;;Total ram usage:       21 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:   13
  1719 ;; This function calls:
  1720 ;;		_i2c_configure_master
  1721 ;;		_i2c_master_recv
  1722 ;;		_i2c_master_send
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text4
  1729  000E80                     __ptext4:
  1730                           	opt stack 0
  1731  000E80                     _parser_lthread:
  1732                           	opt stack 16
  1733                           
  1734                           ;Parser_thread.c: 8: if(msgtype == 50)
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;incstack = 0
  1738  000E80  0100               	movlb	0	; () banked
  1739  000E82  0100               	movlb	0	; () banked
  1740  000E84  51AE               	movf	parser_lthread@msgtype& (0+255),w,b
  1741  000E86  0A32               	xorlw	50
  1742  000E88  11AF               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  1743  000E8A  A4D8               	btfss	status,2,c
  1744  000E8C  0012               	return	
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;Parser_thread.c: 11: int i = 0;
  1748  000E8E  0E00               	movlw	0
  1749  000E90  0100               	movlb	0	; () banked
  1750  000E92  0100               	movlb	0	; () banked
  1751  000E94  6FC1               	movwf	(parser_lthread@i+1)& (0+255),b
  1752  000E96  0E00               	movlw	0
  1753  000E98  0100               	movlb	0	; () banked
  1754  000E9A  6FC0               	movwf	parser_lthread@i& (0+255),b
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;Parser_thread.c: 12: char checksum = 0x0;
  1758  000E9C  0100               	movlb	0	; () banked
  1759  000E9E  6FB4               	movwf	??_parser_lthread& (0+255),b
  1760  000EA0  0E00               	movlw	0
  1761  000EA2  0100               	movlb	0	; () banked
  1762  000EA4  0100               	movlb	0	; () banked
  1763  000EA6  6FBE               	movwf	parser_lthread@checksum& (0+255),b
  1764  000EA8  0100               	movlb	0	; () banked
  1765  000EAA  51B4               	movf	??_parser_lthread& (0+255),w,b
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;Parser_thread.c: 14: for(i = 0; i < length-1; i++)
  1769  000EAC  0E00               	movlw	0
  1770  000EAE  0100               	movlb	0	; () banked
  1771  000EB0  0100               	movlb	0	; () banked
  1772  000EB2  6FC1               	movwf	(parser_lthread@i+1)& (0+255),b
  1773  000EB4  0E00               	movlw	0
  1774  000EB6  0100               	movlb	0	; () banked
  1775  000EB8  6FC0               	movwf	parser_lthread@i& (0+255),b
  1776  000EBA  D016               	goto	l2638
  1777  000EBC                     l2634:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;Parser_thread.c: 15: {
  1781                           ;Parser_thread.c: 16: checksum += msgbuf[i];
  1782  000EBC  0100               	movlb	0	; () banked
  1783  000EBE  0100               	movlb	0	; () banked
  1784  000EC0  51C0               	movf	parser_lthread@i& (0+255),w,b
  1785  000EC2  0100               	movlb	0	; () banked
  1786  000EC4  0100               	movlb	0	; () banked
  1787  000EC6  25B2               	addwf	parser_lthread@msgbuf& (0+255),w,b
  1788  000EC8  6ED9               	movwf	fsr2l,c
  1789  000ECA  0100               	movlb	0	; () banked
  1790  000ECC  0100               	movlb	0	; () banked
  1791  000ECE  51C1               	movf	(parser_lthread@i+1)& (0+255),w,b
  1792  000ED0  0100               	movlb	0	; () banked
  1793  000ED2  0100               	movlb	0	; () banked
  1794  000ED4  21B3               	addwfc	(parser_lthread@msgbuf+1)& (0+255),w,b
  1795  000ED6  6EDA               	movwf	fsr2h,c
  1796  000ED8  50DF               	movf	indf2,w,c
  1797  000EDA  0100               	movlb	0	; () banked
  1798  000EDC  0100               	movlb	0	; () banked
  1799  000EDE  27BE               	addwf	parser_lthread@checksum& (0+255),f,b
  1800                           
  1801                           ; BSR set to: 0
  1802  000EE0  0100               	movlb	0	; () banked
  1803  000EE2  0100               	movlb	0	; () banked
  1804  000EE4  4BC0               	infsnz	parser_lthread@i& (0+255),f,b
  1805  000EE6  2BC1               	incf	(parser_lthread@i+1)& (0+255),f,b
  1806  000EE8                     l2638:
  1807                           
  1808                           ; BSR set to: 0
  1809  000EE8  0EFF               	movlw	255
  1810  000EEA  0100               	movlb	0	; () banked
  1811  000EEC  6FB4               	movwf	??_parser_lthread& (0+255),b
  1812  000EEE  0EFF               	movlw	255
  1813  000EF0  6FB5               	movwf	(??_parser_lthread+1)& (0+255),b
  1814  000EF2  0100               	movlb	0	; () banked
  1815  000EF4  C0B0  F0B6         	movff	parser_lthread@length,??_parser_lthread+2
  1816  000EF8  0100               	movlb	0	; () banked
  1817  000EFA  C0B1  F0B7         	movff	parser_lthread@length+1,??_parser_lthread+3
  1818  000EFE  0100               	movlb	0	; () banked
  1819  000F00  51B4               	movf	??_parser_lthread& (0+255),w,b
  1820  000F02  0100               	movlb	0	; () banked
  1821  000F04  27B6               	addwf	(??_parser_lthread+2)& (0+255),f,b
  1822  000F06  0100               	movlb	0	; () banked
  1823  000F08  51B5               	movf	(??_parser_lthread+1)& (0+255),w,b
  1824  000F0A  0100               	movlb	0	; () banked
  1825  000F0C  23B7               	addwfc	(??_parser_lthread+3)& (0+255),f,b
  1826  000F0E  0100               	movlb	0	; () banked
  1827  000F10  0100               	movlb	0	; () banked
  1828  000F12  51C1               	movf	(parser_lthread@i+1)& (0+255),w,b
  1829  000F14  0A80               	xorlw	128
  1830  000F16  0100               	movlb	0	; () banked
  1831  000F18  6FB8               	movwf	(??_parser_lthread+4)& (0+255),b
  1832  000F1A  51B6               	movf	(??_parser_lthread+2)& (0+255),w,b
  1833  000F1C  0100               	movlb	0	; () banked
  1834  000F1E  0100               	movlb	0	; () banked
  1835  000F20  5DC0               	subwf	parser_lthread@i& (0+255),w,b
  1836  000F22  0100               	movlb	0	; () banked
  1837  000F24  51B7               	movf	(??_parser_lthread+3)& (0+255),w,b
  1838  000F26  0A80               	xorlw	128
  1839  000F28  0100               	movlb	0	; () banked
  1840  000F2A  59B8               	subwfb	(??_parser_lthread+4)& (0+255),w,b
  1841  000F2C  A0D8               	btfss	status,0,c
  1842  000F2E  D7C6               	goto	l2634
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;Parser_thread.c: 17: }
  1846                           ;Parser_thread.c: 18: if(checksum == msgbuf[length-1])
  1847                           
  1848                           ; BSR set to: 0
  1849  000F30  0EFF               	movlw	255
  1850  000F32  0100               	movlb	0	; () banked
  1851  000F34  6FB4               	movwf	??_parser_lthread& (0+255),b
  1852  000F36  0EFF               	movlw	255
  1853  000F38  6FB5               	movwf	(??_parser_lthread+1)& (0+255),b
  1854  000F3A  0100               	movlb	0	; () banked
  1855  000F3C  C0B0  F0B6         	movff	parser_lthread@length,??_parser_lthread+2
  1856  000F40  0100               	movlb	0	; () banked
  1857  000F42  C0B1  F0B7         	movff	parser_lthread@length+1,??_parser_lthread+3
  1858  000F46  0100               	movlb	0	; () banked
  1859  000F48  51B4               	movf	??_parser_lthread& (0+255),w,b
  1860  000F4A  0100               	movlb	0	; () banked
  1861  000F4C  27B6               	addwf	(??_parser_lthread+2)& (0+255),f,b
  1862  000F4E  0100               	movlb	0	; () banked
  1863  000F50  51B5               	movf	(??_parser_lthread+1)& (0+255),w,b
  1864  000F52  0100               	movlb	0	; () banked
  1865  000F54  23B7               	addwfc	(??_parser_lthread+3)& (0+255),f,b
  1866  000F56  0100               	movlb	0	; () banked
  1867  000F58  51B6               	movf	(??_parser_lthread+2)& (0+255),w,b
  1868  000F5A  0100               	movlb	0	; () banked
  1869  000F5C  0100               	movlb	0	; () banked
  1870  000F5E  25B2               	addwf	parser_lthread@msgbuf& (0+255),w,b
  1871  000F60  6ED9               	movwf	fsr2l,c
  1872  000F62  0100               	movlb	0	; () banked
  1873  000F64  51B7               	movf	(??_parser_lthread+3)& (0+255),w,b
  1874  000F66  0100               	movlb	0	; () banked
  1875  000F68  0100               	movlb	0	; () banked
  1876  000F6A  21B3               	addwfc	(parser_lthread@msgbuf+1)& (0+255),w,b
  1877  000F6C  6EDA               	movwf	fsr2h,c
  1878  000F6E  0100               	movlb	0	; () banked
  1879  000F70  0100               	movlb	0	; () banked
  1880  000F72  51BE               	movf	parser_lthread@checksum& (0+255),w,b
  1881  000F74  62DF               	cpfseq	indf2,c
  1882  000F76  0012               	return	
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;Parser_thread.c: 19: {
  1886                           ;Parser_thread.c: 21: char data[5];
  1887                           ;Parser_thread.c: 22: char Command = (msgbuf[1] >> 4) & 0xF;
  1888  000F78  0100               	movlb	0	; () banked
  1889  000F7A  EE20 F001          	lfsr	2,1
  1890  000F7E  0100               	movlb	0	; () banked
  1891  000F80  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  1892  000F82  26D9               	addwf	fsr2l,f,c
  1893  000F84  0100               	movlb	0	; () banked
  1894  000F86  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1895  000F88  22DA               	addwfc	fsr2h,f,c
  1896  000F8A  50DF               	movf	indf2,w,c
  1897  000F8C  0100               	movlb	0	; () banked
  1898  000F8E  6FB4               	movwf	??_parser_lthread& (0+255),b
  1899  000F90  0100               	movlb	0	; () banked
  1900  000F92  39B4               	swapf	??_parser_lthread& (0+255),w,b
  1901  000F94  0B0F               	andlw	15
  1902  000F96  0B0F               	andlw	15
  1903  000F98  0100               	movlb	0	; () banked
  1904  000F9A  0100               	movlb	0	; () banked
  1905  000F9C  6FBF               	movwf	parser_lthread@Command& (0+255),b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;Parser_thread.c: 24: if(Command == 0x02)
  1909  000F9E  0100               	movlb	0	; () banked
  1910  000FA0  0100               	movlb	0	; () banked
  1911  000FA2  51BF               	movf	parser_lthread@Command& (0+255),w,b
  1912  000FA4  0A02               	xorlw	2
  1913  000FA6  A4D8               	btfss	status,2,c
  1914  000FA8  D076               	goto	l436
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;Parser_thread.c: 25: {
  1918                           ;Parser_thread.c: 26: char movement = msgbuf[1] & 0x0F;
  1919  000FAA  0100               	movlb	0	; () banked
  1920  000FAC  EE20 F001          	lfsr	2,1
  1921  000FB0  0100               	movlb	0	; () banked
  1922  000FB2  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  1923  000FB4  26D9               	addwf	fsr2l,f,c
  1924  000FB6  0100               	movlb	0	; () banked
  1925  000FB8  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1926  000FBA  22DA               	addwfc	fsr2h,f,c
  1927  000FBC  50DF               	movf	indf2,w,c
  1928  000FBE  0B0F               	andlw	15
  1929  000FC0  0100               	movlb	0	; () banked
  1930  000FC2  0100               	movlb	0	; () banked
  1931  000FC4  6FC2               	movwf	parser_lthread@movement& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;Parser_thread.c: 28: if(movement == 0x0)
  1935  000FC6  0100               	movlb	0	; () banked
  1936  000FC8  0100               	movlb	0	; () banked
  1937  000FCA  67C2               	tstfsz	parser_lthread@movement& (0+255),b
  1938  000FCC  D004               	goto	l2652
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;Parser_thread.c: 29: {
  1942                           ;Parser_thread.c: 30: data[0] = 0x03;
  1943  000FCE  0100               	movlb	0	; () banked
  1944  000FD0  6FB4               	movwf	??_parser_lthread& (0+255),b
  1945  000FD2  0E03               	movlw	3
  1946  000FD4  D016               	goto	L3
  1947  000FD6                     l2652:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;Parser_thread.c: 32: else if(movement == 0x01)
  1951  000FD6  0100               	movlb	0	; () banked
  1952  000FD8  0100               	movlb	0	; () banked
  1953  000FDA  05C2               	decf	parser_lthread@movement& (0+255),w,b
  1954  000FDC  A4D8               	btfss	status,2,c
  1955  000FDE  D004               	goto	l2656
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;Parser_thread.c: 33: {
  1959                           ;Parser_thread.c: 34: data[0] = 0x02;
  1960  000FE0  0100               	movlb	0	; () banked
  1961  000FE2  6FB4               	movwf	??_parser_lthread& (0+255),b
  1962  000FE4  0E02               	movlw	2
  1963  000FE6  D00D               	goto	L3
  1964  000FE8                     l2656:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;Parser_thread.c: 36: else if(movement == 0x02)
  1968  000FE8  0100               	movlb	0	; () banked
  1969  000FEA  0100               	movlb	0	; () banked
  1970  000FEC  51C2               	movf	parser_lthread@movement& (0+255),w,b
  1971  000FEE  0A02               	xorlw	2
  1972  000FF0  A4D8               	btfss	status,2,c
  1973  000FF2  D004               	goto	l2660
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;Parser_thread.c: 37: {
  1977                           ;Parser_thread.c: 38: data[0] = 0x01;
  1978  000FF4  0100               	movlb	0	; () banked
  1979  000FF6  6FB4               	movwf	??_parser_lthread& (0+255),b
  1980  000FF8  0E01               	movlw	1
  1981  000FFA  D003               	goto	L3
  1982  000FFC                     l2660:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;Parser_thread.c: 40: else
  1986                           ;Parser_thread.c: 41: {
  1987                           ;Parser_thread.c: 42: data[0] = 0x04;
  1988  000FFC  0100               	movlb	0	; () banked
  1989  000FFE  6FB4               	movwf	??_parser_lthread& (0+255),b
  1990  001000  0E04               	movlw	4
  1991  001002                     L3:
  1992  001002  0100               	movlb	0	; () banked
  1993  001004  0100               	movlb	0	; () banked
  1994  001006  6FB9               	movwf	parser_lthread@data& (0+255),b
  1995  001008  0100               	movlb	0	; () banked
  1996  00100A  51B4               	movf	??_parser_lthread& (0+255),w,b
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;Parser_thread.c: 43: }
  2000                           ;Parser_thread.c: 45: data[1] = msgbuf[2];
  2001                           
  2002                           ; BSR set to: 0
  2003                           
  2004                           ; BSR set to: 0
  2005                           
  2006                           ; BSR set to: 0
  2007  00100C  0100               	movlb	0	; () banked
  2008  00100E  EE20 F002          	lfsr	2,2
  2009  001012  0100               	movlb	0	; () banked
  2010  001014  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2011  001016  26D9               	addwf	fsr2l,f,c
  2012  001018  0100               	movlb	0	; () banked
  2013  00101A  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2014  00101C  22DA               	addwfc	fsr2h,f,c
  2015  00101E  50DF               	movf	indf2,w,c
  2016  001020  0100               	movlb	0	; () banked
  2017  001022  0100               	movlb	0	; () banked
  2018  001024  6FBA               	movwf	(parser_lthread@data+1)& (0+255),b
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;Parser_thread.c: 46: data[2] = msgbuf[3];
  2022  001026  0100               	movlb	0	; () banked
  2023  001028  EE20 F003          	lfsr	2,3
  2024  00102C  0100               	movlb	0	; () banked
  2025  00102E  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2026  001030  26D9               	addwf	fsr2l,f,c
  2027  001032  0100               	movlb	0	; () banked
  2028  001034  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2029  001036  22DA               	addwfc	fsr2h,f,c
  2030  001038  50DF               	movf	indf2,w,c
  2031  00103A  0100               	movlb	0	; () banked
  2032  00103C  0100               	movlb	0	; () banked
  2033  00103E  6FBB               	movwf	(parser_lthread@data+2)& (0+255),b
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;Parser_thread.c: 47: data[3] = msgbuf[2];
  2037  001040  0100               	movlb	0	; () banked
  2038  001042  EE20 F002          	lfsr	2,2
  2039  001046  0100               	movlb	0	; () banked
  2040  001048  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2041  00104A  26D9               	addwf	fsr2l,f,c
  2042  00104C  0100               	movlb	0	; () banked
  2043  00104E  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2044  001050  22DA               	addwfc	fsr2h,f,c
  2045  001052  50DF               	movf	indf2,w,c
  2046  001054  0100               	movlb	0	; () banked
  2047  001056  0100               	movlb	0	; () banked
  2048  001058  6FBC               	movwf	(parser_lthread@data+3)& (0+255),b
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;Parser_thread.c: 48: data[4] = msgbuf[3];
  2052  00105A  0100               	movlb	0	; () banked
  2053  00105C  EE20 F003          	lfsr	2,3
  2054  001060  0100               	movlb	0	; () banked
  2055  001062  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2056  001064  26D9               	addwf	fsr2l,f,c
  2057  001066  0100               	movlb	0	; () banked
  2058  001068  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2059  00106A  22DA               	addwfc	fsr2h,f,c
  2060  00106C  50DF               	movf	indf2,w,c
  2061  00106E  0100               	movlb	0	; () banked
  2062  001070  0100               	movlb	0	; () banked
  2063  001072  6FBD               	movwf	(parser_lthread@data+4)& (0+255),b
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;Parser_thread.c: 50: i2c_configure_master(0x4F);
  2067  001074  0E4F               	movlw	79
  2068  001076  EC17  F00F         	call	_i2c_configure_master
  2069                           
  2070                           ;Parser_thread.c: 51: i2c_master_send(0x05,&data);
  2071  00107A  0100               	movlb	0	; () banked
  2072  00107C  0E00               	movlw	high parser_lthread@data
  2073  00107E  0100               	movlb	0	; () banked
  2074  001080  0100               	movlb	0	; () banked
  2075  001082  6FA8               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2076  001084  0100               	movlb	0	; () banked
  2077  001086  0EB9               	movlw	low parser_lthread@data
  2078  001088  0100               	movlb	0	; () banked
  2079  00108A  0100               	movlb	0	; () banked
  2080  00108C  6FA7               	movwf	i2c_master_send@msg& (0+255),b
  2081  00108E  0E05               	movlw	5
  2082  001090  EC4C  F00B         	call	_i2c_master_send
  2083                           
  2084                           ;Parser_thread.c: 52: }
  2085  001094  0012               	return	
  2086  001096                     l436:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;Parser_thread.c: 53: else if(Command == 0x00)
  2090  001096  0100               	movlb	0	; () banked
  2091  001098  0100               	movlb	0	; () banked
  2092  00109A  67BF               	tstfsz	parser_lthread@Command& (0+255),b
  2093  00109C  0012               	return	
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;Parser_thread.c: 54: {
  2097                           ;Parser_thread.c: 56: i2c_configure_master(0x4F);
  2098  00109E  0E4F               	movlw	79
  2099  0010A0  EC17  F00F         	call	_i2c_configure_master
  2100                           
  2101                           ;Parser_thread.c: 57: i2c_master_recv(5);
  2102  0010A4  0E05               	movlw	5
  2103  0010A6  EC78  F010         	call	_i2c_master_recv
  2104  0010AA  0012               	return	
  2105  0010AC                     __end_of_parser_lthread:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           indf2	equ	0xFDF
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _i2c_master_send *****************
  2119 ;; Defined at:
  2120 ;;		line 65 in file "source/my_i2c.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  length          1    wreg     unsigned char 
  2123 ;;  msg             2   39[BANK0 ] PTR unsigned char 
  2124 ;;		 -> parser_lthread@data(5), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  length          1   43[BANK0 ] unsigned char 
  2127 ;;  currentLengt    2   44[BANK0 ] unsigned int 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2137 ;;      Params:         0       2       0       0       0
  2138 ;;      Locals:         0       3       0       0       0
  2139 ;;      Temps:          0       2       0       0       0
  2140 ;;      Totals:         0       7       0       0       0
  2141 ;;Total ram usage:        7 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:   12
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_parser_lthread
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text5
  2152  001698                     __ptext5:
  2153                           	opt stack 0
  2154  001698                     _i2c_master_send:
  2155                           	opt stack 16
  2156                           
  2157                           ;incstack = 0
  2158                           ;i2c_master_send@length stored from wreg
  2159  001698  CFE8 F0AB          	movff	wreg,i2c_master_send@length
  2160                           
  2161                           ;my_i2c.c: 68: if (SSPSTATbits.READ_WRITE == 1){
  2162  00169C  B4C7               	btfsc	4039,2,c	;volatile
  2163  00169E  0012               	return	
  2164                           
  2165                           ;my_i2c.c: 70: }
  2166                           ;my_i2c.c: 73: unsigned int currentLength;
  2167                           ;my_i2c.c: 74: for (currentLength = 0; currentLength < length; currentLength++){
  2168                           
  2169                           ;my_i2c.c: 69: return -1;
  2170                           ;	Return value of _i2c_master_send is never used
  2171  0016A0  0E00               	movlw	0
  2172  0016A2  0100               	movlb	0	; () banked
  2173  0016A4  0100               	movlb	0	; () banked
  2174  0016A6  6FAD               	movwf	(i2c_master_send@currentLength+1)& (0+255),b
  2175  0016A8  0E00               	movlw	0
  2176  0016AA  0100               	movlb	0	; () banked
  2177  0016AC  6FAC               	movwf	i2c_master_send@currentLength& (0+255),b
  2178  0016AE  D02C               	goto	l2832
  2179  0016B0                     l2828:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;my_i2c.c: 75: ic_ptr->outbuffer[currentLength] = msg[currentLength];
  2183  0016B0  0100               	movlb	0	; () banked
  2184  0016B2  0100               	movlb	0	; () banked
  2185  0016B4  51AC               	movf	i2c_master_send@currentLength& (0+255),w,b
  2186  0016B6  0100               	movlb	0	; () banked
  2187  0016B8  0100               	movlb	0	; () banked
  2188  0016BA  25A7               	addwf	i2c_master_send@msg& (0+255),w,b
  2189  0016BC  6ED9               	movwf	fsr2l,c
  2190  0016BE  0100               	movlb	0	; () banked
  2191  0016C0  0100               	movlb	0	; () banked
  2192  0016C2  51AD               	movf	(i2c_master_send@currentLength+1)& (0+255),w,b
  2193  0016C4  0100               	movlb	0	; () banked
  2194  0016C6  0100               	movlb	0	; () banked
  2195  0016C8  21A8               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2196  0016CA  6EDA               	movwf	fsr2h,c
  2197  0016CC  0E1C               	movlw	28
  2198  0016CE  0100               	movlb	0	; () banked
  2199  0016D0  0100               	movlb	0	; () banked
  2200  0016D2  25AC               	addwf	i2c_master_send@currentLength& (0+255),w,b
  2201  0016D4  0100               	movlb	0	; () banked
  2202  0016D6  6FA9               	movwf	??_i2c_master_send& (0+255),b
  2203  0016D8  0E00               	movlw	0
  2204  0016DA  0100               	movlb	0	; () banked
  2205  0016DC  0100               	movlb	0	; () banked
  2206  0016DE  21AD               	addwfc	(i2c_master_send@currentLength+1)& (0+255),w,b
  2207  0016E0  0100               	movlb	0	; () banked
  2208  0016E2  6FAA               	movwf	(??_i2c_master_send+1)& (0+255),b
  2209  0016E4  0100               	movlb	0	; () banked
  2210  0016E6  51A9               	movf	??_i2c_master_send& (0+255),w,b
  2211  0016E8  0100               	movlb	0	; () banked
  2212  0016EA  0100               	movlb	0	; () banked
  2213  0016EC  25C6               	addwf	_ic_ptr& (0+255),w,b
  2214  0016EE  6EE1               	movwf	fsr1l,c
  2215  0016F0  0100               	movlb	0	; () banked
  2216  0016F2  51AA               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2217  0016F4  0100               	movlb	0	; () banked
  2218  0016F6  0100               	movlb	0	; () banked
  2219  0016F8  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2220  0016FA  6EE2               	movwf	fsr1h,c
  2221  0016FC  CFDF FFE7          	movff	indf2,indf1
  2222                           
  2223                           ; BSR set to: 0
  2224  001700  0100               	movlb	0	; () banked
  2225  001702  0100               	movlb	0	; () banked
  2226  001704  4BAC               	infsnz	i2c_master_send@currentLength& (0+255),f,b
  2227  001706  2BAD               	incf	(i2c_master_send@currentLength+1)& (0+255),f,b
  2228  001708                     l2832:
  2229                           
  2230                           ; BSR set to: 0
  2231  001708  0100               	movlb	0	; () banked
  2232  00170A  0100               	movlb	0	; () banked
  2233  00170C  51AB               	movf	i2c_master_send@length& (0+255),w,b
  2234  00170E  0100               	movlb	0	; () banked
  2235  001710  6FA9               	movwf	??_i2c_master_send& (0+255),b
  2236  001712  6BAA               	clrf	(??_i2c_master_send+1)& (0+255),b
  2237  001714  0100               	movlb	0	; () banked
  2238  001716  51A9               	movf	??_i2c_master_send& (0+255),w,b
  2239  001718  0100               	movlb	0	; () banked
  2240  00171A  0100               	movlb	0	; () banked
  2241  00171C  5DAC               	subwf	i2c_master_send@currentLength& (0+255),w,b
  2242  00171E  0100               	movlb	0	; () banked
  2243  001720  51AA               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2244  001722  0100               	movlb	0	; () banked
  2245  001724  0100               	movlb	0	; () banked
  2246  001726  59AD               	subwfb	(i2c_master_send@currentLength+1)& (0+255),w,b
  2247  001728  A0D8               	btfss	status,0,c
  2248  00172A  D7C2               	goto	l2828
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;my_i2c.c: 76: }
  2252                           ;my_i2c.c: 78: ic_ptr->outbuflen = length;
  2253                           
  2254                           ; BSR set to: 0
  2255  00172C  0100               	movlb	0	; () banked
  2256  00172E  EE20 F032          	lfsr	2,50
  2257  001732  0100               	movlb	0	; () banked
  2258  001734  51C6               	movf	_ic_ptr& (0+255),w,b
  2259  001736  26D9               	addwf	fsr2l,f,c
  2260  001738  0100               	movlb	0	; () banked
  2261  00173A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2262  00173C  22DA               	addwfc	fsr2h,f,c
  2263  00173E  0100               	movlb	0	; () banked
  2264  001740  C0AB  FFDF         	movff	i2c_master_send@length,indf2
  2265                           
  2266                           ;my_i2c.c: 79: ic_ptr->outbufind = 0;
  2267  001744  0100               	movlb	0	; () banked
  2268  001746  EE20 F033          	lfsr	2,51
  2269  00174A  0100               	movlb	0	; () banked
  2270  00174C  51C6               	movf	_ic_ptr& (0+255),w,b
  2271  00174E  26D9               	addwf	fsr2l,f,c
  2272  001750  0100               	movlb	0	; () banked
  2273  001752  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2274  001754  22DA               	addwfc	fsr2h,f,c
  2275  001756  0E00               	movlw	0
  2276  001758  6EDF               	movwf	indf2,c
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;my_i2c.c: 83: SSPCON2bits.RCEN = 0;
  2280  00175A  96C5               	bcf	4037,3,c	;volatile
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;my_i2c.c: 84: SSPCON2bits.SEN = 1;
  2284  00175C  80C5               	bsf	4037,0,c	;volatile
  2285                           
  2286                           ;my_i2c.c: 86: ic_ptr->status = 0x9;
  2287  00175E  0100               	movlb	0	; () banked
  2288  001760  EE20 F019          	lfsr	2,25
  2289  001764  0100               	movlb	0	; () banked
  2290  001766  51C6               	movf	_ic_ptr& (0+255),w,b
  2291  001768  26D9               	addwf	fsr2l,f,c
  2292  00176A  0100               	movlb	0	; () banked
  2293  00176C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2294  00176E  22DA               	addwfc	fsr2h,f,c
  2295  001770  0E09               	movlw	9
  2296  001772  6EDF               	movwf	indf2,c
  2297  001774  0012               	return	
  2298  001776                     __end_of_i2c_master_send:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           indf1	equ	0xFE7
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           indf2	equ	0xFDF
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _i2c_master_recv *****************
  2315 ;; Defined at:
  2316 ;;		line 104 in file "source/my_i2c.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  length          1    wreg     unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  length          1   39[BANK0 ] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      unsigned char 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2330 ;;      Params:         0       0       0       0       0
  2331 ;;      Locals:         0       1       0       0       0
  2332 ;;      Temps:          0       0       0       0       0
  2333 ;;      Totals:         0       1       0       0       0
  2334 ;;Total ram usage:        1 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:   12
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_parser_lthread
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text6
  2345  0020F0                     __ptext6:
  2346                           	opt stack 0
  2347  0020F0                     _i2c_master_recv:
  2348                           	opt stack 16
  2349                           
  2350                           ;incstack = 0
  2351                           ;i2c_master_recv@length stored from wreg
  2352  0020F0  CFE8 F0A7          	movff	wreg,i2c_master_recv@length
  2353                           
  2354                           ;my_i2c.c: 106: if (SSPSTATbits.READ_WRITE == 1){
  2355  0020F4  B4C7               	btfsc	4039,2,c	;volatile
  2356  0020F6  0012               	return	
  2357                           
  2358                           ;my_i2c.c: 108: }
  2359                           ;my_i2c.c: 110: ic_ptr->buflen = length;
  2360                           
  2361                           ;my_i2c.c: 107: return -1;
  2362                           ;	Return value of _i2c_master_recv is never used
  2363  0020F8  0100               	movlb	0	; () banked
  2364  0020FA  EE20 F016          	lfsr	2,22
  2365  0020FE  0100               	movlb	0	; () banked
  2366  002100  51C6               	movf	_ic_ptr& (0+255),w,b
  2367  002102  26D9               	addwf	fsr2l,f,c
  2368  002104  0100               	movlb	0	; () banked
  2369  002106  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2370  002108  22DA               	addwfc	fsr2h,f,c
  2371  00210A  0100               	movlb	0	; () banked
  2372  00210C  C0A7  FFDF         	movff	i2c_master_recv@length,indf2
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;my_i2c.c: 111: SSPCON2bits.RCEN = 1;
  2376  002110  86C5               	bsf	4037,3,c	;volatile
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;my_i2c.c: 112: SSPCON2bits.SEN = 1;
  2380  002112  80C5               	bsf	4037,0,c	;volatile
  2381                           
  2382                           ;my_i2c.c: 114: ic_ptr->status = 0x10;
  2383  002114  0100               	movlb	0	; () banked
  2384  002116  EE20 F019          	lfsr	2,25
  2385  00211A  0100               	movlb	0	; () banked
  2386  00211C  51C6               	movf	_ic_ptr& (0+255),w,b
  2387  00211E  26D9               	addwf	fsr2l,f,c
  2388  002120  0100               	movlb	0	; () banked
  2389  002122  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2390  002124  22DA               	addwfc	fsr2h,f,c
  2391  002126  0E10               	movlw	16
  2392  002128  6EDF               	movwf	indf2,c
  2393  00212A  0012               	return	
  2394  00212C                     __end_of_i2c_master_recv:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           indf1	equ	0xFE7
  2403                           fsr1h	equ	0xFE2
  2404                           fsr1l	equ	0xFE1
  2405                           indf2	equ	0xFDF
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _i2c_configure_master *****************
  2411 ;; Defined at:
  2412 ;;		line 22 in file "source/my_i2c.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  slave_addr      1    wreg     unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  slave_addr      1   40[BANK0 ] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2426 ;;      Params:         0       0       0       0       0
  2427 ;;      Locals:         0       1       0       0       0
  2428 ;;      Temps:          0       1       0       0       0
  2429 ;;      Totals:         0       2       0       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:   12
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_parser_lthread
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text7
  2441  001E2E                     __ptext7:
  2442                           	opt stack 0
  2443  001E2E                     _i2c_configure_master:
  2444                           	opt stack 16
  2445                           
  2446                           ;incstack = 0
  2447                           ;i2c_configure_master@slave_addr stored from wreg
  2448  001E2E  CFE8 F0A8          	movff	wreg,i2c_configure_master@slave_addr
  2449                           
  2450                           ;my_i2c.c: 23: i2c_mode = 1;
  2451  001E32  0100               	movlb	0	; () banked
  2452  001E34  6FA7               	movwf	??_i2c_configure_master& (0+255),b
  2453  001E36  0E01               	movlw	1
  2454  001E38  0100               	movlb	0	; () banked
  2455  001E3A  0100               	movlb	0	; () banked
  2456  001E3C  6FC8               	movwf	_i2c_mode& (0+255),b
  2457  001E3E  0100               	movlb	0	; () banked
  2458  001E40  51A7               	movf	??_i2c_configure_master& (0+255),w,b
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;my_i2c.c: 25: ic_ptr->slave_addr = slave_addr;
  2462  001E42  0100               	movlb	0	; () banked
  2463  001E44  EE20 F034          	lfsr	2,52
  2464  001E48  0100               	movlb	0	; () banked
  2465  001E4A  51C6               	movf	_ic_ptr& (0+255),w,b
  2466  001E4C  26D9               	addwf	fsr2l,f,c
  2467  001E4E  0100               	movlb	0	; () banked
  2468  001E50  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2469  001E52  22DA               	addwfc	fsr2h,f,c
  2470  001E54  0100               	movlb	0	; () banked
  2471  001E56  C0A8  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;my_i2c.c: 28: SSPCON1 = 0x0;
  2475  001E5A  0E00               	movlw	0
  2476  001E5C  6EC6               	movwf	4038,c	;volatile
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;my_i2c.c: 29: SSPCON2 = 0x0;
  2480  001E5E  0E00               	movlw	0
  2481  001E60  6EC5               	movwf	4037,c	;volatile
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;my_i2c.c: 30: SSPSTAT = 0x0;
  2485  001E62  0E00               	movlw	0
  2486  001E64  6EC7               	movwf	4039,c	;volatile
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;my_i2c.c: 33: SSPADD = 0x63;
  2490  001E66  0E63               	movlw	99
  2491  001E68  6EC8               	movwf	4040,c	;volatile
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;my_i2c.c: 36: SSPCON1bits.SSPM = 0x08;
  2495  001E6A  50C6               	movf	4038,w,c	;volatile
  2496  001E6C  0BF0               	andlw	-16
  2497  001E6E  0908               	iorlw	8
  2498  001E70  6EC6               	movwf	4038,c	;volatile
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;my_i2c.c: 37: SSPCON1bits.SSPEN = 1;
  2502  001E72  8AC6               	bsf	4038,5,c	;volatile
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;my_i2c.c: 40: SSPSTAT = 0b10000000;
  2506  001E74  0E80               	movlw	128
  2507  001E76  6EC7               	movwf	4039,c	;volatile
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;my_i2c.c: 43: LATCbits.LATC3 = 1;
  2511  001E78  868B               	bsf	3979,3,c	;volatile
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;my_i2c.c: 44: LATCbits.LATC4 = 1;
  2515  001E7A  888B               	bsf	3979,4,c	;volatile
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;my_i2c.c: 45: TRISCbits.TRISC3 = 1;
  2519  001E7C  8694               	bsf	3988,3,c	;volatile
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;my_i2c.c: 46: TRISCbits.TRISC4 = 1;
  2523  001E7E  8894               	bsf	3988,4,c	;volatile
  2524                           
  2525                           ; BSR set to: 0
  2526  001E80  0012               	return	
  2527  001E82                     __end_of_i2c_configure_master:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           postinc0	equ	0xFEE
  2534                           wreg	equ	0xFE8
  2535                           indf1	equ	0xFE7
  2536                           fsr1h	equ	0xFE2
  2537                           fsr1l	equ	0xFE1
  2538                           indf2	equ	0xFDF
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _init_uart_recv *****************
  2544 ;; Defined at:
  2545 ;;		line 52 in file "source/my_uart.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  uc              2   39[BANK0 ] PTR struct __uart_comm
  2548 ;;		 -> main@uc(23), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2560 ;;      Params:         0       2       0       0       0
  2561 ;;      Locals:         0       0       0       0       0
  2562 ;;      Temps:          0       1       0       0       0
  2563 ;;      Totals:         0       3       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:   12
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text8
  2575  0021F6                     __ptext8:
  2576                           	opt stack 0
  2577  0021F6                     _init_uart_recv:
  2578                           	opt stack 17
  2579                           
  2580                           ;my_uart.c: 53: uc_ptr = uc;
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;incstack = 0
  2584  0021F6  0100               	movlb	0	; () banked
  2585  0021F8  C0A8  F04C         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2586  0021FC  0100               	movlb	0	; () banked
  2587  0021FE  C0A7  F04B         	movff	init_uart_recv@uc,_uc_ptr
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;my_uart.c: 54: uc_ptr->buflen = 0;
  2591  002202  EE20 F016          	lfsr	2,22
  2592  002206  504B               	movf	_uc_ptr,w,c
  2593  002208  26D9               	addwf	fsr2l,f,c
  2594  00220A  504C               	movf	_uc_ptr+1,w,c
  2595  00220C  22DA               	addwfc	fsr2h,f,c
  2596  00220E  0E00               	movlw	0
  2597  002210  6EDF               	movwf	indf2,c
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;my_uart.c: 55: State = MSGID;
  2601  002212  0100               	movlb	0	; () banked
  2602  002214  6FA9               	movwf	??_init_uart_recv& (0+255),b
  2603  002216  0E01               	movlw	1
  2604  002218  6E4D               	movwf	_State,c
  2605  00221A  0100               	movlb	0	; () banked
  2606  00221C  51A9               	movf	??_init_uart_recv& (0+255),w,b
  2607                           
  2608                           ; BSR set to: 0
  2609  00221E  0012               	return	
  2610  002220                     __end_of_init_uart_recv:
  2611                           	opt stack 0
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           indf1	equ	0xFE7
  2619                           fsr1h	equ	0xFE2
  2620                           fsr1l	equ	0xFE1
  2621                           indf2	equ	0xFDF
  2622                           fsr2h	equ	0xFDA
  2623                           fsr2l	equ	0xFD9
  2624                           status	equ	0xFD8
  2625                           
  2626 ;; *************** function _init_timer1_lthread *****************
  2627 ;; Defined at:
  2628 ;;		line 6 in file "source/timer1_thread.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  tptr            2   39[BANK0 ] PTR struct __timer1_thre
  2631 ;;		 -> main@t1thread_data(2), 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;		None               void
  2636 ;; Registers used:
  2637 ;;		wreg, fsr2l, fsr2h
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2643 ;;      Params:         0       2       0       0       0
  2644 ;;      Locals:         0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0
  2646 ;;      Totals:         0       2       0       0       0
  2647 ;;Total ram usage:        2 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:   12
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text9
  2658  0022E6                     __ptext9:
  2659                           	opt stack 0
  2660  0022E6                     _init_timer1_lthread:
  2661                           	opt stack 17
  2662                           
  2663                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;incstack = 0
  2667  0022E6  C0A7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2668  0022EA  C0A8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2669  0022EE  0E00               	movlw	0
  2670  0022F0  6EDE               	movwf	postinc2,c
  2671  0022F2  0E00               	movlw	0
  2672  0022F4  6EDD               	movwf	postdec2,c
  2673  0022F6  0012               	return	
  2674  0022F8                     __end_of_init_timer1_lthread:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           indf1	equ	0xFE7
  2683                           fsr1h	equ	0xFE2
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           postinc2	equ	0xFDE
  2687                           postdec2	equ	0xFDD
  2688                           fsr2h	equ	0xFDA
  2689                           fsr2l	equ	0xFD9
  2690                           status	equ	0xFD8
  2691                           
  2692 ;; *************** function _init_queues *****************
  2693 ;; Defined at:
  2694 ;;		line 194 in file "source/messages.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       1       0       0       0
  2711 ;;      Totals:         0       1       0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:   13
  2715 ;; This function calls:
  2716 ;;		_init_queue
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text10
  2723  001D06                     __ptext10:
  2724                           	opt stack 0
  2725  001D06                     _init_queues:
  2726                           	opt stack 16
  2727                           
  2728                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2729                           
  2730                           ;incstack = 0
  2731  001D06  0100               	movlb	0	; () banked
  2732  001D08  6FAB               	movwf	??_init_queues& (0+255),b
  2733  001D0A  0E00               	movlw	0
  2734  001D0C  6E49               	movwf	_MQ_Main_Willing_to_block,c
  2735  001D0E  0100               	movlb	0	; () banked
  2736  001D10  51AB               	movf	??_init_queues& (0+255),w,b
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2740  001D12  0101               	movlb	1	; () banked
  2741  001D14  0E01               	movlw	high _ToMainLow_MQ
  2742  001D16  0100               	movlb	0	; () banked
  2743  001D18  0100               	movlb	0	; () banked
  2744  001D1A  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2745  001D1C  0101               	movlb	1	; () banked
  2746  001D1E  0E84               	movlw	low _ToMainLow_MQ
  2747  001D20  0100               	movlb	0	; () banked
  2748  001D22  0100               	movlb	0	; () banked
  2749  001D24  6FA7               	movwf	init_queue@qptr& (0+255),b
  2750  001D26  EC46  F00E         	call	_init_queue	;wreg free
  2751                           
  2752                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2753  001D2A  0102               	movlb	2	; () banked
  2754  001D2C  0E02               	movlw	high _ToMainHigh_MQ
  2755  001D2E  0100               	movlb	0	; () banked
  2756  001D30  0100               	movlb	0	; () banked
  2757  001D32  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2758  001D34  0102               	movlb	2	; () banked
  2759  001D36  0E66               	movlw	low _ToMainHigh_MQ
  2760  001D38  0100               	movlb	0	; () banked
  2761  001D3A  0100               	movlb	0	; () banked
  2762  001D3C  6FA7               	movwf	init_queue@qptr& (0+255),b
  2763  001D3E  EC46  F00E         	call	_init_queue	;wreg free
  2764                           
  2765                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2766  001D42  0102               	movlb	2	; () banked
  2767  001D44  0E02               	movlw	high _FromMainLow_MQ
  2768  001D46  0100               	movlb	0	; () banked
  2769  001D48  0100               	movlb	0	; () banked
  2770  001D4A  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2771  001D4C  0102               	movlb	2	; () banked
  2772  001D4E  0E00               	movlw	low _FromMainLow_MQ
  2773  001D50  0100               	movlb	0	; () banked
  2774  001D52  0100               	movlb	0	; () banked
  2775  001D54  6FA7               	movwf	init_queue@qptr& (0+255),b
  2776  001D56  EC46  F00E         	call	_init_queue	;wreg free
  2777                           
  2778                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2779  001D5A  0103               	movlb	3	; () banked
  2780  001D5C  0E03               	movlw	high _FromMainHigh_MQ
  2781  001D5E  0100               	movlb	0	; () banked
  2782  001D60  0100               	movlb	0	; () banked
  2783  001D62  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2784  001D64  0103               	movlb	3	; () banked
  2785  001D66  0E00               	movlw	low _FromMainHigh_MQ
  2786  001D68  0100               	movlb	0	; () banked
  2787  001D6A  0100               	movlb	0	; () banked
  2788  001D6C  6FA7               	movwf	init_queue@qptr& (0+255),b
  2789  001D6E  EC46  F00E         	call	_init_queue	;wreg free
  2790  001D72  0012               	return	
  2791  001D74                     __end_of_init_queues:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           indf1	equ	0xFE7
  2800                           fsr1h	equ	0xFE2
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           postinc2	equ	0xFDE
  2804                           postdec2	equ	0xFDD
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _init_queue *****************
  2810 ;; Defined at:
  2811 ;;		line 14 in file "source/messages.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  2814 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  i               1   42[BANK0 ] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2826 ;;      Params:         0       2       0       0       0
  2827 ;;      Locals:         0       1       0       0       0
  2828 ;;      Temps:          0       1       0       0       0
  2829 ;;      Totals:         0       4       0       0       0
  2830 ;;Total ram usage:        4 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:   12
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_init_queues
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text11
  2841  001C8C                     __ptext11:
  2842                           	opt stack 0
  2843  001C8C                     _init_queue:
  2844                           	opt stack 16
  2845                           
  2846                           ;messages.c: 15: unsigned char i;
  2847                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2848                           
  2849                           ;incstack = 0
  2850  001C8C  0100               	movlb	0	; () banked
  2851  001C8E  EE20 F064          	lfsr	2,100
  2852  001C92  0100               	movlb	0	; () banked
  2853  001C94  51A7               	movf	init_queue@qptr& (0+255),w,b
  2854  001C96  26D9               	addwf	fsr2l,f,c
  2855  001C98  0100               	movlb	0	; () banked
  2856  001C9A  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2857  001C9C  22DA               	addwfc	fsr2h,f,c
  2858  001C9E  0E00               	movlw	0
  2859  001CA0  6EDF               	movwf	indf2,c
  2860                           
  2861                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2862  001CA2  0100               	movlb	0	; () banked
  2863  001CA4  EE20 F065          	lfsr	2,101
  2864  001CA8  0100               	movlb	0	; () banked
  2865  001CAA  51A7               	movf	init_queue@qptr& (0+255),w,b
  2866  001CAC  26D9               	addwf	fsr2l,f,c
  2867  001CAE  0100               	movlb	0	; () banked
  2868  001CB0  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2869  001CB2  22DA               	addwfc	fsr2h,f,c
  2870  001CB4  0E00               	movlw	0
  2871  001CB6  6EDF               	movwf	indf2,c
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2875  001CB8  0100               	movlb	0	; () banked
  2876  001CBA  6FA9               	movwf	??_init_queue& (0+255),b
  2877  001CBC  0E00               	movlw	0
  2878  001CBE  0100               	movlb	0	; () banked
  2879  001CC0  0100               	movlb	0	; () banked
  2880  001CC2  6FAA               	movwf	init_queue@i& (0+255),b
  2881  001CC4  0100               	movlb	0	; () banked
  2882  001CC6  51A9               	movf	??_init_queue& (0+255),w,b
  2883                           
  2884                           ; BSR set to: 0
  2885  001CC8  0E03               	movlw	3
  2886  001CCA  0100               	movlb	0	; () banked
  2887  001CCC  0100               	movlb	0	; () banked
  2888  001CCE  65AA               	cpfsgt	init_queue@i& (0+255),b
  2889  001CD0  D001               	goto	l2686
  2890  001CD2  0012               	return	
  2891  001CD4                     l2686:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;messages.c: 20: qptr->queue[i].full = 0;
  2895  001CD4  0100               	movlb	0	; () banked
  2896  001CD6  0100               	movlb	0	; () banked
  2897  001CD8  51AA               	movf	init_queue@i& (0+255),w,b
  2898  001CDA  0D19               	mullw	25
  2899  001CDC  50F3               	movf	prodl,w,c
  2900  001CDE  0100               	movlb	0	; () banked
  2901  001CE0  0100               	movlb	0	; () banked
  2902  001CE2  25A7               	addwf	init_queue@qptr& (0+255),w,b
  2903  001CE4  6ED9               	movwf	fsr2l,c
  2904  001CE6  50F4               	movf	prodh,w,c
  2905  001CE8  0100               	movlb	0	; () banked
  2906  001CEA  0100               	movlb	0	; () banked
  2907  001CEC  21A8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2908  001CEE  6EDA               	movwf	fsr2h,c
  2909  001CF0  0E00               	movlw	0
  2910  001CF2  6EDF               	movwf	indf2,c
  2911                           
  2912                           ; BSR set to: 0
  2913  001CF4  0100               	movlb	0	; () banked
  2914  001CF6  0100               	movlb	0	; () banked
  2915  001CF8  2BAA               	incf	init_queue@i& (0+255),f,b
  2916                           
  2917                           ; BSR set to: 0
  2918  001CFA  0E03               	movlw	3
  2919  001CFC  0100               	movlb	0	; () banked
  2920  001CFE  0100               	movlb	0	; () banked
  2921  001D00  65AA               	cpfsgt	init_queue@i& (0+255),b
  2922  001D02  D7E8               	goto	l2686
  2923  001D04  0012               	return	
  2924  001D06                     __end_of_init_queue:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           postinc0	equ	0xFEE
  2933                           wreg	equ	0xFE8
  2934                           indf1	equ	0xFE7
  2935                           fsr1h	equ	0xFE2
  2936                           fsr1l	equ	0xFE1
  2937                           indf2	equ	0xFDF
  2938                           postinc2	equ	0xFDE
  2939                           postdec2	equ	0xFDD
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function _init_i2c *****************
  2945 ;; Defined at:
  2946 ;;		line 378 in file "source/my_i2c.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  ic              2   39[BANK0 ] PTR struct __i2c_comm
  2949 ;;		 -> main@ic(77), 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;		None               void
  2954 ;; Registers used:
  2955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2961 ;;      Params:         0       2       0       0       0
  2962 ;;      Locals:         0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0
  2964 ;;      Totals:         0       2       0       0       0
  2965 ;;Total ram usage:        2 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:   12
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text12
  2976  001776                     __ptext12:
  2977                           	opt stack 0
  2978  001776                     _init_i2c:
  2979                           	opt stack 17
  2980                           
  2981                           ;my_i2c.c: 379: ic_ptr = ic;
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;incstack = 0
  2985  001776  0100               	movlb	0	; () banked
  2986  001778  0100               	movlb	0	; () banked
  2987  00177A  C0A8  F0C7         	movff	init_i2c@ic+1,_ic_ptr+1
  2988  00177E  0100               	movlb	0	; () banked
  2989  001780  0100               	movlb	0	; () banked
  2990  001782  C0A7  F0C6         	movff	init_i2c@ic,_ic_ptr
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;my_i2c.c: 380: ic_ptr->buffer[0] = 0;
  2994  001786  C0C6  FFD9         	movff	_ic_ptr,fsr2l
  2995  00178A  C0C7  FFDA         	movff	_ic_ptr+1,fsr2h
  2996  00178E  0E00               	movlw	0
  2997  001790  6EDF               	movwf	indf2,c
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;my_i2c.c: 381: ic_ptr->buffer[1] = 0;
  3001  001792  0100               	movlb	0	; () banked
  3002  001794  EE20 F001          	lfsr	2,1
  3003  001798  0100               	movlb	0	; () banked
  3004  00179A  51C6               	movf	_ic_ptr& (0+255),w,b
  3005  00179C  26D9               	addwf	fsr2l,f,c
  3006  00179E  0100               	movlb	0	; () banked
  3007  0017A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3008  0017A2  22DA               	addwfc	fsr2h,f,c
  3009  0017A4  0E00               	movlw	0
  3010  0017A6  6EDF               	movwf	indf2,c
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;my_i2c.c: 382: ic_ptr->buffer[2] = 0;
  3014  0017A8  0100               	movlb	0	; () banked
  3015  0017AA  EE20 F002          	lfsr	2,2
  3016  0017AE  0100               	movlb	0	; () banked
  3017  0017B0  51C6               	movf	_ic_ptr& (0+255),w,b
  3018  0017B2  26D9               	addwf	fsr2l,f,c
  3019  0017B4  0100               	movlb	0	; () banked
  3020  0017B6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3021  0017B8  22DA               	addwfc	fsr2h,f,c
  3022  0017BA  0E00               	movlw	0
  3023  0017BC  6EDF               	movwf	indf2,c
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;my_i2c.c: 383: ic_ptr->buflen = 0;
  3027  0017BE  0100               	movlb	0	; () banked
  3028  0017C0  EE20 F016          	lfsr	2,22
  3029  0017C4  0100               	movlb	0	; () banked
  3030  0017C6  51C6               	movf	_ic_ptr& (0+255),w,b
  3031  0017C8  26D9               	addwf	fsr2l,f,c
  3032  0017CA  0100               	movlb	0	; () banked
  3033  0017CC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3034  0017CE  22DA               	addwfc	fsr2h,f,c
  3035  0017D0  0E00               	movlw	0
  3036  0017D2  6EDF               	movwf	indf2,c
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;my_i2c.c: 384: ic_ptr->event_count = 0;
  3040  0017D4  0100               	movlb	0	; () banked
  3041  0017D6  EE20 F018          	lfsr	2,24
  3042  0017DA  0100               	movlb	0	; () banked
  3043  0017DC  51C6               	movf	_ic_ptr& (0+255),w,b
  3044  0017DE  26D9               	addwf	fsr2l,f,c
  3045  0017E0  0100               	movlb	0	; () banked
  3046  0017E2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3047  0017E4  22DA               	addwfc	fsr2h,f,c
  3048  0017E6  0E00               	movlw	0
  3049  0017E8  6EDF               	movwf	indf2,c
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;my_i2c.c: 385: ic_ptr->status = 0x5;
  3053  0017EA  0100               	movlb	0	; () banked
  3054  0017EC  EE20 F019          	lfsr	2,25
  3055  0017F0  0100               	movlb	0	; () banked
  3056  0017F2  51C6               	movf	_ic_ptr& (0+255),w,b
  3057  0017F4  26D9               	addwf	fsr2l,f,c
  3058  0017F6  0100               	movlb	0	; () banked
  3059  0017F8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3060  0017FA  22DA               	addwfc	fsr2h,f,c
  3061  0017FC  0E05               	movlw	5
  3062  0017FE  6EDF               	movwf	indf2,c
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;my_i2c.c: 386: ic_ptr->error_count = 0;
  3066  001800  0100               	movlb	0	; () banked
  3067  001802  EE20 F01B          	lfsr	2,27
  3068  001806  0100               	movlb	0	; () banked
  3069  001808  51C6               	movf	_ic_ptr& (0+255),w,b
  3070  00180A  26D9               	addwf	fsr2l,f,c
  3071  00180C  0100               	movlb	0	; () banked
  3072  00180E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3073  001810  22DA               	addwfc	fsr2h,f,c
  3074  001812  0E00               	movlw	0
  3075  001814  6EDF               	movwf	indf2,c
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;my_i2c.c: 387: ic_ptr->sendBufInd = 0;
  3079  001816  0100               	movlb	0	; () banked
  3080  001818  EE20 F04C          	lfsr	2,76
  3081  00181C  0100               	movlb	0	; () banked
  3082  00181E  51C6               	movf	_ic_ptr& (0+255),w,b
  3083  001820  26D9               	addwf	fsr2l,f,c
  3084  001822  0100               	movlb	0	; () banked
  3085  001824  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3086  001826  22DA               	addwfc	fsr2h,f,c
  3087  001828  0E00               	movlw	0
  3088  00182A  6EDF               	movwf	indf2,c
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;my_i2c.c: 388: ic_ptr->sendBufLen = 0;
  3092  00182C  0100               	movlb	0	; () banked
  3093  00182E  EE20 F04B          	lfsr	2,75
  3094  001832  0100               	movlb	0	; () banked
  3095  001834  51C6               	movf	_ic_ptr& (0+255),w,b
  3096  001836  26D9               	addwf	fsr2l,f,c
  3097  001838  0100               	movlb	0	; () banked
  3098  00183A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  3099  00183C  22DA               	addwfc	fsr2h,f,c
  3100  00183E  0E00               	movlw	0
  3101  001840  6EDF               	movwf	indf2,c
  3102                           
  3103                           ; BSR set to: 0
  3104  001842  0012               	return	
  3105  001844                     __end_of_init_i2c:
  3106                           	opt stack 0
  3107                           tblptru	equ	0xFF8
  3108                           tblptrh	equ	0xFF7
  3109                           tblptrl	equ	0xFF6
  3110                           tablat	equ	0xFF5
  3111                           prodh	equ	0xFF4
  3112                           prodl	equ	0xFF3
  3113                           postinc0	equ	0xFEE
  3114                           wreg	equ	0xFE8
  3115                           indf1	equ	0xFE7
  3116                           fsr1h	equ	0xFE2
  3117                           fsr1l	equ	0xFE1
  3118                           indf2	equ	0xFDF
  3119                           postinc2	equ	0xFDE
  3120                           postdec2	equ	0xFDD
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8
  3124                           
  3125 ;; *************** function _enable_interrupts *****************
  3126 ;; Defined at:
  3127 ;;		line 14 in file "source/interrupts.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;		None               void
  3134 ;; Registers used:
  3135 ;;		None
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:   12
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text13
  3156  00234C                     __ptext13:
  3157                           	opt stack 0
  3158  00234C                     _enable_interrupts:
  3159                           	opt stack 17
  3160                           
  3161                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;incstack = 0
  3165  00234C  8ED0               	bsf	4048,7,c	;volatile
  3166                           
  3167                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3168  00234E  8EF2               	bsf	intcon,7,c	;volatile
  3169                           
  3170                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3171  002350  8CF2               	bsf	intcon,6,c	;volatile
  3172  002352  0012               	return	
  3173  002354                     __end_of_enable_interrupts:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           indf1	equ	0xFE7
  3185                           fsr1h	equ	0xFE2
  3186                           fsr1l	equ	0xFE1
  3187                           indf2	equ	0xFDF
  3188                           postinc2	equ	0xFDE
  3189                           postdec2	equ	0xFDD
  3190                           fsr2h	equ	0xFDA
  3191                           fsr2l	equ	0xFD9
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _block_on_To_msgqueues *****************
  3195 ;; Defined at:
  3196 ;;		line 258 in file "source/messages.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;		None               void
  3203 ;; Registers used:
  3204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3210 ;;      Params:         0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0
  3212 ;;      Temps:          0       1       0       0       0
  3213 ;;      Totals:         0       1       0       0       0
  3214 ;;Total ram usage:        1 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:   15
  3217 ;; This function calls:
  3218 ;;		_Delay1KTCYx
  3219 ;;		_check_msg
  3220 ;;		_in_main
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text14
  3227  001C0E                     __ptext14:
  3228                           	opt stack 0
  3229  001C0E                     _block_on_To_msgqueues:
  3230                           	opt stack 14
  3231                           
  3232                           ;messages.c: 259: if (!in_main()) {
  3233                           
  3234                           ;incstack = 0
  3235  001C0E  ECB3  F00F         	call	_in_main	;wreg free
  3236  001C12  0100               	movlb	0	; () banked
  3237  001C14  0100               	movlb	0	; () banked
  3238  001C16  51AC               	movf	(?_in_main+1)& (0+255),w,b
  3239  001C18  0100               	movlb	0	; () banked
  3240  001C1A  11AB               	iorwf	?_in_main& (0+255),w,b
  3241  001C1C  B4D8               	btfsc	status,2,c
  3242  001C1E  0012               	return	
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;messages.c: 261: }
  3246                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3247                           
  3248                           ; BSR set to: 0
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;messages.c: 260: return;
  3252  001C20  0100               	movlb	0	; () banked
  3253  001C22  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3254  001C24  0E01               	movlw	1
  3255  001C26  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3256  001C28  0100               	movlb	0	; () banked
  3257  001C2A  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3258  001C2C                     l2584:
  3259                           
  3260                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3261  001C2C  0102               	movlb	2	; () banked
  3262  001C2E  0E02               	movlw	high _ToMainHigh_MQ
  3263  001C30  0100               	movlb	0	; () banked
  3264  001C32  0100               	movlb	0	; () banked
  3265  001C34  6FA8               	movwf	(check_msg@qptr+1)& (0+255),b
  3266  001C36  0102               	movlb	2	; () banked
  3267  001C38  0E66               	movlw	low _ToMainHigh_MQ
  3268  001C3A  0100               	movlb	0	; () banked
  3269  001C3C  0100               	movlb	0	; () banked
  3270  001C3E  6FA7               	movwf	check_msg@qptr& (0+255),b
  3271  001C40  EC96  F010         	call	_check_msg	;wreg free
  3272  001C44  0900               	iorlw	0
  3273  001C46  B4D8               	btfsc	status,2,c
  3274  001C48  D007               	goto	l2590
  3275                           
  3276                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3277  001C4A  0100               	movlb	0	; () banked
  3278  001C4C  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3279  001C4E  0E00               	movlw	0
  3280  001C50  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3281  001C52  0100               	movlb	0	; () banked
  3282  001C54  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3283  001C56  0012               	return	
  3284  001C58                     l2590:
  3285                           
  3286                           ;messages.c: 271: }
  3287                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3288  001C58  0101               	movlb	1	; () banked
  3289  001C5A  0E01               	movlw	high _ToMainLow_MQ
  3290  001C5C  0100               	movlb	0	; () banked
  3291  001C5E  0100               	movlb	0	; () banked
  3292  001C60  6FA8               	movwf	(check_msg@qptr+1)& (0+255),b
  3293  001C62  0101               	movlb	1	; () banked
  3294  001C64  0E84               	movlw	low _ToMainLow_MQ
  3295  001C66  0100               	movlb	0	; () banked
  3296  001C68  0100               	movlb	0	; () banked
  3297  001C6A  6FA7               	movwf	check_msg@qptr& (0+255),b
  3298  001C6C  EC96  F010         	call	_check_msg	;wreg free
  3299  001C70  0900               	iorlw	0
  3300  001C72  B4D8               	btfsc	status,2,c
  3301  001C74  D007               	goto	l2596
  3302                           
  3303                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3304  001C76  0100               	movlb	0	; () banked
  3305  001C78  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3306  001C7A  0E00               	movlw	0
  3307  001C7C  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3308  001C7E  0100               	movlb	0	; () banked
  3309  001C80  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3310  001C82  0012               	return	
  3311  001C84                     l2596:
  3312                           
  3313                           ;messages.c: 278: }
  3314                           ;messages.c: 279: Delay1KTCYx(10);
  3315  001C84  0E0A               	movlw	10
  3316  001C86  EC55  F011         	call	_Delay1KTCYx
  3317  001C8A  D7D0               	goto	l2584
  3318  001C8C                     __end_of_block_on_To_msgqueues:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           indf1	equ	0xFE7
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _in_main *****************
  3340 ;; Defined at:
  3341 ;;		line 40 in file "source/interrupts.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2   43[BANK0 ] int 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3355 ;;      Params:         0       2       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       2       0       0       0
  3359 ;;Total ram usage:        2 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:   14
  3362 ;; This function calls:
  3363 ;;		_in_high_int
  3364 ;;		_in_low_int
  3365 ;; This function is called by:
  3366 ;;		_block_on_To_msgqueues
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text15
  3371  001F66                     __ptext15:
  3372                           	opt stack 0
  3373  001F66                     _in_main:
  3374                           	opt stack 14
  3375                           
  3376                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3377                           
  3378                           ;incstack = 0
  3379  001F66  EC90  F00F         	call	_in_low_int	;wreg free
  3380  001F6A  0100               	movlb	0	; () banked
  3381  001F6C  0100               	movlb	0	; () banked
  3382  001F6E  51AA               	movf	(?_in_low_int+1)& (0+255),w,b
  3383  001F70  0100               	movlb	0	; () banked
  3384  001F72  11A9               	iorwf	?_in_low_int& (0+255),w,b
  3385  001F74  A4D8               	btfss	status,2,c
  3386  001F76  D011               	goto	l2372
  3387                           
  3388                           ; BSR set to: 0
  3389  001F78  EC7C  F011         	call	_in_high_int	;wreg free
  3390  001F7C  0100               	movlb	0	; () banked
  3391  001F7E  0100               	movlb	0	; () banked
  3392  001F80  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3393  001F82  0100               	movlb	0	; () banked
  3394  001F84  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3395  001F86  A4D8               	btfss	status,2,c
  3396  001F88  D008               	goto	l2372
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;interrupts.c: 42: return (1);
  3400  001F8A  0E00               	movlw	0
  3401  001F8C  0100               	movlb	0	; () banked
  3402  001F8E  0100               	movlb	0	; () banked
  3403  001F90  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3404  001F92  0E01               	movlw	1
  3405  001F94  0100               	movlb	0	; () banked
  3406  001F96  6FAB               	movwf	?_in_main& (0+255),b
  3407  001F98  0012               	return	
  3408  001F9A                     l2372:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;interrupts.c: 44: return (0);
  3412  001F9A  0E00               	movlw	0
  3413  001F9C  0100               	movlb	0	; () banked
  3414  001F9E  0100               	movlb	0	; () banked
  3415  001FA0  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3416  001FA2  0E00               	movlw	0
  3417  001FA4  0100               	movlb	0	; () banked
  3418  001FA6  6FAB               	movwf	?_in_main& (0+255),b
  3419  001FA8  0012               	return	
  3420  001FAA                     __end_of_in_main:
  3421                           	opt stack 0
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           prodh	equ	0xFF4
  3427                           prodl	equ	0xFF3
  3428                           intcon	equ	0xFF2
  3429                           postinc0	equ	0xFEE
  3430                           wreg	equ	0xFE8
  3431                           indf1	equ	0xFE7
  3432                           fsr1h	equ	0xFE2
  3433                           fsr1l	equ	0xFE1
  3434                           indf2	equ	0xFDF
  3435                           postinc2	equ	0xFDE
  3436                           postdec2	equ	0xFDD
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function _in_low_int *****************
  3442 ;; Defined at:
  3443 ;;		line 30 in file "source/interrupts.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2   41[BANK0 ] int 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3457 ;;      Params:         0       2       0       0       0
  3458 ;;      Locals:         0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0
  3460 ;;      Totals:         0       2       0       0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:   13
  3464 ;; This function calls:
  3465 ;;		_in_high_int
  3466 ;; This function is called by:
  3467 ;;		_in_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text16
  3472  001F20                     __ptext16:
  3473                           	opt stack 0
  3474  001F20                     _in_low_int:
  3475                           	opt stack 14
  3476                           
  3477                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;incstack = 0
  3481  001F20  ACF2               	btfss	intcon,6,c	;volatile
  3482  001F22  D008               	goto	l2350
  3483                           
  3484                           ;interrupts.c: 32: return (0);
  3485  001F24  0E00               	movlw	0
  3486  001F26  0100               	movlb	0	; () banked
  3487  001F28  0100               	movlb	0	; () banked
  3488  001F2A  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3489  001F2C  0E00               	movlw	0
  3490  001F2E  0100               	movlb	0	; () banked
  3491  001F30  6FA9               	movwf	?_in_low_int& (0+255),b
  3492  001F32  0012               	return	
  3493  001F34                     l2350:
  3494  001F34  EC7C  F011         	call	_in_high_int	;wreg free
  3495  001F38  0100               	movlb	0	; () banked
  3496  001F3A  0100               	movlb	0	; () banked
  3497  001F3C  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3498  001F3E  0100               	movlb	0	; () banked
  3499  001F40  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3500  001F42  B4D8               	btfsc	status,2,c
  3501  001F44  D008               	goto	l2358
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;interrupts.c: 34: return (0);
  3505  001F46  0E00               	movlw	0
  3506  001F48  0100               	movlb	0	; () banked
  3507  001F4A  0100               	movlb	0	; () banked
  3508  001F4C  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3509  001F4E  0E00               	movlw	0
  3510  001F50  0100               	movlb	0	; () banked
  3511  001F52  6FA9               	movwf	?_in_low_int& (0+255),b
  3512  001F54  0012               	return	
  3513  001F56                     l2358:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;interrupts.c: 36: return (1);
  3517  001F56  0E00               	movlw	0
  3518  001F58  0100               	movlb	0	; () banked
  3519  001F5A  0100               	movlb	0	; () banked
  3520  001F5C  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3521  001F5E  0E01               	movlw	1
  3522  001F60  0100               	movlb	0	; () banked
  3523  001F62  6FA9               	movwf	?_in_low_int& (0+255),b
  3524  001F64  0012               	return	
  3525  001F66                     __end_of_in_low_int:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           indf1	equ	0xFE7
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           postinc2	equ	0xFDE
  3541                           postdec2	equ	0xFDD
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _in_high_int *****************
  3547 ;; Defined at:
  3548 ;;		line 22 in file "source/interrupts.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2   39[BANK0 ] int 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3562 ;;      Params:         0       2       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       2       0       0       0
  3566 ;;Total ram usage:        2 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:   12
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_in_low_int
  3573 ;;		_in_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text17
  3578  0022F8                     __ptext17:
  3579                           	opt stack 0
  3580  0022F8                     _in_high_int:
  3581                           	opt stack 14
  3582                           
  3583                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;incstack = 0
  3587  0022F8  0E00               	movlw	0
  3588  0022FA  AEF2               	btfss	intcon,7,c	;volatile
  3589  0022FC  0E01               	movlw	1
  3590  0022FE  0100               	movlb	0	; () banked
  3591  002300  0100               	movlb	0	; () banked
  3592  002302  6FA7               	movwf	?_in_high_int& (0+255),b
  3593  002304  0100               	movlb	0	; () banked
  3594  002306  6BA8               	clrf	(?_in_high_int+1)& (0+255),b
  3595  002308  0012               	return	
  3596  00230A                     __end_of_in_high_int:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           prodh	equ	0xFF4
  3603                           prodl	equ	0xFF3
  3604                           intcon	equ	0xFF2
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           indf1	equ	0xFE7
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _check_msg *****************
  3618 ;; Defined at:
  3619 ;;		line 222 in file "source/messages.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3622 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      unsigned char 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3634 ;;      Params:         0       2       0       0       0
  3635 ;;      Locals:         0       0       0       0       0
  3636 ;;      Temps:          0       1       0       0       0
  3637 ;;      Totals:         0       3       0       0       0
  3638 ;;Total ram usage:        3 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:   12
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_block_on_To_msgqueues
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text18
  3649  00212C                     __ptext18:
  3650                           	opt stack 0
  3651  00212C                     _check_msg:
  3652                           	opt stack 16
  3653                           
  3654                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;incstack = 0
  3658  00212C  0100               	movlb	0	; () banked
  3659  00212E  EE20 F065          	lfsr	2,101
  3660  002132  0100               	movlb	0	; () banked
  3661  002134  51A7               	movf	check_msg@qptr& (0+255),w,b
  3662  002136  26D9               	addwf	fsr2l,f,c
  3663  002138  0100               	movlb	0	; () banked
  3664  00213A  51A8               	movf	(check_msg@qptr+1)& (0+255),w,b
  3665  00213C  22DA               	addwfc	fsr2h,f,c
  3666  00213E  50DF               	movf	indf2,w,c
  3667  002140  0100               	movlb	0	; () banked
  3668  002142  6FA9               	movwf	??_check_msg& (0+255),b
  3669  002144  0100               	movlb	0	; () banked
  3670  002146  51A9               	movf	??_check_msg& (0+255),w,b
  3671  002148  0D19               	mullw	25
  3672  00214A  50F3               	movf	prodl,w,c
  3673  00214C  0100               	movlb	0	; () banked
  3674  00214E  0100               	movlb	0	; () banked
  3675  002150  25A7               	addwf	check_msg@qptr& (0+255),w,b
  3676  002152  6ED9               	movwf	fsr2l,c
  3677  002154  50F4               	movf	prodh,w,c
  3678  002156  0100               	movlb	0	; () banked
  3679  002158  0100               	movlb	0	; () banked
  3680  00215A  21A8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3681  00215C  6EDA               	movwf	fsr2h,c
  3682  00215E  50DF               	movf	indf2,w,c
  3683  002160  0012               	return	
  3684  002162                     __end_of_check_msg:
  3685                           	opt stack 0
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           prodh	equ	0xFF4
  3691                           prodl	equ	0xFF3
  3692                           intcon	equ	0xFF2
  3693                           postinc0	equ	0xFEE
  3694                           wreg	equ	0xFE8
  3695                           indf1	equ	0xFE7
  3696                           fsr1h	equ	0xFE2
  3697                           fsr1l	equ	0xFE1
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _Delay1KTCYx *****************
  3706 ;; Defined at:
  3707 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  unit            1    wreg     unsigned char 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  unit            1   39[BANK0 ] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;		None               void
  3714 ;; Registers used:
  3715 ;;		wreg
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3721 ;;      Params:         0       0       0       0       0
  3722 ;;      Locals:         0       1       0       0       0
  3723 ;;      Temps:          0       0       0       0       0
  3724 ;;      Totals:         0       1       0       0       0
  3725 ;;Total ram usage:        1 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:   12
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_block_on_To_msgqueues
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text19
  3736  0022AA                     __ptext19:
  3737                           	opt stack 0
  3738  0022AA                     _Delay1KTCYx:
  3739                           	opt stack 16
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;incstack = 0
  3743                           ;Delay1KTCYx@unit stored from wreg
  3744  0022AA  CFE8 F0A7          	movff	wreg,Delay1KTCYx@unit
  3745  0022AE                     l788:
  3746  0022AE  0EFA               	movlw	250
  3747  0022B0                     u2767:
  3748  0022B0  F000               	nop	
  3749  0022B2  2EE8               	decfsz	wreg,f,c
  3750  0022B4  D7FD               	goto	u2767
  3751  0022B6  0100               	movlb	0	; () banked
  3752  0022B8  0100               	movlb	0	; () banked
  3753  0022BA  2FA7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3754  0022BC  D7F8               	goto	l788
  3755  0022BE  0012               	return	
  3756  0022C0                     __end_of_Delay1KTCYx:
  3757                           	opt stack 0
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           postinc0	equ	0xFEE
  3766                           wreg	equ	0xFE8
  3767                           indf1	equ	0xFE7
  3768                           fsr1h	equ	0xFE2
  3769                           fsr1l	equ	0xFE1
  3770                           indf2	equ	0xFDF
  3771                           postinc2	equ	0xFDE
  3772                           postdec2	equ	0xFDD
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function _ToMainLow_recvmsg *****************
  3778 ;; Defined at:
  3779 ;;		line 112 in file "source/messages.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  maxlength       1    wreg     unsigned char 
  3782 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  3783 ;;		 -> main@msgtype(1), 
  3784 ;;  data            2   65[BANK0 ] PTR void 
  3785 ;;		 -> main@msgbuffer(23), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  maxlength       1   67[BANK0 ] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      char 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3797 ;;      Params:         0       4       0       0       0
  3798 ;;      Locals:         0       1       0       0       0
  3799 ;;      Temps:          0       0       0       0       0
  3800 ;;      Totals:         0       5       0       0       0
  3801 ;;Total ram usage:        5 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:   14
  3804 ;; This function calls:
  3805 ;;		_recv_msg
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text20
  3812  001FAA                     __ptext20:
  3813                           	opt stack 0
  3814  001FAA                     _ToMainLow_recvmsg:
  3815                           	opt stack 15
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;incstack = 0
  3819                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3820  001FAA  CFE8 F0C3          	movff	wreg,ToMainLow_recvmsg@maxlength
  3821                           
  3822                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3823  001FAE  0101               	movlb	1	; () banked
  3824  001FB0  0E01               	movlw	high _ToMainLow_MQ
  3825  001FB2  0100               	movlb	0	; () banked
  3826  001FB4  0100               	movlb	0	; () banked
  3827  001FB6  6FB2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3828  001FB8  0101               	movlb	1	; () banked
  3829  001FBA  0E84               	movlw	low _ToMainLow_MQ
  3830  001FBC  0100               	movlb	0	; () banked
  3831  001FBE  0100               	movlb	0	; () banked
  3832  001FC0  6FB1               	movwf	recv_msg@qptr& (0+255),b
  3833  001FC2  C0C3  F0B3         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3834  001FC6  0100               	movlb	0	; () banked
  3835  001FC8  0100               	movlb	0	; () banked
  3836  001FCA  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3837  001FCE  0100               	movlb	0	; () banked
  3838  001FD0  0100               	movlb	0	; () banked
  3839  001FD2  C0BF  F0B4         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3840  001FD6  0100               	movlb	0	; () banked
  3841  001FD8  0100               	movlb	0	; () banked
  3842  001FDA  C0C2  F0B7         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3843  001FDE  0100               	movlb	0	; () banked
  3844  001FE0  0100               	movlb	0	; () banked
  3845  001FE2  C0C1  F0B6         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3846  001FE6  EC30  F009         	call	_recv_msg	;wreg free
  3847  001FEA  0012               	return	
  3848  001FEC                     __end_of_ToMainLow_recvmsg:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           intcon	equ	0xFF2
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           indf1	equ	0xFE7
  3860                           fsr1h	equ	0xFE2
  3861                           fsr1l	equ	0xFE1
  3862                           indf2	equ	0xFDF
  3863                           postinc2	equ	0xFDE
  3864                           postdec2	equ	0xFDD
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function _ToMainHigh_recvmsg *****************
  3870 ;; Defined at:
  3871 ;;		line 135 in file "source/messages.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  maxlength       1    wreg     unsigned char 
  3874 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  3875 ;;		 -> main@msgtype(1), 
  3876 ;;  data            2   65[BANK0 ] PTR void 
  3877 ;;		 -> main@msgbuffer(23), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  maxlength       1   67[BANK0 ] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      char 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3889 ;;      Params:         0       4       0       0       0
  3890 ;;      Locals:         0       1       0       0       0
  3891 ;;      Temps:          0       0       0       0       0
  3892 ;;      Totals:         0       5       0       0       0
  3893 ;;Total ram usage:        5 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:   14
  3896 ;; This function calls:
  3897 ;;		_recv_msg
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text21
  3904  001FEC                     __ptext21:
  3905                           	opt stack 0
  3906  001FEC                     _ToMainHigh_recvmsg:
  3907                           	opt stack 15
  3908                           
  3909                           ;incstack = 0
  3910                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3911  001FEC  CFE8 F0C3          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3912                           
  3913                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3914  001FF0  0102               	movlb	2	; () banked
  3915  001FF2  0E02               	movlw	high _ToMainHigh_MQ
  3916  001FF4  0100               	movlb	0	; () banked
  3917  001FF6  0100               	movlb	0	; () banked
  3918  001FF8  6FB2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3919  001FFA  0102               	movlb	2	; () banked
  3920  001FFC  0E66               	movlw	low _ToMainHigh_MQ
  3921  001FFE  0100               	movlb	0	; () banked
  3922  002000  0100               	movlb	0	; () banked
  3923  002002  6FB1               	movwf	recv_msg@qptr& (0+255),b
  3924  002004  C0C3  F0B3         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3925  002008  0100               	movlb	0	; () banked
  3926  00200A  0100               	movlb	0	; () banked
  3927  00200C  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3928  002010  0100               	movlb	0	; () banked
  3929  002012  0100               	movlb	0	; () banked
  3930  002014  C0BF  F0B4         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3931  002018  0100               	movlb	0	; () banked
  3932  00201A  0100               	movlb	0	; () banked
  3933  00201C  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3934  002020  0100               	movlb	0	; () banked
  3935  002022  0100               	movlb	0	; () banked
  3936  002024  C0C1  F0B6         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3937  002028  EC30  F009         	call	_recv_msg	;wreg free
  3938  00202C  0012               	return	
  3939  00202E                     __end_of_ToMainHigh_recvmsg:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           prodh	equ	0xFF4
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           indf1	equ	0xFE7
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _recv_msg *****************
  3961 ;; Defined at:
  3962 ;;		line 63 in file "source/messages.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  qptr            2   49[BANK0 ] PTR struct __msg_queue
  3965 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3966 ;;  maxlength       1   51[BANK0 ] unsigned char 
  3967 ;;  msgtype         2   52[BANK0 ] PTR unsigned char 
  3968 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3969 ;;  data            2   54[BANK0 ] PTR void 
  3970 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  qmsg            2   61[BANK0 ] PTR struct __msg
  3973 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  3974 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3975 ;;  tlength         2   59[BANK0 ] unsigned int 
  3976 ;;  slot            1   58[BANK0 ] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      char 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3986 ;;      Params:         0       7       0       0       0
  3987 ;;      Locals:         0       5       0       0       0
  3988 ;;      Temps:          0       2       0       0       0
  3989 ;;      Totals:         0      14       0       0       0
  3990 ;;Total ram usage:       14 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:   13
  3993 ;; This function calls:
  3994 ;;		_memcpy
  3995 ;; This function is called by:
  3996 ;;		_ToMainLow_recvmsg
  3997 ;;		_ToMainHigh_recvmsg
  3998 ;;		_FromMainLow_recvmsg
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text22
  4003  001260                     __ptext22:
  4004                           	opt stack 0
  4005  001260                     _recv_msg:
  4006                           	opt stack 15
  4007                           
  4008                           ;messages.c: 64: unsigned char slot;
  4009                           ;messages.c: 68: msg *qmsg;
  4010                           ;messages.c: 69: size_t tlength;
  4011                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4012                           
  4013                           ;incstack = 0
  4014  001260  0100               	movlb	0	; () banked
  4015  001262  EE20 F065          	lfsr	2,101
  4016  001266  0100               	movlb	0	; () banked
  4017  001268  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4018  00126A  26D9               	addwf	fsr2l,f,c
  4019  00126C  0100               	movlb	0	; () banked
  4020  00126E  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4021  001270  22DA               	addwfc	fsr2h,f,c
  4022  001272  50DF               	movf	indf2,w,c
  4023  001274  0100               	movlb	0	; () banked
  4024  001276  0100               	movlb	0	; () banked
  4025  001278  6FBA               	movwf	recv_msg@slot& (0+255),b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4029  00127A  0100               	movlb	0	; () banked
  4030  00127C  0100               	movlb	0	; () banked
  4031  00127E  51BA               	movf	recv_msg@slot& (0+255),w,b
  4032  001280  0D19               	mullw	25
  4033  001282  50F3               	movf	prodl,w,c
  4034  001284  0100               	movlb	0	; () banked
  4035  001286  0100               	movlb	0	; () banked
  4036  001288  25B1               	addwf	recv_msg@qptr& (0+255),w,b
  4037  00128A  0100               	movlb	0	; () banked
  4038  00128C  0100               	movlb	0	; () banked
  4039  00128E  6FBD               	movwf	recv_msg@qmsg& (0+255),b
  4040  001290  50F4               	movf	prodh,w,c
  4041  001292  0100               	movlb	0	; () banked
  4042  001294  0100               	movlb	0	; () banked
  4043  001296  21B2               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4044  001298  0100               	movlb	0	; () banked
  4045  00129A  6FBE               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;messages.c: 74: if (qmsg->full == 1) {
  4049  00129C  0E01               	movlw	1
  4050  00129E  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4051  0012A2  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4052  0012A6  62DF               	cpfseq	indf2,c
  4053  0012A8  D074               	goto	l2730
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4057  0012AA  0100               	movlb	0	; () banked
  4058  0012AC  EE20 F001          	lfsr	2,1
  4059  0012B0  0100               	movlb	0	; () banked
  4060  0012B2  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4061  0012B4  26D9               	addwf	fsr2l,f,c
  4062  0012B6  0100               	movlb	0	; () banked
  4063  0012B8  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4064  0012BA  22DA               	addwfc	fsr2h,f,c
  4065  0012BC  50DF               	movf	indf2,w,c
  4066  0012BE  0100               	movlb	0	; () banked
  4067  0012C0  0100               	movlb	0	; () banked
  4068  0012C2  5DB3               	subwf	recv_msg@maxlength& (0+255),w,b
  4069  0012C4  B0D8               	btfsc	status,0,c
  4070  0012C6  D002               	goto	l2714
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;messages.c: 77: return (-3);
  4074  0012C8  0EFD               	movlw	253
  4075  0012CA  0012               	return	
  4076  0012CC                     l2714:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;messages.c: 78: }
  4080                           ;messages.c: 80: tlength = qmsg->length;
  4081  0012CC  0100               	movlb	0	; () banked
  4082  0012CE  EE20 F001          	lfsr	2,1
  4083  0012D2  0100               	movlb	0	; () banked
  4084  0012D4  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4085  0012D6  26D9               	addwf	fsr2l,f,c
  4086  0012D8  0100               	movlb	0	; () banked
  4087  0012DA  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4088  0012DC  22DA               	addwfc	fsr2h,f,c
  4089  0012DE  50DF               	movf	indf2,w,c
  4090  0012E0  0100               	movlb	0	; () banked
  4091  0012E2  6FB8               	movwf	??_recv_msg& (0+255),b
  4092  0012E4  0100               	movlb	0	; () banked
  4093  0012E6  51B8               	movf	??_recv_msg& (0+255),w,b
  4094  0012E8  0100               	movlb	0	; () banked
  4095  0012EA  0100               	movlb	0	; () banked
  4096  0012EC  6FBB               	movwf	recv_msg@tlength& (0+255),b
  4097  0012EE  0100               	movlb	0	; () banked
  4098  0012F0  6BBC               	clrf	(recv_msg@tlength+1)& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4102  0012F2  0100               	movlb	0	; () banked
  4103  0012F4  0100               	movlb	0	; () banked
  4104  0012F6  C0B7  F0A8         	movff	recv_msg@data+1,memcpy@d1+1
  4105  0012FA  0100               	movlb	0	; () banked
  4106  0012FC  0100               	movlb	0	; () banked
  4107  0012FE  C0B6  F0A7         	movff	recv_msg@data,memcpy@d1
  4108  001302  0E03               	movlw	3
  4109  001304  0100               	movlb	0	; () banked
  4110  001306  0100               	movlb	0	; () banked
  4111  001308  25BD               	addwf	recv_msg@qmsg& (0+255),w,b
  4112  00130A  0100               	movlb	0	; () banked
  4113  00130C  6FB8               	movwf	??_recv_msg& (0+255),b
  4114  00130E  0E00               	movlw	0
  4115  001310  0100               	movlb	0	; () banked
  4116  001312  0100               	movlb	0	; () banked
  4117  001314  21BE               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4118  001316  0100               	movlb	0	; () banked
  4119  001318  6FB9               	movwf	(??_recv_msg+1)& (0+255),b
  4120  00131A  C0B8  F0A9         	movff	??_recv_msg,memcpy@s1
  4121  00131E  C0B9  F0AA         	movff	??_recv_msg+1,memcpy@s1+1
  4122  001322  C0BB  F0AB         	movff	recv_msg@tlength,memcpy@n
  4123  001326  C0BC  F0AC         	movff	recv_msg@tlength+1,memcpy@n+1
  4124  00132A  ECBA  F00E         	call	_memcpy	;wreg free
  4125                           
  4126                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4127  00132E  0100               	movlb	0	; () banked
  4128  001330  EE20 F065          	lfsr	2,101
  4129  001334  0100               	movlb	0	; () banked
  4130  001336  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4131  001338  26D9               	addwf	fsr2l,f,c
  4132  00133A  0100               	movlb	0	; () banked
  4133  00133C  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4134  00133E  22DA               	addwfc	fsr2h,f,c
  4135  001340  0100               	movlb	0	; () banked
  4136  001342  EE10 F065          	lfsr	1,101
  4137  001346  0100               	movlb	0	; () banked
  4138  001348  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4139  00134A  26E1               	addwf	fsr1l,f,c
  4140  00134C  0100               	movlb	0	; () banked
  4141  00134E  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4142  001350  22E2               	addwfc	fsr1h,f,c
  4143  001352  50E7               	movf	indf1,w,c
  4144  001354  0100               	movlb	0	; () banked
  4145  001356  6FB8               	movwf	??_recv_msg& (0+255),b
  4146  001358  0100               	movlb	0	; () banked
  4147  00135A  29B8               	incf	??_recv_msg& (0+255),w,b
  4148  00135C  0B03               	andlw	3
  4149  00135E  6EDF               	movwf	indf2,c
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4153  001360  0100               	movlb	0	; () banked
  4154  001362  EE20 F002          	lfsr	2,2
  4155  001366  0100               	movlb	0	; () banked
  4156  001368  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4157  00136A  26D9               	addwf	fsr2l,f,c
  4158  00136C  0100               	movlb	0	; () banked
  4159  00136E  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4160  001370  22DA               	addwfc	fsr2h,f,c
  4161  001372  C0B4  FFE1         	movff	recv_msg@msgtype,fsr1l
  4162  001376  C0B5  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4163  00137A  CFDF FFE7          	movff	indf2,indf1
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;messages.c: 91: qmsg->full = 0;
  4167  00137E  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4168  001382  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4169  001386  0E00               	movlw	0
  4170  001388  6EDF               	movwf	indf2,c
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;messages.c: 92: return (tlength);
  4174  00138A  0100               	movlb	0	; () banked
  4175  00138C  0100               	movlb	0	; () banked
  4176  00138E  51BB               	movf	recv_msg@tlength& (0+255),w,b
  4177  001390  0012               	return	
  4178  001392                     l2730:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;messages.c: 94: return (-4);
  4182  001392  0EFC               	movlw	252
  4183  001394  0012               	return	
  4184  001396                     __end_of_recv_msg:
  4185                           	opt stack 0
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           prodh	equ	0xFF4
  4191                           prodl	equ	0xFF3
  4192                           intcon	equ	0xFF2
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           indf1	equ	0xFE7
  4196                           fsr1h	equ	0xFE2
  4197                           fsr1l	equ	0xFE1
  4198                           indf2	equ	0xFDF
  4199                           postinc2	equ	0xFDE
  4200                           postdec2	equ	0xFDD
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _memcpy *****************
  4206 ;; Defined at:
  4207 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  d1              2   39[BANK0 ] PTR void 
  4210 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4211 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4212 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4213 ;;  s1              2   41[BANK0 ] PTR const void 
  4214 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4215 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4216 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  4217 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  4218 ;;		 -> main@ic(77), main@uc(23), 
  4219 ;;  n               2   43[BANK0 ] unsigned int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  s               2   47[BANK0 ] PTR const unsigned char 
  4222 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4223 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4224 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  4225 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  4226 ;;		 -> main@ic(77), main@uc(23), 
  4227 ;;  d               2   45[BANK0 ] PTR unsigned char 
  4228 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4229 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4230 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2   39[BANK0 ] PTR void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4240 ;;      Params:         0       6       0       0       0
  4241 ;;      Locals:         0       4       0       0       0
  4242 ;;      Temps:          0       0       0       0       0
  4243 ;;      Totals:         0      10       0       0       0
  4244 ;;Total ram usage:       10 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:   12
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_recv_msg
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text23
  4255  001D74                     __ptext23:
  4256                           	opt stack 0
  4257  001D74                     _memcpy:
  4258                           	opt stack 15
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;incstack = 0
  4262  001D74  0100               	movlb	0	; () banked
  4263  001D76  0100               	movlb	0	; () banked
  4264  001D78  C0AA  F0B0         	movff	memcpy@s1+1,memcpy@s+1
  4265  001D7C  0100               	movlb	0	; () banked
  4266  001D7E  0100               	movlb	0	; () banked
  4267  001D80  C0A9  F0AF         	movff	memcpy@s1,memcpy@s
  4268  001D84  0100               	movlb	0	; () banked
  4269  001D86  0100               	movlb	0	; () banked
  4270  001D88  C0A8  F0AE         	movff	memcpy@d1+1,memcpy@d+1
  4271  001D8C  0100               	movlb	0	; () banked
  4272  001D8E  0100               	movlb	0	; () banked
  4273  001D90  C0A7  F0AD         	movff	memcpy@d1,memcpy@d
  4274  001D94  D012               	goto	l2700
  4275  001D96                     l2694:
  4276                           
  4277                           ; BSR set to: 0
  4278  001D96  C0AF  FFD9         	movff	memcpy@s,fsr2l
  4279  001D9A  C0B0  FFDA         	movff	memcpy@s+1,fsr2h
  4280  001D9E  C0AD  FFE1         	movff	memcpy@d,fsr1l
  4281  001DA2  C0AE  FFE2         	movff	memcpy@d+1,fsr1h
  4282  001DA6  CFDF FFE7          	movff	indf2,indf1
  4283                           
  4284                           ; BSR set to: 0
  4285  001DAA  0100               	movlb	0	; () banked
  4286  001DAC  0100               	movlb	0	; () banked
  4287  001DAE  4BAF               	infsnz	memcpy@s& (0+255),f,b
  4288  001DB0  2BB0               	incf	(memcpy@s+1)& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 0
  4291  001DB2  0100               	movlb	0	; () banked
  4292  001DB4  0100               	movlb	0	; () banked
  4293  001DB6  4BAD               	infsnz	memcpy@d& (0+255),f,b
  4294  001DB8  2BAE               	incf	(memcpy@d+1)& (0+255),f,b
  4295  001DBA                     l2700:
  4296                           
  4297                           ; BSR set to: 0
  4298  001DBA  0100               	movlb	0	; () banked
  4299  001DBC  0100               	movlb	0	; () banked
  4300  001DBE  07AB               	decf	memcpy@n& (0+255),f,b
  4301  001DC0  A0D8               	btfss	status,0,c
  4302  001DC2  07AC               	decf	(memcpy@n+1)& (0+255),f,b
  4303  001DC4  0100               	movlb	0	; () banked
  4304  001DC6  29AB               	incf	memcpy@n& (0+255),w,b
  4305  001DC8  B4D8               	btfsc	status,2,c
  4306  001DCA  29AC               	incf	(memcpy@n+1)& (0+255),w,b
  4307  001DCC  B4D8               	btfsc	status,2,c
  4308                           
  4309                           ; BSR set to: 0
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;	Return value of _memcpy is never used
  4313  001DCE  0012               	return	
  4314  001DD0  D7E2               	goto	l2694
  4315  001DD2                     __end_of_memcpy:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           indf1	equ	0xFE7
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           indf2	equ	0xFDF
  4330                           postinc2	equ	0xFDE
  4331                           postdec2	equ	0xFDD
  4332                           fsr2h	equ	0xFDA
  4333                           fsr2l	equ	0xFD9
  4334                           status	equ	0xFD8
  4335                           
  4336 ;; *************** function _OpenUSART *****************
  4337 ;; Defined at:
  4338 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  config          1    wreg     unsigned char 
  4341 ;;  spbrg           2   39[BANK0 ] unsigned int 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  config          1   44[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;		None               void
  4346 ;; Registers used:
  4347 ;;		wreg, status,2
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4353 ;;      Params:         0       2       0       0       0
  4354 ;;      Locals:         0       1       0       0       0
  4355 ;;      Temps:          0       3       0       0       0
  4356 ;;      Totals:         0       6       0       0       0
  4357 ;;Total ram usage:        6 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   12
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text24
  4368  001A76                     __ptext24:
  4369                           	opt stack 0
  4370  001A76                     _OpenUSART:
  4371                           	opt stack 17
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;incstack = 0
  4375                           ;OpenUSART@config stored from wreg
  4376  001A76  CFE8 F0AC          	movff	wreg,OpenUSART@config
  4377  001A7A  0E00               	movlw	0
  4378  001A7C  6EAC               	movwf	4012,c	;volatile
  4379  001A7E  0E00               	movlw	0
  4380  001A80  6EAB               	movwf	4011,c	;volatile
  4381  001A82  0100               	movlb	0	; () banked
  4382  001A84  0100               	movlb	0	; () banked
  4383  001A86  B1AC               	btfsc	OpenUSART@config& (0+255),0,b
  4384                           
  4385                           ; BSR set to: 0
  4386  001A88  88AC               	bsf	4012,4,c	;volatile
  4387                           
  4388                           ; BSR set to: 0
  4389                           
  4390                           ; BSR set to: 0
  4391  001A8A  0100               	movlb	0	; () banked
  4392  001A8C  0100               	movlb	0	; () banked
  4393  001A8E  A3AC               	btfss	OpenUSART@config& (0+255),1,b
  4394  001A90  D002               	goto	l2538
  4395                           
  4396                           ; BSR set to: 0
  4397  001A92  8CAC               	bsf	4012,6,c	;volatile
  4398  001A94  8CAB               	bsf	4011,6,c	;volatile
  4399  001A96                     l2538:
  4400                           
  4401                           ; BSR set to: 0
  4402  001A96  0100               	movlb	0	; () banked
  4403  001A98  0100               	movlb	0	; () banked
  4404  001A9A  B5AC               	btfsc	OpenUSART@config& (0+255),2,b
  4405                           
  4406                           ; BSR set to: 0
  4407  001A9C  8EAC               	bsf	4012,7,c	;volatile
  4408                           
  4409                           ; BSR set to: 0
  4410                           
  4411                           ; BSR set to: 0
  4412  001A9E  0100               	movlb	0	; () banked
  4413  001AA0  0100               	movlb	0	; () banked
  4414  001AA2  A7AC               	btfss	OpenUSART@config& (0+255),3,b
  4415  001AA4  D002               	goto	l544
  4416                           
  4417                           ; BSR set to: 0
  4418  001AA6  88AB               	bsf	4011,4,c	;volatile
  4419  001AA8  D001               	goto	l2546
  4420  001AAA                     l544:
  4421                           
  4422                           ; BSR set to: 0
  4423  001AAA  8AAB               	bsf	4011,5,c	;volatile
  4424  001AAC                     l2546:
  4425                           
  4426                           ; BSR set to: 0
  4427  001AAC  0100               	movlb	0	; () banked
  4428  001AAE  0100               	movlb	0	; () banked
  4429  001AB0  B9AC               	btfsc	OpenUSART@config& (0+255),4,b
  4430                           
  4431                           ; BSR set to: 0
  4432  001AB2  84AC               	bsf	4012,2,c	;volatile
  4433                           
  4434                           ; BSR set to: 0
  4435  001AB4  989E               	bcf	3998,4,c	;volatile
  4436                           
  4437                           ; BSR set to: 0
  4438  001AB6  0100               	movlb	0	; () banked
  4439  001AB8  0100               	movlb	0	; () banked
  4440  001ABA  BBAC               	btfsc	OpenUSART@config& (0+255),5,b
  4441                           
  4442                           ; BSR set to: 0
  4443  001ABC  86AB               	bsf	4011,3,c	;volatile
  4444                           
  4445                           ; BSR set to: 0
  4446                           
  4447                           ; BSR set to: 0
  4448  001ABE  0100               	movlb	0	; () banked
  4449  001AC0  0100               	movlb	0	; () banked
  4450  001AC2  ADAC               	btfss	OpenUSART@config& (0+255),6,b
  4451  001AC4  D002               	goto	l548
  4452                           
  4453                           ; BSR set to: 0
  4454  001AC6  8A9D               	bsf	3997,5,c	;volatile
  4455  001AC8  D001               	goto	l549
  4456  001ACA                     l548:
  4457                           
  4458                           ; BSR set to: 0
  4459  001ACA  9A9D               	bcf	3997,5,c	;volatile
  4460  001ACC                     l549:
  4461                           
  4462                           ; BSR set to: 0
  4463  001ACC  9A9E               	bcf	3998,5,c	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466  001ACE  0100               	movlb	0	; () banked
  4467  001AD0  0100               	movlb	0	; () banked
  4468  001AD2  AFAC               	btfss	OpenUSART@config& (0+255),7,b
  4469  001AD4  D002               	goto	l550
  4470                           
  4471                           ; BSR set to: 0
  4472  001AD6  889D               	bsf	3997,4,c	;volatile
  4473  001AD8  D001               	goto	l551
  4474  001ADA                     l550:
  4475                           
  4476                           ; BSR set to: 0
  4477  001ADA  989D               	bcf	3997,4,c	;volatile
  4478  001ADC                     l551:
  4479                           
  4480                           ; BSR set to: 0
  4481  001ADC  C0A7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4482                           
  4483                           ; BSR set to: 0
  4484  001AE0  0100               	movlb	0	; () banked
  4485  001AE2  C0A8  F0A9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4486  001AE6  C0A9  F0AA         	movff	??_OpenUSART,??_OpenUSART+1
  4487  001AEA  0100               	movlb	0	; () banked
  4488  001AEC  6BAB               	clrf	(??_OpenUSART+2)& (0+255),b
  4489  001AEE  0100               	movlb	0	; () banked
  4490  001AF0  51AA               	movf	(??_OpenUSART+1)& (0+255),w,b
  4491  001AF2  6EB0               	movwf	4016,c	;volatile
  4492                           
  4493                           ; BSR set to: 0
  4494  001AF4  8AAC               	bsf	4012,5,c	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497  001AF6  8EAB               	bsf	4011,7,c	;volatile
  4498                           
  4499                           ; BSR set to: 0
  4500  001AF8  9C94               	bcf	3988,6,c	;volatile
  4501                           
  4502                           ; BSR set to: 0
  4503  001AFA  8E94               	bsf	3988,7,c	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506  001AFC  A8AC               	btfss	4012,4,c	;volatile
  4507  001AFE  0012               	return	
  4508                           
  4509                           ; BSR set to: 0
  4510  001B00  BEAC               	btfsc	4012,7,c	;volatile
  4511  001B02  0012               	return	
  4512                           
  4513                           ; BSR set to: 0
  4514  001B04  8C94               	bsf	3988,6,c	;volatile
  4515  001B06  0012               	return	
  4516  001B08                     __end_of_OpenUSART:
  4517                           	opt stack 0
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           indf1	equ	0xFE7
  4528                           fsr1h	equ	0xFE2
  4529                           fsr1l	equ	0xFE1
  4530                           indf2	equ	0xFDF
  4531                           postinc2	equ	0xFDE
  4532                           postdec2	equ	0xFDD
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _InterruptHandlerLow *****************
  4538 ;; Defined at:
  4539 ;;		line 122 in file "source/interrupts.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4553 ;;      Params:         0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0
  4555 ;;      Temps:         17       0       0       0       0
  4556 ;;      Totals:        17       0       0       0       0
  4557 ;;Total ram usage:       17 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:   11
  4560 ;; This function calls:
  4561 ;;		_timer1_int_handler
  4562 ;;		_uart_recv_int_handler
  4563 ;; This function is called by:
  4564 ;;		Interrupt level 1
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	intcodelo
  4569  000018                     __pintcodelo:
  4570                           	opt stack 0
  4571  000018                     _InterruptHandlerLow:
  4572                           	opt stack 14
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;incstack = 0
  4576  000018  CFD8 F021          	movff	status,??_InterruptHandlerLow
  4577  00001C  CFE8 F022          	movff	wreg,??_InterruptHandlerLow+1
  4578  000020  CFE0 F023          	movff	bsr,??_InterruptHandlerLow+2
  4579  000024  CFFA F024          	movff	pclath,??_InterruptHandlerLow+3
  4580  000028  CFFB F025          	movff	pclatu,??_InterruptHandlerLow+4
  4581  00002C  CFE9 F026          	movff	fsr0l,??_InterruptHandlerLow+5
  4582  000030  CFEA F027          	movff	fsr0h,??_InterruptHandlerLow+6
  4583  000034  CFE1 F028          	movff	fsr1l,??_InterruptHandlerLow+7
  4584  000038  CFE2 F029          	movff	fsr1h,??_InterruptHandlerLow+8
  4585  00003C  CFD9 F02A          	movff	fsr2l,??_InterruptHandlerLow+9
  4586  000040  CFDA F02B          	movff	fsr2h,??_InterruptHandlerLow+10
  4587  000044  CFF3 F02C          	movff	prodl,??_InterruptHandlerLow+11
  4588  000048  CFF4 F02D          	movff	prodh,??_InterruptHandlerLow+12
  4589  00004C  CFF6 F02E          	movff	tblptrl,??_InterruptHandlerLow+13
  4590  000050  CFF7 F02F          	movff	tblptrh,??_InterruptHandlerLow+14
  4591  000054  CFF8 F030          	movff	tblptru,??_InterruptHandlerLow+15
  4592  000058  CFF5 F031          	movff	tablat,??_InterruptHandlerLow+16
  4593                           
  4594                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4595  00005C  A09E               	btfss	3998,0,c	;volatile
  4596  00005E  D003               	goto	i1l3372
  4597                           
  4598                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4599  000060  909E               	bcf	3998,0,c	;volatile
  4600                           
  4601                           ;interrupts.c: 126: timer1_int_handler();
  4602  000062  ECCC  F010         	call	_timer1_int_handler	;wreg free
  4603  000066                     i1l3372:
  4604                           
  4605                           ;interrupts.c: 127: }
  4606                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4607  000066  AA9E               	btfss	3998,5,c	;volatile
  4608  000068  D003               	goto	i1l47
  4609                           
  4610                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4611  00006A  9A9E               	bcf	3998,5,c	;volatile
  4612                           
  4613                           ;interrupts.c: 132: uart_recv_int_handler();
  4614  00006C  ECE9  F00E         	call	_uart_recv_int_handler	;wreg free
  4615  000070                     i1l47:
  4616  000070  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4617  000074  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4618  000078  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4619  00007C  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4620  000080  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4621  000084  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4622  000088  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4623  00008C  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4624  000090  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4625  000094  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4626  000098  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4627  00009C  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4628  0000A0  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4629  0000A4  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4630  0000A8  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4631  0000AC  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4632  0000B0  C021  FFD8         	movff	??_InterruptHandlerLow,status
  4633  0000B4  0010               	retfie	
  4634  0000B6                     __end_of_InterruptHandlerLow:
  4635                           	opt stack 0
  4636                           pclatu	equ	0xFFB
  4637                           pclath	equ	0xFFA
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           prodh	equ	0xFF4
  4643                           prodl	equ	0xFF3
  4644                           intcon	equ	0xFF2
  4645                           postinc0	equ	0xFEE
  4646                           fsr0h	equ	0xFEA
  4647                           fsr0l	equ	0xFE9
  4648                           wreg	equ	0xFE8
  4649                           indf1	equ	0xFE7
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           bsr	equ	0xFE0
  4653                           indf2	equ	0xFDF
  4654                           postinc2	equ	0xFDE
  4655                           postdec2	equ	0xFDD
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8
  4659                           
  4660 ;; *************** function _uart_recv_int_handler *****************
  4661 ;; Defined at:
  4662 ;;		line 16 in file "source/my_uart.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;		None               void
  4669 ;; Registers used:
  4670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4676 ;;      Params:         0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0
  4678 ;;      Temps:          1       0       0       0       0
  4679 ;;      Totals:         1       0       0       0       0
  4680 ;;Total ram usage:        1 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:   10
  4683 ;; This function calls:
  4684 ;;		_ReadUSART
  4685 ;;		_ToMainLow_sendmsg
  4686 ;;		_parseUART
  4687 ;; This function is called by:
  4688 ;;		_InterruptHandlerLow
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text26
  4693  001DD2                     __ptext26:
  4694                           	opt stack 0
  4695  001DD2                     _uart_recv_int_handler:
  4696                           	opt stack 14
  4697                           
  4698                           ;my_uart.c: 25: if ((PIR1bits.RCIF)) {
  4699                           
  4700                           ;incstack = 0
  4701  001DD2  AA9E               	btfss	3998,5,c	;volatile
  4702  001DD4  D01C               	goto	i1l3360
  4703                           
  4704                           ;my_uart.c: 26: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4705  001DD6  EE20 F016          	lfsr	2,22
  4706  001DDA  504B               	movf	_uc_ptr,w,c
  4707  001DDC  26D9               	addwf	fsr2l,f,c
  4708  001DDE  504C               	movf	_uc_ptr+1,w,c
  4709  001DE0  22DA               	addwfc	fsr2h,f,c
  4710  001DE2  50DF               	movf	indf2,w,c
  4711  001DE4  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  4712  001DE6  5020               	movf	??_uart_recv_int_handler,w,c
  4713  001DE8  0D01               	mullw	1
  4714  001DEA  50F3               	movf	prodl,w,c
  4715  001DEC  244B               	addwf	_uc_ptr,w,c
  4716  001DEE  6ED9               	movwf	fsr2l,c
  4717  001DF0  50F4               	movf	prodh,w,c
  4718  001DF2  204C               	addwfc	_uc_ptr+1,w,c
  4719  001DF4  6EDA               	movwf	fsr2h,c
  4720  001DF6  EC46  F011         	call	_ReadUSART	;wreg free
  4721  001DFA  6EDF               	movwf	indf2,c
  4722                           
  4723                           ;my_uart.c: 29: uc_ptr->buflen++;
  4724  001DFC  EE20 F016          	lfsr	2,22
  4725  001E00  504B               	movf	_uc_ptr,w,c
  4726  001E02  26D9               	addwf	fsr2l,f,c
  4727  001E04  504C               	movf	_uc_ptr+1,w,c
  4728  001E06  22DA               	addwfc	fsr2h,f,c
  4729  001E08  2ADF               	incf	indf2,f,c
  4730                           
  4731                           ;my_uart.c: 30: parseUART();
  4732  001E0A  ECD9  F00A         	call	_parseUART	;wreg free
  4733  001E0E                     i1l3360:
  4734                           
  4735                           ;my_uart.c: 33: }
  4736                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  4737  001E0E  A64A               	btfss	_USART_Status,3,c
  4738  001E10  0012               	return	
  4739                           
  4740                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  4741  001E12  98AB               	bcf	4011,4,c	;volatile
  4742                           
  4743                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  4744  001E14  88AB               	bsf	4011,4,c	;volatile
  4745                           
  4746                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  4747  001E16  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  4748  001E18  0E1E               	movlw	30
  4749  001E1A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4750  001E1C  5020               	movf	??_uart_recv_int_handler& (0+255),w,c
  4751  001E1E  0E00               	movlw	0
  4752  001E20  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4753  001E22  0E00               	movlw	0
  4754  001E24  6E18               	movwf	ToMainLow_sendmsg@data,c
  4755  001E26  0E00               	movlw	0
  4756  001E28  EC10  F011         	call	_ToMainLow_sendmsg
  4757  001E2C  0012               	return	
  4758  001E2E                     __end_of_uart_recv_int_handler:
  4759                           	opt stack 0
  4760                           pclatu	equ	0xFFB
  4761                           pclath	equ	0xFFA
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           postinc0	equ	0xFEE
  4770                           fsr0h	equ	0xFEA
  4771                           fsr0l	equ	0xFE9
  4772                           wreg	equ	0xFE8
  4773                           indf1	equ	0xFE7
  4774                           fsr1h	equ	0xFE2
  4775                           fsr1l	equ	0xFE1
  4776                           bsr	equ	0xFE0
  4777                           indf2	equ	0xFDF
  4778                           postinc2	equ	0xFDE
  4779                           postdec2	equ	0xFDD
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _parseUART *****************
  4785 ;; Defined at:
  4786 ;;		line 57 in file "source/my_uart.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;		None               void
  4793 ;; Registers used:
  4794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4800 ;;      Params:         0       0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0
  4802 ;;      Temps:          5       0       0       0       0
  4803 ;;      Totals:         5       0       0       0       0
  4804 ;;Total ram usage:        5 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    9
  4807 ;; This function calls:
  4808 ;;		_ToMainLow_sendmsg
  4809 ;; This function is called by:
  4810 ;;		_uart_recv_int_handler
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text27
  4815  0015B2                     __ptext27:
  4816                           	opt stack 0
  4817  0015B2                     _parseUART:
  4818                           	opt stack 14
  4819                           
  4820                           ;my_uart.c: 59: switch(State)
  4821                           
  4822                           ;incstack = 0
  4823  0015B2  D067               	goto	i1l3350
  4824  0015B4                     i1l3324:
  4825                           
  4826                           ;my_uart.c: 62: {
  4827                           ;my_uart.c: 63: command_length = uc_ptr->buffer[uc_ptr->buflen-1] & 0x0f;
  4828  0015B4  0EFF               	movlw	255
  4829  0015B6  6E1B               	movwf	??_parseUART& (0+255),c
  4830  0015B8  0EFF               	movlw	255
  4831  0015BA  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  4832  0015BC  EE20 F016          	lfsr	2,22
  4833  0015C0  504B               	movf	_uc_ptr,w,c
  4834  0015C2  26D9               	addwf	fsr2l,f,c
  4835  0015C4  504C               	movf	_uc_ptr+1,w,c
  4836  0015C6  22DA               	addwfc	fsr2h,f,c
  4837  0015C8  50DF               	movf	indf2,w,c
  4838  0015CA  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  4839  0015CC  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  4840  0015CE  501B               	movf	??_parseUART,w,c
  4841  0015D0  261D               	addwf	??_parseUART+2,f,c
  4842  0015D2  501C               	movf	??_parseUART+1,w,c
  4843  0015D4  221E               	addwfc	??_parseUART+3,f,c
  4844  0015D6  501D               	movf	??_parseUART+2,w,c
  4845  0015D8  244B               	addwf	_uc_ptr,w,c
  4846  0015DA  6ED9               	movwf	fsr2l,c
  4847  0015DC  501E               	movf	??_parseUART+3,w,c
  4848  0015DE  204C               	addwfc	_uc_ptr+1,w,c
  4849  0015E0  6EDA               	movwf	fsr2h,c
  4850  0015E2  50DF               	movf	indf2,w,c
  4851  0015E4  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  4852  0015E6  0E0F               	movlw	15
  4853  0015E8  161F               	andwf	??_parseUART+4,f,c
  4854  0015EA  501F               	movf	??_parseUART+4,w,c
  4855  0015EC  6E43               	movwf	_command_length,c
  4856  0015EE  6A44               	clrf	_command_length+1,c
  4857                           
  4858                           ;my_uart.c: 64: command_length *= 4;
  4859  0015F0  90D8               	bcf	status,0,c
  4860  0015F2  3643               	rlcf	_command_length,f,c
  4861  0015F4  3644               	rlcf	_command_length+1,f,c
  4862  0015F6  90D8               	bcf	status,0,c
  4863  0015F8  3643               	rlcf	_command_length,f,c
  4864  0015FA  3644               	rlcf	_command_length+1,f,c
  4865                           
  4866                           ;my_uart.c: 65: if(command_length != 0)
  4867  0015FC  5044               	movf	_command_length+1,w,c
  4868  0015FE  1043               	iorwf	_command_length,w,c
  4869  001600  B4D8               	btfsc	status,2,c
  4870  001602  D005               	goto	i1l3332
  4871                           
  4872                           ;my_uart.c: 66: {
  4873                           ;my_uart.c: 67: State = COMMAND;
  4874  001604  6E1B               	movwf	??_parseUART& (0+255),c
  4875  001606  0E02               	movlw	2
  4876  001608  6E4D               	movwf	_State,c
  4877  00160A  501B               	movf	??_parseUART& (0+255),w,c
  4878                           
  4879                           ;my_uart.c: 68: }
  4880  00160C  0012               	return	
  4881  00160E                     i1l3332:
  4882                           
  4883                           ;my_uart.c: 69: else
  4884                           ;my_uart.c: 70: {
  4885                           ;my_uart.c: 71: State = CHECKSUM;
  4886  00160E  6E1B               	movwf	??_parseUART& (0+255),c
  4887  001610  0E03               	movlw	3
  4888  001612  6E4D               	movwf	_State,c
  4889  001614  501B               	movf	??_parseUART& (0+255),w,c
  4890  001616  0012               	return	
  4891  001618                     i1l3334:
  4892                           
  4893                           ;my_uart.c: 76: {
  4894                           ;my_uart.c: 77: if(command_count+1 < command_length)
  4895  001618  0E01               	movlw	1
  4896  00161A  2441               	addwf	_command_count,w,c
  4897  00161C  6E1B               	movwf	??_parseUART& (0+255),c
  4898  00161E  0E00               	movlw	0
  4899  001620  2042               	addwfc	_command_count+1,w,c
  4900  001622  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  4901  001624  501C               	movf	??_parseUART+1,w,c
  4902  001626  0A80               	xorlw	128
  4903  001628  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  4904  00162A  5043               	movf	_command_length,w,c
  4905  00162C  5C1B               	subwf	??_parseUART,w,c
  4906  00162E  5044               	movf	_command_length+1,w,c
  4907  001630  0A80               	xorlw	128
  4908  001632  581D               	subwfb	(??_parseUART+2)& (0+255),w,c
  4909  001634  B0D8               	btfsc	status,0,c
  4910  001636  D003               	goto	i1l3338
  4911                           
  4912                           ;my_uart.c: 78: {command_count++;}
  4913  001638  4A41               	infsnz	_command_count,f,c
  4914  00163A  2A42               	incf	_command_count+1,f,c
  4915  00163C  0012               	return	
  4916  00163E                     i1l3338:
  4917                           
  4918                           ;my_uart.c: 79: else
  4919                           ;my_uart.c: 80: {State = CHECKSUM;}
  4920  00163E  6E1B               	movwf	??_parseUART& (0+255),c
  4921  001640  0E03               	movlw	3
  4922  001642  6E4D               	movwf	_State,c
  4923  001644  501B               	movf	??_parseUART& (0+255),w,c
  4924  001646  0012               	return	
  4925  001648                     i1l3340:
  4926                           
  4927                           ;my_uart.c: 84: {
  4928                           ;my_uart.c: 85: ToMainLow_sendmsg(sizeof(unsigned char)*(2 + command_length),50,uc_ptr->
      +                          buffer);
  4929  001648  6E1B               	movwf	??_parseUART& (0+255),c
  4930  00164A  0E32               	movlw	50
  4931  00164C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4932  00164E  501B               	movf	??_parseUART& (0+255),w,c
  4933  001650  C04C  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4934  001654  C04B  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4935  001658  5043               	movf	_command_length,w,c
  4936  00165A  0F02               	addlw	2
  4937  00165C  EC10  F011         	call	_ToMainLow_sendmsg
  4938                           
  4939                           ;my_uart.c: 86: uc_ptr->buflen = 0;
  4940  001660  EE20 F016          	lfsr	2,22
  4941  001664  504B               	movf	_uc_ptr,w,c
  4942  001666  26D9               	addwf	fsr2l,f,c
  4943  001668  504C               	movf	_uc_ptr+1,w,c
  4944  00166A  22DA               	addwfc	fsr2h,f,c
  4945  00166C  0E00               	movlw	0
  4946  00166E  6EDF               	movwf	indf2,c
  4947                           
  4948                           ;my_uart.c: 87: State = MSGID;
  4949  001670  6E1B               	movwf	??_parseUART& (0+255),c
  4950  001672  0E01               	movlw	1
  4951  001674  6E4D               	movwf	_State,c
  4952  001676  501B               	movf	??_parseUART& (0+255),w,c
  4953                           
  4954                           ;my_uart.c: 88: command_count = 0;
  4955  001678  0E00               	movlw	0
  4956  00167A  6E42               	movwf	_command_count+1,c
  4957  00167C  0E00               	movlw	0
  4958  00167E  6E41               	movwf	_command_count,c
  4959                           
  4960                           ;my_uart.c: 89: break;
  4961  001680  0012               	return	
  4962  001682                     i1l3350:
  4963  001682  504D               	movf	_State,w,c
  4964                           
  4965                           ; Switch size 1, requested type "space"
  4966                           ; Number of cases is 3, Range of values is 1 to 3
  4967                           ; switch strategies available:
  4968                           ; Name         Instructions Cycles
  4969                           ; simple_byte           10     6 (average)
  4970                           ;	Chosen strategy is simple_byte
  4971  001684  0A01               	xorlw	1	; case 1
  4972  001686  B4D8               	btfsc	status,2,c
  4973  001688  D795               	goto	i1l3324
  4974  00168A  0A03               	xorlw	3	; case 2
  4975  00168C  B4D8               	btfsc	status,2,c
  4976  00168E  D7C4               	goto	i1l3334
  4977  001690  0A01               	xorlw	1	; case 3
  4978  001692  A4D8               	btfss	status,2,c
  4979  001694  0012               	return	
  4980  001696  D7D8               	goto	i1l3340
  4981  001698                     __end_of_parseUART:
  4982                           	opt stack 0
  4983                           pclatu	equ	0xFFB
  4984                           pclath	equ	0xFFA
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           intcon	equ	0xFF2
  4992                           postinc0	equ	0xFEE
  4993                           fsr0h	equ	0xFEA
  4994                           fsr0l	equ	0xFE9
  4995                           wreg	equ	0xFE8
  4996                           indf1	equ	0xFE7
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           bsr	equ	0xFE0
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           postdec2	equ	0xFDD
  5003                           fsr2h	equ	0xFDA
  5004                           fsr2l	equ	0xFD9
  5005                           status	equ	0xFD8
  5006                           
  5007 ;; *************** function _ReadUSART *****************
  5008 ;; Defined at:
  5009 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  data            1    0[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5023 ;;      Params:         0       0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0
  5026 ;;      Totals:         1       0       0       0       0
  5027 ;;Total ram usage:        1 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    6
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_uart_recv_int_handler
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text28
  5038  00228C                     __ptext28:
  5039                           	opt stack 0
  5040  00228C                     _ReadUSART:
  5041                           	opt stack 17
  5042                           
  5043                           ;incstack = 0
  5044  00228C  0EF2               	movlw	242
  5045  00228E  164A               	andwf	_USART_Status,f,c
  5046  002290  ACAB               	btfss	4011,6,c	;volatile
  5047  002292  D003               	goto	i1l562
  5048  002294  904A               	bcf	_USART_Status,0,c
  5049  002296  B0AB               	btfsc	4011,0,c	;volatile
  5050  002298  804A               	bsf	_USART_Status,0,c
  5051  00229A                     i1l562:
  5052  00229A  B4AB               	btfsc	4011,2,c	;volatile
  5053  00229C  844A               	bsf	_USART_Status,2,c
  5054  00229E  B2AB               	btfsc	4011,1,c	;volatile
  5055  0022A0  864A               	bsf	_USART_Status,3,c
  5056  0022A2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5057  0022A6  5001               	movf	ReadUSART@data,w,c
  5058  0022A8  0012               	return	
  5059  0022AA                     __end_of_ReadUSART:
  5060                           	opt stack 0
  5061                           pclatu	equ	0xFFB
  5062                           pclath	equ	0xFFA
  5063                           tblptru	equ	0xFF8
  5064                           tblptrh	equ	0xFF7
  5065                           tblptrl	equ	0xFF6
  5066                           tablat	equ	0xFF5
  5067                           prodh	equ	0xFF4
  5068                           prodl	equ	0xFF3
  5069                           intcon	equ	0xFF2
  5070                           postinc0	equ	0xFEE
  5071                           fsr0h	equ	0xFEA
  5072                           fsr0l	equ	0xFE9
  5073                           wreg	equ	0xFE8
  5074                           indf1	equ	0xFE7
  5075                           fsr1h	equ	0xFE2
  5076                           fsr1l	equ	0xFE1
  5077                           bsr	equ	0xFE0
  5078                           indf2	equ	0xFDF
  5079                           postinc2	equ	0xFDE
  5080                           postdec2	equ	0xFDD
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _timer1_int_handler *****************
  5086 ;; Defined at:
  5087 ;;		line 36 in file "source/user_interrupts.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  result          2   27[COMRAM] unsigned int 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5101 ;;      Params:         0       0       0       0       0
  5102 ;;      Locals:         2       0       0       0       0
  5103 ;;      Temps:          1       0       0       0       0
  5104 ;;      Totals:         3       0       0       0       0
  5105 ;;Total ram usage:        3 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    9
  5108 ;; This function calls:
  5109 ;;		_ReadTimer1
  5110 ;;		_ToMainLow_sendmsg
  5111 ;;		_WriteTimer1
  5112 ;; This function is called by:
  5113 ;;		_InterruptHandlerLow
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text29
  5118  002198                     __ptext29:
  5119                           	opt stack 0
  5120  002198                     _timer1_int_handler:
  5121                           	opt stack 15
  5122                           
  5123                           ;user_interrupts.c: 37: unsigned int result;
  5124                           ;user_interrupts.c: 44: result = ReadTimer1();
  5125                           
  5126                           ;incstack = 0
  5127  002198  EC8E  F011         	call	_ReadTimer1	;wreg free
  5128  00219C  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5129  0021A0  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5130                           
  5131                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5132  0021A4  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5133  0021A6  0E0B               	movlw	11
  5134  0021A8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5135  0021AA  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5136  0021AC  0E00               	movlw	0
  5137  0021AE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5138  0021B0  0E00               	movlw	0
  5139  0021B2  6E18               	movwf	ToMainLow_sendmsg@data,c
  5140  0021B4  0E00               	movlw	0
  5141  0021B6  EC10  F011         	call	_ToMainLow_sendmsg
  5142                           
  5143                           ;user_interrupts.c: 48: WriteTimer1(0);
  5144  0021BA  0E00               	movlw	0
  5145  0021BC  6E02               	movwf	WriteTimer1@timer1+1,c
  5146  0021BE  0E00               	movlw	0
  5147  0021C0  6E01               	movwf	WriteTimer1@timer1,c
  5148  0021C2  EC85  F011         	call	_WriteTimer1	;wreg free
  5149  0021C6  0012               	return	
  5150  0021C8                     __end_of_timer1_int_handler:
  5151                           	opt stack 0
  5152                           pclatu	equ	0xFFB
  5153                           pclath	equ	0xFFA
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           fsr0h	equ	0xFEA
  5163                           fsr0l	equ	0xFE9
  5164                           wreg	equ	0xFE8
  5165                           indf1	equ	0xFE7
  5166                           fsr1h	equ	0xFE2
  5167                           fsr1l	equ	0xFE1
  5168                           bsr	equ	0xFE0
  5169                           indf2	equ	0xFDF
  5170                           postinc2	equ	0xFDE
  5171                           postdec2	equ	0xFDD
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function _WriteTimer1 *****************
  5177 ;; Defined at:
  5178 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  timer1          2    0[COMRAM] unsigned int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  timer           2    2[COMRAM] struct Timers
  5183 ;; Return value:  Size  Location     Type
  5184 ;;		None               void
  5185 ;; Registers used:
  5186 ;;		None
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5192 ;;      Params:         2       0       0       0       0
  5193 ;;      Locals:         2       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0
  5195 ;;      Totals:         4       0       0       0       0
  5196 ;;Total ram usage:        4 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    6
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_timer1_int_handler
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text30
  5207  00230A                     __ptext30:
  5208                           	opt stack 0
  5209  00230A                     _WriteTimer1:
  5210                           	opt stack 17
  5211                           
  5212                           ;incstack = 0
  5213  00230A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5214  00230E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5215  002312  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5216  002316  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5217  00231A  0012               	return	
  5218  00231C                     __end_of_WriteTimer1:
  5219                           	opt stack 0
  5220                           pclatu	equ	0xFFB
  5221                           pclath	equ	0xFFA
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           prodh	equ	0xFF4
  5227                           prodl	equ	0xFF3
  5228                           intcon	equ	0xFF2
  5229                           postinc0	equ	0xFEE
  5230                           fsr0h	equ	0xFEA
  5231                           fsr0l	equ	0xFE9
  5232                           wreg	equ	0xFE8
  5233                           indf1	equ	0xFE7
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           bsr	equ	0xFE0
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function _ToMainLow_sendmsg *****************
  5245 ;; Defined at:
  5246 ;;		line 103 in file "source/messages.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  length          1    wreg     unsigned char 
  5249 ;;  msgtype         1   22[COMRAM] unsigned char 
  5250 ;;  data            2   23[COMRAM] PTR void 
  5251 ;;		 -> NULL(0), main@uc(23), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  length          1   25[COMRAM] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      char 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5263 ;;      Params:         3       0       0       0       0
  5264 ;;      Locals:         1       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0
  5266 ;;      Totals:         4       0       0       0       0
  5267 ;;Total ram usage:        4 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    8
  5270 ;; This function calls:
  5271 ;;		_send_msg
  5272 ;; This function is called by:
  5273 ;;		_uart_recv_int_handler
  5274 ;;		_parseUART
  5275 ;;		_timer1_int_handler
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text31
  5280  002220                     __ptext31:
  5281                           	opt stack 0
  5282  002220                     _ToMainLow_sendmsg:
  5283                           	opt stack 14
  5284                           
  5285                           ;incstack = 0
  5286                           ;ToMainLow_sendmsg@length stored from wreg
  5287  002220  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5288                           
  5289                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5290                           ;	Return value of _ToMainLow_sendmsg is never used
  5291  002224  0101               	movlb	1	; () banked
  5292  002226  0E01               	movlw	high _ToMainLow_MQ
  5293  002228  6E0C               	movwf	send_msg@qptr+1,c
  5294  00222A  0101               	movlb	1	; () banked
  5295  00222C  0E84               	movlw	low _ToMainLow_MQ
  5296  00222E  6E0B               	movwf	send_msg@qptr,c
  5297  002230  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  5298  002234  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  5299  002238  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  5300  00223C  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  5301  002240  ECE6  F00C         	call	_send_msg	;wreg free
  5302  002244  0012               	return	
  5303  002246                     __end_of_ToMainLow_sendmsg:
  5304                           	opt stack 0
  5305                           pclatu	equ	0xFFB
  5306                           pclath	equ	0xFFA
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           prodh	equ	0xFF4
  5312                           prodl	equ	0xFF3
  5313                           intcon	equ	0xFF2
  5314                           postinc0	equ	0xFEE
  5315                           fsr0h	equ	0xFEA
  5316                           fsr0l	equ	0xFE9
  5317                           wreg	equ	0xFE8
  5318                           indf1	equ	0xFE7
  5319                           fsr1h	equ	0xFE2
  5320                           fsr1l	equ	0xFE1
  5321                           bsr	equ	0xFE0
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _send_msg *****************
  5330 ;; Defined at:
  5331 ;;		line 24 in file "source/messages.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5334 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5335 ;;  length          1   12[COMRAM] unsigned char 
  5336 ;;  msgtype         1   13[COMRAM] unsigned char 
  5337 ;;  data            2   14[COMRAM] PTR void 
  5338 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), NULL(0), 
  5339 ;;		 -> main@ic(77), main@uc(23), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  5342 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5343 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5344 ;;  tlength         2   17[COMRAM] unsigned int 
  5345 ;;  slot            1   19[COMRAM] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      char 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5355 ;;      Params:         6       0       0       0       0
  5356 ;;      Locals:         5       0       0       0       0
  5357 ;;      Temps:          1       0       0       0       0
  5358 ;;      Totals:        12       0       0       0       0
  5359 ;;Total ram usage:       12 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    7
  5362 ;; This function calls:
  5363 ;;		i1_memcpy
  5364 ;; This function is called by:
  5365 ;;		_ToMainLow_sendmsg
  5366 ;;		_FromMainLow_sendmsg
  5367 ;;		_FromMainHigh_sendmsg
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text32
  5372  0019CC                     __ptext32:
  5373                           	opt stack 0
  5374  0019CC                     _send_msg:
  5375                           	opt stack 14
  5376                           
  5377                           ;messages.c: 25: unsigned char slot;
  5378                           ;messages.c: 27: msg *qmsg;
  5379                           ;messages.c: 28: size_t tlength = length;
  5380                           
  5381                           ;incstack = 0
  5382  0019CC  C00D  F012         	movff	send_msg@length,send_msg@tlength
  5383  0019D0  6A13               	clrf	send_msg@tlength+1,c
  5384                           
  5385                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5386  0019D2  EE20 F064          	lfsr	2,100
  5387  0019D6  500B               	movf	send_msg@qptr,w,c
  5388  0019D8  26D9               	addwf	fsr2l,f,c
  5389  0019DA  500C               	movf	send_msg@qptr+1,w,c
  5390  0019DC  22DA               	addwfc	fsr2h,f,c
  5391  0019DE  50DF               	movf	indf2,w,c
  5392  0019E0  6E14               	movwf	send_msg@slot,c
  5393                           
  5394                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5395  0019E2  5014               	movf	send_msg@slot,w,c
  5396  0019E4  0D19               	mullw	25
  5397  0019E6  50F3               	movf	prodl,w,c
  5398  0019E8  240B               	addwf	send_msg@qptr,w,c
  5399  0019EA  6E15               	movwf	send_msg@qmsg,c
  5400  0019EC  50F4               	movf	prodh,w,c
  5401  0019EE  200C               	addwfc	send_msg@qptr+1,w,c
  5402  0019F0  6E16               	movwf	send_msg@qmsg+1,c
  5403                           
  5404                           ;messages.c: 41: if (qmsg->full != 0) {
  5405  0019F2  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5406  0019F6  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5407  0019FA  50DF               	movf	indf2,w,c
  5408  0019FC  B4D8               	btfsc	status,2,c
  5409  0019FE  D002               	goto	i1l3300
  5410                           
  5411                           ;messages.c: 42: return (-1);
  5412  001A00  0EFF               	movlw	255
  5413  001A02  0012               	return	
  5414  001A04                     i1l3300:
  5415                           
  5416                           ;messages.c: 43: }
  5417                           ;messages.c: 46: qmsg->length = length;
  5418  001A04  EE20 F001          	lfsr	2,1
  5419  001A08  5015               	movf	send_msg@qmsg,w,c
  5420  001A0A  26D9               	addwf	fsr2l,f,c
  5421  001A0C  5016               	movf	send_msg@qmsg+1,w,c
  5422  001A0E  22DA               	addwfc	fsr2h,f,c
  5423  001A10  C00D  FFDF         	movff	send_msg@length,indf2
  5424                           
  5425                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5426  001A14  EE20 F002          	lfsr	2,2
  5427  001A18  5015               	movf	send_msg@qmsg,w,c
  5428  001A1A  26D9               	addwf	fsr2l,f,c
  5429  001A1C  5016               	movf	send_msg@qmsg+1,w,c
  5430  001A1E  22DA               	addwfc	fsr2h,f,c
  5431  001A20  C00E  FFDF         	movff	send_msg@msgtype,indf2
  5432                           
  5433                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5434  001A24  0E03               	movlw	3
  5435  001A26  2415               	addwf	send_msg@qmsg,w,c
  5436  001A28  6E01               	movwf	i1memcpy@d1,c
  5437  001A2A  0E00               	movlw	0
  5438  001A2C  2016               	addwfc	send_msg@qmsg+1,w,c
  5439  001A2E  6E02               	movwf	i1memcpy@d1+1,c
  5440  001A30  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  5441  001A34  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  5442  001A38  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  5443  001A3C  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  5444  001A40  EC38  F010         	call	i1_memcpy	;wreg free
  5445                           
  5446                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5447  001A44  EE20 F064          	lfsr	2,100
  5448  001A48  500B               	movf	send_msg@qptr,w,c
  5449  001A4A  26D9               	addwf	fsr2l,f,c
  5450  001A4C  500C               	movf	send_msg@qptr+1,w,c
  5451  001A4E  22DA               	addwfc	fsr2h,f,c
  5452  001A50  EE10 F064          	lfsr	1,100
  5453  001A54  500B               	movf	send_msg@qptr,w,c
  5454  001A56  26E1               	addwf	fsr1l,f,c
  5455  001A58  500C               	movf	send_msg@qptr+1,w,c
  5456  001A5A  22E2               	addwfc	fsr1h,f,c
  5457  001A5C  50E7               	movf	indf1,w,c
  5458  001A5E  6E11               	movwf	??_send_msg& (0+255),c
  5459  001A60  2811               	incf	??_send_msg,w,c
  5460  001A62  0B03               	andlw	3
  5461  001A64  6EDF               	movwf	indf2,c
  5462                           
  5463                           ;messages.c: 59: qmsg->full = 1;
  5464  001A66  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5465  001A6A  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5466  001A6E  0E01               	movlw	1
  5467  001A70  6EDF               	movwf	indf2,c
  5468                           
  5469                           ;messages.c: 60: return (1);
  5470  001A72  0E01               	movlw	1
  5471  001A74  0012               	return	
  5472  001A76                     __end_of_send_msg:
  5473                           	opt stack 0
  5474                           pclatu	equ	0xFFB
  5475                           pclath	equ	0xFFA
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           prodh	equ	0xFF4
  5481                           prodl	equ	0xFF3
  5482                           intcon	equ	0xFF2
  5483                           postinc0	equ	0xFEE
  5484                           fsr0h	equ	0xFEA
  5485                           fsr0l	equ	0xFE9
  5486                           wreg	equ	0xFE8
  5487                           indf1	equ	0xFE7
  5488                           fsr1h	equ	0xFE2
  5489                           fsr1l	equ	0xFE1
  5490                           bsr	equ	0xFE0
  5491                           indf2	equ	0xFDF
  5492                           postinc2	equ	0xFDE
  5493                           postdec2	equ	0xFDD
  5494                           fsr2h	equ	0xFDA
  5495                           fsr2l	equ	0xFD9
  5496                           status	equ	0xFD8
  5497                           
  5498 ;; *************** function i1_memcpy *****************
  5499 ;; Defined at:
  5500 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  d1              2    0[COMRAM] PTR void 
  5503 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5504 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  5505 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  5506 ;;  s1              2    2[COMRAM] PTR const void 
  5507 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5508 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5509 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  5510 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  5511 ;;		 -> main@ic(77), main@uc(23), 
  5512 ;;  n               2    4[COMRAM] unsigned int 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5515 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5516 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5517 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  5518 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  5519 ;;		 -> main@ic(77), main@uc(23), 
  5520 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5521 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5522 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  5523 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  2    0[COMRAM] PTR void 
  5526 ;; Registers used:
  5527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5533 ;;      Params:         6       0       0       0       0
  5534 ;;      Locals:         4       0       0       0       0
  5535 ;;      Temps:          0       0       0       0       0
  5536 ;;      Totals:        10       0       0       0       0
  5537 ;;Total ram usage:       10 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    6
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_send_msg
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text33
  5548  002070                     __ptext33:
  5549                           	opt stack 0
  5550  002070                     i1_memcpy:
  5551                           	opt stack 14
  5552                           
  5553                           ;incstack = 0
  5554  002070  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5555  002074  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5556  002078  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5557  00207C  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5558  002080  D00E               	goto	i1l3276
  5559  002082                     i1l3270:
  5560  002082  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5561  002086  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5562  00208A  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5563  00208E  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5564  002092  CFDF FFE7          	movff	indf2,indf1
  5565  002096  4A09               	infsnz	i1memcpy@s,f,c
  5566  002098  2A0A               	incf	i1memcpy@s+1,f,c
  5567  00209A  4A07               	infsnz	i1memcpy@d,f,c
  5568  00209C  2A08               	incf	i1memcpy@d+1,f,c
  5569  00209E                     i1l3276:
  5570  00209E  0605               	decf	i1memcpy@n,f,c
  5571  0020A0  A0D8               	btfss	status,0,c
  5572  0020A2  0606               	decf	i1memcpy@n+1,f,c
  5573  0020A4  2805               	incf	i1memcpy@n& (0+255),w,c
  5574  0020A6  B4D8               	btfsc	status,2,c
  5575  0020A8  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5576  0020AA  B4D8               	btfsc	status,2,c
  5577                           
  5578                           ;	Return value of i1_memcpy is never used
  5579  0020AC  0012               	return	
  5580  0020AE  D7E9               	goto	i1l3270
  5581  0020B0                     __end_ofi1_memcpy:
  5582                           	opt stack 0
  5583                           pclatu	equ	0xFFB
  5584                           pclath	equ	0xFFA
  5585                           tblptru	equ	0xFF8
  5586                           tblptrh	equ	0xFF7
  5587                           tblptrl	equ	0xFF6
  5588                           tablat	equ	0xFF5
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           postinc0	equ	0xFEE
  5593                           fsr0h	equ	0xFEA
  5594                           fsr0l	equ	0xFE9
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           fsr1h	equ	0xFE2
  5598                           fsr1l	equ	0xFE1
  5599                           bsr	equ	0xFE0
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           postdec2	equ	0xFDD
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607 ;; *************** function _ReadTimer1 *****************
  5608 ;; Defined at:
  5609 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  timer           2    2[COMRAM] struct Timers
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  2    0[COMRAM] unsigned int 
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5623 ;;      Params:         2       0       0       0       0
  5624 ;;      Locals:         2       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0
  5626 ;;      Totals:         4       0       0       0       0
  5627 ;;Total ram usage:        4 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    6
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_timer1_int_handler
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text34
  5638  00231C                     __ptext34:
  5639                           	opt stack 0
  5640  00231C                     _ReadTimer1:
  5641                           	opt stack 17
  5642                           
  5643                           ;incstack = 0
  5644  00231C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5645  002320  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5646  002324  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5647  002328  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5648  00232C  0012               	return	
  5649  00232E                     __end_of_ReadTimer1:
  5650                           	opt stack 0
  5651                           pclatu	equ	0xFFB
  5652                           pclath	equ	0xFFA
  5653                           tblptru	equ	0xFF8
  5654                           tblptrh	equ	0xFF7
  5655                           tblptrl	equ	0xFF6
  5656                           tablat	equ	0xFF5
  5657                           prodh	equ	0xFF4
  5658                           prodl	equ	0xFF3
  5659                           intcon	equ	0xFF2
  5660                           postinc0	equ	0xFEE
  5661                           fsr0h	equ	0xFEA
  5662                           fsr0l	equ	0xFE9
  5663                           wreg	equ	0xFE8
  5664                           indf1	equ	0xFE7
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           bsr	equ	0xFE0
  5668                           indf2	equ	0xFDF
  5669                           postinc2	equ	0xFDE
  5670                           postdec2	equ	0xFDD
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           
  5675 ;; *************** function _InterruptHandlerHigh *****************
  5676 ;; Defined at:
  5677 ;;		line 83 in file "source/interrupts.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;		None               void
  5684 ;; Registers used:
  5685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5691 ;;      Params:         0       0       0       0       0
  5692 ;;      Locals:         0       0       0       0       0
  5693 ;;      Temps:          0      14       0       0       0
  5694 ;;      Totals:         0      14       0       0       0
  5695 ;;Total ram usage:       14 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    5
  5698 ;; This function calls:
  5699 ;;		_SleepIfOkay
  5700 ;;		_i2c_int_handler
  5701 ;;		_timer0_int_handler
  5702 ;; This function is called by:
  5703 ;;		Interrupt level 2
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	intcode
  5708  000008                     __pintcode:
  5709                           	opt stack 0
  5710  000008                     _InterruptHandlerHigh:
  5711                           	opt stack 14
  5712                           
  5713                           ;incstack = 0
  5714  000008  CFFA F099          	movff	pclath,??_InterruptHandlerHigh
  5715  00000C  CFFB F09A          	movff	pclatu,??_InterruptHandlerHigh+1
  5716  000010  EFC6  F00D         	goto	int_func
  5717                           pclatu	equ	0xFFB
  5718                           pclath	equ	0xFFA
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           postinc0	equ	0xFEE
  5727                           fsr0h	equ	0xFEA
  5728                           fsr0l	equ	0xFE9
  5729                           wreg	equ	0xFE8
  5730                           indf1	equ	0xFE7
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           bsr	equ	0xFE0
  5734                           indf2	equ	0xFDF
  5735                           postinc2	equ	0xFDE
  5736                           postdec2	equ	0xFDD
  5737                           fsr2h	equ	0xFDA
  5738                           fsr2l	equ	0xFD9
  5739                           status	equ	0xFD8
  5740                           
  5741                           	psect	intcode_body
  5742  001B8C                     __pintcode_body:
  5743                           	opt stack 14
  5744  001B8C                     int_func:
  5745                           	opt stack 14
  5746  001B8C  CFE9 F09B          	movff	fsr0l,??_InterruptHandlerHigh+2
  5747  001B90  CFEA F09C          	movff	fsr0h,??_InterruptHandlerHigh+3
  5748  001B94  CFE1 F09D          	movff	fsr1l,??_InterruptHandlerHigh+4
  5749  001B98  CFE2 F09E          	movff	fsr1h,??_InterruptHandlerHigh+5
  5750  001B9C  CFD9 F09F          	movff	fsr2l,??_InterruptHandlerHigh+6
  5751  001BA0  CFDA F0A0          	movff	fsr2h,??_InterruptHandlerHigh+7
  5752  001BA4  CFF3 F0A1          	movff	prodl,??_InterruptHandlerHigh+8
  5753  001BA8  CFF4 F0A2          	movff	prodh,??_InterruptHandlerHigh+9
  5754  001BAC  CFF6 F0A3          	movff	tblptrl,??_InterruptHandlerHigh+10
  5755  001BB0  CFF7 F0A4          	movff	tblptrh,??_InterruptHandlerHigh+11
  5756  001BB4  CFF8 F0A5          	movff	tblptru,??_InterruptHandlerHigh+12
  5757  001BB8  CFF5 F0A6          	movff	tablat,??_InterruptHandlerHigh+13
  5758                           
  5759                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5760  001BBC  A69E               	btfss	3998,3,c	;volatile
  5761  001BBE  D003               	goto	i2l3384
  5762                           
  5763                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5764  001BC0  969E               	bcf	3998,3,c	;volatile
  5765                           
  5766                           ;interrupts.c: 92: i2c_int_handler();
  5767  001BC2  EC35  F011         	call	_i2c_int_handler	;wreg free
  5768  001BC6                     i2l3384:
  5769                           
  5770                           ;interrupts.c: 93: }
  5771                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5772  001BC6  A4F2               	btfss	intcon,2,c	;volatile
  5773  001BC8  D003               	goto	i2l3390
  5774                           
  5775                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5776  001BCA  94F2               	bcf	intcon,2,c	;volatile
  5777                           
  5778                           ;interrupts.c: 99: timer0_int_handler();
  5779  001BCC  EC84  F00D         	call	_timer0_int_handler	;wreg free
  5780  001BD0                     i2l3390:
  5781                           
  5782                           ;interrupts.c: 100: }
  5783                           ;interrupts.c: 109: SleepIfOkay();
  5784  001BD0  EC69  F00F         	call	_SleepIfOkay	;wreg free
  5785  001BD4  C0A6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5786  001BD8  C0A5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5787  001BDC  C0A4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5788  001BE0  C0A3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5789  001BE4  C0A2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5790  001BE8  C0A1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5791  001BEC  C0A0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5792  001BF0  C09F  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5793  001BF4  C09E  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5794  001BF8  C09D  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5795  001BFC  C09C  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5796  001C00  C09B  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5797  001C04  C09A  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5798  001C08  C099  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5799  001C0C  0011               	retfie		f
  5800  001C0E                     __end_of_InterruptHandlerHigh:
  5801                           	opt stack 0
  5802                           pclatu	equ	0xFFB
  5803                           pclath	equ	0xFFA
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           postinc0	equ	0xFEE
  5812                           fsr0h	equ	0xFEA
  5813                           fsr0l	equ	0xFE9
  5814                           wreg	equ	0xFE8
  5815                           indf1	equ	0xFE7
  5816                           fsr1h	equ	0xFE2
  5817                           fsr1l	equ	0xFE1
  5818                           bsr	equ	0xFE0
  5819                           indf2	equ	0xFDF
  5820                           postinc2	equ	0xFDE
  5821                           postdec2	equ	0xFDD
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826 ;; *************** function _timer0_int_handler *****************
  5827 ;; Defined at:
  5828 ;;		line 16 in file "source/user_interrupts.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  val             2   21[BANK0 ] unsigned int 
  5833 ;;  msgtype         2   19[BANK0 ] int 
  5834 ;;  length          2   17[BANK0 ] int 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;		None               void
  5837 ;; Registers used:
  5838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5844 ;;      Params:         0       0       0       0       0
  5845 ;;      Locals:         0       6       0       0       0
  5846 ;;      Temps:          0       1       0       0       0
  5847 ;;      Totals:         0       7       0       0       0
  5848 ;;Total ram usage:        7 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    3
  5851 ;; This function calls:
  5852 ;;		_FromMainHigh_recvmsg
  5853 ;;		_ToMainHigh_sendmsg
  5854 ;;		_WriteTimer0
  5855 ;; This function is called by:
  5856 ;;		_InterruptHandlerHigh
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text36
  5861  001B08                     __ptext36:
  5862                           	opt stack 0
  5863  001B08                     _timer0_int_handler:
  5864                           	opt stack 15
  5865                           
  5866                           ;user_interrupts.c: 17: unsigned int val;
  5867                           ;user_interrupts.c: 18: int length, msgtype;
  5868                           ;user_interrupts.c: 25: WriteTimer0(0);
  5869                           
  5870                           ;incstack = 0
  5871  001B08  0E00               	movlw	0
  5872  001B0A  6E33               	movwf	WriteTimer0@timer0+1,c
  5873  001B0C  0E00               	movlw	0
  5874  001B0E  6E32               	movwf	WriteTimer0@timer0,c
  5875  001B10  EC97  F011         	call	_WriteTimer0	;wreg free
  5876                           
  5877                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5878  001B14  0100               	movlb	0	; () banked
  5879  001B16  0E00               	movlw	high timer0_int_handler@msgtype
  5880  001B18  0100               	movlb	0	; () banked
  5881  001B1A  0100               	movlb	0	; () banked
  5882  001B1C  6F8D               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  5883  001B1E  0100               	movlb	0	; () banked
  5884  001B20  0E93               	movlw	low timer0_int_handler@msgtype
  5885  001B22  0100               	movlb	0	; () banked
  5886  001B24  0100               	movlb	0	; () banked
  5887  001B26  6F8C               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  5888  001B28  0100               	movlb	0	; () banked
  5889  001B2A  0E00               	movlw	high timer0_int_handler@val
  5890  001B2C  0100               	movlb	0	; () banked
  5891  001B2E  0100               	movlb	0	; () banked
  5892  001B30  6F8F               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  5893  001B32  0100               	movlb	0	; () banked
  5894  001B34  0E95               	movlw	low timer0_int_handler@val
  5895  001B36  0100               	movlb	0	; () banked
  5896  001B38  0100               	movlb	0	; () banked
  5897  001B3A  6F8E               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  5898  001B3C  0E02               	movlw	2
  5899  001B3E  EC17  F010         	call	_FromMainHigh_recvmsg
  5900  001B42  0100               	movlb	0	; () banked
  5901  001B44  0100               	movlb	0	; () banked
  5902  001B46  6F91               	movwf	timer0_int_handler@length& (0+255),b
  5903  001B48  0100               	movlb	0	; () banked
  5904  001B4A  6B92               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5905  001B4C  0100               	movlb	0	; () banked
  5906  001B4E  BF91               	btfsc	timer0_int_handler@length& (0+255),7,b
  5907  001B50  0792               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  5911  001B52  0100               	movlb	0	; () banked
  5912  001B54  0100               	movlb	0	; () banked
  5913  001B56  5191               	movf	timer0_int_handler@length& (0+255),w,b
  5914  001B58  0A02               	xorlw	2
  5915  001B5A  1192               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5916  001B5C  A4D8               	btfss	status,2,c
  5917  001B5E  0012               	return	
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5921  001B60  0100               	movlb	0	; () banked
  5922  001B62  6F90               	movwf	??_timer0_int_handler& (0+255),b
  5923  001B64  0E0A               	movlw	10
  5924  001B66  0100               	movlb	0	; () banked
  5925  001B68  0100               	movlb	0	; () banked
  5926  001B6A  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5927  001B6C  0100               	movlb	0	; () banked
  5928  001B6E  5190               	movf	??_timer0_int_handler& (0+255),w,b
  5929  001B70  0100               	movlb	0	; () banked
  5930  001B72  0E00               	movlw	high timer0_int_handler@val
  5931  001B74  0100               	movlb	0	; () banked
  5932  001B76  0100               	movlb	0	; () banked
  5933  001B78  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5934  001B7A  0100               	movlb	0	; () banked
  5935  001B7C  0E95               	movlw	low timer0_int_handler@val
  5936  001B7E  0100               	movlb	0	; () banked
  5937  001B80  0100               	movlb	0	; () banked
  5938  001B82  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5939  001B84  0E02               	movlw	2
  5940  001B86  ECB1  F010         	call	_ToMainHigh_sendmsg
  5941  001B8A  0012               	return	
  5942  001B8C                     __end_of_timer0_int_handler:
  5943                           	opt stack 0
  5944                           pclatu	equ	0xFFB
  5945                           pclath	equ	0xFFA
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           prodh	equ	0xFF4
  5951                           prodl	equ	0xFF3
  5952                           intcon	equ	0xFF2
  5953                           postinc0	equ	0xFEE
  5954                           fsr0h	equ	0xFEA
  5955                           fsr0l	equ	0xFE9
  5956                           wreg	equ	0xFE8
  5957                           indf1	equ	0xFE7
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           bsr	equ	0xFE0
  5961                           indf2	equ	0xFDF
  5962                           postinc2	equ	0xFDE
  5963                           postdec2	equ	0xFDD
  5964                           fsr2h	equ	0xFDA
  5965                           fsr2l	equ	0xFD9
  5966                           status	equ	0xFD8
  5967                           
  5968 ;; *************** function _WriteTimer0 *****************
  5969 ;; Defined at:
  5970 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  timer0          2   49[COMRAM] unsigned int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  timer           2   51[COMRAM] struct Timers
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		None
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5984 ;;      Params:         2       0       0       0       0
  5985 ;;      Locals:         2       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0
  5987 ;;      Totals:         4       0       0       0       0
  5988 ;;Total ram usage:        4 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_timer0_int_handler
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text37
  5998  00232E                     __ptext37:
  5999                           	opt stack 0
  6000  00232E                     _WriteTimer0:
  6001                           	opt stack 17
  6002                           
  6003                           ;incstack = 0
  6004  00232E  C032  F034         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6005  002332  C033  F035         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6006  002336  C035  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6007  00233A  C034  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6008  00233E  0012               	return	
  6009  002340                     __end_of_WriteTimer0:
  6010                           	opt stack 0
  6011                           pclatu	equ	0xFFB
  6012                           pclath	equ	0xFFA
  6013                           tblptru	equ	0xFF8
  6014                           tblptrh	equ	0xFF7
  6015                           tblptrl	equ	0xFF6
  6016                           tablat	equ	0xFF5
  6017                           prodh	equ	0xFF4
  6018                           prodl	equ	0xFF3
  6019                           intcon	equ	0xFF2
  6020                           postinc0	equ	0xFEE
  6021                           fsr0h	equ	0xFEA
  6022                           fsr0l	equ	0xFE9
  6023                           wreg	equ	0xFE8
  6024                           indf1	equ	0xFE7
  6025                           fsr1h	equ	0xFE2
  6026                           fsr1l	equ	0xFE1
  6027                           bsr	equ	0xFE0
  6028                           indf2	equ	0xFDF
  6029                           postinc2	equ	0xFDE
  6030                           postdec2	equ	0xFDD
  6031                           fsr2h	equ	0xFDA
  6032                           fsr2l	equ	0xFD9
  6033                           status	equ	0xFD8
  6034                           
  6035 ;; *************** function _FromMainHigh_recvmsg *****************
  6036 ;; Defined at:
  6037 ;;		line 183 in file "source/messages.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  maxlength       1    wreg     unsigned char 
  6040 ;;  msgtype         2   12[BANK0 ] PTR unsigned char 
  6041 ;;		 -> timer0_int_handler@msgtype(2), 
  6042 ;;  data            2   14[BANK0 ] PTR void 
  6043 ;;		 -> timer0_int_handler@val(2), 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  maxlength       1   61[COMRAM] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      char 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6055 ;;      Params:         0       4       0       0       0
  6056 ;;      Locals:         1       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0
  6058 ;;      Totals:         1       4       0       0       0
  6059 ;;Total ram usage:        5 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    2
  6062 ;; This function calls:
  6063 ;;		i2_recv_msg
  6064 ;; This function is called by:
  6065 ;;		_timer0_int_handler
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text38
  6070  00202E                     __ptext38:
  6071                           	opt stack 0
  6072  00202E                     _FromMainHigh_recvmsg:
  6073                           	opt stack 15
  6074                           
  6075                           ;incstack = 0
  6076                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6077  00202E  CFE8 F03E          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6078                           
  6079                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6080  002032  0103               	movlb	3	; () banked
  6081  002034  0E03               	movlw	high _FromMainHigh_MQ
  6082  002036  0100               	movlb	0	; () banked
  6083  002038  0100               	movlb	0	; () banked
  6084  00203A  6F81               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6085  00203C  0103               	movlb	3	; () banked
  6086  00203E  0E00               	movlw	low _FromMainHigh_MQ
  6087  002040  0100               	movlb	0	; () banked
  6088  002042  0100               	movlb	0	; () banked
  6089  002044  6F80               	movwf	i2recv_msg@qptr& (0+255),b
  6090  002046  C03E  F082         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6091  00204A  0100               	movlb	0	; () banked
  6092  00204C  0100               	movlb	0	; () banked
  6093  00204E  C08D  F084         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6094  002052  0100               	movlb	0	; () banked
  6095  002054  0100               	movlb	0	; () banked
  6096  002056  C08C  F083         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6097  00205A  0100               	movlb	0	; () banked
  6098  00205C  0100               	movlb	0	; () banked
  6099  00205E  C08F  F086         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6100  002062  0100               	movlb	0	; () banked
  6101  002064  0100               	movlb	0	; () banked
  6102  002066  C08E  F085         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6103  00206A  ECCB  F009         	call	i2_recv_msg	;wreg free
  6104  00206E  0012               	return	
  6105  002070                     __end_of_FromMainHigh_recvmsg:
  6106                           	opt stack 0
  6107                           pclatu	equ	0xFFB
  6108                           pclath	equ	0xFFA
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           postinc0	equ	0xFEE
  6117                           fsr0h	equ	0xFEA
  6118                           fsr0l	equ	0xFE9
  6119                           wreg	equ	0xFE8
  6120                           indf1	equ	0xFE7
  6121                           fsr1h	equ	0xFE2
  6122                           fsr1l	equ	0xFE1
  6123                           bsr	equ	0xFE0
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           fsr2h	equ	0xFDA
  6128                           fsr2l	equ	0xFD9
  6129                           status	equ	0xFD8
  6130                           
  6131 ;; *************** function i2_recv_msg *****************
  6132 ;; Defined at:
  6133 ;;		line 63 in file "source/messages.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  6136 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6137 ;;  maxlength       1    2[BANK0 ] unsigned char 
  6138 ;;  msgtype         2    3[BANK0 ] PTR unsigned char 
  6139 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6140 ;;  data            2    5[BANK0 ] PTR void 
  6141 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
  6144 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6145 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6146 ;;  recv_msg        2    8[BANK0 ] unsigned int 
  6147 ;;  recv_msg        1    7[BANK0 ] unsigned char 
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      char 
  6150 ;; Registers used:
  6151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6157 ;;      Params:         0       7       0       0       0
  6158 ;;      Locals:         0       5       0       0       0
  6159 ;;      Temps:          2       0       0       0       0
  6160 ;;      Totals:         2      12       0       0       0
  6161 ;;Total ram usage:       14 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    1
  6164 ;; This function calls:
  6165 ;;		i2_memcpy
  6166 ;; This function is called by:
  6167 ;;		_FromMainHigh_recvmsg
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text39
  6172  001396                     __ptext39:
  6173                           	opt stack 0
  6174  001396                     i2_recv_msg:
  6175                           	opt stack 15
  6176                           
  6177                           ;messages.c: 64: unsigned char slot;
  6178                           ;messages.c: 68: msg *qmsg;
  6179                           ;messages.c: 69: size_t tlength;
  6180                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6181                           
  6182                           ;incstack = 0
  6183  001396  0100               	movlb	0	; () banked
  6184  001398  EE20 F065          	lfsr	2,101
  6185  00139C  0100               	movlb	0	; () banked
  6186  00139E  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6187  0013A0  26D9               	addwf	fsr2l,f,c
  6188  0013A2  0100               	movlb	0	; () banked
  6189  0013A4  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6190  0013A6  22DA               	addwfc	fsr2h,f,c
  6191  0013A8  50DF               	movf	indf2,w,c
  6192  0013AA  0100               	movlb	0	; () banked
  6193  0013AC  0100               	movlb	0	; () banked
  6194  0013AE  6F87               	movwf	i2recv_msg@slot& (0+255),b
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6198  0013B0  0100               	movlb	0	; () banked
  6199  0013B2  0100               	movlb	0	; () banked
  6200  0013B4  5187               	movf	i2recv_msg@slot& (0+255),w,b
  6201  0013B6  0D19               	mullw	25
  6202  0013B8  50F3               	movf	prodl,w,c
  6203  0013BA  0100               	movlb	0	; () banked
  6204  0013BC  0100               	movlb	0	; () banked
  6205  0013BE  2580               	addwf	i2recv_msg@qptr& (0+255),w,b
  6206  0013C0  0100               	movlb	0	; () banked
  6207  0013C2  0100               	movlb	0	; () banked
  6208  0013C4  6F8A               	movwf	i2recv_msg@qmsg& (0+255),b
  6209  0013C6  50F4               	movf	prodh,w,c
  6210  0013C8  0100               	movlb	0	; () banked
  6211  0013CA  0100               	movlb	0	; () banked
  6212  0013CC  2181               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6213  0013CE  0100               	movlb	0	; () banked
  6214  0013D0  6F8B               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;messages.c: 74: if (qmsg->full == 1) {
  6218  0013D2  0E01               	movlw	1
  6219  0013D4  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6220  0013D8  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6221  0013DC  62DF               	cpfseq	indf2,c
  6222  0013DE  D06C               	goto	i2l3738
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6226  0013E0  0100               	movlb	0	; () banked
  6227  0013E2  EE20 F001          	lfsr	2,1
  6228  0013E6  0100               	movlb	0	; () banked
  6229  0013E8  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6230  0013EA  26D9               	addwf	fsr2l,f,c
  6231  0013EC  0100               	movlb	0	; () banked
  6232  0013EE  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6233  0013F0  22DA               	addwfc	fsr2h,f,c
  6234  0013F2  50DF               	movf	indf2,w,c
  6235  0013F4  0100               	movlb	0	; () banked
  6236  0013F6  0100               	movlb	0	; () banked
  6237  0013F8  5D82               	subwf	i2recv_msg@maxlength& (0+255),w,b
  6238  0013FA  B0D8               	btfsc	status,0,c
  6239  0013FC  D002               	goto	i2l3722
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;messages.c: 77: return (-3);
  6243  0013FE  0EFD               	movlw	253
  6244  001400  0012               	return	
  6245  001402                     i2l3722:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;messages.c: 78: }
  6249                           ;messages.c: 80: tlength = qmsg->length;
  6250  001402  0100               	movlb	0	; () banked
  6251  001404  EE20 F001          	lfsr	2,1
  6252  001408  0100               	movlb	0	; () banked
  6253  00140A  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6254  00140C  26D9               	addwf	fsr2l,f,c
  6255  00140E  0100               	movlb	0	; () banked
  6256  001410  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6257  001412  22DA               	addwfc	fsr2h,f,c
  6258  001414  50DF               	movf	indf2,w,c
  6259  001416  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6260  001418  503C               	movf	??i2_recv_msg,w,c
  6261  00141A  0100               	movlb	0	; () banked
  6262  00141C  0100               	movlb	0	; () banked
  6263  00141E  6F88               	movwf	i2recv_msg@tlength& (0+255),b
  6264  001420  0100               	movlb	0	; () banked
  6265  001422  6B89               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6269  001424  0100               	movlb	0	; () banked
  6270  001426  C086  F033         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6271  00142A  0100               	movlb	0	; () banked
  6272  00142C  C085  F032         	movff	i2recv_msg@data,i2memcpy@d1
  6273  001430  0E03               	movlw	3
  6274  001432  0100               	movlb	0	; () banked
  6275  001434  0100               	movlb	0	; () banked
  6276  001436  258A               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6277  001438  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6278  00143A  0E00               	movlw	0
  6279  00143C  0100               	movlb	0	; () banked
  6280  00143E  0100               	movlb	0	; () banked
  6281  001440  218B               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6282  001442  6E3D               	movwf	(??i2_recv_msg+1)& (0+255),c
  6283  001444  C03C  F034         	movff	??i2_recv_msg,i2memcpy@s1
  6284  001448  C03D  F035         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6285  00144C  C088  F036         	movff	i2recv_msg@tlength,i2memcpy@n
  6286  001450  C089  F037         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6287  001454  EC58  F010         	call	i2_memcpy	;wreg free
  6288                           
  6289                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6290  001458  0100               	movlb	0	; () banked
  6291  00145A  EE20 F065          	lfsr	2,101
  6292  00145E  0100               	movlb	0	; () banked
  6293  001460  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6294  001462  26D9               	addwf	fsr2l,f,c
  6295  001464  0100               	movlb	0	; () banked
  6296  001466  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6297  001468  22DA               	addwfc	fsr2h,f,c
  6298  00146A  0100               	movlb	0	; () banked
  6299  00146C  EE10 F065          	lfsr	1,101
  6300  001470  0100               	movlb	0	; () banked
  6301  001472  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6302  001474  26E1               	addwf	fsr1l,f,c
  6303  001476  0100               	movlb	0	; () banked
  6304  001478  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6305  00147A  22E2               	addwfc	fsr1h,f,c
  6306  00147C  50E7               	movf	indf1,w,c
  6307  00147E  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6308  001480  283C               	incf	??i2_recv_msg,w,c
  6309  001482  0B03               	andlw	3
  6310  001484  6EDF               	movwf	indf2,c
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6314  001486  0100               	movlb	0	; () banked
  6315  001488  EE20 F002          	lfsr	2,2
  6316  00148C  0100               	movlb	0	; () banked
  6317  00148E  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6318  001490  26D9               	addwf	fsr2l,f,c
  6319  001492  0100               	movlb	0	; () banked
  6320  001494  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6321  001496  22DA               	addwfc	fsr2h,f,c
  6322  001498  C083  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6323  00149C  C084  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6324  0014A0  CFDF FFE7          	movff	indf2,indf1
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;messages.c: 91: qmsg->full = 0;
  6328  0014A4  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6329  0014A8  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6330  0014AC  0E00               	movlw	0
  6331  0014AE  6EDF               	movwf	indf2,c
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;messages.c: 92: return (tlength);
  6335  0014B0  0100               	movlb	0	; () banked
  6336  0014B2  0100               	movlb	0	; () banked
  6337  0014B4  5188               	movf	i2recv_msg@tlength& (0+255),w,b
  6338  0014B6  0012               	return	
  6339  0014B8                     i2l3738:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;messages.c: 94: return (-4);
  6343  0014B8  0EFC               	movlw	252
  6344  0014BA  0012               	return	
  6345  0014BC                     __end_ofi2_recv_msg:
  6346                           	opt stack 0
  6347                           pclatu	equ	0xFFB
  6348                           pclath	equ	0xFFA
  6349                           tblptru	equ	0xFF8
  6350                           tblptrh	equ	0xFF7
  6351                           tblptrl	equ	0xFF6
  6352                           tablat	equ	0xFF5
  6353                           prodh	equ	0xFF4
  6354                           prodl	equ	0xFF3
  6355                           intcon	equ	0xFF2
  6356                           postinc0	equ	0xFEE
  6357                           fsr0h	equ	0xFEA
  6358                           fsr0l	equ	0xFE9
  6359                           wreg	equ	0xFE8
  6360                           indf1	equ	0xFE7
  6361                           fsr1h	equ	0xFE2
  6362                           fsr1l	equ	0xFE1
  6363                           bsr	equ	0xFE0
  6364                           indf2	equ	0xFDF
  6365                           postinc2	equ	0xFDE
  6366                           postdec2	equ	0xFDD
  6367                           fsr2h	equ	0xFDA
  6368                           fsr2l	equ	0xFD9
  6369                           status	equ	0xFD8
  6370                           
  6371 ;; *************** function _i2c_int_handler *****************
  6372 ;; Defined at:
  6373 ;;		line 192 in file "source/my_i2c.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6387 ;;      Params:         0       0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0
  6390 ;;      Totals:         0       0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    4
  6394 ;; This function calls:
  6395 ;;		_i2c_master_int_handler
  6396 ;;		_i2c_slave_int_handler
  6397 ;; This function is called by:
  6398 ;;		_InterruptHandlerHigh
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text40
  6403  00226A                     __ptext40:
  6404                           	opt stack 0
  6405  00226A                     _i2c_int_handler:
  6406                           	opt stack 14
  6407                           
  6408                           ;my_i2c.c: 193: switch (i2c_mode){
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;incstack = 0
  6412  00226A  D006               	goto	i2l3400
  6413  00226C                     i2l3394:
  6414                           
  6415                           ;my_i2c.c: 195: i2c_master_int_handler();
  6416  00226C  EC7E  F003         	call	_i2c_master_int_handler	;wreg free
  6417                           
  6418                           ;my_i2c.c: 196: break;
  6419  002270  0012               	return	
  6420  002272                     i2l3396:
  6421                           
  6422                           ;my_i2c.c: 199: i2c_slave_int_handler();
  6423  002272  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  6424                           
  6425                           ;my_i2c.c: 200: break;
  6426  002276  0012               	return	
  6427  002278                     i2l3400:
  6428  002278  0100               	movlb	0	; () banked
  6429  00227A  0100               	movlb	0	; () banked
  6430  00227C  51C8               	movf	_i2c_mode& (0+255),w,b
  6431                           
  6432                           ; Switch size 1, requested type "space"
  6433                           ; Number of cases is 2, Range of values is 1 to 2
  6434                           ; switch strategies available:
  6435                           ; Name         Instructions Cycles
  6436                           ; simple_byte            7     4 (average)
  6437                           ;	Chosen strategy is simple_byte
  6438  00227E  0A01               	xorlw	1	; case 1
  6439  002280  B4D8               	btfsc	status,2,c
  6440  002282  D7F4               	goto	i2l3394
  6441  002284  0A03               	xorlw	3	; case 2
  6442  002286  A4D8               	btfss	status,2,c
  6443  002288  0012               	return	
  6444  00228A  D7F3               	goto	i2l3396
  6445  00228C                     __end_of_i2c_int_handler:
  6446                           	opt stack 0
  6447                           pclatu	equ	0xFFB
  6448                           pclath	equ	0xFFA
  6449                           tblptru	equ	0xFF8
  6450                           tblptrh	equ	0xFF7
  6451                           tblptrl	equ	0xFF6
  6452                           tablat	equ	0xFF5
  6453                           prodh	equ	0xFF4
  6454                           prodl	equ	0xFF3
  6455                           intcon	equ	0xFF2
  6456                           postinc0	equ	0xFEE
  6457                           fsr0h	equ	0xFEA
  6458                           fsr0l	equ	0xFE9
  6459                           wreg	equ	0xFE8
  6460                           indf1	equ	0xFE7
  6461                           fsr1h	equ	0xFE2
  6462                           fsr1l	equ	0xFE1
  6463                           bsr	equ	0xFE0
  6464                           indf2	equ	0xFDF
  6465                           postinc2	equ	0xFDE
  6466                           postdec2	equ	0xFDD
  6467                           fsr2h	equ	0xFDA
  6468                           fsr2l	equ	0xFD9
  6469                           status	equ	0xFD8
  6470                           
  6471 ;; *************** function _i2c_slave_int_handler *****************
  6472 ;; Defined at:
  6473 ;;		line 209 in file "source/my_i2c.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  error_buf       3   16[BANK0 ] unsigned char [3]
  6478 ;;  data_read       1   24[BANK0 ] unsigned char 
  6479 ;;  msg_ready       1   23[BANK0 ] unsigned char 
  6480 ;;  msg_to_send     1   22[BANK0 ] unsigned char 
  6481 ;;  i2c_data        1   21[BANK0 ] unsigned char 
  6482 ;;  overrun_erro    1   20[BANK0 ] unsigned char 
  6483 ;;  data_written    1   19[BANK0 ] unsigned char 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;		None               void
  6486 ;; Registers used:
  6487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6493 ;;      Params:         0       0       0       0       0
  6494 ;;      Locals:         0       9       0       0       0
  6495 ;;      Temps:          0       2       0       0       0
  6496 ;;      Totals:         0      11       0       0       0
  6497 ;;Total ram usage:       11 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    3
  6500 ;; This function calls:
  6501 ;;		_ToMainHigh_sendmsg
  6502 ;;		_handle_start
  6503 ;;		_start_i2c_slave_reply
  6504 ;; This function is called by:
  6505 ;;		_i2c_int_handler
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text41
  6510  0000BA                     __ptext41:
  6511                           	opt stack 0
  6512  0000BA                     _i2c_slave_int_handler:
  6513                           	opt stack 14
  6514                           
  6515                           ;my_i2c.c: 210: unsigned char i2c_data;
  6516                           ;my_i2c.c: 211: unsigned char data_read = 0;
  6517                           
  6518                           ;incstack = 0
  6519  0000BA  0100               	movlb	0	; () banked
  6520  0000BC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6521  0000BE  0E00               	movlw	0
  6522  0000C0  0100               	movlb	0	; () banked
  6523  0000C2  0100               	movlb	0	; () banked
  6524  0000C4  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6525  0000C6  0100               	movlb	0	; () banked
  6526  0000C8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6527                           
  6528                           ;my_i2c.c: 212: unsigned char data_written = 0;
  6529  0000CA  0100               	movlb	0	; () banked
  6530  0000CC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6531  0000CE  0E00               	movlw	0
  6532  0000D0  0100               	movlb	0	; () banked
  6533  0000D2  0100               	movlb	0	; () banked
  6534  0000D4  6F93               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6535  0000D6  0100               	movlb	0	; () banked
  6536  0000D8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6537                           
  6538                           ;my_i2c.c: 213: unsigned char msg_ready = 0;
  6539  0000DA  0100               	movlb	0	; () banked
  6540  0000DC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6541  0000DE  0E00               	movlw	0
  6542  0000E0  0100               	movlb	0	; () banked
  6543  0000E2  0100               	movlb	0	; () banked
  6544  0000E4  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6545  0000E6  0100               	movlb	0	; () banked
  6546  0000E8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6547                           
  6548                           ;my_i2c.c: 214: unsigned char msg_to_send = 0;
  6549  0000EA  0100               	movlb	0	; () banked
  6550  0000EC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6551  0000EE  0E00               	movlw	0
  6552  0000F0  0100               	movlb	0	; () banked
  6553  0000F2  0100               	movlb	0	; () banked
  6554  0000F4  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6555  0000F6  0100               	movlb	0	; () banked
  6556  0000F8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6557                           
  6558                           ;my_i2c.c: 215: unsigned char overrun_error = 0;
  6559  0000FA  0100               	movlb	0	; () banked
  6560  0000FC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6561  0000FE  0E00               	movlw	0
  6562  000100  0100               	movlb	0	; () banked
  6563  000102  0100               	movlb	0	; () banked
  6564  000104  6F94               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6565  000106  0100               	movlb	0	; () banked
  6566  000108  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;my_i2c.c: 216: unsigned char error_buf[3];
  6570                           ;my_i2c.c: 219: if (SSPCON1bits.SSPOV == 1) {
  6571  00010A  ACC6               	btfss	4038,6,c	;volatile
  6572  00010C  D029               	goto	i2l3558
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;my_i2c.c: 220: SSPCON1bits.SSPOV = 0;
  6576  00010E  9CC6               	bcf	4038,6,c	;volatile
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;my_i2c.c: 224: ic_ptr->status = 0x5;
  6580  000110  0100               	movlb	0	; () banked
  6581  000112  EE20 F019          	lfsr	2,25
  6582  000116  0100               	movlb	0	; () banked
  6583  000118  51C6               	movf	_ic_ptr& (0+255),w,b
  6584  00011A  26D9               	addwf	fsr2l,f,c
  6585  00011C  0100               	movlb	0	; () banked
  6586  00011E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6587  000120  22DA               	addwfc	fsr2h,f,c
  6588  000122  0E05               	movlw	5
  6589  000124  6EDF               	movwf	indf2,c
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;my_i2c.c: 225: overrun_error = 1;
  6593  000126  0100               	movlb	0	; () banked
  6594  000128  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6595  00012A  0E01               	movlw	1
  6596  00012C  0100               	movlb	0	; () banked
  6597  00012E  0100               	movlb	0	; () banked
  6598  000130  6F94               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6599  000132  0100               	movlb	0	; () banked
  6600  000134  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;my_i2c.c: 226: ic_ptr->error_count++;
  6604  000136  0100               	movlb	0	; () banked
  6605  000138  EE20 F01B          	lfsr	2,27
  6606  00013C  0100               	movlb	0	; () banked
  6607  00013E  51C6               	movf	_ic_ptr& (0+255),w,b
  6608  000140  26D9               	addwf	fsr2l,f,c
  6609  000142  0100               	movlb	0	; () banked
  6610  000144  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6611  000146  22DA               	addwfc	fsr2h,f,c
  6612  000148  2ADF               	incf	indf2,f,c
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;my_i2c.c: 227: ic_ptr->error_code = 0x4;
  6616  00014A  0100               	movlb	0	; () banked
  6617  00014C  EE20 F01A          	lfsr	2,26
  6618  000150  0100               	movlb	0	; () banked
  6619  000152  51C6               	movf	_ic_ptr& (0+255),w,b
  6620  000154  26D9               	addwf	fsr2l,f,c
  6621  000156  0100               	movlb	0	; () banked
  6622  000158  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6623  00015A  22DA               	addwfc	fsr2h,f,c
  6624  00015C  0E04               	movlw	4
  6625  00015E  6EDF               	movwf	indf2,c
  6626  000160                     i2l3558:
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;my_i2c.c: 228: }
  6630                           ;my_i2c.c: 230: if (SSPSTATbits.BF == 1) {
  6631  000160  A0C7               	btfss	4039,0,c	;volatile
  6632  000162  D00A               	goto	i2l3564
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;my_i2c.c: 231: i2c_data = SSPBUF;
  6636  000164  CFC9 F095          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;my_i2c.c: 232: data_read = 1;
  6640  000168  0100               	movlb	0	; () banked
  6641  00016A  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6642  00016C  0E01               	movlw	1
  6643  00016E  0100               	movlb	0	; () banked
  6644  000170  0100               	movlb	0	; () banked
  6645  000172  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6646  000174  0100               	movlb	0	; () banked
  6647  000176  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6648  000178                     i2l3564:
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;my_i2c.c: 233: }
  6652                           ;my_i2c.c: 235: if (!overrun_error) {
  6653  000178  0100               	movlb	0	; () banked
  6654  00017A  0100               	movlb	0	; () banked
  6655  00017C  6794               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  6656  00017E  D1CE               	goto	i2l299
  6657  000180  D1B7               	goto	i2l3652
  6658  000182                     i2l301:
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_i2c.c: 238: {
  6662                           ;my_i2c.c: 240: if (SSPSTATbits.S == 1) {
  6663  000182  A6C7               	btfss	4039,3,c	;volatile
  6664  000184  D1CB               	goto	i2l299
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;my_i2c.c: 241: handle_start(data_read);
  6668  000186  0100               	movlb	0	; () banked
  6669  000188  0100               	movlb	0	; () banked
  6670  00018A  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6671  00018C  EC22  F00C         	call	_handle_start
  6672                           
  6673                           ;my_i2c.c: 243: if (ic_ptr->status == 0x8) {
  6674  000190  0100               	movlb	0	; () banked
  6675  000192  EE20 F019          	lfsr	2,25
  6676  000196  0100               	movlb	0	; () banked
  6677  000198  51C6               	movf	_ic_ptr& (0+255),w,b
  6678  00019A  26D9               	addwf	fsr2l,f,c
  6679  00019C  0100               	movlb	0	; () banked
  6680  00019E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6681  0001A0  22DA               	addwfc	fsr2h,f,c
  6682  0001A2  0E08               	movlw	8
  6683  0001A4  62DF               	cpfseq	indf2,c
  6684  0001A6  D1BA               	goto	i2l299
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;my_i2c.c: 244: data_read = 0;
  6688  0001A8  0100               	movlb	0	; () banked
  6689  0001AA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6690  0001AC  0E00               	movlw	0
  6691  0001AE  0100               	movlb	0	; () banked
  6692  0001B0  0100               	movlb	0	; () banked
  6693  0001B2  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6694  0001B4  0100               	movlb	0	; () banked
  6695  0001B6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6696                           
  6697                           ;my_i2c.c: 245: msg_to_send = 1;
  6698  0001B8  0100               	movlb	0	; () banked
  6699  0001BA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6700  0001BC  0E01               	movlw	1
  6701  0001BE  0100               	movlb	0	; () banked
  6702  0001C0  0100               	movlb	0	; () banked
  6703  0001C2  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6704  0001C4  D187               	goto	L9
  6705  0001C6                     i2l305:
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;my_i2c.c: 251: {
  6709                           ;my_i2c.c: 253: if (SSPSTATbits.P == 1) {
  6710  0001C6  A8C7               	btfss	4039,4,c	;volatile
  6711  0001C8  D030               	goto	i2l3584
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;my_i2c.c: 256: ic_ptr->event_count++;
  6715  0001CA  0100               	movlb	0	; () banked
  6716  0001CC  EE20 F018          	lfsr	2,24
  6717  0001D0  0100               	movlb	0	; () banked
  6718  0001D2  51C6               	movf	_ic_ptr& (0+255),w,b
  6719  0001D4  26D9               	addwf	fsr2l,f,c
  6720  0001D6  0100               	movlb	0	; () banked
  6721  0001D8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6722  0001DA  22DA               	addwfc	fsr2h,f,c
  6723  0001DC  2ADF               	incf	indf2,f,c
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 257: if (data_read) {
  6727  0001DE  0100               	movlb	0	; () banked
  6728  0001E0  0100               	movlb	0	; () banked
  6729  0001E2  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6730  0001E4  B4D8               	btfsc	status,2,c
  6731  0001E6  D179               	goto	L11
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;my_i2c.c: 258: if (SSPSTATbits.D_A == 0) {
  6735  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  6736  0001EA  D009               	goto	i2l3582
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;my_i2c.c: 259: msg_ready = 1;
  6740  0001EC  0100               	movlb	0	; () banked
  6741  0001EE  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6742  0001F0  0E01               	movlw	1
  6743  0001F2  0100               	movlb	0	; () banked
  6744  0001F4  0100               	movlb	0	; () banked
  6745  0001F6  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6746  0001F8  0100               	movlb	0	; () banked
  6747  0001FA  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6748                           
  6749                           ;my_i2c.c: 260: } else {
  6750  0001FC  D16E               	goto	L11
  6751  0001FE                     i2l3582:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;my_i2c.c: 261: ic_ptr->error_count++;
  6755  0001FE  0100               	movlb	0	; () banked
  6756  000200  EE20 F01B          	lfsr	2,27
  6757  000204  0100               	movlb	0	; () banked
  6758  000206  51C6               	movf	_ic_ptr& (0+255),w,b
  6759  000208  26D9               	addwf	fsr2l,f,c
  6760  00020A  0100               	movlb	0	; () banked
  6761  00020C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6762  00020E  22DA               	addwfc	fsr2h,f,c
  6763  000210  2ADF               	incf	indf2,f,c
  6764                           
  6765                           ;my_i2c.c: 262: ic_ptr->error_code = 0x6;
  6766  000212  0100               	movlb	0	; () banked
  6767  000214  EE20 F01A          	lfsr	2,26
  6768  000218  0100               	movlb	0	; () banked
  6769  00021A  51C6               	movf	_ic_ptr& (0+255),w,b
  6770  00021C  26D9               	addwf	fsr2l,f,c
  6771  00021E  0100               	movlb	0	; () banked
  6772  000220  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6773  000222  22DA               	addwfc	fsr2h,f,c
  6774  000224  0E06               	movlw	6
  6775  000226  6EDF               	movwf	indf2,c
  6776                           
  6777                           ; BSR set to: 0
  6778  000228  D158               	goto	L11
  6779  00022A                     i2l3584:
  6780                           
  6781                           ; BSR set to: 0
  6782  00022A  0100               	movlb	0	; () banked
  6783  00022C  0100               	movlb	0	; () banked
  6784  00022E  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6785  000230  B4D8               	btfsc	status,2,c
  6786  000232  D174               	goto	i2l299
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;my_i2c.c: 267: ic_ptr->event_count++;
  6790  000234  0100               	movlb	0	; () banked
  6791  000236  EE20 F018          	lfsr	2,24
  6792  00023A  0100               	movlb	0	; () banked
  6793  00023C  51C6               	movf	_ic_ptr& (0+255),w,b
  6794  00023E  26D9               	addwf	fsr2l,f,c
  6795  000240  0100               	movlb	0	; () banked
  6796  000242  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6797  000244  22DA               	addwfc	fsr2h,f,c
  6798  000246  2ADF               	incf	indf2,f,c
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;my_i2c.c: 268: if (SSPSTATbits.D_A == 0) {
  6802  000248  BAC7               	btfsc	4039,5,c	;volatile
  6803  00024A  D019               	goto	i2l3600
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;my_i2c.c: 269: if (SSPSTATbits.R_W == 0) {
  6807  00024C  B4C7               	btfsc	4039,2,c	;volatile
  6808  00024E  D00B               	goto	i2l3594
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;my_i2c.c: 270: ic_ptr->status = 0x7;
  6812  000250  0100               	movlb	0	; () banked
  6813  000252  EE20 F019          	lfsr	2,25
  6814  000256  0100               	movlb	0	; () banked
  6815  000258  51C6               	movf	_ic_ptr& (0+255),w,b
  6816  00025A  26D9               	addwf	fsr2l,f,c
  6817  00025C  0100               	movlb	0	; () banked
  6818  00025E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6819  000260  22DA               	addwfc	fsr2h,f,c
  6820  000262  0E07               	movlw	7
  6821  000264  D076               	goto	L8
  6822  000266                     i2l3594:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;my_i2c.c: 272: ic_ptr->status = 0x8;
  6826  000266  0100               	movlb	0	; () banked
  6827  000268  EE20 F019          	lfsr	2,25
  6828  00026C  0100               	movlb	0	; () banked
  6829  00026E  51C6               	movf	_ic_ptr& (0+255),w,b
  6830  000270  26D9               	addwf	fsr2l,f,c
  6831  000272  0100               	movlb	0	; () banked
  6832  000274  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6833  000276  22DA               	addwfc	fsr2h,f,c
  6834  000278  0E08               	movlw	8
  6835  00027A  6EDF               	movwf	indf2,c
  6836  00027C  D11D               	goto	L12
  6837  00027E                     i2l3600:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;my_i2c.c: 278: ic_ptr->error_count++;
  6841  00027E  0100               	movlb	0	; () banked
  6842  000280  EE20 F01B          	lfsr	2,27
  6843  000284  0100               	movlb	0	; () banked
  6844  000286  51C6               	movf	_ic_ptr& (0+255),w,b
  6845  000288  26D9               	addwf	fsr2l,f,c
  6846  00028A  0100               	movlb	0	; () banked
  6847  00028C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6848  00028E  22DA               	addwfc	fsr2h,f,c
  6849  000290  2ADF               	incf	indf2,f,c
  6850                           
  6851                           ;my_i2c.c: 279: ic_ptr->status = 0x5;
  6852  000292  0100               	movlb	0	; () banked
  6853  000294  EE20 F019          	lfsr	2,25
  6854  000298  0100               	movlb	0	; () banked
  6855  00029A  51C6               	movf	_ic_ptr& (0+255),w,b
  6856  00029C  26D9               	addwf	fsr2l,f,c
  6857  00029E  0100               	movlb	0	; () banked
  6858  0002A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6859  0002A2  22DA               	addwfc	fsr2h,f,c
  6860  0002A4  0E05               	movlw	5
  6861  0002A6  6EDF               	movwf	indf2,c
  6862                           
  6863                           ;my_i2c.c: 280: ic_ptr->error_code = 0x6;
  6864  0002A8  0100               	movlb	0	; () banked
  6865  0002AA  EE20 F01A          	lfsr	2,26
  6866  0002AE  0100               	movlb	0	; () banked
  6867  0002B0  51C6               	movf	_ic_ptr& (0+255),w,b
  6868  0002B2  26D9               	addwf	fsr2l,f,c
  6869  0002B4  0100               	movlb	0	; () banked
  6870  0002B6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6871  0002B8  22DA               	addwfc	fsr2h,f,c
  6872  0002BA  0E06               	movlw	6
  6873  0002BC  D04A               	goto	L8
  6874  0002BE                     i2l3602:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;my_i2c.c: 286: {
  6878                           ;my_i2c.c: 287: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6879  0002BE  0100               	movlb	0	; () banked
  6880  0002C0  EE20 F033          	lfsr	2,51
  6881  0002C4  0100               	movlb	0	; () banked
  6882  0002C6  51C6               	movf	_ic_ptr& (0+255),w,b
  6883  0002C8  26D9               	addwf	fsr2l,f,c
  6884  0002CA  0100               	movlb	0	; () banked
  6885  0002CC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6886  0002CE  22DA               	addwfc	fsr2h,f,c
  6887  0002D0  50DF               	movf	indf2,w,c
  6888  0002D2  0100               	movlb	0	; () banked
  6889  0002D4  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6890  0002D6  0100               	movlb	0	; () banked
  6891  0002D8  EE20 F032          	lfsr	2,50
  6892  0002DC  0100               	movlb	0	; () banked
  6893  0002DE  51C6               	movf	_ic_ptr& (0+255),w,b
  6894  0002E0  26D9               	addwf	fsr2l,f,c
  6895  0002E2  0100               	movlb	0	; () banked
  6896  0002E4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6897  0002E6  22DA               	addwfc	fsr2h,f,c
  6898  0002E8  50DF               	movf	indf2,w,c
  6899  0002EA  0100               	movlb	0	; () banked
  6900  0002EC  5D8E               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  6901  0002EE  B0D8               	btfsc	status,0,c
  6902  0002F0  D0F4               	goto	L11
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;my_i2c.c: 288: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6906  0002F2  0100               	movlb	0	; () banked
  6907  0002F4  EE20 F033          	lfsr	2,51
  6908  0002F8  0100               	movlb	0	; () banked
  6909  0002FA  51C6               	movf	_ic_ptr& (0+255),w,b
  6910  0002FC  26D9               	addwf	fsr2l,f,c
  6911  0002FE  0100               	movlb	0	; () banked
  6912  000300  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6913  000302  22DA               	addwfc	fsr2h,f,c
  6914  000304  50DF               	movf	indf2,w,c
  6915  000306  0100               	movlb	0	; () banked
  6916  000308  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6917  00030A  0100               	movlb	0	; () banked
  6918  00030C  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6919  00030E  0D01               	mullw	1
  6920  000310  0E1C               	movlw	28
  6921  000312  26F3               	addwf	prodl,f,c
  6922  000314  0E00               	movlw	0
  6923  000316  22F4               	addwfc	prodh,f,c
  6924  000318  50F3               	movf	prodl,w,c
  6925  00031A  0100               	movlb	0	; () banked
  6926  00031C  0100               	movlb	0	; () banked
  6927  00031E  25C6               	addwf	_ic_ptr& (0+255),w,b
  6928  000320  6ED9               	movwf	fsr2l,c
  6929  000322  50F4               	movf	prodh,w,c
  6930  000324  0100               	movlb	0	; () banked
  6931  000326  0100               	movlb	0	; () banked
  6932  000328  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6933  00032A  6EDA               	movwf	fsr2h,c
  6934  00032C  50DF               	movf	indf2,w,c
  6935  00032E  6EC9               	movwf	4041,c	;volatile
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;my_i2c.c: 289: ic_ptr->outbufind++;
  6939  000330  0100               	movlb	0	; () banked
  6940  000332  EE20 F033          	lfsr	2,51
  6941  000336  0100               	movlb	0	; () banked
  6942  000338  51C6               	movf	_ic_ptr& (0+255),w,b
  6943  00033A  26D9               	addwf	fsr2l,f,c
  6944  00033C  0100               	movlb	0	; () banked
  6945  00033E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6946  000340  22DA               	addwfc	fsr2h,f,c
  6947  000342  2ADF               	incf	indf2,f,c
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;my_i2c.c: 290: data_written = 1;
  6951  000344  0100               	movlb	0	; () banked
  6952  000346  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6953  000348  0E01               	movlw	1
  6954  00034A  0100               	movlb	0	; () banked
  6955  00034C  0100               	movlb	0	; () banked
  6956  00034E  6F93               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6957  000350  D0C1               	goto	L9
  6958  000352                     L8:
  6959  000352  6EDF               	movwf	indf2,c
  6960  000354  D0E3               	goto	i2l299
  6961  000356                     i2l319:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;my_i2c.c: 298: {
  6965                           ;my_i2c.c: 300: if (SSPSTATbits.P == 1) {
  6966  000356  A8C7               	btfss	4039,4,c	;volatile
  6967  000358  D062               	goto	i2l3630
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;my_i2c.c: 302: ic_ptr->event_count++;
  6971  00035A  0100               	movlb	0	; () banked
  6972  00035C  EE20 F018          	lfsr	2,24
  6973  000360  0100               	movlb	0	; () banked
  6974  000362  51C6               	movf	_ic_ptr& (0+255),w,b
  6975  000364  26D9               	addwf	fsr2l,f,c
  6976  000366  0100               	movlb	0	; () banked
  6977  000368  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6978  00036A  22DA               	addwfc	fsr2h,f,c
  6979  00036C  2ADF               	incf	indf2,f,c
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 303: if (data_read) {
  6983  00036E  0100               	movlb	0	; () banked
  6984  000370  0100               	movlb	0	; () banked
  6985  000372  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6986  000374  B4D8               	btfsc	status,2,c
  6987  000376  D04A               	goto	i2l3626
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;my_i2c.c: 304: if (SSPSTATbits.D_A == 1) {
  6991  000378  AAC7               	btfss	4039,5,c	;volatile
  6992  00037A  D027               	goto	i2l3624
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;my_i2c.c: 305: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6996  00037C  0100               	movlb	0	; () banked
  6997  00037E  EE20 F016          	lfsr	2,22
  6998  000382  0100               	movlb	0	; () banked
  6999  000384  51C6               	movf	_ic_ptr& (0+255),w,b
  7000  000386  26D9               	addwf	fsr2l,f,c
  7001  000388  0100               	movlb	0	; () banked
  7002  00038A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7003  00038C  22DA               	addwfc	fsr2h,f,c
  7004  00038E  50DF               	movf	indf2,w,c
  7005  000390  0100               	movlb	0	; () banked
  7006  000392  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7007  000394  0100               	movlb	0	; () banked
  7008  000396  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7009  000398  0D01               	mullw	1
  7010  00039A  50F3               	movf	prodl,w,c
  7011  00039C  0100               	movlb	0	; () banked
  7012  00039E  0100               	movlb	0	; () banked
  7013  0003A0  25C6               	addwf	_ic_ptr& (0+255),w,b
  7014  0003A2  6ED9               	movwf	fsr2l,c
  7015  0003A4  50F4               	movf	prodh,w,c
  7016  0003A6  0100               	movlb	0	; () banked
  7017  0003A8  0100               	movlb	0	; () banked
  7018  0003AA  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7019  0003AC  6EDA               	movwf	fsr2h,c
  7020  0003AE  0100               	movlb	0	; () banked
  7021  0003B0  C095  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;my_i2c.c: 306: ic_ptr->buflen++;
  7025  0003B4  0100               	movlb	0	; () banked
  7026  0003B6  EE20 F016          	lfsr	2,22
  7027  0003BA  0100               	movlb	0	; () banked
  7028  0003BC  51C6               	movf	_ic_ptr& (0+255),w,b
  7029  0003BE  26D9               	addwf	fsr2l,f,c
  7030  0003C0  0100               	movlb	0	; () banked
  7031  0003C2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7032  0003C4  22DA               	addwfc	fsr2h,f,c
  7033  0003C6  2ADF               	incf	indf2,f,c
  7034  0003C8  D021               	goto	i2l3626
  7035  0003CA                     i2l3624:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;my_i2c.c: 309: ic_ptr->error_count++;
  7039  0003CA  0100               	movlb	0	; () banked
  7040  0003CC  EE20 F01B          	lfsr	2,27
  7041  0003D0  0100               	movlb	0	; () banked
  7042  0003D2  51C6               	movf	_ic_ptr& (0+255),w,b
  7043  0003D4  26D9               	addwf	fsr2l,f,c
  7044  0003D6  0100               	movlb	0	; () banked
  7045  0003D8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7046  0003DA  22DA               	addwfc	fsr2h,f,c
  7047  0003DC  2ADF               	incf	indf2,f,c
  7048                           
  7049                           ;my_i2c.c: 310: ic_ptr->error_code = 0x6;
  7050  0003DE  0100               	movlb	0	; () banked
  7051  0003E0  EE20 F01A          	lfsr	2,26
  7052  0003E4  0100               	movlb	0	; () banked
  7053  0003E6  51C6               	movf	_ic_ptr& (0+255),w,b
  7054  0003E8  26D9               	addwf	fsr2l,f,c
  7055  0003EA  0100               	movlb	0	; () banked
  7056  0003EC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7057  0003EE  22DA               	addwfc	fsr2h,f,c
  7058  0003F0  0E06               	movlw	6
  7059  0003F2  6EDF               	movwf	indf2,c
  7060                           
  7061                           ;my_i2c.c: 311: ic_ptr->status = 0x5;
  7062  0003F4  0100               	movlb	0	; () banked
  7063  0003F6  EE20 F019          	lfsr	2,25
  7064  0003FA  0100               	movlb	0	; () banked
  7065  0003FC  51C6               	movf	_ic_ptr& (0+255),w,b
  7066  0003FE  26D9               	addwf	fsr2l,f,c
  7067  000400  0100               	movlb	0	; () banked
  7068  000402  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7069  000404  22DA               	addwfc	fsr2h,f,c
  7070  000406  0E05               	movlw	5
  7071  000408  6EDF               	movwf	indf2,c
  7072  00040A  D067               	goto	L11
  7073  00040C                     i2l3626:
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;my_i2c.c: 314: msg_ready = 1;
  7077  00040C  0100               	movlb	0	; () banked
  7078  00040E  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7079  000410  0E01               	movlw	1
  7080  000412  0100               	movlb	0	; () banked
  7081  000414  0100               	movlb	0	; () banked
  7082  000416  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7083  000418  0100               	movlb	0	; () banked
  7084  00041A  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7085                           
  7086                           ; BSR set to: 0
  7087  00041C  D05E               	goto	L11
  7088  00041E                     i2l3630:
  7089                           
  7090                           ; BSR set to: 0
  7091  00041E  0100               	movlb	0	; () banked
  7092  000420  0100               	movlb	0	; () banked
  7093  000422  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7094  000424  B4D8               	btfsc	status,2,c
  7095  000426  D07A               	goto	i2l299
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;my_i2c.c: 318: ic_ptr->event_count++;
  7099  000428  0100               	movlb	0	; () banked
  7100  00042A  EE20 F018          	lfsr	2,24
  7101  00042E  0100               	movlb	0	; () banked
  7102  000430  51C6               	movf	_ic_ptr& (0+255),w,b
  7103  000432  26D9               	addwf	fsr2l,f,c
  7104  000434  0100               	movlb	0	; () banked
  7105  000436  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7106  000438  22DA               	addwfc	fsr2h,f,c
  7107  00043A  2ADF               	incf	indf2,f,c
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;my_i2c.c: 319: if (SSPSTATbits.D_A == 1) {
  7111  00043C  AAC7               	btfss	4039,5,c	;volatile
  7112  00043E  D027               	goto	i2l327
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;my_i2c.c: 320: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7116  000440  0100               	movlb	0	; () banked
  7117  000442  EE20 F016          	lfsr	2,22
  7118  000446  0100               	movlb	0	; () banked
  7119  000448  51C6               	movf	_ic_ptr& (0+255),w,b
  7120  00044A  26D9               	addwf	fsr2l,f,c
  7121  00044C  0100               	movlb	0	; () banked
  7122  00044E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7123  000450  22DA               	addwfc	fsr2h,f,c
  7124  000452  50DF               	movf	indf2,w,c
  7125  000454  0100               	movlb	0	; () banked
  7126  000456  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7127  000458  0100               	movlb	0	; () banked
  7128  00045A  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7129  00045C  0D01               	mullw	1
  7130  00045E  50F3               	movf	prodl,w,c
  7131  000460  0100               	movlb	0	; () banked
  7132  000462  0100               	movlb	0	; () banked
  7133  000464  25C6               	addwf	_ic_ptr& (0+255),w,b
  7134  000466  6ED9               	movwf	fsr2l,c
  7135  000468  50F4               	movf	prodh,w,c
  7136  00046A  0100               	movlb	0	; () banked
  7137  00046C  0100               	movlb	0	; () banked
  7138  00046E  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7139  000470  6EDA               	movwf	fsr2h,c
  7140  000472  0100               	movlb	0	; () banked
  7141  000474  C095  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;my_i2c.c: 321: ic_ptr->buflen++;
  7145  000478  0100               	movlb	0	; () banked
  7146  00047A  EE20 F016          	lfsr	2,22
  7147  00047E  0100               	movlb	0	; () banked
  7148  000480  51C6               	movf	_ic_ptr& (0+255),w,b
  7149  000482  26D9               	addwf	fsr2l,f,c
  7150  000484  0100               	movlb	0	; () banked
  7151  000486  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7152  000488  22DA               	addwfc	fsr2h,f,c
  7153  00048A  2ADF               	incf	indf2,f,c
  7154                           
  7155                           ;my_i2c.c: 322: } else {
  7156  00048C  D047               	goto	i2l299
  7157  00048E                     i2l327:
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;my_i2c.c: 323: if (SSPSTATbits.R_W == 1) {
  7161  00048E  A4C7               	btfss	4039,2,c	;volatile
  7162  000490  D6B6               	goto	i2l3582
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;my_i2c.c: 324: ic_ptr->status = 0x8;
  7166  000492  0100               	movlb	0	; () banked
  7167  000494  EE20 F019          	lfsr	2,25
  7168  000498  0100               	movlb	0	; () banked
  7169  00049A  51C6               	movf	_ic_ptr& (0+255),w,b
  7170  00049C  26D9               	addwf	fsr2l,f,c
  7171  00049E  0100               	movlb	0	; () banked
  7172  0004A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7173  0004A2  22DA               	addwfc	fsr2h,f,c
  7174  0004A4  0E08               	movlw	8
  7175  0004A6  6EDF               	movwf	indf2,c
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;my_i2c.c: 325: msg_ready = 1;
  7179  0004A8  0100               	movlb	0	; () banked
  7180  0004AA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7181  0004AC  0E01               	movlw	1
  7182  0004AE  0100               	movlb	0	; () banked
  7183  0004B0  0100               	movlb	0	; () banked
  7184  0004B2  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7185  0004B4  0100               	movlb	0	; () banked
  7186  0004B6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7187  0004B8                     L12:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;my_i2c.c: 326: msg_to_send = 1;
  7191  0004B8  0100               	movlb	0	; () banked
  7192  0004BA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7193  0004BC  0E01               	movlw	1
  7194  0004BE  0100               	movlb	0	; () banked
  7195  0004C0  0100               	movlb	0	; () banked
  7196  0004C2  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7197  0004C4  0100               	movlb	0	; () banked
  7198  0004C6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;my_i2c.c: 328: data_read = 0;
  7202  0004C8  0100               	movlb	0	; () banked
  7203  0004CA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7204  0004CC  0E00               	movlw	0
  7205  0004CE  0100               	movlb	0	; () banked
  7206  0004D0  0100               	movlb	0	; () banked
  7207  0004D2  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7208  0004D4                     L9:
  7209  0004D4  0100               	movlb	0	; () banked
  7210  0004D6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7211                           
  7212                           ;my_i2c.c: 329: } else {
  7213  0004D8  D021               	goto	i2l299
  7214  0004DA                     L11:
  7215                           
  7216                           ;my_i2c.c: 332: ic_ptr->status = 0x5;
  7217  0004DA  0100               	movlb	0	; () banked
  7218  0004DC  EE20 F019          	lfsr	2,25
  7219  0004E0  0100               	movlb	0	; () banked
  7220  0004E2  51C6               	movf	_ic_ptr& (0+255),w,b
  7221  0004E4  26D9               	addwf	fsr2l,f,c
  7222  0004E6  0100               	movlb	0	; () banked
  7223  0004E8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7224  0004EA  22DA               	addwfc	fsr2h,f,c
  7225  0004EC  0E05               	movlw	5
  7226  0004EE  D731               	goto	L8
  7227  0004F0                     i2l3652:
  7228                           
  7229                           ; BSR set to: 0
  7230  0004F0  0100               	movlb	0	; () banked
  7231  0004F2  EE20 F019          	lfsr	2,25
  7232  0004F6  0100               	movlb	0	; () banked
  7233  0004F8  51C6               	movf	_ic_ptr& (0+255),w,b
  7234  0004FA  26D9               	addwf	fsr2l,f,c
  7235  0004FC  0100               	movlb	0	; () banked
  7236  0004FE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7237  000500  22DA               	addwfc	fsr2h,f,c
  7238  000502  50DF               	movf	indf2,w,c
  7239                           
  7240                           ; Switch size 1, requested type "space"
  7241                           ; Number of cases is 4, Range of values is 5 to 8
  7242                           ; switch strategies available:
  7243                           ; Name         Instructions Cycles
  7244                           ; simple_byte           13     7 (average)
  7245                           ;	Chosen strategy is simple_byte
  7246  000504  0A05               	xorlw	5	; case 5
  7247  000506  B4D8               	btfsc	status,2,c
  7248  000508  D63C               	goto	i2l301
  7249  00050A  0A03               	xorlw	3	; case 6
  7250  00050C  B4D8               	btfsc	status,2,c
  7251  00050E  D65B               	goto	i2l305
  7252  000510  0A01               	xorlw	1	; case 7
  7253  000512  B4D8               	btfsc	status,2,c
  7254  000514  D720               	goto	i2l319
  7255  000516  0A0F               	xorlw	15	; case 8
  7256  000518  B4D8               	btfsc	status,2,c
  7257  00051A  D6D1               	goto	i2l3602
  7258  00051C                     i2l299:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;my_i2c.c: 339: }
  7262                           ;my_i2c.c: 342: if (data_read || data_written) {
  7263  00051C  0100               	movlb	0	; () banked
  7264  00051E  0100               	movlb	0	; () banked
  7265  000520  6798               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7266  000522  D005               	goto	i2l333
  7267                           
  7268                           ; BSR set to: 0
  7269  000524  0100               	movlb	0	; () banked
  7270  000526  0100               	movlb	0	; () banked
  7271  000528  5193               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7272  00052A  B4D8               	btfsc	status,2,c
  7273  00052C  D002               	goto	i2l3658
  7274  00052E                     i2l333:
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;my_i2c.c: 344: if (SSPCON1bits.CKP == 0) {
  7278  00052E  A8C6               	btfss	4038,4,c	;volatile
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;my_i2c.c: 345: SSPCON1bits.CKP = 1;
  7282  000530  88C6               	bsf	4038,4,c	;volatile
  7283  000532                     i2l3658:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;my_i2c.c: 346: }
  7287                           ;my_i2c.c: 347: }
  7288                           ;my_i2c.c: 350: if ((ic_ptr->buflen > 22 - 2) && (!msg_ready)) {
  7289  000532  0100               	movlb	0	; () banked
  7290  000534  EE20 F016          	lfsr	2,22
  7291  000538  0100               	movlb	0	; () banked
  7292  00053A  51C6               	movf	_ic_ptr& (0+255),w,b
  7293  00053C  26D9               	addwf	fsr2l,f,c
  7294  00053E  0100               	movlb	0	; () banked
  7295  000540  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7296  000542  22DA               	addwfc	fsr2h,f,c
  7297  000544  0E14               	movlw	20
  7298  000546  64DF               	cpfsgt	indf2,c
  7299  000548  D024               	goto	i2l3664
  7300                           
  7301                           ; BSR set to: 0
  7302  00054A  0100               	movlb	0	; () banked
  7303  00054C  0100               	movlb	0	; () banked
  7304  00054E  6797               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7305  000550  D020               	goto	i2l3664
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 351: ic_ptr->status = 0x5;
  7309  000552  0100               	movlb	0	; () banked
  7310  000554  EE20 F019          	lfsr	2,25
  7311  000558  0100               	movlb	0	; () banked
  7312  00055A  51C6               	movf	_ic_ptr& (0+255),w,b
  7313  00055C  26D9               	addwf	fsr2l,f,c
  7314  00055E  0100               	movlb	0	; () banked
  7315  000560  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7316  000562  22DA               	addwfc	fsr2h,f,c
  7317  000564  0E05               	movlw	5
  7318  000566  6EDF               	movwf	indf2,c
  7319                           
  7320                           ;my_i2c.c: 352: ic_ptr->error_count++;
  7321  000568  0100               	movlb	0	; () banked
  7322  00056A  EE20 F01B          	lfsr	2,27
  7323  00056E  0100               	movlb	0	; () banked
  7324  000570  51C6               	movf	_ic_ptr& (0+255),w,b
  7325  000572  26D9               	addwf	fsr2l,f,c
  7326  000574  0100               	movlb	0	; () banked
  7327  000576  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7328  000578  22DA               	addwfc	fsr2h,f,c
  7329  00057A  2ADF               	incf	indf2,f,c
  7330                           
  7331                           ;my_i2c.c: 353: ic_ptr->error_code = 0x7;
  7332  00057C  0100               	movlb	0	; () banked
  7333  00057E  EE20 F01A          	lfsr	2,26
  7334  000582  0100               	movlb	0	; () banked
  7335  000584  51C6               	movf	_ic_ptr& (0+255),w,b
  7336  000586  26D9               	addwf	fsr2l,f,c
  7337  000588  0100               	movlb	0	; () banked
  7338  00058A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7339  00058C  22DA               	addwfc	fsr2h,f,c
  7340  00058E  0E07               	movlw	7
  7341  000590  6EDF               	movwf	indf2,c
  7342  000592                     i2l3664:
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;my_i2c.c: 354: }
  7346                           ;my_i2c.c: 356: if (msg_ready) {
  7347  000592  0100               	movlb	0	; () banked
  7348  000594  0100               	movlb	0	; () banked
  7349  000596  5197               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7350  000598  B4D8               	btfsc	status,2,c
  7351  00059A  D048               	goto	i2l3672
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;my_i2c.c: 357: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7355  00059C  0100               	movlb	0	; () banked
  7356  00059E  EE20 F018          	lfsr	2,24
  7357  0005A2  0100               	movlb	0	; () banked
  7358  0005A4  51C6               	movf	_ic_ptr& (0+255),w,b
  7359  0005A6  26D9               	addwf	fsr2l,f,c
  7360  0005A8  0100               	movlb	0	; () banked
  7361  0005AA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7362  0005AC  22DA               	addwfc	fsr2h,f,c
  7363  0005AE  0100               	movlb	0	; () banked
  7364  0005B0  EE10 F016          	lfsr	1,22
  7365  0005B4  0100               	movlb	0	; () banked
  7366  0005B6  51C6               	movf	_ic_ptr& (0+255),w,b
  7367  0005B8  26E1               	addwf	fsr1l,f,c
  7368  0005BA  0100               	movlb	0	; () banked
  7369  0005BC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7370  0005BE  22E2               	addwfc	fsr1h,f,c
  7371  0005C0  50E7               	movf	indf1,w,c
  7372  0005C2  0100               	movlb	0	; () banked
  7373  0005C4  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7374  0005C6  0100               	movlb	0	; () banked
  7375  0005C8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7376  0005CA  0D01               	mullw	1
  7377  0005CC  50F3               	movf	prodl,w,c
  7378  0005CE  0100               	movlb	0	; () banked
  7379  0005D0  0100               	movlb	0	; () banked
  7380  0005D2  25C6               	addwf	_ic_ptr& (0+255),w,b
  7381  0005D4  6EE1               	movwf	fsr1l,c
  7382  0005D6  50F4               	movf	prodh,w,c
  7383  0005D8  0100               	movlb	0	; () banked
  7384  0005DA  0100               	movlb	0	; () banked
  7385  0005DC  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7386  0005DE  6EE2               	movwf	fsr1h,c
  7387  0005E0  CFDF FFE7          	movff	indf2,indf1
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;my_i2c.c: 358: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7391  0005E4  0100               	movlb	0	; () banked
  7392  0005E6  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7393  0005E8  0E28               	movlw	40
  7394  0005EA  0100               	movlb	0	; () banked
  7395  0005EC  0100               	movlb	0	; () banked
  7396  0005EE  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7397  0005F0  0100               	movlb	0	; () banked
  7398  0005F2  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7399  0005F4  0100               	movlb	0	; () banked
  7400  0005F6  0100               	movlb	0	; () banked
  7401  0005F8  C0C7  F08D         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7402  0005FC  0100               	movlb	0	; () banked
  7403  0005FE  0100               	movlb	0	; () banked
  7404  000600  C0C6  F08C         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7405  000604  0100               	movlb	0	; () banked
  7406  000606  EE20 F016          	lfsr	2,22
  7407  00060A  0100               	movlb	0	; () banked
  7408  00060C  51C6               	movf	_ic_ptr& (0+255),w,b
  7409  00060E  26D9               	addwf	fsr2l,f,c
  7410  000610  0100               	movlb	0	; () banked
  7411  000612  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7412  000614  22DA               	addwfc	fsr2h,f,c
  7413  000616  50DF               	movf	indf2,w,c
  7414  000618  0100               	movlb	0	; () banked
  7415  00061A  6F8F               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7416  00061C  0100               	movlb	0	; () banked
  7417  00061E  298F               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7418  000620  ECB1  F010         	call	_ToMainHigh_sendmsg
  7419                           
  7420                           ;my_i2c.c: 359: ic_ptr->buflen = 0;
  7421  000624  0100               	movlb	0	; () banked
  7422  000626  EE20 F016          	lfsr	2,22
  7423  00062A  D04B               	goto	L10
  7424  00062C                     i2l3672:
  7425                           
  7426                           ; BSR set to: 0
  7427  00062C  0100               	movlb	0	; () banked
  7428  00062E  EE20 F01B          	lfsr	2,27
  7429  000632  0100               	movlb	0	; () banked
  7430  000634  51C6               	movf	_ic_ptr& (0+255),w,b
  7431  000636  26D9               	addwf	fsr2l,f,c
  7432  000638  0100               	movlb	0	; () banked
  7433  00063A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7434  00063C  22DA               	addwfc	fsr2h,f,c
  7435  00063E  50DF               	movf	indf2,w,c
  7436  000640  B4D8               	btfsc	status,2,c
  7437  000642  D047               	goto	i2l3680
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;my_i2c.c: 361: error_buf[0] = ic_ptr->error_count;
  7441  000644  0100               	movlb	0	; () banked
  7442  000646  EE20 F01B          	lfsr	2,27
  7443  00064A  0100               	movlb	0	; () banked
  7444  00064C  51C6               	movf	_ic_ptr& (0+255),w,b
  7445  00064E  26D9               	addwf	fsr2l,f,c
  7446  000650  0100               	movlb	0	; () banked
  7447  000652  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7448  000654  22DA               	addwfc	fsr2h,f,c
  7449  000656  50DF               	movf	indf2,w,c
  7450  000658  0100               	movlb	0	; () banked
  7451  00065A  0100               	movlb	0	; () banked
  7452  00065C  6F90               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7453                           
  7454                           ;my_i2c.c: 362: error_buf[1] = ic_ptr->error_code;
  7455  00065E  0100               	movlb	0	; () banked
  7456  000660  EE20 F01A          	lfsr	2,26
  7457  000664  0100               	movlb	0	; () banked
  7458  000666  51C6               	movf	_ic_ptr& (0+255),w,b
  7459  000668  26D9               	addwf	fsr2l,f,c
  7460  00066A  0100               	movlb	0	; () banked
  7461  00066C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7462  00066E  22DA               	addwfc	fsr2h,f,c
  7463  000670  50DF               	movf	indf2,w,c
  7464  000672  0100               	movlb	0	; () banked
  7465  000674  0100               	movlb	0	; () banked
  7466  000676  6F91               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7467                           
  7468                           ;my_i2c.c: 363: error_buf[2] = ic_ptr->event_count;
  7469  000678  0100               	movlb	0	; () banked
  7470  00067A  EE20 F018          	lfsr	2,24
  7471  00067E  0100               	movlb	0	; () banked
  7472  000680  51C6               	movf	_ic_ptr& (0+255),w,b
  7473  000682  26D9               	addwf	fsr2l,f,c
  7474  000684  0100               	movlb	0	; () banked
  7475  000686  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7476  000688  22DA               	addwfc	fsr2h,f,c
  7477  00068A  50DF               	movf	indf2,w,c
  7478  00068C  0100               	movlb	0	; () banked
  7479  00068E  0100               	movlb	0	; () banked
  7480  000690  6F92               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 364: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7484  000692  0100               	movlb	0	; () banked
  7485  000694  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7486  000696  0E29               	movlw	41
  7487  000698  0100               	movlb	0	; () banked
  7488  00069A  0100               	movlb	0	; () banked
  7489  00069C  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7490  00069E  0100               	movlb	0	; () banked
  7491  0006A0  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7492  0006A2  0100               	movlb	0	; () banked
  7493  0006A4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7494  0006A6  0100               	movlb	0	; () banked
  7495  0006A8  0100               	movlb	0	; () banked
  7496  0006AA  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7497  0006AC  0100               	movlb	0	; () banked
  7498  0006AE  0E90               	movlw	low i2c_slave_int_handler@error_buf
  7499  0006B0  0100               	movlb	0	; () banked
  7500  0006B2  0100               	movlb	0	; () banked
  7501  0006B4  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7502  0006B6  0E03               	movlw	3
  7503  0006B8  ECB1  F010         	call	_ToMainHigh_sendmsg
  7504                           
  7505                           ;my_i2c.c: 365: ic_ptr->error_count = 0;
  7506  0006BC  0100               	movlb	0	; () banked
  7507  0006BE  EE20 F01B          	lfsr	2,27
  7508  0006C2                     L10:
  7509  0006C2  0100               	movlb	0	; () banked
  7510  0006C4  51C6               	movf	_ic_ptr& (0+255),w,b
  7511  0006C6  26D9               	addwf	fsr2l,f,c
  7512  0006C8  0100               	movlb	0	; () banked
  7513  0006CA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7514  0006CC  22DA               	addwfc	fsr2h,f,c
  7515  0006CE  0E00               	movlw	0
  7516  0006D0  6EDF               	movwf	indf2,c
  7517  0006D2                     i2l3680:
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;my_i2c.c: 366: }
  7521                           ;my_i2c.c: 367: if (msg_to_send) {
  7522  0006D2  0100               	movlb	0	; () banked
  7523  0006D4  0100               	movlb	0	; () banked
  7524  0006D6  5196               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7525  0006D8  B4D8               	btfsc	status,2,c
  7526  0006DA  0012               	return	
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;my_i2c.c: 370: start_i2c_slave_reply(22, 0);
  7530  0006DC  0E00               	movlw	0
  7531  0006DE  6E33               	movwf	start_i2c_slave_reply@msg+1,c
  7532  0006E0  0E00               	movlw	0
  7533  0006E2  6E32               	movwf	start_i2c_slave_reply@msg,c
  7534  0006E4  0E16               	movlw	22
  7535  0006E6  EC56  F008         	call	_start_i2c_slave_reply
  7536                           
  7537                           ;my_i2c.c: 371: msg_to_send = 0;
  7538  0006EA  0100               	movlb	0	; () banked
  7539  0006EC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7540  0006EE  0E00               	movlw	0
  7541  0006F0  0100               	movlb	0	; () banked
  7542  0006F2  0100               	movlb	0	; () banked
  7543  0006F4  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7544  0006F6  0100               	movlb	0	; () banked
  7545  0006F8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7546  0006FA  0012               	return	
  7547  0006FC                     __end_of_i2c_slave_int_handler:
  7548                           	opt stack 0
  7549                           pclatu	equ	0xFFB
  7550                           pclath	equ	0xFFA
  7551                           tblptru	equ	0xFF8
  7552                           tblptrh	equ	0xFF7
  7553                           tblptrl	equ	0xFF6
  7554                           tablat	equ	0xFF5
  7555                           prodh	equ	0xFF4
  7556                           prodl	equ	0xFF3
  7557                           intcon	equ	0xFF2
  7558                           postinc0	equ	0xFEE
  7559                           fsr0h	equ	0xFEA
  7560                           fsr0l	equ	0xFE9
  7561                           wreg	equ	0xFE8
  7562                           indf1	equ	0xFE7
  7563                           fsr1h	equ	0xFE2
  7564                           fsr1l	equ	0xFE1
  7565                           bsr	equ	0xFE0
  7566                           indf2	equ	0xFDF
  7567                           postinc2	equ	0xFDE
  7568                           postdec2	equ	0xFDD
  7569                           fsr2h	equ	0xFDA
  7570                           fsr2l	equ	0xFD9
  7571                           status	equ	0xFD8
  7572                           
  7573 ;; *************** function _start_i2c_slave_reply *****************
  7574 ;; Defined at:
  7575 ;;		line 128 in file "source/my_i2c.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  length          1    wreg     unsigned char 
  7578 ;;  msg             2   49[COMRAM] PTR unsigned char 
  7579 ;;		 -> NULL(0), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  length          1   54[COMRAM] unsigned char 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;		None               void
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7591 ;;      Params:         2       0       0       0       0
  7592 ;;      Locals:         1       0       0       0       0
  7593 ;;      Temps:          3       0       0       0       0
  7594 ;;      Totals:         6       0       0       0       0
  7595 ;;Total ram usage:        6 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_i2c_slave_int_handler
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           	psect	text42
  7605  0010AC                     __ptext42:
  7606                           	opt stack 0
  7607  0010AC                     _start_i2c_slave_reply:
  7608                           	opt stack 16
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;incstack = 0
  7612                           ;start_i2c_slave_reply@length stored from wreg
  7613  0010AC  CFE8 F037          	movff	wreg,start_i2c_slave_reply@length
  7614                           
  7615                           ;my_i2c.c: 132: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  7616  0010B0  0100               	movlb	0	; () banked
  7617  0010B2  EE20 F032          	lfsr	2,50
  7618  0010B6  0100               	movlb	0	; () banked
  7619  0010B8  51C6               	movf	_ic_ptr& (0+255),w,b
  7620  0010BA  26D9               	addwf	fsr2l,f,c
  7621  0010BC  0100               	movlb	0	; () banked
  7622  0010BE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7623  0010C0  22DA               	addwfc	fsr2h,f,c
  7624  0010C2  0E00               	movlw	0
  7625  0010C4  6EDF               	movwf	indf2,c
  7626  0010C6  D08F               	goto	i2l2874
  7627  0010C8                     i2l2862:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;my_i2c.c: 135: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  7631  0010C8  0100               	movlb	0	; () banked
  7632  0010CA  EE20 F032          	lfsr	2,50
  7633  0010CE  0100               	movlb	0	; () banked
  7634  0010D0  51C6               	movf	_ic_ptr& (0+255),w,b
  7635  0010D2  26D9               	addwf	fsr2l,f,c
  7636  0010D4  0100               	movlb	0	; () banked
  7637  0010D6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7638  0010D8  22DA               	addwfc	fsr2h,f,c
  7639  0010DA  50DF               	movf	indf2,w,c
  7640  0010DC  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7641  0010DE  0100               	movlb	0	; () banked
  7642  0010E0  EE20 F04B          	lfsr	2,75
  7643  0010E4  0100               	movlb	0	; () banked
  7644  0010E6  51C6               	movf	_ic_ptr& (0+255),w,b
  7645  0010E8  26D9               	addwf	fsr2l,f,c
  7646  0010EA  0100               	movlb	0	; () banked
  7647  0010EC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7648  0010EE  22DA               	addwfc	fsr2h,f,c
  7649  0010F0  50DF               	movf	indf2,w,c
  7650  0010F2  5C34               	subwf	??_start_i2c_slave_reply,w,c
  7651  0010F4  B0D8               	btfsc	status,0,c
  7652  0010F6  D028               	goto	i2l2866
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;my_i2c.c: 136: {
  7656                           ;my_i2c.c: 137: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  7657  0010F8  0100               	movlb	0	; () banked
  7658  0010FA  EE20 F032          	lfsr	2,50
  7659  0010FE  0100               	movlb	0	; () banked
  7660  001100  51C6               	movf	_ic_ptr& (0+255),w,b
  7661  001102  26D9               	addwf	fsr2l,f,c
  7662  001104  0100               	movlb	0	; () banked
  7663  001106  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7664  001108  22DA               	addwfc	fsr2h,f,c
  7665  00110A  50DF               	movf	indf2,w,c
  7666  00110C  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7667  00110E  5034               	movf	??_start_i2c_slave_reply,w,c
  7668  001110  0D01               	mullw	1
  7669  001112  0E35               	movlw	53
  7670  001114  26F3               	addwf	prodl,f,c
  7671  001116  0E00               	movlw	0
  7672  001118  22F4               	addwfc	prodh,f,c
  7673  00111A  50F3               	movf	prodl,w,c
  7674  00111C  0100               	movlb	0	; () banked
  7675  00111E  0100               	movlb	0	; () banked
  7676  001120  25C6               	addwf	_ic_ptr& (0+255),w,b
  7677  001122  6ED9               	movwf	fsr2l,c
  7678  001124  50F4               	movf	prodh,w,c
  7679  001126  0100               	movlb	0	; () banked
  7680  001128  0100               	movlb	0	; () banked
  7681  00112A  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7682  00112C  6EDA               	movwf	fsr2h,c
  7683  00112E  0100               	movlb	0	; () banked
  7684  001130  EE10 F032          	lfsr	1,50
  7685  001134  0100               	movlb	0	; () banked
  7686  001136  51C6               	movf	_ic_ptr& (0+255),w,b
  7687  001138  26E1               	addwf	fsr1l,f,c
  7688  00113A  0100               	movlb	0	; () banked
  7689  00113C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7690  00113E  22E2               	addwfc	fsr1h,f,c
  7691  001140  50E7               	movf	indf1,w,c
  7692  001142  6E35               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  7693  001144  5035               	movf	??_start_i2c_slave_reply+1,w,c
  7694  001146  D034               	goto	L15
  7695  001148                     i2l2866:
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;my_i2c.c: 139: else if(ic_ptr->sendBufLen != 0)
  7699  001148  0100               	movlb	0	; () banked
  7700  00114A  EE20 F04B          	lfsr	2,75
  7701  00114E  0100               	movlb	0	; () banked
  7702  001150  51C6               	movf	_ic_ptr& (0+255),w,b
  7703  001152  26D9               	addwf	fsr2l,f,c
  7704  001154  0100               	movlb	0	; () banked
  7705  001156  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7706  001158  22DA               	addwfc	fsr2h,f,c
  7707  00115A  50DF               	movf	indf2,w,c
  7708  00115C  B4D8               	btfsc	status,2,c
  7709  00115E  D00B               	goto	i2l2870
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;my_i2c.c: 140: {
  7713                           ;my_i2c.c: 141: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  7714  001160  0100               	movlb	0	; () banked
  7715  001162  EE20 F04B          	lfsr	2,75
  7716  001166  0100               	movlb	0	; () banked
  7717  001168  51C6               	movf	_ic_ptr& (0+255),w,b
  7718  00116A  26D9               	addwf	fsr2l,f,c
  7719  00116C  0100               	movlb	0	; () banked
  7720  00116E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7721  001170  22DA               	addwfc	fsr2h,f,c
  7722  001172  50DF               	movf	indf2,w,c
  7723  001174  D001               	goto	L14
  7724  001176                     i2l2870:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;my_i2c.c: 143: else
  7728                           ;my_i2c.c: 144: {
  7729                           ;my_i2c.c: 145: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  7730  001176  5037               	movf	start_i2c_slave_reply@length,w,c
  7731  001178                     L14:
  7732  001178  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7733  00117A  6A35               	clrf	(??_start_i2c_slave_reply+1)& (0+255),c
  7734  00117C  0E34               	movlw	52
  7735  00117E  2634               	addwf	??_start_i2c_slave_reply,f,c
  7736  001180  0E00               	movlw	0
  7737  001182  2235               	addwfc	??_start_i2c_slave_reply+1,f,c
  7738  001184  5034               	movf	??_start_i2c_slave_reply,w,c
  7739  001186  0100               	movlb	0	; () banked
  7740  001188  0100               	movlb	0	; () banked
  7741  00118A  25C6               	addwf	_ic_ptr& (0+255),w,b
  7742  00118C  6ED9               	movwf	fsr2l,c
  7743  00118E  5035               	movf	??_start_i2c_slave_reply+1,w,c
  7744  001190  0100               	movlb	0	; () banked
  7745  001192  0100               	movlb	0	; () banked
  7746  001194  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7747  001196  6EDA               	movwf	fsr2h,c
  7748  001198  0100               	movlb	0	; () banked
  7749  00119A  EE10 F032          	lfsr	1,50
  7750  00119E  0100               	movlb	0	; () banked
  7751  0011A0  51C6               	movf	_ic_ptr& (0+255),w,b
  7752  0011A2  26E1               	addwf	fsr1l,f,c
  7753  0011A4  0100               	movlb	0	; () banked
  7754  0011A6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7755  0011A8  22E2               	addwfc	fsr1h,f,c
  7756  0011AA  50E7               	movf	indf1,w,c
  7757  0011AC  6E36               	movwf	(??_start_i2c_slave_reply+2)& (0+255),c
  7758  0011AE  5036               	movf	??_start_i2c_slave_reply+2,w,c
  7759  0011B0                     L15:
  7760  0011B0  0D01               	mullw	1
  7761  0011B2  0E1C               	movlw	28
  7762  0011B4  26F3               	addwf	prodl,f,c
  7763  0011B6  0E00               	movlw	0
  7764  0011B8  22F4               	addwfc	prodh,f,c
  7765  0011BA  50F3               	movf	prodl,w,c
  7766  0011BC  0100               	movlb	0	; () banked
  7767  0011BE  0100               	movlb	0	; () banked
  7768  0011C0  25C6               	addwf	_ic_ptr& (0+255),w,b
  7769  0011C2  6EE1               	movwf	fsr1l,c
  7770  0011C4  50F4               	movf	prodh,w,c
  7771  0011C6  0100               	movlb	0	; () banked
  7772  0011C8  0100               	movlb	0	; () banked
  7773  0011CA  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7774  0011CC  6EE2               	movwf	fsr1h,c
  7775  0011CE  CFDF FFE7          	movff	indf2,indf1
  7776                           
  7777                           ; BSR set to: 0
  7778                           
  7779                           ; BSR set to: 0
  7780                           
  7781                           ; BSR set to: 0
  7782  0011D2  0100               	movlb	0	; () banked
  7783  0011D4  EE20 F032          	lfsr	2,50
  7784  0011D8  0100               	movlb	0	; () banked
  7785  0011DA  51C6               	movf	_ic_ptr& (0+255),w,b
  7786  0011DC  26D9               	addwf	fsr2l,f,c
  7787  0011DE  0100               	movlb	0	; () banked
  7788  0011E0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7789  0011E2  22DA               	addwfc	fsr2h,f,c
  7790  0011E4  2ADF               	incf	indf2,f,c
  7791  0011E6                     i2l2874:
  7792                           
  7793                           ; BSR set to: 0
  7794  0011E6  0100               	movlb	0	; () banked
  7795  0011E8  EE20 F032          	lfsr	2,50
  7796  0011EC  0100               	movlb	0	; () banked
  7797  0011EE  51C6               	movf	_ic_ptr& (0+255),w,b
  7798  0011F0  26D9               	addwf	fsr2l,f,c
  7799  0011F2  0100               	movlb	0	; () banked
  7800  0011F4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7801  0011F6  22DA               	addwfc	fsr2h,f,c
  7802  0011F8  50DF               	movf	indf2,w,c
  7803  0011FA  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7804  0011FC  5037               	movf	start_i2c_slave_reply@length,w,c
  7805  0011FE  5C34               	subwf	??_start_i2c_slave_reply,w,c
  7806  001200  A0D8               	btfss	status,0,c
  7807  001202  D762               	goto	i2l2862
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;my_i2c.c: 146: }
  7811                           ;my_i2c.c: 148: }
  7812                           ;my_i2c.c: 149: ic_ptr->sendBufLen =0;
  7813                           
  7814                           ; BSR set to: 0
  7815  001204  0100               	movlb	0	; () banked
  7816  001206  EE20 F04B          	lfsr	2,75
  7817  00120A  0100               	movlb	0	; () banked
  7818  00120C  51C6               	movf	_ic_ptr& (0+255),w,b
  7819  00120E  26D9               	addwf	fsr2l,f,c
  7820  001210  0100               	movlb	0	; () banked
  7821  001212  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7822  001214  22DA               	addwfc	fsr2h,f,c
  7823  001216  0E00               	movlw	0
  7824  001218  6EDF               	movwf	indf2,c
  7825                           
  7826                           ;my_i2c.c: 150: ic_ptr->outbuflen = length;
  7827  00121A  0100               	movlb	0	; () banked
  7828  00121C  EE20 F032          	lfsr	2,50
  7829  001220  0100               	movlb	0	; () banked
  7830  001222  51C6               	movf	_ic_ptr& (0+255),w,b
  7831  001224  26D9               	addwf	fsr2l,f,c
  7832  001226  0100               	movlb	0	; () banked
  7833  001228  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  00122A  22DA               	addwfc	fsr2h,f,c
  7835  00122C  C037  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7836                           
  7837                           ;my_i2c.c: 151: ic_ptr->outbufind = 1;
  7838  001230  0100               	movlb	0	; () banked
  7839  001232  EE20 F033          	lfsr	2,51
  7840  001236  0100               	movlb	0	; () banked
  7841  001238  51C6               	movf	_ic_ptr& (0+255),w,b
  7842  00123A  26D9               	addwf	fsr2l,f,c
  7843  00123C  0100               	movlb	0	; () banked
  7844  00123E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7845  001240  22DA               	addwfc	fsr2h,f,c
  7846  001242  0E01               	movlw	1
  7847  001244  6EDF               	movwf	indf2,c
  7848                           
  7849                           ;my_i2c.c: 154: SSPBUF = ic_ptr->outbuffer[0];
  7850  001246  0100               	movlb	0	; () banked
  7851  001248  EE20 F01C          	lfsr	2,28
  7852  00124C  0100               	movlb	0	; () banked
  7853  00124E  51C6               	movf	_ic_ptr& (0+255),w,b
  7854  001250  26D9               	addwf	fsr2l,f,c
  7855  001252  0100               	movlb	0	; () banked
  7856  001254  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7857  001256  22DA               	addwfc	fsr2h,f,c
  7858  001258  50DF               	movf	indf2,w,c
  7859  00125A  6EC9               	movwf	4041,c	;volatile
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;my_i2c.c: 157: SSPCON1bits.CKP = 1;
  7863  00125C  88C6               	bsf	4038,4,c	;volatile
  7864                           
  7865                           ; BSR set to: 0
  7866  00125E  0012               	return	
  7867  001260                     __end_of_start_i2c_slave_reply:
  7868                           	opt stack 0
  7869                           pclatu	equ	0xFFB
  7870                           pclath	equ	0xFFA
  7871                           tblptru	equ	0xFF8
  7872                           tblptrh	equ	0xFF7
  7873                           tblptrl	equ	0xFF6
  7874                           tablat	equ	0xFF5
  7875                           prodh	equ	0xFF4
  7876                           prodl	equ	0xFF3
  7877                           intcon	equ	0xFF2
  7878                           postinc0	equ	0xFEE
  7879                           fsr0h	equ	0xFEA
  7880                           fsr0l	equ	0xFE9
  7881                           wreg	equ	0xFE8
  7882                           indf1	equ	0xFE7
  7883                           fsr1h	equ	0xFE2
  7884                           fsr1l	equ	0xFE1
  7885                           bsr	equ	0xFE0
  7886                           indf2	equ	0xFDF
  7887                           postinc2	equ	0xFDE
  7888                           postdec2	equ	0xFDD
  7889                           fsr2h	equ	0xFDA
  7890                           fsr2l	equ	0xFD9
  7891                           status	equ	0xFD8
  7892                           
  7893 ;; *************** function _handle_start *****************
  7894 ;; Defined at:
  7895 ;;		line 163 in file "source/my_i2c.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  data_read       1    wreg     unsigned char 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  data_read       1   49[COMRAM] unsigned char 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;		None               void
  7902 ;; Registers used:
  7903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7909 ;;      Params:         0       0       0       0       0
  7910 ;;      Locals:         1       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0
  7912 ;;      Totals:         1       0       0       0       0
  7913 ;;Total ram usage:        1 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_i2c_slave_int_handler
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text43
  7923  001844                     __ptext43:
  7924                           	opt stack 0
  7925  001844                     _handle_start:
  7926                           	opt stack 16
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;incstack = 0
  7930                           ;handle_start@data_read stored from wreg
  7931  001844  CFE8 F032          	movff	wreg,handle_start@data_read
  7932                           
  7933                           ;my_i2c.c: 164: ic_ptr->event_count = 1;
  7934  001848  0100               	movlb	0	; () banked
  7935  00184A  EE20 F018          	lfsr	2,24
  7936  00184E  0100               	movlb	0	; () banked
  7937  001850  51C6               	movf	_ic_ptr& (0+255),w,b
  7938  001852  26D9               	addwf	fsr2l,f,c
  7939  001854  0100               	movlb	0	; () banked
  7940  001856  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7941  001858  22DA               	addwfc	fsr2h,f,c
  7942  00185A  0E01               	movlw	1
  7943  00185C  6EDF               	movwf	indf2,c
  7944                           
  7945                           ;my_i2c.c: 165: ic_ptr->buflen = 0;
  7946  00185E  0100               	movlb	0	; () banked
  7947  001860  EE20 F016          	lfsr	2,22
  7948  001864  0100               	movlb	0	; () banked
  7949  001866  51C6               	movf	_ic_ptr& (0+255),w,b
  7950  001868  26D9               	addwf	fsr2l,f,c
  7951  00186A  0100               	movlb	0	; () banked
  7952  00186C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7953  00186E  22DA               	addwfc	fsr2h,f,c
  7954  001870  0E00               	movlw	0
  7955  001872  6EDF               	movwf	indf2,c
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;my_i2c.c: 167: if (data_read) {
  7959  001874  5032               	movf	handle_start@data_read,w,c
  7960  001876  B4D8               	btfsc	status,2,c
  7961  001878  D03D               	goto	i2l2892
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;my_i2c.c: 168: if (SSPSTATbits.D_A == 1) {
  7965  00187A  AAC7               	btfss	4039,5,c	;volatile
  7966  00187C  D021               	goto	i2l281
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;my_i2c.c: 171: ic_ptr->status = 0x5;
  7970  00187E  0100               	movlb	0	; () banked
  7971  001880  EE20 F019          	lfsr	2,25
  7972  001884  0100               	movlb	0	; () banked
  7973  001886  51C6               	movf	_ic_ptr& (0+255),w,b
  7974  001888  26D9               	addwf	fsr2l,f,c
  7975  00188A  0100               	movlb	0	; () banked
  7976  00188C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7977  00188E  22DA               	addwfc	fsr2h,f,c
  7978  001890  0E05               	movlw	5
  7979  001892  6EDF               	movwf	indf2,c
  7980                           
  7981                           ;my_i2c.c: 172: ic_ptr->error_count++;
  7982  001894  0100               	movlb	0	; () banked
  7983  001896  EE20 F01B          	lfsr	2,27
  7984  00189A  0100               	movlb	0	; () banked
  7985  00189C  51C6               	movf	_ic_ptr& (0+255),w,b
  7986  00189E  26D9               	addwf	fsr2l,f,c
  7987  0018A0  0100               	movlb	0	; () banked
  7988  0018A2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7989  0018A4  22DA               	addwfc	fsr2h,f,c
  7990  0018A6  2ADF               	incf	indf2,f,c
  7991                           
  7992                           ;my_i2c.c: 173: ic_ptr->error_code = 0x5;
  7993  0018A8  0100               	movlb	0	; () banked
  7994  0018AA  EE20 F01A          	lfsr	2,26
  7995  0018AE  0100               	movlb	0	; () banked
  7996  0018B0  51C6               	movf	_ic_ptr& (0+255),w,b
  7997  0018B2  26D9               	addwf	fsr2l,f,c
  7998  0018B4  0100               	movlb	0	; () banked
  7999  0018B6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8000  0018B8  22DA               	addwfc	fsr2h,f,c
  8001  0018BA  0E05               	movlw	5
  8002  0018BC  6EDF               	movwf	indf2,c
  8003                           
  8004                           ;my_i2c.c: 174: } else {
  8005  0018BE  0012               	return	
  8006  0018C0                     i2l281:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;my_i2c.c: 175: if (SSPSTATbits.R_W == 1) {
  8010  0018C0  A4C7               	btfss	4039,2,c	;volatile
  8011  0018C2  D00C               	goto	i2l2890
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;my_i2c.c: 176: ic_ptr->status = 0x8;
  8015  0018C4  0100               	movlb	0	; () banked
  8016  0018C6  EE20 F019          	lfsr	2,25
  8017  0018CA  0100               	movlb	0	; () banked
  8018  0018CC  51C6               	movf	_ic_ptr& (0+255),w,b
  8019  0018CE  26D9               	addwf	fsr2l,f,c
  8020  0018D0  0100               	movlb	0	; () banked
  8021  0018D2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8022  0018D4  22DA               	addwfc	fsr2h,f,c
  8023  0018D6  0E08               	movlw	8
  8024  0018D8  6EDF               	movwf	indf2,c
  8025                           
  8026                           ;my_i2c.c: 177: } else {
  8027  0018DA  0012               	return	
  8028  0018DC                     i2l2890:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;my_i2c.c: 178: ic_ptr->status = 0x7;
  8032  0018DC  0100               	movlb	0	; () banked
  8033  0018DE  EE20 F019          	lfsr	2,25
  8034  0018E2  0100               	movlb	0	; () banked
  8035  0018E4  51C6               	movf	_ic_ptr& (0+255),w,b
  8036  0018E6  26D9               	addwf	fsr2l,f,c
  8037  0018E8  0100               	movlb	0	; () banked
  8038  0018EA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8039  0018EC  22DA               	addwfc	fsr2h,f,c
  8040  0018EE  0E07               	movlw	7
  8041  0018F0  6EDF               	movwf	indf2,c
  8042  0018F2  0012               	return	
  8043  0018F4                     i2l2892:
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;my_i2c.c: 182: ic_ptr->status = 0x6;
  8047  0018F4  0100               	movlb	0	; () banked
  8048  0018F6  EE20 F019          	lfsr	2,25
  8049  0018FA  0100               	movlb	0	; () banked
  8050  0018FC  51C6               	movf	_ic_ptr& (0+255),w,b
  8051  0018FE  26D9               	addwf	fsr2l,f,c
  8052  001900  0100               	movlb	0	; () banked
  8053  001902  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8054  001904  22DA               	addwfc	fsr2h,f,c
  8055  001906  0E06               	movlw	6
  8056  001908  6EDF               	movwf	indf2,c
  8057  00190A  0012               	return	
  8058  00190C                     __end_of_handle_start:
  8059                           	opt stack 0
  8060                           pclatu	equ	0xFFB
  8061                           pclath	equ	0xFFA
  8062                           tblptru	equ	0xFF8
  8063                           tblptrh	equ	0xFF7
  8064                           tblptrl	equ	0xFF6
  8065                           tablat	equ	0xFF5
  8066                           prodh	equ	0xFF4
  8067                           prodl	equ	0xFF3
  8068                           intcon	equ	0xFF2
  8069                           postinc0	equ	0xFEE
  8070                           fsr0h	equ	0xFEA
  8071                           fsr0l	equ	0xFE9
  8072                           wreg	equ	0xFE8
  8073                           indf1	equ	0xFE7
  8074                           fsr1h	equ	0xFE2
  8075                           fsr1l	equ	0xFE1
  8076                           bsr	equ	0xFE0
  8077                           indf2	equ	0xFDF
  8078                           postinc2	equ	0xFDE
  8079                           postdec2	equ	0xFDD
  8080                           fsr2h	equ	0xFDA
  8081                           fsr2l	equ	0xFD9
  8082                           status	equ	0xFD8
  8083                           
  8084 ;; *************** function _i2c_master_int_handler *****************
  8085 ;; Defined at:
  8086 ;;		line 448 in file "source/my_i2c.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;		None
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;		None               void
  8093 ;; Registers used:
  8094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8100 ;;      Params:         0       0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0
  8102 ;;      Temps:          1       0       0       0       0
  8103 ;;      Totals:         1       0       0       0       0
  8104 ;;Total ram usage:        1 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    3
  8107 ;; This function calls:
  8108 ;;		_ToMainHigh_sendmsg
  8109 ;; This function is called by:
  8110 ;;		_i2c_int_handler
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text44
  8115  0006FC                     __ptext44:
  8116                           	opt stack 0
  8117  0006FC                     _i2c_master_int_handler:
  8118                           	opt stack 14
  8119                           
  8120                           ;my_i2c.c: 449: switch (ic_ptr->status){
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;incstack = 0
  8124  0006FC  D251               	goto	i2l3542
  8125  0006FE                     i2l3452:
  8126                           
  8127                           ;my_i2c.c: 452: ic_ptr->status = 0x24;
  8128  0006FE  0100               	movlb	0	; () banked
  8129  000700  EE20 F019          	lfsr	2,25
  8130  000704  0100               	movlb	0	; () banked
  8131  000706  51C6               	movf	_ic_ptr& (0+255),w,b
  8132  000708  26D9               	addwf	fsr2l,f,c
  8133  00070A  0100               	movlb	0	; () banked
  8134  00070C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8135  00070E  22DA               	addwfc	fsr2h,f,c
  8136  000710  0E24               	movlw	36
  8137  000712  6EDF               	movwf	indf2,c
  8138                           
  8139                           ;my_i2c.c: 453: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  8140  000714  0100               	movlb	0	; () banked
  8141  000716  EE20 F034          	lfsr	2,52
  8142  00071A  0100               	movlb	0	; () banked
  8143  00071C  51C6               	movf	_ic_ptr& (0+255),w,b
  8144  00071E  26D9               	addwf	fsr2l,f,c
  8145  000720  0100               	movlb	0	; () banked
  8146  000722  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8147  000724  22DA               	addwfc	fsr2h,f,c
  8148  000726  50DF               	movf	indf2,w,c
  8149  000728  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8150  00072A  90D8               	bcf	status,0,c
  8151  00072C  343E               	rlcf	??_i2c_master_int_handler,w,c
  8152  00072E  0BFE               	andlw	254
  8153  000730  6EC9               	movwf	4041,c	;volatile
  8154                           
  8155                           ;my_i2c.c: 454: break;
  8156  000732  0012               	return	
  8157  000734                     i2l352:
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;my_i2c.c: 457: if (SSPCON2bits.ACKSTAT == 0) {
  8161  000734  BCC5               	btfsc	4037,6,c	;volatile
  8162  000736  D074               	goto	i2l3470
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;my_i2c.c: 458: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8166  000738  0100               	movlb	0	; () banked
  8167  00073A  EE20 F033          	lfsr	2,51
  8168  00073E  0100               	movlb	0	; () banked
  8169  000740  51C6               	movf	_ic_ptr& (0+255),w,b
  8170  000742  26D9               	addwf	fsr2l,f,c
  8171  000744  0100               	movlb	0	; () banked
  8172  000746  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8173  000748  22DA               	addwfc	fsr2h,f,c
  8174  00074A  50DF               	movf	indf2,w,c
  8175  00074C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8176  00074E  0100               	movlb	0	; () banked
  8177  000750  EE20 F032          	lfsr	2,50
  8178  000754  0100               	movlb	0	; () banked
  8179  000756  51C6               	movf	_ic_ptr& (0+255),w,b
  8180  000758  26D9               	addwf	fsr2l,f,c
  8181  00075A  0100               	movlb	0	; () banked
  8182  00075C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8183  00075E  22DA               	addwfc	fsr2h,f,c
  8184  000760  50DF               	movf	indf2,w,c
  8185  000762  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8186  000764  B0D8               	btfsc	status,0,c
  8187  000766  D033               	goto	i2l3462
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;my_i2c.c: 459: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8191  000768  0100               	movlb	0	; () banked
  8192  00076A  EE20 F033          	lfsr	2,51
  8193  00076E  0100               	movlb	0	; () banked
  8194  000770  51C6               	movf	_ic_ptr& (0+255),w,b
  8195  000772  26D9               	addwf	fsr2l,f,c
  8196  000774  0100               	movlb	0	; () banked
  8197  000776  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8198  000778  22DA               	addwfc	fsr2h,f,c
  8199  00077A  50DF               	movf	indf2,w,c
  8200  00077C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8201  00077E  503E               	movf	??_i2c_master_int_handler,w,c
  8202  000780  0D01               	mullw	1
  8203  000782  0E1C               	movlw	28
  8204  000784  26F3               	addwf	prodl,f,c
  8205  000786  0E00               	movlw	0
  8206  000788  22F4               	addwfc	prodh,f,c
  8207  00078A  50F3               	movf	prodl,w,c
  8208  00078C  0100               	movlb	0	; () banked
  8209  00078E  0100               	movlb	0	; () banked
  8210  000790  25C6               	addwf	_ic_ptr& (0+255),w,b
  8211  000792  6ED9               	movwf	fsr2l,c
  8212  000794  50F4               	movf	prodh,w,c
  8213  000796  0100               	movlb	0	; () banked
  8214  000798  0100               	movlb	0	; () banked
  8215  00079A  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8216  00079C  6EDA               	movwf	fsr2h,c
  8217  00079E  50DF               	movf	indf2,w,c
  8218  0007A0  6EC9               	movwf	4041,c	;volatile
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;my_i2c.c: 460: ic_ptr->outbufind++;
  8222  0007A2  0100               	movlb	0	; () banked
  8223  0007A4  EE20 F033          	lfsr	2,51
  8224  0007A8  0100               	movlb	0	; () banked
  8225  0007AA  51C6               	movf	_ic_ptr& (0+255),w,b
  8226  0007AC  26D9               	addwf	fsr2l,f,c
  8227  0007AE  0100               	movlb	0	; () banked
  8228  0007B0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8229  0007B2  22DA               	addwfc	fsr2h,f,c
  8230  0007B4  2ADF               	incf	indf2,f,c
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;my_i2c.c: 461: ic_ptr->status = 0x24;
  8234  0007B6  0100               	movlb	0	; () banked
  8235  0007B8  EE20 F019          	lfsr	2,25
  8236  0007BC  0100               	movlb	0	; () banked
  8237  0007BE  51C6               	movf	_ic_ptr& (0+255),w,b
  8238  0007C0  26D9               	addwf	fsr2l,f,c
  8239  0007C2  0100               	movlb	0	; () banked
  8240  0007C4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8241  0007C6  22DA               	addwfc	fsr2h,f,c
  8242  0007C8  0E24               	movlw	36
  8243  0007CA  6EDF               	movwf	indf2,c
  8244                           
  8245                           ;my_i2c.c: 462: }
  8246  0007CC  0012               	return	
  8247  0007CE                     i2l3462:
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;my_i2c.c: 463: else {
  8251                           ;my_i2c.c: 464: ToMainHigh_sendmsg(0, 43, 0);
  8252  0007CE  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8253  0007D0  0E2B               	movlw	43
  8254  0007D2  0100               	movlb	0	; () banked
  8255  0007D4  0100               	movlb	0	; () banked
  8256  0007D6  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8257  0007D8  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8258  0007DA  0E00               	movlw	0
  8259  0007DC  0100               	movlb	0	; () banked
  8260  0007DE  0100               	movlb	0	; () banked
  8261  0007E0  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8262  0007E2  0E00               	movlw	0
  8263  0007E4  0100               	movlb	0	; () banked
  8264  0007E6  0100               	movlb	0	; () banked
  8265  0007E8  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8266  0007EA  0E00               	movlw	0
  8267  0007EC  ECB1  F010         	call	_ToMainHigh_sendmsg
  8268                           
  8269                           ;my_i2c.c: 465: ic_ptr->outbuflen = 0;
  8270  0007F0  0100               	movlb	0	; () banked
  8271  0007F2  EE20 F032          	lfsr	2,50
  8272  0007F6  0100               	movlb	0	; () banked
  8273  0007F8  51C6               	movf	_ic_ptr& (0+255),w,b
  8274  0007FA  26D9               	addwf	fsr2l,f,c
  8275  0007FC  0100               	movlb	0	; () banked
  8276  0007FE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8277  000800  22DA               	addwfc	fsr2h,f,c
  8278  000802  0E00               	movlw	0
  8279  000804  6EDF               	movwf	indf2,c
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;my_i2c.c: 466: ic_ptr->status = 0x5;
  8283  000806  0100               	movlb	0	; () banked
  8284  000808  EE20 F019          	lfsr	2,25
  8285  00080C  0100               	movlb	0	; () banked
  8286  00080E  51C6               	movf	_ic_ptr& (0+255),w,b
  8287  000810  26D9               	addwf	fsr2l,f,c
  8288  000812  0100               	movlb	0	; () banked
  8289  000814  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8290  000816  22DA               	addwfc	fsr2h,f,c
  8291  000818  0E05               	movlw	5
  8292  00081A  6EDF               	movwf	indf2,c
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;my_i2c.c: 467: SSPCON2bits.PEN = 1;
  8296  00081C  84C5               	bsf	4037,2,c	;volatile
  8297  00081E  0012               	return	
  8298  000820                     i2l3470:
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;my_i2c.c: 470: else {
  8302                           ;my_i2c.c: 471: ToMainHigh_sendmsg(0, 44, 0);
  8303  000820  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8304  000822  0E2C               	movlw	44
  8305  000824  0100               	movlb	0	; () banked
  8306  000826  0100               	movlb	0	; () banked
  8307  000828  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8308  00082A  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8309  00082C  0E00               	movlw	0
  8310  00082E  0100               	movlb	0	; () banked
  8311  000830  0100               	movlb	0	; () banked
  8312  000832  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8313  000834  0E00               	movlw	0
  8314  000836  0100               	movlb	0	; () banked
  8315  000838  0100               	movlb	0	; () banked
  8316  00083A  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8317  00083C  0E00               	movlw	0
  8318  00083E  ECB1  F010         	call	_ToMainHigh_sendmsg
  8319                           
  8320                           ;my_i2c.c: 472: ic_ptr->status = 0x5;
  8321  000842  0100               	movlb	0	; () banked
  8322  000844  EE20 F019          	lfsr	2,25
  8323  000848  0100               	movlb	0	; () banked
  8324  00084A  51C6               	movf	_ic_ptr& (0+255),w,b
  8325  00084C  26D9               	addwf	fsr2l,f,c
  8326  00084E  0100               	movlb	0	; () banked
  8327  000850  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8328  000852  22DA               	addwfc	fsr2h,f,c
  8329  000854  0E05               	movlw	5
  8330  000856  6EDF               	movwf	indf2,c
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;my_i2c.c: 473: SSPCON2bits.PEN = 1;
  8334  000858  84C5               	bsf	4037,2,c	;volatile
  8335  00085A  0012               	return	
  8336  00085C                     i2l3476:
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;my_i2c.c: 478: ToMainHigh_sendmsg(0, 43, 0);
  8340  00085C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8341  00085E  0E2B               	movlw	43
  8342  000860  0100               	movlb	0	; () banked
  8343  000862  0100               	movlb	0	; () banked
  8344  000864  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8345  000866  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8346  000868  0E00               	movlw	0
  8347  00086A  0100               	movlb	0	; () banked
  8348  00086C  0100               	movlb	0	; () banked
  8349  00086E  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8350  000870  0E00               	movlw	0
  8351  000872  0100               	movlb	0	; () banked
  8352  000874  0100               	movlb	0	; () banked
  8353  000876  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8354  000878  0E00               	movlw	0
  8355  00087A  ECB1  F010         	call	_ToMainHigh_sendmsg
  8356                           
  8357                           ;my_i2c.c: 479: ic_ptr->status = 0x5;
  8358  00087E  0100               	movlb	0	; () banked
  8359  000880  EE20 F019          	lfsr	2,25
  8360  000884  0100               	movlb	0	; () banked
  8361  000886  51C6               	movf	_ic_ptr& (0+255),w,b
  8362  000888  26D9               	addwf	fsr2l,f,c
  8363  00088A  0100               	movlb	0	; () banked
  8364  00088C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8365  00088E  22DA               	addwfc	fsr2h,f,c
  8366  000890  0E05               	movlw	5
  8367  000892  6EDF               	movwf	indf2,c
  8368                           
  8369                           ;my_i2c.c: 480: break;
  8370  000894  0012               	return	
  8371  000896                     i2l358:
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;my_i2c.c: 532: if (SSPCON2bits.ACKSTAT == 0) {
  8375  000896  BCC5               	btfsc	4037,6,c	;volatile
  8376  000898  D017               	goto	i2l3482
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;my_i2c.c: 533: ic_ptr->status = 0x14;
  8380  00089A  0100               	movlb	0	; () banked
  8381  00089C  EE20 F019          	lfsr	2,25
  8382  0008A0  0100               	movlb	0	; () banked
  8383  0008A2  51C6               	movf	_ic_ptr& (0+255),w,b
  8384  0008A4  26D9               	addwf	fsr2l,f,c
  8385  0008A6  0100               	movlb	0	; () banked
  8386  0008A8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8387  0008AA  22DA               	addwfc	fsr2h,f,c
  8388  0008AC  0E14               	movlw	20
  8389  0008AE  6EDF               	movwf	indf2,c
  8390                           
  8391                           ;my_i2c.c: 534: SSPBUF = ic_ptr->slave_addr;
  8392  0008B0  0100               	movlb	0	; () banked
  8393  0008B2  EE20 F034          	lfsr	2,52
  8394  0008B6  0100               	movlb	0	; () banked
  8395  0008B8  51C6               	movf	_ic_ptr& (0+255),w,b
  8396  0008BA  26D9               	addwf	fsr2l,f,c
  8397  0008BC  0100               	movlb	0	; () banked
  8398  0008BE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8399  0008C0  22DA               	addwfc	fsr2h,f,c
  8400  0008C2  50DF               	movf	indf2,w,c
  8401  0008C4  6EC9               	movwf	4041,c	;volatile
  8402                           
  8403                           ;my_i2c.c: 535: }
  8404  0008C6  0012               	return	
  8405  0008C8                     i2l3482:
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;my_i2c.c: 537: else {
  8409                           ;my_i2c.c: 538: ToMainHigh_sendmsg(0, 46, 0);
  8410  0008C8  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8411  0008CA  0E2E               	movlw	46
  8412  0008CC  0100               	movlb	0	; () banked
  8413  0008CE  0100               	movlb	0	; () banked
  8414  0008D0  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8415  0008D2  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8416  0008D4  0E00               	movlw	0
  8417  0008D6  0100               	movlb	0	; () banked
  8418  0008D8  0100               	movlb	0	; () banked
  8419  0008DA  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8420  0008DC  0E00               	movlw	0
  8421  0008DE  0100               	movlb	0	; () banked
  8422  0008E0  0100               	movlb	0	; () banked
  8423  0008E2  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8424  0008E4  0E00               	movlw	0
  8425  0008E6  ECB1  F010         	call	_ToMainHigh_sendmsg
  8426                           
  8427                           ;my_i2c.c: 539: ic_ptr->status = 0x5;
  8428  0008EA  0100               	movlb	0	; () banked
  8429  0008EC  EE20 F019          	lfsr	2,25
  8430  0008F0  0100               	movlb	0	; () banked
  8431  0008F2  51C6               	movf	_ic_ptr& (0+255),w,b
  8432  0008F4  26D9               	addwf	fsr2l,f,c
  8433  0008F6  0100               	movlb	0	; () banked
  8434  0008F8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8435  0008FA  22DA               	addwfc	fsr2h,f,c
  8436  0008FC  0E05               	movlw	5
  8437  0008FE  6EDF               	movwf	indf2,c
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;my_i2c.c: 540: SSPCON2bits.PEN = 1;
  8441  000900  84C5               	bsf	4037,2,c	;volatile
  8442  000902  0012               	return	
  8443  000904                     i2l361:
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;my_i2c.c: 545: if (SSPCON2bits.ACKSTAT == 0) {
  8447  000904  BCC5               	btfsc	4037,6,c	;volatile
  8448  000906  D022               	goto	i2l3490
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;my_i2c.c: 546: ic_ptr->status = 0x15;
  8452  000908  0100               	movlb	0	; () banked
  8453  00090A  EE20 F019          	lfsr	2,25
  8454  00090E  0100               	movlb	0	; () banked
  8455  000910  51C6               	movf	_ic_ptr& (0+255),w,b
  8456  000912  26D9               	addwf	fsr2l,f,c
  8457  000914  0100               	movlb	0	; () banked
  8458  000916  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8459  000918  22DA               	addwfc	fsr2h,f,c
  8460  00091A  0E15               	movlw	21
  8461  00091C  6EDF               	movwf	indf2,c
  8462                           
  8463                           ;my_i2c.c: 547: ic_ptr->outbuflen = 0;
  8464  00091E  0100               	movlb	0	; () banked
  8465  000920  EE20 F032          	lfsr	2,50
  8466  000924  0100               	movlb	0	; () banked
  8467  000926  51C6               	movf	_ic_ptr& (0+255),w,b
  8468  000928  26D9               	addwf	fsr2l,f,c
  8469  00092A  0100               	movlb	0	; () banked
  8470  00092C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8471  00092E  22DA               	addwfc	fsr2h,f,c
  8472  000930  0E00               	movlw	0
  8473  000932  6EDF               	movwf	indf2,c
  8474                           
  8475                           ;my_i2c.c: 548: SSPBUF = ic_ptr->outbuffer[0];
  8476  000934  0100               	movlb	0	; () banked
  8477  000936  EE20 F01C          	lfsr	2,28
  8478  00093A  0100               	movlb	0	; () banked
  8479  00093C  51C6               	movf	_ic_ptr& (0+255),w,b
  8480  00093E  26D9               	addwf	fsr2l,f,c
  8481  000940  0100               	movlb	0	; () banked
  8482  000942  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8483  000944  22DA               	addwfc	fsr2h,f,c
  8484  000946  50DF               	movf	indf2,w,c
  8485  000948  6EC9               	movwf	4041,c	;volatile
  8486                           
  8487                           ;my_i2c.c: 549: }
  8488  00094A  0012               	return	
  8489  00094C                     i2l3490:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;my_i2c.c: 550: else {
  8493                           ;my_i2c.c: 551: ToMainHigh_sendmsg(0, 46, 0);
  8494  00094C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8495  00094E  0E2E               	movlw	46
  8496  000950  0100               	movlb	0	; () banked
  8497  000952  0100               	movlb	0	; () banked
  8498  000954  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8499  000956  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8500  000958  0E00               	movlw	0
  8501  00095A  0100               	movlb	0	; () banked
  8502  00095C  0100               	movlb	0	; () banked
  8503  00095E  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8504  000960  0E00               	movlw	0
  8505  000962  0100               	movlb	0	; () banked
  8506  000964  0100               	movlb	0	; () banked
  8507  000966  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8508  000968  0E00               	movlw	0
  8509  00096A  ECB1  F010         	call	_ToMainHigh_sendmsg
  8510                           
  8511                           ;my_i2c.c: 552: ic_ptr->status = 0x5;
  8512  00096E  0100               	movlb	0	; () banked
  8513  000970  EE20 F019          	lfsr	2,25
  8514  000974  0100               	movlb	0	; () banked
  8515  000976  51C6               	movf	_ic_ptr& (0+255),w,b
  8516  000978  26D9               	addwf	fsr2l,f,c
  8517  00097A  0100               	movlb	0	; () banked
  8518  00097C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8519  00097E  22DA               	addwfc	fsr2h,f,c
  8520  000980  0E05               	movlw	5
  8521  000982  6EDF               	movwf	indf2,c
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;my_i2c.c: 553: SSPCON2bits.PEN = 1;
  8525  000984  84C5               	bsf	4037,2,c	;volatile
  8526  000986  0012               	return	
  8527  000988                     i2l364:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;my_i2c.c: 558: if (SSPCON2bits.ACKSTAT == 0) {
  8531  000988  BCC5               	btfsc	4037,6,c	;volatile
  8532  00098A  D00D               	goto	i2l3500
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;my_i2c.c: 559: ic_ptr->status = 0x20;
  8536  00098C  0100               	movlb	0	; () banked
  8537  00098E  EE20 F019          	lfsr	2,25
  8538  000992  0100               	movlb	0	; () banked
  8539  000994  51C6               	movf	_ic_ptr& (0+255),w,b
  8540  000996  26D9               	addwf	fsr2l,f,c
  8541  000998  0100               	movlb	0	; () banked
  8542  00099A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8543  00099C  22DA               	addwfc	fsr2h,f,c
  8544  00099E  0E20               	movlw	32
  8545  0009A0  6EDF               	movwf	indf2,c
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;my_i2c.c: 560: SSPCON2bits.RSEN = 1;
  8549  0009A2  82C5               	bsf	4037,1,c	;volatile
  8550                           
  8551                           ;my_i2c.c: 561: }
  8552  0009A4  0012               	return	
  8553  0009A6                     i2l3500:
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;my_i2c.c: 562: else {
  8557                           ;my_i2c.c: 563: ToMainHigh_sendmsg(0, 46, 0);
  8558  0009A6  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8559  0009A8  0E2E               	movlw	46
  8560  0009AA  0100               	movlb	0	; () banked
  8561  0009AC  0100               	movlb	0	; () banked
  8562  0009AE  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8563  0009B0  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8564  0009B2  0E00               	movlw	0
  8565  0009B4  0100               	movlb	0	; () banked
  8566  0009B6  0100               	movlb	0	; () banked
  8567  0009B8  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8568  0009BA  0E00               	movlw	0
  8569  0009BC  0100               	movlb	0	; () banked
  8570  0009BE  0100               	movlb	0	; () banked
  8571  0009C0  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8572  0009C2  0E00               	movlw	0
  8573  0009C4  ECB1  F010         	call	_ToMainHigh_sendmsg
  8574                           
  8575                           ;my_i2c.c: 564: ic_ptr->status = 0x5;
  8576  0009C8  0100               	movlb	0	; () banked
  8577  0009CA  EE20 F019          	lfsr	2,25
  8578  0009CE  0100               	movlb	0	; () banked
  8579  0009D0  51C6               	movf	_ic_ptr& (0+255),w,b
  8580  0009D2  26D9               	addwf	fsr2l,f,c
  8581  0009D4  0100               	movlb	0	; () banked
  8582  0009D6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8583  0009D8  22DA               	addwfc	fsr2h,f,c
  8584  0009DA  0E05               	movlw	5
  8585  0009DC  6EDF               	movwf	indf2,c
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;my_i2c.c: 565: SSPCON2bits.PEN = 1;
  8589  0009DE  84C5               	bsf	4037,2,c	;volatile
  8590  0009E0  0012               	return	
  8591  0009E2                     i2l3506:
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;my_i2c.c: 570: ic_ptr->status = 0x21;
  8595  0009E2  0100               	movlb	0	; () banked
  8596  0009E4  EE20 F019          	lfsr	2,25
  8597  0009E8  0100               	movlb	0	; () banked
  8598  0009EA  51C6               	movf	_ic_ptr& (0+255),w,b
  8599  0009EC  26D9               	addwf	fsr2l,f,c
  8600  0009EE  0100               	movlb	0	; () banked
  8601  0009F0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8602  0009F2  22DA               	addwfc	fsr2h,f,c
  8603  0009F4  0E21               	movlw	33
  8604  0009F6  6EDF               	movwf	indf2,c
  8605                           
  8606                           ;my_i2c.c: 571: SSPBUF = ic_ptr->slave_addr | 0x1;
  8607  0009F8  0100               	movlb	0	; () banked
  8608  0009FA  EE20 F034          	lfsr	2,52
  8609  0009FE  0100               	movlb	0	; () banked
  8610  000A00  51C6               	movf	_ic_ptr& (0+255),w,b
  8611  000A02  26D9               	addwf	fsr2l,f,c
  8612  000A04  0100               	movlb	0	; () banked
  8613  000A06  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8614  000A08  22DA               	addwfc	fsr2h,f,c
  8615  000A0A  50DF               	movf	indf2,w,c
  8616  000A0C  0901               	iorlw	1
  8617  000A0E  6EC9               	movwf	4041,c	;volatile
  8618                           
  8619                           ;my_i2c.c: 572: break;
  8620  000A10  0012               	return	
  8621  000A12                     i2l368:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;my_i2c.c: 575: if (SSPCON2bits.ACKSTAT == 0) {
  8625  000A12  BCC5               	btfsc	4037,6,c	;volatile
  8626  000A14  D00D               	goto	i2l3512
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;my_i2c.c: 576: ic_ptr->status = 0x22;
  8630  000A16  0100               	movlb	0	; () banked
  8631  000A18  EE20 F019          	lfsr	2,25
  8632  000A1C  0100               	movlb	0	; () banked
  8633  000A1E  51C6               	movf	_ic_ptr& (0+255),w,b
  8634  000A20  26D9               	addwf	fsr2l,f,c
  8635  000A22  0100               	movlb	0	; () banked
  8636  000A24  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8637  000A26  22DA               	addwfc	fsr2h,f,c
  8638  000A28  0E22               	movlw	34
  8639  000A2A  6EDF               	movwf	indf2,c
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;my_i2c.c: 577: SSPCON2bits.RCEN = 1;
  8643  000A2C  86C5               	bsf	4037,3,c	;volatile
  8644                           
  8645                           ;my_i2c.c: 578: }
  8646  000A2E  0012               	return	
  8647  000A30                     i2l3512:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;my_i2c.c: 579: else {
  8651                           ;my_i2c.c: 580: ToMainHigh_sendmsg(0, 46, 0);
  8652  000A30  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8653  000A32  0E2E               	movlw	46
  8654  000A34  0100               	movlb	0	; () banked
  8655  000A36  0100               	movlb	0	; () banked
  8656  000A38  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8657  000A3A  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8658  000A3C  0E00               	movlw	0
  8659  000A3E  0100               	movlb	0	; () banked
  8660  000A40  0100               	movlb	0	; () banked
  8661  000A42  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8662  000A44  0E00               	movlw	0
  8663  000A46  0100               	movlb	0	; () banked
  8664  000A48  0100               	movlb	0	; () banked
  8665  000A4A  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8666  000A4C  0E00               	movlw	0
  8667  000A4E  ECB1  F010         	call	_ToMainHigh_sendmsg
  8668                           
  8669                           ;my_i2c.c: 581: ic_ptr->status = 0x5;
  8670  000A52  0100               	movlb	0	; () banked
  8671  000A54  EE20 F019          	lfsr	2,25
  8672  000A58  0100               	movlb	0	; () banked
  8673  000A5A  51C6               	movf	_ic_ptr& (0+255),w,b
  8674  000A5C  26D9               	addwf	fsr2l,f,c
  8675  000A5E  0100               	movlb	0	; () banked
  8676  000A60  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8677  000A62  22DA               	addwfc	fsr2h,f,c
  8678  000A64  0E05               	movlw	5
  8679  000A66  6EDF               	movwf	indf2,c
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;my_i2c.c: 582: SSPCON2bits.PEN = 1;
  8683  000A68  84C5               	bsf	4037,2,c	;volatile
  8684  000A6A  0012               	return	
  8685  000A6C                     i2l371:
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;my_i2c.c: 587: if (SSPSTATbits.BF == 1) {
  8689  000A6C  A0C7               	btfss	4039,0,c	;volatile
  8690  000A6E  0012               	return	
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;my_i2c.c: 588: ic_ptr->status = 0x23;
  8694  000A70  0100               	movlb	0	; () banked
  8695  000A72  EE20 F019          	lfsr	2,25
  8696  000A76  0100               	movlb	0	; () banked
  8697  000A78  51C6               	movf	_ic_ptr& (0+255),w,b
  8698  000A7A  26D9               	addwf	fsr2l,f,c
  8699  000A7C  0100               	movlb	0	; () banked
  8700  000A7E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8701  000A80  22DA               	addwfc	fsr2h,f,c
  8702  000A82  0E23               	movlw	35
  8703  000A84  6EDF               	movwf	indf2,c
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;my_i2c.c: 589: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  8707  000A86  0100               	movlb	0	; () banked
  8708  000A88  EE20 F017          	lfsr	2,23
  8709  000A8C  0100               	movlb	0	; () banked
  8710  000A8E  51C6               	movf	_ic_ptr& (0+255),w,b
  8711  000A90  26D9               	addwf	fsr2l,f,c
  8712  000A92  0100               	movlb	0	; () banked
  8713  000A94  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8714  000A96  22DA               	addwfc	fsr2h,f,c
  8715  000A98  50DF               	movf	indf2,w,c
  8716  000A9A  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8717  000A9C  503E               	movf	??_i2c_master_int_handler,w,c
  8718  000A9E  0D01               	mullw	1
  8719  000AA0  50F3               	movf	prodl,w,c
  8720  000AA2  0100               	movlb	0	; () banked
  8721  000AA4  0100               	movlb	0	; () banked
  8722  000AA6  25C6               	addwf	_ic_ptr& (0+255),w,b
  8723  000AA8  6ED9               	movwf	fsr2l,c
  8724  000AAA  50F4               	movf	prodh,w,c
  8725  000AAC  0100               	movlb	0	; () banked
  8726  000AAE  0100               	movlb	0	; () banked
  8727  000AB0  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8728  000AB2  6EDA               	movwf	fsr2h,c
  8729  000AB4  CFC9 FFDF          	movff	4041,indf2	;volatile
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;my_i2c.c: 590: ic_ptr->bufind++;
  8733  000AB8  0100               	movlb	0	; () banked
  8734  000ABA  EE20 F017          	lfsr	2,23
  8735  000ABE  0100               	movlb	0	; () banked
  8736  000AC0  51C6               	movf	_ic_ptr& (0+255),w,b
  8737  000AC2  26D9               	addwf	fsr2l,f,c
  8738  000AC4  0100               	movlb	0	; () banked
  8739  000AC6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8740  000AC8  22DA               	addwfc	fsr2h,f,c
  8741  000ACA  2ADF               	incf	indf2,f,c
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;my_i2c.c: 591: if (ic_ptr->bufind < ic_ptr->buflen) {
  8745  000ACC  0100               	movlb	0	; () banked
  8746  000ACE  EE20 F017          	lfsr	2,23
  8747  000AD2  0100               	movlb	0	; () banked
  8748  000AD4  51C6               	movf	_ic_ptr& (0+255),w,b
  8749  000AD6  26D9               	addwf	fsr2l,f,c
  8750  000AD8  0100               	movlb	0	; () banked
  8751  000ADA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8752  000ADC  22DA               	addwfc	fsr2h,f,c
  8753  000ADE  50DF               	movf	indf2,w,c
  8754  000AE0  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8755  000AE2  0100               	movlb	0	; () banked
  8756  000AE4  EE20 F016          	lfsr	2,22
  8757  000AE8  0100               	movlb	0	; () banked
  8758  000AEA  51C6               	movf	_ic_ptr& (0+255),w,b
  8759  000AEC  26D9               	addwf	fsr2l,f,c
  8760  000AEE  0100               	movlb	0	; () banked
  8761  000AF0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8762  000AF2  22DA               	addwfc	fsr2h,f,c
  8763  000AF4  50DF               	movf	indf2,w,c
  8764  000AF6  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8765  000AF8  B0D8               	btfsc	status,0,c
  8766  000AFA  D003               	goto	i2l373
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;my_i2c.c: 592: SSPCON2bits.ACKDT = 0;
  8770  000AFC  9AC5               	bcf	4037,5,c	;volatile
  8771                           
  8772                           ;my_i2c.c: 593: SSPCON2bits.ACKEN = 1;
  8773  000AFE  88C5               	bsf	4037,4,c	;volatile
  8774                           
  8775                           ;my_i2c.c: 594: }
  8776  000B00  0012               	return	
  8777  000B02                     i2l373:
  8778                           
  8779                           ; BSR set to: 0
  8780                           ;my_i2c.c: 595: else {
  8781                           ;my_i2c.c: 596: SSPCON2bits.ACKDT = 1;
  8782  000B02  8AC5               	bsf	4037,5,c	;volatile
  8783                           
  8784                           ;my_i2c.c: 597: SSPCON2bits.ACKEN = 1;
  8785  000B04  88C5               	bsf	4037,4,c	;volatile
  8786  000B06  0012               	return	
  8787  000B08                     i2l3528:
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;my_i2c.c: 603: if (ic_ptr->bufind < ic_ptr->buflen) {
  8791  000B08  0100               	movlb	0	; () banked
  8792  000B0A  EE20 F017          	lfsr	2,23
  8793  000B0E  0100               	movlb	0	; () banked
  8794  000B10  51C6               	movf	_ic_ptr& (0+255),w,b
  8795  000B12  26D9               	addwf	fsr2l,f,c
  8796  000B14  0100               	movlb	0	; () banked
  8797  000B16  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8798  000B18  22DA               	addwfc	fsr2h,f,c
  8799  000B1A  50DF               	movf	indf2,w,c
  8800  000B1C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8801  000B1E  0100               	movlb	0	; () banked
  8802  000B20  EE20 F016          	lfsr	2,22
  8803  000B24  0100               	movlb	0	; () banked
  8804  000B26  51C6               	movf	_ic_ptr& (0+255),w,b
  8805  000B28  26D9               	addwf	fsr2l,f,c
  8806  000B2A  0100               	movlb	0	; () banked
  8807  000B2C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8808  000B2E  22DA               	addwfc	fsr2h,f,c
  8809  000B30  50DF               	movf	indf2,w,c
  8810  000B32  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8811  000B34  B0D8               	btfsc	status,0,c
  8812  000B36  D00D               	goto	i2l3534
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;my_i2c.c: 604: ic_ptr->status = 0x22;
  8816  000B38  0100               	movlb	0	; () banked
  8817  000B3A  EE20 F019          	lfsr	2,25
  8818  000B3E  0100               	movlb	0	; () banked
  8819  000B40  51C6               	movf	_ic_ptr& (0+255),w,b
  8820  000B42  26D9               	addwf	fsr2l,f,c
  8821  000B44  0100               	movlb	0	; () banked
  8822  000B46  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8823  000B48  22DA               	addwfc	fsr2h,f,c
  8824  000B4A  0E22               	movlw	34
  8825  000B4C  6EDF               	movwf	indf2,c
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;my_i2c.c: 605: SSPCON2bits.RCEN = 1;
  8829  000B4E  86C5               	bsf	4037,3,c	;volatile
  8830                           
  8831                           ;my_i2c.c: 606: }
  8832  000B50  0012               	return	
  8833  000B52                     i2l3534:
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;my_i2c.c: 607: else {
  8837                           ;my_i2c.c: 608: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
  8838                           ;my_i2c.c: 609: (void *)(ic_ptr->buffer));
  8839  000B52  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8840  000B54  0E2D               	movlw	45
  8841  000B56  0100               	movlb	0	; () banked
  8842  000B58  0100               	movlb	0	; () banked
  8843  000B5A  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8844  000B5C  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8845  000B5E  0100               	movlb	0	; () banked
  8846  000B60  0100               	movlb	0	; () banked
  8847  000B62  C0C7  F08D         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8848  000B66  0100               	movlb	0	; () banked
  8849  000B68  0100               	movlb	0	; () banked
  8850  000B6A  C0C6  F08C         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8851  000B6E  0100               	movlb	0	; () banked
  8852  000B70  EE20 F016          	lfsr	2,22
  8853  000B74  0100               	movlb	0	; () banked
  8854  000B76  51C6               	movf	_ic_ptr& (0+255),w,b
  8855  000B78  26D9               	addwf	fsr2l,f,c
  8856  000B7A  0100               	movlb	0	; () banked
  8857  000B7C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8858  000B7E  22DA               	addwfc	fsr2h,f,c
  8859  000B80  50DF               	movf	indf2,w,c
  8860  000B82  ECB1  F010         	call	_ToMainHigh_sendmsg
  8861                           
  8862                           ;my_i2c.c: 610: ic_ptr->status = 0x5;
  8863  000B86  0100               	movlb	0	; () banked
  8864  000B88  EE20 F019          	lfsr	2,25
  8865  000B8C  0100               	movlb	0	; () banked
  8866  000B8E  51C6               	movf	_ic_ptr& (0+255),w,b
  8867  000B90  26D9               	addwf	fsr2l,f,c
  8868  000B92  0100               	movlb	0	; () banked
  8869  000B94  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8870  000B96  22DA               	addwfc	fsr2h,f,c
  8871  000B98  0E05               	movlw	5
  8872  000B9A  6EDF               	movwf	indf2,c
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;my_i2c.c: 611: SSPCON2bits.PEN = 1;
  8876  000B9C  84C5               	bsf	4037,2,c	;volatile
  8877  000B9E  0012               	return	
  8878  000BA0                     i2l3542:
  8879  000BA0  0100               	movlb	0	; () banked
  8880  000BA2  EE20 F019          	lfsr	2,25
  8881  000BA6  0100               	movlb	0	; () banked
  8882  000BA8  51C6               	movf	_ic_ptr& (0+255),w,b
  8883  000BAA  26D9               	addwf	fsr2l,f,c
  8884  000BAC  0100               	movlb	0	; () banked
  8885  000BAE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8886  000BB0  22DA               	addwfc	fsr2h,f,c
  8887  000BB2  50DF               	movf	indf2,w,c
  8888                           
  8889                           ; Switch size 1, requested type "space"
  8890                           ; Number of cases is 10, Range of values is 9 to 36
  8891                           ; switch strategies available:
  8892                           ; Name         Instructions Cycles
  8893                           ; simple_byte           31    16 (average)
  8894                           ;	Chosen strategy is simple_byte
  8895  000BB4  0A09               	xorlw	9	; case 9
  8896  000BB6  B4D8               	btfsc	status,2,c
  8897  000BB8  D5A2               	goto	i2l3452
  8898  000BBA  0A19               	xorlw	25	; case 16
  8899  000BBC  B4D8               	btfsc	status,2,c
  8900  000BBE  D66B               	goto	i2l358
  8901  000BC0  0A03               	xorlw	3	; case 19
  8902  000BC2  B4D8               	btfsc	status,2,c
  8903  000BC4  D64B               	goto	i2l3476
  8904  000BC6  0A07               	xorlw	7	; case 20
  8905  000BC8  B4D8               	btfsc	status,2,c
  8906  000BCA  D69C               	goto	i2l361
  8907  000BCC  0A01               	xorlw	1	; case 21
  8908  000BCE  B4D8               	btfsc	status,2,c
  8909  000BD0  D6DB               	goto	i2l364
  8910  000BD2  0A35               	xorlw	53	; case 32
  8911  000BD4  B4D8               	btfsc	status,2,c
  8912  000BD6  D705               	goto	i2l3506
  8913  000BD8  0A01               	xorlw	1	; case 33
  8914  000BDA  B4D8               	btfsc	status,2,c
  8915  000BDC  D71A               	goto	i2l368
  8916  000BDE  0A03               	xorlw	3	; case 34
  8917  000BE0  B4D8               	btfsc	status,2,c
  8918  000BE2  D744               	goto	i2l371
  8919  000BE4  0A01               	xorlw	1	; case 35
  8920  000BE6  B4D8               	btfsc	status,2,c
  8921  000BE8  D78F               	goto	i2l3528
  8922  000BEA  0A07               	xorlw	7	; case 36
  8923  000BEC  A4D8               	btfss	status,2,c
  8924  000BEE  0012               	return	
  8925  000BF0  D5A1               	goto	i2l352
  8926  000BF2                     __end_of_i2c_master_int_handler:
  8927                           	opt stack 0
  8928                           pclatu	equ	0xFFB
  8929                           pclath	equ	0xFFA
  8930                           tblptru	equ	0xFF8
  8931                           tblptrh	equ	0xFF7
  8932                           tblptrl	equ	0xFF6
  8933                           tablat	equ	0xFF5
  8934                           prodh	equ	0xFF4
  8935                           prodl	equ	0xFF3
  8936                           intcon	equ	0xFF2
  8937                           postinc0	equ	0xFEE
  8938                           fsr0h	equ	0xFEA
  8939                           fsr0l	equ	0xFE9
  8940                           wreg	equ	0xFE8
  8941                           indf1	equ	0xFE7
  8942                           fsr1h	equ	0xFE2
  8943                           fsr1l	equ	0xFE1
  8944                           bsr	equ	0xFE0
  8945                           indf2	equ	0xFDF
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           fsr2h	equ	0xFDA
  8949                           fsr2l	equ	0xFD9
  8950                           status	equ	0xFD8
  8951                           
  8952 ;; *************** function _ToMainHigh_sendmsg *****************
  8953 ;; Defined at:
  8954 ;;		line 126 in file "source/messages.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  length          1    wreg     unsigned char 
  8957 ;;  msgtype         1   11[BANK0 ] unsigned char 
  8958 ;;  data            2   12[BANK0 ] PTR void 
  8959 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), NULL(0), 
  8960 ;;		 -> main@ic(77), 
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  length          1   60[COMRAM] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      char 
  8965 ;; Registers used:
  8966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8972 ;;      Params:         0       3       0       0       0
  8973 ;;      Locals:         1       0       0       0       0
  8974 ;;      Temps:          0       0       0       0       0
  8975 ;;      Totals:         1       3       0       0       0
  8976 ;;Total ram usage:        4 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    2
  8979 ;; This function calls:
  8980 ;;		i2_send_msg
  8981 ;; This function is called by:
  8982 ;;		_i2c_slave_int_handler
  8983 ;;		_i2c_master_int_handler
  8984 ;;		_timer0_int_handler
  8985 ;;		_motor_lthread
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text45
  8990  002162                     __ptext45:
  8991                           	opt stack 0
  8992  002162                     _ToMainHigh_sendmsg:
  8993                           	opt stack 15
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;incstack = 0
  8997                           ;ToMainHigh_sendmsg@length stored from wreg
  8998  002162  CFE8 F03D          	movff	wreg,ToMainHigh_sendmsg@length
  8999                           
  9000                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9001                           ;	Return value of _ToMainHigh_sendmsg is never used
  9002  002166  0102               	movlb	2	; () banked
  9003  002168  0E02               	movlw	high _ToMainHigh_MQ
  9004  00216A  0100               	movlb	0	; () banked
  9005  00216C  0100               	movlb	0	; () banked
  9006  00216E  6F81               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9007  002170  0102               	movlb	2	; () banked
  9008  002172  0E66               	movlw	low _ToMainHigh_MQ
  9009  002174  0100               	movlb	0	; () banked
  9010  002176  0100               	movlb	0	; () banked
  9011  002178  6F80               	movwf	i2send_msg@qptr& (0+255),b
  9012  00217A  C03D  F082         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9013  00217E  C08B  F083         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9014  002182  0100               	movlb	0	; () banked
  9015  002184  0100               	movlb	0	; () banked
  9016  002186  C08D  F085         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9017  00218A  0100               	movlb	0	; () banked
  9018  00218C  0100               	movlb	0	; () banked
  9019  00218E  C08C  F084         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9020  002192  EC5E  F00A         	call	i2_send_msg	;wreg free
  9021  002196  0012               	return	
  9022  002198                     __end_of_ToMainHigh_sendmsg:
  9023                           	opt stack 0
  9024                           pclatu	equ	0xFFB
  9025                           pclath	equ	0xFFA
  9026                           tblptru	equ	0xFF8
  9027                           tblptrh	equ	0xFF7
  9028                           tblptrl	equ	0xFF6
  9029                           tablat	equ	0xFF5
  9030                           prodh	equ	0xFF4
  9031                           prodl	equ	0xFF3
  9032                           intcon	equ	0xFF2
  9033                           postinc0	equ	0xFEE
  9034                           fsr0h	equ	0xFEA
  9035                           fsr0l	equ	0xFE9
  9036                           wreg	equ	0xFE8
  9037                           indf1	equ	0xFE7
  9038                           fsr1h	equ	0xFE2
  9039                           fsr1l	equ	0xFE1
  9040                           bsr	equ	0xFE0
  9041                           indf2	equ	0xFDF
  9042                           postinc2	equ	0xFDE
  9043                           postdec2	equ	0xFDD
  9044                           fsr2h	equ	0xFDA
  9045                           fsr2l	equ	0xFD9
  9046                           status	equ	0xFD8
  9047                           
  9048 ;; *************** function i2_send_msg *****************
  9049 ;; Defined at:
  9050 ;;		line 24 in file "source/messages.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9053 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9054 ;;  length          1    2[BANK0 ] unsigned char 
  9055 ;;  msgtype         1    3[BANK0 ] unsigned char 
  9056 ;;  data            2    4[BANK0 ] PTR void 
  9057 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), NULL(0), 
  9058 ;;		 -> main@ic(77), main@uc(23), 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  9061 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9062 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9063 ;;  send_msg        2    6[BANK0 ] unsigned int 
  9064 ;;  send_msg        1    8[BANK0 ] unsigned char 
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      char 
  9067 ;; Registers used:
  9068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9074 ;;      Params:         0       6       0       0       0
  9075 ;;      Locals:         0       5       0       0       0
  9076 ;;      Temps:          1       0       0       0       0
  9077 ;;      Totals:         1      11       0       0       0
  9078 ;;Total ram usage:       12 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    1
  9081 ;; This function calls:
  9082 ;;		i2_memcpy
  9083 ;; This function is called by:
  9084 ;;		_ToMainHigh_sendmsg
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text46
  9089  0014BC                     __ptext46:
  9090                           	opt stack 0
  9091  0014BC                     i2_send_msg:
  9092                           	opt stack 15
  9093                           
  9094                           ;messages.c: 25: unsigned char slot;
  9095                           ;messages.c: 27: msg *qmsg;
  9096                           ;messages.c: 28: size_t tlength = length;
  9097                           
  9098                           ;incstack = 0
  9099  0014BC  0100               	movlb	0	; () banked
  9100  0014BE  0100               	movlb	0	; () banked
  9101  0014C0  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  9102  0014C4  0100               	movlb	0	; () banked
  9103  0014C6  0100               	movlb	0	; () banked
  9104  0014C8  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9108  0014CA  0100               	movlb	0	; () banked
  9109  0014CC  EE20 F064          	lfsr	2,100
  9110  0014D0  0100               	movlb	0	; () banked
  9111  0014D2  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9112  0014D4  26D9               	addwf	fsr2l,f,c
  9113  0014D6  0100               	movlb	0	; () banked
  9114  0014D8  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9115  0014DA  22DA               	addwfc	fsr2h,f,c
  9116  0014DC  50DF               	movf	indf2,w,c
  9117  0014DE  0100               	movlb	0	; () banked
  9118  0014E0  0100               	movlb	0	; () banked
  9119  0014E2  6F88               	movwf	i2send_msg@slot& (0+255),b
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9123  0014E4  0100               	movlb	0	; () banked
  9124  0014E6  0100               	movlb	0	; () banked
  9125  0014E8  5188               	movf	i2send_msg@slot& (0+255),w,b
  9126  0014EA  0D19               	mullw	25
  9127  0014EC  50F3               	movf	prodl,w,c
  9128  0014EE  0100               	movlb	0	; () banked
  9129  0014F0  0100               	movlb	0	; () banked
  9130  0014F2  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  9131  0014F4  0100               	movlb	0	; () banked
  9132  0014F6  0100               	movlb	0	; () banked
  9133  0014F8  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  9134  0014FA  50F4               	movf	prodh,w,c
  9135  0014FC  0100               	movlb	0	; () banked
  9136  0014FE  0100               	movlb	0	; () banked
  9137  001500  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9138  001502  0100               	movlb	0	; () banked
  9139  001504  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;messages.c: 41: if (qmsg->full != 0) {
  9143  001506  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9144  00150A  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9145  00150E  50DF               	movf	indf2,w,c
  9146  001510  B4D8               	btfsc	status,2,c
  9147  001512  D002               	goto	i2l3698
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;messages.c: 42: return (-1);
  9151  001514  0EFF               	movlw	255
  9152  001516  0012               	return	
  9153  001518                     i2l3698:
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;messages.c: 43: }
  9157                           ;messages.c: 46: qmsg->length = length;
  9158  001518  0100               	movlb	0	; () banked
  9159  00151A  EE20 F001          	lfsr	2,1
  9160  00151E  0100               	movlb	0	; () banked
  9161  001520  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9162  001522  26D9               	addwf	fsr2l,f,c
  9163  001524  0100               	movlb	0	; () banked
  9164  001526  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9165  001528  22DA               	addwfc	fsr2h,f,c
  9166  00152A  0100               	movlb	0	; () banked
  9167  00152C  C082  FFDF         	movff	i2send_msg@length,indf2
  9168                           
  9169                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9170  001530  0100               	movlb	0	; () banked
  9171  001532  EE20 F002          	lfsr	2,2
  9172  001536  0100               	movlb	0	; () banked
  9173  001538  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9174  00153A  26D9               	addwf	fsr2l,f,c
  9175  00153C  0100               	movlb	0	; () banked
  9176  00153E  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9177  001540  22DA               	addwfc	fsr2h,f,c
  9178  001542  0100               	movlb	0	; () banked
  9179  001544  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9183  001548  0E03               	movlw	3
  9184  00154A  0100               	movlb	0	; () banked
  9185  00154C  0100               	movlb	0	; () banked
  9186  00154E  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  9187  001550  6E32               	movwf	i2memcpy@d1,c
  9188  001552  0E00               	movlw	0
  9189  001554  0100               	movlb	0	; () banked
  9190  001556  0100               	movlb	0	; () banked
  9191  001558  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9192  00155A  6E33               	movwf	i2memcpy@d1+1,c
  9193  00155C  0100               	movlb	0	; () banked
  9194  00155E  C085  F035         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9195  001562  0100               	movlb	0	; () banked
  9196  001564  C084  F034         	movff	i2send_msg@data,i2memcpy@s1
  9197  001568  C086  F036         	movff	i2send_msg@tlength,i2memcpy@n
  9198  00156C  C087  F037         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9199  001570  EC58  F010         	call	i2_memcpy	;wreg free
  9200                           
  9201                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9202  001574  0100               	movlb	0	; () banked
  9203  001576  EE20 F064          	lfsr	2,100
  9204  00157A  0100               	movlb	0	; () banked
  9205  00157C  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9206  00157E  26D9               	addwf	fsr2l,f,c
  9207  001580  0100               	movlb	0	; () banked
  9208  001582  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9209  001584  22DA               	addwfc	fsr2h,f,c
  9210  001586  0100               	movlb	0	; () banked
  9211  001588  EE10 F064          	lfsr	1,100
  9212  00158C  0100               	movlb	0	; () banked
  9213  00158E  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9214  001590  26E1               	addwf	fsr1l,f,c
  9215  001592  0100               	movlb	0	; () banked
  9216  001594  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9217  001596  22E2               	addwfc	fsr1h,f,c
  9218  001598  50E7               	movf	indf1,w,c
  9219  00159A  6E3C               	movwf	??i2_send_msg& (0+255),c
  9220  00159C  283C               	incf	??i2_send_msg,w,c
  9221  00159E  0B03               	andlw	3
  9222  0015A0  6EDF               	movwf	indf2,c
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;messages.c: 59: qmsg->full = 1;
  9226  0015A2  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9227  0015A6  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9228  0015AA  0E01               	movlw	1
  9229  0015AC  6EDF               	movwf	indf2,c
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;messages.c: 60: return (1);
  9233  0015AE  0E01               	movlw	1
  9234  0015B0  0012               	return	
  9235  0015B2                     __end_ofi2_send_msg:
  9236                           	opt stack 0
  9237                           pclatu	equ	0xFFB
  9238                           pclath	equ	0xFFA
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           postinc0	equ	0xFEE
  9247                           fsr0h	equ	0xFEA
  9248                           fsr0l	equ	0xFE9
  9249                           wreg	equ	0xFE8
  9250                           indf1	equ	0xFE7
  9251                           fsr1h	equ	0xFE2
  9252                           fsr1l	equ	0xFE1
  9253                           bsr	equ	0xFE0
  9254                           indf2	equ	0xFDF
  9255                           postinc2	equ	0xFDE
  9256                           postdec2	equ	0xFDD
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function i2_memcpy *****************
  9262 ;; Defined at:
  9263 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  d1              2   49[COMRAM] PTR void 
  9266 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9267 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9268 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9269 ;;  s1              2   51[COMRAM] PTR const void 
  9270 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9271 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9272 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  9273 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  9274 ;;		 -> main@ic(77), main@uc(23), 
  9275 ;;  n               2   53[COMRAM] unsigned int 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  memcpy          2   57[COMRAM] PTR const unsigned char 
  9278 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9279 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9280 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  9281 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  9282 ;;		 -> main@ic(77), main@uc(23), 
  9283 ;;  memcpy          2   55[COMRAM] PTR unsigned char 
  9284 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9285 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9286 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  2   49[COMRAM] PTR void 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9296 ;;      Params:         6       0       0       0       0
  9297 ;;      Locals:         4       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0
  9299 ;;      Totals:        10       0       0       0       0
  9300 ;;Total ram usage:       10 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		i2_send_msg
  9306 ;;		i2_recv_msg
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text47
  9311  0020B0                     __ptext47:
  9312                           	opt stack 0
  9313  0020B0                     i2_memcpy:
  9314                           	opt stack 15
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;incstack = 0
  9318  0020B0  C035  F03B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9319  0020B4  C034  F03A         	movff	i2memcpy@s1,i2memcpy@s
  9320  0020B8  C033  F039         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9321  0020BC  C032  F038         	movff	i2memcpy@d1,i2memcpy@d
  9322  0020C0  D00E               	goto	i2l3750
  9323  0020C2                     i2l3744:
  9324  0020C2  C03A  FFD9         	movff	i2memcpy@s,fsr2l
  9325  0020C6  C03B  FFDA         	movff	i2memcpy@s+1,fsr2h
  9326  0020CA  C038  FFE1         	movff	i2memcpy@d,fsr1l
  9327  0020CE  C039  FFE2         	movff	i2memcpy@d+1,fsr1h
  9328  0020D2  CFDF FFE7          	movff	indf2,indf1
  9329  0020D6  4A3A               	infsnz	i2memcpy@s,f,c
  9330  0020D8  2A3B               	incf	i2memcpy@s+1,f,c
  9331  0020DA  4A38               	infsnz	i2memcpy@d,f,c
  9332  0020DC  2A39               	incf	i2memcpy@d+1,f,c
  9333  0020DE                     i2l3750:
  9334  0020DE  0636               	decf	i2memcpy@n,f,c
  9335  0020E0  A0D8               	btfss	status,0,c
  9336  0020E2  0637               	decf	i2memcpy@n+1,f,c
  9337  0020E4  2836               	incf	i2memcpy@n& (0+255),w,c
  9338  0020E6  B4D8               	btfsc	status,2,c
  9339  0020E8  2837               	incf	(i2memcpy@n+1)& (0+255),w,c
  9340  0020EA  B4D8               	btfsc	status,2,c
  9341                           
  9342                           ;	Return value of i2_memcpy is never used
  9343  0020EC  0012               	return	
  9344  0020EE  D7E9               	goto	i2l3744
  9345  0020F0                     __end_ofi2_memcpy:
  9346                           	opt stack 0
  9347                           pclatu	equ	0xFFB
  9348                           pclath	equ	0xFFA
  9349                           tblptru	equ	0xFF8
  9350                           tblptrh	equ	0xFF7
  9351                           tblptrl	equ	0xFF6
  9352                           tablat	equ	0xFF5
  9353                           prodh	equ	0xFF4
  9354                           prodl	equ	0xFF3
  9355                           intcon	equ	0xFF2
  9356                           postinc0	equ	0xFEE
  9357                           fsr0h	equ	0xFEA
  9358                           fsr0l	equ	0xFE9
  9359                           wreg	equ	0xFE8
  9360                           indf1	equ	0xFE7
  9361                           fsr1h	equ	0xFE2
  9362                           fsr1l	equ	0xFE1
  9363                           bsr	equ	0xFE0
  9364                           indf2	equ	0xFDF
  9365                           postinc2	equ	0xFDE
  9366                           postdec2	equ	0xFDD
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _SleepIfOkay *****************
  9372 ;; Defined at:
  9373 ;;		line 228 in file "source/messages.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;		None
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;		None               void
  9380 ;; Registers used:
  9381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9387 ;;      Params:         0       0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0
  9390 ;;      Totals:         0       0       0       0       0
  9391 ;;Total ram usage:        0 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    2
  9394 ;; This function calls:
  9395 ;;		_enter_sleep_mode
  9396 ;;		i2_check_msg
  9397 ;;		i2_in_high_int
  9398 ;;		i2_in_low_int
  9399 ;; This function is called by:
  9400 ;;		_InterruptHandlerHigh
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text48
  9405  001ED2                     __ptext48:
  9406                           	opt stack 0
  9407  001ED2                     _SleepIfOkay:
  9408                           	opt stack 16
  9409                           
  9410                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9411                           
  9412                           ;incstack = 0
  9413  001ED2  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  9414  001ED4  D001               	goto	i2l2410
  9415  001ED6  0012               	return	
  9416  001ED8                     i2l2410:
  9417                           
  9418                           ;messages.c: 232: }
  9419                           ;messages.c: 235: if (in_low_int()) {
  9420  001ED8  ECE4  F010         	call	i2_in_low_int	;wreg free
  9421  001EDC  5035               	movf	?i2_in_low_int+1,w,c
  9422  001EDE  1034               	iorwf	?i2_in_low_int,w,c
  9423  001EE0  A4D8               	btfss	status,2,c
  9424  001EE2  0012               	return	
  9425                           
  9426                           ;messages.c: 237: }
  9427                           ;messages.c: 240: if (!in_high_int()) {
  9428                           
  9429                           ;messages.c: 236: return;
  9430  001EE4  ECA0  F011         	call	i2_in_high_int	;wreg free
  9431  001EE8  5033               	movf	?i2_in_high_int+1,w,c
  9432  001EEA  1032               	iorwf	?i2_in_high_int,w,c
  9433  001EEC  B4D8               	btfsc	status,2,c
  9434  001EEE  0012               	return	
  9435                           
  9436                           ;messages.c: 242: }
  9437                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9438                           
  9439                           ;messages.c: 241: return;
  9440  001EF0  0102               	movlb	2	; () banked
  9441  001EF2  0E02               	movlw	high _ToMainHigh_MQ
  9442  001EF4  6E33               	movwf	i2check_msg@qptr+1,c
  9443  001EF6  0102               	movlb	2	; () banked
  9444  001EF8  0E66               	movlw	low _ToMainHigh_MQ
  9445  001EFA  6E32               	movwf	i2check_msg@qptr,c
  9446  001EFC  EC23  F011         	call	i2_check_msg	;wreg free
  9447  001F00  0900               	iorlw	0
  9448  001F02  A4D8               	btfss	status,2,c
  9449  001F04  0012               	return	
  9450                           
  9451                           ;messages.c: 249: }
  9452                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9453                           
  9454                           ;messages.c: 248: return;
  9455  001F06  0101               	movlb	1	; () banked
  9456  001F08  0E01               	movlw	high _ToMainLow_MQ
  9457  001F0A  6E33               	movwf	i2check_msg@qptr+1,c
  9458  001F0C  0101               	movlb	1	; () banked
  9459  001F0E  0E84               	movlw	low _ToMainLow_MQ
  9460  001F10  6E32               	movwf	i2check_msg@qptr,c
  9461  001F12  EC23  F011         	call	i2_check_msg	;wreg free
  9462  001F16  0900               	iorlw	0
  9463  001F18  B4D8               	btfsc	status,2,c
  9464                           
  9465                           ;messages.c: 252: }
  9466                           ;messages.c: 253: enter_sleep_mode();
  9467                           
  9468                           ;messages.c: 251: return;
  9469  001F1A  ECAA  F011         	call	_enter_sleep_mode	;wreg free
  9470  001F1E  0012               	return	
  9471  001F20                     __end_of_SleepIfOkay:
  9472                           	opt stack 0
  9473                           pclatu	equ	0xFFB
  9474                           pclath	equ	0xFFA
  9475                           tblptru	equ	0xFF8
  9476                           tblptrh	equ	0xFF7
  9477                           tblptrl	equ	0xFF6
  9478                           tablat	equ	0xFF5
  9479                           prodh	equ	0xFF4
  9480                           prodl	equ	0xFF3
  9481                           intcon	equ	0xFF2
  9482                           postinc0	equ	0xFEE
  9483                           fsr0h	equ	0xFEA
  9484                           fsr0l	equ	0xFE9
  9485                           wreg	equ	0xFE8
  9486                           indf1	equ	0xFE7
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           bsr	equ	0xFE0
  9490                           indf2	equ	0xFDF
  9491                           postinc2	equ	0xFDE
  9492                           postdec2	equ	0xFDD
  9493                           fsr2h	equ	0xFDA
  9494                           fsr2l	equ	0xFD9
  9495                           status	equ	0xFD8
  9496                           
  9497 ;; *************** function i2_in_low_int *****************
  9498 ;; Defined at:
  9499 ;;		line 30 in file "source/interrupts.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  2   51[COMRAM] int 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9513 ;;      Params:         2       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0
  9516 ;;      Totals:         2       0       0       0       0
  9517 ;;Total ram usage:        2 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    1
  9520 ;; This function calls:
  9521 ;;		i2_in_high_int
  9522 ;; This function is called by:
  9523 ;;		_SleepIfOkay
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text49
  9528  0021C8                     __ptext49:
  9529                           	opt stack 0
  9530  0021C8                     i2_in_low_int:
  9531                           	opt stack 16
  9532                           
  9533                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9534                           
  9535                           ;incstack = 0
  9536  0021C8  ACF2               	btfss	intcon,6,c	;volatile
  9537  0021CA  D005               	goto	i2l3196
  9538                           
  9539                           ;interrupts.c: 32: return (0);
  9540  0021CC  0E00               	movlw	0
  9541  0021CE  6E35               	movwf	?i2_in_low_int+1,c
  9542  0021D0  0E00               	movlw	0
  9543  0021D2  6E34               	movwf	?i2_in_low_int,c
  9544  0021D4  0012               	return	
  9545  0021D6                     i2l3196:
  9546  0021D6  ECA0  F011         	call	i2_in_high_int	;wreg free
  9547  0021DA  5033               	movf	?i2_in_high_int+1,w,c
  9548  0021DC  1032               	iorwf	?i2_in_high_int,w,c
  9549  0021DE  B4D8               	btfsc	status,2,c
  9550  0021E0  D005               	goto	i2l3204
  9551                           
  9552                           ;interrupts.c: 34: return (0);
  9553  0021E2  0E00               	movlw	0
  9554  0021E4  6E35               	movwf	?i2_in_low_int+1,c
  9555  0021E6  0E00               	movlw	0
  9556  0021E8  6E34               	movwf	?i2_in_low_int,c
  9557  0021EA  0012               	return	
  9558  0021EC                     i2l3204:
  9559                           
  9560                           ;interrupts.c: 36: return (1);
  9561  0021EC  0E00               	movlw	0
  9562  0021EE  6E35               	movwf	?i2_in_low_int+1,c
  9563  0021F0  0E01               	movlw	1
  9564  0021F2  6E34               	movwf	?i2_in_low_int,c
  9565  0021F4  0012               	return	
  9566  0021F6                     __end_ofi2_in_low_int:
  9567                           	opt stack 0
  9568                           pclatu	equ	0xFFB
  9569                           pclath	equ	0xFFA
  9570                           tblptru	equ	0xFF8
  9571                           tblptrh	equ	0xFF7
  9572                           tblptrl	equ	0xFF6
  9573                           tablat	equ	0xFF5
  9574                           prodh	equ	0xFF4
  9575                           prodl	equ	0xFF3
  9576                           intcon	equ	0xFF2
  9577                           postinc0	equ	0xFEE
  9578                           fsr0h	equ	0xFEA
  9579                           fsr0l	equ	0xFE9
  9580                           wreg	equ	0xFE8
  9581                           indf1	equ	0xFE7
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           bsr	equ	0xFE0
  9585                           indf2	equ	0xFDF
  9586                           postinc2	equ	0xFDE
  9587                           postdec2	equ	0xFDD
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function i2_in_high_int *****************
  9593 ;; Defined at:
  9594 ;;		line 22 in file "source/interrupts.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  2   49[COMRAM] int 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9608 ;;      Params:         2       0       0       0       0
  9609 ;;      Locals:         0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0
  9611 ;;      Totals:         2       0       0       0       0
  9612 ;;Total ram usage:        2 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_SleepIfOkay
  9618 ;;		i2_in_low_int
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text50
  9623  002340                     __ptext50:
  9624                           	opt stack 0
  9625  002340                     i2_in_high_int:
  9626                           	opt stack 16
  9627                           
  9628                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9629                           
  9630                           ;incstack = 0
  9631  002340  0E00               	movlw	0
  9632  002342  AEF2               	btfss	intcon,7,c	;volatile
  9633  002344  0E01               	movlw	1
  9634  002346  6E32               	movwf	?i2_in_high_int,c
  9635  002348  6A33               	clrf	?i2_in_high_int+1,c
  9636  00234A  0012               	return	
  9637  00234C                     __end_ofi2_in_high_int:
  9638                           	opt stack 0
  9639                           pclatu	equ	0xFFB
  9640                           pclath	equ	0xFFA
  9641                           tblptru	equ	0xFF8
  9642                           tblptrh	equ	0xFF7
  9643                           tblptrl	equ	0xFF6
  9644                           tablat	equ	0xFF5
  9645                           prodh	equ	0xFF4
  9646                           prodl	equ	0xFF3
  9647                           intcon	equ	0xFF2
  9648                           postinc0	equ	0xFEE
  9649                           fsr0h	equ	0xFEA
  9650                           fsr0l	equ	0xFE9
  9651                           wreg	equ	0xFE8
  9652                           indf1	equ	0xFE7
  9653                           fsr1h	equ	0xFE2
  9654                           fsr1l	equ	0xFE1
  9655                           bsr	equ	0xFE0
  9656                           indf2	equ	0xFDF
  9657                           postinc2	equ	0xFDE
  9658                           postdec2	equ	0xFDD
  9659                           fsr2h	equ	0xFDA
  9660                           fsr2l	equ	0xFD9
  9661                           status	equ	0xFD8
  9662                           
  9663 ;; *************** function i2_check_msg *****************
  9664 ;; Defined at:
  9665 ;;		line 222 in file "source/messages.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  qptr            2   49[COMRAM] PTR struct __msg_queue
  9668 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      unsigned char 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9680 ;;      Params:         2       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0
  9682 ;;      Temps:          1       0       0       0       0
  9683 ;;      Totals:         3       0       0       0       0
  9684 ;;Total ram usage:        3 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_SleepIfOkay
  9690 ;; This function uses a non-reentrant model
  9691 ;;
  9692                           
  9693                           	psect	text51
  9694  002246                     __ptext51:
  9695                           	opt stack 0
  9696  002246                     i2_check_msg:
  9697                           	opt stack 17
  9698                           
  9699                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9700                           
  9701                           ;incstack = 0
  9702  002246  EE20 F065          	lfsr	2,101
  9703  00224A  5032               	movf	i2check_msg@qptr,w,c
  9704  00224C  26D9               	addwf	fsr2l,f,c
  9705  00224E  5033               	movf	i2check_msg@qptr+1,w,c
  9706  002250  22DA               	addwfc	fsr2h,f,c
  9707  002252  50DF               	movf	indf2,w,c
  9708  002254  6E34               	movwf	??i2_check_msg& (0+255),c
  9709  002256  5034               	movf	??i2_check_msg,w,c
  9710  002258  0D19               	mullw	25
  9711  00225A  50F3               	movf	prodl,w,c
  9712  00225C  2432               	addwf	i2check_msg@qptr,w,c
  9713  00225E  6ED9               	movwf	fsr2l,c
  9714  002260  50F4               	movf	prodh,w,c
  9715  002262  2033               	addwfc	i2check_msg@qptr+1,w,c
  9716  002264  6EDA               	movwf	fsr2h,c
  9717  002266  50DF               	movf	indf2,w,c
  9718  002268  0012               	return	
  9719  00226A                     __end_ofi2_check_msg:
  9720                           	opt stack 0
  9721                           pclatu	equ	0xFFB
  9722                           pclath	equ	0xFFA
  9723                           tblptru	equ	0xFF8
  9724                           tblptrh	equ	0xFF7
  9725                           tblptrl	equ	0xFF6
  9726                           tablat	equ	0xFF5
  9727                           prodh	equ	0xFF4
  9728                           prodl	equ	0xFF3
  9729                           intcon	equ	0xFF2
  9730                           postinc0	equ	0xFEE
  9731                           fsr0h	equ	0xFEA
  9732                           fsr0l	equ	0xFE9
  9733                           wreg	equ	0xFE8
  9734                           indf1	equ	0xFE7
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           bsr	equ	0xFE0
  9738                           indf2	equ	0xFDF
  9739                           postinc2	equ	0xFDE
  9740                           postdec2	equ	0xFDD
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function _enter_sleep_mode *****************
  9746 ;; Defined at:
  9747 ;;		line 202 in file "source/messages.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;		None               void
  9754 ;; Registers used:
  9755 ;;		None
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9761 ;;      Params:         0       0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0
  9764 ;;      Totals:         0       0       0       0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; This function calls:
  9768 ;;		Nothing
  9769 ;; This function is called by:
  9770 ;;		_SleepIfOkay
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text52
  9775  002354                     __ptext52:
  9776                           	opt stack 0
  9777  002354                     _enter_sleep_mode:
  9778                           	opt stack 17
  9779                           
  9780                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9781                           
  9782                           ;incstack = 0
  9783  002354  8ED3               	bsf	4051,7,c	;volatile
  9784  002356  0003               	sleep		;# 
  9785  002358  0012               	return	
  9786  00235A                     __end_of_enter_sleep_mode:
  9787                           	opt stack 0
  9788  0000                     pclatu	equ	0xFFB
  9789                           pclath	equ	0xFFA
  9790                           tblptru	equ	0xFF8
  9791                           tblptrh	equ	0xFF7
  9792                           tblptrl	equ	0xFF6
  9793                           tablat	equ	0xFF5
  9794                           prodh	equ	0xFF4
  9795                           prodl	equ	0xFF3
  9796                           intcon	equ	0xFF2
  9797                           postinc0	equ	0xFEE
  9798                           fsr0h	equ	0xFEA
  9799                           fsr0l	equ	0xFE9
  9800                           wreg	equ	0xFE8
  9801                           indf1	equ	0xFE7
  9802                           fsr1h	equ	0xFE2
  9803                           fsr1l	equ	0xFE1
  9804                           bsr	equ	0xFE0
  9805                           indf2	equ	0xFDF
  9806                           postinc2	equ	0xFDE
  9807                           postdec2	equ	0xFDD
  9808                           fsr2h	equ	0xFDA
  9809                           fsr2l	equ	0xFD9
  9810                           status	equ	0xFD8
  9811                           pclatu	equ	0xFFB
  9812                           pclath	equ	0xFFA
  9813                           tblptru	equ	0xFF8
  9814                           tblptrh	equ	0xFF7
  9815                           tblptrl	equ	0xFF6
  9816                           tablat	equ	0xFF5
  9817                           prodh	equ	0xFF4
  9818                           prodl	equ	0xFF3
  9819                           intcon	equ	0xFF2
  9820                           postinc0	equ	0xFEE
  9821                           fsr0h	equ	0xFEA
  9822                           fsr0l	equ	0xFE9
  9823                           wreg	equ	0xFE8
  9824                           indf1	equ	0xFE7
  9825                           fsr1h	equ	0xFE2
  9826                           fsr1l	equ	0xFE1
  9827                           bsr	equ	0xFE0
  9828                           indf2	equ	0xFDF
  9829                           postinc2	equ	0xFDE
  9830                           postdec2	equ	0xFDD
  9831                           fsr2h	equ	0xFDA
  9832                           fsr2l	equ	0xFD9
  9833                           status	equ	0xFD8
  9834                           
  9835                           	psect	rparam
  9836  0000                     pclatu	equ	0xFFB
  9837                           pclath	equ	0xFFA
  9838                           tblptru	equ	0xFF8
  9839                           tblptrh	equ	0xFF7
  9840                           tblptrl	equ	0xFF6
  9841                           tablat	equ	0xFF5
  9842                           prodh	equ	0xFF4
  9843                           prodl	equ	0xFF3
  9844                           intcon	equ	0xFF2
  9845                           postinc0	equ	0xFEE
  9846                           fsr0h	equ	0xFEA
  9847                           fsr0l	equ	0xFE9
  9848                           wreg	equ	0xFE8
  9849                           indf1	equ	0xFE7
  9850                           fsr1h	equ	0xFE2
  9851                           fsr1l	equ	0xFE1
  9852                           bsr	equ	0xFE0
  9853                           indf2	equ	0xFDF
  9854                           postinc2	equ	0xFDE
  9855                           postdec2	equ	0xFDD
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         421
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      78
    BANK0           128     70      73
    BANK1           256    132     234
    BANK2           256      0     204
    BANK3           256      0     102

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> NULL(NULL[0]), main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), 
		 -> ToMainLow_MQ(BANK1[102]), main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), 
		 -> ToMainLow_MQ(BANK1[102]), main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    parser_lthread@msgbuf	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 77
		 -> main@ic(BANK1[77]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 5
		 -> parser_lthread@data(BANK0[5]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 77
		 -> NULL(NULL[0]), main@ic(BANK1[77]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), 
		 -> ToMainLow_MQ(BANK1[102]), main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_lthread->_WriteUSART
    _parser_lthread->_i2c_master_send
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               136   136      0    7044
                                             68 BANK0      2     2      0
                                              0 BANK1    132   132      0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _parser_lthread
                     _timer0_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8     647
                                             40 BANK0     11     3      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             39 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _parser_lthread                                      21    15      6     960
                                             46 BANK0     21    15      6
               _i2c_configure_master
                    _i2c_master_recv
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                      7     5      2     187
                                             39 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_configure_master                                 2     2      0      22
                                             39 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      75
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             43 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             39 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             45 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             43 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             41 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1631
                                             63 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1631
                                             63 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1459
                                             49 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     360
                                             39 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             39 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6115
                                             32 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    4005
                                             31 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
                          _parseUART
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            5     5      0    1991
                                             26 COMRAM     5     5      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2110
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    1991
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _send_msg                                            12     6      6    1607
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   17170
                                             25 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0    7585
                                             16 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    2970
                                             61 COMRAM     1     1      0
                                             12 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    2747
                                             59 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0    9349
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    5037
                                             14 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) _start_i2c_slave_reply                               6     4      2     119
                                             49 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      22
                                             49 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    4312
                                             61 COMRAM     1     1      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    4312
                                             60 COMRAM     1     1      0
                                             11 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2659
                                             59 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                             49 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _parser_lthread
     _i2c_configure_master
     _i2c_master_recv
     _i2c_master_send
   _timer0_lthread
   _uart_lthread
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _parseUART
       _ToMainLow_sendmsg
         _send_msg
           i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      66      12       39.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CC       8       79.7%
BITBANK1           100      0       0      10        0.0%
BANK1              100     84      EA       6       91.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     46      49       5       57.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B3       9        0.0%
DATA                 0      0     2B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Apr 11 08:37:50 2014

                  main@uthread_data 0118            _MQ_Main_Willing_to_block 0049  
                       _SSPSTATbits 000FC7                                  l93 0D10  
         __end_of_ToMainLow_recvmsg 1FEC                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 2246              parser_lthread@checksum 00BE  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 0083  
                 i2recv_msg@tlength 0088                                 l436 1096  
                               l550 1ADA                                 l551 1ADC  
                               l544 1AAA                                 l474 1976  
                               l548 1ACA                                 l549 1ACC  
                               l788 22AE                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                      _FromMainLow_MQ 0200  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 00A7                    ??_init_uart_recv 00A9  
                   ReadTimer1@timer 0003                      _parser_lthread 0E80  
               i2recv_msg@maxlength 0082                                l2350 1F34  
                              l2700 1DBA                                l2372 1F9A  
                              l3180 22CE                                l2620 19A4  
                              l2612 194A                                l2358 1F56  
                              l2470 0D68                                l2456 0C6C  
                              l2546 1AAC                                l2538 1A96  
                              l2714 12CC                                l2730 1392  
                              l2634 0EBC                                l2466 0CBE  
                              l2474 0DC2                                l2660 0FFC  
                              l2652 0FD6                                l2484 0E2E  
                              l2468 0D16                                l2476 0DE0  
                              l2590 1C58                                l2638 0EE8  
                              l2584 1C2C                                l2832 1708  
                              l2656 0FE8                                l2488 0E6C  
                              l2596 1C84                                l2828 16B0  
                              l2694 1D96                                l2686 1CD4  
                              _LATB 000F8A                                u2767 22B0  
                              i1l47 0070                     _FromMainHigh_MQ 0300  
                              _Send 003F                       __CFG_FCMEN$ON 000000  
            parser_lthread@movement 00C2              ?_block_on_To_msgqueues 0001  
                              _main 0BF2                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 0136  
                              pclat 000FFA                         i2_check_msg 2246  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0032                                start 00B6  
                        i2_recv_msg 1396                       __CFG_FOSC2$ON 000000  
                        i2_send_msg 14BC       __size_of_i2c_configure_master 0054  
         ToMainHigh_recvmsg@msgtype 00BF                      send_msg@length 000D  
       __size_of_timer0_int_handler 0084             ??_i2c_slave_int_handler 008E  
                       _Delay1KTCYx 22AA                               ?_main 0001  
                        i1memcpy@d1 0001                               i2l301 0182  
                             i2l305 01C6                               i1l562 229A  
                             i2l333 052E                               i2l327 048E  
                             i2l319 0356                               i2l352 0734  
                             i2l361 0904                               i2l281 18C0  
                             i2l371 0A6C                               i2l364 0988  
                             i2l373 0B02                               i2l358 0896  
                             i2l368 0A12                               i2l299 051C  
                        i1memcpy@s1 0003         FromMainHigh_recvmsg@msgtype 008C  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0032              __end_of_parser_lthread 10AC  
                        i2memcpy@s1 0034                        ?_init_queues 0001  
                             _State 004D           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 1FAA          ToMainLow_recvmsg@maxlength 00C3  
           timer0_lthread@msgbuffer 00AD                               tablat 000FF5  
                             status 000FD8                    __end_ofi1_memcpy 20B0  
                  __end_ofi2_memcpy 20F0                      WriteUSART@data 00A7  
                   __initialization 1E82                        __end_of_main 0E80  
                        _ReadTimer1 231C         __size_of_timer1_int_handler 0030  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
     __size_of_FromMainHigh_recvmsg 0042               __size_ofi2_in_low_int 002E  
                            ??_main 00C4                     send_msg@msgtype 000E  
                     __activetblptr 000002                     send_msg@tlength 0012  
              __end_of_handle_start 190C                     ?_parser_lthread 00AE  
           ??_uart_recv_int_handler 0020                              i1l3300 1A04  
                            i1l3340 1648                              i1l3332 160E  
                            i1l3324 15B4                              i1l3270 2082  
                            i1l3334 1618                              i1l3350 1682  
                            i1l3360 1E0E                              i1l3338 163E  
                            i1l3276 209E                              i1l3372 0066  
                            i2l2410 1ED8                              i2l3204 21EC  
                            i2l3400 2278                              i2l3500 09A6  
                    __CFG_WDTEN$OFF 000000                              i2l3512 0A30  
                            i2l3600 027E                              i2l3506 09E2  
                            i2l3602 02BE                              i2l3196 21D6  
                            i2l3452 06FE                              i2l3534 0B52  
                            i2l3462 07CE                              i2l3470 0820  
                            i2l3542 0BA0                              i2l3630 041E  
                            i2l3390 1BD0                              i2l3528 0B08  
                            i2l3624 03CA                              i2l3384 1BC6  
                            i2l3490 094C                              i2l3482 08C8  
                            i2l3626 040C                              i2l3394 226C  
                            i2l3722 1402                              i2l3476 085C  
                            i2l3652 04F0                              i2l3564 0178  
                            i2l3396 2272                              i2l3750 20DE  
                            i2l2870 1176                              i2l2862 10C8  
                            i2l3582 01FE                              i2l3558 0160  
                            i2l3744 20C2                              i2l3680 06D2  
                            i2l3672 062C                              i2l3664 0592  
                            i2l3584 022A                              i2l2890 18DC  
                            i2l2866 1148                              i2l2874 11E6  
                            i2l3658 0532                              i2l3594 0266  
                            i2l3738 14B8                              i2l2892 18F4  
                            i2l3698 1518                       ??_SleepIfOkay 0036  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 01B4  
     __end_of_start_i2c_slave_reply 1260                  timer0_lthread@tptr 00A7  
                       ?i2_recv_msg 0080                        i2_in_low_int 21C8  
                       ?i2_send_msg 0080                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 226A  
 i2c_slave_int_handler@data_written 0093                     _i2c_master_recv 20F0  
                   _i2c_master_send 1698                              _ic_ptr 00C6  
                     main@msgbuffer 0100                    __end_of_init_i2c 1844  
                            _memcpy 1D74                              clear_0 1E88  
                            clear_1 1E94                              clear_2 1EA0  
                            clear_3 1EB0                              _uc_ptr 004B  
                            main@ic 0137                              main@uc 011E  
                  __end_of_recv_msg 1396         start_i2c_slave_reply@length 0037  
                         ??_in_main 00AD                    __end_of_send_msg 1A76  
                      __pdataCOMRAM 004E               timer0_int_handler@val 0095  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00AA  
          ToMainLow_recvmsg@msgtype 00BF                __size_of_in_high_int 0012  
                   parser_lthread@i 00C0                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1EC8  
        __end_of_ToMainHigh_recvmsg 202E          __end_of_ToMainHigh_sendmsg 2198  
       __end_of_init_timer1_lthread 22F8                 __end_of_SleepIfOkay 1F20  
                        _WriteUSART 22C0                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 000C                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                   __end_of_ReadUSART 22AA  
         timer0_int_handler@msgtype 0093                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 1C06         __end_of_InterruptHandlerLow 00B6  
                         ?i2_memcpy 0032                       _ToMainHigh_MQ 0266  
               __size_ofi2_recv_msg 0126                    _enter_sleep_mode 2354  
               __size_ofi2_send_msg 00F6                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1B08                       check_msg@qptr 00A7  
           ??_block_on_To_msgqueues 00AD                __size_of_init_queues 006E  
                        __pbssBANK0 00C8                          __pbssBANK1 0184  
                        __pbssBANK2 0200                          __pbssBANK3 0300  
                        __pnvCOMRAM 004B             __end_of_i2c_int_handler 228C  
                      ?i2_check_msg 0032             __end_of_i2c_master_recv 212C  
           __end_of_i2c_master_send 1776            ??_i2c_master_int_handler 003E  
                __size_of_parseUART 00E6                   recv_msg@maxlength 00B3  
                   recv_msg@msgtype 00B4                     recv_msg@tlength 00BB  
             __size_of_handle_start 00C8                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0034                             ?_memcpy 00A7  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0034  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 0642  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 06FC  
      __end_of_i2c_configure_master 1E82                          ??i1_memcpy 0007  
                        ??i2_memcpy 0038                       i2_in_high_int 2340  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 2162                           ?_init_i2c 00A7  
                       _SleepIfOkay 1ED2                           ?_recv_msg 00B1  
                        _in_low_int 1F20                        _handle_start 1844  
                           __Hparam 0000                           ?_send_msg 000B  
                           __Lparam 0000          __end_of_timer0_int_handler 1B8C  
                       ?_WriteUSART 0001                    init_uart_recv@uc 00A7  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 0094  
                           __pcinit 1E82                     __size_of_memcpy 005E  
                        _init_queue 1C8C                             __ramtop 0400  
                  ??_parser_lthread 00B4                             __ptext0 0BF2  
                           __ptext1 190C                             __ptext2 22C0  
                           __ptext3 22D4                             __ptext4 0E80  
                           __ptext5 1698                             __ptext6 20F0  
                           __ptext7 1E2E                             __ptext8 21F6  
                           __ptext9 22E6                             _in_main 1F66  
               __end_of_WriteTimer0 2340                 __end_of_WriteTimer1 231C  
                 __end_of_parseUART 1698                      ?i2_in_high_int 0032  
                    __pintcode_body 1B8C        __end_of_FromMainHigh_recvmsg 2070  
              end_of_initialization 1EC8      __size_of_uart_recv_int_handler 005C  
                           memcpy@d 00AD                             memcpy@n 00AB  
                           memcpy@s 00AF       __end_of_uart_recv_int_handler 1E2E  
                        ??_init_i2c 00A9                       __Lmediumconst 0000  
                           int_func 1B8C                       ?_uart_lthread 00A8  
           __size_of_init_uart_recv 002A                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 003C                    ?_i2c_master_recv 0001  
                  ?_i2c_master_send 00A7                          ??_recv_msg 00B8  
                      ??i2_send_msg 003C                          ??_send_msg 0011  
   __size_of_i2c_master_int_handler 04F6          __end_of_timer1_int_handler 21C8  
                         _RCSTAbits 000FAB                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 008B               parser_lthread@Command 00BF  
                  _lastMotorCommand 004E                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 14BC                  __end_ofi2_send_msg 15B2  
               __size_of_WriteUSART 0014       FromMainHigh_recvmsg@maxlength 003E  
          timer1_int_handler@result 001C                      ??_uart_lthread 00B0  
                         _TXSTAbits 000FAC                          main@length 0135  
             parser_lthread@msgtype 00AE                         ?_in_low_int 00A9  
             timer0_lthread@msgtype 00A9                _i2c_configure_master 1E2E  
             _start_i2c_slave_reply 10AC                __size_ofi2_check_msg 0024  
          __end_of_enter_sleep_mode 235A                        ??_ReadTimer1 0003  
                _ToMainHigh_recvmsg 1FEC                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 2162                           i1memcpy@n 0005  
                         i1memcpy@s 0009                       __pidataCOMRAM 235A  
                    _timer0_lthread 22D4                         ?_init_queue 00A7  
                         i2memcpy@d 0038                         _WriteTimer0 232E  
                       _WriteTimer1 230A                           i2memcpy@n 0036  
                         i2memcpy@s 003A                      __end_of_memcpy 1DD2  
                 _enable_interrupts 234C                __size_of_Delay1KTCYx 0016  
               ?_ToMainHigh_recvmsg 00BF                     ??i2_in_high_int 0034  
               ?_ToMainHigh_sendmsg 008B                  ?_enable_interrupts 0001  
               start_initialization 1E82              _i2c_master_int_handler 06FC  
                     ??_in_high_int 00A9                           _ReadUSART 228C  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 0040  
               ??_enable_interrupts 00A7      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 232E       __end_of_block_on_To_msgqueues 1C8C  
                         _OpenUSART 1A76        __end_of_InterruptHandlerHigh 1C0E  
                        init_i2c@ic 00A7                ??_ToMainHigh_recvmsg 00C3  
              ??_ToMainHigh_sendmsg 003D               ?_i2c_configure_master 0001  
            __end_of_timer0_lthread 22E6           __end_of_enable_interrupts 2354  
                          ??_memcpy 00AD                _FromMainHigh_recvmsg 202E  
      __size_of_init_timer1_lthread 0012                         __pbssCOMRAM 003F  
                        ?_ReadUSART 0001                       ??_init_queues 00AB  
                     __pcstackBANK0 0080                       __pcstackBANK1 0100  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 0032  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 00A7  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 009E  
    i2c_slave_int_handler@data_read 0098                 __end_of_in_high_int 230A  
                        ?_OpenUSART 00A7                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 00C1                        _ToMainLow_MQ 0184  
               __size_of_init_queue 007A                      _init_uart_recv 21F6  
                         _check_msg 212C                           __pnvBANK0 00C6  
            ?_start_i2c_slave_reply 0032                   __size_of_init_i2c 00CE  
                      recv_msg@data 00B6                        ??_WriteUSART 00A7  
                      recv_msg@qmsg 00BD                        recv_msg@slot 00BA  
                      recv_msg@qptr 00B1                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 00AA  
                   ?_timer0_lthread 00A7               ?_FromMainHigh_recvmsg 008C  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 00C1  
              __end_of_uart_lthread 19CC                            ?_in_main 00AB  
                 WriteTimer0@timer0 0032                  _timer0_int_handler 1B08  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00BA  
               uart_lthread@msgtype 00AA      i2c_slave_int_handler@error_buf 0090  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 22D4                           _parseUART 15B2  
                  uart_lthread@uptr 00A8      i2c_slave_int_handler@msg_ready 0097  
            __end_of_init_uart_recv 2220                 __end_of_init_queues 1D74  
             i2c_master_recv@length 00A7                            _LATCbits 000F8B  
            ??_i2c_configure_master 00A7                     i2check_msg@qptr 0032  
                        ?_check_msg 00A7                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                       ?i2_in_low_int 0034  
                          _PIR1bits 000F9E              ToMainHigh_sendmsg@data 008C  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
              ??_timer0_int_handler 0090               i2c_master_send@length 00AB  
        __size_of_enable_interrupts 0008                parser_lthread@length 00B0  
              timer0_lthread@length 00AB                  _timer1_int_handler 2198  
                          i1_memcpy 2070                _InterruptHandlerHigh 0008  
              parser_lthread@msgbuf 00B2                         ??_ReadUSART 0001  
                          i2_memcpy 20B0                timer0_lthread@msgval 00AF  
          FromMainHigh_recvmsg@data 008E                         _in_high_int 22F8  
                      send_msg@data 000F                        send_msg@qmsg 0015  
                      send_msg@slot 0014                        send_msg@qptr 000B  
             uart_lthread@msgbuffer 00AE                 ?_timer1_int_handler 0001  
                        ?_parseUART 0001                     ?_init_uart_recv 00A7  
                          _i2c_mode 00C8                         ??_OpenUSART 00A9  
                   OpenUSART@config 00AC                      ??i2_in_low_int 0036  
             _uart_recv_int_handler 1DD2                        ??_in_low_int 00AB  
                          __Hrparam 0000                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_recvmsg 003E  
              ??_timer1_int_handler 001B            __size_of_i2c_int_handler 0022  
                ??_enter_sleep_mode 0032            __size_of_i2c_master_recv 003C  
          __size_of_i2c_master_send 00DE                        ??_init_queue 00A9  
                      ?_WriteTimer0 0032                        ?_WriteTimer1 0001  
           ToMainLow_sendmsg@length 001A             ?_i2c_master_int_handler 0001  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 011A  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0083         ToMainHigh_recvmsg@maxlength 00C3  
                 i2send_msg@tlength 0086             init_timer1_lthread@tptr 00A7  
                       _init_queues 1D06                  __end_of_in_low_int 1F66  
                          __ptext10 1D06                            __ptext11 1C8C  
                          __ptext20 1FAA                            __ptext12 1776  
                          __ptext21 1FEC                            __ptext13 234C  
                          __ptext30 230A                            __ptext22 1260  
                          __ptext14 1C0E                            __ptext31 2220  
                          __ptext23 1D74                            __ptext15 1F66  
                          __ptext40 226A                            __ptext32 19CC  
                          __ptext24 1A76                            __ptext16 1F20  
                          __ptext41 00BA                            __ptext33 2070  
                          __ptext17 22F8                            __ptext50 2340  
                          __ptext42 10AC                            __ptext34 231C  
                          __ptext26 1DD2                            __ptext18 212C  
                          __ptext51 2246                            __ptext43 1844  
                          __ptext27 15B2                            __ptext19 22AA  
                          __ptext52 2354                            __ptext44 06FC  
                          __ptext36 1B08                            __ptext28 228C  
                          __ptext45 2162                            __ptext37 232E  
                          __ptext29 2198                            __ptext46 14BC  
                          __ptext38 202E                            __ptext47 20B0  
                          __ptext39 1396                            __ptext48 1ED2  
                          __ptext49 21C8      i2c_configure_master@slave_addr 00A8  
           __size_of_parser_lthread 022C                  uart_lthread@length 00AC  
          timer0_int_handler@length 0091                            _init_i2c 1776  
               _init_timer1_lthread 22E6                       __size_of_main 028E  
                     ??i2_check_msg 0034                   main@t1thread_data 011C  
                       ??_check_msg 00A9                  __end_of_init_queue 1D06  
              __size_of_SleepIfOkay 004E                            _recv_msg 1260  
  i2c_slave_int_handler@msg_to_send 0096                            _send_msg 19CC  
                    init_queue@qptr 00A7        i2c_master_send@currentLength 00AC  
             __size_of_uart_lthread 00C0                      i2recv_msg@data 0085  
                    i2recv_msg@qmsg 008A                       ??_Delay1KTCYx 00A7  
                    i2recv_msg@slot 0087                      i2recv_msg@qptr 0080  
    __end_of_i2c_master_int_handler 0BF2                 _InterruptHandlerLow 0018  
              ?_init_timer1_lthread 00A7                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                      OpenUSART@spbrg 00A7  
                          memcpy@d1 00A7                      _command_length 0043  
                          memcpy@s1 00A9               __end_ofi2_in_high_int 234C  
                      _motor_length 0047                    i2send_msg@length 0082  
                          intlevel1 0000                            intlevel2 0000  
                       ??_parseUART 001B                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0034              ?_uart_recv_int_handler 0001  
                      _uart_lthread 190C               _block_on_To_msgqueues 1C0E  
                     ?_handle_start 0001                    ??_timer0_lthread 00AF  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3            ToMainHigh_sendmsg@length 003D  
                parser_lthread@data 00B9                 __end_ofi2_check_msg 226A  
             ??_init_timer1_lthread 00A9                       _command_count 0041  
                       _motor_count 0045              ??_InterruptHandlerHigh 0099  
                 _ToMainLow_recvmsg 1FAA                   _ToMainLow_sendmsg 2220  
                main@last_reg_recvd 0117                __end_ofi2_in_low_int 21F6  
                ?_ToMainLow_recvmsg 00BF                 __end_of_Delay1KTCYx 22C0  
                 ??_i2c_int_handler 003F                  ?_ToMainLow_sendmsg 0017  
                 ??_i2c_master_recv 00A7                       uart_lthread@x 00B1  
                 ??_i2c_master_send 00A9                  i2c_master_send@msg 00A7  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 0084               ??_InterruptHandlerLow 0021  
               ??_ToMainLow_recvmsg 00C3                      i2send_msg@qmsg 0089  
                    i2send_msg@slot 0088                      i2send_msg@qptr 0080  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 0095  
                    ??_handle_start 0032                        _USART_Status 004A  
