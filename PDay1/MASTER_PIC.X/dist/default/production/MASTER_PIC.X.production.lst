

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Apr 11 09:26:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataCOMRAM
    75  002308                     __pidataCOMRAM:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _lastMotorCommand
    79  002308  FF                 	db	255
    80  0000                     _INTCONbits	set	4082
    81  0000                     _IPR1bits	set	3999
    82  0000                     _LATB	set	3978
    83  0000                     _LATCbits	set	3979
    84  0000                     _OSCCON	set	4051
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _OSCTUNEbits	set	3995
    87  0000                     _PIE1bits	set	3997
    88  0000                     _PIR1bits	set	3998
    89  0000                     _RCONbits	set	4048
    90  0000                     _RCREG	set	4014
    91  0000                     _RCSTA	set	4011
    92  0000                     _RCSTAbits	set	4011
    93  0000                     _SPBRG	set	4015
    94  0000                     _SPBRGH	set	4016
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPCON1bits	set	4038
    99  0000                     _SSPCON2	set	4037
   100  0000                     _SSPCON2bits	set	4037
   101  0000                     _SSPSTAT	set	4039
   102  0000                     _SSPSTATbits	set	4039
   103  0000                     _TMR0H	set	4055
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR1H	set	4047
   106  0000                     _TMR1L	set	4046
   107  0000                     _TRISB	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _TXREG	set	4013
   110  0000                     _TXSTA	set	4012
   111  0000                     _TXSTAbits	set	4012
   112                           
   113                           	psect	nvCOMRAM
   114  00004B                     __pnvCOMRAM:
   115                           	opt stack 0
   116  00004B                     _uc_ptr:
   117                           	opt stack 0
   118  00004B                     	ds	2
   119  00004D                     _State:
   120                           	opt stack 0
   121  00004D                     	ds	1
   122                           
   123                           	psect	nvBANK0
   124  0000C6                     __pnvBANK0:
   125                           	opt stack 0
   126  0000C6                     _ic_ptr:
   127                           	opt stack 0
   128  0000C6                     	ds	2
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  001E6C                     __pcinit:
   134                           	opt stack 0
   135  001E6C                     start_initialization:
   136                           	opt stack 0
   137  001E6C                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK3 (102 bytes)
   141  001E6C  EE03  F000         	lfsr	0,__pbssBANK3
   142  001E70  0E66               	movlw	102
   143  001E72                     clear_0:
   144  001E72  6AEE               	clrf	postinc0,c
   145  001E74  06E8               	decf	wreg,f,c
   146  001E76  E1FD               	bnz	clear_0
   147                           
   148                           ; Clear objects allocated to BANK2 (204 bytes)
   149  001E78  EE02  F000         	lfsr	0,__pbssBANK2
   150  001E7C  0ECC               	movlw	204
   151  001E7E                     clear_1:
   152  001E7E  6AEE               	clrf	postinc0,c
   153  001E80  06E8               	decf	wreg,f,c
   154  001E82  E1FD               	bnz	clear_1
   155                           
   156                           ; Clear objects allocated to BANK1 (102 bytes)
   157  001E84  EE01  F084         	lfsr	0,__pbssBANK1
   158  001E88  0E66               	movlw	102
   159  001E8A                     clear_2:
   160  001E8A  6AEE               	clrf	postinc0,c
   161  001E8C  06E8               	decf	wreg,f,c
   162  001E8E  E1FD               	bnz	clear_2
   163                           
   164                           ; Clear objects allocated to BANK0 (1 bytes)
   165  001E90  0100               	movlb	0
   166  001E92  6BC8               	clrf	__pbssBANK0& (0+255),b
   167                           
   168                           ; Clear objects allocated to COMRAM (12 bytes)
   169  001E94  EE00  F03F         	lfsr	0,__pbssCOMRAM
   170  001E98  0E0C               	movlw	12
   171  001E9A                     clear_3:
   172  001E9A  6AEE               	clrf	postinc0,c
   173  001E9C  06E8               	decf	wreg,f,c
   174  001E9E  E1FD               	bnz	clear_3
   175                           
   176                           ; Initialize objects allocated to COMRAM (1 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178  001EA0  0E08               	movlw	low __pidataCOMRAM
   179  001EA2  6EF6               	movwf	tblptrl,c
   180  001EA4  0E23               	movlw	high __pidataCOMRAM
   181  001EA6  6EF7               	movwf	tblptrh,c
   182  001EA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183  001EAA  6EF8               	movwf	tblptru,c
   184  001EAC  0009               	tblrd		*+	;fetch initializer
   185  001EAE  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   186  001EB2                     end_of_initialization:
   187                           	opt stack 0
   188  001EB2                     __end_of__initialization:
   189                           	opt stack 0
   190  001EB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  001EB4  6EF8               	movwf	tblptru,c
   192  001EB6  0100               	movlb	0
   193  001EB8  EFF9  F005         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	bssCOMRAM
   202  00003F                     __pbssCOMRAM:
   203                           	opt stack 0
   204  00003F                     _Send:
   205                           	opt stack 0
   206  00003F                     	ds	2
   207  000041                     _command_count:
   208                           	opt stack 0
   209  000041                     	ds	2
   210  000043                     _command_length:
   211                           	opt stack 0
   212  000043                     	ds	2
   213  000045                     _motor_count:
   214                           	opt stack 0
   215  000045                     	ds	2
   216  000047                     _motor_length:
   217                           	opt stack 0
   218  000047                     	ds	2
   219  000049                     _MQ_Main_Willing_to_block:
   220                           	opt stack 0
   221  000049                     	ds	1
   222  00004A                     _USART_Status:
   223                           	opt stack 0
   224  00004A                     	ds	1
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           
   232                           	psect	dataCOMRAM
   233  00004E                     __pdataCOMRAM:
   234                           	opt stack 0
   235  00004E                     _lastMotorCommand:
   236                           	opt stack 0
   237  00004E                     	ds	1
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	bssBANK0
   246  0000C8                     __pbssBANK0:
   247                           	opt stack 0
   248  0000C8                     _i2c_mode:
   249                           	opt stack 0
   250  0000C8                     	ds	1
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	bssBANK1
   259  000184                     __pbssBANK1:
   260                           	opt stack 0
   261  000184                     _ToMainLow_MQ:
   262                           	opt stack 0
   263  000184                     	ds	102
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271                           	psect	bssBANK2
   272  000200                     __pbssBANK2:
   273                           	opt stack 0
   274  000200                     _FromMainLow_MQ:
   275                           	opt stack 0
   276  000200                     	ds	102
   277  000266                     _ToMainHigh_MQ:
   278                           	opt stack 0
   279  000266                     	ds	102
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	bssBANK3
   288  000300                     __pbssBANK3:
   289                           	opt stack 0
   290  000300                     _FromMainHigh_MQ:
   291                           	opt stack 0
   292  000300                     	ds	102
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           
   300                           	psect	cstackBANK1
   301  000100                     __pcstackBANK1:
   302                           	opt stack 0
   303  000100                     main@msgbuffer:
   304                           	opt stack 0
   305                           
   306                           ; 23 bytes @ 0x0
   307  000100                     	ds	23
   308  000117                     main@last_reg_recvd:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x17
   312  000117                     	ds	1
   313  000118                     main@uthread_data:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x18
   317  000118                     	ds	2
   318  00011A                     main@t0thread_data:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x1A
   322  00011A                     	ds	2
   323  00011C                     main@t1thread_data:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x1C
   327  00011C                     	ds	2
   328  00011E                     main@uc:
   329                           	opt stack 0
   330                           
   331                           ; 23 bytes @ 0x1E
   332  00011E                     	ds	23
   333  000135                     main@length:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x35
   337  000135                     	ds	1
   338  000136                     main@msgtype:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x36
   342  000136                     	ds	1
   343  000137                     main@ic:
   344                           	opt stack 0
   345                           
   346                           ; 77 bytes @ 0x37
   347  000137                     	ds	77
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           
   355                           	psect	cstackBANK0
   356  000080                     __pcstackBANK0:
   357                           	opt stack 0
   358  000080                     i2send_msg@qptr:
   359                           	opt stack 0
   360  000080                     i2recv_msg@qptr:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x0
   364  000080                     	ds	2
   365  000082                     i2send_msg@length:
   366                           	opt stack 0
   367  000082                     i2recv_msg@maxlength:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x2
   371  000082                     	ds	1
   372  000083                     i2send_msg@msgtype:
   373                           	opt stack 0
   374  000083                     i2recv_msg@msgtype:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x3
   378  000083                     	ds	1
   379  000084                     i2send_msg@data:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x4
   383  000084                     	ds	1
   384  000085                     i2recv_msg@data:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x5
   388  000085                     	ds	1
   389  000086                     i2send_msg@tlength:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x6
   393  000086                     	ds	1
   394  000087                     i2recv_msg@slot:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x7
   398  000087                     	ds	1
   399  000088                     i2send_msg@slot:
   400                           	opt stack 0
   401  000088                     i2recv_msg@tlength:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x8
   405  000088                     	ds	1
   406  000089                     i2send_msg@qmsg:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x9
   410  000089                     	ds	1
   411  00008A                     i2recv_msg@qmsg:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xA
   415  00008A                     	ds	1
   416  00008B                     ToMainHigh_sendmsg@msgtype:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0xB
   420  00008B                     	ds	1
   421  00008C                     ToMainHigh_sendmsg@data:
   422                           	opt stack 0
   423  00008C                     FromMainHigh_recvmsg@msgtype:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0xC
   427  00008C                     	ds	2
   428  00008E                     ??_i2c_slave_int_handler:
   429  00008E                     FromMainHigh_recvmsg@data:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0xE
   433  00008E                     	ds	2
   434  000090                     ??_timer0_int_handler:
   435  000090                     i2c_slave_int_handler@error_buf:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x10
   439  000090                     	ds	1
   440  000091                     timer0_int_handler@length:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x11
   444  000091                     	ds	2
   445  000093                     i2c_slave_int_handler@data_written:
   446                           	opt stack 0
   447  000093                     timer0_int_handler@msgtype:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x13
   451  000093                     	ds	1
   452  000094                     i2c_slave_int_handler@overrun_error:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x14
   456  000094                     	ds	1
   457  000095                     i2c_slave_int_handler@i2c_data:
   458                           	opt stack 0
   459  000095                     timer0_int_handler@val:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x15
   463  000095                     	ds	1
   464  000096                     i2c_slave_int_handler@msg_to_send:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x16
   468  000096                     	ds	1
   469  000097                     i2c_slave_int_handler@msg_ready:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x17
   473  000097                     	ds	1
   474  000098                     i2c_slave_int_handler@data_read:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x18
   478  000098                     	ds	1
   479  000099                     ??_InterruptHandlerHigh:
   480                           
   481                           ; 0 bytes @ 0x19
   482  000099                     	ds	14
   483  0000A7                     ??_i2c_configure_master:
   484  0000A7                     ?_in_high_int:
   485                           	opt stack 0
   486  0000A7                     WriteUSART@data:
   487                           	opt stack 0
   488  0000A7                     Delay1KTCYx@unit:
   489                           	opt stack 0
   490  0000A7                     init_queue@qptr:
   491                           	opt stack 0
   492  0000A7                     check_msg@qptr:
   493                           	opt stack 0
   494  0000A7                     i2c_master_send@msg:
   495                           	opt stack 0
   496  0000A7                     init_i2c@ic:
   497                           	opt stack 0
   498  0000A7                     init_uart_recv@uc:
   499                           	opt stack 0
   500  0000A7                     timer0_lthread@tptr:
   501                           	opt stack 0
   502  0000A7                     init_timer1_lthread@tptr:
   503                           	opt stack 0
   504  0000A7                     OpenUSART@spbrg:
   505                           	opt stack 0
   506  0000A7                     memcpy@d1:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x27
   510  0000A7                     	ds	1
   511  0000A8                     i2c_configure_master@slave_addr:
   512                           	opt stack 0
   513  0000A8                     uart_lthread@uptr:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x28
   517  0000A8                     	ds	1
   518  0000A9                     ??_init_uart_recv:
   519  0000A9                     ??_OpenUSART:
   520  0000A9                     ??_init_queue:
   521  0000A9                     ??_check_msg:
   522  0000A9                     ??_i2c_master_send:
   523  0000A9                     ?_in_low_int:
   524                           	opt stack 0
   525  0000A9                     timer0_lthread@msgtype:
   526                           	opt stack 0
   527  0000A9                     memcpy@s1:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x29
   531  0000A9                     	ds	1
   532  0000AA                     init_queue@i:
   533                           	opt stack 0
   534  0000AA                     uart_lthread@msgtype:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x2A
   538  0000AA                     	ds	1
   539  0000AB                     ??_init_queues:
   540  0000AB                     ?_in_main:
   541                           	opt stack 0
   542  0000AB                     i2c_master_send@length:
   543                           	opt stack 0
   544  0000AB                     timer0_lthread@length:
   545                           	opt stack 0
   546  0000AB                     memcpy@n:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x2B
   550  0000AB                     	ds	1
   551  0000AC                     OpenUSART@config:
   552                           	opt stack 0
   553  0000AC                     i2c_master_send@currentLength:
   554                           	opt stack 0
   555  0000AC                     uart_lthread@length:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2C
   559  0000AC                     	ds	1
   560  0000AD                     ??_block_on_To_msgqueues:
   561  0000AD                     timer0_lthread@msgbuffer:
   562                           	opt stack 0
   563  0000AD                     memcpy@d:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x2D
   567  0000AD                     	ds	1
   568  0000AE                     parser_lthread@msgtype:
   569                           	opt stack 0
   570  0000AE                     uart_lthread@msgbuffer:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x2E
   574  0000AE                     	ds	1
   575  0000AF                     timer0_lthread@msgval:
   576                           	opt stack 0
   577  0000AF                     memcpy@s:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x2F
   581  0000AF                     	ds	1
   582  0000B0                     ??_uart_lthread:
   583  0000B0                     parser_lthread@length:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x30
   587  0000B0                     	ds	1
   588  0000B1                     recv_msg@qptr:
   589                           	opt stack 0
   590  0000B1                     uart_lthread@x:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x31
   594  0000B1                     	ds	1
   595  0000B2                     parser_lthread@msgbuf:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x32
   599  0000B2                     	ds	1
   600  0000B3                     recv_msg@maxlength:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x33
   604  0000B3                     	ds	1
   605  0000B4                     ??_parser_lthread:
   606  0000B4                     recv_msg@msgtype:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x34
   610  0000B4                     	ds	2
   611  0000B6                     recv_msg@data:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x36
   615  0000B6                     	ds	2
   616  0000B8                     ??_recv_msg:
   617                           
   618                           ; 0 bytes @ 0x38
   619  0000B8                     	ds	1
   620  0000B9                     parser_lthread@data:
   621                           	opt stack 0
   622                           
   623                           ; 5 bytes @ 0x39
   624  0000B9                     	ds	1
   625  0000BA                     recv_msg@slot:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x3A
   629  0000BA                     	ds	1
   630  0000BB                     recv_msg@tlength:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x3B
   634  0000BB                     	ds	2
   635  0000BD                     recv_msg@qmsg:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x3D
   639  0000BD                     	ds	1
   640  0000BE                     parser_lthread@checksum:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x3E
   644  0000BE                     	ds	1
   645  0000BF                     parser_lthread@Command:
   646                           	opt stack 0
   647  0000BF                     ToMainLow_recvmsg@msgtype:
   648                           	opt stack 0
   649  0000BF                     ToMainHigh_recvmsg@msgtype:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x3F
   653  0000BF                     	ds	1
   654  0000C0                     parser_lthread@i:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x40
   658  0000C0                     	ds	1
   659  0000C1                     ToMainLow_recvmsg@data:
   660                           	opt stack 0
   661  0000C1                     ToMainHigh_recvmsg@data:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x41
   665  0000C1                     	ds	1
   666  0000C2                     parser_lthread@movement:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x42
   670  0000C2                     	ds	1
   671  0000C3                     ToMainLow_recvmsg@maxlength:
   672                           	opt stack 0
   673  0000C3                     ToMainHigh_recvmsg@maxlength:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x43
   677  0000C3                     	ds	1
   678  0000C4                     ??_main:
   679                           
   680                           ; 0 bytes @ 0x44
   681  0000C4                     	ds	2
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           
   689                           	psect	cstackCOMRAM
   690  000001                     __pcstackCOMRAM:
   691                           	opt stack 0
   692  000001                     ?_ReadTimer1:
   693                           	opt stack 0
   694  000001                     ReadUSART@data:
   695                           	opt stack 0
   696  000001                     WriteTimer1@timer1:
   697                           	opt stack 0
   698  000001                     i1memcpy@d1:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x0
   702  000001                     	ds	2
   703  000003                     ReadTimer1@timer:
   704                           	opt stack 0
   705  000003                     WriteTimer1@timer:
   706                           	opt stack 0
   707  000003                     i1memcpy@s1:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  000003                     	ds	2
   712  000005                     i1memcpy@n:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x4
   716  000005                     	ds	2
   717  000007                     i1memcpy@d:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x6
   721  000007                     	ds	2
   722  000009                     i1memcpy@s:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x8
   726  000009                     	ds	2
   727  00000B                     send_msg@qptr:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xA
   731  00000B                     	ds	2
   732  00000D                     send_msg@length:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0xC
   736  00000D                     	ds	1
   737  00000E                     send_msg@msgtype:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0xD
   741  00000E                     	ds	1
   742  00000F                     send_msg@data:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0xE
   746  00000F                     	ds	2
   747  000011                     ??_send_msg:
   748                           
   749                           ; 0 bytes @ 0x10
   750  000011                     	ds	1
   751  000012                     send_msg@tlength:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x11
   755  000012                     	ds	2
   756  000014                     send_msg@slot:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x13
   760  000014                     	ds	1
   761  000015                     send_msg@qmsg:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x14
   765  000015                     	ds	2
   766  000017                     ToMainLow_sendmsg@msgtype:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x16
   770  000017                     	ds	1
   771  000018                     ToMainLow_sendmsg@data:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x17
   775  000018                     	ds	2
   776  00001A                     ToMainLow_sendmsg@length:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x19
   780  00001A                     	ds	1
   781  00001B                     ??_timer1_int_handler:
   782  00001B                     ??_parseUART:
   783                           
   784                           ; 0 bytes @ 0x1A
   785  00001B                     	ds	1
   786  00001C                     timer1_int_handler@result:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x1B
   790  00001C                     	ds	4
   791  000020                     ??_uart_recv_int_handler:
   792                           
   793                           ; 0 bytes @ 0x1F
   794  000020                     	ds	1
   795  000021                     ??_InterruptHandlerLow:
   796                           
   797                           ; 0 bytes @ 0x20
   798  000021                     	ds	17
   799  000032                     ?i2_in_high_int:
   800                           	opt stack 0
   801  000032                     handle_start@data_read:
   802                           	opt stack 0
   803  000032                     start_i2c_slave_reply@msg:
   804                           	opt stack 0
   805  000032                     WriteTimer0@timer0:
   806                           	opt stack 0
   807  000032                     i2check_msg@qptr:
   808                           	opt stack 0
   809  000032                     i2memcpy@d1:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x31
   813  000032                     	ds	2
   814  000034                     ??_start_i2c_slave_reply:
   815  000034                     ??i2_check_msg:
   816  000034                     ?i2_in_low_int:
   817                           	opt stack 0
   818  000034                     WriteTimer0@timer:
   819                           	opt stack 0
   820  000034                     i2memcpy@s1:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x33
   824  000034                     	ds	2
   825  000036                     i2memcpy@n:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x35
   829  000036                     	ds	1
   830  000037                     start_i2c_slave_reply@length:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x36
   834  000037                     	ds	1
   835  000038                     i2memcpy@d:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x37
   839  000038                     	ds	2
   840  00003A                     i2memcpy@s:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x39
   844  00003A                     	ds	2
   845  00003C                     ??i2_send_msg:
   846  00003C                     ??i2_recv_msg:
   847                           
   848                           ; 0 bytes @ 0x3B
   849  00003C                     	ds	1
   850  00003D                     ToMainHigh_sendmsg@length:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x3C
   854  00003D                     	ds	1
   855  00003E                     ??_i2c_master_int_handler:
   856  00003E                     FromMainHigh_recvmsg@maxlength:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x3D
   860  00003E                     	ds	1
   861  00003F                     tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           
   868                           ; 0 bytes @ 0x3E
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 187 in file "source/main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  ic             77   55[BANK1 ] struct __i2c_comm
   879 ;;  msgbuffer      23    0[BANK1 ] unsigned char [23]
   880 ;;  uc             23   30[BANK1 ] struct __uart_comm
   881 ;;  t1thread_dat    2   28[BANK1 ] struct __timer1_thread_s
   882 ;;  t0thread_dat    2   26[BANK1 ] struct __timer0_thread_s
   883 ;;  uthread_data    2   24[BANK1 ] struct __uart_thread_str
   884 ;;  msgtype         1   54[BANK1 ] unsigned char 
   885 ;;  length          1   53[BANK1 ] char 
   886 ;;  last_reg_rec    1   23[BANK1 ] unsigned char 
   887 ;;  i               1    0        unsigned char 
   888 ;;  c               1    0        unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;		None               void
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         0       0     132       0       0
   900 ;;      Temps:          0       2       0       0       0
   901 ;;      Totals:         0       2     132       0       0
   902 ;;Total ram usage:      134 bytes
   903 ;; Hardware stack levels required when called:   16
   904 ;; This function calls:
   905 ;;		_OpenUSART
   906 ;;		_ToMainHigh_recvmsg
   907 ;;		_ToMainLow_recvmsg
   908 ;;		_block_on_To_msgqueues
   909 ;;		_enable_interrupts
   910 ;;		_init_i2c
   911 ;;		_init_queues
   912 ;;		_init_timer1_lthread
   913 ;;		_init_uart_recv
   914 ;;		_parser_lthread
   915 ;;		_timer0_lthread
   916 ;;		_uart_lthread
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text0
   923  000BF2                     __ptext0:
   924                           	opt stack 0
   925  000BF2                     _main:
   926                           	opt stack 15
   927                           
   928                           ;main.c: 188: char c;
   929                           ;main.c: 189: signed char length;
   930                           ;main.c: 190: unsigned char msgtype;
   931                           ;main.c: 191: unsigned char last_reg_recvd;
   932                           ;main.c: 192: uart_comm uc;
   933                           ;main.c: 193: i2c_comm ic;
   934                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   935                           ;main.c: 195: unsigned char i;
   936                           ;main.c: 196: uart_thread_struct uthread_data;
   937                           ;main.c: 197: timer1_thread_struct t1thread_data;
   938                           ;main.c: 198: timer0_thread_struct t0thread_data;
   939                           ;main.c: 206: OSCCON = 0x82;
   940                           
   941                           ;incstack = 0
   942  000BF2  0E82               	movlw	130
   943  000BF4  6ED3               	movwf	4051,c	;volatile
   944                           
   945                           ;main.c: 207: OSCTUNEbits.PLLEN = 1;
   946  000BF6  8C9B               	bsf	3995,6,c	;volatile
   947                           
   948                           ;main.c: 225: init_uart_recv(&uc);
   949  000BF8  0101               	movlb	1	; () banked
   950  000BFA  0E01               	movlw	high main@uc
   951  000BFC  0100               	movlb	0	; () banked
   952  000BFE  0100               	movlb	0	; () banked
   953  000C00  6FA8               	movwf	(init_uart_recv@uc+1)& (0+255),b
   954  000C02  0101               	movlb	1	; () banked
   955  000C04  0E1E               	movlw	low main@uc
   956  000C06  0100               	movlb	0	; () banked
   957  000C08  0100               	movlb	0	; () banked
   958  000C0A  6FA7               	movwf	init_uart_recv@uc& (0+255),b
   959  000C0C  ECD2  F010         	call	_init_uart_recv	;wreg free
   960                           
   961                           ;main.c: 228: init_i2c(&ic);
   962  000C10  0101               	movlb	1	; () banked
   963  000C12  0E01               	movlw	high main@ic
   964  000C14  0100               	movlb	0	; () banked
   965  000C16  0100               	movlb	0	; () banked
   966  000C18  6FA8               	movwf	(init_i2c@ic+1)& (0+255),b
   967  000C1A  0101               	movlb	1	; () banked
   968  000C1C  0E37               	movlw	low main@ic
   969  000C1E  0100               	movlb	0	; () banked
   970  000C20  0100               	movlb	0	; () banked
   971  000C22  6FA7               	movwf	init_i2c@ic& (0+255),b
   972  000C24  ECB0  F00B         	call	_init_i2c	;wreg free
   973                           
   974                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   975  000C28  0101               	movlb	1	; () banked
   976  000C2A  0E01               	movlw	high main@t1thread_data
   977  000C2C  0100               	movlb	0	; () banked
   978  000C2E  0100               	movlb	0	; () banked
   979  000C30  6FA8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   980  000C32  0101               	movlb	1	; () banked
   981  000C34  0E1C               	movlw	low main@t1thread_data
   982  000C36  0100               	movlb	0	; () banked
   983  000C38  0100               	movlb	0	; () banked
   984  000C3A  6FA7               	movwf	init_timer1_lthread@tptr& (0+255),b
   985  000C3C  EC4A  F011         	call	_init_timer1_lthread	;wreg free
   986                           
   987                           ;main.c: 234: init_queues();
   988  000C40  EC78  F00E         	call	_init_queues	;wreg free
   989                           
   990                           ;main.c: 238: TRISB = 0x0;
   991  000C44  0E00               	movlw	0
   992  000C46  6E93               	movwf	3987,c	;volatile
   993                           
   994                           ;main.c: 239: LATB = 0x0;
   995  000C48  0E00               	movlw	0
   996  000C4A  6E8A               	movwf	3978,c	;volatile
   997                           
   998                           ;main.c: 268: IPR1bits.TMR1IP = 0;
   999  000C4C  909F               	bcf	3999,0,c	;volatile
  1000                           
  1001                           ;main.c: 270: IPR1bits.RCIP = 0;
  1002  000C4E  9A9F               	bcf	3999,5,c	;volatile
  1003                           
  1004                           ;main.c: 272: IPR1bits.SSPIP = 1;
  1005  000C50  869F               	bsf	3999,3,c	;volatile
  1006                           
  1007                           ;main.c: 296: PIE1bits.SSPIE = 1;
  1008  000C52  869D               	bsf	3997,3,c	;volatile
  1009                           
  1010                           ;main.c: 307: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1011                           ;main.c: 308: 0b11111111 & 0b11101111, 0x26);
  1012  000C54  0E00               	movlw	0
  1013  000C56  0100               	movlb	0	; () banked
  1014  000C58  0100               	movlb	0	; () banked
  1015  000C5A  6FA8               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1016  000C5C  0E26               	movlw	38
  1017  000C5E  0100               	movlb	0	; () banked
  1018  000C60  6FA7               	movwf	OpenUSART@spbrg& (0+255),b
  1019  000C62  0E6C               	movlw	108
  1020  000C64  EC30  F00D         	call	_OpenUSART
  1021                           
  1022                           ;main.c: 314: enable_interrupts();
  1023  000C68  EC7D  F011         	call	_enable_interrupts	;wreg free
  1024  000C6C                     l2452:
  1025                           
  1026                           ;main.c: 341: block_on_To_msgqueues();
  1027  000C6C  ECFC  F00D         	call	_block_on_To_msgqueues	;wreg free
  1028                           
  1029                           ;main.c: 348: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
  1030  000C70  0101               	movlb	1	; () banked
  1031  000C72  0E01               	movlw	high main@msgtype
  1032  000C74  0100               	movlb	0	; () banked
  1033  000C76  0100               	movlb	0	; () banked
  1034  000C78  6FC0               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1035  000C7A  0101               	movlb	1	; () banked
  1036  000C7C  0E36               	movlw	low main@msgtype
  1037  000C7E  0100               	movlb	0	; () banked
  1038  000C80  0100               	movlb	0	; () banked
  1039  000C82  6FBF               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1040  000C84  0101               	movlb	1	; () banked
  1041  000C86  0E01               	movlw	high main@msgbuffer
  1042  000C88  0100               	movlb	0	; () banked
  1043  000C8A  0100               	movlb	0	; () banked
  1044  000C8C  6FC2               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1045  000C8E  0101               	movlb	1	; () banked
  1046  000C90  0E00               	movlw	low main@msgbuffer
  1047  000C92  0100               	movlb	0	; () banked
  1048  000C94  0100               	movlb	0	; () banked
  1049  000C96  6FC1               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1050  000C98  0E16               	movlw	22
  1051  000C9A  ECEB  F00F         	call	_ToMainHigh_recvmsg
  1052  000C9E  0101               	movlb	1	; () banked
  1053  000CA0  0101               	movlb	1	; () banked
  1054  000CA2  6F35               	movwf	main@length& (0+255),b
  1055                           
  1056                           ; BSR set to: 1
  1057                           ;main.c: 349: if (length < 0) {
  1058  000CA4  0101               	movlb	1	; () banked
  1059  000CA6  0101               	movlb	1	; () banked
  1060  000CA8  AF35               	btfss	main@length& (0+255),7,b
  1061  000CAA  D08B               	goto	l2470
  1062                           
  1063                           ; BSR set to: 1
  1064                           ;main.c: 351: if (length != -4) {
  1065  000CAC  0101               	movlb	1	; () banked
  1066  000CAE  0101               	movlb	1	; () banked
  1067  000CB0  5135               	movf	main@length& (0+255),w,b
  1068  000CB2  0AFC               	xorlw	252
  1069  000CB4  B4D8               	btfsc	status,2,c
  1070  000CB6  D094               	goto	l2472
  1071                           
  1072                           ; BSR set to: 1
  1073                           ;main.c: 352: LATB = 0x01;
  1074  000CB8  0E01               	movlw	1
  1075  000CBA  6E8A               	movwf	3978,c	;volatile
  1076  000CBC  D091               	goto	l2472
  1077  000CBE                     l2462:
  1078                           
  1079                           ; BSR set to: 1
  1080                           ;main.c: 359: {
  1081                           ;main.c: 360: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1082  000CBE  0101               	movlb	1	; () banked
  1083  000CC0  0E01               	movlw	high main@t0thread_data
  1084  000CC2  0100               	movlb	0	; () banked
  1085  000CC4  0100               	movlb	0	; () banked
  1086  000CC6  6FA8               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1087  000CC8  0101               	movlb	1	; () banked
  1088  000CCA  0E1A               	movlw	low main@t0thread_data
  1089  000CCC  0100               	movlb	0	; () banked
  1090  000CCE  0100               	movlb	0	; () banked
  1091  000CD0  6FA7               	movwf	timer0_lthread@tptr& (0+255),b
  1092  000CD2  0101               	movlb	1	; () banked
  1093  000CD4  0100               	movlb	0	; () banked
  1094  000CD6  C136  F0A9         	movff	main@msgtype,timer0_lthread@msgtype
  1095  000CDA  0100               	movlb	0	; () banked
  1096  000CDC  0100               	movlb	0	; () banked
  1097  000CDE  6BAA               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1098  000CE0  0101               	movlb	1	; () banked
  1099  000CE2  0101               	movlb	1	; () banked
  1100  000CE4  5135               	movf	main@length& (0+255),w,b
  1101  000CE6  0100               	movlb	0	; () banked
  1102  000CE8  0100               	movlb	0	; () banked
  1103  000CEA  6FAB               	movwf	timer0_lthread@length& (0+255),b
  1104  000CEC  0100               	movlb	0	; () banked
  1105  000CEE  6BAC               	clrf	(timer0_lthread@length+1)& (0+255),b
  1106  000CF0  0100               	movlb	0	; () banked
  1107  000CF2  BFAB               	btfsc	timer0_lthread@length& (0+255),7,b
  1108  000CF4  07AC               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1109  000CF6  0101               	movlb	1	; () banked
  1110  000CF8  0E01               	movlw	high main@msgbuffer
  1111  000CFA  0100               	movlb	0	; () banked
  1112  000CFC  0100               	movlb	0	; () banked
  1113  000CFE  6FAE               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1114  000D00  0101               	movlb	1	; () banked
  1115  000D02  0E00               	movlw	low main@msgbuffer
  1116  000D04  0100               	movlb	0	; () banked
  1117  000D06  0100               	movlb	0	; () banked
  1118  000D08  6FAD               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1119  000D0A  EC41  F011         	call	_timer0_lthread	;wreg free
  1120                           
  1121                           ;main.c: 361: break;
  1122  000D0E  D068               	goto	l2472
  1123  000D10                     l93:
  1124                           
  1125                           ; BSR set to: 1
  1126                           ;main.c: 364: {
  1127                           ;main.c: 367: last_reg_recvd = msgbuffer[0];
  1128  000D10  C100  F117         	movff	main@msgbuffer,main@last_reg_recvd
  1129                           
  1130                           ;main.c: 368: break;
  1131  000D14  D065               	goto	l2472
  1132  000D16                     l2464:
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;main.c: 371: {
  1136                           ;main.c: 372: uart_lthread(&uthread_data,msgtype,length,msgbuffer);
  1137  000D16  0101               	movlb	1	; () banked
  1138  000D18  0E01               	movlw	high main@uthread_data
  1139  000D1A  0100               	movlb	0	; () banked
  1140  000D1C  0100               	movlb	0	; () banked
  1141  000D1E  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1142  000D20  0101               	movlb	1	; () banked
  1143  000D22  0E18               	movlw	low main@uthread_data
  1144  000D24  0100               	movlb	0	; () banked
  1145  000D26  0100               	movlb	0	; () banked
  1146  000D28  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1147  000D2A  0101               	movlb	1	; () banked
  1148  000D2C  0100               	movlb	0	; () banked
  1149  000D2E  C136  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1150  000D32  0100               	movlb	0	; () banked
  1151  000D34  0100               	movlb	0	; () banked
  1152  000D36  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1153  000D38  0101               	movlb	1	; () banked
  1154  000D3A  0101               	movlb	1	; () banked
  1155  000D3C  5135               	movf	main@length& (0+255),w,b
  1156  000D3E  0100               	movlb	0	; () banked
  1157  000D40  0100               	movlb	0	; () banked
  1158  000D42  6FAC               	movwf	uart_lthread@length& (0+255),b
  1159  000D44  0100               	movlb	0	; () banked
  1160  000D46  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1161  000D48  0100               	movlb	0	; () banked
  1162  000D4A  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1163  000D4C  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1164  000D4E  0101               	movlb	1	; () banked
  1165  000D50  0E01               	movlw	high main@msgbuffer
  1166  000D52  0100               	movlb	0	; () banked
  1167  000D54  0100               	movlb	0	; () banked
  1168  000D56  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1169  000D58  0101               	movlb	1	; () banked
  1170  000D5A  0E00               	movlw	low main@msgbuffer
  1171  000D5C  0100               	movlb	0	; () banked
  1172  000D5E  0100               	movlb	0	; () banked
  1173  000D60  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1174  000D62  EC7B  F00C         	call	_uart_lthread	;wreg free
  1175                           
  1176                           ;main.c: 373: break;
  1177  000D66  D03C               	goto	l2472
  1178  000D68                     l2466:
  1179                           
  1180                           ;main.c: 376: {
  1181                           ;main.c: 377: uart_lthread(0,47,length * sizeof(unsigned int),msgbuffer);
  1182  000D68  0E00               	movlw	0
  1183  000D6A  0100               	movlb	0	; () banked
  1184  000D6C  0100               	movlb	0	; () banked
  1185  000D6E  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1186  000D70  0E00               	movlw	0
  1187  000D72  0100               	movlb	0	; () banked
  1188  000D74  0100               	movlb	0	; () banked
  1189  000D76  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1190  000D78  0E00               	movlw	0
  1191  000D7A  0100               	movlb	0	; () banked
  1192  000D7C  0100               	movlb	0	; () banked
  1193  000D7E  6FAB               	movwf	(uart_lthread@msgtype+1)& (0+255),b
  1194  000D80  0E2F               	movlw	47
  1195  000D82  0100               	movlb	0	; () banked
  1196  000D84  6FAA               	movwf	uart_lthread@msgtype& (0+255),b
  1197  000D86  0101               	movlb	1	; () banked
  1198  000D88  C135  F0C4         	movff	main@length,??_main
  1199  000D8C  0100               	movlb	0	; () banked
  1200  000D8E  6BC5               	clrf	(??_main+1)& (0+255),b
  1201  000D90  BFC4               	btfsc	??_main& (0+255),7,b
  1202  000D92  07C5               	decf	(??_main+1)& (0+255),f,b
  1203  000D94  90D8               	bcf	status,0,c
  1204  000D96  0100               	movlb	0	; () banked
  1205  000D98  35C4               	rlcf	??_main& (0+255),w,b
  1206  000D9A  0100               	movlb	0	; () banked
  1207  000D9C  0100               	movlb	0	; () banked
  1208  000D9E  6FAC               	movwf	uart_lthread@length& (0+255),b
  1209  000DA0  0100               	movlb	0	; () banked
  1210  000DA2  35C5               	rlcf	(??_main+1)& (0+255),w,b
  1211  000DA4  0100               	movlb	0	; () banked
  1212  000DA6  6FAD               	movwf	(uart_lthread@length+1)& (0+255),b
  1213  000DA8  0101               	movlb	1	; () banked
  1214  000DAA  0E01               	movlw	high main@msgbuffer
  1215  000DAC  0100               	movlb	0	; () banked
  1216  000DAE  0100               	movlb	0	; () banked
  1217  000DB0  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1218  000DB2  0101               	movlb	1	; () banked
  1219  000DB4  0E00               	movlw	low main@msgbuffer
  1220  000DB6  0100               	movlb	0	; () banked
  1221  000DB8  0100               	movlb	0	; () banked
  1222  000DBA  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1223  000DBC  EC7B  F00C         	call	_uart_lthread	;wreg free
  1224                           
  1225                           ;main.c: 378: break;
  1226  000DC0  D00F               	goto	l2472
  1227  000DC2                     l2470:
  1228  000DC2  0101               	movlb	1	; () banked
  1229  000DC4  0101               	movlb	1	; () banked
  1230  000DC6  5136               	movf	main@msgtype& (0+255),w,b
  1231                           
  1232                           ; Switch size 1, requested type "space"
  1233                           ; Number of cases is 4, Range of values is 10 to 47
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte           13     7 (average)
  1237                           ;	Chosen strategy is simple_byte
  1238  000DC8  0A0A               	xorlw	10	; case 10
  1239  000DCA  B4D8               	btfsc	status,2,c
  1240  000DCC  D778               	goto	l2462
  1241  000DCE  0A23               	xorlw	35	; case 41
  1242  000DD0  B4D8               	btfsc	status,2,c
  1243  000DD2  D79E               	goto	l93
  1244  000DD4  0A04               	xorlw	4	; case 45
  1245  000DD6  B4D8               	btfsc	status,2,c
  1246  000DD8  D7C7               	goto	l2466
  1247  000DDA  0A02               	xorlw	2	; case 47
  1248  000DDC  B4D8               	btfsc	status,2,c
  1249  000DDE  D79B               	goto	l2464
  1250  000DE0                     l2472:
  1251                           
  1252                           ;main.c: 386: }
  1253                           ;main.c: 389: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
  1254  000DE0  0101               	movlb	1	; () banked
  1255  000DE2  0E01               	movlw	high main@msgtype
  1256  000DE4  0100               	movlb	0	; () banked
  1257  000DE6  0100               	movlb	0	; () banked
  1258  000DE8  6FC0               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1259  000DEA  0101               	movlb	1	; () banked
  1260  000DEC  0E36               	movlw	low main@msgtype
  1261  000DEE  0100               	movlb	0	; () banked
  1262  000DF0  0100               	movlb	0	; () banked
  1263  000DF2  6FBF               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1264  000DF4  0101               	movlb	1	; () banked
  1265  000DF6  0E01               	movlw	high main@msgbuffer
  1266  000DF8  0100               	movlb	0	; () banked
  1267  000DFA  0100               	movlb	0	; () banked
  1268  000DFC  6FC2               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1269  000DFE  0101               	movlb	1	; () banked
  1270  000E00  0E00               	movlw	low main@msgbuffer
  1271  000E02  0100               	movlb	0	; () banked
  1272  000E04  0100               	movlb	0	; () banked
  1273  000E06  6FC1               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1274  000E08  0E16               	movlw	22
  1275  000E0A  ECCA  F00F         	call	_ToMainLow_recvmsg
  1276  000E0E  0101               	movlb	1	; () banked
  1277  000E10  0101               	movlb	1	; () banked
  1278  000E12  6F35               	movwf	main@length& (0+255),b
  1279                           
  1280                           ; BSR set to: 1
  1281                           ;main.c: 390: if (length < 0) {
  1282  000E14  0101               	movlb	1	; () banked
  1283  000E16  0101               	movlb	1	; () banked
  1284  000E18  AF35               	btfss	main@length& (0+255),7,b
  1285  000E1A  D028               	goto	l2484
  1286                           
  1287                           ; BSR set to: 1
  1288                           ;main.c: 392: if (length != -4) {
  1289  000E1C  0101               	movlb	1	; () banked
  1290  000E1E  0101               	movlb	1	; () banked
  1291  000E20  5135               	movf	main@length& (0+255),w,b
  1292  000E22  0AFC               	xorlw	252
  1293  000E24  B4D8               	btfsc	status,2,c
  1294  000E26  D722               	goto	l2452
  1295                           
  1296                           ; BSR set to: 1
  1297                           ;main.c: 393: LATB = 0x02;
  1298  000E28  0E02               	movlw	2
  1299  000E2A  6E8A               	movwf	3978,c	;volatile
  1300  000E2C  D71F               	goto	l2452
  1301  000E2E                     l2480:
  1302                           
  1303                           ; BSR set to: 1
  1304                           ;main.c: 400: {
  1305                           ;main.c: 401: parser_lthread(msgtype,length,msgbuffer);
  1306  000E2E  0101               	movlb	1	; () banked
  1307  000E30  0100               	movlb	0	; () banked
  1308  000E32  C136  F0AE         	movff	main@msgtype,parser_lthread@msgtype
  1309  000E36  0100               	movlb	0	; () banked
  1310  000E38  0100               	movlb	0	; () banked
  1311  000E3A  6BAF               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1312  000E3C  0101               	movlb	1	; () banked
  1313  000E3E  0101               	movlb	1	; () banked
  1314  000E40  5135               	movf	main@length& (0+255),w,b
  1315  000E42  0100               	movlb	0	; () banked
  1316  000E44  0100               	movlb	0	; () banked
  1317  000E46  6FB0               	movwf	parser_lthread@length& (0+255),b
  1318  000E48  0100               	movlb	0	; () banked
  1319  000E4A  6BB1               	clrf	(parser_lthread@length+1)& (0+255),b
  1320  000E4C  0100               	movlb	0	; () banked
  1321  000E4E  BFB0               	btfsc	parser_lthread@length& (0+255),7,b
  1322  000E50  07B1               	decf	(parser_lthread@length+1)& (0+255),f,b
  1323  000E52  0101               	movlb	1	; () banked
  1324  000E54  0E01               	movlw	high main@msgbuffer
  1325  000E56  0100               	movlb	0	; () banked
  1326  000E58  0100               	movlb	0	; () banked
  1327  000E5A  6FB3               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1328  000E5C  0101               	movlb	1	; () banked
  1329  000E5E  0E00               	movlw	low main@msgbuffer
  1330  000E60  0100               	movlb	0	; () banked
  1331  000E62  0100               	movlb	0	; () banked
  1332  000E64  6FB2               	movwf	parser_lthread@msgbuf& (0+255),b
  1333  000E66  EC40  F007         	call	_parser_lthread	;wreg free
  1334                           
  1335                           ;main.c: 402: break;
  1336  000E6A  D700               	goto	l2452
  1337  000E6C                     l2484:
  1338  000E6C  0101               	movlb	1	; () banked
  1339  000E6E  0101               	movlb	1	; () banked
  1340  000E70  5136               	movf	main@msgtype& (0+255),w,b
  1341                           
  1342                           ; Switch size 1, requested type "space"
  1343                           ; Number of cases is 2, Range of values is 30 to 50
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte            7     4 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  000E72  0A1E               	xorlw	30	; case 30
  1349  000E74  B4D8               	btfsc	status,2,c
  1350  000E76  D6FA               	goto	l2452
  1351  000E78  0A2C               	xorlw	44	; case 50
  1352  000E7A  B4D8               	btfsc	status,2,c
  1353  000E7C  D7D8               	goto	l2480
  1354  000E7E  D6F6               	goto	l2452
  1355  000E80                     __end_of_main:
  1356                           	opt stack 0
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           postinc0	equ	0xFEE
  1362                           wreg	equ	0xFE8
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _uart_lthread *****************
  1366 ;; Defined at:
  1367 ;;		line 9 in file "source/uart_thread.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1370 ;;		 -> NULL(0), main@uthread_data(2), 
  1371 ;;  msgtype         2   42[BANK0 ] int 
  1372 ;;  length          2   44[BANK0 ] int 
  1373 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1374 ;;		 -> main@msgbuffer(23), 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  x               2   49[BANK0 ] int 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2   40[BANK0 ] int 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1386 ;;      Params:         0       8       0       0       0
  1387 ;;      Locals:         0       2       0       0       0
  1388 ;;      Temps:          0       1       0       0       0
  1389 ;;      Totals:         0      11       0       0       0
  1390 ;;Total ram usage:       11 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:   13
  1393 ;; This function calls:
  1394 ;;		_WriteUSART
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text1
  1401  0018F6                     __ptext1:
  1402                           	opt stack 0
  1403  0018F6                     _uart_lthread:
  1404                           	opt stack 17
  1405                           
  1406                           ;uart_thread.c: 10: if (msgtype == 30) {
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;incstack = 0
  1410  0018F6  0100               	movlb	0	; () banked
  1411  0018F8  0100               	movlb	0	; () banked
  1412  0018FA  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1413  0018FC  0A1E               	xorlw	30
  1414  0018FE  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1415  001900  B4D8               	btfsc	status,2,c
  1416  001902  0012               	return	
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1420                           
  1421                           ; BSR set to: 0
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;uart_thread.c: 11: }
  1425  001904  0100               	movlb	0	; () banked
  1426  001906  0100               	movlb	0	; () banked
  1427  001908  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1428  00190A  0A1F               	xorlw	31
  1429  00190C  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1430  00190E  A4D8               	btfss	status,2,c
  1431  001910  D011               	goto	l2608
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1435  001912  0100               	movlb	0	; () banked
  1436  001914  0100               	movlb	0	; () banked
  1437  001916  51AC               	movf	uart_lthread@length& (0+255),w,b
  1438  001918  0100               	movlb	0	; () banked
  1439  00191A  0100               	movlb	0	; () banked
  1440  00191C  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1441  00191E  6ED9               	movwf	fsr2l,c
  1442  001920  0100               	movlb	0	; () banked
  1443  001922  0100               	movlb	0	; () banked
  1444  001924  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1445  001926  0100               	movlb	0	; () banked
  1446  001928  0100               	movlb	0	; () banked
  1447  00192A  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1448  00192C  6EDA               	movwf	fsr2h,c
  1449  00192E  0E00               	movlw	0
  1450  001930  6EDF               	movwf	indf2,c
  1451                           
  1452                           ;uart_thread.c: 18: }
  1453  001932  0012               	return	
  1454  001934                     l2608:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;uart_thread.c: 19: else if(msgtype == 47)
  1458  001934  0100               	movlb	0	; () banked
  1459  001936  0100               	movlb	0	; () banked
  1460  001938  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1461  00193A  0A2F               	xorlw	47
  1462  00193C  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1463  00193E  A4D8               	btfss	status,2,c
  1464  001940  0012               	return	
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;uart_thread.c: 20: {
  1468                           ;uart_thread.c: 22: int x = 0;
  1469  001942  0E00               	movlw	0
  1470  001944  0100               	movlb	0	; () banked
  1471  001946  0100               	movlb	0	; () banked
  1472  001948  6FB2               	movwf	(uart_lthread@x+1)& (0+255),b
  1473  00194A  0E00               	movlw	0
  1474  00194C  0100               	movlb	0	; () banked
  1475  00194E  6FB1               	movwf	uart_lthread@x& (0+255),b
  1476                           
  1477                           ;uart_thread.c: 24: for(x = 0; x < length; x++ )
  1478  001950  0E00               	movlw	0
  1479  001952  0100               	movlb	0	; () banked
  1480  001954  0100               	movlb	0	; () banked
  1481  001956  6FB2               	movwf	(uart_lthread@x+1)& (0+255),b
  1482  001958  0E00               	movlw	0
  1483  00195A  0100               	movlb	0	; () banked
  1484  00195C  6FB1               	movwf	uart_lthread@x& (0+255),b
  1485  00195E  D017               	goto	l2616
  1486  001960                     l472:
  1487  001960  A2AC               	btfss	4012,1,c	;volatile
  1488  001962  D7FE               	goto	l472
  1489                           
  1490                           ;uart_thread.c: 27: WriteUSART(msgbuffer[x]);
  1491  001964  0100               	movlb	0	; () banked
  1492  001966  0100               	movlb	0	; () banked
  1493  001968  51B1               	movf	uart_lthread@x& (0+255),w,b
  1494  00196A  0100               	movlb	0	; () banked
  1495  00196C  0100               	movlb	0	; () banked
  1496  00196E  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1497  001970  6ED9               	movwf	fsr2l,c
  1498  001972  0100               	movlb	0	; () banked
  1499  001974  0100               	movlb	0	; () banked
  1500  001976  51B2               	movf	(uart_lthread@x+1)& (0+255),w,b
  1501  001978  0100               	movlb	0	; () banked
  1502  00197A  0100               	movlb	0	; () banked
  1503  00197C  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1504  00197E  6EDA               	movwf	fsr2h,c
  1505  001980  50DF               	movf	indf2,w,c
  1506  001982  EC37  F011         	call	_WriteUSART
  1507  001986  0100               	movlb	0	; () banked
  1508  001988  0100               	movlb	0	; () banked
  1509  00198A  4BB1               	infsnz	uart_lthread@x& (0+255),f,b
  1510  00198C  2BB2               	incf	(uart_lthread@x+1)& (0+255),f,b
  1511  00198E                     l2616:
  1512                           
  1513                           ; BSR set to: 0
  1514  00198E  0100               	movlb	0	; () banked
  1515  001990  0100               	movlb	0	; () banked
  1516  001992  51B2               	movf	(uart_lthread@x+1)& (0+255),w,b
  1517  001994  0A80               	xorlw	128
  1518  001996  0100               	movlb	0	; () banked
  1519  001998  6FB0               	movwf	??_uart_lthread& (0+255),b
  1520  00199A  0100               	movlb	0	; () banked
  1521  00199C  51AC               	movf	uart_lthread@length& (0+255),w,b
  1522  00199E  0100               	movlb	0	; () banked
  1523  0019A0  0100               	movlb	0	; () banked
  1524  0019A2  5DB1               	subwf	uart_lthread@x& (0+255),w,b
  1525  0019A4  0100               	movlb	0	; () banked
  1526  0019A6  0100               	movlb	0	; () banked
  1527  0019A8  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1528  0019AA  0A80               	xorlw	128
  1529  0019AC  0100               	movlb	0	; () banked
  1530  0019AE  59B0               	subwfb	??_uart_lthread& (0+255),w,b
  1531  0019B0  B0D8               	btfsc	status,0,c
  1532                           
  1533                           ; BSR set to: 0
  1534                           
  1535                           ; BSR set to: 0
  1536                           
  1537                           ; BSR set to: 0
  1538                           
  1539                           ; BSR set to: 0
  1540                           
  1541                           ; BSR set to: 0
  1542  0019B2  0012               	return	
  1543  0019B4  D7D5               	goto	l472
  1544  0019B6                     __end_of_uart_lthread:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           indf2	equ	0xFDF
  1553                           fsr2h	equ	0xFDA
  1554                           fsr2l	equ	0xFD9
  1555                           status	equ	0xFD8
  1556                           
  1557 ;; *************** function _WriteUSART *****************
  1558 ;; Defined at:
  1559 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  data            1    wreg     unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  data            1   39[BANK0 ] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;		None               void
  1566 ;; Registers used:
  1567 ;;		wreg
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       1       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         0       1       0       0       0
  1577 ;;Total ram usage:        1 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:   12
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_uart_lthread
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text2
  1588  00226E                     __ptext2:
  1589                           	opt stack 0
  1590  00226E                     _WriteUSART:
  1591                           	opt stack 17
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;incstack = 0
  1595                           ;WriteUSART@data stored from wreg
  1596  00226E  CFE8 F0A7          	movff	wreg,WriteUSART@data
  1597  002272  ACAC               	btfss	4012,6,c	;volatile
  1598  002274  D003               	goto	l3174
  1599  002276  90AC               	bcf	4012,0,c	;volatile
  1600  002278  B24A               	btfsc	_USART_Status,1,c
  1601  00227A  80AC               	bsf	4012,0,c	;volatile
  1602  00227C                     l3174:
  1603  00227C  C0A7  FFAD         	movff	WriteUSART@data,4013	;volatile
  1604  002280  0012               	return	
  1605  002282                     __end_of_WriteUSART:
  1606                           	opt stack 0
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           indf2	equ	0xFDF
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _timer0_lthread *****************
  1619 ;; Defined at:
  1620 ;;		line 9 in file "source/timer0_thread.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  tptr            2   39[BANK0 ] PTR struct __timer0_thre
  1623 ;;		 -> main@t0thread_data(2), 
  1624 ;;  msgtype         2   41[BANK0 ] int 
  1625 ;;  length          2   43[BANK0 ] int 
  1626 ;;  msgbuffer       2   45[BANK0 ] PTR unsigned char 
  1627 ;;		 -> main@msgbuffer(23), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  msgval          2   47[BANK0 ] PTR unsigned int 
  1630 ;;		 -> main@msgbuffer(23), 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   39[BANK0 ] int 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1640 ;;      Params:         0       8       0       0       0
  1641 ;;      Locals:         0       2       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         0      10       0       0       0
  1644 ;;Total ram usage:       10 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:   12
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text3
  1655  002282                     __ptext3:
  1656                           	opt stack 0
  1657  002282                     _timer0_lthread:
  1658                           	opt stack 18
  1659                           
  1660                           ;timer0_thread.c: 10: unsigned int *msgval;
  1661                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1662                           
  1663                           ;incstack = 0
  1664  002282  0100               	movlb	0	; () banked
  1665  002284  0100               	movlb	0	; () banked
  1666  002286  C0AE  F0B0         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1667  00228A  0100               	movlb	0	; () banked
  1668  00228C  0100               	movlb	0	; () banked
  1669  00228E  C0AD  F0AF         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1670                           
  1671                           ; BSR set to: 0
  1672  002292  0012               	return	
  1673  002294                     __end_of_timer0_lthread:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           indf2	equ	0xFDF
  1682                           fsr2h	equ	0xFDA
  1683                           fsr2l	equ	0xFD9
  1684                           status	equ	0xFD8
  1685                           
  1686 ;; *************** function _parser_lthread *****************
  1687 ;; Defined at:
  1688 ;;		line 6 in file "source/Parser_thread.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  msgtype         2   46[BANK0 ] int 
  1691 ;;  length          2   48[BANK0 ] int 
  1692 ;;  msgbuf          2   50[BANK0 ] PTR unsigned char 
  1693 ;;		 -> main@msgbuffer(23), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  movement        1   66[BANK0 ] unsigned char 
  1696 ;;  data            5   57[BANK0 ] unsigned char [5]
  1697 ;;  Command         1   63[BANK0 ] unsigned char 
  1698 ;;  i               2   64[BANK0 ] int 
  1699 ;;  checksum        1   62[BANK0 ] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2   46[BANK0 ] int 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1709 ;;      Params:         0       6       0       0       0
  1710 ;;      Locals:         0      10       0       0       0
  1711 ;;      Temps:          0       5       0       0       0
  1712 ;;      Totals:         0      21       0       0       0
  1713 ;;Total ram usage:       21 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:   13
  1716 ;; This function calls:
  1717 ;;		_i2c_configure_master
  1718 ;;		_i2c_master_send
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text4
  1725  000E80                     __ptext4:
  1726                           	opt stack 0
  1727  000E80                     _parser_lthread:
  1728                           	opt stack 17
  1729                           
  1730                           ;Parser_thread.c: 8: if(msgtype == 50)
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;incstack = 0
  1734  000E80  0100               	movlb	0	; () banked
  1735  000E82  0100               	movlb	0	; () banked
  1736  000E84  51AE               	movf	parser_lthread@msgtype& (0+255),w,b
  1737  000E86  0A32               	xorlw	50
  1738  000E88  11AF               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  1739  000E8A  A4D8               	btfss	status,2,c
  1740  000E8C  0012               	return	
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;Parser_thread.c: 11: int i = 0;
  1744  000E8E  0E00               	movlw	0
  1745  000E90  0100               	movlb	0	; () banked
  1746  000E92  0100               	movlb	0	; () banked
  1747  000E94  6FC1               	movwf	(parser_lthread@i+1)& (0+255),b
  1748  000E96  0E00               	movlw	0
  1749  000E98  0100               	movlb	0	; () banked
  1750  000E9A  6FC0               	movwf	parser_lthread@i& (0+255),b
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;Parser_thread.c: 12: char checksum = 0x0;
  1754  000E9C  0100               	movlb	0	; () banked
  1755  000E9E  6FB4               	movwf	??_parser_lthread& (0+255),b
  1756  000EA0  0E00               	movlw	0
  1757  000EA2  0100               	movlb	0	; () banked
  1758  000EA4  0100               	movlb	0	; () banked
  1759  000EA6  6FBE               	movwf	parser_lthread@checksum& (0+255),b
  1760  000EA8  0100               	movlb	0	; () banked
  1761  000EAA  51B4               	movf	??_parser_lthread& (0+255),w,b
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;Parser_thread.c: 14: for(i = 0; i < length-1; i++)
  1765  000EAC  0E00               	movlw	0
  1766  000EAE  0100               	movlb	0	; () banked
  1767  000EB0  0100               	movlb	0	; () banked
  1768  000EB2  6FC1               	movwf	(parser_lthread@i+1)& (0+255),b
  1769  000EB4  0E00               	movlw	0
  1770  000EB6  0100               	movlb	0	; () banked
  1771  000EB8  6FC0               	movwf	parser_lthread@i& (0+255),b
  1772  000EBA  D016               	goto	l2634
  1773  000EBC                     l2630:
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;Parser_thread.c: 15: {
  1777                           ;Parser_thread.c: 16: checksum += msgbuf[i];
  1778  000EBC  0100               	movlb	0	; () banked
  1779  000EBE  0100               	movlb	0	; () banked
  1780  000EC0  51C0               	movf	parser_lthread@i& (0+255),w,b
  1781  000EC2  0100               	movlb	0	; () banked
  1782  000EC4  0100               	movlb	0	; () banked
  1783  000EC6  25B2               	addwf	parser_lthread@msgbuf& (0+255),w,b
  1784  000EC8  6ED9               	movwf	fsr2l,c
  1785  000ECA  0100               	movlb	0	; () banked
  1786  000ECC  0100               	movlb	0	; () banked
  1787  000ECE  51C1               	movf	(parser_lthread@i+1)& (0+255),w,b
  1788  000ED0  0100               	movlb	0	; () banked
  1789  000ED2  0100               	movlb	0	; () banked
  1790  000ED4  21B3               	addwfc	(parser_lthread@msgbuf+1)& (0+255),w,b
  1791  000ED6  6EDA               	movwf	fsr2h,c
  1792  000ED8  50DF               	movf	indf2,w,c
  1793  000EDA  0100               	movlb	0	; () banked
  1794  000EDC  0100               	movlb	0	; () banked
  1795  000EDE  27BE               	addwf	parser_lthread@checksum& (0+255),f,b
  1796                           
  1797                           ; BSR set to: 0
  1798  000EE0  0100               	movlb	0	; () banked
  1799  000EE2  0100               	movlb	0	; () banked
  1800  000EE4  4BC0               	infsnz	parser_lthread@i& (0+255),f,b
  1801  000EE6  2BC1               	incf	(parser_lthread@i+1)& (0+255),f,b
  1802  000EE8                     l2634:
  1803                           
  1804                           ; BSR set to: 0
  1805  000EE8  0EFF               	movlw	255
  1806  000EEA  0100               	movlb	0	; () banked
  1807  000EEC  6FB4               	movwf	??_parser_lthread& (0+255),b
  1808  000EEE  0EFF               	movlw	255
  1809  000EF0  6FB5               	movwf	(??_parser_lthread+1)& (0+255),b
  1810  000EF2  0100               	movlb	0	; () banked
  1811  000EF4  C0B0  F0B6         	movff	parser_lthread@length,??_parser_lthread+2
  1812  000EF8  0100               	movlb	0	; () banked
  1813  000EFA  C0B1  F0B7         	movff	parser_lthread@length+1,??_parser_lthread+3
  1814  000EFE  0100               	movlb	0	; () banked
  1815  000F00  51B4               	movf	??_parser_lthread& (0+255),w,b
  1816  000F02  0100               	movlb	0	; () banked
  1817  000F04  27B6               	addwf	(??_parser_lthread+2)& (0+255),f,b
  1818  000F06  0100               	movlb	0	; () banked
  1819  000F08  51B5               	movf	(??_parser_lthread+1)& (0+255),w,b
  1820  000F0A  0100               	movlb	0	; () banked
  1821  000F0C  23B7               	addwfc	(??_parser_lthread+3)& (0+255),f,b
  1822  000F0E  0100               	movlb	0	; () banked
  1823  000F10  0100               	movlb	0	; () banked
  1824  000F12  51C1               	movf	(parser_lthread@i+1)& (0+255),w,b
  1825  000F14  0A80               	xorlw	128
  1826  000F16  0100               	movlb	0	; () banked
  1827  000F18  6FB8               	movwf	(??_parser_lthread+4)& (0+255),b
  1828  000F1A  51B6               	movf	(??_parser_lthread+2)& (0+255),w,b
  1829  000F1C  0100               	movlb	0	; () banked
  1830  000F1E  0100               	movlb	0	; () banked
  1831  000F20  5DC0               	subwf	parser_lthread@i& (0+255),w,b
  1832  000F22  0100               	movlb	0	; () banked
  1833  000F24  51B7               	movf	(??_parser_lthread+3)& (0+255),w,b
  1834  000F26  0A80               	xorlw	128
  1835  000F28  0100               	movlb	0	; () banked
  1836  000F2A  59B8               	subwfb	(??_parser_lthread+4)& (0+255),w,b
  1837  000F2C  A0D8               	btfss	status,0,c
  1838  000F2E  D7C6               	goto	l2630
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;Parser_thread.c: 17: }
  1842                           ;Parser_thread.c: 18: if(checksum == msgbuf[length-1])
  1843                           
  1844                           ; BSR set to: 0
  1845  000F30  0EFF               	movlw	255
  1846  000F32  0100               	movlb	0	; () banked
  1847  000F34  6FB4               	movwf	??_parser_lthread& (0+255),b
  1848  000F36  0EFF               	movlw	255
  1849  000F38  6FB5               	movwf	(??_parser_lthread+1)& (0+255),b
  1850  000F3A  0100               	movlb	0	; () banked
  1851  000F3C  C0B0  F0B6         	movff	parser_lthread@length,??_parser_lthread+2
  1852  000F40  0100               	movlb	0	; () banked
  1853  000F42  C0B1  F0B7         	movff	parser_lthread@length+1,??_parser_lthread+3
  1854  000F46  0100               	movlb	0	; () banked
  1855  000F48  51B4               	movf	??_parser_lthread& (0+255),w,b
  1856  000F4A  0100               	movlb	0	; () banked
  1857  000F4C  27B6               	addwf	(??_parser_lthread+2)& (0+255),f,b
  1858  000F4E  0100               	movlb	0	; () banked
  1859  000F50  51B5               	movf	(??_parser_lthread+1)& (0+255),w,b
  1860  000F52  0100               	movlb	0	; () banked
  1861  000F54  23B7               	addwfc	(??_parser_lthread+3)& (0+255),f,b
  1862  000F56  0100               	movlb	0	; () banked
  1863  000F58  51B6               	movf	(??_parser_lthread+2)& (0+255),w,b
  1864  000F5A  0100               	movlb	0	; () banked
  1865  000F5C  0100               	movlb	0	; () banked
  1866  000F5E  25B2               	addwf	parser_lthread@msgbuf& (0+255),w,b
  1867  000F60  6ED9               	movwf	fsr2l,c
  1868  000F62  0100               	movlb	0	; () banked
  1869  000F64  51B7               	movf	(??_parser_lthread+3)& (0+255),w,b
  1870  000F66  0100               	movlb	0	; () banked
  1871  000F68  0100               	movlb	0	; () banked
  1872  000F6A  21B3               	addwfc	(parser_lthread@msgbuf+1)& (0+255),w,b
  1873  000F6C  6EDA               	movwf	fsr2h,c
  1874  000F6E  0100               	movlb	0	; () banked
  1875  000F70  0100               	movlb	0	; () banked
  1876  000F72  51BE               	movf	parser_lthread@checksum& (0+255),w,b
  1877  000F74  62DF               	cpfseq	indf2,c
  1878  000F76  0012               	return	
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;Parser_thread.c: 19: {
  1882                           ;Parser_thread.c: 21: char data[5];
  1883                           ;Parser_thread.c: 22: char Command = (msgbuf[1] >> 4) & 0xF;
  1884  000F78  0100               	movlb	0	; () banked
  1885  000F7A  EE20 F001          	lfsr	2,1
  1886  000F7E  0100               	movlb	0	; () banked
  1887  000F80  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  1888  000F82  26D9               	addwf	fsr2l,f,c
  1889  000F84  0100               	movlb	0	; () banked
  1890  000F86  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1891  000F88  22DA               	addwfc	fsr2h,f,c
  1892  000F8A  50DF               	movf	indf2,w,c
  1893  000F8C  0100               	movlb	0	; () banked
  1894  000F8E  6FB4               	movwf	??_parser_lthread& (0+255),b
  1895  000F90  0100               	movlb	0	; () banked
  1896  000F92  39B4               	swapf	??_parser_lthread& (0+255),w,b
  1897  000F94  0B0F               	andlw	15
  1898  000F96  0B0F               	andlw	15
  1899  000F98  0100               	movlb	0	; () banked
  1900  000F9A  0100               	movlb	0	; () banked
  1901  000F9C  6FBF               	movwf	parser_lthread@Command& (0+255),b
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;Parser_thread.c: 24: if(Command == 0x02)
  1905  000F9E  0100               	movlb	0	; () banked
  1906  000FA0  0100               	movlb	0	; () banked
  1907  000FA2  51BF               	movf	parser_lthread@Command& (0+255),w,b
  1908  000FA4  0A02               	xorlw	2
  1909  000FA6  A4D8               	btfss	status,2,c
  1910  000FA8  0012               	return	
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;Parser_thread.c: 25: {
  1914                           ;Parser_thread.c: 26: char movement = msgbuf[1] & 0x0F;
  1915  000FAA  0100               	movlb	0	; () banked
  1916  000FAC  EE20 F001          	lfsr	2,1
  1917  000FB0  0100               	movlb	0	; () banked
  1918  000FB2  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  1919  000FB4  26D9               	addwf	fsr2l,f,c
  1920  000FB6  0100               	movlb	0	; () banked
  1921  000FB8  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1922  000FBA  22DA               	addwfc	fsr2h,f,c
  1923  000FBC  50DF               	movf	indf2,w,c
  1924  000FBE  0B0F               	andlw	15
  1925  000FC0  0100               	movlb	0	; () banked
  1926  000FC2  0100               	movlb	0	; () banked
  1927  000FC4  6FC2               	movwf	parser_lthread@movement& (0+255),b
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Parser_thread.c: 28: if(movement == 0x0)
  1931  000FC6  0100               	movlb	0	; () banked
  1932  000FC8  0100               	movlb	0	; () banked
  1933  000FCA  67C2               	tstfsz	parser_lthread@movement& (0+255),b
  1934  000FCC  D004               	goto	l2648
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;Parser_thread.c: 29: {
  1938                           ;Parser_thread.c: 30: data[0] = 0x03;
  1939  000FCE  0100               	movlb	0	; () banked
  1940  000FD0  6FB4               	movwf	??_parser_lthread& (0+255),b
  1941  000FD2  0E03               	movlw	3
  1942  000FD4  D016               	goto	L3
  1943  000FD6                     l2648:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;Parser_thread.c: 32: else if(movement == 0x01)
  1947  000FD6  0100               	movlb	0	; () banked
  1948  000FD8  0100               	movlb	0	; () banked
  1949  000FDA  05C2               	decf	parser_lthread@movement& (0+255),w,b
  1950  000FDC  A4D8               	btfss	status,2,c
  1951  000FDE  D004               	goto	l2652
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;Parser_thread.c: 33: {
  1955                           ;Parser_thread.c: 34: data[0] = 0x02;
  1956  000FE0  0100               	movlb	0	; () banked
  1957  000FE2  6FB4               	movwf	??_parser_lthread& (0+255),b
  1958  000FE4  0E02               	movlw	2
  1959  000FE6  D00D               	goto	L3
  1960  000FE8                     l2652:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;Parser_thread.c: 36: else if(movement == 0x02)
  1964  000FE8  0100               	movlb	0	; () banked
  1965  000FEA  0100               	movlb	0	; () banked
  1966  000FEC  51C2               	movf	parser_lthread@movement& (0+255),w,b
  1967  000FEE  0A02               	xorlw	2
  1968  000FF0  A4D8               	btfss	status,2,c
  1969  000FF2  D004               	goto	l2656
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;Parser_thread.c: 37: {
  1973                           ;Parser_thread.c: 38: data[0] = 0x01;
  1974  000FF4  0100               	movlb	0	; () banked
  1975  000FF6  6FB4               	movwf	??_parser_lthread& (0+255),b
  1976  000FF8  0E01               	movlw	1
  1977  000FFA  D003               	goto	L3
  1978  000FFC                     l2656:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;Parser_thread.c: 40: else
  1982                           ;Parser_thread.c: 41: {
  1983                           ;Parser_thread.c: 42: data[0] = 0x04;
  1984  000FFC  0100               	movlb	0	; () banked
  1985  000FFE  6FB4               	movwf	??_parser_lthread& (0+255),b
  1986  001000  0E04               	movlw	4
  1987  001002                     L3:
  1988  001002  0100               	movlb	0	; () banked
  1989  001004  0100               	movlb	0	; () banked
  1990  001006  6FB9               	movwf	parser_lthread@data& (0+255),b
  1991  001008  0100               	movlb	0	; () banked
  1992  00100A  51B4               	movf	??_parser_lthread& (0+255),w,b
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;Parser_thread.c: 43: }
  1996                           ;Parser_thread.c: 45: data[1] = msgbuf[2];
  1997                           
  1998                           ; BSR set to: 0
  1999                           
  2000                           ; BSR set to: 0
  2001                           
  2002                           ; BSR set to: 0
  2003  00100C  0100               	movlb	0	; () banked
  2004  00100E  EE20 F002          	lfsr	2,2
  2005  001012  0100               	movlb	0	; () banked
  2006  001014  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2007  001016  26D9               	addwf	fsr2l,f,c
  2008  001018  0100               	movlb	0	; () banked
  2009  00101A  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2010  00101C  22DA               	addwfc	fsr2h,f,c
  2011  00101E  50DF               	movf	indf2,w,c
  2012  001020  0100               	movlb	0	; () banked
  2013  001022  0100               	movlb	0	; () banked
  2014  001024  6FBA               	movwf	(parser_lthread@data+1)& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;Parser_thread.c: 46: data[2] = msgbuf[3];
  2018  001026  0100               	movlb	0	; () banked
  2019  001028  EE20 F003          	lfsr	2,3
  2020  00102C  0100               	movlb	0	; () banked
  2021  00102E  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2022  001030  26D9               	addwf	fsr2l,f,c
  2023  001032  0100               	movlb	0	; () banked
  2024  001034  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2025  001036  22DA               	addwfc	fsr2h,f,c
  2026  001038  50DF               	movf	indf2,w,c
  2027  00103A  0100               	movlb	0	; () banked
  2028  00103C  0100               	movlb	0	; () banked
  2029  00103E  6FBB               	movwf	(parser_lthread@data+2)& (0+255),b
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;Parser_thread.c: 47: data[3] = msgbuf[2];
  2033  001040  0100               	movlb	0	; () banked
  2034  001042  EE20 F002          	lfsr	2,2
  2035  001046  0100               	movlb	0	; () banked
  2036  001048  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2037  00104A  26D9               	addwf	fsr2l,f,c
  2038  00104C  0100               	movlb	0	; () banked
  2039  00104E  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2040  001050  22DA               	addwfc	fsr2h,f,c
  2041  001052  50DF               	movf	indf2,w,c
  2042  001054  0100               	movlb	0	; () banked
  2043  001056  0100               	movlb	0	; () banked
  2044  001058  6FBC               	movwf	(parser_lthread@data+3)& (0+255),b
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;Parser_thread.c: 48: data[4] = msgbuf[3];
  2048  00105A  0100               	movlb	0	; () banked
  2049  00105C  EE20 F003          	lfsr	2,3
  2050  001060  0100               	movlb	0	; () banked
  2051  001062  51B2               	movf	parser_lthread@msgbuf& (0+255),w,b
  2052  001064  26D9               	addwf	fsr2l,f,c
  2053  001066  0100               	movlb	0	; () banked
  2054  001068  51B3               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2055  00106A  22DA               	addwfc	fsr2h,f,c
  2056  00106C  50DF               	movf	indf2,w,c
  2057  00106E  0100               	movlb	0	; () banked
  2058  001070  0100               	movlb	0	; () banked
  2059  001072  6FBD               	movwf	(parser_lthread@data+4)& (0+255),b
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;Parser_thread.c: 50: i2c_configure_master(0x4F);
  2063  001074  0E4F               	movlw	79
  2064  001076  EC0C  F00F         	call	_i2c_configure_master
  2065                           
  2066                           ;Parser_thread.c: 51: i2c_master_send(0x05,&data);
  2067  00107A  0100               	movlb	0	; () banked
  2068  00107C  0E00               	movlw	high parser_lthread@data
  2069  00107E  0100               	movlb	0	; () banked
  2070  001080  0100               	movlb	0	; () banked
  2071  001082  6FA8               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2072  001084  0100               	movlb	0	; () banked
  2073  001086  0EB9               	movlw	low parser_lthread@data
  2074  001088  0100               	movlb	0	; () banked
  2075  00108A  0100               	movlb	0	; () banked
  2076  00108C  6FA7               	movwf	i2c_master_send@msg& (0+255),b
  2077  00108E  0E05               	movlw	5
  2078  001090  EC41  F00B         	call	_i2c_master_send
  2079                           
  2080                           ;Parser_thread.c: 52: }
  2081  001094  0012               	return	
  2082  001096                     __end_of_parser_lthread:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _i2c_master_send *****************
  2096 ;; Defined at:
  2097 ;;		line 65 in file "source/my_i2c.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  length          1    wreg     unsigned char 
  2100 ;;  msg             2   39[BANK0 ] PTR unsigned char 
  2101 ;;		 -> parser_lthread@data(5), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  length          1   43[BANK0 ] unsigned char 
  2104 ;;  currentLengt    2   44[BANK0 ] unsigned int 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      unsigned char 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2114 ;;      Params:         0       2       0       0       0
  2115 ;;      Locals:         0       3       0       0       0
  2116 ;;      Temps:          0       2       0       0       0
  2117 ;;      Totals:         0       7       0       0       0
  2118 ;;Total ram usage:        7 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:   12
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_parser_lthread
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text5
  2129  001682                     __ptext5:
  2130                           	opt stack 0
  2131  001682                     _i2c_master_send:
  2132                           	opt stack 17
  2133                           
  2134                           ;incstack = 0
  2135                           ;i2c_master_send@length stored from wreg
  2136  001682  CFE8 F0AB          	movff	wreg,i2c_master_send@length
  2137                           
  2138                           ;my_i2c.c: 68: if (SSPSTATbits.READ_WRITE == 1){
  2139  001686  B4C7               	btfsc	4039,2,c	;volatile
  2140  001688  0012               	return	
  2141                           
  2142                           ;my_i2c.c: 70: }
  2143                           ;my_i2c.c: 73: unsigned int currentLength;
  2144                           ;my_i2c.c: 74: for (currentLength = 0; currentLength < length; currentLength++){
  2145                           
  2146                           ;my_i2c.c: 69: return -1;
  2147                           ;	Return value of _i2c_master_send is never used
  2148  00168A  0E00               	movlw	0
  2149  00168C  0100               	movlb	0	; () banked
  2150  00168E  0100               	movlb	0	; () banked
  2151  001690  6FAD               	movwf	(i2c_master_send@currentLength+1)& (0+255),b
  2152  001692  0E00               	movlw	0
  2153  001694  0100               	movlb	0	; () banked
  2154  001696  6FAC               	movwf	i2c_master_send@currentLength& (0+255),b
  2155  001698  D02C               	goto	l2826
  2156  00169A                     l2822:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;my_i2c.c: 75: ic_ptr->outbuffer[currentLength] = msg[currentLength];
  2160  00169A  0100               	movlb	0	; () banked
  2161  00169C  0100               	movlb	0	; () banked
  2162  00169E  51AC               	movf	i2c_master_send@currentLength& (0+255),w,b
  2163  0016A0  0100               	movlb	0	; () banked
  2164  0016A2  0100               	movlb	0	; () banked
  2165  0016A4  25A7               	addwf	i2c_master_send@msg& (0+255),w,b
  2166  0016A6  6ED9               	movwf	fsr2l,c
  2167  0016A8  0100               	movlb	0	; () banked
  2168  0016AA  0100               	movlb	0	; () banked
  2169  0016AC  51AD               	movf	(i2c_master_send@currentLength+1)& (0+255),w,b
  2170  0016AE  0100               	movlb	0	; () banked
  2171  0016B0  0100               	movlb	0	; () banked
  2172  0016B2  21A8               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2173  0016B4  6EDA               	movwf	fsr2h,c
  2174  0016B6  0E1C               	movlw	28
  2175  0016B8  0100               	movlb	0	; () banked
  2176  0016BA  0100               	movlb	0	; () banked
  2177  0016BC  25AC               	addwf	i2c_master_send@currentLength& (0+255),w,b
  2178  0016BE  0100               	movlb	0	; () banked
  2179  0016C0  6FA9               	movwf	??_i2c_master_send& (0+255),b
  2180  0016C2  0E00               	movlw	0
  2181  0016C4  0100               	movlb	0	; () banked
  2182  0016C6  0100               	movlb	0	; () banked
  2183  0016C8  21AD               	addwfc	(i2c_master_send@currentLength+1)& (0+255),w,b
  2184  0016CA  0100               	movlb	0	; () banked
  2185  0016CC  6FAA               	movwf	(??_i2c_master_send+1)& (0+255),b
  2186  0016CE  0100               	movlb	0	; () banked
  2187  0016D0  51A9               	movf	??_i2c_master_send& (0+255),w,b
  2188  0016D2  0100               	movlb	0	; () banked
  2189  0016D4  0100               	movlb	0	; () banked
  2190  0016D6  25C6               	addwf	_ic_ptr& (0+255),w,b
  2191  0016D8  6EE1               	movwf	fsr1l,c
  2192  0016DA  0100               	movlb	0	; () banked
  2193  0016DC  51AA               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2194  0016DE  0100               	movlb	0	; () banked
  2195  0016E0  0100               	movlb	0	; () banked
  2196  0016E2  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2197  0016E4  6EE2               	movwf	fsr1h,c
  2198  0016E6  CFDF FFE7          	movff	indf2,indf1
  2199                           
  2200                           ; BSR set to: 0
  2201  0016EA  0100               	movlb	0	; () banked
  2202  0016EC  0100               	movlb	0	; () banked
  2203  0016EE  4BAC               	infsnz	i2c_master_send@currentLength& (0+255),f,b
  2204  0016F0  2BAD               	incf	(i2c_master_send@currentLength+1)& (0+255),f,b
  2205  0016F2                     l2826:
  2206                           
  2207                           ; BSR set to: 0
  2208  0016F2  0100               	movlb	0	; () banked
  2209  0016F4  0100               	movlb	0	; () banked
  2210  0016F6  51AB               	movf	i2c_master_send@length& (0+255),w,b
  2211  0016F8  0100               	movlb	0	; () banked
  2212  0016FA  6FA9               	movwf	??_i2c_master_send& (0+255),b
  2213  0016FC  6BAA               	clrf	(??_i2c_master_send+1)& (0+255),b
  2214  0016FE  0100               	movlb	0	; () banked
  2215  001700  51A9               	movf	??_i2c_master_send& (0+255),w,b
  2216  001702  0100               	movlb	0	; () banked
  2217  001704  0100               	movlb	0	; () banked
  2218  001706  5DAC               	subwf	i2c_master_send@currentLength& (0+255),w,b
  2219  001708  0100               	movlb	0	; () banked
  2220  00170A  51AA               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2221  00170C  0100               	movlb	0	; () banked
  2222  00170E  0100               	movlb	0	; () banked
  2223  001710  59AD               	subwfb	(i2c_master_send@currentLength+1)& (0+255),w,b
  2224  001712  A0D8               	btfss	status,0,c
  2225  001714  D7C2               	goto	l2822
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;my_i2c.c: 76: }
  2229                           ;my_i2c.c: 78: ic_ptr->outbuflen = length;
  2230                           
  2231                           ; BSR set to: 0
  2232  001716  0100               	movlb	0	; () banked
  2233  001718  EE20 F032          	lfsr	2,50
  2234  00171C  0100               	movlb	0	; () banked
  2235  00171E  51C6               	movf	_ic_ptr& (0+255),w,b
  2236  001720  26D9               	addwf	fsr2l,f,c
  2237  001722  0100               	movlb	0	; () banked
  2238  001724  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2239  001726  22DA               	addwfc	fsr2h,f,c
  2240  001728  0100               	movlb	0	; () banked
  2241  00172A  C0AB  FFDF         	movff	i2c_master_send@length,indf2
  2242                           
  2243                           ;my_i2c.c: 79: ic_ptr->outbufind = 0;
  2244  00172E  0100               	movlb	0	; () banked
  2245  001730  EE20 F033          	lfsr	2,51
  2246  001734  0100               	movlb	0	; () banked
  2247  001736  51C6               	movf	_ic_ptr& (0+255),w,b
  2248  001738  26D9               	addwf	fsr2l,f,c
  2249  00173A  0100               	movlb	0	; () banked
  2250  00173C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2251  00173E  22DA               	addwfc	fsr2h,f,c
  2252  001740  0E00               	movlw	0
  2253  001742  6EDF               	movwf	indf2,c
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;my_i2c.c: 83: SSPCON2bits.RCEN = 0;
  2257  001744  96C5               	bcf	4037,3,c	;volatile
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;my_i2c.c: 84: SSPCON2bits.SEN = 1;
  2261  001746  80C5               	bsf	4037,0,c	;volatile
  2262                           
  2263                           ;my_i2c.c: 86: ic_ptr->status = 0x9;
  2264  001748  0100               	movlb	0	; () banked
  2265  00174A  EE20 F019          	lfsr	2,25
  2266  00174E  0100               	movlb	0	; () banked
  2267  001750  51C6               	movf	_ic_ptr& (0+255),w,b
  2268  001752  26D9               	addwf	fsr2l,f,c
  2269  001754  0100               	movlb	0	; () banked
  2270  001756  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2271  001758  22DA               	addwfc	fsr2h,f,c
  2272  00175A  0E09               	movlw	9
  2273  00175C  6EDF               	movwf	indf2,c
  2274  00175E  0012               	return	
  2275  001760                     __end_of_i2c_master_send:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf1	equ	0xFE7
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _i2c_configure_master *****************
  2292 ;; Defined at:
  2293 ;;		line 22 in file "source/my_i2c.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  slave_addr      1    wreg     unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  slave_addr      1   40[BANK0 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;		None               void
  2300 ;; Registers used:
  2301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2307 ;;      Params:         0       0       0       0       0
  2308 ;;      Locals:         0       1       0       0       0
  2309 ;;      Temps:          0       1       0       0       0
  2310 ;;      Totals:         0       2       0       0       0
  2311 ;;Total ram usage:        2 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:   12
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_parser_lthread
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text6
  2322  001E18                     __ptext6:
  2323                           	opt stack 0
  2324  001E18                     _i2c_configure_master:
  2325                           	opt stack 17
  2326                           
  2327                           ;incstack = 0
  2328                           ;i2c_configure_master@slave_addr stored from wreg
  2329  001E18  CFE8 F0A8          	movff	wreg,i2c_configure_master@slave_addr
  2330                           
  2331                           ;my_i2c.c: 23: i2c_mode = 1;
  2332  001E1C  0100               	movlb	0	; () banked
  2333  001E1E  6FA7               	movwf	??_i2c_configure_master& (0+255),b
  2334  001E20  0E01               	movlw	1
  2335  001E22  0100               	movlb	0	; () banked
  2336  001E24  0100               	movlb	0	; () banked
  2337  001E26  6FC8               	movwf	_i2c_mode& (0+255),b
  2338  001E28  0100               	movlb	0	; () banked
  2339  001E2A  51A7               	movf	??_i2c_configure_master& (0+255),w,b
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;my_i2c.c: 25: ic_ptr->slave_addr = slave_addr;
  2343  001E2C  0100               	movlb	0	; () banked
  2344  001E2E  EE20 F034          	lfsr	2,52
  2345  001E32  0100               	movlb	0	; () banked
  2346  001E34  51C6               	movf	_ic_ptr& (0+255),w,b
  2347  001E36  26D9               	addwf	fsr2l,f,c
  2348  001E38  0100               	movlb	0	; () banked
  2349  001E3A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2350  001E3C  22DA               	addwfc	fsr2h,f,c
  2351  001E3E  0100               	movlb	0	; () banked
  2352  001E40  C0A8  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;my_i2c.c: 28: SSPCON1 = 0x0;
  2356  001E44  0E00               	movlw	0
  2357  001E46  6EC6               	movwf	4038,c	;volatile
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;my_i2c.c: 29: SSPCON2 = 0x0;
  2361  001E48  0E00               	movlw	0
  2362  001E4A  6EC5               	movwf	4037,c	;volatile
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;my_i2c.c: 30: SSPSTAT = 0x0;
  2366  001E4C  0E00               	movlw	0
  2367  001E4E  6EC7               	movwf	4039,c	;volatile
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;my_i2c.c: 33: SSPADD = 0x63;
  2371  001E50  0E63               	movlw	99
  2372  001E52  6EC8               	movwf	4040,c	;volatile
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;my_i2c.c: 36: SSPCON1bits.SSPM = 0x08;
  2376  001E54  50C6               	movf	4038,w,c	;volatile
  2377  001E56  0BF0               	andlw	-16
  2378  001E58  0908               	iorlw	8
  2379  001E5A  6EC6               	movwf	4038,c	;volatile
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;my_i2c.c: 37: SSPCON1bits.SSPEN = 1;
  2383  001E5C  8AC6               	bsf	4038,5,c	;volatile
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;my_i2c.c: 40: SSPSTAT = 0b10000000;
  2387  001E5E  0E80               	movlw	128
  2388  001E60  6EC7               	movwf	4039,c	;volatile
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;my_i2c.c: 43: LATCbits.LATC3 = 1;
  2392  001E62  868B               	bsf	3979,3,c	;volatile
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;my_i2c.c: 44: LATCbits.LATC4 = 1;
  2396  001E64  888B               	bsf	3979,4,c	;volatile
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;my_i2c.c: 45: TRISCbits.TRISC3 = 1;
  2400  001E66  8694               	bsf	3988,3,c	;volatile
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;my_i2c.c: 46: TRISCbits.TRISC4 = 1;
  2404  001E68  8894               	bsf	3988,4,c	;volatile
  2405                           
  2406                           ; BSR set to: 0
  2407  001E6A  0012               	return	
  2408  001E6C                     __end_of_i2c_configure_master:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           indf1	equ	0xFE7
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           indf2	equ	0xFDF
  2420                           fsr2h	equ	0xFDA
  2421                           fsr2l	equ	0xFD9
  2422                           status	equ	0xFD8
  2423                           
  2424 ;; *************** function _init_uart_recv *****************
  2425 ;; Defined at:
  2426 ;;		line 52 in file "source/my_uart.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  uc              2   39[BANK0 ] PTR struct __uart_comm
  2429 ;;		 -> main@uc(23), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2441 ;;      Params:         0       2       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       1       0       0       0
  2444 ;;      Totals:         0       3       0       0       0
  2445 ;;Total ram usage:        3 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:   12
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text7
  2456  0021A4                     __ptext7:
  2457                           	opt stack 0
  2458  0021A4                     _init_uart_recv:
  2459                           	opt stack 18
  2460                           
  2461                           ;my_uart.c: 53: uc_ptr = uc;
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;incstack = 0
  2465  0021A4  0100               	movlb	0	; () banked
  2466  0021A6  C0A8  F04C         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2467  0021AA  0100               	movlb	0	; () banked
  2468  0021AC  C0A7  F04B         	movff	init_uart_recv@uc,_uc_ptr
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;my_uart.c: 54: uc_ptr->buflen = 0;
  2472  0021B0  EE20 F016          	lfsr	2,22
  2473  0021B4  504B               	movf	_uc_ptr,w,c
  2474  0021B6  26D9               	addwf	fsr2l,f,c
  2475  0021B8  504C               	movf	_uc_ptr+1,w,c
  2476  0021BA  22DA               	addwfc	fsr2h,f,c
  2477  0021BC  0E00               	movlw	0
  2478  0021BE  6EDF               	movwf	indf2,c
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;my_uart.c: 55: State = MSGID;
  2482  0021C0  0100               	movlb	0	; () banked
  2483  0021C2  6FA9               	movwf	??_init_uart_recv& (0+255),b
  2484  0021C4  0E01               	movlw	1
  2485  0021C6  6E4D               	movwf	_State,c
  2486  0021C8  0100               	movlb	0	; () banked
  2487  0021CA  51A9               	movf	??_init_uart_recv& (0+255),w,b
  2488                           
  2489                           ; BSR set to: 0
  2490  0021CC  0012               	return	
  2491  0021CE                     __end_of_init_uart_recv:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           indf1	equ	0xFE7
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           indf2	equ	0xFDF
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _init_timer1_lthread *****************
  2508 ;; Defined at:
  2509 ;;		line 6 in file "source/timer1_thread.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  tptr            2   39[BANK0 ] PTR struct __timer1_thre
  2512 ;;		 -> main@t1thread_data(2), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2524 ;;      Params:         0       2       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         0       2       0       0       0
  2528 ;;Total ram usage:        2 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:   12
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text8
  2539  002294                     __ptext8:
  2540                           	opt stack 0
  2541  002294                     _init_timer1_lthread:
  2542                           	opt stack 18
  2543                           
  2544                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;incstack = 0
  2548  002294  C0A7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2549  002298  C0A8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2550  00229C  0E00               	movlw	0
  2551  00229E  6EDE               	movwf	postinc2,c
  2552  0022A0  0E00               	movlw	0
  2553  0022A2  6EDD               	movwf	postdec2,c
  2554  0022A4  0012               	return	
  2555  0022A6                     __end_of_init_timer1_lthread:
  2556                           	opt stack 0
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           indf1	equ	0xFE7
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           indf2	equ	0xFDF
  2567                           postinc2	equ	0xFDE
  2568                           postdec2	equ	0xFDD
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _init_queues *****************
  2574 ;; Defined at:
  2575 ;;		line 194 in file "source/messages.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2589 ;;      Params:         0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0
  2591 ;;      Temps:          0       1       0       0       0
  2592 ;;      Totals:         0       1       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:   13
  2596 ;; This function calls:
  2597 ;;		_init_queue
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text9
  2604  001CF0                     __ptext9:
  2605                           	opt stack 0
  2606  001CF0                     _init_queues:
  2607                           	opt stack 17
  2608                           
  2609                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2610                           
  2611                           ;incstack = 0
  2612  001CF0  0100               	movlb	0	; () banked
  2613  001CF2  6FAB               	movwf	??_init_queues& (0+255),b
  2614  001CF4  0E00               	movlw	0
  2615  001CF6  6E49               	movwf	_MQ_Main_Willing_to_block,c
  2616  001CF8  0100               	movlb	0	; () banked
  2617  001CFA  51AB               	movf	??_init_queues& (0+255),w,b
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2621  001CFC  0101               	movlb	1	; () banked
  2622  001CFE  0E01               	movlw	high _ToMainLow_MQ
  2623  001D00  0100               	movlb	0	; () banked
  2624  001D02  0100               	movlb	0	; () banked
  2625  001D04  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2626  001D06  0101               	movlb	1	; () banked
  2627  001D08  0E84               	movlw	low _ToMainLow_MQ
  2628  001D0A  0100               	movlb	0	; () banked
  2629  001D0C  0100               	movlb	0	; () banked
  2630  001D0E  6FA7               	movwf	init_queue@qptr& (0+255),b
  2631  001D10  EC3B  F00E         	call	_init_queue	;wreg free
  2632                           
  2633                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2634  001D14  0102               	movlb	2	; () banked
  2635  001D16  0E02               	movlw	high _ToMainHigh_MQ
  2636  001D18  0100               	movlb	0	; () banked
  2637  001D1A  0100               	movlb	0	; () banked
  2638  001D1C  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2639  001D1E  0102               	movlb	2	; () banked
  2640  001D20  0E66               	movlw	low _ToMainHigh_MQ
  2641  001D22  0100               	movlb	0	; () banked
  2642  001D24  0100               	movlb	0	; () banked
  2643  001D26  6FA7               	movwf	init_queue@qptr& (0+255),b
  2644  001D28  EC3B  F00E         	call	_init_queue	;wreg free
  2645                           
  2646                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2647  001D2C  0102               	movlb	2	; () banked
  2648  001D2E  0E02               	movlw	high _FromMainLow_MQ
  2649  001D30  0100               	movlb	0	; () banked
  2650  001D32  0100               	movlb	0	; () banked
  2651  001D34  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2652  001D36  0102               	movlb	2	; () banked
  2653  001D38  0E00               	movlw	low _FromMainLow_MQ
  2654  001D3A  0100               	movlb	0	; () banked
  2655  001D3C  0100               	movlb	0	; () banked
  2656  001D3E  6FA7               	movwf	init_queue@qptr& (0+255),b
  2657  001D40  EC3B  F00E         	call	_init_queue	;wreg free
  2658                           
  2659                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2660  001D44  0103               	movlb	3	; () banked
  2661  001D46  0E03               	movlw	high _FromMainHigh_MQ
  2662  001D48  0100               	movlb	0	; () banked
  2663  001D4A  0100               	movlb	0	; () banked
  2664  001D4C  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  2665  001D4E  0103               	movlb	3	; () banked
  2666  001D50  0E00               	movlw	low _FromMainHigh_MQ
  2667  001D52  0100               	movlb	0	; () banked
  2668  001D54  0100               	movlb	0	; () banked
  2669  001D56  6FA7               	movwf	init_queue@qptr& (0+255),b
  2670  001D58  EC3B  F00E         	call	_init_queue	;wreg free
  2671  001D5C  0012               	return	
  2672  001D5E                     __end_of_init_queues:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           indf1	equ	0xFE7
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _init_queue *****************
  2691 ;; Defined at:
  2692 ;;		line 14 in file "source/messages.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  2695 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  i               1   42[BANK0 ] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;		None               void
  2700 ;; Registers used:
  2701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2707 ;;      Params:         0       2       0       0       0
  2708 ;;      Locals:         0       1       0       0       0
  2709 ;;      Temps:          0       1       0       0       0
  2710 ;;      Totals:         0       4       0       0       0
  2711 ;;Total ram usage:        4 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:   12
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_init_queues
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text10
  2722  001C76                     __ptext10:
  2723                           	opt stack 0
  2724  001C76                     _init_queue:
  2725                           	opt stack 17
  2726                           
  2727                           ;messages.c: 15: unsigned char i;
  2728                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2729                           
  2730                           ;incstack = 0
  2731  001C76  0100               	movlb	0	; () banked
  2732  001C78  EE20 F064          	lfsr	2,100
  2733  001C7C  0100               	movlb	0	; () banked
  2734  001C7E  51A7               	movf	init_queue@qptr& (0+255),w,b
  2735  001C80  26D9               	addwf	fsr2l,f,c
  2736  001C82  0100               	movlb	0	; () banked
  2737  001C84  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2738  001C86  22DA               	addwfc	fsr2h,f,c
  2739  001C88  0E00               	movlw	0
  2740  001C8A  6EDF               	movwf	indf2,c
  2741                           
  2742                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2743  001C8C  0100               	movlb	0	; () banked
  2744  001C8E  EE20 F065          	lfsr	2,101
  2745  001C92  0100               	movlb	0	; () banked
  2746  001C94  51A7               	movf	init_queue@qptr& (0+255),w,b
  2747  001C96  26D9               	addwf	fsr2l,f,c
  2748  001C98  0100               	movlb	0	; () banked
  2749  001C9A  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  2750  001C9C  22DA               	addwfc	fsr2h,f,c
  2751  001C9E  0E00               	movlw	0
  2752  001CA0  6EDF               	movwf	indf2,c
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2756  001CA2  0100               	movlb	0	; () banked
  2757  001CA4  6FA9               	movwf	??_init_queue& (0+255),b
  2758  001CA6  0E00               	movlw	0
  2759  001CA8  0100               	movlb	0	; () banked
  2760  001CAA  0100               	movlb	0	; () banked
  2761  001CAC  6FAA               	movwf	init_queue@i& (0+255),b
  2762  001CAE  0100               	movlb	0	; () banked
  2763  001CB0  51A9               	movf	??_init_queue& (0+255),w,b
  2764                           
  2765                           ; BSR set to: 0
  2766  001CB2  0E03               	movlw	3
  2767  001CB4  0100               	movlb	0	; () banked
  2768  001CB6  0100               	movlb	0	; () banked
  2769  001CB8  65AA               	cpfsgt	init_queue@i& (0+255),b
  2770  001CBA  D001               	goto	l2680
  2771  001CBC  0012               	return	
  2772  001CBE                     l2680:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;messages.c: 20: qptr->queue[i].full = 0;
  2776  001CBE  0100               	movlb	0	; () banked
  2777  001CC0  0100               	movlb	0	; () banked
  2778  001CC2  51AA               	movf	init_queue@i& (0+255),w,b
  2779  001CC4  0D19               	mullw	25
  2780  001CC6  50F3               	movf	prodl,w,c
  2781  001CC8  0100               	movlb	0	; () banked
  2782  001CCA  0100               	movlb	0	; () banked
  2783  001CCC  25A7               	addwf	init_queue@qptr& (0+255),w,b
  2784  001CCE  6ED9               	movwf	fsr2l,c
  2785  001CD0  50F4               	movf	prodh,w,c
  2786  001CD2  0100               	movlb	0	; () banked
  2787  001CD4  0100               	movlb	0	; () banked
  2788  001CD6  21A8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2789  001CD8  6EDA               	movwf	fsr2h,c
  2790  001CDA  0E00               	movlw	0
  2791  001CDC  6EDF               	movwf	indf2,c
  2792                           
  2793                           ; BSR set to: 0
  2794  001CDE  0100               	movlb	0	; () banked
  2795  001CE0  0100               	movlb	0	; () banked
  2796  001CE2  2BAA               	incf	init_queue@i& (0+255),f,b
  2797                           
  2798                           ; BSR set to: 0
  2799  001CE4  0E03               	movlw	3
  2800  001CE6  0100               	movlb	0	; () banked
  2801  001CE8  0100               	movlb	0	; () banked
  2802  001CEA  65AA               	cpfsgt	init_queue@i& (0+255),b
  2803  001CEC  D7E8               	goto	l2680
  2804  001CEE  0012               	return	
  2805  001CF0                     __end_of_init_queue:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           prodh	equ	0xFF4
  2812                           prodl	equ	0xFF3
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           indf1	equ	0xFE7
  2816                           fsr1h	equ	0xFE2
  2817                           fsr1l	equ	0xFE1
  2818                           indf2	equ	0xFDF
  2819                           postinc2	equ	0xFDE
  2820                           postdec2	equ	0xFDD
  2821                           fsr2h	equ	0xFDA
  2822                           fsr2l	equ	0xFD9
  2823                           status	equ	0xFD8
  2824                           
  2825 ;; *************** function _init_i2c *****************
  2826 ;; Defined at:
  2827 ;;		line 378 in file "source/my_i2c.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  ic              2   39[BANK0 ] PTR struct __i2c_comm
  2830 ;;		 -> main@ic(77), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;		None               void
  2835 ;; Registers used:
  2836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2842 ;;      Params:         0       2       0       0       0
  2843 ;;      Locals:         0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       2       0       0       0
  2846 ;;Total ram usage:        2 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:   12
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text11
  2857  001760                     __ptext11:
  2858                           	opt stack 0
  2859  001760                     _init_i2c:
  2860                           	opt stack 18
  2861                           
  2862                           ;my_i2c.c: 379: ic_ptr = ic;
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;incstack = 0
  2866  001760  0100               	movlb	0	; () banked
  2867  001762  0100               	movlb	0	; () banked
  2868  001764  C0A8  F0C7         	movff	init_i2c@ic+1,_ic_ptr+1
  2869  001768  0100               	movlb	0	; () banked
  2870  00176A  0100               	movlb	0	; () banked
  2871  00176C  C0A7  F0C6         	movff	init_i2c@ic,_ic_ptr
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;my_i2c.c: 380: ic_ptr->buffer[0] = 0;
  2875  001770  C0C6  FFD9         	movff	_ic_ptr,fsr2l
  2876  001774  C0C7  FFDA         	movff	_ic_ptr+1,fsr2h
  2877  001778  0E00               	movlw	0
  2878  00177A  6EDF               	movwf	indf2,c
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;my_i2c.c: 381: ic_ptr->buffer[1] = 0;
  2882  00177C  0100               	movlb	0	; () banked
  2883  00177E  EE20 F001          	lfsr	2,1
  2884  001782  0100               	movlb	0	; () banked
  2885  001784  51C6               	movf	_ic_ptr& (0+255),w,b
  2886  001786  26D9               	addwf	fsr2l,f,c
  2887  001788  0100               	movlb	0	; () banked
  2888  00178A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2889  00178C  22DA               	addwfc	fsr2h,f,c
  2890  00178E  0E00               	movlw	0
  2891  001790  6EDF               	movwf	indf2,c
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;my_i2c.c: 382: ic_ptr->buffer[2] = 0;
  2895  001792  0100               	movlb	0	; () banked
  2896  001794  EE20 F002          	lfsr	2,2
  2897  001798  0100               	movlb	0	; () banked
  2898  00179A  51C6               	movf	_ic_ptr& (0+255),w,b
  2899  00179C  26D9               	addwf	fsr2l,f,c
  2900  00179E  0100               	movlb	0	; () banked
  2901  0017A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2902  0017A2  22DA               	addwfc	fsr2h,f,c
  2903  0017A4  0E00               	movlw	0
  2904  0017A6  6EDF               	movwf	indf2,c
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;my_i2c.c: 383: ic_ptr->buflen = 0;
  2908  0017A8  0100               	movlb	0	; () banked
  2909  0017AA  EE20 F016          	lfsr	2,22
  2910  0017AE  0100               	movlb	0	; () banked
  2911  0017B0  51C6               	movf	_ic_ptr& (0+255),w,b
  2912  0017B2  26D9               	addwf	fsr2l,f,c
  2913  0017B4  0100               	movlb	0	; () banked
  2914  0017B6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2915  0017B8  22DA               	addwfc	fsr2h,f,c
  2916  0017BA  0E00               	movlw	0
  2917  0017BC  6EDF               	movwf	indf2,c
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;my_i2c.c: 384: ic_ptr->event_count = 0;
  2921  0017BE  0100               	movlb	0	; () banked
  2922  0017C0  EE20 F018          	lfsr	2,24
  2923  0017C4  0100               	movlb	0	; () banked
  2924  0017C6  51C6               	movf	_ic_ptr& (0+255),w,b
  2925  0017C8  26D9               	addwf	fsr2l,f,c
  2926  0017CA  0100               	movlb	0	; () banked
  2927  0017CC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2928  0017CE  22DA               	addwfc	fsr2h,f,c
  2929  0017D0  0E00               	movlw	0
  2930  0017D2  6EDF               	movwf	indf2,c
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;my_i2c.c: 385: ic_ptr->status = 0x5;
  2934  0017D4  0100               	movlb	0	; () banked
  2935  0017D6  EE20 F019          	lfsr	2,25
  2936  0017DA  0100               	movlb	0	; () banked
  2937  0017DC  51C6               	movf	_ic_ptr& (0+255),w,b
  2938  0017DE  26D9               	addwf	fsr2l,f,c
  2939  0017E0  0100               	movlb	0	; () banked
  2940  0017E2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2941  0017E4  22DA               	addwfc	fsr2h,f,c
  2942  0017E6  0E05               	movlw	5
  2943  0017E8  6EDF               	movwf	indf2,c
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;my_i2c.c: 386: ic_ptr->error_count = 0;
  2947  0017EA  0100               	movlb	0	; () banked
  2948  0017EC  EE20 F01B          	lfsr	2,27
  2949  0017F0  0100               	movlb	0	; () banked
  2950  0017F2  51C6               	movf	_ic_ptr& (0+255),w,b
  2951  0017F4  26D9               	addwf	fsr2l,f,c
  2952  0017F6  0100               	movlb	0	; () banked
  2953  0017F8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2954  0017FA  22DA               	addwfc	fsr2h,f,c
  2955  0017FC  0E00               	movlw	0
  2956  0017FE  6EDF               	movwf	indf2,c
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;my_i2c.c: 387: ic_ptr->sendBufInd = 0;
  2960  001800  0100               	movlb	0	; () banked
  2961  001802  EE20 F04C          	lfsr	2,76
  2962  001806  0100               	movlb	0	; () banked
  2963  001808  51C6               	movf	_ic_ptr& (0+255),w,b
  2964  00180A  26D9               	addwf	fsr2l,f,c
  2965  00180C  0100               	movlb	0	; () banked
  2966  00180E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2967  001810  22DA               	addwfc	fsr2h,f,c
  2968  001812  0E00               	movlw	0
  2969  001814  6EDF               	movwf	indf2,c
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;my_i2c.c: 388: ic_ptr->sendBufLen = 0;
  2973  001816  0100               	movlb	0	; () banked
  2974  001818  EE20 F04B          	lfsr	2,75
  2975  00181C  0100               	movlb	0	; () banked
  2976  00181E  51C6               	movf	_ic_ptr& (0+255),w,b
  2977  001820  26D9               	addwf	fsr2l,f,c
  2978  001822  0100               	movlb	0	; () banked
  2979  001824  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  2980  001826  22DA               	addwfc	fsr2h,f,c
  2981  001828  0E00               	movlw	0
  2982  00182A  6EDF               	movwf	indf2,c
  2983                           
  2984                           ; BSR set to: 0
  2985  00182C  0012               	return	
  2986  00182E                     __end_of_init_i2c:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           postinc0	equ	0xFEE
  2995                           wreg	equ	0xFE8
  2996                           indf1	equ	0xFE7
  2997                           fsr1h	equ	0xFE2
  2998                           fsr1l	equ	0xFE1
  2999                           indf2	equ	0xFDF
  3000                           postinc2	equ	0xFDE
  3001                           postdec2	equ	0xFDD
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _enable_interrupts *****************
  3007 ;; Defined at:
  3008 ;;		line 14 in file "source/interrupts.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;		None               void
  3015 ;; Registers used:
  3016 ;;		None
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3022 ;;      Params:         0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:   12
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text12
  3037  0022FA                     __ptext12:
  3038                           	opt stack 0
  3039  0022FA                     _enable_interrupts:
  3040                           	opt stack 18
  3041                           
  3042                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;incstack = 0
  3046  0022FA  8ED0               	bsf	4048,7,c	;volatile
  3047                           
  3048                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3049  0022FC  8EF2               	bsf	intcon,7,c	;volatile
  3050                           
  3051                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3052  0022FE  8CF2               	bsf	intcon,6,c	;volatile
  3053  002300  0012               	return	
  3054  002302                     __end_of_enable_interrupts:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           prodh	equ	0xFF4
  3061                           prodl	equ	0xFF3
  3062                           intcon	equ	0xFF2
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           indf1	equ	0xFE7
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           indf2	equ	0xFDF
  3069                           postinc2	equ	0xFDE
  3070                           postdec2	equ	0xFDD
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8
  3074                           
  3075 ;; *************** function _block_on_To_msgqueues *****************
  3076 ;; Defined at:
  3077 ;;		line 258 in file "source/messages.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;		None               void
  3084 ;; Registers used:
  3085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3091 ;;      Params:         0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0
  3093 ;;      Temps:          0       1       0       0       0
  3094 ;;      Totals:         0       1       0       0       0
  3095 ;;Total ram usage:        1 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:   15
  3098 ;; This function calls:
  3099 ;;		_Delay1KTCYx
  3100 ;;		_check_msg
  3101 ;;		_in_main
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text13
  3108  001BF8                     __ptext13:
  3109                           	opt stack 0
  3110  001BF8                     _block_on_To_msgqueues:
  3111                           	opt stack 15
  3112                           
  3113                           ;messages.c: 259: if (!in_main()) {
  3114                           
  3115                           ;incstack = 0
  3116  001BF8  ECA8  F00F         	call	_in_main	;wreg free
  3117  001BFC  0100               	movlb	0	; () banked
  3118  001BFE  0100               	movlb	0	; () banked
  3119  001C00  51AC               	movf	(?_in_main+1)& (0+255),w,b
  3120  001C02  0100               	movlb	0	; () banked
  3121  001C04  11AB               	iorwf	?_in_main& (0+255),w,b
  3122  001C06  B4D8               	btfsc	status,2,c
  3123  001C08  0012               	return	
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;messages.c: 261: }
  3127                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3128                           
  3129                           ; BSR set to: 0
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;messages.c: 260: return;
  3133  001C0A  0100               	movlb	0	; () banked
  3134  001C0C  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3135  001C0E  0E01               	movlw	1
  3136  001C10  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3137  001C12  0100               	movlb	0	; () banked
  3138  001C14  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3139  001C16                     l2580:
  3140                           
  3141                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3142  001C16  0102               	movlb	2	; () banked
  3143  001C18  0E02               	movlw	high _ToMainHigh_MQ
  3144  001C1A  0100               	movlb	0	; () banked
  3145  001C1C  0100               	movlb	0	; () banked
  3146  001C1E  6FA8               	movwf	(check_msg@qptr+1)& (0+255),b
  3147  001C20  0102               	movlb	2	; () banked
  3148  001C22  0E66               	movlw	low _ToMainHigh_MQ
  3149  001C24  0100               	movlb	0	; () banked
  3150  001C26  0100               	movlb	0	; () banked
  3151  001C28  6FA7               	movwf	check_msg@qptr& (0+255),b
  3152  001C2A  EC6D  F010         	call	_check_msg	;wreg free
  3153  001C2E  0900               	iorlw	0
  3154  001C30  B4D8               	btfsc	status,2,c
  3155  001C32  D007               	goto	l2586
  3156                           
  3157                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3158  001C34  0100               	movlb	0	; () banked
  3159  001C36  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3160  001C38  0E00               	movlw	0
  3161  001C3A  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3162  001C3C  0100               	movlb	0	; () banked
  3163  001C3E  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3164  001C40  0012               	return	
  3165  001C42                     l2586:
  3166                           
  3167                           ;messages.c: 271: }
  3168                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3169  001C42  0101               	movlb	1	; () banked
  3170  001C44  0E01               	movlw	high _ToMainLow_MQ
  3171  001C46  0100               	movlb	0	; () banked
  3172  001C48  0100               	movlb	0	; () banked
  3173  001C4A  6FA8               	movwf	(check_msg@qptr+1)& (0+255),b
  3174  001C4C  0101               	movlb	1	; () banked
  3175  001C4E  0E84               	movlw	low _ToMainLow_MQ
  3176  001C50  0100               	movlb	0	; () banked
  3177  001C52  0100               	movlb	0	; () banked
  3178  001C54  6FA7               	movwf	check_msg@qptr& (0+255),b
  3179  001C56  EC6D  F010         	call	_check_msg	;wreg free
  3180  001C5A  0900               	iorlw	0
  3181  001C5C  B4D8               	btfsc	status,2,c
  3182  001C5E  D007               	goto	l2592
  3183                           
  3184                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3185  001C60  0100               	movlb	0	; () banked
  3186  001C62  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3187  001C64  0E00               	movlw	0
  3188  001C66  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3189  001C68  0100               	movlb	0	; () banked
  3190  001C6A  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3191  001C6C  0012               	return	
  3192  001C6E                     l2592:
  3193                           
  3194                           ;messages.c: 278: }
  3195                           ;messages.c: 279: Delay1KTCYx(10);
  3196  001C6E  0E0A               	movlw	10
  3197  001C70  EC2C  F011         	call	_Delay1KTCYx
  3198  001C74  D7D0               	goto	l2580
  3199  001C76                     __end_of_block_on_To_msgqueues:
  3200                           	opt stack 0
  3201                           tblptru	equ	0xFF8
  3202                           tblptrh	equ	0xFF7
  3203                           tblptrl	equ	0xFF6
  3204                           tablat	equ	0xFF5
  3205                           prodh	equ	0xFF4
  3206                           prodl	equ	0xFF3
  3207                           intcon	equ	0xFF2
  3208                           postinc0	equ	0xFEE
  3209                           wreg	equ	0xFE8
  3210                           indf1	equ	0xFE7
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _in_main *****************
  3221 ;; Defined at:
  3222 ;;		line 40 in file "source/interrupts.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2   43[BANK0 ] int 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3236 ;;      Params:         0       2       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       2       0       0       0
  3240 ;;Total ram usage:        2 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:   14
  3243 ;; This function calls:
  3244 ;;		_in_high_int
  3245 ;;		_in_low_int
  3246 ;; This function is called by:
  3247 ;;		_block_on_To_msgqueues
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text14
  3252  001F50                     __ptext14:
  3253                           	opt stack 0
  3254  001F50                     _in_main:
  3255                           	opt stack 15
  3256                           
  3257                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3258                           
  3259                           ;incstack = 0
  3260  001F50  EC85  F00F         	call	_in_low_int	;wreg free
  3261  001F54  0100               	movlb	0	; () banked
  3262  001F56  0100               	movlb	0	; () banked
  3263  001F58  51AA               	movf	(?_in_low_int+1)& (0+255),w,b
  3264  001F5A  0100               	movlb	0	; () banked
  3265  001F5C  11A9               	iorwf	?_in_low_int& (0+255),w,b
  3266  001F5E  A4D8               	btfss	status,2,c
  3267  001F60  D011               	goto	l2368
  3268                           
  3269                           ; BSR set to: 0
  3270  001F62  EC53  F011         	call	_in_high_int	;wreg free
  3271  001F66  0100               	movlb	0	; () banked
  3272  001F68  0100               	movlb	0	; () banked
  3273  001F6A  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3274  001F6C  0100               	movlb	0	; () banked
  3275  001F6E  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3276  001F70  A4D8               	btfss	status,2,c
  3277  001F72  D008               	goto	l2368
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;interrupts.c: 42: return (1);
  3281  001F74  0E00               	movlw	0
  3282  001F76  0100               	movlb	0	; () banked
  3283  001F78  0100               	movlb	0	; () banked
  3284  001F7A  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3285  001F7C  0E01               	movlw	1
  3286  001F7E  0100               	movlb	0	; () banked
  3287  001F80  6FAB               	movwf	?_in_main& (0+255),b
  3288  001F82  0012               	return	
  3289  001F84                     l2368:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;interrupts.c: 44: return (0);
  3293  001F84  0E00               	movlw	0
  3294  001F86  0100               	movlb	0	; () banked
  3295  001F88  0100               	movlb	0	; () banked
  3296  001F8A  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3297  001F8C  0E00               	movlw	0
  3298  001F8E  0100               	movlb	0	; () banked
  3299  001F90  6FAB               	movwf	?_in_main& (0+255),b
  3300  001F92  0012               	return	
  3301  001F94                     __end_of_in_main:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           indf1	equ	0xFE7
  3313                           fsr1h	equ	0xFE2
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           postinc2	equ	0xFDE
  3317                           postdec2	equ	0xFDD
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function _in_low_int *****************
  3323 ;; Defined at:
  3324 ;;		line 30 in file "source/interrupts.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   41[BANK0 ] int 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3338 ;;      Params:         0       2       0       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         0       2       0       0       0
  3342 ;;Total ram usage:        2 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:   13
  3345 ;; This function calls:
  3346 ;;		_in_high_int
  3347 ;; This function is called by:
  3348 ;;		_in_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text15
  3353  001F0A                     __ptext15:
  3354                           	opt stack 0
  3355  001F0A                     _in_low_int:
  3356                           	opt stack 15
  3357                           
  3358                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;incstack = 0
  3362  001F0A  ACF2               	btfss	intcon,6,c	;volatile
  3363  001F0C  D008               	goto	l2346
  3364                           
  3365                           ;interrupts.c: 32: return (0);
  3366  001F0E  0E00               	movlw	0
  3367  001F10  0100               	movlb	0	; () banked
  3368  001F12  0100               	movlb	0	; () banked
  3369  001F14  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3370  001F16  0E00               	movlw	0
  3371  001F18  0100               	movlb	0	; () banked
  3372  001F1A  6FA9               	movwf	?_in_low_int& (0+255),b
  3373  001F1C  0012               	return	
  3374  001F1E                     l2346:
  3375  001F1E  EC53  F011         	call	_in_high_int	;wreg free
  3376  001F22  0100               	movlb	0	; () banked
  3377  001F24  0100               	movlb	0	; () banked
  3378  001F26  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3379  001F28  0100               	movlb	0	; () banked
  3380  001F2A  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3381  001F2C  B4D8               	btfsc	status,2,c
  3382  001F2E  D008               	goto	l2354
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;interrupts.c: 34: return (0);
  3386  001F30  0E00               	movlw	0
  3387  001F32  0100               	movlb	0	; () banked
  3388  001F34  0100               	movlb	0	; () banked
  3389  001F36  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3390  001F38  0E00               	movlw	0
  3391  001F3A  0100               	movlb	0	; () banked
  3392  001F3C  6FA9               	movwf	?_in_low_int& (0+255),b
  3393  001F3E  0012               	return	
  3394  001F40                     l2354:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;interrupts.c: 36: return (1);
  3398  001F40  0E00               	movlw	0
  3399  001F42  0100               	movlb	0	; () banked
  3400  001F44  0100               	movlb	0	; () banked
  3401  001F46  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3402  001F48  0E01               	movlw	1
  3403  001F4A  0100               	movlb	0	; () banked
  3404  001F4C  6FA9               	movwf	?_in_low_int& (0+255),b
  3405  001F4E  0012               	return	
  3406  001F50                     __end_of_in_low_int:
  3407                           	opt stack 0
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           indf1	equ	0xFE7
  3418                           fsr1h	equ	0xFE2
  3419                           fsr1l	equ	0xFE1
  3420                           indf2	equ	0xFDF
  3421                           postinc2	equ	0xFDE
  3422                           postdec2	equ	0xFDD
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function _in_high_int *****************
  3428 ;; Defined at:
  3429 ;;		line 22 in file "source/interrupts.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2   39[BANK0 ] int 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3443 ;;      Params:         0       2       0       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0
  3446 ;;      Totals:         0       2       0       0       0
  3447 ;;Total ram usage:        2 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:   12
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_in_low_int
  3454 ;;		_in_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text16
  3459  0022A6                     __ptext16:
  3460                           	opt stack 0
  3461  0022A6                     _in_high_int:
  3462                           	opt stack 15
  3463                           
  3464                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;incstack = 0
  3468  0022A6  0E00               	movlw	0
  3469  0022A8  AEF2               	btfss	intcon,7,c	;volatile
  3470  0022AA  0E01               	movlw	1
  3471  0022AC  0100               	movlb	0	; () banked
  3472  0022AE  0100               	movlb	0	; () banked
  3473  0022B0  6FA7               	movwf	?_in_high_int& (0+255),b
  3474  0022B2  0100               	movlb	0	; () banked
  3475  0022B4  6BA8               	clrf	(?_in_high_int+1)& (0+255),b
  3476  0022B6  0012               	return	
  3477  0022B8                     __end_of_in_high_int:
  3478                           	opt stack 0
  3479                           tblptru	equ	0xFF8
  3480                           tblptrh	equ	0xFF7
  3481                           tblptrl	equ	0xFF6
  3482                           tablat	equ	0xFF5
  3483                           prodh	equ	0xFF4
  3484                           prodl	equ	0xFF3
  3485                           intcon	equ	0xFF2
  3486                           postinc0	equ	0xFEE
  3487                           wreg	equ	0xFE8
  3488                           indf1	equ	0xFE7
  3489                           fsr1h	equ	0xFE2
  3490                           fsr1l	equ	0xFE1
  3491                           indf2	equ	0xFDF
  3492                           postinc2	equ	0xFDE
  3493                           postdec2	equ	0xFDD
  3494                           fsr2h	equ	0xFDA
  3495                           fsr2l	equ	0xFD9
  3496                           status	equ	0xFD8
  3497                           
  3498 ;; *************** function _check_msg *****************
  3499 ;; Defined at:
  3500 ;;		line 222 in file "source/messages.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3503 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      unsigned char 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3515 ;;      Params:         0       2       0       0       0
  3516 ;;      Locals:         0       0       0       0       0
  3517 ;;      Temps:          0       1       0       0       0
  3518 ;;      Totals:         0       3       0       0       0
  3519 ;;Total ram usage:        3 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:   12
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_block_on_To_msgqueues
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text17
  3530  0020DA                     __ptext17:
  3531                           	opt stack 0
  3532  0020DA                     _check_msg:
  3533                           	opt stack 17
  3534                           
  3535                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;incstack = 0
  3539  0020DA  0100               	movlb	0	; () banked
  3540  0020DC  EE20 F065          	lfsr	2,101
  3541  0020E0  0100               	movlb	0	; () banked
  3542  0020E2  51A7               	movf	check_msg@qptr& (0+255),w,b
  3543  0020E4  26D9               	addwf	fsr2l,f,c
  3544  0020E6  0100               	movlb	0	; () banked
  3545  0020E8  51A8               	movf	(check_msg@qptr+1)& (0+255),w,b
  3546  0020EA  22DA               	addwfc	fsr2h,f,c
  3547  0020EC  50DF               	movf	indf2,w,c
  3548  0020EE  0100               	movlb	0	; () banked
  3549  0020F0  6FA9               	movwf	??_check_msg& (0+255),b
  3550  0020F2  0100               	movlb	0	; () banked
  3551  0020F4  51A9               	movf	??_check_msg& (0+255),w,b
  3552  0020F6  0D19               	mullw	25
  3553  0020F8  50F3               	movf	prodl,w,c
  3554  0020FA  0100               	movlb	0	; () banked
  3555  0020FC  0100               	movlb	0	; () banked
  3556  0020FE  25A7               	addwf	check_msg@qptr& (0+255),w,b
  3557  002100  6ED9               	movwf	fsr2l,c
  3558  002102  50F4               	movf	prodh,w,c
  3559  002104  0100               	movlb	0	; () banked
  3560  002106  0100               	movlb	0	; () banked
  3561  002108  21A8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3562  00210A  6EDA               	movwf	fsr2h,c
  3563  00210C  50DF               	movf	indf2,w,c
  3564  00210E  0012               	return	
  3565  002110                     __end_of_check_msg:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           intcon	equ	0xFF2
  3574                           postinc0	equ	0xFEE
  3575                           wreg	equ	0xFE8
  3576                           indf1	equ	0xFE7
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           postdec2	equ	0xFDD
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _Delay1KTCYx *****************
  3587 ;; Defined at:
  3588 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  unit            1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  unit            1   39[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;		None               void
  3595 ;; Registers used:
  3596 ;;		wreg
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       1       0       0       0
  3604 ;;      Temps:          0       0       0       0       0
  3605 ;;      Totals:         0       1       0       0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:   12
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_block_on_To_msgqueues
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text18
  3617  002258                     __ptext18:
  3618                           	opt stack 0
  3619  002258                     _Delay1KTCYx:
  3620                           	opt stack 17
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;incstack = 0
  3624                           ;Delay1KTCYx@unit stored from wreg
  3625  002258  CFE8 F0A7          	movff	wreg,Delay1KTCYx@unit
  3626  00225C                     l786:
  3627  00225C  0EFA               	movlw	250
  3628  00225E                     u2747:
  3629  00225E  F000               	nop	
  3630  002260  2EE8               	decfsz	wreg,f,c
  3631  002262  D7FD               	goto	u2747
  3632  002264  0100               	movlb	0	; () banked
  3633  002266  0100               	movlb	0	; () banked
  3634  002268  2FA7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3635  00226A  D7F8               	goto	l786
  3636  00226C  0012               	return	
  3637  00226E                     __end_of_Delay1KTCYx:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           indf1	equ	0xFE7
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function _ToMainLow_recvmsg *****************
  3659 ;; Defined at:
  3660 ;;		line 112 in file "source/messages.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  maxlength       1    wreg     unsigned char 
  3663 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  3664 ;;		 -> main@msgtype(1), 
  3665 ;;  data            2   65[BANK0 ] PTR void 
  3666 ;;		 -> main@msgbuffer(23), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  maxlength       1   67[BANK0 ] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      char 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3678 ;;      Params:         0       4       0       0       0
  3679 ;;      Locals:         0       1       0       0       0
  3680 ;;      Temps:          0       0       0       0       0
  3681 ;;      Totals:         0       5       0       0       0
  3682 ;;Total ram usage:        5 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:   14
  3685 ;; This function calls:
  3686 ;;		_recv_msg
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text19
  3693  001F94                     __ptext19:
  3694                           	opt stack 0
  3695  001F94                     _ToMainLow_recvmsg:
  3696                           	opt stack 16
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;incstack = 0
  3700                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3701  001F94  CFE8 F0C3          	movff	wreg,ToMainLow_recvmsg@maxlength
  3702                           
  3703                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3704  001F98  0101               	movlb	1	; () banked
  3705  001F9A  0E01               	movlw	high _ToMainLow_MQ
  3706  001F9C  0100               	movlb	0	; () banked
  3707  001F9E  0100               	movlb	0	; () banked
  3708  001FA0  6FB2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3709  001FA2  0101               	movlb	1	; () banked
  3710  001FA4  0E84               	movlw	low _ToMainLow_MQ
  3711  001FA6  0100               	movlb	0	; () banked
  3712  001FA8  0100               	movlb	0	; () banked
  3713  001FAA  6FB1               	movwf	recv_msg@qptr& (0+255),b
  3714  001FAC  C0C3  F0B3         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3715  001FB0  0100               	movlb	0	; () banked
  3716  001FB2  0100               	movlb	0	; () banked
  3717  001FB4  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3718  001FB8  0100               	movlb	0	; () banked
  3719  001FBA  0100               	movlb	0	; () banked
  3720  001FBC  C0BF  F0B4         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3721  001FC0  0100               	movlb	0	; () banked
  3722  001FC2  0100               	movlb	0	; () banked
  3723  001FC4  C0C2  F0B7         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3724  001FC8  0100               	movlb	0	; () banked
  3725  001FCA  0100               	movlb	0	; () banked
  3726  001FCC  C0C1  F0B6         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3727  001FD0  EC25  F009         	call	_recv_msg	;wreg free
  3728  001FD4  0012               	return	
  3729  001FD6                     __end_of_ToMainLow_recvmsg:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           intcon	equ	0xFF2
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           indf1	equ	0xFE7
  3741                           fsr1h	equ	0xFE2
  3742                           fsr1l	equ	0xFE1
  3743                           indf2	equ	0xFDF
  3744                           postinc2	equ	0xFDE
  3745                           postdec2	equ	0xFDD
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function _ToMainHigh_recvmsg *****************
  3751 ;; Defined at:
  3752 ;;		line 135 in file "source/messages.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  maxlength       1    wreg     unsigned char 
  3755 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  3756 ;;		 -> main@msgtype(1), 
  3757 ;;  data            2   65[BANK0 ] PTR void 
  3758 ;;		 -> main@msgbuffer(23), 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  maxlength       1   67[BANK0 ] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      char 
  3763 ;; Registers used:
  3764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3770 ;;      Params:         0       4       0       0       0
  3771 ;;      Locals:         0       1       0       0       0
  3772 ;;      Temps:          0       0       0       0       0
  3773 ;;      Totals:         0       5       0       0       0
  3774 ;;Total ram usage:        5 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:   14
  3777 ;; This function calls:
  3778 ;;		_recv_msg
  3779 ;; This function is called by:
  3780 ;;		_main
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text20
  3785  001FD6                     __ptext20:
  3786                           	opt stack 0
  3787  001FD6                     _ToMainHigh_recvmsg:
  3788                           	opt stack 16
  3789                           
  3790                           ;incstack = 0
  3791                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3792  001FD6  CFE8 F0C3          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3793                           
  3794                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3795  001FDA  0102               	movlb	2	; () banked
  3796  001FDC  0E02               	movlw	high _ToMainHigh_MQ
  3797  001FDE  0100               	movlb	0	; () banked
  3798  001FE0  0100               	movlb	0	; () banked
  3799  001FE2  6FB2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3800  001FE4  0102               	movlb	2	; () banked
  3801  001FE6  0E66               	movlw	low _ToMainHigh_MQ
  3802  001FE8  0100               	movlb	0	; () banked
  3803  001FEA  0100               	movlb	0	; () banked
  3804  001FEC  6FB1               	movwf	recv_msg@qptr& (0+255),b
  3805  001FEE  C0C3  F0B3         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3806  001FF2  0100               	movlb	0	; () banked
  3807  001FF4  0100               	movlb	0	; () banked
  3808  001FF6  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3809  001FFA  0100               	movlb	0	; () banked
  3810  001FFC  0100               	movlb	0	; () banked
  3811  001FFE  C0BF  F0B4         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3812  002002  0100               	movlb	0	; () banked
  3813  002004  0100               	movlb	0	; () banked
  3814  002006  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3815  00200A  0100               	movlb	0	; () banked
  3816  00200C  0100               	movlb	0	; () banked
  3817  00200E  C0C1  F0B6         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3818  002012  EC25  F009         	call	_recv_msg	;wreg free
  3819  002016  0012               	return	
  3820  002018                     __end_of_ToMainHigh_recvmsg:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           postinc0	equ	0xFEE
  3830                           wreg	equ	0xFE8
  3831                           indf1	equ	0xFE7
  3832                           fsr1h	equ	0xFE2
  3833                           fsr1l	equ	0xFE1
  3834                           indf2	equ	0xFDF
  3835                           postinc2	equ	0xFDE
  3836                           postdec2	equ	0xFDD
  3837                           fsr2h	equ	0xFDA
  3838                           fsr2l	equ	0xFD9
  3839                           status	equ	0xFD8
  3840                           
  3841 ;; *************** function _recv_msg *****************
  3842 ;; Defined at:
  3843 ;;		line 63 in file "source/messages.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  qptr            2   49[BANK0 ] PTR struct __msg_queue
  3846 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3847 ;;  maxlength       1   51[BANK0 ] unsigned char 
  3848 ;;  msgtype         2   52[BANK0 ] PTR unsigned char 
  3849 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3850 ;;  data            2   54[BANK0 ] PTR void 
  3851 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  qmsg            2   61[BANK0 ] PTR struct __msg
  3854 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  3855 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3856 ;;  tlength         2   59[BANK0 ] unsigned int 
  3857 ;;  slot            1   58[BANK0 ] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      char 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3867 ;;      Params:         0       7       0       0       0
  3868 ;;      Locals:         0       5       0       0       0
  3869 ;;      Temps:          0       2       0       0       0
  3870 ;;      Totals:         0      14       0       0       0
  3871 ;;Total ram usage:       14 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:   13
  3874 ;; This function calls:
  3875 ;;		_memcpy
  3876 ;; This function is called by:
  3877 ;;		_ToMainLow_recvmsg
  3878 ;;		_ToMainHigh_recvmsg
  3879 ;;		_FromMainLow_recvmsg
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text21
  3884  00124A                     __ptext21:
  3885                           	opt stack 0
  3886  00124A                     _recv_msg:
  3887                           	opt stack 16
  3888                           
  3889                           ;messages.c: 64: unsigned char slot;
  3890                           ;messages.c: 68: msg *qmsg;
  3891                           ;messages.c: 69: size_t tlength;
  3892                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3893                           
  3894                           ;incstack = 0
  3895  00124A  0100               	movlb	0	; () banked
  3896  00124C  EE20 F065          	lfsr	2,101
  3897  001250  0100               	movlb	0	; () banked
  3898  001252  51B1               	movf	recv_msg@qptr& (0+255),w,b
  3899  001254  26D9               	addwf	fsr2l,f,c
  3900  001256  0100               	movlb	0	; () banked
  3901  001258  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3902  00125A  22DA               	addwfc	fsr2h,f,c
  3903  00125C  50DF               	movf	indf2,w,c
  3904  00125E  0100               	movlb	0	; () banked
  3905  001260  0100               	movlb	0	; () banked
  3906  001262  6FBA               	movwf	recv_msg@slot& (0+255),b
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3910  001264  0100               	movlb	0	; () banked
  3911  001266  0100               	movlb	0	; () banked
  3912  001268  51BA               	movf	recv_msg@slot& (0+255),w,b
  3913  00126A  0D19               	mullw	25
  3914  00126C  50F3               	movf	prodl,w,c
  3915  00126E  0100               	movlb	0	; () banked
  3916  001270  0100               	movlb	0	; () banked
  3917  001272  25B1               	addwf	recv_msg@qptr& (0+255),w,b
  3918  001274  0100               	movlb	0	; () banked
  3919  001276  0100               	movlb	0	; () banked
  3920  001278  6FBD               	movwf	recv_msg@qmsg& (0+255),b
  3921  00127A  50F4               	movf	prodh,w,c
  3922  00127C  0100               	movlb	0	; () banked
  3923  00127E  0100               	movlb	0	; () banked
  3924  001280  21B2               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3925  001282  0100               	movlb	0	; () banked
  3926  001284  6FBE               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;messages.c: 74: if (qmsg->full == 1) {
  3930  001286  0E01               	movlw	1
  3931  001288  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  3932  00128C  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3933  001290  62DF               	cpfseq	indf2,c
  3934  001292  D074               	goto	l2724
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3938  001294  0100               	movlb	0	; () banked
  3939  001296  EE20 F001          	lfsr	2,1
  3940  00129A  0100               	movlb	0	; () banked
  3941  00129C  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  3942  00129E  26D9               	addwf	fsr2l,f,c
  3943  0012A0  0100               	movlb	0	; () banked
  3944  0012A2  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3945  0012A4  22DA               	addwfc	fsr2h,f,c
  3946  0012A6  50DF               	movf	indf2,w,c
  3947  0012A8  0100               	movlb	0	; () banked
  3948  0012AA  0100               	movlb	0	; () banked
  3949  0012AC  5DB3               	subwf	recv_msg@maxlength& (0+255),w,b
  3950  0012AE  B0D8               	btfsc	status,0,c
  3951  0012B0  D002               	goto	l2708
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;messages.c: 77: return (-3);
  3955  0012B2  0EFD               	movlw	253
  3956  0012B4  0012               	return	
  3957  0012B6                     l2708:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;messages.c: 78: }
  3961                           ;messages.c: 80: tlength = qmsg->length;
  3962  0012B6  0100               	movlb	0	; () banked
  3963  0012B8  EE20 F001          	lfsr	2,1
  3964  0012BC  0100               	movlb	0	; () banked
  3965  0012BE  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  3966  0012C0  26D9               	addwf	fsr2l,f,c
  3967  0012C2  0100               	movlb	0	; () banked
  3968  0012C4  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3969  0012C6  22DA               	addwfc	fsr2h,f,c
  3970  0012C8  50DF               	movf	indf2,w,c
  3971  0012CA  0100               	movlb	0	; () banked
  3972  0012CC  6FB8               	movwf	??_recv_msg& (0+255),b
  3973  0012CE  0100               	movlb	0	; () banked
  3974  0012D0  51B8               	movf	??_recv_msg& (0+255),w,b
  3975  0012D2  0100               	movlb	0	; () banked
  3976  0012D4  0100               	movlb	0	; () banked
  3977  0012D6  6FBB               	movwf	recv_msg@tlength& (0+255),b
  3978  0012D8  0100               	movlb	0	; () banked
  3979  0012DA  6BBC               	clrf	(recv_msg@tlength+1)& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3983  0012DC  0100               	movlb	0	; () banked
  3984  0012DE  0100               	movlb	0	; () banked
  3985  0012E0  C0B7  F0A8         	movff	recv_msg@data+1,memcpy@d1+1
  3986  0012E4  0100               	movlb	0	; () banked
  3987  0012E6  0100               	movlb	0	; () banked
  3988  0012E8  C0B6  F0A7         	movff	recv_msg@data,memcpy@d1
  3989  0012EC  0E03               	movlw	3
  3990  0012EE  0100               	movlb	0	; () banked
  3991  0012F0  0100               	movlb	0	; () banked
  3992  0012F2  25BD               	addwf	recv_msg@qmsg& (0+255),w,b
  3993  0012F4  0100               	movlb	0	; () banked
  3994  0012F6  6FB8               	movwf	??_recv_msg& (0+255),b
  3995  0012F8  0E00               	movlw	0
  3996  0012FA  0100               	movlb	0	; () banked
  3997  0012FC  0100               	movlb	0	; () banked
  3998  0012FE  21BE               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3999  001300  0100               	movlb	0	; () banked
  4000  001302  6FB9               	movwf	(??_recv_msg+1)& (0+255),b
  4001  001304  C0B8  F0A9         	movff	??_recv_msg,memcpy@s1
  4002  001308  C0B9  F0AA         	movff	??_recv_msg+1,memcpy@s1+1
  4003  00130C  C0BB  F0AB         	movff	recv_msg@tlength,memcpy@n
  4004  001310  C0BC  F0AC         	movff	recv_msg@tlength+1,memcpy@n+1
  4005  001314  ECAF  F00E         	call	_memcpy	;wreg free
  4006                           
  4007                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4008  001318  0100               	movlb	0	; () banked
  4009  00131A  EE20 F065          	lfsr	2,101
  4010  00131E  0100               	movlb	0	; () banked
  4011  001320  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4012  001322  26D9               	addwf	fsr2l,f,c
  4013  001324  0100               	movlb	0	; () banked
  4014  001326  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4015  001328  22DA               	addwfc	fsr2h,f,c
  4016  00132A  0100               	movlb	0	; () banked
  4017  00132C  EE10 F065          	lfsr	1,101
  4018  001330  0100               	movlb	0	; () banked
  4019  001332  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4020  001334  26E1               	addwf	fsr1l,f,c
  4021  001336  0100               	movlb	0	; () banked
  4022  001338  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4023  00133A  22E2               	addwfc	fsr1h,f,c
  4024  00133C  50E7               	movf	indf1,w,c
  4025  00133E  0100               	movlb	0	; () banked
  4026  001340  6FB8               	movwf	??_recv_msg& (0+255),b
  4027  001342  0100               	movlb	0	; () banked
  4028  001344  29B8               	incf	??_recv_msg& (0+255),w,b
  4029  001346  0B03               	andlw	3
  4030  001348  6EDF               	movwf	indf2,c
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4034  00134A  0100               	movlb	0	; () banked
  4035  00134C  EE20 F002          	lfsr	2,2
  4036  001350  0100               	movlb	0	; () banked
  4037  001352  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4038  001354  26D9               	addwf	fsr2l,f,c
  4039  001356  0100               	movlb	0	; () banked
  4040  001358  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4041  00135A  22DA               	addwfc	fsr2h,f,c
  4042  00135C  C0B4  FFE1         	movff	recv_msg@msgtype,fsr1l
  4043  001360  C0B5  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4044  001364  CFDF FFE7          	movff	indf2,indf1
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;messages.c: 91: qmsg->full = 0;
  4048  001368  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4049  00136C  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4050  001370  0E00               	movlw	0
  4051  001372  6EDF               	movwf	indf2,c
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;messages.c: 92: return (tlength);
  4055  001374  0100               	movlb	0	; () banked
  4056  001376  0100               	movlb	0	; () banked
  4057  001378  51BB               	movf	recv_msg@tlength& (0+255),w,b
  4058  00137A  0012               	return	
  4059  00137C                     l2724:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;messages.c: 94: return (-4);
  4063  00137C  0EFC               	movlw	252
  4064  00137E  0012               	return	
  4065  001380                     __end_of_recv_msg:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           postinc0	equ	0xFEE
  4075                           wreg	equ	0xFE8
  4076                           indf1	equ	0xFE7
  4077                           fsr1h	equ	0xFE2
  4078                           fsr1l	equ	0xFE1
  4079                           indf2	equ	0xFDF
  4080                           postinc2	equ	0xFDE
  4081                           postdec2	equ	0xFDD
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           
  4086 ;; *************** function _memcpy *****************
  4087 ;; Defined at:
  4088 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  d1              2   39[BANK0 ] PTR void 
  4091 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4092 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4093 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4094 ;;  s1              2   41[BANK0 ] PTR const void 
  4095 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4096 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4097 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  4098 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  4099 ;;		 -> main@ic(77), main@uc(23), 
  4100 ;;  n               2   43[BANK0 ] unsigned int 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  s               2   47[BANK0 ] PTR const unsigned char 
  4103 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4104 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4105 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  4106 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  4107 ;;		 -> main@ic(77), main@uc(23), 
  4108 ;;  d               2   45[BANK0 ] PTR unsigned char 
  4109 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4110 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4111 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2   39[BANK0 ] PTR void 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4121 ;;      Params:         0       6       0       0       0
  4122 ;;      Locals:         0       4       0       0       0
  4123 ;;      Temps:          0       0       0       0       0
  4124 ;;      Totals:         0      10       0       0       0
  4125 ;;Total ram usage:       10 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:   12
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_recv_msg
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text22
  4136  001D5E                     __ptext22:
  4137                           	opt stack 0
  4138  001D5E                     _memcpy:
  4139                           	opt stack 16
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;incstack = 0
  4143  001D5E  0100               	movlb	0	; () banked
  4144  001D60  0100               	movlb	0	; () banked
  4145  001D62  C0AA  F0B0         	movff	memcpy@s1+1,memcpy@s+1
  4146  001D66  0100               	movlb	0	; () banked
  4147  001D68  0100               	movlb	0	; () banked
  4148  001D6A  C0A9  F0AF         	movff	memcpy@s1,memcpy@s
  4149  001D6E  0100               	movlb	0	; () banked
  4150  001D70  0100               	movlb	0	; () banked
  4151  001D72  C0A8  F0AE         	movff	memcpy@d1+1,memcpy@d+1
  4152  001D76  0100               	movlb	0	; () banked
  4153  001D78  0100               	movlb	0	; () banked
  4154  001D7A  C0A7  F0AD         	movff	memcpy@d1,memcpy@d
  4155  001D7E  D012               	goto	l2694
  4156  001D80                     l2688:
  4157                           
  4158                           ; BSR set to: 0
  4159  001D80  C0AF  FFD9         	movff	memcpy@s,fsr2l
  4160  001D84  C0B0  FFDA         	movff	memcpy@s+1,fsr2h
  4161  001D88  C0AD  FFE1         	movff	memcpy@d,fsr1l
  4162  001D8C  C0AE  FFE2         	movff	memcpy@d+1,fsr1h
  4163  001D90  CFDF FFE7          	movff	indf2,indf1
  4164                           
  4165                           ; BSR set to: 0
  4166  001D94  0100               	movlb	0	; () banked
  4167  001D96  0100               	movlb	0	; () banked
  4168  001D98  4BAF               	infsnz	memcpy@s& (0+255),f,b
  4169  001D9A  2BB0               	incf	(memcpy@s+1)& (0+255),f,b
  4170                           
  4171                           ; BSR set to: 0
  4172  001D9C  0100               	movlb	0	; () banked
  4173  001D9E  0100               	movlb	0	; () banked
  4174  001DA0  4BAD               	infsnz	memcpy@d& (0+255),f,b
  4175  001DA2  2BAE               	incf	(memcpy@d+1)& (0+255),f,b
  4176  001DA4                     l2694:
  4177                           
  4178                           ; BSR set to: 0
  4179  001DA4  0100               	movlb	0	; () banked
  4180  001DA6  0100               	movlb	0	; () banked
  4181  001DA8  07AB               	decf	memcpy@n& (0+255),f,b
  4182  001DAA  A0D8               	btfss	status,0,c
  4183  001DAC  07AC               	decf	(memcpy@n+1)& (0+255),f,b
  4184  001DAE  0100               	movlb	0	; () banked
  4185  001DB0  29AB               	incf	memcpy@n& (0+255),w,b
  4186  001DB2  B4D8               	btfsc	status,2,c
  4187  001DB4  29AC               	incf	(memcpy@n+1)& (0+255),w,b
  4188  001DB6  B4D8               	btfsc	status,2,c
  4189                           
  4190                           ; BSR set to: 0
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;	Return value of _memcpy is never used
  4194  001DB8  0012               	return	
  4195  001DBA  D7E2               	goto	l2688
  4196  001DBC                     __end_of_memcpy:
  4197                           	opt stack 0
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           intcon	equ	0xFF2
  4205                           postinc0	equ	0xFEE
  4206                           wreg	equ	0xFE8
  4207                           indf1	equ	0xFE7
  4208                           fsr1h	equ	0xFE2
  4209                           fsr1l	equ	0xFE1
  4210                           indf2	equ	0xFDF
  4211                           postinc2	equ	0xFDE
  4212                           postdec2	equ	0xFDD
  4213                           fsr2h	equ	0xFDA
  4214                           fsr2l	equ	0xFD9
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function _OpenUSART *****************
  4218 ;; Defined at:
  4219 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  config          1    wreg     unsigned char 
  4222 ;;  spbrg           2   39[BANK0 ] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  config          1   44[BANK0 ] unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;		None               void
  4227 ;; Registers used:
  4228 ;;		wreg, status,2
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4234 ;;      Params:         0       2       0       0       0
  4235 ;;      Locals:         0       1       0       0       0
  4236 ;;      Temps:          0       3       0       0       0
  4237 ;;      Totals:         0       6       0       0       0
  4238 ;;Total ram usage:        6 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:   12
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_main
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text23
  4249  001A60                     __ptext23:
  4250                           	opt stack 0
  4251  001A60                     _OpenUSART:
  4252                           	opt stack 18
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;incstack = 0
  4256                           ;OpenUSART@config stored from wreg
  4257  001A60  CFE8 F0AC          	movff	wreg,OpenUSART@config
  4258  001A64  0E00               	movlw	0
  4259  001A66  6EAC               	movwf	4012,c	;volatile
  4260  001A68  0E00               	movlw	0
  4261  001A6A  6EAB               	movwf	4011,c	;volatile
  4262  001A6C  0100               	movlb	0	; () banked
  4263  001A6E  0100               	movlb	0	; () banked
  4264  001A70  B1AC               	btfsc	OpenUSART@config& (0+255),0,b
  4265                           
  4266                           ; BSR set to: 0
  4267  001A72  88AC               	bsf	4012,4,c	;volatile
  4268                           
  4269                           ; BSR set to: 0
  4270                           
  4271                           ; BSR set to: 0
  4272  001A74  0100               	movlb	0	; () banked
  4273  001A76  0100               	movlb	0	; () banked
  4274  001A78  A3AC               	btfss	OpenUSART@config& (0+255),1,b
  4275  001A7A  D002               	goto	l2534
  4276                           
  4277                           ; BSR set to: 0
  4278  001A7C  8CAC               	bsf	4012,6,c	;volatile
  4279  001A7E  8CAB               	bsf	4011,6,c	;volatile
  4280  001A80                     l2534:
  4281                           
  4282                           ; BSR set to: 0
  4283  001A80  0100               	movlb	0	; () banked
  4284  001A82  0100               	movlb	0	; () banked
  4285  001A84  B5AC               	btfsc	OpenUSART@config& (0+255),2,b
  4286                           
  4287                           ; BSR set to: 0
  4288  001A86  8EAC               	bsf	4012,7,c	;volatile
  4289                           
  4290                           ; BSR set to: 0
  4291                           
  4292                           ; BSR set to: 0
  4293  001A88  0100               	movlb	0	; () banked
  4294  001A8A  0100               	movlb	0	; () banked
  4295  001A8C  A7AC               	btfss	OpenUSART@config& (0+255),3,b
  4296  001A8E  D002               	goto	l542
  4297                           
  4298                           ; BSR set to: 0
  4299  001A90  88AB               	bsf	4011,4,c	;volatile
  4300  001A92  D001               	goto	l2542
  4301  001A94                     l542:
  4302                           
  4303                           ; BSR set to: 0
  4304  001A94  8AAB               	bsf	4011,5,c	;volatile
  4305  001A96                     l2542:
  4306                           
  4307                           ; BSR set to: 0
  4308  001A96  0100               	movlb	0	; () banked
  4309  001A98  0100               	movlb	0	; () banked
  4310  001A9A  B9AC               	btfsc	OpenUSART@config& (0+255),4,b
  4311                           
  4312                           ; BSR set to: 0
  4313  001A9C  84AC               	bsf	4012,2,c	;volatile
  4314                           
  4315                           ; BSR set to: 0
  4316  001A9E  989E               	bcf	3998,4,c	;volatile
  4317                           
  4318                           ; BSR set to: 0
  4319  001AA0  0100               	movlb	0	; () banked
  4320  001AA2  0100               	movlb	0	; () banked
  4321  001AA4  BBAC               	btfsc	OpenUSART@config& (0+255),5,b
  4322                           
  4323                           ; BSR set to: 0
  4324  001AA6  86AB               	bsf	4011,3,c	;volatile
  4325                           
  4326                           ; BSR set to: 0
  4327                           
  4328                           ; BSR set to: 0
  4329  001AA8  0100               	movlb	0	; () banked
  4330  001AAA  0100               	movlb	0	; () banked
  4331  001AAC  ADAC               	btfss	OpenUSART@config& (0+255),6,b
  4332  001AAE  D002               	goto	l546
  4333                           
  4334                           ; BSR set to: 0
  4335  001AB0  8A9D               	bsf	3997,5,c	;volatile
  4336  001AB2  D001               	goto	l547
  4337  001AB4                     l546:
  4338                           
  4339                           ; BSR set to: 0
  4340  001AB4  9A9D               	bcf	3997,5,c	;volatile
  4341  001AB6                     l547:
  4342                           
  4343                           ; BSR set to: 0
  4344  001AB6  9A9E               	bcf	3998,5,c	;volatile
  4345                           
  4346                           ; BSR set to: 0
  4347  001AB8  0100               	movlb	0	; () banked
  4348  001ABA  0100               	movlb	0	; () banked
  4349  001ABC  AFAC               	btfss	OpenUSART@config& (0+255),7,b
  4350  001ABE  D002               	goto	l548
  4351                           
  4352                           ; BSR set to: 0
  4353  001AC0  889D               	bsf	3997,4,c	;volatile
  4354  001AC2  D001               	goto	l549
  4355  001AC4                     l548:
  4356                           
  4357                           ; BSR set to: 0
  4358  001AC4  989D               	bcf	3997,4,c	;volatile
  4359  001AC6                     l549:
  4360                           
  4361                           ; BSR set to: 0
  4362  001AC6  C0A7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4363                           
  4364                           ; BSR set to: 0
  4365  001ACA  0100               	movlb	0	; () banked
  4366  001ACC  C0A8  F0A9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4367  001AD0  C0A9  F0AA         	movff	??_OpenUSART,??_OpenUSART+1
  4368  001AD4  0100               	movlb	0	; () banked
  4369  001AD6  6BAB               	clrf	(??_OpenUSART+2)& (0+255),b
  4370  001AD8  0100               	movlb	0	; () banked
  4371  001ADA  51AA               	movf	(??_OpenUSART+1)& (0+255),w,b
  4372  001ADC  6EB0               	movwf	4016,c	;volatile
  4373                           
  4374                           ; BSR set to: 0
  4375  001ADE  8AAC               	bsf	4012,5,c	;volatile
  4376                           
  4377                           ; BSR set to: 0
  4378  001AE0  8EAB               	bsf	4011,7,c	;volatile
  4379                           
  4380                           ; BSR set to: 0
  4381  001AE2  9C94               	bcf	3988,6,c	;volatile
  4382                           
  4383                           ; BSR set to: 0
  4384  001AE4  8E94               	bsf	3988,7,c	;volatile
  4385                           
  4386                           ; BSR set to: 0
  4387  001AE6  A8AC               	btfss	4012,4,c	;volatile
  4388  001AE8  0012               	return	
  4389                           
  4390                           ; BSR set to: 0
  4391  001AEA  BEAC               	btfsc	4012,7,c	;volatile
  4392  001AEC  0012               	return	
  4393                           
  4394                           ; BSR set to: 0
  4395  001AEE  8C94               	bsf	3988,6,c	;volatile
  4396  001AF0  0012               	return	
  4397  001AF2                     __end_of_OpenUSART:
  4398                           	opt stack 0
  4399                           tblptru	equ	0xFF8
  4400                           tblptrh	equ	0xFF7
  4401                           tblptrl	equ	0xFF6
  4402                           tablat	equ	0xFF5
  4403                           prodh	equ	0xFF4
  4404                           prodl	equ	0xFF3
  4405                           intcon	equ	0xFF2
  4406                           postinc0	equ	0xFEE
  4407                           wreg	equ	0xFE8
  4408                           indf1	equ	0xFE7
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           indf2	equ	0xFDF
  4412                           postinc2	equ	0xFDE
  4413                           postdec2	equ	0xFDD
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function _InterruptHandlerLow *****************
  4419 ;; Defined at:
  4420 ;;		line 122 in file "source/interrupts.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;		None               void
  4427 ;; Registers used:
  4428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4434 ;;      Params:         0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0
  4436 ;;      Temps:         17       0       0       0       0
  4437 ;;      Totals:        17       0       0       0       0
  4438 ;;Total ram usage:       17 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:   11
  4441 ;; This function calls:
  4442 ;;		_timer1_int_handler
  4443 ;;		_uart_recv_int_handler
  4444 ;; This function is called by:
  4445 ;;		Interrupt level 1
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	intcodelo
  4450  000018                     __pintcodelo:
  4451                           	opt stack 0
  4452  000018                     _InterruptHandlerLow:
  4453                           	opt stack 15
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;incstack = 0
  4457  000018  CFD8 F021          	movff	status,??_InterruptHandlerLow
  4458  00001C  CFE8 F022          	movff	wreg,??_InterruptHandlerLow+1
  4459  000020  CFE0 F023          	movff	bsr,??_InterruptHandlerLow+2
  4460  000024  CFFA F024          	movff	pclath,??_InterruptHandlerLow+3
  4461  000028  CFFB F025          	movff	pclatu,??_InterruptHandlerLow+4
  4462  00002C  CFE9 F026          	movff	fsr0l,??_InterruptHandlerLow+5
  4463  000030  CFEA F027          	movff	fsr0h,??_InterruptHandlerLow+6
  4464  000034  CFE1 F028          	movff	fsr1l,??_InterruptHandlerLow+7
  4465  000038  CFE2 F029          	movff	fsr1h,??_InterruptHandlerLow+8
  4466  00003C  CFD9 F02A          	movff	fsr2l,??_InterruptHandlerLow+9
  4467  000040  CFDA F02B          	movff	fsr2h,??_InterruptHandlerLow+10
  4468  000044  CFF3 F02C          	movff	prodl,??_InterruptHandlerLow+11
  4469  000048  CFF4 F02D          	movff	prodh,??_InterruptHandlerLow+12
  4470  00004C  CFF6 F02E          	movff	tblptrl,??_InterruptHandlerLow+13
  4471  000050  CFF7 F02F          	movff	tblptrh,??_InterruptHandlerLow+14
  4472  000054  CFF8 F030          	movff	tblptru,??_InterruptHandlerLow+15
  4473  000058  CFF5 F031          	movff	tablat,??_InterruptHandlerLow+16
  4474                           
  4475                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4476  00005C  A09E               	btfss	3998,0,c	;volatile
  4477  00005E  D003               	goto	i1l3366
  4478                           
  4479                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4480  000060  909E               	bcf	3998,0,c	;volatile
  4481                           
  4482                           ;interrupts.c: 126: timer1_int_handler();
  4483  000062  ECA3  F010         	call	_timer1_int_handler	;wreg free
  4484  000066                     i1l3366:
  4485                           
  4486                           ;interrupts.c: 127: }
  4487                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4488  000066  AA9E               	btfss	3998,5,c	;volatile
  4489  000068  D003               	goto	i1l47
  4490                           
  4491                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4492  00006A  9A9E               	bcf	3998,5,c	;volatile
  4493                           
  4494                           ;interrupts.c: 132: uart_recv_int_handler();
  4495  00006C  ECDE  F00E         	call	_uart_recv_int_handler	;wreg free
  4496  000070                     i1l47:
  4497  000070  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4498  000074  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4499  000078  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4500  00007C  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4501  000080  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4502  000084  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4503  000088  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4504  00008C  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4505  000090  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4506  000094  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4507  000098  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4508  00009C  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4509  0000A0  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4510  0000A4  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4511  0000A8  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4512  0000AC  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4513  0000B0  C021  FFD8         	movff	??_InterruptHandlerLow,status
  4514  0000B4  0010               	retfie	
  4515  0000B6                     __end_of_InterruptHandlerLow:
  4516                           	opt stack 0
  4517                           pclatu	equ	0xFFB
  4518                           pclath	equ	0xFFA
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           intcon	equ	0xFF2
  4526                           postinc0	equ	0xFEE
  4527                           fsr0h	equ	0xFEA
  4528                           fsr0l	equ	0xFE9
  4529                           wreg	equ	0xFE8
  4530                           indf1	equ	0xFE7
  4531                           fsr1h	equ	0xFE2
  4532                           fsr1l	equ	0xFE1
  4533                           bsr	equ	0xFE0
  4534                           indf2	equ	0xFDF
  4535                           postinc2	equ	0xFDE
  4536                           postdec2	equ	0xFDD
  4537                           fsr2h	equ	0xFDA
  4538                           fsr2l	equ	0xFD9
  4539                           status	equ	0xFD8
  4540                           
  4541 ;; *************** function _uart_recv_int_handler *****************
  4542 ;; Defined at:
  4543 ;;		line 16 in file "source/my_uart.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;		None               void
  4550 ;; Registers used:
  4551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4557 ;;      Params:         0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0
  4559 ;;      Temps:          1       0       0       0       0
  4560 ;;      Totals:         1       0       0       0       0
  4561 ;;Total ram usage:        1 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:   10
  4564 ;; This function calls:
  4565 ;;		_ReadUSART
  4566 ;;		_ToMainLow_sendmsg
  4567 ;;		_parseUART
  4568 ;; This function is called by:
  4569 ;;		_InterruptHandlerLow
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text25
  4574  001DBC                     __ptext25:
  4575                           	opt stack 0
  4576  001DBC                     _uart_recv_int_handler:
  4577                           	opt stack 15
  4578                           
  4579                           ;my_uart.c: 25: if ((PIR1bits.RCIF)) {
  4580                           
  4581                           ;incstack = 0
  4582  001DBC  AA9E               	btfss	3998,5,c	;volatile
  4583  001DBE  D01C               	goto	i1l3354
  4584                           
  4585                           ;my_uart.c: 26: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4586  001DC0  EE20 F016          	lfsr	2,22
  4587  001DC4  504B               	movf	_uc_ptr,w,c
  4588  001DC6  26D9               	addwf	fsr2l,f,c
  4589  001DC8  504C               	movf	_uc_ptr+1,w,c
  4590  001DCA  22DA               	addwfc	fsr2h,f,c
  4591  001DCC  50DF               	movf	indf2,w,c
  4592  001DCE  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  4593  001DD0  5020               	movf	??_uart_recv_int_handler,w,c
  4594  001DD2  0D01               	mullw	1
  4595  001DD4  50F3               	movf	prodl,w,c
  4596  001DD6  244B               	addwf	_uc_ptr,w,c
  4597  001DD8  6ED9               	movwf	fsr2l,c
  4598  001DDA  50F4               	movf	prodh,w,c
  4599  001DDC  204C               	addwfc	_uc_ptr+1,w,c
  4600  001DDE  6EDA               	movwf	fsr2h,c
  4601  001DE0  EC1D  F011         	call	_ReadUSART	;wreg free
  4602  001DE4  6EDF               	movwf	indf2,c
  4603                           
  4604                           ;my_uart.c: 29: uc_ptr->buflen++;
  4605  001DE6  EE20 F016          	lfsr	2,22
  4606  001DEA  504B               	movf	_uc_ptr,w,c
  4607  001DEC  26D9               	addwf	fsr2l,f,c
  4608  001DEE  504C               	movf	_uc_ptr+1,w,c
  4609  001DF0  22DA               	addwfc	fsr2h,f,c
  4610  001DF2  2ADF               	incf	indf2,f,c
  4611                           
  4612                           ;my_uart.c: 30: parseUART();
  4613  001DF4  ECCE  F00A         	call	_parseUART	;wreg free
  4614  001DF8                     i1l3354:
  4615                           
  4616                           ;my_uart.c: 33: }
  4617                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  4618  001DF8  A64A               	btfss	_USART_Status,3,c
  4619  001DFA  0012               	return	
  4620                           
  4621                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  4622  001DFC  98AB               	bcf	4011,4,c	;volatile
  4623                           
  4624                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  4625  001DFE  88AB               	bsf	4011,4,c	;volatile
  4626                           
  4627                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  4628  001E00  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  4629  001E02  0E1E               	movlw	30
  4630  001E04  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4631  001E06  5020               	movf	??_uart_recv_int_handler& (0+255),w,c
  4632  001E08  0E00               	movlw	0
  4633  001E0A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4634  001E0C  0E00               	movlw	0
  4635  001E0E  6E18               	movwf	ToMainLow_sendmsg@data,c
  4636  001E10  0E00               	movlw	0
  4637  001E12  ECE7  F010         	call	_ToMainLow_sendmsg
  4638  001E16  0012               	return	
  4639  001E18                     __end_of_uart_recv_int_handler:
  4640                           	opt stack 0
  4641                           pclatu	equ	0xFFB
  4642                           pclath	equ	0xFFA
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           postinc0	equ	0xFEE
  4651                           fsr0h	equ	0xFEA
  4652                           fsr0l	equ	0xFE9
  4653                           wreg	equ	0xFE8
  4654                           indf1	equ	0xFE7
  4655                           fsr1h	equ	0xFE2
  4656                           fsr1l	equ	0xFE1
  4657                           bsr	equ	0xFE0
  4658                           indf2	equ	0xFDF
  4659                           postinc2	equ	0xFDE
  4660                           postdec2	equ	0xFDD
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8
  4664                           
  4665 ;; *************** function _parseUART *****************
  4666 ;; Defined at:
  4667 ;;		line 57 in file "source/my_uart.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4681 ;;      Params:         0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0
  4683 ;;      Temps:          5       0       0       0       0
  4684 ;;      Totals:         5       0       0       0       0
  4685 ;;Total ram usage:        5 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    9
  4688 ;; This function calls:
  4689 ;;		_ToMainLow_sendmsg
  4690 ;; This function is called by:
  4691 ;;		_uart_recv_int_handler
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text26
  4696  00159C                     __ptext26:
  4697                           	opt stack 0
  4698  00159C                     _parseUART:
  4699                           	opt stack 15
  4700                           
  4701                           ;my_uart.c: 59: switch(State)
  4702                           
  4703                           ;incstack = 0
  4704  00159C  D067               	goto	i1l3344
  4705  00159E                     i1l3318:
  4706                           
  4707                           ;my_uart.c: 62: {
  4708                           ;my_uart.c: 63: command_length = uc_ptr->buffer[uc_ptr->buflen-1] & 0x0f;
  4709  00159E  0EFF               	movlw	255
  4710  0015A0  6E1B               	movwf	??_parseUART& (0+255),c
  4711  0015A2  0EFF               	movlw	255
  4712  0015A4  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  4713  0015A6  EE20 F016          	lfsr	2,22
  4714  0015AA  504B               	movf	_uc_ptr,w,c
  4715  0015AC  26D9               	addwf	fsr2l,f,c
  4716  0015AE  504C               	movf	_uc_ptr+1,w,c
  4717  0015B0  22DA               	addwfc	fsr2h,f,c
  4718  0015B2  50DF               	movf	indf2,w,c
  4719  0015B4  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  4720  0015B6  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  4721  0015B8  501B               	movf	??_parseUART,w,c
  4722  0015BA  261D               	addwf	??_parseUART+2,f,c
  4723  0015BC  501C               	movf	??_parseUART+1,w,c
  4724  0015BE  221E               	addwfc	??_parseUART+3,f,c
  4725  0015C0  501D               	movf	??_parseUART+2,w,c
  4726  0015C2  244B               	addwf	_uc_ptr,w,c
  4727  0015C4  6ED9               	movwf	fsr2l,c
  4728  0015C6  501E               	movf	??_parseUART+3,w,c
  4729  0015C8  204C               	addwfc	_uc_ptr+1,w,c
  4730  0015CA  6EDA               	movwf	fsr2h,c
  4731  0015CC  50DF               	movf	indf2,w,c
  4732  0015CE  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  4733  0015D0  0E0F               	movlw	15
  4734  0015D2  161F               	andwf	??_parseUART+4,f,c
  4735  0015D4  501F               	movf	??_parseUART+4,w,c
  4736  0015D6  6E43               	movwf	_command_length,c
  4737  0015D8  6A44               	clrf	_command_length+1,c
  4738                           
  4739                           ;my_uart.c: 64: command_length *= 4;
  4740  0015DA  90D8               	bcf	status,0,c
  4741  0015DC  3643               	rlcf	_command_length,f,c
  4742  0015DE  3644               	rlcf	_command_length+1,f,c
  4743  0015E0  90D8               	bcf	status,0,c
  4744  0015E2  3643               	rlcf	_command_length,f,c
  4745  0015E4  3644               	rlcf	_command_length+1,f,c
  4746                           
  4747                           ;my_uart.c: 65: if(command_length != 0)
  4748  0015E6  5044               	movf	_command_length+1,w,c
  4749  0015E8  1043               	iorwf	_command_length,w,c
  4750  0015EA  B4D8               	btfsc	status,2,c
  4751  0015EC  D005               	goto	i1l3326
  4752                           
  4753                           ;my_uart.c: 66: {
  4754                           ;my_uart.c: 67: State = COMMAND;
  4755  0015EE  6E1B               	movwf	??_parseUART& (0+255),c
  4756  0015F0  0E02               	movlw	2
  4757  0015F2  6E4D               	movwf	_State,c
  4758  0015F4  501B               	movf	??_parseUART& (0+255),w,c
  4759                           
  4760                           ;my_uart.c: 68: }
  4761  0015F6  0012               	return	
  4762  0015F8                     i1l3326:
  4763                           
  4764                           ;my_uart.c: 69: else
  4765                           ;my_uart.c: 70: {
  4766                           ;my_uart.c: 71: State = CHECKSUM;
  4767  0015F8  6E1B               	movwf	??_parseUART& (0+255),c
  4768  0015FA  0E03               	movlw	3
  4769  0015FC  6E4D               	movwf	_State,c
  4770  0015FE  501B               	movf	??_parseUART& (0+255),w,c
  4771  001600  0012               	return	
  4772  001602                     i1l3328:
  4773                           
  4774                           ;my_uart.c: 76: {
  4775                           ;my_uart.c: 77: if(command_count+1 < command_length)
  4776  001602  0E01               	movlw	1
  4777  001604  2441               	addwf	_command_count,w,c
  4778  001606  6E1B               	movwf	??_parseUART& (0+255),c
  4779  001608  0E00               	movlw	0
  4780  00160A  2042               	addwfc	_command_count+1,w,c
  4781  00160C  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  4782  00160E  501C               	movf	??_parseUART+1,w,c
  4783  001610  0A80               	xorlw	128
  4784  001612  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  4785  001614  5043               	movf	_command_length,w,c
  4786  001616  5C1B               	subwf	??_parseUART,w,c
  4787  001618  5044               	movf	_command_length+1,w,c
  4788  00161A  0A80               	xorlw	128
  4789  00161C  581D               	subwfb	(??_parseUART+2)& (0+255),w,c
  4790  00161E  B0D8               	btfsc	status,0,c
  4791  001620  D003               	goto	i1l3332
  4792                           
  4793                           ;my_uart.c: 78: {command_count++;}
  4794  001622  4A41               	infsnz	_command_count,f,c
  4795  001624  2A42               	incf	_command_count+1,f,c
  4796  001626  0012               	return	
  4797  001628                     i1l3332:
  4798                           
  4799                           ;my_uart.c: 79: else
  4800                           ;my_uart.c: 80: {State = CHECKSUM;}
  4801  001628  6E1B               	movwf	??_parseUART& (0+255),c
  4802  00162A  0E03               	movlw	3
  4803  00162C  6E4D               	movwf	_State,c
  4804  00162E  501B               	movf	??_parseUART& (0+255),w,c
  4805  001630  0012               	return	
  4806  001632                     i1l3334:
  4807                           
  4808                           ;my_uart.c: 84: {
  4809                           ;my_uart.c: 85: ToMainLow_sendmsg(sizeof(unsigned char)*(2 + command_length),50,uc_ptr->
      +                          buffer);
  4810  001632  6E1B               	movwf	??_parseUART& (0+255),c
  4811  001634  0E32               	movlw	50
  4812  001636  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4813  001638  501B               	movf	??_parseUART& (0+255),w,c
  4814  00163A  C04C  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4815  00163E  C04B  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4816  001642  5043               	movf	_command_length,w,c
  4817  001644  0F02               	addlw	2
  4818  001646  ECE7  F010         	call	_ToMainLow_sendmsg
  4819                           
  4820                           ;my_uart.c: 86: uc_ptr->buflen = 0;
  4821  00164A  EE20 F016          	lfsr	2,22
  4822  00164E  504B               	movf	_uc_ptr,w,c
  4823  001650  26D9               	addwf	fsr2l,f,c
  4824  001652  504C               	movf	_uc_ptr+1,w,c
  4825  001654  22DA               	addwfc	fsr2h,f,c
  4826  001656  0E00               	movlw	0
  4827  001658  6EDF               	movwf	indf2,c
  4828                           
  4829                           ;my_uart.c: 87: State = MSGID;
  4830  00165A  6E1B               	movwf	??_parseUART& (0+255),c
  4831  00165C  0E01               	movlw	1
  4832  00165E  6E4D               	movwf	_State,c
  4833  001660  501B               	movf	??_parseUART& (0+255),w,c
  4834                           
  4835                           ;my_uart.c: 88: command_count = 0;
  4836  001662  0E00               	movlw	0
  4837  001664  6E42               	movwf	_command_count+1,c
  4838  001666  0E00               	movlw	0
  4839  001668  6E41               	movwf	_command_count,c
  4840                           
  4841                           ;my_uart.c: 89: break;
  4842  00166A  0012               	return	
  4843  00166C                     i1l3344:
  4844  00166C  504D               	movf	_State,w,c
  4845                           
  4846                           ; Switch size 1, requested type "space"
  4847                           ; Number of cases is 3, Range of values is 1 to 3
  4848                           ; switch strategies available:
  4849                           ; Name         Instructions Cycles
  4850                           ; simple_byte           10     6 (average)
  4851                           ;	Chosen strategy is simple_byte
  4852  00166E  0A01               	xorlw	1	; case 1
  4853  001670  B4D8               	btfsc	status,2,c
  4854  001672  D795               	goto	i1l3318
  4855  001674  0A03               	xorlw	3	; case 2
  4856  001676  B4D8               	btfsc	status,2,c
  4857  001678  D7C4               	goto	i1l3328
  4858  00167A  0A01               	xorlw	1	; case 3
  4859  00167C  A4D8               	btfss	status,2,c
  4860  00167E  0012               	return	
  4861  001680  D7D8               	goto	i1l3334
  4862  001682                     __end_of_parseUART:
  4863                           	opt stack 0
  4864                           pclatu	equ	0xFFB
  4865                           pclath	equ	0xFFA
  4866                           tblptru	equ	0xFF8
  4867                           tblptrh	equ	0xFF7
  4868                           tblptrl	equ	0xFF6
  4869                           tablat	equ	0xFF5
  4870                           prodh	equ	0xFF4
  4871                           prodl	equ	0xFF3
  4872                           intcon	equ	0xFF2
  4873                           postinc0	equ	0xFEE
  4874                           fsr0h	equ	0xFEA
  4875                           fsr0l	equ	0xFE9
  4876                           wreg	equ	0xFE8
  4877                           indf1	equ	0xFE7
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           bsr	equ	0xFE0
  4881                           indf2	equ	0xFDF
  4882                           postinc2	equ	0xFDE
  4883                           postdec2	equ	0xFDD
  4884                           fsr2h	equ	0xFDA
  4885                           fsr2l	equ	0xFD9
  4886                           status	equ	0xFD8
  4887                           
  4888 ;; *************** function _ReadUSART *****************
  4889 ;; Defined at:
  4890 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  data            1    0[COMRAM] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      unsigned char 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4904 ;;      Params:         0       0       0       0       0
  4905 ;;      Locals:         1       0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0
  4907 ;;      Totals:         1       0       0       0       0
  4908 ;;Total ram usage:        1 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    6
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_uart_recv_int_handler
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text27
  4919  00223A                     __ptext27:
  4920                           	opt stack 0
  4921  00223A                     _ReadUSART:
  4922                           	opt stack 18
  4923                           
  4924                           ;incstack = 0
  4925  00223A  0EF2               	movlw	242
  4926  00223C  164A               	andwf	_USART_Status,f,c
  4927  00223E  ACAB               	btfss	4011,6,c	;volatile
  4928  002240  D003               	goto	i1l560
  4929  002242  904A               	bcf	_USART_Status,0,c
  4930  002244  B0AB               	btfsc	4011,0,c	;volatile
  4931  002246  804A               	bsf	_USART_Status,0,c
  4932  002248                     i1l560:
  4933  002248  B4AB               	btfsc	4011,2,c	;volatile
  4934  00224A  844A               	bsf	_USART_Status,2,c
  4935  00224C  B2AB               	btfsc	4011,1,c	;volatile
  4936  00224E  864A               	bsf	_USART_Status,3,c
  4937  002250  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  4938  002254  5001               	movf	ReadUSART@data,w,c
  4939  002256  0012               	return	
  4940  002258                     __end_of_ReadUSART:
  4941                           	opt stack 0
  4942                           pclatu	equ	0xFFB
  4943                           pclath	equ	0xFFA
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           postinc0	equ	0xFEE
  4952                           fsr0h	equ	0xFEA
  4953                           fsr0l	equ	0xFE9
  4954                           wreg	equ	0xFE8
  4955                           indf1	equ	0xFE7
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           bsr	equ	0xFE0
  4959                           indf2	equ	0xFDF
  4960                           postinc2	equ	0xFDE
  4961                           postdec2	equ	0xFDD
  4962                           fsr2h	equ	0xFDA
  4963                           fsr2l	equ	0xFD9
  4964                           status	equ	0xFD8
  4965                           
  4966 ;; *************** function _timer1_int_handler *****************
  4967 ;; Defined at:
  4968 ;;		line 36 in file "source/user_interrupts.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  result          2   27[COMRAM] unsigned int 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;		None               void
  4975 ;; Registers used:
  4976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4982 ;;      Params:         0       0       0       0       0
  4983 ;;      Locals:         2       0       0       0       0
  4984 ;;      Temps:          1       0       0       0       0
  4985 ;;      Totals:         3       0       0       0       0
  4986 ;;Total ram usage:        3 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    9
  4989 ;; This function calls:
  4990 ;;		_ReadTimer1
  4991 ;;		_ToMainLow_sendmsg
  4992 ;;		_WriteTimer1
  4993 ;; This function is called by:
  4994 ;;		_InterruptHandlerLow
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text28
  4999  002146                     __ptext28:
  5000                           	opt stack 0
  5001  002146                     _timer1_int_handler:
  5002                           	opt stack 16
  5003                           
  5004                           ;user_interrupts.c: 37: unsigned int result;
  5005                           ;user_interrupts.c: 44: result = ReadTimer1();
  5006                           
  5007                           ;incstack = 0
  5008  002146  EC65  F011         	call	_ReadTimer1	;wreg free
  5009  00214A  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5010  00214E  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5011                           
  5012                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5013  002152  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5014  002154  0E0B               	movlw	11
  5015  002156  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5016  002158  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5017  00215A  0E00               	movlw	0
  5018  00215C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5019  00215E  0E00               	movlw	0
  5020  002160  6E18               	movwf	ToMainLow_sendmsg@data,c
  5021  002162  0E00               	movlw	0
  5022  002164  ECE7  F010         	call	_ToMainLow_sendmsg
  5023                           
  5024                           ;user_interrupts.c: 48: WriteTimer1(0);
  5025  002168  0E00               	movlw	0
  5026  00216A  6E02               	movwf	WriteTimer1@timer1+1,c
  5027  00216C  0E00               	movlw	0
  5028  00216E  6E01               	movwf	WriteTimer1@timer1,c
  5029  002170  EC5C  F011         	call	_WriteTimer1	;wreg free
  5030  002174  0012               	return	
  5031  002176                     __end_of_timer1_int_handler:
  5032                           	opt stack 0
  5033                           pclatu	equ	0xFFB
  5034                           pclath	equ	0xFFA
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           postinc0	equ	0xFEE
  5043                           fsr0h	equ	0xFEA
  5044                           fsr0l	equ	0xFE9
  5045                           wreg	equ	0xFE8
  5046                           indf1	equ	0xFE7
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           bsr	equ	0xFE0
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _WriteTimer1 *****************
  5058 ;; Defined at:
  5059 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  timer1          2    0[COMRAM] unsigned int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  timer           2    2[COMRAM] struct Timers
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		None
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5073 ;;      Params:         2       0       0       0       0
  5074 ;;      Locals:         2       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0
  5076 ;;      Totals:         4       0       0       0       0
  5077 ;;Total ram usage:        4 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    6
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_timer1_int_handler
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text29
  5088  0022B8                     __ptext29:
  5089                           	opt stack 0
  5090  0022B8                     _WriteTimer1:
  5091                           	opt stack 18
  5092                           
  5093                           ;incstack = 0
  5094  0022B8  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5095  0022BC  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5096  0022C0  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5097  0022C4  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5098  0022C8  0012               	return	
  5099  0022CA                     __end_of_WriteTimer1:
  5100                           	opt stack 0
  5101                           pclatu	equ	0xFFB
  5102                           pclath	equ	0xFFA
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           postinc0	equ	0xFEE
  5111                           fsr0h	equ	0xFEA
  5112                           fsr0l	equ	0xFE9
  5113                           wreg	equ	0xFE8
  5114                           indf1	equ	0xFE7
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           bsr	equ	0xFE0
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _ToMainLow_sendmsg *****************
  5126 ;; Defined at:
  5127 ;;		line 103 in file "source/messages.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  length          1    wreg     unsigned char 
  5130 ;;  msgtype         1   22[COMRAM] unsigned char 
  5131 ;;  data            2   23[COMRAM] PTR void 
  5132 ;;		 -> NULL(0), main@uc(23), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  length          1   25[COMRAM] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      char 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5144 ;;      Params:         3       0       0       0       0
  5145 ;;      Locals:         1       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0
  5147 ;;      Totals:         4       0       0       0       0
  5148 ;;Total ram usage:        4 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    8
  5151 ;; This function calls:
  5152 ;;		_send_msg
  5153 ;; This function is called by:
  5154 ;;		_uart_recv_int_handler
  5155 ;;		_parseUART
  5156 ;;		_timer1_int_handler
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text30
  5161  0021CE                     __ptext30:
  5162                           	opt stack 0
  5163  0021CE                     _ToMainLow_sendmsg:
  5164                           	opt stack 15
  5165                           
  5166                           ;incstack = 0
  5167                           ;ToMainLow_sendmsg@length stored from wreg
  5168  0021CE  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5169                           
  5170                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5171                           ;	Return value of _ToMainLow_sendmsg is never used
  5172  0021D2  0101               	movlb	1	; () banked
  5173  0021D4  0E01               	movlw	high _ToMainLow_MQ
  5174  0021D6  6E0C               	movwf	send_msg@qptr+1,c
  5175  0021D8  0101               	movlb	1	; () banked
  5176  0021DA  0E84               	movlw	low _ToMainLow_MQ
  5177  0021DC  6E0B               	movwf	send_msg@qptr,c
  5178  0021DE  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  5179  0021E2  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  5180  0021E6  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  5181  0021EA  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  5182  0021EE  ECDB  F00C         	call	_send_msg	;wreg free
  5183  0021F2  0012               	return	
  5184  0021F4                     __end_of_ToMainLow_sendmsg:
  5185                           	opt stack 0
  5186                           pclatu	equ	0xFFB
  5187                           pclath	equ	0xFFA
  5188                           tblptru	equ	0xFF8
  5189                           tblptrh	equ	0xFF7
  5190                           tblptrl	equ	0xFF6
  5191                           tablat	equ	0xFF5
  5192                           prodh	equ	0xFF4
  5193                           prodl	equ	0xFF3
  5194                           intcon	equ	0xFF2
  5195                           postinc0	equ	0xFEE
  5196                           fsr0h	equ	0xFEA
  5197                           fsr0l	equ	0xFE9
  5198                           wreg	equ	0xFE8
  5199                           indf1	equ	0xFE7
  5200                           fsr1h	equ	0xFE2
  5201                           fsr1l	equ	0xFE1
  5202                           bsr	equ	0xFE0
  5203                           indf2	equ	0xFDF
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _send_msg *****************
  5211 ;; Defined at:
  5212 ;;		line 24 in file "source/messages.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5215 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5216 ;;  length          1   12[COMRAM] unsigned char 
  5217 ;;  msgtype         1   13[COMRAM] unsigned char 
  5218 ;;  data            2   14[COMRAM] PTR void 
  5219 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), NULL(0), 
  5220 ;;		 -> main@ic(77), main@uc(23), 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  5223 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5224 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5225 ;;  tlength         2   17[COMRAM] unsigned int 
  5226 ;;  slot            1   19[COMRAM] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      char 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5236 ;;      Params:         6       0       0       0       0
  5237 ;;      Locals:         5       0       0       0       0
  5238 ;;      Temps:          1       0       0       0       0
  5239 ;;      Totals:        12       0       0       0       0
  5240 ;;Total ram usage:       12 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    7
  5243 ;; This function calls:
  5244 ;;		i1_memcpy
  5245 ;; This function is called by:
  5246 ;;		_ToMainLow_sendmsg
  5247 ;;		_FromMainLow_sendmsg
  5248 ;;		_FromMainHigh_sendmsg
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text31
  5253  0019B6                     __ptext31:
  5254                           	opt stack 0
  5255  0019B6                     _send_msg:
  5256                           	opt stack 15
  5257                           
  5258                           ;messages.c: 25: unsigned char slot;
  5259                           ;messages.c: 27: msg *qmsg;
  5260                           ;messages.c: 28: size_t tlength = length;
  5261                           
  5262                           ;incstack = 0
  5263  0019B6  C00D  F012         	movff	send_msg@length,send_msg@tlength
  5264  0019BA  6A13               	clrf	send_msg@tlength+1,c
  5265                           
  5266                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5267  0019BC  EE20 F064          	lfsr	2,100
  5268  0019C0  500B               	movf	send_msg@qptr,w,c
  5269  0019C2  26D9               	addwf	fsr2l,f,c
  5270  0019C4  500C               	movf	send_msg@qptr+1,w,c
  5271  0019C6  22DA               	addwfc	fsr2h,f,c
  5272  0019C8  50DF               	movf	indf2,w,c
  5273  0019CA  6E14               	movwf	send_msg@slot,c
  5274                           
  5275                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5276  0019CC  5014               	movf	send_msg@slot,w,c
  5277  0019CE  0D19               	mullw	25
  5278  0019D0  50F3               	movf	prodl,w,c
  5279  0019D2  240B               	addwf	send_msg@qptr,w,c
  5280  0019D4  6E15               	movwf	send_msg@qmsg,c
  5281  0019D6  50F4               	movf	prodh,w,c
  5282  0019D8  200C               	addwfc	send_msg@qptr+1,w,c
  5283  0019DA  6E16               	movwf	send_msg@qmsg+1,c
  5284                           
  5285                           ;messages.c: 41: if (qmsg->full != 0) {
  5286  0019DC  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5287  0019E0  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5288  0019E4  50DF               	movf	indf2,w,c
  5289  0019E6  B4D8               	btfsc	status,2,c
  5290  0019E8  D002               	goto	i1l3294
  5291                           
  5292                           ;messages.c: 42: return (-1);
  5293  0019EA  0EFF               	movlw	255
  5294  0019EC  0012               	return	
  5295  0019EE                     i1l3294:
  5296                           
  5297                           ;messages.c: 43: }
  5298                           ;messages.c: 46: qmsg->length = length;
  5299  0019EE  EE20 F001          	lfsr	2,1
  5300  0019F2  5015               	movf	send_msg@qmsg,w,c
  5301  0019F4  26D9               	addwf	fsr2l,f,c
  5302  0019F6  5016               	movf	send_msg@qmsg+1,w,c
  5303  0019F8  22DA               	addwfc	fsr2h,f,c
  5304  0019FA  C00D  FFDF         	movff	send_msg@length,indf2
  5305                           
  5306                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5307  0019FE  EE20 F002          	lfsr	2,2
  5308  001A02  5015               	movf	send_msg@qmsg,w,c
  5309  001A04  26D9               	addwf	fsr2l,f,c
  5310  001A06  5016               	movf	send_msg@qmsg+1,w,c
  5311  001A08  22DA               	addwfc	fsr2h,f,c
  5312  001A0A  C00E  FFDF         	movff	send_msg@msgtype,indf2
  5313                           
  5314                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5315  001A0E  0E03               	movlw	3
  5316  001A10  2415               	addwf	send_msg@qmsg,w,c
  5317  001A12  6E01               	movwf	i1memcpy@d1,c
  5318  001A14  0E00               	movlw	0
  5319  001A16  2016               	addwfc	send_msg@qmsg+1,w,c
  5320  001A18  6E02               	movwf	i1memcpy@d1+1,c
  5321  001A1A  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  5322  001A1E  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  5323  001A22  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  5324  001A26  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  5325  001A2A  EC2D  F010         	call	i1_memcpy	;wreg free
  5326                           
  5327                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5328  001A2E  EE20 F064          	lfsr	2,100
  5329  001A32  500B               	movf	send_msg@qptr,w,c
  5330  001A34  26D9               	addwf	fsr2l,f,c
  5331  001A36  500C               	movf	send_msg@qptr+1,w,c
  5332  001A38  22DA               	addwfc	fsr2h,f,c
  5333  001A3A  EE10 F064          	lfsr	1,100
  5334  001A3E  500B               	movf	send_msg@qptr,w,c
  5335  001A40  26E1               	addwf	fsr1l,f,c
  5336  001A42  500C               	movf	send_msg@qptr+1,w,c
  5337  001A44  22E2               	addwfc	fsr1h,f,c
  5338  001A46  50E7               	movf	indf1,w,c
  5339  001A48  6E11               	movwf	??_send_msg& (0+255),c
  5340  001A4A  2811               	incf	??_send_msg,w,c
  5341  001A4C  0B03               	andlw	3
  5342  001A4E  6EDF               	movwf	indf2,c
  5343                           
  5344                           ;messages.c: 59: qmsg->full = 1;
  5345  001A50  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  5346  001A54  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5347  001A58  0E01               	movlw	1
  5348  001A5A  6EDF               	movwf	indf2,c
  5349                           
  5350                           ;messages.c: 60: return (1);
  5351  001A5C  0E01               	movlw	1
  5352  001A5E  0012               	return	
  5353  001A60                     __end_of_send_msg:
  5354                           	opt stack 0
  5355                           pclatu	equ	0xFFB
  5356                           pclath	equ	0xFFA
  5357                           tblptru	equ	0xFF8
  5358                           tblptrh	equ	0xFF7
  5359                           tblptrl	equ	0xFF6
  5360                           tablat	equ	0xFF5
  5361                           prodh	equ	0xFF4
  5362                           prodl	equ	0xFF3
  5363                           intcon	equ	0xFF2
  5364                           postinc0	equ	0xFEE
  5365                           fsr0h	equ	0xFEA
  5366                           fsr0l	equ	0xFE9
  5367                           wreg	equ	0xFE8
  5368                           indf1	equ	0xFE7
  5369                           fsr1h	equ	0xFE2
  5370                           fsr1l	equ	0xFE1
  5371                           bsr	equ	0xFE0
  5372                           indf2	equ	0xFDF
  5373                           postinc2	equ	0xFDE
  5374                           postdec2	equ	0xFDD
  5375                           fsr2h	equ	0xFDA
  5376                           fsr2l	equ	0xFD9
  5377                           status	equ	0xFD8
  5378                           
  5379 ;; *************** function i1_memcpy *****************
  5380 ;; Defined at:
  5381 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  d1              2    0[COMRAM] PTR void 
  5384 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5385 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  5386 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  5387 ;;  s1              2    2[COMRAM] PTR const void 
  5388 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5389 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5390 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  5391 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  5392 ;;		 -> main@ic(77), main@uc(23), 
  5393 ;;  n               2    4[COMRAM] unsigned int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5396 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5397 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5398 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  5399 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  5400 ;;		 -> main@ic(77), main@uc(23), 
  5401 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5402 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5403 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  5404 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  2    0[COMRAM] PTR void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5414 ;;      Params:         6       0       0       0       0
  5415 ;;      Locals:         4       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0
  5417 ;;      Totals:        10       0       0       0       0
  5418 ;;Total ram usage:       10 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    6
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_send_msg
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text32
  5429  00205A                     __ptext32:
  5430                           	opt stack 0
  5431  00205A                     i1_memcpy:
  5432                           	opt stack 15
  5433                           
  5434                           ;incstack = 0
  5435  00205A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5436  00205E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5437  002062  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5438  002066  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5439  00206A  D00E               	goto	i1l3270
  5440  00206C                     i1l3264:
  5441  00206C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5442  002070  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5443  002074  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5444  002078  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5445  00207C  CFDF FFE7          	movff	indf2,indf1
  5446  002080  4A09               	infsnz	i1memcpy@s,f,c
  5447  002082  2A0A               	incf	i1memcpy@s+1,f,c
  5448  002084  4A07               	infsnz	i1memcpy@d,f,c
  5449  002086  2A08               	incf	i1memcpy@d+1,f,c
  5450  002088                     i1l3270:
  5451  002088  0605               	decf	i1memcpy@n,f,c
  5452  00208A  A0D8               	btfss	status,0,c
  5453  00208C  0606               	decf	i1memcpy@n+1,f,c
  5454  00208E  2805               	incf	i1memcpy@n& (0+255),w,c
  5455  002090  B4D8               	btfsc	status,2,c
  5456  002092  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5457  002094  B4D8               	btfsc	status,2,c
  5458                           
  5459                           ;	Return value of i1_memcpy is never used
  5460  002096  0012               	return	
  5461  002098  D7E9               	goto	i1l3264
  5462  00209A                     __end_ofi1_memcpy:
  5463                           	opt stack 0
  5464                           pclatu	equ	0xFFB
  5465                           pclath	equ	0xFFA
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           intcon	equ	0xFF2
  5473                           postinc0	equ	0xFEE
  5474                           fsr0h	equ	0xFEA
  5475                           fsr0l	equ	0xFE9
  5476                           wreg	equ	0xFE8
  5477                           indf1	equ	0xFE7
  5478                           fsr1h	equ	0xFE2
  5479                           fsr1l	equ	0xFE1
  5480                           bsr	equ	0xFE0
  5481                           indf2	equ	0xFDF
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8
  5487                           
  5488 ;; *************** function _ReadTimer1 *****************
  5489 ;; Defined at:
  5490 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  timer           2    2[COMRAM] struct Timers
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2    0[COMRAM] unsigned int 
  5497 ;; Registers used:
  5498 ;;		None
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5504 ;;      Params:         2       0       0       0       0
  5505 ;;      Locals:         2       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0
  5507 ;;      Totals:         4       0       0       0       0
  5508 ;;Total ram usage:        4 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    6
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_timer1_int_handler
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text33
  5519  0022CA                     __ptext33:
  5520                           	opt stack 0
  5521  0022CA                     _ReadTimer1:
  5522                           	opt stack 18
  5523                           
  5524                           ;incstack = 0
  5525  0022CA  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5526  0022CE  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5527  0022D2  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5528  0022D6  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5529  0022DA  0012               	return	
  5530  0022DC                     __end_of_ReadTimer1:
  5531                           	opt stack 0
  5532                           pclatu	equ	0xFFB
  5533                           pclath	equ	0xFFA
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           intcon	equ	0xFF2
  5541                           postinc0	equ	0xFEE
  5542                           fsr0h	equ	0xFEA
  5543                           fsr0l	equ	0xFE9
  5544                           wreg	equ	0xFE8
  5545                           indf1	equ	0xFE7
  5546                           fsr1h	equ	0xFE2
  5547                           fsr1l	equ	0xFE1
  5548                           bsr	equ	0xFE0
  5549                           indf2	equ	0xFDF
  5550                           postinc2	equ	0xFDE
  5551                           postdec2	equ	0xFDD
  5552                           fsr2h	equ	0xFDA
  5553                           fsr2l	equ	0xFD9
  5554                           status	equ	0xFD8
  5555                           
  5556 ;; *************** function _InterruptHandlerHigh *****************
  5557 ;; Defined at:
  5558 ;;		line 83 in file "source/interrupts.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;		None               void
  5565 ;; Registers used:
  5566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5572 ;;      Params:         0       0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0
  5574 ;;      Temps:          0      14       0       0       0
  5575 ;;      Totals:         0      14       0       0       0
  5576 ;;Total ram usage:       14 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    5
  5579 ;; This function calls:
  5580 ;;		_SleepIfOkay
  5581 ;;		_i2c_int_handler
  5582 ;;		_timer0_int_handler
  5583 ;; This function is called by:
  5584 ;;		Interrupt level 2
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	intcode
  5589  000008                     __pintcode:
  5590                           	opt stack 0
  5591  000008                     _InterruptHandlerHigh:
  5592                           	opt stack 15
  5593                           
  5594                           ;incstack = 0
  5595  000008  CFFA F099          	movff	pclath,??_InterruptHandlerHigh
  5596  00000C  CFFB F09A          	movff	pclatu,??_InterruptHandlerHigh+1
  5597  000010  EFBB  F00D         	goto	int_func
  5598                           pclatu	equ	0xFFB
  5599                           pclath	equ	0xFFA
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           prodh	equ	0xFF4
  5605                           prodl	equ	0xFF3
  5606                           intcon	equ	0xFF2
  5607                           postinc0	equ	0xFEE
  5608                           fsr0h	equ	0xFEA
  5609                           fsr0l	equ	0xFE9
  5610                           wreg	equ	0xFE8
  5611                           indf1	equ	0xFE7
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           bsr	equ	0xFE0
  5615                           indf2	equ	0xFDF
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           fsr2h	equ	0xFDA
  5619                           fsr2l	equ	0xFD9
  5620                           status	equ	0xFD8
  5621                           
  5622                           	psect	intcode_body
  5623  001B76                     __pintcode_body:
  5624                           	opt stack 15
  5625  001B76                     int_func:
  5626                           	opt stack 15
  5627  001B76  CFE9 F09B          	movff	fsr0l,??_InterruptHandlerHigh+2
  5628  001B7A  CFEA F09C          	movff	fsr0h,??_InterruptHandlerHigh+3
  5629  001B7E  CFE1 F09D          	movff	fsr1l,??_InterruptHandlerHigh+4
  5630  001B82  CFE2 F09E          	movff	fsr1h,??_InterruptHandlerHigh+5
  5631  001B86  CFD9 F09F          	movff	fsr2l,??_InterruptHandlerHigh+6
  5632  001B8A  CFDA F0A0          	movff	fsr2h,??_InterruptHandlerHigh+7
  5633  001B8E  CFF3 F0A1          	movff	prodl,??_InterruptHandlerHigh+8
  5634  001B92  CFF4 F0A2          	movff	prodh,??_InterruptHandlerHigh+9
  5635  001B96  CFF6 F0A3          	movff	tblptrl,??_InterruptHandlerHigh+10
  5636  001B9A  CFF7 F0A4          	movff	tblptrh,??_InterruptHandlerHigh+11
  5637  001B9E  CFF8 F0A5          	movff	tblptru,??_InterruptHandlerHigh+12
  5638  001BA2  CFF5 F0A6          	movff	tablat,??_InterruptHandlerHigh+13
  5639                           
  5640                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5641  001BA6  A69E               	btfss	3998,3,c	;volatile
  5642  001BA8  D003               	goto	i2l3378
  5643                           
  5644                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5645  001BAA  969E               	bcf	3998,3,c	;volatile
  5646                           
  5647                           ;interrupts.c: 92: i2c_int_handler();
  5648  001BAC  EC0C  F011         	call	_i2c_int_handler	;wreg free
  5649  001BB0                     i2l3378:
  5650                           
  5651                           ;interrupts.c: 93: }
  5652                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5653  001BB0  A4F2               	btfss	intcon,2,c	;volatile
  5654  001BB2  D003               	goto	i2l3384
  5655                           
  5656                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5657  001BB4  94F2               	bcf	intcon,2,c	;volatile
  5658                           
  5659                           ;interrupts.c: 99: timer0_int_handler();
  5660  001BB6  EC79  F00D         	call	_timer0_int_handler	;wreg free
  5661  001BBA                     i2l3384:
  5662                           
  5663                           ;interrupts.c: 100: }
  5664                           ;interrupts.c: 109: SleepIfOkay();
  5665  001BBA  EC5E  F00F         	call	_SleepIfOkay	;wreg free
  5666  001BBE  C0A6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5667  001BC2  C0A5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5668  001BC6  C0A4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5669  001BCA  C0A3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5670  001BCE  C0A2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5671  001BD2  C0A1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5672  001BD6  C0A0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5673  001BDA  C09F  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5674  001BDE  C09E  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5675  001BE2  C09D  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5676  001BE6  C09C  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5677  001BEA  C09B  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5678  001BEE  C09A  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5679  001BF2  C099  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5680  001BF6  0011               	retfie		f
  5681  001BF8                     __end_of_InterruptHandlerHigh:
  5682                           	opt stack 0
  5683                           pclatu	equ	0xFFB
  5684                           pclath	equ	0xFFA
  5685                           tblptru	equ	0xFF8
  5686                           tblptrh	equ	0xFF7
  5687                           tblptrl	equ	0xFF6
  5688                           tablat	equ	0xFF5
  5689                           prodh	equ	0xFF4
  5690                           prodl	equ	0xFF3
  5691                           intcon	equ	0xFF2
  5692                           postinc0	equ	0xFEE
  5693                           fsr0h	equ	0xFEA
  5694                           fsr0l	equ	0xFE9
  5695                           wreg	equ	0xFE8
  5696                           indf1	equ	0xFE7
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           bsr	equ	0xFE0
  5700                           indf2	equ	0xFDF
  5701                           postinc2	equ	0xFDE
  5702                           postdec2	equ	0xFDD
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707 ;; *************** function _timer0_int_handler *****************
  5708 ;; Defined at:
  5709 ;;		line 16 in file "source/user_interrupts.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  val             2   21[BANK0 ] unsigned int 
  5714 ;;  msgtype         2   19[BANK0 ] int 
  5715 ;;  length          2   17[BANK0 ] int 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;		None               void
  5718 ;; Registers used:
  5719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5725 ;;      Params:         0       0       0       0       0
  5726 ;;      Locals:         0       6       0       0       0
  5727 ;;      Temps:          0       1       0       0       0
  5728 ;;      Totals:         0       7       0       0       0
  5729 ;;Total ram usage:        7 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    3
  5732 ;; This function calls:
  5733 ;;		_FromMainHigh_recvmsg
  5734 ;;		_ToMainHigh_sendmsg
  5735 ;;		_WriteTimer0
  5736 ;; This function is called by:
  5737 ;;		_InterruptHandlerHigh
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text35
  5742  001AF2                     __ptext35:
  5743                           	opt stack 0
  5744  001AF2                     _timer0_int_handler:
  5745                           	opt stack 16
  5746                           
  5747                           ;user_interrupts.c: 17: unsigned int val;
  5748                           ;user_interrupts.c: 18: int length, msgtype;
  5749                           ;user_interrupts.c: 25: WriteTimer0(0);
  5750                           
  5751                           ;incstack = 0
  5752  001AF2  0E00               	movlw	0
  5753  001AF4  6E33               	movwf	WriteTimer0@timer0+1,c
  5754  001AF6  0E00               	movlw	0
  5755  001AF8  6E32               	movwf	WriteTimer0@timer0,c
  5756  001AFA  EC6E  F011         	call	_WriteTimer0	;wreg free
  5757                           
  5758                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5759  001AFE  0100               	movlb	0	; () banked
  5760  001B00  0E00               	movlw	high timer0_int_handler@msgtype
  5761  001B02  0100               	movlb	0	; () banked
  5762  001B04  0100               	movlb	0	; () banked
  5763  001B06  6F8D               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  5764  001B08  0100               	movlb	0	; () banked
  5765  001B0A  0E93               	movlw	low timer0_int_handler@msgtype
  5766  001B0C  0100               	movlb	0	; () banked
  5767  001B0E  0100               	movlb	0	; () banked
  5768  001B10  6F8C               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  5769  001B12  0100               	movlb	0	; () banked
  5770  001B14  0E00               	movlw	high timer0_int_handler@val
  5771  001B16  0100               	movlb	0	; () banked
  5772  001B18  0100               	movlb	0	; () banked
  5773  001B1A  6F8F               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  5774  001B1C  0100               	movlb	0	; () banked
  5775  001B1E  0E95               	movlw	low timer0_int_handler@val
  5776  001B20  0100               	movlb	0	; () banked
  5777  001B22  0100               	movlb	0	; () banked
  5778  001B24  6F8E               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  5779  001B26  0E02               	movlw	2
  5780  001B28  EC0C  F010         	call	_FromMainHigh_recvmsg
  5781  001B2C  0100               	movlb	0	; () banked
  5782  001B2E  0100               	movlb	0	; () banked
  5783  001B30  6F91               	movwf	timer0_int_handler@length& (0+255),b
  5784  001B32  0100               	movlb	0	; () banked
  5785  001B34  6B92               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5786  001B36  0100               	movlb	0	; () banked
  5787  001B38  BF91               	btfsc	timer0_int_handler@length& (0+255),7,b
  5788  001B3A  0792               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  5792  001B3C  0100               	movlb	0	; () banked
  5793  001B3E  0100               	movlb	0	; () banked
  5794  001B40  5191               	movf	timer0_int_handler@length& (0+255),w,b
  5795  001B42  0A02               	xorlw	2
  5796  001B44  1192               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5797  001B46  A4D8               	btfss	status,2,c
  5798  001B48  0012               	return	
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5802  001B4A  0100               	movlb	0	; () banked
  5803  001B4C  6F90               	movwf	??_timer0_int_handler& (0+255),b
  5804  001B4E  0E0A               	movlw	10
  5805  001B50  0100               	movlb	0	; () banked
  5806  001B52  0100               	movlb	0	; () banked
  5807  001B54  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5808  001B56  0100               	movlb	0	; () banked
  5809  001B58  5190               	movf	??_timer0_int_handler& (0+255),w,b
  5810  001B5A  0100               	movlb	0	; () banked
  5811  001B5C  0E00               	movlw	high timer0_int_handler@val
  5812  001B5E  0100               	movlb	0	; () banked
  5813  001B60  0100               	movlb	0	; () banked
  5814  001B62  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5815  001B64  0100               	movlb	0	; () banked
  5816  001B66  0E95               	movlw	low timer0_int_handler@val
  5817  001B68  0100               	movlb	0	; () banked
  5818  001B6A  0100               	movlb	0	; () banked
  5819  001B6C  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5820  001B6E  0E02               	movlw	2
  5821  001B70  EC88  F010         	call	_ToMainHigh_sendmsg
  5822  001B74  0012               	return	
  5823  001B76                     __end_of_timer0_int_handler:
  5824                           	opt stack 0
  5825                           pclatu	equ	0xFFB
  5826                           pclath	equ	0xFFA
  5827                           tblptru	equ	0xFF8
  5828                           tblptrh	equ	0xFF7
  5829                           tblptrl	equ	0xFF6
  5830                           tablat	equ	0xFF5
  5831                           prodh	equ	0xFF4
  5832                           prodl	equ	0xFF3
  5833                           intcon	equ	0xFF2
  5834                           postinc0	equ	0xFEE
  5835                           fsr0h	equ	0xFEA
  5836                           fsr0l	equ	0xFE9
  5837                           wreg	equ	0xFE8
  5838                           indf1	equ	0xFE7
  5839                           fsr1h	equ	0xFE2
  5840                           fsr1l	equ	0xFE1
  5841                           bsr	equ	0xFE0
  5842                           indf2	equ	0xFDF
  5843                           postinc2	equ	0xFDE
  5844                           postdec2	equ	0xFDD
  5845                           fsr2h	equ	0xFDA
  5846                           fsr2l	equ	0xFD9
  5847                           status	equ	0xFD8
  5848                           
  5849 ;; *************** function _WriteTimer0 *****************
  5850 ;; Defined at:
  5851 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  timer0          2   49[COMRAM] unsigned int 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  timer           2   51[COMRAM] struct Timers
  5856 ;; Return value:  Size  Location     Type
  5857 ;;		None               void
  5858 ;; Registers used:
  5859 ;;		None
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5865 ;;      Params:         2       0       0       0       0
  5866 ;;      Locals:         2       0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0
  5868 ;;      Totals:         4       0       0       0       0
  5869 ;;Total ram usage:        4 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_timer0_int_handler
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text36
  5879  0022DC                     __ptext36:
  5880                           	opt stack 0
  5881  0022DC                     _WriteTimer0:
  5882                           	opt stack 18
  5883                           
  5884                           ;incstack = 0
  5885  0022DC  C032  F034         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5886  0022E0  C033  F035         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5887  0022E4  C035  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5888  0022E8  C034  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5889  0022EC  0012               	return	
  5890  0022EE                     __end_of_WriteTimer0:
  5891                           	opt stack 0
  5892                           pclatu	equ	0xFFB
  5893                           pclath	equ	0xFFA
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodh	equ	0xFF4
  5899                           prodl	equ	0xFF3
  5900                           intcon	equ	0xFF2
  5901                           postinc0	equ	0xFEE
  5902                           fsr0h	equ	0xFEA
  5903                           fsr0l	equ	0xFE9
  5904                           wreg	equ	0xFE8
  5905                           indf1	equ	0xFE7
  5906                           fsr1h	equ	0xFE2
  5907                           fsr1l	equ	0xFE1
  5908                           bsr	equ	0xFE0
  5909                           indf2	equ	0xFDF
  5910                           postinc2	equ	0xFDE
  5911                           postdec2	equ	0xFDD
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _FromMainHigh_recvmsg *****************
  5917 ;; Defined at:
  5918 ;;		line 183 in file "source/messages.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  maxlength       1    wreg     unsigned char 
  5921 ;;  msgtype         2   12[BANK0 ] PTR unsigned char 
  5922 ;;		 -> timer0_int_handler@msgtype(2), 
  5923 ;;  data            2   14[BANK0 ] PTR void 
  5924 ;;		 -> timer0_int_handler@val(2), 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  maxlength       1   61[COMRAM] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      char 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5936 ;;      Params:         0       4       0       0       0
  5937 ;;      Locals:         1       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0
  5939 ;;      Totals:         1       4       0       0       0
  5940 ;;Total ram usage:        5 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    2
  5943 ;; This function calls:
  5944 ;;		i2_recv_msg
  5945 ;; This function is called by:
  5946 ;;		_timer0_int_handler
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text37
  5951  002018                     __ptext37:
  5952                           	opt stack 0
  5953  002018                     _FromMainHigh_recvmsg:
  5954                           	opt stack 16
  5955                           
  5956                           ;incstack = 0
  5957                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5958  002018  CFE8 F03E          	movff	wreg,FromMainHigh_recvmsg@maxlength
  5959                           
  5960                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5961  00201C  0103               	movlb	3	; () banked
  5962  00201E  0E03               	movlw	high _FromMainHigh_MQ
  5963  002020  0100               	movlb	0	; () banked
  5964  002022  0100               	movlb	0	; () banked
  5965  002024  6F81               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  5966  002026  0103               	movlb	3	; () banked
  5967  002028  0E00               	movlw	low _FromMainHigh_MQ
  5968  00202A  0100               	movlb	0	; () banked
  5969  00202C  0100               	movlb	0	; () banked
  5970  00202E  6F80               	movwf	i2recv_msg@qptr& (0+255),b
  5971  002030  C03E  F082         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5972  002034  0100               	movlb	0	; () banked
  5973  002036  0100               	movlb	0	; () banked
  5974  002038  C08D  F084         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5975  00203C  0100               	movlb	0	; () banked
  5976  00203E  0100               	movlb	0	; () banked
  5977  002040  C08C  F083         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5978  002044  0100               	movlb	0	; () banked
  5979  002046  0100               	movlb	0	; () banked
  5980  002048  C08F  F086         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5981  00204C  0100               	movlb	0	; () banked
  5982  00204E  0100               	movlb	0	; () banked
  5983  002050  C08E  F085         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5984  002054  ECC0  F009         	call	i2_recv_msg	;wreg free
  5985  002058  0012               	return	
  5986  00205A                     __end_of_FromMainHigh_recvmsg:
  5987                           	opt stack 0
  5988                           pclatu	equ	0xFFB
  5989                           pclath	equ	0xFFA
  5990                           tblptru	equ	0xFF8
  5991                           tblptrh	equ	0xFF7
  5992                           tblptrl	equ	0xFF6
  5993                           tablat	equ	0xFF5
  5994                           prodh	equ	0xFF4
  5995                           prodl	equ	0xFF3
  5996                           intcon	equ	0xFF2
  5997                           postinc0	equ	0xFEE
  5998                           fsr0h	equ	0xFEA
  5999                           fsr0l	equ	0xFE9
  6000                           wreg	equ	0xFE8
  6001                           indf1	equ	0xFE7
  6002                           fsr1h	equ	0xFE2
  6003                           fsr1l	equ	0xFE1
  6004                           bsr	equ	0xFE0
  6005                           indf2	equ	0xFDF
  6006                           postinc2	equ	0xFDE
  6007                           postdec2	equ	0xFDD
  6008                           fsr2h	equ	0xFDA
  6009                           fsr2l	equ	0xFD9
  6010                           status	equ	0xFD8
  6011                           
  6012 ;; *************** function i2_recv_msg *****************
  6013 ;; Defined at:
  6014 ;;		line 63 in file "source/messages.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  6017 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6018 ;;  maxlength       1    2[BANK0 ] unsigned char 
  6019 ;;  msgtype         2    3[BANK0 ] PTR unsigned char 
  6020 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6021 ;;  data            2    5[BANK0 ] PTR void 
  6022 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
  6025 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6026 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6027 ;;  recv_msg        2    8[BANK0 ] unsigned int 
  6028 ;;  recv_msg        1    7[BANK0 ] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      char 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6038 ;;      Params:         0       7       0       0       0
  6039 ;;      Locals:         0       5       0       0       0
  6040 ;;      Temps:          2       0       0       0       0
  6041 ;;      Totals:         2      12       0       0       0
  6042 ;;Total ram usage:       14 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    1
  6045 ;; This function calls:
  6046 ;;		i2_memcpy
  6047 ;; This function is called by:
  6048 ;;		_FromMainHigh_recvmsg
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text38
  6053  001380                     __ptext38:
  6054                           	opt stack 0
  6055  001380                     i2_recv_msg:
  6056                           	opt stack 16
  6057                           
  6058                           ;messages.c: 64: unsigned char slot;
  6059                           ;messages.c: 68: msg *qmsg;
  6060                           ;messages.c: 69: size_t tlength;
  6061                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6062                           
  6063                           ;incstack = 0
  6064  001380  0100               	movlb	0	; () banked
  6065  001382  EE20 F065          	lfsr	2,101
  6066  001386  0100               	movlb	0	; () banked
  6067  001388  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6068  00138A  26D9               	addwf	fsr2l,f,c
  6069  00138C  0100               	movlb	0	; () banked
  6070  00138E  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6071  001390  22DA               	addwfc	fsr2h,f,c
  6072  001392  50DF               	movf	indf2,w,c
  6073  001394  0100               	movlb	0	; () banked
  6074  001396  0100               	movlb	0	; () banked
  6075  001398  6F87               	movwf	i2recv_msg@slot& (0+255),b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6079  00139A  0100               	movlb	0	; () banked
  6080  00139C  0100               	movlb	0	; () banked
  6081  00139E  5187               	movf	i2recv_msg@slot& (0+255),w,b
  6082  0013A0  0D19               	mullw	25
  6083  0013A2  50F3               	movf	prodl,w,c
  6084  0013A4  0100               	movlb	0	; () banked
  6085  0013A6  0100               	movlb	0	; () banked
  6086  0013A8  2580               	addwf	i2recv_msg@qptr& (0+255),w,b
  6087  0013AA  0100               	movlb	0	; () banked
  6088  0013AC  0100               	movlb	0	; () banked
  6089  0013AE  6F8A               	movwf	i2recv_msg@qmsg& (0+255),b
  6090  0013B0  50F4               	movf	prodh,w,c
  6091  0013B2  0100               	movlb	0	; () banked
  6092  0013B4  0100               	movlb	0	; () banked
  6093  0013B6  2181               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6094  0013B8  0100               	movlb	0	; () banked
  6095  0013BA  6F8B               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;messages.c: 74: if (qmsg->full == 1) {
  6099  0013BC  0E01               	movlw	1
  6100  0013BE  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6101  0013C2  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6102  0013C6  62DF               	cpfseq	indf2,c
  6103  0013C8  D06C               	goto	i2l3732
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6107  0013CA  0100               	movlb	0	; () banked
  6108  0013CC  EE20 F001          	lfsr	2,1
  6109  0013D0  0100               	movlb	0	; () banked
  6110  0013D2  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6111  0013D4  26D9               	addwf	fsr2l,f,c
  6112  0013D6  0100               	movlb	0	; () banked
  6113  0013D8  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6114  0013DA  22DA               	addwfc	fsr2h,f,c
  6115  0013DC  50DF               	movf	indf2,w,c
  6116  0013DE  0100               	movlb	0	; () banked
  6117  0013E0  0100               	movlb	0	; () banked
  6118  0013E2  5D82               	subwf	i2recv_msg@maxlength& (0+255),w,b
  6119  0013E4  B0D8               	btfsc	status,0,c
  6120  0013E6  D002               	goto	i2l3716
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;messages.c: 77: return (-3);
  6124  0013E8  0EFD               	movlw	253
  6125  0013EA  0012               	return	
  6126  0013EC                     i2l3716:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;messages.c: 78: }
  6130                           ;messages.c: 80: tlength = qmsg->length;
  6131  0013EC  0100               	movlb	0	; () banked
  6132  0013EE  EE20 F001          	lfsr	2,1
  6133  0013F2  0100               	movlb	0	; () banked
  6134  0013F4  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6135  0013F6  26D9               	addwf	fsr2l,f,c
  6136  0013F8  0100               	movlb	0	; () banked
  6137  0013FA  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6138  0013FC  22DA               	addwfc	fsr2h,f,c
  6139  0013FE  50DF               	movf	indf2,w,c
  6140  001400  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6141  001402  503C               	movf	??i2_recv_msg,w,c
  6142  001404  0100               	movlb	0	; () banked
  6143  001406  0100               	movlb	0	; () banked
  6144  001408  6F88               	movwf	i2recv_msg@tlength& (0+255),b
  6145  00140A  0100               	movlb	0	; () banked
  6146  00140C  6B89               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6150  00140E  0100               	movlb	0	; () banked
  6151  001410  C086  F033         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6152  001414  0100               	movlb	0	; () banked
  6153  001416  C085  F032         	movff	i2recv_msg@data,i2memcpy@d1
  6154  00141A  0E03               	movlw	3
  6155  00141C  0100               	movlb	0	; () banked
  6156  00141E  0100               	movlb	0	; () banked
  6157  001420  258A               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6158  001422  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6159  001424  0E00               	movlw	0
  6160  001426  0100               	movlb	0	; () banked
  6161  001428  0100               	movlb	0	; () banked
  6162  00142A  218B               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6163  00142C  6E3D               	movwf	(??i2_recv_msg+1)& (0+255),c
  6164  00142E  C03C  F034         	movff	??i2_recv_msg,i2memcpy@s1
  6165  001432  C03D  F035         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6166  001436  C088  F036         	movff	i2recv_msg@tlength,i2memcpy@n
  6167  00143A  C089  F037         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6168  00143E  EC4D  F010         	call	i2_memcpy	;wreg free
  6169                           
  6170                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6171  001442  0100               	movlb	0	; () banked
  6172  001444  EE20 F065          	lfsr	2,101
  6173  001448  0100               	movlb	0	; () banked
  6174  00144A  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6175  00144C  26D9               	addwf	fsr2l,f,c
  6176  00144E  0100               	movlb	0	; () banked
  6177  001450  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6178  001452  22DA               	addwfc	fsr2h,f,c
  6179  001454  0100               	movlb	0	; () banked
  6180  001456  EE10 F065          	lfsr	1,101
  6181  00145A  0100               	movlb	0	; () banked
  6182  00145C  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6183  00145E  26E1               	addwf	fsr1l,f,c
  6184  001460  0100               	movlb	0	; () banked
  6185  001462  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6186  001464  22E2               	addwfc	fsr1h,f,c
  6187  001466  50E7               	movf	indf1,w,c
  6188  001468  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6189  00146A  283C               	incf	??i2_recv_msg,w,c
  6190  00146C  0B03               	andlw	3
  6191  00146E  6EDF               	movwf	indf2,c
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6195  001470  0100               	movlb	0	; () banked
  6196  001472  EE20 F002          	lfsr	2,2
  6197  001476  0100               	movlb	0	; () banked
  6198  001478  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6199  00147A  26D9               	addwf	fsr2l,f,c
  6200  00147C  0100               	movlb	0	; () banked
  6201  00147E  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6202  001480  22DA               	addwfc	fsr2h,f,c
  6203  001482  C083  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6204  001486  C084  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6205  00148A  CFDF FFE7          	movff	indf2,indf1
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;messages.c: 91: qmsg->full = 0;
  6209  00148E  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6210  001492  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6211  001496  0E00               	movlw	0
  6212  001498  6EDF               	movwf	indf2,c
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;messages.c: 92: return (tlength);
  6216  00149A  0100               	movlb	0	; () banked
  6217  00149C  0100               	movlb	0	; () banked
  6218  00149E  5188               	movf	i2recv_msg@tlength& (0+255),w,b
  6219  0014A0  0012               	return	
  6220  0014A2                     i2l3732:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;messages.c: 94: return (-4);
  6224  0014A2  0EFC               	movlw	252
  6225  0014A4  0012               	return	
  6226  0014A6                     __end_ofi2_recv_msg:
  6227                           	opt stack 0
  6228                           pclatu	equ	0xFFB
  6229                           pclath	equ	0xFFA
  6230                           tblptru	equ	0xFF8
  6231                           tblptrh	equ	0xFF7
  6232                           tblptrl	equ	0xFF6
  6233                           tablat	equ	0xFF5
  6234                           prodh	equ	0xFF4
  6235                           prodl	equ	0xFF3
  6236                           intcon	equ	0xFF2
  6237                           postinc0	equ	0xFEE
  6238                           fsr0h	equ	0xFEA
  6239                           fsr0l	equ	0xFE9
  6240                           wreg	equ	0xFE8
  6241                           indf1	equ	0xFE7
  6242                           fsr1h	equ	0xFE2
  6243                           fsr1l	equ	0xFE1
  6244                           bsr	equ	0xFE0
  6245                           indf2	equ	0xFDF
  6246                           postinc2	equ	0xFDE
  6247                           postdec2	equ	0xFDD
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252 ;; *************** function _i2c_int_handler *****************
  6253 ;; Defined at:
  6254 ;;		line 192 in file "source/my_i2c.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;		None               void
  6261 ;; Registers used:
  6262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6268 ;;      Params:         0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0
  6271 ;;      Totals:         0       0       0       0       0
  6272 ;;Total ram usage:        0 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    4
  6275 ;; This function calls:
  6276 ;;		_i2c_master_int_handler
  6277 ;;		_i2c_slave_int_handler
  6278 ;; This function is called by:
  6279 ;;		_InterruptHandlerHigh
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text39
  6284  002218                     __ptext39:
  6285                           	opt stack 0
  6286  002218                     _i2c_int_handler:
  6287                           	opt stack 15
  6288                           
  6289                           ;my_i2c.c: 193: switch (i2c_mode){
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;incstack = 0
  6293  002218  D006               	goto	i2l3394
  6294  00221A                     i2l3388:
  6295                           
  6296                           ;my_i2c.c: 195: i2c_master_int_handler();
  6297  00221A  EC7E  F003         	call	_i2c_master_int_handler	;wreg free
  6298                           
  6299                           ;my_i2c.c: 196: break;
  6300  00221E  0012               	return	
  6301  002220                     i2l3390:
  6302                           
  6303                           ;my_i2c.c: 199: i2c_slave_int_handler();
  6304  002220  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  6305                           
  6306                           ;my_i2c.c: 200: break;
  6307  002224  0012               	return	
  6308  002226                     i2l3394:
  6309  002226  0100               	movlb	0	; () banked
  6310  002228  0100               	movlb	0	; () banked
  6311  00222A  51C8               	movf	_i2c_mode& (0+255),w,b
  6312                           
  6313                           ; Switch size 1, requested type "space"
  6314                           ; Number of cases is 2, Range of values is 1 to 2
  6315                           ; switch strategies available:
  6316                           ; Name         Instructions Cycles
  6317                           ; simple_byte            7     4 (average)
  6318                           ;	Chosen strategy is simple_byte
  6319  00222C  0A01               	xorlw	1	; case 1
  6320  00222E  B4D8               	btfsc	status,2,c
  6321  002230  D7F4               	goto	i2l3388
  6322  002232  0A03               	xorlw	3	; case 2
  6323  002234  A4D8               	btfss	status,2,c
  6324  002236  0012               	return	
  6325  002238  D7F3               	goto	i2l3390
  6326  00223A                     __end_of_i2c_int_handler:
  6327                           	opt stack 0
  6328                           pclatu	equ	0xFFB
  6329                           pclath	equ	0xFFA
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           postinc0	equ	0xFEE
  6338                           fsr0h	equ	0xFEA
  6339                           fsr0l	equ	0xFE9
  6340                           wreg	equ	0xFE8
  6341                           indf1	equ	0xFE7
  6342                           fsr1h	equ	0xFE2
  6343                           fsr1l	equ	0xFE1
  6344                           bsr	equ	0xFE0
  6345                           indf2	equ	0xFDF
  6346                           postinc2	equ	0xFDE
  6347                           postdec2	equ	0xFDD
  6348                           fsr2h	equ	0xFDA
  6349                           fsr2l	equ	0xFD9
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function _i2c_slave_int_handler *****************
  6353 ;; Defined at:
  6354 ;;		line 209 in file "source/my_i2c.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  error_buf       3   16[BANK0 ] unsigned char [3]
  6359 ;;  data_read       1   24[BANK0 ] unsigned char 
  6360 ;;  msg_ready       1   23[BANK0 ] unsigned char 
  6361 ;;  msg_to_send     1   22[BANK0 ] unsigned char 
  6362 ;;  i2c_data        1   21[BANK0 ] unsigned char 
  6363 ;;  overrun_erro    1   20[BANK0 ] unsigned char 
  6364 ;;  data_written    1   19[BANK0 ] unsigned char 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6374 ;;      Params:         0       0       0       0       0
  6375 ;;      Locals:         0       9       0       0       0
  6376 ;;      Temps:          0       2       0       0       0
  6377 ;;      Totals:         0      11       0       0       0
  6378 ;;Total ram usage:       11 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    3
  6381 ;; This function calls:
  6382 ;;		_ToMainHigh_sendmsg
  6383 ;;		_handle_start
  6384 ;;		_start_i2c_slave_reply
  6385 ;; This function is called by:
  6386 ;;		_i2c_int_handler
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text40
  6391  0000BA                     __ptext40:
  6392                           	opt stack 0
  6393  0000BA                     _i2c_slave_int_handler:
  6394                           	opt stack 15
  6395                           
  6396                           ;my_i2c.c: 210: unsigned char i2c_data;
  6397                           ;my_i2c.c: 211: unsigned char data_read = 0;
  6398                           
  6399                           ;incstack = 0
  6400  0000BA  0100               	movlb	0	; () banked
  6401  0000BC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6402  0000BE  0E00               	movlw	0
  6403  0000C0  0100               	movlb	0	; () banked
  6404  0000C2  0100               	movlb	0	; () banked
  6405  0000C4  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6406  0000C6  0100               	movlb	0	; () banked
  6407  0000C8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6408                           
  6409                           ;my_i2c.c: 212: unsigned char data_written = 0;
  6410  0000CA  0100               	movlb	0	; () banked
  6411  0000CC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6412  0000CE  0E00               	movlw	0
  6413  0000D0  0100               	movlb	0	; () banked
  6414  0000D2  0100               	movlb	0	; () banked
  6415  0000D4  6F93               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6416  0000D6  0100               	movlb	0	; () banked
  6417  0000D8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6418                           
  6419                           ;my_i2c.c: 213: unsigned char msg_ready = 0;
  6420  0000DA  0100               	movlb	0	; () banked
  6421  0000DC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6422  0000DE  0E00               	movlw	0
  6423  0000E0  0100               	movlb	0	; () banked
  6424  0000E2  0100               	movlb	0	; () banked
  6425  0000E4  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6426  0000E6  0100               	movlb	0	; () banked
  6427  0000E8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6428                           
  6429                           ;my_i2c.c: 214: unsigned char msg_to_send = 0;
  6430  0000EA  0100               	movlb	0	; () banked
  6431  0000EC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6432  0000EE  0E00               	movlw	0
  6433  0000F0  0100               	movlb	0	; () banked
  6434  0000F2  0100               	movlb	0	; () banked
  6435  0000F4  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6436  0000F6  0100               	movlb	0	; () banked
  6437  0000F8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6438                           
  6439                           ;my_i2c.c: 215: unsigned char overrun_error = 0;
  6440  0000FA  0100               	movlb	0	; () banked
  6441  0000FC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6442  0000FE  0E00               	movlw	0
  6443  000100  0100               	movlb	0	; () banked
  6444  000102  0100               	movlb	0	; () banked
  6445  000104  6F94               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6446  000106  0100               	movlb	0	; () banked
  6447  000108  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;my_i2c.c: 216: unsigned char error_buf[3];
  6451                           ;my_i2c.c: 219: if (SSPCON1bits.SSPOV == 1) {
  6452  00010A  ACC6               	btfss	4038,6,c	;volatile
  6453  00010C  D029               	goto	i2l3552
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;my_i2c.c: 220: SSPCON1bits.SSPOV = 0;
  6457  00010E  9CC6               	bcf	4038,6,c	;volatile
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;my_i2c.c: 224: ic_ptr->status = 0x5;
  6461  000110  0100               	movlb	0	; () banked
  6462  000112  EE20 F019          	lfsr	2,25
  6463  000116  0100               	movlb	0	; () banked
  6464  000118  51C6               	movf	_ic_ptr& (0+255),w,b
  6465  00011A  26D9               	addwf	fsr2l,f,c
  6466  00011C  0100               	movlb	0	; () banked
  6467  00011E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6468  000120  22DA               	addwfc	fsr2h,f,c
  6469  000122  0E05               	movlw	5
  6470  000124  6EDF               	movwf	indf2,c
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;my_i2c.c: 225: overrun_error = 1;
  6474  000126  0100               	movlb	0	; () banked
  6475  000128  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6476  00012A  0E01               	movlw	1
  6477  00012C  0100               	movlb	0	; () banked
  6478  00012E  0100               	movlb	0	; () banked
  6479  000130  6F94               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6480  000132  0100               	movlb	0	; () banked
  6481  000134  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;my_i2c.c: 226: ic_ptr->error_count++;
  6485  000136  0100               	movlb	0	; () banked
  6486  000138  EE20 F01B          	lfsr	2,27
  6487  00013C  0100               	movlb	0	; () banked
  6488  00013E  51C6               	movf	_ic_ptr& (0+255),w,b
  6489  000140  26D9               	addwf	fsr2l,f,c
  6490  000142  0100               	movlb	0	; () banked
  6491  000144  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6492  000146  22DA               	addwfc	fsr2h,f,c
  6493  000148  2ADF               	incf	indf2,f,c
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;my_i2c.c: 227: ic_ptr->error_code = 0x4;
  6497  00014A  0100               	movlb	0	; () banked
  6498  00014C  EE20 F01A          	lfsr	2,26
  6499  000150  0100               	movlb	0	; () banked
  6500  000152  51C6               	movf	_ic_ptr& (0+255),w,b
  6501  000154  26D9               	addwf	fsr2l,f,c
  6502  000156  0100               	movlb	0	; () banked
  6503  000158  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6504  00015A  22DA               	addwfc	fsr2h,f,c
  6505  00015C  0E04               	movlw	4
  6506  00015E  6EDF               	movwf	indf2,c
  6507  000160                     i2l3552:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;my_i2c.c: 228: }
  6511                           ;my_i2c.c: 230: if (SSPSTATbits.BF == 1) {
  6512  000160  A0C7               	btfss	4039,0,c	;volatile
  6513  000162  D00A               	goto	i2l3558
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;my_i2c.c: 231: i2c_data = SSPBUF;
  6517  000164  CFC9 F095          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;my_i2c.c: 232: data_read = 1;
  6521  000168  0100               	movlb	0	; () banked
  6522  00016A  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6523  00016C  0E01               	movlw	1
  6524  00016E  0100               	movlb	0	; () banked
  6525  000170  0100               	movlb	0	; () banked
  6526  000172  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6527  000174  0100               	movlb	0	; () banked
  6528  000176  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6529  000178                     i2l3558:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;my_i2c.c: 233: }
  6533                           ;my_i2c.c: 235: if (!overrun_error) {
  6534  000178  0100               	movlb	0	; () banked
  6535  00017A  0100               	movlb	0	; () banked
  6536  00017C  6794               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  6537  00017E  D1CE               	goto	i2l299
  6538  000180  D1B7               	goto	i2l3646
  6539  000182                     i2l301:
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;my_i2c.c: 238: {
  6543                           ;my_i2c.c: 240: if (SSPSTATbits.S == 1) {
  6544  000182  A6C7               	btfss	4039,3,c	;volatile
  6545  000184  D1CB               	goto	i2l299
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;my_i2c.c: 241: handle_start(data_read);
  6549  000186  0100               	movlb	0	; () banked
  6550  000188  0100               	movlb	0	; () banked
  6551  00018A  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6552  00018C  EC17  F00C         	call	_handle_start
  6553                           
  6554                           ;my_i2c.c: 243: if (ic_ptr->status == 0x8) {
  6555  000190  0100               	movlb	0	; () banked
  6556  000192  EE20 F019          	lfsr	2,25
  6557  000196  0100               	movlb	0	; () banked
  6558  000198  51C6               	movf	_ic_ptr& (0+255),w,b
  6559  00019A  26D9               	addwf	fsr2l,f,c
  6560  00019C  0100               	movlb	0	; () banked
  6561  00019E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6562  0001A0  22DA               	addwfc	fsr2h,f,c
  6563  0001A2  0E08               	movlw	8
  6564  0001A4  62DF               	cpfseq	indf2,c
  6565  0001A6  D1BA               	goto	i2l299
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;my_i2c.c: 244: data_read = 0;
  6569  0001A8  0100               	movlb	0	; () banked
  6570  0001AA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6571  0001AC  0E00               	movlw	0
  6572  0001AE  0100               	movlb	0	; () banked
  6573  0001B0  0100               	movlb	0	; () banked
  6574  0001B2  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6575  0001B4  0100               	movlb	0	; () banked
  6576  0001B6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6577                           
  6578                           ;my_i2c.c: 245: msg_to_send = 1;
  6579  0001B8  0100               	movlb	0	; () banked
  6580  0001BA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6581  0001BC  0E01               	movlw	1
  6582  0001BE  0100               	movlb	0	; () banked
  6583  0001C0  0100               	movlb	0	; () banked
  6584  0001C2  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6585  0001C4  D187               	goto	L9
  6586  0001C6                     i2l305:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;my_i2c.c: 251: {
  6590                           ;my_i2c.c: 253: if (SSPSTATbits.P == 1) {
  6591  0001C6  A8C7               	btfss	4039,4,c	;volatile
  6592  0001C8  D030               	goto	i2l3578
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;my_i2c.c: 256: ic_ptr->event_count++;
  6596  0001CA  0100               	movlb	0	; () banked
  6597  0001CC  EE20 F018          	lfsr	2,24
  6598  0001D0  0100               	movlb	0	; () banked
  6599  0001D2  51C6               	movf	_ic_ptr& (0+255),w,b
  6600  0001D4  26D9               	addwf	fsr2l,f,c
  6601  0001D6  0100               	movlb	0	; () banked
  6602  0001D8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6603  0001DA  22DA               	addwfc	fsr2h,f,c
  6604  0001DC  2ADF               	incf	indf2,f,c
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;my_i2c.c: 257: if (data_read) {
  6608  0001DE  0100               	movlb	0	; () banked
  6609  0001E0  0100               	movlb	0	; () banked
  6610  0001E2  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6611  0001E4  B4D8               	btfsc	status,2,c
  6612  0001E6  D179               	goto	L11
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;my_i2c.c: 258: if (SSPSTATbits.D_A == 0) {
  6616  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  6617  0001EA  D009               	goto	i2l3576
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;my_i2c.c: 259: msg_ready = 1;
  6621  0001EC  0100               	movlb	0	; () banked
  6622  0001EE  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6623  0001F0  0E01               	movlw	1
  6624  0001F2  0100               	movlb	0	; () banked
  6625  0001F4  0100               	movlb	0	; () banked
  6626  0001F6  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6627  0001F8  0100               	movlb	0	; () banked
  6628  0001FA  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6629                           
  6630                           ;my_i2c.c: 260: } else {
  6631  0001FC  D16E               	goto	L11
  6632  0001FE                     i2l3576:
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;my_i2c.c: 261: ic_ptr->error_count++;
  6636  0001FE  0100               	movlb	0	; () banked
  6637  000200  EE20 F01B          	lfsr	2,27
  6638  000204  0100               	movlb	0	; () banked
  6639  000206  51C6               	movf	_ic_ptr& (0+255),w,b
  6640  000208  26D9               	addwf	fsr2l,f,c
  6641  00020A  0100               	movlb	0	; () banked
  6642  00020C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6643  00020E  22DA               	addwfc	fsr2h,f,c
  6644  000210  2ADF               	incf	indf2,f,c
  6645                           
  6646                           ;my_i2c.c: 262: ic_ptr->error_code = 0x6;
  6647  000212  0100               	movlb	0	; () banked
  6648  000214  EE20 F01A          	lfsr	2,26
  6649  000218  0100               	movlb	0	; () banked
  6650  00021A  51C6               	movf	_ic_ptr& (0+255),w,b
  6651  00021C  26D9               	addwf	fsr2l,f,c
  6652  00021E  0100               	movlb	0	; () banked
  6653  000220  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6654  000222  22DA               	addwfc	fsr2h,f,c
  6655  000224  0E06               	movlw	6
  6656  000226  6EDF               	movwf	indf2,c
  6657                           
  6658                           ; BSR set to: 0
  6659  000228  D158               	goto	L11
  6660  00022A                     i2l3578:
  6661                           
  6662                           ; BSR set to: 0
  6663  00022A  0100               	movlb	0	; () banked
  6664  00022C  0100               	movlb	0	; () banked
  6665  00022E  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6666  000230  B4D8               	btfsc	status,2,c
  6667  000232  D174               	goto	i2l299
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;my_i2c.c: 267: ic_ptr->event_count++;
  6671  000234  0100               	movlb	0	; () banked
  6672  000236  EE20 F018          	lfsr	2,24
  6673  00023A  0100               	movlb	0	; () banked
  6674  00023C  51C6               	movf	_ic_ptr& (0+255),w,b
  6675  00023E  26D9               	addwf	fsr2l,f,c
  6676  000240  0100               	movlb	0	; () banked
  6677  000242  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6678  000244  22DA               	addwfc	fsr2h,f,c
  6679  000246  2ADF               	incf	indf2,f,c
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;my_i2c.c: 268: if (SSPSTATbits.D_A == 0) {
  6683  000248  BAC7               	btfsc	4039,5,c	;volatile
  6684  00024A  D019               	goto	i2l3594
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;my_i2c.c: 269: if (SSPSTATbits.R_W == 0) {
  6688  00024C  B4C7               	btfsc	4039,2,c	;volatile
  6689  00024E  D00B               	goto	i2l3588
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;my_i2c.c: 270: ic_ptr->status = 0x7;
  6693  000250  0100               	movlb	0	; () banked
  6694  000252  EE20 F019          	lfsr	2,25
  6695  000256  0100               	movlb	0	; () banked
  6696  000258  51C6               	movf	_ic_ptr& (0+255),w,b
  6697  00025A  26D9               	addwf	fsr2l,f,c
  6698  00025C  0100               	movlb	0	; () banked
  6699  00025E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6700  000260  22DA               	addwfc	fsr2h,f,c
  6701  000262  0E07               	movlw	7
  6702  000264  D076               	goto	L8
  6703  000266                     i2l3588:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;my_i2c.c: 272: ic_ptr->status = 0x8;
  6707  000266  0100               	movlb	0	; () banked
  6708  000268  EE20 F019          	lfsr	2,25
  6709  00026C  0100               	movlb	0	; () banked
  6710  00026E  51C6               	movf	_ic_ptr& (0+255),w,b
  6711  000270  26D9               	addwf	fsr2l,f,c
  6712  000272  0100               	movlb	0	; () banked
  6713  000274  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6714  000276  22DA               	addwfc	fsr2h,f,c
  6715  000278  0E08               	movlw	8
  6716  00027A  6EDF               	movwf	indf2,c
  6717  00027C  D11D               	goto	L12
  6718  00027E                     i2l3594:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;my_i2c.c: 278: ic_ptr->error_count++;
  6722  00027E  0100               	movlb	0	; () banked
  6723  000280  EE20 F01B          	lfsr	2,27
  6724  000284  0100               	movlb	0	; () banked
  6725  000286  51C6               	movf	_ic_ptr& (0+255),w,b
  6726  000288  26D9               	addwf	fsr2l,f,c
  6727  00028A  0100               	movlb	0	; () banked
  6728  00028C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6729  00028E  22DA               	addwfc	fsr2h,f,c
  6730  000290  2ADF               	incf	indf2,f,c
  6731                           
  6732                           ;my_i2c.c: 279: ic_ptr->status = 0x5;
  6733  000292  0100               	movlb	0	; () banked
  6734  000294  EE20 F019          	lfsr	2,25
  6735  000298  0100               	movlb	0	; () banked
  6736  00029A  51C6               	movf	_ic_ptr& (0+255),w,b
  6737  00029C  26D9               	addwf	fsr2l,f,c
  6738  00029E  0100               	movlb	0	; () banked
  6739  0002A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6740  0002A2  22DA               	addwfc	fsr2h,f,c
  6741  0002A4  0E05               	movlw	5
  6742  0002A6  6EDF               	movwf	indf2,c
  6743                           
  6744                           ;my_i2c.c: 280: ic_ptr->error_code = 0x6;
  6745  0002A8  0100               	movlb	0	; () banked
  6746  0002AA  EE20 F01A          	lfsr	2,26
  6747  0002AE  0100               	movlb	0	; () banked
  6748  0002B0  51C6               	movf	_ic_ptr& (0+255),w,b
  6749  0002B2  26D9               	addwf	fsr2l,f,c
  6750  0002B4  0100               	movlb	0	; () banked
  6751  0002B6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6752  0002B8  22DA               	addwfc	fsr2h,f,c
  6753  0002BA  0E06               	movlw	6
  6754  0002BC  D04A               	goto	L8
  6755  0002BE                     i2l3596:
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;my_i2c.c: 286: {
  6759                           ;my_i2c.c: 287: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6760  0002BE  0100               	movlb	0	; () banked
  6761  0002C0  EE20 F033          	lfsr	2,51
  6762  0002C4  0100               	movlb	0	; () banked
  6763  0002C6  51C6               	movf	_ic_ptr& (0+255),w,b
  6764  0002C8  26D9               	addwf	fsr2l,f,c
  6765  0002CA  0100               	movlb	0	; () banked
  6766  0002CC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6767  0002CE  22DA               	addwfc	fsr2h,f,c
  6768  0002D0  50DF               	movf	indf2,w,c
  6769  0002D2  0100               	movlb	0	; () banked
  6770  0002D4  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6771  0002D6  0100               	movlb	0	; () banked
  6772  0002D8  EE20 F032          	lfsr	2,50
  6773  0002DC  0100               	movlb	0	; () banked
  6774  0002DE  51C6               	movf	_ic_ptr& (0+255),w,b
  6775  0002E0  26D9               	addwf	fsr2l,f,c
  6776  0002E2  0100               	movlb	0	; () banked
  6777  0002E4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6778  0002E6  22DA               	addwfc	fsr2h,f,c
  6779  0002E8  50DF               	movf	indf2,w,c
  6780  0002EA  0100               	movlb	0	; () banked
  6781  0002EC  5D8E               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  6782  0002EE  B0D8               	btfsc	status,0,c
  6783  0002F0  D0F4               	goto	L11
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;my_i2c.c: 288: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6787  0002F2  0100               	movlb	0	; () banked
  6788  0002F4  EE20 F033          	lfsr	2,51
  6789  0002F8  0100               	movlb	0	; () banked
  6790  0002FA  51C6               	movf	_ic_ptr& (0+255),w,b
  6791  0002FC  26D9               	addwf	fsr2l,f,c
  6792  0002FE  0100               	movlb	0	; () banked
  6793  000300  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6794  000302  22DA               	addwfc	fsr2h,f,c
  6795  000304  50DF               	movf	indf2,w,c
  6796  000306  0100               	movlb	0	; () banked
  6797  000308  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6798  00030A  0100               	movlb	0	; () banked
  6799  00030C  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6800  00030E  0D01               	mullw	1
  6801  000310  0E1C               	movlw	28
  6802  000312  26F3               	addwf	prodl,f,c
  6803  000314  0E00               	movlw	0
  6804  000316  22F4               	addwfc	prodh,f,c
  6805  000318  50F3               	movf	prodl,w,c
  6806  00031A  0100               	movlb	0	; () banked
  6807  00031C  0100               	movlb	0	; () banked
  6808  00031E  25C6               	addwf	_ic_ptr& (0+255),w,b
  6809  000320  6ED9               	movwf	fsr2l,c
  6810  000322  50F4               	movf	prodh,w,c
  6811  000324  0100               	movlb	0	; () banked
  6812  000326  0100               	movlb	0	; () banked
  6813  000328  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6814  00032A  6EDA               	movwf	fsr2h,c
  6815  00032C  50DF               	movf	indf2,w,c
  6816  00032E  6EC9               	movwf	4041,c	;volatile
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;my_i2c.c: 289: ic_ptr->outbufind++;
  6820  000330  0100               	movlb	0	; () banked
  6821  000332  EE20 F033          	lfsr	2,51
  6822  000336  0100               	movlb	0	; () banked
  6823  000338  51C6               	movf	_ic_ptr& (0+255),w,b
  6824  00033A  26D9               	addwf	fsr2l,f,c
  6825  00033C  0100               	movlb	0	; () banked
  6826  00033E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6827  000340  22DA               	addwfc	fsr2h,f,c
  6828  000342  2ADF               	incf	indf2,f,c
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;my_i2c.c: 290: data_written = 1;
  6832  000344  0100               	movlb	0	; () banked
  6833  000346  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6834  000348  0E01               	movlw	1
  6835  00034A  0100               	movlb	0	; () banked
  6836  00034C  0100               	movlb	0	; () banked
  6837  00034E  6F93               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6838  000350  D0C1               	goto	L9
  6839  000352                     L8:
  6840  000352  6EDF               	movwf	indf2,c
  6841  000354  D0E3               	goto	i2l299
  6842  000356                     i2l319:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;my_i2c.c: 298: {
  6846                           ;my_i2c.c: 300: if (SSPSTATbits.P == 1) {
  6847  000356  A8C7               	btfss	4039,4,c	;volatile
  6848  000358  D062               	goto	i2l3624
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;my_i2c.c: 302: ic_ptr->event_count++;
  6852  00035A  0100               	movlb	0	; () banked
  6853  00035C  EE20 F018          	lfsr	2,24
  6854  000360  0100               	movlb	0	; () banked
  6855  000362  51C6               	movf	_ic_ptr& (0+255),w,b
  6856  000364  26D9               	addwf	fsr2l,f,c
  6857  000366  0100               	movlb	0	; () banked
  6858  000368  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6859  00036A  22DA               	addwfc	fsr2h,f,c
  6860  00036C  2ADF               	incf	indf2,f,c
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;my_i2c.c: 303: if (data_read) {
  6864  00036E  0100               	movlb	0	; () banked
  6865  000370  0100               	movlb	0	; () banked
  6866  000372  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6867  000374  B4D8               	btfsc	status,2,c
  6868  000376  D04A               	goto	i2l3620
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;my_i2c.c: 304: if (SSPSTATbits.D_A == 1) {
  6872  000378  AAC7               	btfss	4039,5,c	;volatile
  6873  00037A  D027               	goto	i2l3618
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;my_i2c.c: 305: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6877  00037C  0100               	movlb	0	; () banked
  6878  00037E  EE20 F016          	lfsr	2,22
  6879  000382  0100               	movlb	0	; () banked
  6880  000384  51C6               	movf	_ic_ptr& (0+255),w,b
  6881  000386  26D9               	addwf	fsr2l,f,c
  6882  000388  0100               	movlb	0	; () banked
  6883  00038A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6884  00038C  22DA               	addwfc	fsr2h,f,c
  6885  00038E  50DF               	movf	indf2,w,c
  6886  000390  0100               	movlb	0	; () banked
  6887  000392  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6888  000394  0100               	movlb	0	; () banked
  6889  000396  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6890  000398  0D01               	mullw	1
  6891  00039A  50F3               	movf	prodl,w,c
  6892  00039C  0100               	movlb	0	; () banked
  6893  00039E  0100               	movlb	0	; () banked
  6894  0003A0  25C6               	addwf	_ic_ptr& (0+255),w,b
  6895  0003A2  6ED9               	movwf	fsr2l,c
  6896  0003A4  50F4               	movf	prodh,w,c
  6897  0003A6  0100               	movlb	0	; () banked
  6898  0003A8  0100               	movlb	0	; () banked
  6899  0003AA  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6900  0003AC  6EDA               	movwf	fsr2h,c
  6901  0003AE  0100               	movlb	0	; () banked
  6902  0003B0  C095  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;my_i2c.c: 306: ic_ptr->buflen++;
  6906  0003B4  0100               	movlb	0	; () banked
  6907  0003B6  EE20 F016          	lfsr	2,22
  6908  0003BA  0100               	movlb	0	; () banked
  6909  0003BC  51C6               	movf	_ic_ptr& (0+255),w,b
  6910  0003BE  26D9               	addwf	fsr2l,f,c
  6911  0003C0  0100               	movlb	0	; () banked
  6912  0003C2  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6913  0003C4  22DA               	addwfc	fsr2h,f,c
  6914  0003C6  2ADF               	incf	indf2,f,c
  6915  0003C8  D021               	goto	i2l3620
  6916  0003CA                     i2l3618:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;my_i2c.c: 309: ic_ptr->error_count++;
  6920  0003CA  0100               	movlb	0	; () banked
  6921  0003CC  EE20 F01B          	lfsr	2,27
  6922  0003D0  0100               	movlb	0	; () banked
  6923  0003D2  51C6               	movf	_ic_ptr& (0+255),w,b
  6924  0003D4  26D9               	addwf	fsr2l,f,c
  6925  0003D6  0100               	movlb	0	; () banked
  6926  0003D8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6927  0003DA  22DA               	addwfc	fsr2h,f,c
  6928  0003DC  2ADF               	incf	indf2,f,c
  6929                           
  6930                           ;my_i2c.c: 310: ic_ptr->error_code = 0x6;
  6931  0003DE  0100               	movlb	0	; () banked
  6932  0003E0  EE20 F01A          	lfsr	2,26
  6933  0003E4  0100               	movlb	0	; () banked
  6934  0003E6  51C6               	movf	_ic_ptr& (0+255),w,b
  6935  0003E8  26D9               	addwf	fsr2l,f,c
  6936  0003EA  0100               	movlb	0	; () banked
  6937  0003EC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6938  0003EE  22DA               	addwfc	fsr2h,f,c
  6939  0003F0  0E06               	movlw	6
  6940  0003F2  6EDF               	movwf	indf2,c
  6941                           
  6942                           ;my_i2c.c: 311: ic_ptr->status = 0x5;
  6943  0003F4  0100               	movlb	0	; () banked
  6944  0003F6  EE20 F019          	lfsr	2,25
  6945  0003FA  0100               	movlb	0	; () banked
  6946  0003FC  51C6               	movf	_ic_ptr& (0+255),w,b
  6947  0003FE  26D9               	addwf	fsr2l,f,c
  6948  000400  0100               	movlb	0	; () banked
  6949  000402  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6950  000404  22DA               	addwfc	fsr2h,f,c
  6951  000406  0E05               	movlw	5
  6952  000408  6EDF               	movwf	indf2,c
  6953  00040A  D067               	goto	L11
  6954  00040C                     i2l3620:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;my_i2c.c: 314: msg_ready = 1;
  6958  00040C  0100               	movlb	0	; () banked
  6959  00040E  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  6960  000410  0E01               	movlw	1
  6961  000412  0100               	movlb	0	; () banked
  6962  000414  0100               	movlb	0	; () banked
  6963  000416  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6964  000418  0100               	movlb	0	; () banked
  6965  00041A  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6966                           
  6967                           ; BSR set to: 0
  6968  00041C  D05E               	goto	L11
  6969  00041E                     i2l3624:
  6970                           
  6971                           ; BSR set to: 0
  6972  00041E  0100               	movlb	0	; () banked
  6973  000420  0100               	movlb	0	; () banked
  6974  000422  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6975  000424  B4D8               	btfsc	status,2,c
  6976  000426  D07A               	goto	i2l299
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;my_i2c.c: 318: ic_ptr->event_count++;
  6980  000428  0100               	movlb	0	; () banked
  6981  00042A  EE20 F018          	lfsr	2,24
  6982  00042E  0100               	movlb	0	; () banked
  6983  000430  51C6               	movf	_ic_ptr& (0+255),w,b
  6984  000432  26D9               	addwf	fsr2l,f,c
  6985  000434  0100               	movlb	0	; () banked
  6986  000436  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  6987  000438  22DA               	addwfc	fsr2h,f,c
  6988  00043A  2ADF               	incf	indf2,f,c
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;my_i2c.c: 319: if (SSPSTATbits.D_A == 1) {
  6992  00043C  AAC7               	btfss	4039,5,c	;volatile
  6993  00043E  D027               	goto	i2l327
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;my_i2c.c: 320: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6997  000440  0100               	movlb	0	; () banked
  6998  000442  EE20 F016          	lfsr	2,22
  6999  000446  0100               	movlb	0	; () banked
  7000  000448  51C6               	movf	_ic_ptr& (0+255),w,b
  7001  00044A  26D9               	addwf	fsr2l,f,c
  7002  00044C  0100               	movlb	0	; () banked
  7003  00044E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7004  000450  22DA               	addwfc	fsr2h,f,c
  7005  000452  50DF               	movf	indf2,w,c
  7006  000454  0100               	movlb	0	; () banked
  7007  000456  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7008  000458  0100               	movlb	0	; () banked
  7009  00045A  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7010  00045C  0D01               	mullw	1
  7011  00045E  50F3               	movf	prodl,w,c
  7012  000460  0100               	movlb	0	; () banked
  7013  000462  0100               	movlb	0	; () banked
  7014  000464  25C6               	addwf	_ic_ptr& (0+255),w,b
  7015  000466  6ED9               	movwf	fsr2l,c
  7016  000468  50F4               	movf	prodh,w,c
  7017  00046A  0100               	movlb	0	; () banked
  7018  00046C  0100               	movlb	0	; () banked
  7019  00046E  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7020  000470  6EDA               	movwf	fsr2h,c
  7021  000472  0100               	movlb	0	; () banked
  7022  000474  C095  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;my_i2c.c: 321: ic_ptr->buflen++;
  7026  000478  0100               	movlb	0	; () banked
  7027  00047A  EE20 F016          	lfsr	2,22
  7028  00047E  0100               	movlb	0	; () banked
  7029  000480  51C6               	movf	_ic_ptr& (0+255),w,b
  7030  000482  26D9               	addwf	fsr2l,f,c
  7031  000484  0100               	movlb	0	; () banked
  7032  000486  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7033  000488  22DA               	addwfc	fsr2h,f,c
  7034  00048A  2ADF               	incf	indf2,f,c
  7035                           
  7036                           ;my_i2c.c: 322: } else {
  7037  00048C  D047               	goto	i2l299
  7038  00048E                     i2l327:
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;my_i2c.c: 323: if (SSPSTATbits.R_W == 1) {
  7042  00048E  A4C7               	btfss	4039,2,c	;volatile
  7043  000490  D6B6               	goto	i2l3576
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;my_i2c.c: 324: ic_ptr->status = 0x8;
  7047  000492  0100               	movlb	0	; () banked
  7048  000494  EE20 F019          	lfsr	2,25
  7049  000498  0100               	movlb	0	; () banked
  7050  00049A  51C6               	movf	_ic_ptr& (0+255),w,b
  7051  00049C  26D9               	addwf	fsr2l,f,c
  7052  00049E  0100               	movlb	0	; () banked
  7053  0004A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7054  0004A2  22DA               	addwfc	fsr2h,f,c
  7055  0004A4  0E08               	movlw	8
  7056  0004A6  6EDF               	movwf	indf2,c
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;my_i2c.c: 325: msg_ready = 1;
  7060  0004A8  0100               	movlb	0	; () banked
  7061  0004AA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7062  0004AC  0E01               	movlw	1
  7063  0004AE  0100               	movlb	0	; () banked
  7064  0004B0  0100               	movlb	0	; () banked
  7065  0004B2  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7066  0004B4  0100               	movlb	0	; () banked
  7067  0004B6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7068  0004B8                     L12:
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 326: msg_to_send = 1;
  7072  0004B8  0100               	movlb	0	; () banked
  7073  0004BA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7074  0004BC  0E01               	movlw	1
  7075  0004BE  0100               	movlb	0	; () banked
  7076  0004C0  0100               	movlb	0	; () banked
  7077  0004C2  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7078  0004C4  0100               	movlb	0	; () banked
  7079  0004C6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;my_i2c.c: 328: data_read = 0;
  7083  0004C8  0100               	movlb	0	; () banked
  7084  0004CA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7085  0004CC  0E00               	movlw	0
  7086  0004CE  0100               	movlb	0	; () banked
  7087  0004D0  0100               	movlb	0	; () banked
  7088  0004D2  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7089  0004D4                     L9:
  7090  0004D4  0100               	movlb	0	; () banked
  7091  0004D6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7092                           
  7093                           ;my_i2c.c: 329: } else {
  7094  0004D8  D021               	goto	i2l299
  7095  0004DA                     L11:
  7096                           
  7097                           ;my_i2c.c: 332: ic_ptr->status = 0x5;
  7098  0004DA  0100               	movlb	0	; () banked
  7099  0004DC  EE20 F019          	lfsr	2,25
  7100  0004E0  0100               	movlb	0	; () banked
  7101  0004E2  51C6               	movf	_ic_ptr& (0+255),w,b
  7102  0004E4  26D9               	addwf	fsr2l,f,c
  7103  0004E6  0100               	movlb	0	; () banked
  7104  0004E8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7105  0004EA  22DA               	addwfc	fsr2h,f,c
  7106  0004EC  0E05               	movlw	5
  7107  0004EE  D731               	goto	L8
  7108  0004F0                     i2l3646:
  7109                           
  7110                           ; BSR set to: 0
  7111  0004F0  0100               	movlb	0	; () banked
  7112  0004F2  EE20 F019          	lfsr	2,25
  7113  0004F6  0100               	movlb	0	; () banked
  7114  0004F8  51C6               	movf	_ic_ptr& (0+255),w,b
  7115  0004FA  26D9               	addwf	fsr2l,f,c
  7116  0004FC  0100               	movlb	0	; () banked
  7117  0004FE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7118  000500  22DA               	addwfc	fsr2h,f,c
  7119  000502  50DF               	movf	indf2,w,c
  7120                           
  7121                           ; Switch size 1, requested type "space"
  7122                           ; Number of cases is 4, Range of values is 5 to 8
  7123                           ; switch strategies available:
  7124                           ; Name         Instructions Cycles
  7125                           ; simple_byte           13     7 (average)
  7126                           ;	Chosen strategy is simple_byte
  7127  000504  0A05               	xorlw	5	; case 5
  7128  000506  B4D8               	btfsc	status,2,c
  7129  000508  D63C               	goto	i2l301
  7130  00050A  0A03               	xorlw	3	; case 6
  7131  00050C  B4D8               	btfsc	status,2,c
  7132  00050E  D65B               	goto	i2l305
  7133  000510  0A01               	xorlw	1	; case 7
  7134  000512  B4D8               	btfsc	status,2,c
  7135  000514  D720               	goto	i2l319
  7136  000516  0A0F               	xorlw	15	; case 8
  7137  000518  B4D8               	btfsc	status,2,c
  7138  00051A  D6D1               	goto	i2l3596
  7139  00051C                     i2l299:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;my_i2c.c: 339: }
  7143                           ;my_i2c.c: 342: if (data_read || data_written) {
  7144  00051C  0100               	movlb	0	; () banked
  7145  00051E  0100               	movlb	0	; () banked
  7146  000520  6798               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7147  000522  D005               	goto	i2l333
  7148                           
  7149                           ; BSR set to: 0
  7150  000524  0100               	movlb	0	; () banked
  7151  000526  0100               	movlb	0	; () banked
  7152  000528  5193               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7153  00052A  B4D8               	btfsc	status,2,c
  7154  00052C  D002               	goto	i2l3652
  7155  00052E                     i2l333:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;my_i2c.c: 344: if (SSPCON1bits.CKP == 0) {
  7159  00052E  A8C6               	btfss	4038,4,c	;volatile
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 345: SSPCON1bits.CKP = 1;
  7163  000530  88C6               	bsf	4038,4,c	;volatile
  7164  000532                     i2l3652:
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;my_i2c.c: 346: }
  7168                           ;my_i2c.c: 347: }
  7169                           ;my_i2c.c: 350: if ((ic_ptr->buflen > 22 - 2) && (!msg_ready)) {
  7170  000532  0100               	movlb	0	; () banked
  7171  000534  EE20 F016          	lfsr	2,22
  7172  000538  0100               	movlb	0	; () banked
  7173  00053A  51C6               	movf	_ic_ptr& (0+255),w,b
  7174  00053C  26D9               	addwf	fsr2l,f,c
  7175  00053E  0100               	movlb	0	; () banked
  7176  000540  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7177  000542  22DA               	addwfc	fsr2h,f,c
  7178  000544  0E14               	movlw	20
  7179  000546  64DF               	cpfsgt	indf2,c
  7180  000548  D024               	goto	i2l3658
  7181                           
  7182                           ; BSR set to: 0
  7183  00054A  0100               	movlb	0	; () banked
  7184  00054C  0100               	movlb	0	; () banked
  7185  00054E  6797               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7186  000550  D020               	goto	i2l3658
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;my_i2c.c: 351: ic_ptr->status = 0x5;
  7190  000552  0100               	movlb	0	; () banked
  7191  000554  EE20 F019          	lfsr	2,25
  7192  000558  0100               	movlb	0	; () banked
  7193  00055A  51C6               	movf	_ic_ptr& (0+255),w,b
  7194  00055C  26D9               	addwf	fsr2l,f,c
  7195  00055E  0100               	movlb	0	; () banked
  7196  000560  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7197  000562  22DA               	addwfc	fsr2h,f,c
  7198  000564  0E05               	movlw	5
  7199  000566  6EDF               	movwf	indf2,c
  7200                           
  7201                           ;my_i2c.c: 352: ic_ptr->error_count++;
  7202  000568  0100               	movlb	0	; () banked
  7203  00056A  EE20 F01B          	lfsr	2,27
  7204  00056E  0100               	movlb	0	; () banked
  7205  000570  51C6               	movf	_ic_ptr& (0+255),w,b
  7206  000572  26D9               	addwf	fsr2l,f,c
  7207  000574  0100               	movlb	0	; () banked
  7208  000576  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7209  000578  22DA               	addwfc	fsr2h,f,c
  7210  00057A  2ADF               	incf	indf2,f,c
  7211                           
  7212                           ;my_i2c.c: 353: ic_ptr->error_code = 0x7;
  7213  00057C  0100               	movlb	0	; () banked
  7214  00057E  EE20 F01A          	lfsr	2,26
  7215  000582  0100               	movlb	0	; () banked
  7216  000584  51C6               	movf	_ic_ptr& (0+255),w,b
  7217  000586  26D9               	addwf	fsr2l,f,c
  7218  000588  0100               	movlb	0	; () banked
  7219  00058A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7220  00058C  22DA               	addwfc	fsr2h,f,c
  7221  00058E  0E07               	movlw	7
  7222  000590  6EDF               	movwf	indf2,c
  7223  000592                     i2l3658:
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;my_i2c.c: 354: }
  7227                           ;my_i2c.c: 356: if (msg_ready) {
  7228  000592  0100               	movlb	0	; () banked
  7229  000594  0100               	movlb	0	; () banked
  7230  000596  5197               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7231  000598  B4D8               	btfsc	status,2,c
  7232  00059A  D048               	goto	i2l3666
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;my_i2c.c: 357: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7236  00059C  0100               	movlb	0	; () banked
  7237  00059E  EE20 F018          	lfsr	2,24
  7238  0005A2  0100               	movlb	0	; () banked
  7239  0005A4  51C6               	movf	_ic_ptr& (0+255),w,b
  7240  0005A6  26D9               	addwf	fsr2l,f,c
  7241  0005A8  0100               	movlb	0	; () banked
  7242  0005AA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7243  0005AC  22DA               	addwfc	fsr2h,f,c
  7244  0005AE  0100               	movlb	0	; () banked
  7245  0005B0  EE10 F016          	lfsr	1,22
  7246  0005B4  0100               	movlb	0	; () banked
  7247  0005B6  51C6               	movf	_ic_ptr& (0+255),w,b
  7248  0005B8  26E1               	addwf	fsr1l,f,c
  7249  0005BA  0100               	movlb	0	; () banked
  7250  0005BC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7251  0005BE  22E2               	addwfc	fsr1h,f,c
  7252  0005C0  50E7               	movf	indf1,w,c
  7253  0005C2  0100               	movlb	0	; () banked
  7254  0005C4  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7255  0005C6  0100               	movlb	0	; () banked
  7256  0005C8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7257  0005CA  0D01               	mullw	1
  7258  0005CC  50F3               	movf	prodl,w,c
  7259  0005CE  0100               	movlb	0	; () banked
  7260  0005D0  0100               	movlb	0	; () banked
  7261  0005D2  25C6               	addwf	_ic_ptr& (0+255),w,b
  7262  0005D4  6EE1               	movwf	fsr1l,c
  7263  0005D6  50F4               	movf	prodh,w,c
  7264  0005D8  0100               	movlb	0	; () banked
  7265  0005DA  0100               	movlb	0	; () banked
  7266  0005DC  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7267  0005DE  6EE2               	movwf	fsr1h,c
  7268  0005E0  CFDF FFE7          	movff	indf2,indf1
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;my_i2c.c: 358: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7272  0005E4  0100               	movlb	0	; () banked
  7273  0005E6  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7274  0005E8  0E28               	movlw	40
  7275  0005EA  0100               	movlb	0	; () banked
  7276  0005EC  0100               	movlb	0	; () banked
  7277  0005EE  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7278  0005F0  0100               	movlb	0	; () banked
  7279  0005F2  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7280  0005F4  0100               	movlb	0	; () banked
  7281  0005F6  0100               	movlb	0	; () banked
  7282  0005F8  C0C7  F08D         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7283  0005FC  0100               	movlb	0	; () banked
  7284  0005FE  0100               	movlb	0	; () banked
  7285  000600  C0C6  F08C         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7286  000604  0100               	movlb	0	; () banked
  7287  000606  EE20 F016          	lfsr	2,22
  7288  00060A  0100               	movlb	0	; () banked
  7289  00060C  51C6               	movf	_ic_ptr& (0+255),w,b
  7290  00060E  26D9               	addwf	fsr2l,f,c
  7291  000610  0100               	movlb	0	; () banked
  7292  000612  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7293  000614  22DA               	addwfc	fsr2h,f,c
  7294  000616  50DF               	movf	indf2,w,c
  7295  000618  0100               	movlb	0	; () banked
  7296  00061A  6F8F               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7297  00061C  0100               	movlb	0	; () banked
  7298  00061E  298F               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7299  000620  EC88  F010         	call	_ToMainHigh_sendmsg
  7300                           
  7301                           ;my_i2c.c: 359: ic_ptr->buflen = 0;
  7302  000624  0100               	movlb	0	; () banked
  7303  000626  EE20 F016          	lfsr	2,22
  7304  00062A  D04B               	goto	L10
  7305  00062C                     i2l3666:
  7306                           
  7307                           ; BSR set to: 0
  7308  00062C  0100               	movlb	0	; () banked
  7309  00062E  EE20 F01B          	lfsr	2,27
  7310  000632  0100               	movlb	0	; () banked
  7311  000634  51C6               	movf	_ic_ptr& (0+255),w,b
  7312  000636  26D9               	addwf	fsr2l,f,c
  7313  000638  0100               	movlb	0	; () banked
  7314  00063A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7315  00063C  22DA               	addwfc	fsr2h,f,c
  7316  00063E  50DF               	movf	indf2,w,c
  7317  000640  B4D8               	btfsc	status,2,c
  7318  000642  D047               	goto	i2l3674
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;my_i2c.c: 361: error_buf[0] = ic_ptr->error_count;
  7322  000644  0100               	movlb	0	; () banked
  7323  000646  EE20 F01B          	lfsr	2,27
  7324  00064A  0100               	movlb	0	; () banked
  7325  00064C  51C6               	movf	_ic_ptr& (0+255),w,b
  7326  00064E  26D9               	addwf	fsr2l,f,c
  7327  000650  0100               	movlb	0	; () banked
  7328  000652  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7329  000654  22DA               	addwfc	fsr2h,f,c
  7330  000656  50DF               	movf	indf2,w,c
  7331  000658  0100               	movlb	0	; () banked
  7332  00065A  0100               	movlb	0	; () banked
  7333  00065C  6F90               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7334                           
  7335                           ;my_i2c.c: 362: error_buf[1] = ic_ptr->error_code;
  7336  00065E  0100               	movlb	0	; () banked
  7337  000660  EE20 F01A          	lfsr	2,26
  7338  000664  0100               	movlb	0	; () banked
  7339  000666  51C6               	movf	_ic_ptr& (0+255),w,b
  7340  000668  26D9               	addwf	fsr2l,f,c
  7341  00066A  0100               	movlb	0	; () banked
  7342  00066C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7343  00066E  22DA               	addwfc	fsr2h,f,c
  7344  000670  50DF               	movf	indf2,w,c
  7345  000672  0100               	movlb	0	; () banked
  7346  000674  0100               	movlb	0	; () banked
  7347  000676  6F91               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7348                           
  7349                           ;my_i2c.c: 363: error_buf[2] = ic_ptr->event_count;
  7350  000678  0100               	movlb	0	; () banked
  7351  00067A  EE20 F018          	lfsr	2,24
  7352  00067E  0100               	movlb	0	; () banked
  7353  000680  51C6               	movf	_ic_ptr& (0+255),w,b
  7354  000682  26D9               	addwf	fsr2l,f,c
  7355  000684  0100               	movlb	0	; () banked
  7356  000686  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7357  000688  22DA               	addwfc	fsr2h,f,c
  7358  00068A  50DF               	movf	indf2,w,c
  7359  00068C  0100               	movlb	0	; () banked
  7360  00068E  0100               	movlb	0	; () banked
  7361  000690  6F92               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;my_i2c.c: 364: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7365  000692  0100               	movlb	0	; () banked
  7366  000694  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7367  000696  0E29               	movlw	41
  7368  000698  0100               	movlb	0	; () banked
  7369  00069A  0100               	movlb	0	; () banked
  7370  00069C  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7371  00069E  0100               	movlb	0	; () banked
  7372  0006A0  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7373  0006A2  0100               	movlb	0	; () banked
  7374  0006A4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7375  0006A6  0100               	movlb	0	; () banked
  7376  0006A8  0100               	movlb	0	; () banked
  7377  0006AA  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7378  0006AC  0100               	movlb	0	; () banked
  7379  0006AE  0E90               	movlw	low i2c_slave_int_handler@error_buf
  7380  0006B0  0100               	movlb	0	; () banked
  7381  0006B2  0100               	movlb	0	; () banked
  7382  0006B4  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7383  0006B6  0E03               	movlw	3
  7384  0006B8  EC88  F010         	call	_ToMainHigh_sendmsg
  7385                           
  7386                           ;my_i2c.c: 365: ic_ptr->error_count = 0;
  7387  0006BC  0100               	movlb	0	; () banked
  7388  0006BE  EE20 F01B          	lfsr	2,27
  7389  0006C2                     L10:
  7390  0006C2  0100               	movlb	0	; () banked
  7391  0006C4  51C6               	movf	_ic_ptr& (0+255),w,b
  7392  0006C6  26D9               	addwf	fsr2l,f,c
  7393  0006C8  0100               	movlb	0	; () banked
  7394  0006CA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7395  0006CC  22DA               	addwfc	fsr2h,f,c
  7396  0006CE  0E00               	movlw	0
  7397  0006D0  6EDF               	movwf	indf2,c
  7398  0006D2                     i2l3674:
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;my_i2c.c: 366: }
  7402                           ;my_i2c.c: 367: if (msg_to_send) {
  7403  0006D2  0100               	movlb	0	; () banked
  7404  0006D4  0100               	movlb	0	; () banked
  7405  0006D6  5196               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7406  0006D8  B4D8               	btfsc	status,2,c
  7407  0006DA  0012               	return	
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;my_i2c.c: 370: start_i2c_slave_reply(22, 0);
  7411  0006DC  0E00               	movlw	0
  7412  0006DE  6E33               	movwf	start_i2c_slave_reply@msg+1,c
  7413  0006E0  0E00               	movlw	0
  7414  0006E2  6E32               	movwf	start_i2c_slave_reply@msg,c
  7415  0006E4  0E16               	movlw	22
  7416  0006E6  EC4B  F008         	call	_start_i2c_slave_reply
  7417                           
  7418                           ;my_i2c.c: 371: msg_to_send = 0;
  7419  0006EA  0100               	movlb	0	; () banked
  7420  0006EC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7421  0006EE  0E00               	movlw	0
  7422  0006F0  0100               	movlb	0	; () banked
  7423  0006F2  0100               	movlb	0	; () banked
  7424  0006F4  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7425  0006F6  0100               	movlb	0	; () banked
  7426  0006F8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7427  0006FA  0012               	return	
  7428  0006FC                     __end_of_i2c_slave_int_handler:
  7429                           	opt stack 0
  7430                           pclatu	equ	0xFFB
  7431                           pclath	equ	0xFFA
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           postinc0	equ	0xFEE
  7440                           fsr0h	equ	0xFEA
  7441                           fsr0l	equ	0xFE9
  7442                           wreg	equ	0xFE8
  7443                           indf1	equ	0xFE7
  7444                           fsr1h	equ	0xFE2
  7445                           fsr1l	equ	0xFE1
  7446                           bsr	equ	0xFE0
  7447                           indf2	equ	0xFDF
  7448                           postinc2	equ	0xFDE
  7449                           postdec2	equ	0xFDD
  7450                           fsr2h	equ	0xFDA
  7451                           fsr2l	equ	0xFD9
  7452                           status	equ	0xFD8
  7453                           
  7454 ;; *************** function _start_i2c_slave_reply *****************
  7455 ;; Defined at:
  7456 ;;		line 128 in file "source/my_i2c.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  length          1    wreg     unsigned char 
  7459 ;;  msg             2   49[COMRAM] PTR unsigned char 
  7460 ;;		 -> NULL(0), 
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  length          1   54[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;		None               void
  7465 ;; Registers used:
  7466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7472 ;;      Params:         2       0       0       0       0
  7473 ;;      Locals:         1       0       0       0       0
  7474 ;;      Temps:          3       0       0       0       0
  7475 ;;      Totals:         6       0       0       0       0
  7476 ;;Total ram usage:        6 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_i2c_slave_int_handler
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text41
  7486  001096                     __ptext41:
  7487                           	opt stack 0
  7488  001096                     _start_i2c_slave_reply:
  7489                           	opt stack 17
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;incstack = 0
  7493                           ;start_i2c_slave_reply@length stored from wreg
  7494  001096  CFE8 F037          	movff	wreg,start_i2c_slave_reply@length
  7495                           
  7496                           ;my_i2c.c: 132: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  7497  00109A  0100               	movlb	0	; () banked
  7498  00109C  EE20 F032          	lfsr	2,50
  7499  0010A0  0100               	movlb	0	; () banked
  7500  0010A2  51C6               	movf	_ic_ptr& (0+255),w,b
  7501  0010A4  26D9               	addwf	fsr2l,f,c
  7502  0010A6  0100               	movlb	0	; () banked
  7503  0010A8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7504  0010AA  22DA               	addwfc	fsr2h,f,c
  7505  0010AC  0E00               	movlw	0
  7506  0010AE  6EDF               	movwf	indf2,c
  7507  0010B0  D08F               	goto	i2l2868
  7508  0010B2                     i2l2856:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;my_i2c.c: 135: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  7512  0010B2  0100               	movlb	0	; () banked
  7513  0010B4  EE20 F032          	lfsr	2,50
  7514  0010B8  0100               	movlb	0	; () banked
  7515  0010BA  51C6               	movf	_ic_ptr& (0+255),w,b
  7516  0010BC  26D9               	addwf	fsr2l,f,c
  7517  0010BE  0100               	movlb	0	; () banked
  7518  0010C0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7519  0010C2  22DA               	addwfc	fsr2h,f,c
  7520  0010C4  50DF               	movf	indf2,w,c
  7521  0010C6  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7522  0010C8  0100               	movlb	0	; () banked
  7523  0010CA  EE20 F04B          	lfsr	2,75
  7524  0010CE  0100               	movlb	0	; () banked
  7525  0010D0  51C6               	movf	_ic_ptr& (0+255),w,b
  7526  0010D2  26D9               	addwf	fsr2l,f,c
  7527  0010D4  0100               	movlb	0	; () banked
  7528  0010D6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7529  0010D8  22DA               	addwfc	fsr2h,f,c
  7530  0010DA  50DF               	movf	indf2,w,c
  7531  0010DC  5C34               	subwf	??_start_i2c_slave_reply,w,c
  7532  0010DE  B0D8               	btfsc	status,0,c
  7533  0010E0  D028               	goto	i2l2860
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;my_i2c.c: 136: {
  7537                           ;my_i2c.c: 137: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  7538  0010E2  0100               	movlb	0	; () banked
  7539  0010E4  EE20 F032          	lfsr	2,50
  7540  0010E8  0100               	movlb	0	; () banked
  7541  0010EA  51C6               	movf	_ic_ptr& (0+255),w,b
  7542  0010EC  26D9               	addwf	fsr2l,f,c
  7543  0010EE  0100               	movlb	0	; () banked
  7544  0010F0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7545  0010F2  22DA               	addwfc	fsr2h,f,c
  7546  0010F4  50DF               	movf	indf2,w,c
  7547  0010F6  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7548  0010F8  5034               	movf	??_start_i2c_slave_reply,w,c
  7549  0010FA  0D01               	mullw	1
  7550  0010FC  0E35               	movlw	53
  7551  0010FE  26F3               	addwf	prodl,f,c
  7552  001100  0E00               	movlw	0
  7553  001102  22F4               	addwfc	prodh,f,c
  7554  001104  50F3               	movf	prodl,w,c
  7555  001106  0100               	movlb	0	; () banked
  7556  001108  0100               	movlb	0	; () banked
  7557  00110A  25C6               	addwf	_ic_ptr& (0+255),w,b
  7558  00110C  6ED9               	movwf	fsr2l,c
  7559  00110E  50F4               	movf	prodh,w,c
  7560  001110  0100               	movlb	0	; () banked
  7561  001112  0100               	movlb	0	; () banked
  7562  001114  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7563  001116  6EDA               	movwf	fsr2h,c
  7564  001118  0100               	movlb	0	; () banked
  7565  00111A  EE10 F032          	lfsr	1,50
  7566  00111E  0100               	movlb	0	; () banked
  7567  001120  51C6               	movf	_ic_ptr& (0+255),w,b
  7568  001122  26E1               	addwf	fsr1l,f,c
  7569  001124  0100               	movlb	0	; () banked
  7570  001126  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7571  001128  22E2               	addwfc	fsr1h,f,c
  7572  00112A  50E7               	movf	indf1,w,c
  7573  00112C  6E35               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  7574  00112E  5035               	movf	??_start_i2c_slave_reply+1,w,c
  7575  001130  D034               	goto	L15
  7576  001132                     i2l2860:
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;my_i2c.c: 139: else if(ic_ptr->sendBufLen != 0)
  7580  001132  0100               	movlb	0	; () banked
  7581  001134  EE20 F04B          	lfsr	2,75
  7582  001138  0100               	movlb	0	; () banked
  7583  00113A  51C6               	movf	_ic_ptr& (0+255),w,b
  7584  00113C  26D9               	addwf	fsr2l,f,c
  7585  00113E  0100               	movlb	0	; () banked
  7586  001140  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7587  001142  22DA               	addwfc	fsr2h,f,c
  7588  001144  50DF               	movf	indf2,w,c
  7589  001146  B4D8               	btfsc	status,2,c
  7590  001148  D00B               	goto	i2l2864
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;my_i2c.c: 140: {
  7594                           ;my_i2c.c: 141: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  7595  00114A  0100               	movlb	0	; () banked
  7596  00114C  EE20 F04B          	lfsr	2,75
  7597  001150  0100               	movlb	0	; () banked
  7598  001152  51C6               	movf	_ic_ptr& (0+255),w,b
  7599  001154  26D9               	addwf	fsr2l,f,c
  7600  001156  0100               	movlb	0	; () banked
  7601  001158  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7602  00115A  22DA               	addwfc	fsr2h,f,c
  7603  00115C  50DF               	movf	indf2,w,c
  7604  00115E  D001               	goto	L14
  7605  001160                     i2l2864:
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;my_i2c.c: 143: else
  7609                           ;my_i2c.c: 144: {
  7610                           ;my_i2c.c: 145: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  7611  001160  5037               	movf	start_i2c_slave_reply@length,w,c
  7612  001162                     L14:
  7613  001162  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7614  001164  6A35               	clrf	(??_start_i2c_slave_reply+1)& (0+255),c
  7615  001166  0E34               	movlw	52
  7616  001168  2634               	addwf	??_start_i2c_slave_reply,f,c
  7617  00116A  0E00               	movlw	0
  7618  00116C  2235               	addwfc	??_start_i2c_slave_reply+1,f,c
  7619  00116E  5034               	movf	??_start_i2c_slave_reply,w,c
  7620  001170  0100               	movlb	0	; () banked
  7621  001172  0100               	movlb	0	; () banked
  7622  001174  25C6               	addwf	_ic_ptr& (0+255),w,b
  7623  001176  6ED9               	movwf	fsr2l,c
  7624  001178  5035               	movf	??_start_i2c_slave_reply+1,w,c
  7625  00117A  0100               	movlb	0	; () banked
  7626  00117C  0100               	movlb	0	; () banked
  7627  00117E  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7628  001180  6EDA               	movwf	fsr2h,c
  7629  001182  0100               	movlb	0	; () banked
  7630  001184  EE10 F032          	lfsr	1,50
  7631  001188  0100               	movlb	0	; () banked
  7632  00118A  51C6               	movf	_ic_ptr& (0+255),w,b
  7633  00118C  26E1               	addwf	fsr1l,f,c
  7634  00118E  0100               	movlb	0	; () banked
  7635  001190  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7636  001192  22E2               	addwfc	fsr1h,f,c
  7637  001194  50E7               	movf	indf1,w,c
  7638  001196  6E36               	movwf	(??_start_i2c_slave_reply+2)& (0+255),c
  7639  001198  5036               	movf	??_start_i2c_slave_reply+2,w,c
  7640  00119A                     L15:
  7641  00119A  0D01               	mullw	1
  7642  00119C  0E1C               	movlw	28
  7643  00119E  26F3               	addwf	prodl,f,c
  7644  0011A0  0E00               	movlw	0
  7645  0011A2  22F4               	addwfc	prodh,f,c
  7646  0011A4  50F3               	movf	prodl,w,c
  7647  0011A6  0100               	movlb	0	; () banked
  7648  0011A8  0100               	movlb	0	; () banked
  7649  0011AA  25C6               	addwf	_ic_ptr& (0+255),w,b
  7650  0011AC  6EE1               	movwf	fsr1l,c
  7651  0011AE  50F4               	movf	prodh,w,c
  7652  0011B0  0100               	movlb	0	; () banked
  7653  0011B2  0100               	movlb	0	; () banked
  7654  0011B4  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7655  0011B6  6EE2               	movwf	fsr1h,c
  7656  0011B8  CFDF FFE7          	movff	indf2,indf1
  7657                           
  7658                           ; BSR set to: 0
  7659                           
  7660                           ; BSR set to: 0
  7661                           
  7662                           ; BSR set to: 0
  7663  0011BC  0100               	movlb	0	; () banked
  7664  0011BE  EE20 F032          	lfsr	2,50
  7665  0011C2  0100               	movlb	0	; () banked
  7666  0011C4  51C6               	movf	_ic_ptr& (0+255),w,b
  7667  0011C6  26D9               	addwf	fsr2l,f,c
  7668  0011C8  0100               	movlb	0	; () banked
  7669  0011CA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7670  0011CC  22DA               	addwfc	fsr2h,f,c
  7671  0011CE  2ADF               	incf	indf2,f,c
  7672  0011D0                     i2l2868:
  7673                           
  7674                           ; BSR set to: 0
  7675  0011D0  0100               	movlb	0	; () banked
  7676  0011D2  EE20 F032          	lfsr	2,50
  7677  0011D6  0100               	movlb	0	; () banked
  7678  0011D8  51C6               	movf	_ic_ptr& (0+255),w,b
  7679  0011DA  26D9               	addwf	fsr2l,f,c
  7680  0011DC  0100               	movlb	0	; () banked
  7681  0011DE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7682  0011E0  22DA               	addwfc	fsr2h,f,c
  7683  0011E2  50DF               	movf	indf2,w,c
  7684  0011E4  6E34               	movwf	??_start_i2c_slave_reply& (0+255),c
  7685  0011E6  5037               	movf	start_i2c_slave_reply@length,w,c
  7686  0011E8  5C34               	subwf	??_start_i2c_slave_reply,w,c
  7687  0011EA  A0D8               	btfss	status,0,c
  7688  0011EC  D762               	goto	i2l2856
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;my_i2c.c: 146: }
  7692                           ;my_i2c.c: 148: }
  7693                           ;my_i2c.c: 149: ic_ptr->sendBufLen =0;
  7694                           
  7695                           ; BSR set to: 0
  7696  0011EE  0100               	movlb	0	; () banked
  7697  0011F0  EE20 F04B          	lfsr	2,75
  7698  0011F4  0100               	movlb	0	; () banked
  7699  0011F6  51C6               	movf	_ic_ptr& (0+255),w,b
  7700  0011F8  26D9               	addwf	fsr2l,f,c
  7701  0011FA  0100               	movlb	0	; () banked
  7702  0011FC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7703  0011FE  22DA               	addwfc	fsr2h,f,c
  7704  001200  0E00               	movlw	0
  7705  001202  6EDF               	movwf	indf2,c
  7706                           
  7707                           ;my_i2c.c: 150: ic_ptr->outbuflen = length;
  7708  001204  0100               	movlb	0	; () banked
  7709  001206  EE20 F032          	lfsr	2,50
  7710  00120A  0100               	movlb	0	; () banked
  7711  00120C  51C6               	movf	_ic_ptr& (0+255),w,b
  7712  00120E  26D9               	addwf	fsr2l,f,c
  7713  001210  0100               	movlb	0	; () banked
  7714  001212  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7715  001214  22DA               	addwfc	fsr2h,f,c
  7716  001216  C037  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7717                           
  7718                           ;my_i2c.c: 151: ic_ptr->outbufind = 1;
  7719  00121A  0100               	movlb	0	; () banked
  7720  00121C  EE20 F033          	lfsr	2,51
  7721  001220  0100               	movlb	0	; () banked
  7722  001222  51C6               	movf	_ic_ptr& (0+255),w,b
  7723  001224  26D9               	addwf	fsr2l,f,c
  7724  001226  0100               	movlb	0	; () banked
  7725  001228  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7726  00122A  22DA               	addwfc	fsr2h,f,c
  7727  00122C  0E01               	movlw	1
  7728  00122E  6EDF               	movwf	indf2,c
  7729                           
  7730                           ;my_i2c.c: 154: SSPBUF = ic_ptr->outbuffer[0];
  7731  001230  0100               	movlb	0	; () banked
  7732  001232  EE20 F01C          	lfsr	2,28
  7733  001236  0100               	movlb	0	; () banked
  7734  001238  51C6               	movf	_ic_ptr& (0+255),w,b
  7735  00123A  26D9               	addwf	fsr2l,f,c
  7736  00123C  0100               	movlb	0	; () banked
  7737  00123E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7738  001240  22DA               	addwfc	fsr2h,f,c
  7739  001242  50DF               	movf	indf2,w,c
  7740  001244  6EC9               	movwf	4041,c	;volatile
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;my_i2c.c: 157: SSPCON1bits.CKP = 1;
  7744  001246  88C6               	bsf	4038,4,c	;volatile
  7745                           
  7746                           ; BSR set to: 0
  7747  001248  0012               	return	
  7748  00124A                     __end_of_start_i2c_slave_reply:
  7749                           	opt stack 0
  7750                           pclatu	equ	0xFFB
  7751                           pclath	equ	0xFFA
  7752                           tblptru	equ	0xFF8
  7753                           tblptrh	equ	0xFF7
  7754                           tblptrl	equ	0xFF6
  7755                           tablat	equ	0xFF5
  7756                           prodh	equ	0xFF4
  7757                           prodl	equ	0xFF3
  7758                           intcon	equ	0xFF2
  7759                           postinc0	equ	0xFEE
  7760                           fsr0h	equ	0xFEA
  7761                           fsr0l	equ	0xFE9
  7762                           wreg	equ	0xFE8
  7763                           indf1	equ	0xFE7
  7764                           fsr1h	equ	0xFE2
  7765                           fsr1l	equ	0xFE1
  7766                           bsr	equ	0xFE0
  7767                           indf2	equ	0xFDF
  7768                           postinc2	equ	0xFDE
  7769                           postdec2	equ	0xFDD
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function _handle_start *****************
  7775 ;; Defined at:
  7776 ;;		line 163 in file "source/my_i2c.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  data_read       1    wreg     unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  data_read       1   49[COMRAM] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;		None               void
  7783 ;; Registers used:
  7784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7790 ;;      Params:         0       0       0       0       0
  7791 ;;      Locals:         1       0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0
  7793 ;;      Totals:         1       0       0       0       0
  7794 ;;Total ram usage:        1 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_i2c_slave_int_handler
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text42
  7804  00182E                     __ptext42:
  7805                           	opt stack 0
  7806  00182E                     _handle_start:
  7807                           	opt stack 17
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;incstack = 0
  7811                           ;handle_start@data_read stored from wreg
  7812  00182E  CFE8 F032          	movff	wreg,handle_start@data_read
  7813                           
  7814                           ;my_i2c.c: 164: ic_ptr->event_count = 1;
  7815  001832  0100               	movlb	0	; () banked
  7816  001834  EE20 F018          	lfsr	2,24
  7817  001838  0100               	movlb	0	; () banked
  7818  00183A  51C6               	movf	_ic_ptr& (0+255),w,b
  7819  00183C  26D9               	addwf	fsr2l,f,c
  7820  00183E  0100               	movlb	0	; () banked
  7821  001840  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7822  001842  22DA               	addwfc	fsr2h,f,c
  7823  001844  0E01               	movlw	1
  7824  001846  6EDF               	movwf	indf2,c
  7825                           
  7826                           ;my_i2c.c: 165: ic_ptr->buflen = 0;
  7827  001848  0100               	movlb	0	; () banked
  7828  00184A  EE20 F016          	lfsr	2,22
  7829  00184E  0100               	movlb	0	; () banked
  7830  001850  51C6               	movf	_ic_ptr& (0+255),w,b
  7831  001852  26D9               	addwf	fsr2l,f,c
  7832  001854  0100               	movlb	0	; () banked
  7833  001856  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  001858  22DA               	addwfc	fsr2h,f,c
  7835  00185A  0E00               	movlw	0
  7836  00185C  6EDF               	movwf	indf2,c
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;my_i2c.c: 167: if (data_read) {
  7840  00185E  5032               	movf	handle_start@data_read,w,c
  7841  001860  B4D8               	btfsc	status,2,c
  7842  001862  D03D               	goto	i2l2886
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;my_i2c.c: 168: if (SSPSTATbits.D_A == 1) {
  7846  001864  AAC7               	btfss	4039,5,c	;volatile
  7847  001866  D021               	goto	i2l281
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;my_i2c.c: 171: ic_ptr->status = 0x5;
  7851  001868  0100               	movlb	0	; () banked
  7852  00186A  EE20 F019          	lfsr	2,25
  7853  00186E  0100               	movlb	0	; () banked
  7854  001870  51C6               	movf	_ic_ptr& (0+255),w,b
  7855  001872  26D9               	addwf	fsr2l,f,c
  7856  001874  0100               	movlb	0	; () banked
  7857  001876  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7858  001878  22DA               	addwfc	fsr2h,f,c
  7859  00187A  0E05               	movlw	5
  7860  00187C  6EDF               	movwf	indf2,c
  7861                           
  7862                           ;my_i2c.c: 172: ic_ptr->error_count++;
  7863  00187E  0100               	movlb	0	; () banked
  7864  001880  EE20 F01B          	lfsr	2,27
  7865  001884  0100               	movlb	0	; () banked
  7866  001886  51C6               	movf	_ic_ptr& (0+255),w,b
  7867  001888  26D9               	addwf	fsr2l,f,c
  7868  00188A  0100               	movlb	0	; () banked
  7869  00188C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7870  00188E  22DA               	addwfc	fsr2h,f,c
  7871  001890  2ADF               	incf	indf2,f,c
  7872                           
  7873                           ;my_i2c.c: 173: ic_ptr->error_code = 0x5;
  7874  001892  0100               	movlb	0	; () banked
  7875  001894  EE20 F01A          	lfsr	2,26
  7876  001898  0100               	movlb	0	; () banked
  7877  00189A  51C6               	movf	_ic_ptr& (0+255),w,b
  7878  00189C  26D9               	addwf	fsr2l,f,c
  7879  00189E  0100               	movlb	0	; () banked
  7880  0018A0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7881  0018A2  22DA               	addwfc	fsr2h,f,c
  7882  0018A4  0E05               	movlw	5
  7883  0018A6  6EDF               	movwf	indf2,c
  7884                           
  7885                           ;my_i2c.c: 174: } else {
  7886  0018A8  0012               	return	
  7887  0018AA                     i2l281:
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;my_i2c.c: 175: if (SSPSTATbits.R_W == 1) {
  7891  0018AA  A4C7               	btfss	4039,2,c	;volatile
  7892  0018AC  D00C               	goto	i2l2884
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;my_i2c.c: 176: ic_ptr->status = 0x8;
  7896  0018AE  0100               	movlb	0	; () banked
  7897  0018B0  EE20 F019          	lfsr	2,25
  7898  0018B4  0100               	movlb	0	; () banked
  7899  0018B6  51C6               	movf	_ic_ptr& (0+255),w,b
  7900  0018B8  26D9               	addwf	fsr2l,f,c
  7901  0018BA  0100               	movlb	0	; () banked
  7902  0018BC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7903  0018BE  22DA               	addwfc	fsr2h,f,c
  7904  0018C0  0E08               	movlw	8
  7905  0018C2  6EDF               	movwf	indf2,c
  7906                           
  7907                           ;my_i2c.c: 177: } else {
  7908  0018C4  0012               	return	
  7909  0018C6                     i2l2884:
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;my_i2c.c: 178: ic_ptr->status = 0x7;
  7913  0018C6  0100               	movlb	0	; () banked
  7914  0018C8  EE20 F019          	lfsr	2,25
  7915  0018CC  0100               	movlb	0	; () banked
  7916  0018CE  51C6               	movf	_ic_ptr& (0+255),w,b
  7917  0018D0  26D9               	addwf	fsr2l,f,c
  7918  0018D2  0100               	movlb	0	; () banked
  7919  0018D4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7920  0018D6  22DA               	addwfc	fsr2h,f,c
  7921  0018D8  0E07               	movlw	7
  7922  0018DA  6EDF               	movwf	indf2,c
  7923  0018DC  0012               	return	
  7924  0018DE                     i2l2886:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;my_i2c.c: 182: ic_ptr->status = 0x6;
  7928  0018DE  0100               	movlb	0	; () banked
  7929  0018E0  EE20 F019          	lfsr	2,25
  7930  0018E4  0100               	movlb	0	; () banked
  7931  0018E6  51C6               	movf	_ic_ptr& (0+255),w,b
  7932  0018E8  26D9               	addwf	fsr2l,f,c
  7933  0018EA  0100               	movlb	0	; () banked
  7934  0018EC  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  7935  0018EE  22DA               	addwfc	fsr2h,f,c
  7936  0018F0  0E06               	movlw	6
  7937  0018F2  6EDF               	movwf	indf2,c
  7938  0018F4  0012               	return	
  7939  0018F6                     __end_of_handle_start:
  7940                           	opt stack 0
  7941                           pclatu	equ	0xFFB
  7942                           pclath	equ	0xFFA
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           prodh	equ	0xFF4
  7948                           prodl	equ	0xFF3
  7949                           intcon	equ	0xFF2
  7950                           postinc0	equ	0xFEE
  7951                           fsr0h	equ	0xFEA
  7952                           fsr0l	equ	0xFE9
  7953                           wreg	equ	0xFE8
  7954                           indf1	equ	0xFE7
  7955                           fsr1h	equ	0xFE2
  7956                           fsr1l	equ	0xFE1
  7957                           bsr	equ	0xFE0
  7958                           indf2	equ	0xFDF
  7959                           postinc2	equ	0xFDE
  7960                           postdec2	equ	0xFDD
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _i2c_master_int_handler *****************
  7966 ;; Defined at:
  7967 ;;		line 448 in file "source/my_i2c.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;		None               void
  7974 ;; Registers used:
  7975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7981 ;;      Params:         0       0       0       0       0
  7982 ;;      Locals:         0       0       0       0       0
  7983 ;;      Temps:          1       0       0       0       0
  7984 ;;      Totals:         1       0       0       0       0
  7985 ;;Total ram usage:        1 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    3
  7988 ;; This function calls:
  7989 ;;		_ToMainHigh_sendmsg
  7990 ;; This function is called by:
  7991 ;;		_i2c_int_handler
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text43
  7996  0006FC                     __ptext43:
  7997                           	opt stack 0
  7998  0006FC                     _i2c_master_int_handler:
  7999                           	opt stack 15
  8000                           
  8001                           ;my_i2c.c: 449: switch (ic_ptr->status){
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;incstack = 0
  8005  0006FC  D251               	goto	i2l3536
  8006  0006FE                     i2l3446:
  8007                           
  8008                           ;my_i2c.c: 452: ic_ptr->status = 0x24;
  8009  0006FE  0100               	movlb	0	; () banked
  8010  000700  EE20 F019          	lfsr	2,25
  8011  000704  0100               	movlb	0	; () banked
  8012  000706  51C6               	movf	_ic_ptr& (0+255),w,b
  8013  000708  26D9               	addwf	fsr2l,f,c
  8014  00070A  0100               	movlb	0	; () banked
  8015  00070C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8016  00070E  22DA               	addwfc	fsr2h,f,c
  8017  000710  0E24               	movlw	36
  8018  000712  6EDF               	movwf	indf2,c
  8019                           
  8020                           ;my_i2c.c: 453: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  8021  000714  0100               	movlb	0	; () banked
  8022  000716  EE20 F034          	lfsr	2,52
  8023  00071A  0100               	movlb	0	; () banked
  8024  00071C  51C6               	movf	_ic_ptr& (0+255),w,b
  8025  00071E  26D9               	addwf	fsr2l,f,c
  8026  000720  0100               	movlb	0	; () banked
  8027  000722  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8028  000724  22DA               	addwfc	fsr2h,f,c
  8029  000726  50DF               	movf	indf2,w,c
  8030  000728  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8031  00072A  90D8               	bcf	status,0,c
  8032  00072C  343E               	rlcf	??_i2c_master_int_handler,w,c
  8033  00072E  0BFE               	andlw	254
  8034  000730  6EC9               	movwf	4041,c	;volatile
  8035                           
  8036                           ;my_i2c.c: 454: break;
  8037  000732  0012               	return	
  8038  000734                     i2l352:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;my_i2c.c: 457: if (SSPCON2bits.ACKSTAT == 0) {
  8042  000734  BCC5               	btfsc	4037,6,c	;volatile
  8043  000736  D074               	goto	i2l3464
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;my_i2c.c: 458: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8047  000738  0100               	movlb	0	; () banked
  8048  00073A  EE20 F033          	lfsr	2,51
  8049  00073E  0100               	movlb	0	; () banked
  8050  000740  51C6               	movf	_ic_ptr& (0+255),w,b
  8051  000742  26D9               	addwf	fsr2l,f,c
  8052  000744  0100               	movlb	0	; () banked
  8053  000746  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8054  000748  22DA               	addwfc	fsr2h,f,c
  8055  00074A  50DF               	movf	indf2,w,c
  8056  00074C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8057  00074E  0100               	movlb	0	; () banked
  8058  000750  EE20 F032          	lfsr	2,50
  8059  000754  0100               	movlb	0	; () banked
  8060  000756  51C6               	movf	_ic_ptr& (0+255),w,b
  8061  000758  26D9               	addwf	fsr2l,f,c
  8062  00075A  0100               	movlb	0	; () banked
  8063  00075C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8064  00075E  22DA               	addwfc	fsr2h,f,c
  8065  000760  50DF               	movf	indf2,w,c
  8066  000762  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8067  000764  B0D8               	btfsc	status,0,c
  8068  000766  D033               	goto	i2l3456
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;my_i2c.c: 459: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8072  000768  0100               	movlb	0	; () banked
  8073  00076A  EE20 F033          	lfsr	2,51
  8074  00076E  0100               	movlb	0	; () banked
  8075  000770  51C6               	movf	_ic_ptr& (0+255),w,b
  8076  000772  26D9               	addwf	fsr2l,f,c
  8077  000774  0100               	movlb	0	; () banked
  8078  000776  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8079  000778  22DA               	addwfc	fsr2h,f,c
  8080  00077A  50DF               	movf	indf2,w,c
  8081  00077C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8082  00077E  503E               	movf	??_i2c_master_int_handler,w,c
  8083  000780  0D01               	mullw	1
  8084  000782  0E1C               	movlw	28
  8085  000784  26F3               	addwf	prodl,f,c
  8086  000786  0E00               	movlw	0
  8087  000788  22F4               	addwfc	prodh,f,c
  8088  00078A  50F3               	movf	prodl,w,c
  8089  00078C  0100               	movlb	0	; () banked
  8090  00078E  0100               	movlb	0	; () banked
  8091  000790  25C6               	addwf	_ic_ptr& (0+255),w,b
  8092  000792  6ED9               	movwf	fsr2l,c
  8093  000794  50F4               	movf	prodh,w,c
  8094  000796  0100               	movlb	0	; () banked
  8095  000798  0100               	movlb	0	; () banked
  8096  00079A  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8097  00079C  6EDA               	movwf	fsr2h,c
  8098  00079E  50DF               	movf	indf2,w,c
  8099  0007A0  6EC9               	movwf	4041,c	;volatile
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;my_i2c.c: 460: ic_ptr->outbufind++;
  8103  0007A2  0100               	movlb	0	; () banked
  8104  0007A4  EE20 F033          	lfsr	2,51
  8105  0007A8  0100               	movlb	0	; () banked
  8106  0007AA  51C6               	movf	_ic_ptr& (0+255),w,b
  8107  0007AC  26D9               	addwf	fsr2l,f,c
  8108  0007AE  0100               	movlb	0	; () banked
  8109  0007B0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8110  0007B2  22DA               	addwfc	fsr2h,f,c
  8111  0007B4  2ADF               	incf	indf2,f,c
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;my_i2c.c: 461: ic_ptr->status = 0x24;
  8115  0007B6  0100               	movlb	0	; () banked
  8116  0007B8  EE20 F019          	lfsr	2,25
  8117  0007BC  0100               	movlb	0	; () banked
  8118  0007BE  51C6               	movf	_ic_ptr& (0+255),w,b
  8119  0007C0  26D9               	addwf	fsr2l,f,c
  8120  0007C2  0100               	movlb	0	; () banked
  8121  0007C4  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8122  0007C6  22DA               	addwfc	fsr2h,f,c
  8123  0007C8  0E24               	movlw	36
  8124  0007CA  6EDF               	movwf	indf2,c
  8125                           
  8126                           ;my_i2c.c: 462: }
  8127  0007CC  0012               	return	
  8128  0007CE                     i2l3456:
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;my_i2c.c: 463: else {
  8132                           ;my_i2c.c: 464: ToMainHigh_sendmsg(0, 43, 0);
  8133  0007CE  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8134  0007D0  0E2B               	movlw	43
  8135  0007D2  0100               	movlb	0	; () banked
  8136  0007D4  0100               	movlb	0	; () banked
  8137  0007D6  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8138  0007D8  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8139  0007DA  0E00               	movlw	0
  8140  0007DC  0100               	movlb	0	; () banked
  8141  0007DE  0100               	movlb	0	; () banked
  8142  0007E0  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8143  0007E2  0E00               	movlw	0
  8144  0007E4  0100               	movlb	0	; () banked
  8145  0007E6  0100               	movlb	0	; () banked
  8146  0007E8  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8147  0007EA  0E00               	movlw	0
  8148  0007EC  EC88  F010         	call	_ToMainHigh_sendmsg
  8149                           
  8150                           ;my_i2c.c: 465: ic_ptr->outbuflen = 0;
  8151  0007F0  0100               	movlb	0	; () banked
  8152  0007F2  EE20 F032          	lfsr	2,50
  8153  0007F6  0100               	movlb	0	; () banked
  8154  0007F8  51C6               	movf	_ic_ptr& (0+255),w,b
  8155  0007FA  26D9               	addwf	fsr2l,f,c
  8156  0007FC  0100               	movlb	0	; () banked
  8157  0007FE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8158  000800  22DA               	addwfc	fsr2h,f,c
  8159  000802  0E00               	movlw	0
  8160  000804  6EDF               	movwf	indf2,c
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;my_i2c.c: 466: ic_ptr->status = 0x5;
  8164  000806  0100               	movlb	0	; () banked
  8165  000808  EE20 F019          	lfsr	2,25
  8166  00080C  0100               	movlb	0	; () banked
  8167  00080E  51C6               	movf	_ic_ptr& (0+255),w,b
  8168  000810  26D9               	addwf	fsr2l,f,c
  8169  000812  0100               	movlb	0	; () banked
  8170  000814  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8171  000816  22DA               	addwfc	fsr2h,f,c
  8172  000818  0E05               	movlw	5
  8173  00081A  6EDF               	movwf	indf2,c
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;my_i2c.c: 467: SSPCON2bits.PEN = 1;
  8177  00081C  84C5               	bsf	4037,2,c	;volatile
  8178  00081E  0012               	return	
  8179  000820                     i2l3464:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;my_i2c.c: 470: else {
  8183                           ;my_i2c.c: 471: ToMainHigh_sendmsg(0, 44, 0);
  8184  000820  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8185  000822  0E2C               	movlw	44
  8186  000824  0100               	movlb	0	; () banked
  8187  000826  0100               	movlb	0	; () banked
  8188  000828  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8189  00082A  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8190  00082C  0E00               	movlw	0
  8191  00082E  0100               	movlb	0	; () banked
  8192  000830  0100               	movlb	0	; () banked
  8193  000832  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8194  000834  0E00               	movlw	0
  8195  000836  0100               	movlb	0	; () banked
  8196  000838  0100               	movlb	0	; () banked
  8197  00083A  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8198  00083C  0E00               	movlw	0
  8199  00083E  EC88  F010         	call	_ToMainHigh_sendmsg
  8200                           
  8201                           ;my_i2c.c: 472: ic_ptr->status = 0x5;
  8202  000842  0100               	movlb	0	; () banked
  8203  000844  EE20 F019          	lfsr	2,25
  8204  000848  0100               	movlb	0	; () banked
  8205  00084A  51C6               	movf	_ic_ptr& (0+255),w,b
  8206  00084C  26D9               	addwf	fsr2l,f,c
  8207  00084E  0100               	movlb	0	; () banked
  8208  000850  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8209  000852  22DA               	addwfc	fsr2h,f,c
  8210  000854  0E05               	movlw	5
  8211  000856  6EDF               	movwf	indf2,c
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;my_i2c.c: 473: SSPCON2bits.PEN = 1;
  8215  000858  84C5               	bsf	4037,2,c	;volatile
  8216  00085A  0012               	return	
  8217  00085C                     i2l3470:
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;my_i2c.c: 478: ToMainHigh_sendmsg(0, 43, 0);
  8221  00085C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8222  00085E  0E2B               	movlw	43
  8223  000860  0100               	movlb	0	; () banked
  8224  000862  0100               	movlb	0	; () banked
  8225  000864  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8226  000866  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8227  000868  0E00               	movlw	0
  8228  00086A  0100               	movlb	0	; () banked
  8229  00086C  0100               	movlb	0	; () banked
  8230  00086E  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8231  000870  0E00               	movlw	0
  8232  000872  0100               	movlb	0	; () banked
  8233  000874  0100               	movlb	0	; () banked
  8234  000876  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8235  000878  0E00               	movlw	0
  8236  00087A  EC88  F010         	call	_ToMainHigh_sendmsg
  8237                           
  8238                           ;my_i2c.c: 479: ic_ptr->status = 0x5;
  8239  00087E  0100               	movlb	0	; () banked
  8240  000880  EE20 F019          	lfsr	2,25
  8241  000884  0100               	movlb	0	; () banked
  8242  000886  51C6               	movf	_ic_ptr& (0+255),w,b
  8243  000888  26D9               	addwf	fsr2l,f,c
  8244  00088A  0100               	movlb	0	; () banked
  8245  00088C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8246  00088E  22DA               	addwfc	fsr2h,f,c
  8247  000890  0E05               	movlw	5
  8248  000892  6EDF               	movwf	indf2,c
  8249                           
  8250                           ;my_i2c.c: 480: break;
  8251  000894  0012               	return	
  8252  000896                     i2l358:
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;my_i2c.c: 532: if (SSPCON2bits.ACKSTAT == 0) {
  8256  000896  BCC5               	btfsc	4037,6,c	;volatile
  8257  000898  D017               	goto	i2l3476
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;my_i2c.c: 533: ic_ptr->status = 0x14;
  8261  00089A  0100               	movlb	0	; () banked
  8262  00089C  EE20 F019          	lfsr	2,25
  8263  0008A0  0100               	movlb	0	; () banked
  8264  0008A2  51C6               	movf	_ic_ptr& (0+255),w,b
  8265  0008A4  26D9               	addwf	fsr2l,f,c
  8266  0008A6  0100               	movlb	0	; () banked
  8267  0008A8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8268  0008AA  22DA               	addwfc	fsr2h,f,c
  8269  0008AC  0E14               	movlw	20
  8270  0008AE  6EDF               	movwf	indf2,c
  8271                           
  8272                           ;my_i2c.c: 534: SSPBUF = ic_ptr->slave_addr;
  8273  0008B0  0100               	movlb	0	; () banked
  8274  0008B2  EE20 F034          	lfsr	2,52
  8275  0008B6  0100               	movlb	0	; () banked
  8276  0008B8  51C6               	movf	_ic_ptr& (0+255),w,b
  8277  0008BA  26D9               	addwf	fsr2l,f,c
  8278  0008BC  0100               	movlb	0	; () banked
  8279  0008BE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8280  0008C0  22DA               	addwfc	fsr2h,f,c
  8281  0008C2  50DF               	movf	indf2,w,c
  8282  0008C4  6EC9               	movwf	4041,c	;volatile
  8283                           
  8284                           ;my_i2c.c: 535: }
  8285  0008C6  0012               	return	
  8286  0008C8                     i2l3476:
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;my_i2c.c: 537: else {
  8290                           ;my_i2c.c: 538: ToMainHigh_sendmsg(0, 46, 0);
  8291  0008C8  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8292  0008CA  0E2E               	movlw	46
  8293  0008CC  0100               	movlb	0	; () banked
  8294  0008CE  0100               	movlb	0	; () banked
  8295  0008D0  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8296  0008D2  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8297  0008D4  0E00               	movlw	0
  8298  0008D6  0100               	movlb	0	; () banked
  8299  0008D8  0100               	movlb	0	; () banked
  8300  0008DA  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8301  0008DC  0E00               	movlw	0
  8302  0008DE  0100               	movlb	0	; () banked
  8303  0008E0  0100               	movlb	0	; () banked
  8304  0008E2  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8305  0008E4  0E00               	movlw	0
  8306  0008E6  EC88  F010         	call	_ToMainHigh_sendmsg
  8307                           
  8308                           ;my_i2c.c: 539: ic_ptr->status = 0x5;
  8309  0008EA  0100               	movlb	0	; () banked
  8310  0008EC  EE20 F019          	lfsr	2,25
  8311  0008F0  0100               	movlb	0	; () banked
  8312  0008F2  51C6               	movf	_ic_ptr& (0+255),w,b
  8313  0008F4  26D9               	addwf	fsr2l,f,c
  8314  0008F6  0100               	movlb	0	; () banked
  8315  0008F8  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8316  0008FA  22DA               	addwfc	fsr2h,f,c
  8317  0008FC  0E05               	movlw	5
  8318  0008FE  6EDF               	movwf	indf2,c
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;my_i2c.c: 540: SSPCON2bits.PEN = 1;
  8322  000900  84C5               	bsf	4037,2,c	;volatile
  8323  000902  0012               	return	
  8324  000904                     i2l361:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;my_i2c.c: 545: if (SSPCON2bits.ACKSTAT == 0) {
  8328  000904  BCC5               	btfsc	4037,6,c	;volatile
  8329  000906  D022               	goto	i2l3484
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;my_i2c.c: 546: ic_ptr->status = 0x15;
  8333  000908  0100               	movlb	0	; () banked
  8334  00090A  EE20 F019          	lfsr	2,25
  8335  00090E  0100               	movlb	0	; () banked
  8336  000910  51C6               	movf	_ic_ptr& (0+255),w,b
  8337  000912  26D9               	addwf	fsr2l,f,c
  8338  000914  0100               	movlb	0	; () banked
  8339  000916  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8340  000918  22DA               	addwfc	fsr2h,f,c
  8341  00091A  0E15               	movlw	21
  8342  00091C  6EDF               	movwf	indf2,c
  8343                           
  8344                           ;my_i2c.c: 547: ic_ptr->outbuflen = 0;
  8345  00091E  0100               	movlb	0	; () banked
  8346  000920  EE20 F032          	lfsr	2,50
  8347  000924  0100               	movlb	0	; () banked
  8348  000926  51C6               	movf	_ic_ptr& (0+255),w,b
  8349  000928  26D9               	addwf	fsr2l,f,c
  8350  00092A  0100               	movlb	0	; () banked
  8351  00092C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8352  00092E  22DA               	addwfc	fsr2h,f,c
  8353  000930  0E00               	movlw	0
  8354  000932  6EDF               	movwf	indf2,c
  8355                           
  8356                           ;my_i2c.c: 548: SSPBUF = ic_ptr->outbuffer[0];
  8357  000934  0100               	movlb	0	; () banked
  8358  000936  EE20 F01C          	lfsr	2,28
  8359  00093A  0100               	movlb	0	; () banked
  8360  00093C  51C6               	movf	_ic_ptr& (0+255),w,b
  8361  00093E  26D9               	addwf	fsr2l,f,c
  8362  000940  0100               	movlb	0	; () banked
  8363  000942  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8364  000944  22DA               	addwfc	fsr2h,f,c
  8365  000946  50DF               	movf	indf2,w,c
  8366  000948  6EC9               	movwf	4041,c	;volatile
  8367                           
  8368                           ;my_i2c.c: 549: }
  8369  00094A  0012               	return	
  8370  00094C                     i2l3484:
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;my_i2c.c: 550: else {
  8374                           ;my_i2c.c: 551: ToMainHigh_sendmsg(0, 46, 0);
  8375  00094C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8376  00094E  0E2E               	movlw	46
  8377  000950  0100               	movlb	0	; () banked
  8378  000952  0100               	movlb	0	; () banked
  8379  000954  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8380  000956  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8381  000958  0E00               	movlw	0
  8382  00095A  0100               	movlb	0	; () banked
  8383  00095C  0100               	movlb	0	; () banked
  8384  00095E  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8385  000960  0E00               	movlw	0
  8386  000962  0100               	movlb	0	; () banked
  8387  000964  0100               	movlb	0	; () banked
  8388  000966  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8389  000968  0E00               	movlw	0
  8390  00096A  EC88  F010         	call	_ToMainHigh_sendmsg
  8391                           
  8392                           ;my_i2c.c: 552: ic_ptr->status = 0x5;
  8393  00096E  0100               	movlb	0	; () banked
  8394  000970  EE20 F019          	lfsr	2,25
  8395  000974  0100               	movlb	0	; () banked
  8396  000976  51C6               	movf	_ic_ptr& (0+255),w,b
  8397  000978  26D9               	addwf	fsr2l,f,c
  8398  00097A  0100               	movlb	0	; () banked
  8399  00097C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8400  00097E  22DA               	addwfc	fsr2h,f,c
  8401  000980  0E05               	movlw	5
  8402  000982  6EDF               	movwf	indf2,c
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;my_i2c.c: 553: SSPCON2bits.PEN = 1;
  8406  000984  84C5               	bsf	4037,2,c	;volatile
  8407  000986  0012               	return	
  8408  000988                     i2l364:
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;my_i2c.c: 558: if (SSPCON2bits.ACKSTAT == 0) {
  8412  000988  BCC5               	btfsc	4037,6,c	;volatile
  8413  00098A  D00D               	goto	i2l3494
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;my_i2c.c: 559: ic_ptr->status = 0x20;
  8417  00098C  0100               	movlb	0	; () banked
  8418  00098E  EE20 F019          	lfsr	2,25
  8419  000992  0100               	movlb	0	; () banked
  8420  000994  51C6               	movf	_ic_ptr& (0+255),w,b
  8421  000996  26D9               	addwf	fsr2l,f,c
  8422  000998  0100               	movlb	0	; () banked
  8423  00099A  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8424  00099C  22DA               	addwfc	fsr2h,f,c
  8425  00099E  0E20               	movlw	32
  8426  0009A0  6EDF               	movwf	indf2,c
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;my_i2c.c: 560: SSPCON2bits.RSEN = 1;
  8430  0009A2  82C5               	bsf	4037,1,c	;volatile
  8431                           
  8432                           ;my_i2c.c: 561: }
  8433  0009A4  0012               	return	
  8434  0009A6                     i2l3494:
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;my_i2c.c: 562: else {
  8438                           ;my_i2c.c: 563: ToMainHigh_sendmsg(0, 46, 0);
  8439  0009A6  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8440  0009A8  0E2E               	movlw	46
  8441  0009AA  0100               	movlb	0	; () banked
  8442  0009AC  0100               	movlb	0	; () banked
  8443  0009AE  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8444  0009B0  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8445  0009B2  0E00               	movlw	0
  8446  0009B4  0100               	movlb	0	; () banked
  8447  0009B6  0100               	movlb	0	; () banked
  8448  0009B8  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8449  0009BA  0E00               	movlw	0
  8450  0009BC  0100               	movlb	0	; () banked
  8451  0009BE  0100               	movlb	0	; () banked
  8452  0009C0  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8453  0009C2  0E00               	movlw	0
  8454  0009C4  EC88  F010         	call	_ToMainHigh_sendmsg
  8455                           
  8456                           ;my_i2c.c: 564: ic_ptr->status = 0x5;
  8457  0009C8  0100               	movlb	0	; () banked
  8458  0009CA  EE20 F019          	lfsr	2,25
  8459  0009CE  0100               	movlb	0	; () banked
  8460  0009D0  51C6               	movf	_ic_ptr& (0+255),w,b
  8461  0009D2  26D9               	addwf	fsr2l,f,c
  8462  0009D4  0100               	movlb	0	; () banked
  8463  0009D6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8464  0009D8  22DA               	addwfc	fsr2h,f,c
  8465  0009DA  0E05               	movlw	5
  8466  0009DC  6EDF               	movwf	indf2,c
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;my_i2c.c: 565: SSPCON2bits.PEN = 1;
  8470  0009DE  84C5               	bsf	4037,2,c	;volatile
  8471  0009E0  0012               	return	
  8472  0009E2                     i2l3500:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;my_i2c.c: 570: ic_ptr->status = 0x21;
  8476  0009E2  0100               	movlb	0	; () banked
  8477  0009E4  EE20 F019          	lfsr	2,25
  8478  0009E8  0100               	movlb	0	; () banked
  8479  0009EA  51C6               	movf	_ic_ptr& (0+255),w,b
  8480  0009EC  26D9               	addwf	fsr2l,f,c
  8481  0009EE  0100               	movlb	0	; () banked
  8482  0009F0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8483  0009F2  22DA               	addwfc	fsr2h,f,c
  8484  0009F4  0E21               	movlw	33
  8485  0009F6  6EDF               	movwf	indf2,c
  8486                           
  8487                           ;my_i2c.c: 571: SSPBUF = ic_ptr->slave_addr | 0x1;
  8488  0009F8  0100               	movlb	0	; () banked
  8489  0009FA  EE20 F034          	lfsr	2,52
  8490  0009FE  0100               	movlb	0	; () banked
  8491  000A00  51C6               	movf	_ic_ptr& (0+255),w,b
  8492  000A02  26D9               	addwf	fsr2l,f,c
  8493  000A04  0100               	movlb	0	; () banked
  8494  000A06  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8495  000A08  22DA               	addwfc	fsr2h,f,c
  8496  000A0A  50DF               	movf	indf2,w,c
  8497  000A0C  0901               	iorlw	1
  8498  000A0E  6EC9               	movwf	4041,c	;volatile
  8499                           
  8500                           ;my_i2c.c: 572: break;
  8501  000A10  0012               	return	
  8502  000A12                     i2l368:
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;my_i2c.c: 575: if (SSPCON2bits.ACKSTAT == 0) {
  8506  000A12  BCC5               	btfsc	4037,6,c	;volatile
  8507  000A14  D00D               	goto	i2l3506
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;my_i2c.c: 576: ic_ptr->status = 0x22;
  8511  000A16  0100               	movlb	0	; () banked
  8512  000A18  EE20 F019          	lfsr	2,25
  8513  000A1C  0100               	movlb	0	; () banked
  8514  000A1E  51C6               	movf	_ic_ptr& (0+255),w,b
  8515  000A20  26D9               	addwf	fsr2l,f,c
  8516  000A22  0100               	movlb	0	; () banked
  8517  000A24  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8518  000A26  22DA               	addwfc	fsr2h,f,c
  8519  000A28  0E22               	movlw	34
  8520  000A2A  6EDF               	movwf	indf2,c
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;my_i2c.c: 577: SSPCON2bits.RCEN = 1;
  8524  000A2C  86C5               	bsf	4037,3,c	;volatile
  8525                           
  8526                           ;my_i2c.c: 578: }
  8527  000A2E  0012               	return	
  8528  000A30                     i2l3506:
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;my_i2c.c: 579: else {
  8532                           ;my_i2c.c: 580: ToMainHigh_sendmsg(0, 46, 0);
  8533  000A30  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8534  000A32  0E2E               	movlw	46
  8535  000A34  0100               	movlb	0	; () banked
  8536  000A36  0100               	movlb	0	; () banked
  8537  000A38  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8538  000A3A  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8539  000A3C  0E00               	movlw	0
  8540  000A3E  0100               	movlb	0	; () banked
  8541  000A40  0100               	movlb	0	; () banked
  8542  000A42  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8543  000A44  0E00               	movlw	0
  8544  000A46  0100               	movlb	0	; () banked
  8545  000A48  0100               	movlb	0	; () banked
  8546  000A4A  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8547  000A4C  0E00               	movlw	0
  8548  000A4E  EC88  F010         	call	_ToMainHigh_sendmsg
  8549                           
  8550                           ;my_i2c.c: 581: ic_ptr->status = 0x5;
  8551  000A52  0100               	movlb	0	; () banked
  8552  000A54  EE20 F019          	lfsr	2,25
  8553  000A58  0100               	movlb	0	; () banked
  8554  000A5A  51C6               	movf	_ic_ptr& (0+255),w,b
  8555  000A5C  26D9               	addwf	fsr2l,f,c
  8556  000A5E  0100               	movlb	0	; () banked
  8557  000A60  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8558  000A62  22DA               	addwfc	fsr2h,f,c
  8559  000A64  0E05               	movlw	5
  8560  000A66  6EDF               	movwf	indf2,c
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;my_i2c.c: 582: SSPCON2bits.PEN = 1;
  8564  000A68  84C5               	bsf	4037,2,c	;volatile
  8565  000A6A  0012               	return	
  8566  000A6C                     i2l371:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;my_i2c.c: 587: if (SSPSTATbits.BF == 1) {
  8570  000A6C  A0C7               	btfss	4039,0,c	;volatile
  8571  000A6E  0012               	return	
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;my_i2c.c: 588: ic_ptr->status = 0x23;
  8575  000A70  0100               	movlb	0	; () banked
  8576  000A72  EE20 F019          	lfsr	2,25
  8577  000A76  0100               	movlb	0	; () banked
  8578  000A78  51C6               	movf	_ic_ptr& (0+255),w,b
  8579  000A7A  26D9               	addwf	fsr2l,f,c
  8580  000A7C  0100               	movlb	0	; () banked
  8581  000A7E  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8582  000A80  22DA               	addwfc	fsr2h,f,c
  8583  000A82  0E23               	movlw	35
  8584  000A84  6EDF               	movwf	indf2,c
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;my_i2c.c: 589: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  8588  000A86  0100               	movlb	0	; () banked
  8589  000A88  EE20 F017          	lfsr	2,23
  8590  000A8C  0100               	movlb	0	; () banked
  8591  000A8E  51C6               	movf	_ic_ptr& (0+255),w,b
  8592  000A90  26D9               	addwf	fsr2l,f,c
  8593  000A92  0100               	movlb	0	; () banked
  8594  000A94  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8595  000A96  22DA               	addwfc	fsr2h,f,c
  8596  000A98  50DF               	movf	indf2,w,c
  8597  000A9A  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8598  000A9C  503E               	movf	??_i2c_master_int_handler,w,c
  8599  000A9E  0D01               	mullw	1
  8600  000AA0  50F3               	movf	prodl,w,c
  8601  000AA2  0100               	movlb	0	; () banked
  8602  000AA4  0100               	movlb	0	; () banked
  8603  000AA6  25C6               	addwf	_ic_ptr& (0+255),w,b
  8604  000AA8  6ED9               	movwf	fsr2l,c
  8605  000AAA  50F4               	movf	prodh,w,c
  8606  000AAC  0100               	movlb	0	; () banked
  8607  000AAE  0100               	movlb	0	; () banked
  8608  000AB0  21C7               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8609  000AB2  6EDA               	movwf	fsr2h,c
  8610  000AB4  CFC9 FFDF          	movff	4041,indf2	;volatile
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;my_i2c.c: 590: ic_ptr->bufind++;
  8614  000AB8  0100               	movlb	0	; () banked
  8615  000ABA  EE20 F017          	lfsr	2,23
  8616  000ABE  0100               	movlb	0	; () banked
  8617  000AC0  51C6               	movf	_ic_ptr& (0+255),w,b
  8618  000AC2  26D9               	addwf	fsr2l,f,c
  8619  000AC4  0100               	movlb	0	; () banked
  8620  000AC6  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8621  000AC8  22DA               	addwfc	fsr2h,f,c
  8622  000ACA  2ADF               	incf	indf2,f,c
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;my_i2c.c: 591: if (ic_ptr->bufind < ic_ptr->buflen) {
  8626  000ACC  0100               	movlb	0	; () banked
  8627  000ACE  EE20 F017          	lfsr	2,23
  8628  000AD2  0100               	movlb	0	; () banked
  8629  000AD4  51C6               	movf	_ic_ptr& (0+255),w,b
  8630  000AD6  26D9               	addwf	fsr2l,f,c
  8631  000AD8  0100               	movlb	0	; () banked
  8632  000ADA  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8633  000ADC  22DA               	addwfc	fsr2h,f,c
  8634  000ADE  50DF               	movf	indf2,w,c
  8635  000AE0  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8636  000AE2  0100               	movlb	0	; () banked
  8637  000AE4  EE20 F016          	lfsr	2,22
  8638  000AE8  0100               	movlb	0	; () banked
  8639  000AEA  51C6               	movf	_ic_ptr& (0+255),w,b
  8640  000AEC  26D9               	addwf	fsr2l,f,c
  8641  000AEE  0100               	movlb	0	; () banked
  8642  000AF0  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8643  000AF2  22DA               	addwfc	fsr2h,f,c
  8644  000AF4  50DF               	movf	indf2,w,c
  8645  000AF6  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8646  000AF8  B0D8               	btfsc	status,0,c
  8647  000AFA  D003               	goto	i2l373
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;my_i2c.c: 592: SSPCON2bits.ACKDT = 0;
  8651  000AFC  9AC5               	bcf	4037,5,c	;volatile
  8652                           
  8653                           ;my_i2c.c: 593: SSPCON2bits.ACKEN = 1;
  8654  000AFE  88C5               	bsf	4037,4,c	;volatile
  8655                           
  8656                           ;my_i2c.c: 594: }
  8657  000B00  0012               	return	
  8658  000B02                     i2l373:
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;my_i2c.c: 595: else {
  8662                           ;my_i2c.c: 596: SSPCON2bits.ACKDT = 1;
  8663  000B02  8AC5               	bsf	4037,5,c	;volatile
  8664                           
  8665                           ;my_i2c.c: 597: SSPCON2bits.ACKEN = 1;
  8666  000B04  88C5               	bsf	4037,4,c	;volatile
  8667  000B06  0012               	return	
  8668  000B08                     i2l3522:
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;my_i2c.c: 603: if (ic_ptr->bufind < ic_ptr->buflen) {
  8672  000B08  0100               	movlb	0	; () banked
  8673  000B0A  EE20 F017          	lfsr	2,23
  8674  000B0E  0100               	movlb	0	; () banked
  8675  000B10  51C6               	movf	_ic_ptr& (0+255),w,b
  8676  000B12  26D9               	addwf	fsr2l,f,c
  8677  000B14  0100               	movlb	0	; () banked
  8678  000B16  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8679  000B18  22DA               	addwfc	fsr2h,f,c
  8680  000B1A  50DF               	movf	indf2,w,c
  8681  000B1C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8682  000B1E  0100               	movlb	0	; () banked
  8683  000B20  EE20 F016          	lfsr	2,22
  8684  000B24  0100               	movlb	0	; () banked
  8685  000B26  51C6               	movf	_ic_ptr& (0+255),w,b
  8686  000B28  26D9               	addwf	fsr2l,f,c
  8687  000B2A  0100               	movlb	0	; () banked
  8688  000B2C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8689  000B2E  22DA               	addwfc	fsr2h,f,c
  8690  000B30  50DF               	movf	indf2,w,c
  8691  000B32  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8692  000B34  B0D8               	btfsc	status,0,c
  8693  000B36  D00D               	goto	i2l3528
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;my_i2c.c: 604: ic_ptr->status = 0x22;
  8697  000B38  0100               	movlb	0	; () banked
  8698  000B3A  EE20 F019          	lfsr	2,25
  8699  000B3E  0100               	movlb	0	; () banked
  8700  000B40  51C6               	movf	_ic_ptr& (0+255),w,b
  8701  000B42  26D9               	addwf	fsr2l,f,c
  8702  000B44  0100               	movlb	0	; () banked
  8703  000B46  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8704  000B48  22DA               	addwfc	fsr2h,f,c
  8705  000B4A  0E22               	movlw	34
  8706  000B4C  6EDF               	movwf	indf2,c
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;my_i2c.c: 605: SSPCON2bits.RCEN = 1;
  8710  000B4E  86C5               	bsf	4037,3,c	;volatile
  8711                           
  8712                           ;my_i2c.c: 606: }
  8713  000B50  0012               	return	
  8714  000B52                     i2l3528:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;my_i2c.c: 607: else {
  8718                           ;my_i2c.c: 608: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
  8719                           ;my_i2c.c: 609: (void *)(ic_ptr->buffer));
  8720  000B52  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8721  000B54  0E2D               	movlw	45
  8722  000B56  0100               	movlb	0	; () banked
  8723  000B58  0100               	movlb	0	; () banked
  8724  000B5A  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8725  000B5C  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8726  000B5E  0100               	movlb	0	; () banked
  8727  000B60  0100               	movlb	0	; () banked
  8728  000B62  C0C7  F08D         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8729  000B66  0100               	movlb	0	; () banked
  8730  000B68  0100               	movlb	0	; () banked
  8731  000B6A  C0C6  F08C         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8732  000B6E  0100               	movlb	0	; () banked
  8733  000B70  EE20 F016          	lfsr	2,22
  8734  000B74  0100               	movlb	0	; () banked
  8735  000B76  51C6               	movf	_ic_ptr& (0+255),w,b
  8736  000B78  26D9               	addwf	fsr2l,f,c
  8737  000B7A  0100               	movlb	0	; () banked
  8738  000B7C  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8739  000B7E  22DA               	addwfc	fsr2h,f,c
  8740  000B80  50DF               	movf	indf2,w,c
  8741  000B82  EC88  F010         	call	_ToMainHigh_sendmsg
  8742                           
  8743                           ;my_i2c.c: 610: ic_ptr->status = 0x5;
  8744  000B86  0100               	movlb	0	; () banked
  8745  000B88  EE20 F019          	lfsr	2,25
  8746  000B8C  0100               	movlb	0	; () banked
  8747  000B8E  51C6               	movf	_ic_ptr& (0+255),w,b
  8748  000B90  26D9               	addwf	fsr2l,f,c
  8749  000B92  0100               	movlb	0	; () banked
  8750  000B94  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8751  000B96  22DA               	addwfc	fsr2h,f,c
  8752  000B98  0E05               	movlw	5
  8753  000B9A  6EDF               	movwf	indf2,c
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;my_i2c.c: 611: SSPCON2bits.PEN = 1;
  8757  000B9C  84C5               	bsf	4037,2,c	;volatile
  8758  000B9E  0012               	return	
  8759  000BA0                     i2l3536:
  8760  000BA0  0100               	movlb	0	; () banked
  8761  000BA2  EE20 F019          	lfsr	2,25
  8762  000BA6  0100               	movlb	0	; () banked
  8763  000BA8  51C6               	movf	_ic_ptr& (0+255),w,b
  8764  000BAA  26D9               	addwf	fsr2l,f,c
  8765  000BAC  0100               	movlb	0	; () banked
  8766  000BAE  51C7               	movf	(_ic_ptr+1)& (0+255),w,b
  8767  000BB0  22DA               	addwfc	fsr2h,f,c
  8768  000BB2  50DF               	movf	indf2,w,c
  8769                           
  8770                           ; Switch size 1, requested type "space"
  8771                           ; Number of cases is 10, Range of values is 9 to 36
  8772                           ; switch strategies available:
  8773                           ; Name         Instructions Cycles
  8774                           ; simple_byte           31    16 (average)
  8775                           ;	Chosen strategy is simple_byte
  8776  000BB4  0A09               	xorlw	9	; case 9
  8777  000BB6  B4D8               	btfsc	status,2,c
  8778  000BB8  D5A2               	goto	i2l3446
  8779  000BBA  0A19               	xorlw	25	; case 16
  8780  000BBC  B4D8               	btfsc	status,2,c
  8781  000BBE  D66B               	goto	i2l358
  8782  000BC0  0A03               	xorlw	3	; case 19
  8783  000BC2  B4D8               	btfsc	status,2,c
  8784  000BC4  D64B               	goto	i2l3470
  8785  000BC6  0A07               	xorlw	7	; case 20
  8786  000BC8  B4D8               	btfsc	status,2,c
  8787  000BCA  D69C               	goto	i2l361
  8788  000BCC  0A01               	xorlw	1	; case 21
  8789  000BCE  B4D8               	btfsc	status,2,c
  8790  000BD0  D6DB               	goto	i2l364
  8791  000BD2  0A35               	xorlw	53	; case 32
  8792  000BD4  B4D8               	btfsc	status,2,c
  8793  000BD6  D705               	goto	i2l3500
  8794  000BD8  0A01               	xorlw	1	; case 33
  8795  000BDA  B4D8               	btfsc	status,2,c
  8796  000BDC  D71A               	goto	i2l368
  8797  000BDE  0A03               	xorlw	3	; case 34
  8798  000BE0  B4D8               	btfsc	status,2,c
  8799  000BE2  D744               	goto	i2l371
  8800  000BE4  0A01               	xorlw	1	; case 35
  8801  000BE6  B4D8               	btfsc	status,2,c
  8802  000BE8  D78F               	goto	i2l3522
  8803  000BEA  0A07               	xorlw	7	; case 36
  8804  000BEC  A4D8               	btfss	status,2,c
  8805  000BEE  0012               	return	
  8806  000BF0  D5A1               	goto	i2l352
  8807  000BF2                     __end_of_i2c_master_int_handler:
  8808                           	opt stack 0
  8809                           pclatu	equ	0xFFB
  8810                           pclath	equ	0xFFA
  8811                           tblptru	equ	0xFF8
  8812                           tblptrh	equ	0xFF7
  8813                           tblptrl	equ	0xFF6
  8814                           tablat	equ	0xFF5
  8815                           prodh	equ	0xFF4
  8816                           prodl	equ	0xFF3
  8817                           intcon	equ	0xFF2
  8818                           postinc0	equ	0xFEE
  8819                           fsr0h	equ	0xFEA
  8820                           fsr0l	equ	0xFE9
  8821                           wreg	equ	0xFE8
  8822                           indf1	equ	0xFE7
  8823                           fsr1h	equ	0xFE2
  8824                           fsr1l	equ	0xFE1
  8825                           bsr	equ	0xFE0
  8826                           indf2	equ	0xFDF
  8827                           postinc2	equ	0xFDE
  8828                           postdec2	equ	0xFDD
  8829                           fsr2h	equ	0xFDA
  8830                           fsr2l	equ	0xFD9
  8831                           status	equ	0xFD8
  8832                           
  8833 ;; *************** function _ToMainHigh_sendmsg *****************
  8834 ;; Defined at:
  8835 ;;		line 126 in file "source/messages.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  length          1    wreg     unsigned char 
  8838 ;;  msgtype         1   11[BANK0 ] unsigned char 
  8839 ;;  data            2   12[BANK0 ] PTR void 
  8840 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), NULL(0), 
  8841 ;;		 -> main@ic(77), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  length          1   60[COMRAM] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      char 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8853 ;;      Params:         0       3       0       0       0
  8854 ;;      Locals:         1       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0
  8856 ;;      Totals:         1       3       0       0       0
  8857 ;;Total ram usage:        4 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    2
  8860 ;; This function calls:
  8861 ;;		i2_send_msg
  8862 ;; This function is called by:
  8863 ;;		_i2c_slave_int_handler
  8864 ;;		_i2c_master_int_handler
  8865 ;;		_timer0_int_handler
  8866 ;;		_motor_lthread
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text44
  8871  002110                     __ptext44:
  8872                           	opt stack 0
  8873  002110                     _ToMainHigh_sendmsg:
  8874                           	opt stack 16
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;incstack = 0
  8878                           ;ToMainHigh_sendmsg@length stored from wreg
  8879  002110  CFE8 F03D          	movff	wreg,ToMainHigh_sendmsg@length
  8880                           
  8881                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8882                           ;	Return value of _ToMainHigh_sendmsg is never used
  8883  002114  0102               	movlb	2	; () banked
  8884  002116  0E02               	movlw	high _ToMainHigh_MQ
  8885  002118  0100               	movlb	0	; () banked
  8886  00211A  0100               	movlb	0	; () banked
  8887  00211C  6F81               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8888  00211E  0102               	movlb	2	; () banked
  8889  002120  0E66               	movlw	low _ToMainHigh_MQ
  8890  002122  0100               	movlb	0	; () banked
  8891  002124  0100               	movlb	0	; () banked
  8892  002126  6F80               	movwf	i2send_msg@qptr& (0+255),b
  8893  002128  C03D  F082         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8894  00212C  C08B  F083         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8895  002130  0100               	movlb	0	; () banked
  8896  002132  0100               	movlb	0	; () banked
  8897  002134  C08D  F085         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8898  002138  0100               	movlb	0	; () banked
  8899  00213A  0100               	movlb	0	; () banked
  8900  00213C  C08C  F084         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8901  002140  EC53  F00A         	call	i2_send_msg	;wreg free
  8902  002144  0012               	return	
  8903  002146                     __end_of_ToMainHigh_sendmsg:
  8904                           	opt stack 0
  8905                           pclatu	equ	0xFFB
  8906                           pclath	equ	0xFFA
  8907                           tblptru	equ	0xFF8
  8908                           tblptrh	equ	0xFF7
  8909                           tblptrl	equ	0xFF6
  8910                           tablat	equ	0xFF5
  8911                           prodh	equ	0xFF4
  8912                           prodl	equ	0xFF3
  8913                           intcon	equ	0xFF2
  8914                           postinc0	equ	0xFEE
  8915                           fsr0h	equ	0xFEA
  8916                           fsr0l	equ	0xFE9
  8917                           wreg	equ	0xFE8
  8918                           indf1	equ	0xFE7
  8919                           fsr1h	equ	0xFE2
  8920                           fsr1l	equ	0xFE1
  8921                           bsr	equ	0xFE0
  8922                           indf2	equ	0xFDF
  8923                           postinc2	equ	0xFDE
  8924                           postdec2	equ	0xFDD
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function i2_send_msg *****************
  8930 ;; Defined at:
  8931 ;;		line 24 in file "source/messages.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8934 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  8935 ;;  length          1    2[BANK0 ] unsigned char 
  8936 ;;  msgtype         1    3[BANK0 ] unsigned char 
  8937 ;;  data            2    4[BANK0 ] PTR void 
  8938 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), NULL(0), 
  8939 ;;		 -> main@ic(77), main@uc(23), 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  8942 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  8943 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  8944 ;;  send_msg        2    6[BANK0 ] unsigned int 
  8945 ;;  send_msg        1    8[BANK0 ] unsigned char 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      char 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8955 ;;      Params:         0       6       0       0       0
  8956 ;;      Locals:         0       5       0       0       0
  8957 ;;      Temps:          1       0       0       0       0
  8958 ;;      Totals:         1      11       0       0       0
  8959 ;;Total ram usage:       12 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    1
  8962 ;; This function calls:
  8963 ;;		i2_memcpy
  8964 ;; This function is called by:
  8965 ;;		_ToMainHigh_sendmsg
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text45
  8970  0014A6                     __ptext45:
  8971                           	opt stack 0
  8972  0014A6                     i2_send_msg:
  8973                           	opt stack 16
  8974                           
  8975                           ;messages.c: 25: unsigned char slot;
  8976                           ;messages.c: 27: msg *qmsg;
  8977                           ;messages.c: 28: size_t tlength = length;
  8978                           
  8979                           ;incstack = 0
  8980  0014A6  0100               	movlb	0	; () banked
  8981  0014A8  0100               	movlb	0	; () banked
  8982  0014AA  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  8983  0014AE  0100               	movlb	0	; () banked
  8984  0014B0  0100               	movlb	0	; () banked
  8985  0014B2  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8989  0014B4  0100               	movlb	0	; () banked
  8990  0014B6  EE20 F064          	lfsr	2,100
  8991  0014BA  0100               	movlb	0	; () banked
  8992  0014BC  5180               	movf	i2send_msg@qptr& (0+255),w,b
  8993  0014BE  26D9               	addwf	fsr2l,f,c
  8994  0014C0  0100               	movlb	0	; () banked
  8995  0014C2  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8996  0014C4  22DA               	addwfc	fsr2h,f,c
  8997  0014C6  50DF               	movf	indf2,w,c
  8998  0014C8  0100               	movlb	0	; () banked
  8999  0014CA  0100               	movlb	0	; () banked
  9000  0014CC  6F88               	movwf	i2send_msg@slot& (0+255),b
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9004  0014CE  0100               	movlb	0	; () banked
  9005  0014D0  0100               	movlb	0	; () banked
  9006  0014D2  5188               	movf	i2send_msg@slot& (0+255),w,b
  9007  0014D4  0D19               	mullw	25
  9008  0014D6  50F3               	movf	prodl,w,c
  9009  0014D8  0100               	movlb	0	; () banked
  9010  0014DA  0100               	movlb	0	; () banked
  9011  0014DC  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  9012  0014DE  0100               	movlb	0	; () banked
  9013  0014E0  0100               	movlb	0	; () banked
  9014  0014E2  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  9015  0014E4  50F4               	movf	prodh,w,c
  9016  0014E6  0100               	movlb	0	; () banked
  9017  0014E8  0100               	movlb	0	; () banked
  9018  0014EA  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9019  0014EC  0100               	movlb	0	; () banked
  9020  0014EE  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;messages.c: 41: if (qmsg->full != 0) {
  9024  0014F0  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9025  0014F4  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9026  0014F8  50DF               	movf	indf2,w,c
  9027  0014FA  B4D8               	btfsc	status,2,c
  9028  0014FC  D002               	goto	i2l3692
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;messages.c: 42: return (-1);
  9032  0014FE  0EFF               	movlw	255
  9033  001500  0012               	return	
  9034  001502                     i2l3692:
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;messages.c: 43: }
  9038                           ;messages.c: 46: qmsg->length = length;
  9039  001502  0100               	movlb	0	; () banked
  9040  001504  EE20 F001          	lfsr	2,1
  9041  001508  0100               	movlb	0	; () banked
  9042  00150A  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9043  00150C  26D9               	addwf	fsr2l,f,c
  9044  00150E  0100               	movlb	0	; () banked
  9045  001510  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9046  001512  22DA               	addwfc	fsr2h,f,c
  9047  001514  0100               	movlb	0	; () banked
  9048  001516  C082  FFDF         	movff	i2send_msg@length,indf2
  9049                           
  9050                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9051  00151A  0100               	movlb	0	; () banked
  9052  00151C  EE20 F002          	lfsr	2,2
  9053  001520  0100               	movlb	0	; () banked
  9054  001522  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9055  001524  26D9               	addwf	fsr2l,f,c
  9056  001526  0100               	movlb	0	; () banked
  9057  001528  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9058  00152A  22DA               	addwfc	fsr2h,f,c
  9059  00152C  0100               	movlb	0	; () banked
  9060  00152E  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9064  001532  0E03               	movlw	3
  9065  001534  0100               	movlb	0	; () banked
  9066  001536  0100               	movlb	0	; () banked
  9067  001538  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  9068  00153A  6E32               	movwf	i2memcpy@d1,c
  9069  00153C  0E00               	movlw	0
  9070  00153E  0100               	movlb	0	; () banked
  9071  001540  0100               	movlb	0	; () banked
  9072  001542  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9073  001544  6E33               	movwf	i2memcpy@d1+1,c
  9074  001546  0100               	movlb	0	; () banked
  9075  001548  C085  F035         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9076  00154C  0100               	movlb	0	; () banked
  9077  00154E  C084  F034         	movff	i2send_msg@data,i2memcpy@s1
  9078  001552  C086  F036         	movff	i2send_msg@tlength,i2memcpy@n
  9079  001556  C087  F037         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9080  00155A  EC4D  F010         	call	i2_memcpy	;wreg free
  9081                           
  9082                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9083  00155E  0100               	movlb	0	; () banked
  9084  001560  EE20 F064          	lfsr	2,100
  9085  001564  0100               	movlb	0	; () banked
  9086  001566  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9087  001568  26D9               	addwf	fsr2l,f,c
  9088  00156A  0100               	movlb	0	; () banked
  9089  00156C  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9090  00156E  22DA               	addwfc	fsr2h,f,c
  9091  001570  0100               	movlb	0	; () banked
  9092  001572  EE10 F064          	lfsr	1,100
  9093  001576  0100               	movlb	0	; () banked
  9094  001578  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9095  00157A  26E1               	addwf	fsr1l,f,c
  9096  00157C  0100               	movlb	0	; () banked
  9097  00157E  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9098  001580  22E2               	addwfc	fsr1h,f,c
  9099  001582  50E7               	movf	indf1,w,c
  9100  001584  6E3C               	movwf	??i2_send_msg& (0+255),c
  9101  001586  283C               	incf	??i2_send_msg,w,c
  9102  001588  0B03               	andlw	3
  9103  00158A  6EDF               	movwf	indf2,c
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;messages.c: 59: qmsg->full = 1;
  9107  00158C  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9108  001590  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9109  001594  0E01               	movlw	1
  9110  001596  6EDF               	movwf	indf2,c
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;messages.c: 60: return (1);
  9114  001598  0E01               	movlw	1
  9115  00159A  0012               	return	
  9116  00159C                     __end_ofi2_send_msg:
  9117                           	opt stack 0
  9118                           pclatu	equ	0xFFB
  9119                           pclath	equ	0xFFA
  9120                           tblptru	equ	0xFF8
  9121                           tblptrh	equ	0xFF7
  9122                           tblptrl	equ	0xFF6
  9123                           tablat	equ	0xFF5
  9124                           prodh	equ	0xFF4
  9125                           prodl	equ	0xFF3
  9126                           intcon	equ	0xFF2
  9127                           postinc0	equ	0xFEE
  9128                           fsr0h	equ	0xFEA
  9129                           fsr0l	equ	0xFE9
  9130                           wreg	equ	0xFE8
  9131                           indf1	equ	0xFE7
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           bsr	equ	0xFE0
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8
  9141                           
  9142 ;; *************** function i2_memcpy *****************
  9143 ;; Defined at:
  9144 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  d1              2   49[COMRAM] PTR void 
  9147 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9148 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9149 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9150 ;;  s1              2   51[COMRAM] PTR const void 
  9151 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9152 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9153 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  9154 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  9155 ;;		 -> main@ic(77), main@uc(23), 
  9156 ;;  n               2   53[COMRAM] unsigned int 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  memcpy          2   57[COMRAM] PTR const unsigned char 
  9159 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9160 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9161 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), FromMainHigh_MQ(102), 
  9162 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), NULL(0), 
  9163 ;;		 -> main@ic(77), main@uc(23), 
  9164 ;;  memcpy          2   55[COMRAM] PTR unsigned char 
  9165 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9166 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9167 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  2   49[COMRAM] PTR void 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9177 ;;      Params:         6       0       0       0       0
  9178 ;;      Locals:         4       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0
  9180 ;;      Totals:        10       0       0       0       0
  9181 ;;Total ram usage:       10 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		i2_send_msg
  9187 ;;		i2_recv_msg
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text46
  9192  00209A                     __ptext46:
  9193                           	opt stack 0
  9194  00209A                     i2_memcpy:
  9195                           	opt stack 16
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;incstack = 0
  9199  00209A  C035  F03B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9200  00209E  C034  F03A         	movff	i2memcpy@s1,i2memcpy@s
  9201  0020A2  C033  F039         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9202  0020A6  C032  F038         	movff	i2memcpy@d1,i2memcpy@d
  9203  0020AA  D00E               	goto	i2l3744
  9204  0020AC                     i2l3738:
  9205  0020AC  C03A  FFD9         	movff	i2memcpy@s,fsr2l
  9206  0020B0  C03B  FFDA         	movff	i2memcpy@s+1,fsr2h
  9207  0020B4  C038  FFE1         	movff	i2memcpy@d,fsr1l
  9208  0020B8  C039  FFE2         	movff	i2memcpy@d+1,fsr1h
  9209  0020BC  CFDF FFE7          	movff	indf2,indf1
  9210  0020C0  4A3A               	infsnz	i2memcpy@s,f,c
  9211  0020C2  2A3B               	incf	i2memcpy@s+1,f,c
  9212  0020C4  4A38               	infsnz	i2memcpy@d,f,c
  9213  0020C6  2A39               	incf	i2memcpy@d+1,f,c
  9214  0020C8                     i2l3744:
  9215  0020C8  0636               	decf	i2memcpy@n,f,c
  9216  0020CA  A0D8               	btfss	status,0,c
  9217  0020CC  0637               	decf	i2memcpy@n+1,f,c
  9218  0020CE  2836               	incf	i2memcpy@n& (0+255),w,c
  9219  0020D0  B4D8               	btfsc	status,2,c
  9220  0020D2  2837               	incf	(i2memcpy@n+1)& (0+255),w,c
  9221  0020D4  B4D8               	btfsc	status,2,c
  9222                           
  9223                           ;	Return value of i2_memcpy is never used
  9224  0020D6  0012               	return	
  9225  0020D8  D7E9               	goto	i2l3738
  9226  0020DA                     __end_ofi2_memcpy:
  9227                           	opt stack 0
  9228                           pclatu	equ	0xFFB
  9229                           pclath	equ	0xFFA
  9230                           tblptru	equ	0xFF8
  9231                           tblptrh	equ	0xFF7
  9232                           tblptrl	equ	0xFF6
  9233                           tablat	equ	0xFF5
  9234                           prodh	equ	0xFF4
  9235                           prodl	equ	0xFF3
  9236                           intcon	equ	0xFF2
  9237                           postinc0	equ	0xFEE
  9238                           fsr0h	equ	0xFEA
  9239                           fsr0l	equ	0xFE9
  9240                           wreg	equ	0xFE8
  9241                           indf1	equ	0xFE7
  9242                           fsr1h	equ	0xFE2
  9243                           fsr1l	equ	0xFE1
  9244                           bsr	equ	0xFE0
  9245                           indf2	equ	0xFDF
  9246                           postinc2	equ	0xFDE
  9247                           postdec2	equ	0xFDD
  9248                           fsr2h	equ	0xFDA
  9249                           fsr2l	equ	0xFD9
  9250                           status	equ	0xFD8
  9251                           
  9252 ;; *************** function _SleepIfOkay *****************
  9253 ;; Defined at:
  9254 ;;		line 228 in file "source/messages.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;		None               void
  9261 ;; Registers used:
  9262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9268 ;;      Params:         0       0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    2
  9275 ;; This function calls:
  9276 ;;		_enter_sleep_mode
  9277 ;;		i2_check_msg
  9278 ;;		i2_in_high_int
  9279 ;;		i2_in_low_int
  9280 ;; This function is called by:
  9281 ;;		_InterruptHandlerHigh
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text47
  9286  001EBC                     __ptext47:
  9287                           	opt stack 0
  9288  001EBC                     _SleepIfOkay:
  9289                           	opt stack 17
  9290                           
  9291                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9292                           
  9293                           ;incstack = 0
  9294  001EBC  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  9295  001EBE  D001               	goto	i2l2406
  9296  001EC0  0012               	return	
  9297  001EC2                     i2l2406:
  9298                           
  9299                           ;messages.c: 232: }
  9300                           ;messages.c: 235: if (in_low_int()) {
  9301  001EC2  ECBB  F010         	call	i2_in_low_int	;wreg free
  9302  001EC6  5035               	movf	?i2_in_low_int+1,w,c
  9303  001EC8  1034               	iorwf	?i2_in_low_int,w,c
  9304  001ECA  A4D8               	btfss	status,2,c
  9305  001ECC  0012               	return	
  9306                           
  9307                           ;messages.c: 237: }
  9308                           ;messages.c: 240: if (!in_high_int()) {
  9309                           
  9310                           ;messages.c: 236: return;
  9311  001ECE  EC77  F011         	call	i2_in_high_int	;wreg free
  9312  001ED2  5033               	movf	?i2_in_high_int+1,w,c
  9313  001ED4  1032               	iorwf	?i2_in_high_int,w,c
  9314  001ED6  B4D8               	btfsc	status,2,c
  9315  001ED8  0012               	return	
  9316                           
  9317                           ;messages.c: 242: }
  9318                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9319                           
  9320                           ;messages.c: 241: return;
  9321  001EDA  0102               	movlb	2	; () banked
  9322  001EDC  0E02               	movlw	high _ToMainHigh_MQ
  9323  001EDE  6E33               	movwf	i2check_msg@qptr+1,c
  9324  001EE0  0102               	movlb	2	; () banked
  9325  001EE2  0E66               	movlw	low _ToMainHigh_MQ
  9326  001EE4  6E32               	movwf	i2check_msg@qptr,c
  9327  001EE6  ECFA  F010         	call	i2_check_msg	;wreg free
  9328  001EEA  0900               	iorlw	0
  9329  001EEC  A4D8               	btfss	status,2,c
  9330  001EEE  0012               	return	
  9331                           
  9332                           ;messages.c: 249: }
  9333                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9334                           
  9335                           ;messages.c: 248: return;
  9336  001EF0  0101               	movlb	1	; () banked
  9337  001EF2  0E01               	movlw	high _ToMainLow_MQ
  9338  001EF4  6E33               	movwf	i2check_msg@qptr+1,c
  9339  001EF6  0101               	movlb	1	; () banked
  9340  001EF8  0E84               	movlw	low _ToMainLow_MQ
  9341  001EFA  6E32               	movwf	i2check_msg@qptr,c
  9342  001EFC  ECFA  F010         	call	i2_check_msg	;wreg free
  9343  001F00  0900               	iorlw	0
  9344  001F02  B4D8               	btfsc	status,2,c
  9345                           
  9346                           ;messages.c: 252: }
  9347                           ;messages.c: 253: enter_sleep_mode();
  9348                           
  9349                           ;messages.c: 251: return;
  9350  001F04  EC81  F011         	call	_enter_sleep_mode	;wreg free
  9351  001F08  0012               	return	
  9352  001F0A                     __end_of_SleepIfOkay:
  9353                           	opt stack 0
  9354                           pclatu	equ	0xFFB
  9355                           pclath	equ	0xFFA
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           postinc0	equ	0xFEE
  9364                           fsr0h	equ	0xFEA
  9365                           fsr0l	equ	0xFE9
  9366                           wreg	equ	0xFE8
  9367                           indf1	equ	0xFE7
  9368                           fsr1h	equ	0xFE2
  9369                           fsr1l	equ	0xFE1
  9370                           bsr	equ	0xFE0
  9371                           indf2	equ	0xFDF
  9372                           postinc2	equ	0xFDE
  9373                           postdec2	equ	0xFDD
  9374                           fsr2h	equ	0xFDA
  9375                           fsr2l	equ	0xFD9
  9376                           status	equ	0xFD8
  9377                           
  9378 ;; *************** function i2_in_low_int *****************
  9379 ;; Defined at:
  9380 ;;		line 30 in file "source/interrupts.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;		None
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  2   51[COMRAM] int 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0, cstack
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9394 ;;      Params:         2       0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0
  9396 ;;      Temps:          0       0       0       0       0
  9397 ;;      Totals:         2       0       0       0       0
  9398 ;;Total ram usage:        2 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    1
  9401 ;; This function calls:
  9402 ;;		i2_in_high_int
  9403 ;; This function is called by:
  9404 ;;		_SleepIfOkay
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text48
  9409  002176                     __ptext48:
  9410                           	opt stack 0
  9411  002176                     i2_in_low_int:
  9412                           	opt stack 17
  9413                           
  9414                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9415                           
  9416                           ;incstack = 0
  9417  002176  ACF2               	btfss	intcon,6,c	;volatile
  9418  002178  D005               	goto	i2l3190
  9419                           
  9420                           ;interrupts.c: 32: return (0);
  9421  00217A  0E00               	movlw	0
  9422  00217C  6E35               	movwf	?i2_in_low_int+1,c
  9423  00217E  0E00               	movlw	0
  9424  002180  6E34               	movwf	?i2_in_low_int,c
  9425  002182  0012               	return	
  9426  002184                     i2l3190:
  9427  002184  EC77  F011         	call	i2_in_high_int	;wreg free
  9428  002188  5033               	movf	?i2_in_high_int+1,w,c
  9429  00218A  1032               	iorwf	?i2_in_high_int,w,c
  9430  00218C  B4D8               	btfsc	status,2,c
  9431  00218E  D005               	goto	i2l3198
  9432                           
  9433                           ;interrupts.c: 34: return (0);
  9434  002190  0E00               	movlw	0
  9435  002192  6E35               	movwf	?i2_in_low_int+1,c
  9436  002194  0E00               	movlw	0
  9437  002196  6E34               	movwf	?i2_in_low_int,c
  9438  002198  0012               	return	
  9439  00219A                     i2l3198:
  9440                           
  9441                           ;interrupts.c: 36: return (1);
  9442  00219A  0E00               	movlw	0
  9443  00219C  6E35               	movwf	?i2_in_low_int+1,c
  9444  00219E  0E01               	movlw	1
  9445  0021A0  6E34               	movwf	?i2_in_low_int,c
  9446  0021A2  0012               	return	
  9447  0021A4                     __end_ofi2_in_low_int:
  9448                           	opt stack 0
  9449                           pclatu	equ	0xFFB
  9450                           pclath	equ	0xFFA
  9451                           tblptru	equ	0xFF8
  9452                           tblptrh	equ	0xFF7
  9453                           tblptrl	equ	0xFF6
  9454                           tablat	equ	0xFF5
  9455                           prodh	equ	0xFF4
  9456                           prodl	equ	0xFF3
  9457                           intcon	equ	0xFF2
  9458                           postinc0	equ	0xFEE
  9459                           fsr0h	equ	0xFEA
  9460                           fsr0l	equ	0xFE9
  9461                           wreg	equ	0xFE8
  9462                           indf1	equ	0xFE7
  9463                           fsr1h	equ	0xFE2
  9464                           fsr1l	equ	0xFE1
  9465                           bsr	equ	0xFE0
  9466                           indf2	equ	0xFDF
  9467                           postinc2	equ	0xFDE
  9468                           postdec2	equ	0xFDD
  9469                           fsr2h	equ	0xFDA
  9470                           fsr2l	equ	0xFD9
  9471                           status	equ	0xFD8
  9472                           
  9473 ;; *************** function i2_in_high_int *****************
  9474 ;; Defined at:
  9475 ;;		line 22 in file "source/interrupts.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;		None
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;		None
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2   49[COMRAM] int 
  9482 ;; Registers used:
  9483 ;;		wreg, status,2
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9489 ;;      Params:         2       0       0       0       0
  9490 ;;      Locals:         0       0       0       0       0
  9491 ;;      Temps:          0       0       0       0       0
  9492 ;;      Totals:         2       0       0       0       0
  9493 ;;Total ram usage:        2 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; This function calls:
  9496 ;;		Nothing
  9497 ;; This function is called by:
  9498 ;;		_SleepIfOkay
  9499 ;;		i2_in_low_int
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text49
  9504  0022EE                     __ptext49:
  9505                           	opt stack 0
  9506  0022EE                     i2_in_high_int:
  9507                           	opt stack 17
  9508                           
  9509                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9510                           
  9511                           ;incstack = 0
  9512  0022EE  0E00               	movlw	0
  9513  0022F0  AEF2               	btfss	intcon,7,c	;volatile
  9514  0022F2  0E01               	movlw	1
  9515  0022F4  6E32               	movwf	?i2_in_high_int,c
  9516  0022F6  6A33               	clrf	?i2_in_high_int+1,c
  9517  0022F8  0012               	return	
  9518  0022FA                     __end_ofi2_in_high_int:
  9519                           	opt stack 0
  9520                           pclatu	equ	0xFFB
  9521                           pclath	equ	0xFFA
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           postinc0	equ	0xFEE
  9530                           fsr0h	equ	0xFEA
  9531                           fsr0l	equ	0xFE9
  9532                           wreg	equ	0xFE8
  9533                           indf1	equ	0xFE7
  9534                           fsr1h	equ	0xFE2
  9535                           fsr1l	equ	0xFE1
  9536                           bsr	equ	0xFE0
  9537                           indf2	equ	0xFDF
  9538                           postinc2	equ	0xFDE
  9539                           postdec2	equ	0xFDD
  9540                           fsr2h	equ	0xFDA
  9541                           fsr2l	equ	0xFD9
  9542                           status	equ	0xFD8
  9543                           
  9544 ;; *************** function i2_check_msg *****************
  9545 ;; Defined at:
  9546 ;;		line 222 in file "source/messages.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  qptr            2   49[COMRAM] PTR struct __msg_queue
  9549 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;		None
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      unsigned char 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9561 ;;      Params:         2       0       0       0       0
  9562 ;;      Locals:         0       0       0       0       0
  9563 ;;      Temps:          1       0       0       0       0
  9564 ;;      Totals:         3       0       0       0       0
  9565 ;;Total ram usage:        3 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		_SleepIfOkay
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text50
  9575  0021F4                     __ptext50:
  9576                           	opt stack 0
  9577  0021F4                     i2_check_msg:
  9578                           	opt stack 18
  9579                           
  9580                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9581                           
  9582                           ;incstack = 0
  9583  0021F4  EE20 F065          	lfsr	2,101
  9584  0021F8  5032               	movf	i2check_msg@qptr,w,c
  9585  0021FA  26D9               	addwf	fsr2l,f,c
  9586  0021FC  5033               	movf	i2check_msg@qptr+1,w,c
  9587  0021FE  22DA               	addwfc	fsr2h,f,c
  9588  002200  50DF               	movf	indf2,w,c
  9589  002202  6E34               	movwf	??i2_check_msg& (0+255),c
  9590  002204  5034               	movf	??i2_check_msg,w,c
  9591  002206  0D19               	mullw	25
  9592  002208  50F3               	movf	prodl,w,c
  9593  00220A  2432               	addwf	i2check_msg@qptr,w,c
  9594  00220C  6ED9               	movwf	fsr2l,c
  9595  00220E  50F4               	movf	prodh,w,c
  9596  002210  2033               	addwfc	i2check_msg@qptr+1,w,c
  9597  002212  6EDA               	movwf	fsr2h,c
  9598  002214  50DF               	movf	indf2,w,c
  9599  002216  0012               	return	
  9600  002218                     __end_ofi2_check_msg:
  9601                           	opt stack 0
  9602                           pclatu	equ	0xFFB
  9603                           pclath	equ	0xFFA
  9604                           tblptru	equ	0xFF8
  9605                           tblptrh	equ	0xFF7
  9606                           tblptrl	equ	0xFF6
  9607                           tablat	equ	0xFF5
  9608                           prodh	equ	0xFF4
  9609                           prodl	equ	0xFF3
  9610                           intcon	equ	0xFF2
  9611                           postinc0	equ	0xFEE
  9612                           fsr0h	equ	0xFEA
  9613                           fsr0l	equ	0xFE9
  9614                           wreg	equ	0xFE8
  9615                           indf1	equ	0xFE7
  9616                           fsr1h	equ	0xFE2
  9617                           fsr1l	equ	0xFE1
  9618                           bsr	equ	0xFE0
  9619                           indf2	equ	0xFDF
  9620                           postinc2	equ	0xFDE
  9621                           postdec2	equ	0xFDD
  9622                           fsr2h	equ	0xFDA
  9623                           fsr2l	equ	0xFD9
  9624                           status	equ	0xFD8
  9625                           
  9626 ;; *************** function _enter_sleep_mode *****************
  9627 ;; Defined at:
  9628 ;;		line 202 in file "source/messages.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;		None
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;		None               void
  9635 ;; Registers used:
  9636 ;;		None
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9642 ;;      Params:         0       0       0       0       0
  9643 ;;      Locals:         0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0
  9645 ;;      Totals:         0       0       0       0       0
  9646 ;;Total ram usage:        0 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; This function calls:
  9649 ;;		Nothing
  9650 ;; This function is called by:
  9651 ;;		_SleepIfOkay
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text51
  9656  002302                     __ptext51:
  9657                           	opt stack 0
  9658  002302                     _enter_sleep_mode:
  9659                           	opt stack 18
  9660                           
  9661                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9662                           
  9663                           ;incstack = 0
  9664  002302  8ED3               	bsf	4051,7,c	;volatile
  9665  002304  0003               	sleep		;# 
  9666  002306  0012               	return	
  9667  002308                     __end_of_enter_sleep_mode:
  9668                           	opt stack 0
  9669  0000                     pclatu	equ	0xFFB
  9670                           pclath	equ	0xFFA
  9671                           tblptru	equ	0xFF8
  9672                           tblptrh	equ	0xFF7
  9673                           tblptrl	equ	0xFF6
  9674                           tablat	equ	0xFF5
  9675                           prodh	equ	0xFF4
  9676                           prodl	equ	0xFF3
  9677                           intcon	equ	0xFF2
  9678                           postinc0	equ	0xFEE
  9679                           fsr0h	equ	0xFEA
  9680                           fsr0l	equ	0xFE9
  9681                           wreg	equ	0xFE8
  9682                           indf1	equ	0xFE7
  9683                           fsr1h	equ	0xFE2
  9684                           fsr1l	equ	0xFE1
  9685                           bsr	equ	0xFE0
  9686                           indf2	equ	0xFDF
  9687                           postinc2	equ	0xFDE
  9688                           postdec2	equ	0xFDD
  9689                           fsr2h	equ	0xFDA
  9690                           fsr2l	equ	0xFD9
  9691                           status	equ	0xFD8
  9692                           pclatu	equ	0xFFB
  9693                           pclath	equ	0xFFA
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodh	equ	0xFF4
  9699                           prodl	equ	0xFF3
  9700                           intcon	equ	0xFF2
  9701                           postinc0	equ	0xFEE
  9702                           fsr0h	equ	0xFEA
  9703                           fsr0l	equ	0xFE9
  9704                           wreg	equ	0xFE8
  9705                           indf1	equ	0xFE7
  9706                           fsr1h	equ	0xFE2
  9707                           fsr1l	equ	0xFE1
  9708                           bsr	equ	0xFE0
  9709                           indf2	equ	0xFDF
  9710                           postinc2	equ	0xFDE
  9711                           postdec2	equ	0xFDD
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716                           	psect	rparam
  9717  0000                     pclatu	equ	0xFFB
  9718                           pclath	equ	0xFFA
  9719                           tblptru	equ	0xFF8
  9720                           tblptrh	equ	0xFF7
  9721                           tblptrl	equ	0xFF6
  9722                           tablat	equ	0xFF5
  9723                           prodh	equ	0xFF4
  9724                           prodl	equ	0xFF3
  9725                           intcon	equ	0xFF2
  9726                           postinc0	equ	0xFEE
  9727                           fsr0h	equ	0xFEA
  9728                           fsr0l	equ	0xFE9
  9729                           wreg	equ	0xFE8
  9730                           indf1	equ	0xFE7
  9731                           fsr1h	equ	0xFE2
  9732                           fsr1l	equ	0xFE1
  9733                           bsr	equ	0xFE0
  9734                           indf2	equ	0xFDF
  9735                           postinc2	equ	0xFDE
  9736                           postdec2	equ	0xFDD
  9737                           fsr2h	equ	0xFDA
  9738                           fsr2l	equ	0xFD9
  9739                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         421
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      78
    BANK0           128     70      73
    BANK1           256    132     234
    BANK2           256      0     204
    BANK3           256      0     102

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> NULL(NULL[0]), main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), 
		 -> ToMainLow_MQ(BANK1[102]), main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), 
		 -> ToMainLow_MQ(BANK1[102]), main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    parser_lthread@msgbuf	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 77
		 -> main@ic(BANK1[77]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 5
		 -> parser_lthread@data(BANK0[5]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 77
		 -> NULL(NULL[0]), main@ic(BANK1[77]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), 
		 -> ToMainLow_MQ(BANK1[102]), main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(COMRAM[2]), NULL(NULL[0]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_lthread->_WriteUSART
    _parser_lthread->_i2c_master_send
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               136   136      0    7022
                                             68 BANK0      2     2      0
                                              0 BANK1    132   132      0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _parser_lthread
                     _timer0_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8     647
                                             40 BANK0     11     3      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             39 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _parser_lthread                                      21    15      6     938
                                             46 BANK0     21    15      6
               _i2c_configure_master
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                      7     5      2     187
                                             39 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _i2c_configure_master                                 2     2      0      22
                                             39 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      75
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             43 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             39 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             45 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             43 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             41 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1631
                                             63 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1631
                                             63 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1459
                                             49 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     360
                                             39 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             39 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6115
                                             32 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    4005
                                             31 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
                          _parseUART
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            5     5      0    1991
                                             26 COMRAM     5     5      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2110
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    1991
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _send_msg                                            12     6      6    1607
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   17170
                                             25 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0    7585
                                             16 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    2970
                                             61 COMRAM     1     1      0
                                             12 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    2747
                                             59 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0    9349
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    5037
                                             14 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) _start_i2c_slave_reply                               6     4      2     119
                                             49 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      22
                                             49 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    4312
                                             61 COMRAM     1     1      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    4312
                                             60 COMRAM     1     1      0
                                             11 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2659
                                             59 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                             49 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _parser_lthread
     _i2c_configure_master
     _i2c_master_send
   _timer0_lthread
   _uart_lthread
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _parseUART
       _ToMainLow_sendmsg
         _send_msg
           i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      66      10       39.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CC       8       79.7%
BITBANK1           100      0       0       5        0.0%
BANK1              100     84      EA       6       91.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     46      49       4       57.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B3      11        0.0%
DATA                 0      0     2B3      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Apr 11 09:26:12 2014

                  main@uthread_data 0118            _MQ_Main_Willing_to_block 0049  
                       _SSPSTATbits 000FC7                                  l93 0D10  
         __end_of_ToMainLow_recvmsg 1FD6                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 21F4              parser_lthread@checksum 00BE  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 0083  
                 i2recv_msg@tlength 0088                                 l542 1A94  
                               l472 1960                                 l546 1AB4  
                               l547 1AB6                                 l548 1AC4  
                               l549 1AC6                                 l786 225C  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                    _FromMainLow_MQ 0200                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00A7  
                  ??_init_uart_recv 00A9                     ReadTimer1@timer 0003  
                    _parser_lthread 0E80                 i2recv_msg@maxlength 0082  
                              l2354 1F40                                l2346 1F1E  
                              l2452 0C6C                                l2542 1A96  
                              l2534 1A80                                l2630 0EBC  
                              l3174 227C                                l2462 0CBE  
                              l2470 0DC2                                l2368 1F84  
                              l2616 198E                                l2608 1934  
                              l2480 0E2E                                l2464 0D16  
                              l2472 0DE0                                l2634 0EE8  
                              l2466 0D68                                l2708 12B6  
                              l2724 137C                                l2580 1C16  
                              l2652 0FE8                                l2484 0E6C  
                              l2822 169A                                l2592 1C6E  
                              l2680 1CBE                                l2656 0FFC  
                              l2648 0FD6                                l2586 1C42  
                              l2826 16F2                                l2694 1DA4  
                              l2688 1D80                                _LATB 000F8A  
                              u2747 225E                                i1l47 0070  
                   _FromMainHigh_MQ 0300                                _Send 003F  
                     __CFG_FCMEN$ON 000000              parser_lthread@movement 00C2  
            ?_block_on_To_msgqueues 0001                                _main 0BF2  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 0136                                pclat 000FFA  
                       i2_check_msg 21F4                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0032  
                              start 00B6                          i2_recv_msg 1380  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 14A6  
     __size_of_i2c_configure_master 0054           ToMainHigh_recvmsg@msgtype 00BF  
                    send_msg@length 000D         __size_of_timer0_int_handler 0084  
           ??_i2c_slave_int_handler 008E                         _Delay1KTCYx 2258  
                             ?_main 0001                          i1memcpy@d1 0001  
                             i2l301 0182                               i1l560 2248  
                             i2l305 01C6                               i2l333 052E  
                             i2l327 048E                               i2l319 0356  
                             i2l352 0734                               i2l361 0904  
                             i2l281 18AA                               i2l371 0A6C  
                             i2l364 0988                               i2l373 0B02  
                             i2l358 0896                               i2l368 0A12  
                             i2l299 051C                          i1memcpy@s1 0003  
       FromMainHigh_recvmsg@msgtype 008C                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _TRISB 000F93                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0032  
            __end_of_parser_lthread 1096                          i2memcpy@s1 0034  
                      ?_init_queues 0001                               _State 004D  
         __size_of_enter_sleep_mode 0006                     __end_of_in_main 1F94  
        ToMainLow_recvmsg@maxlength 00C3             timer0_lthread@msgbuffer 00AD  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 209A                    __end_ofi2_memcpy 20DA  
                    WriteUSART@data 00A7                     __initialization 1E6C  
                      __end_of_main 0E80                          _ReadTimer1 22CA  
       __size_of_timer1_int_handler 0030          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026       __size_of_FromMainHigh_recvmsg 0042  
             __size_ofi2_in_low_int 002E                              ??_main 00C4  
                   send_msg@msgtype 000E                       __activetblptr 000002  
                   send_msg@tlength 0012                __end_of_handle_start 18F6  
                   ?_parser_lthread 00AE             ??_uart_recv_int_handler 0020  
                            i1l3332 1628                              i1l3270 2088  
                            i1l3334 1632                              i1l3326 15F8  
                            i1l3318 159E                              i1l3264 206C  
                            i1l3328 1602                              i1l3344 166C  
                            i1l3354 1DF8                              i1l3294 19EE  
                            i1l3366 0066                              i2l2406 1EC2  
                            i2l3500 09E2                              i2l3190 2184  
                    __CFG_WDTEN$OFF 000000                              i2l3522 0B08  
                            i2l3506 0A30                              i2l3620 040C  
                            i2l3198 219A                              i2l3470 085C  
                            i2l3446 06FE                              i2l3390 2220  
                            i2l3528 0B52                              i2l3456 07CE  
                            i2l3464 0820                              i2l3536 0BA0  
                            i2l3624 041E                              i2l3552 0160  
                            i2l3384 1BBA                              i2l3618 03CA  
                            i2l3394 2226                              i2l3378 1BB0  
                            i2l3484 094C                              i2l3476 08C8  
                            i2l2860 1132                              i2l3652 0532  
                            i2l3388 221A                              i2l3716 13EC  
                            i2l3732 14A2                              i2l3494 09A6  
                            i2l3646 04F0                              i2l3558 0178  
                            i2l3744 20C8                              i2l2864 1160  
                            i2l2856 10B2                              i2l3576 01FE  
                            i2l3738 20AC                              i2l3674 06D2  
                            i2l3666 062C                              i2l3658 0592  
                            i2l3594 027E                              i2l3578 022A  
                            i2l3692 1502                              i2l2884 18C6  
                            i2l2868 11D0                              i2l3596 02BE  
                            i2l3588 0266                              i2l2886 18DE  
                     ??_SleepIfOkay 0036                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 01B4       __end_of_start_i2c_slave_reply 124A  
                timer0_lthread@tptr 00A7                         ?i2_recv_msg 0080  
                      i2_in_low_int 2176                         ?i2_send_msg 0080  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 2218   i2c_slave_int_handler@data_written 0093  
                   _i2c_master_send 1682                              _ic_ptr 00C6  
                     main@msgbuffer 0100                    __end_of_init_i2c 182E  
                            _memcpy 1D5E                              clear_0 1E72  
                            clear_1 1E7E                              clear_2 1E8A  
                            clear_3 1E9A                              _uc_ptr 004B  
                            main@ic 0137                              main@uc 011E  
                  __end_of_recv_msg 1380         start_i2c_slave_reply@length 0037  
                         ??_in_main 00AD                    __end_of_send_msg 1A60  
                      __pdataCOMRAM 004E               timer0_int_handler@val 0095  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00AA  
          ToMainLow_recvmsg@msgtype 00BF                __size_of_in_high_int 0012  
                   parser_lthread@i 00C0                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1EB2  
        __end_of_ToMainHigh_recvmsg 2018          __end_of_ToMainHigh_sendmsg 2146  
       __end_of_init_timer1_lthread 22A6                 __end_of_SleepIfOkay 1F0A  
                        _WriteUSART 226E                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 000C                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                   __end_of_ReadUSART 2258  
         timer0_int_handler@msgtype 0093                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 1BF0         __end_of_InterruptHandlerLow 00B6  
                         ?i2_memcpy 0032                       _ToMainHigh_MQ 0266  
               __size_ofi2_recv_msg 0126                    _enter_sleep_mode 2302  
               __size_ofi2_send_msg 00F6                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1AF2                       check_msg@qptr 00A7  
           ??_block_on_To_msgqueues 00AD                __size_of_init_queues 006E  
                        __pbssBANK0 00C8                          __pbssBANK1 0184  
                        __pbssBANK2 0200                          __pbssBANK3 0300  
                        __pnvCOMRAM 004B             __end_of_i2c_int_handler 223A  
                      ?i2_check_msg 0032             __end_of_i2c_master_send 1760  
          ??_i2c_master_int_handler 003E                  __size_of_parseUART 00E6  
                 recv_msg@maxlength 00B3                     recv_msg@msgtype 00B4  
                   recv_msg@tlength 00BB               __size_of_handle_start 00C8  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0034  
                           ?_memcpy 00A7                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 0034                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 0642             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 06FC        __end_of_i2c_configure_master 1E6C  
                        ??i1_memcpy 0007                          ??i2_memcpy 0038  
                     i2_in_high_int 22EE                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 2110  
                         ?_init_i2c 00A7                         _SleepIfOkay 1EBC  
                         ?_recv_msg 00B1                          _in_low_int 1F0A  
                      _handle_start 182E                             __Hparam 0000  
                         ?_send_msg 000B                             __Lparam 0000  
        __end_of_timer0_int_handler 1B76                         ?_WriteUSART 0001  
                  init_uart_recv@uc 00A7                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 0094                             __pcinit 1E6C  
                   __size_of_memcpy 005E                          _init_queue 1C76  
                           __ramtop 0400                    ??_parser_lthread 00B4  
                           __ptext0 0BF2                             __ptext1 18F6  
                           __ptext2 226E                             __ptext3 2282  
                           __ptext4 0E80                             __ptext5 1682  
                           __ptext6 1E18                             __ptext7 21A4  
                           __ptext8 2294                             __ptext9 1CF0  
                           _in_main 1F50                 __end_of_WriteTimer0 22EE  
               __end_of_WriteTimer1 22CA                   __end_of_parseUART 1682  
                    ?i2_in_high_int 0032                      __pintcode_body 1B76  
      __end_of_FromMainHigh_recvmsg 205A                end_of_initialization 1EB2  
    __size_of_uart_recv_int_handler 005C                             memcpy@d 00AD  
                           memcpy@n 00AB                             memcpy@s 00AF  
     __end_of_uart_recv_int_handler 1E18                          ??_init_i2c 00A9  
                     __Lmediumconst 0000                             int_func 1B76  
                     ?_uart_lthread 00A8             __size_of_init_uart_recv 002A  
                  ?_i2c_int_handler 0001                        ??i2_recv_msg 003C  
                  ?_i2c_master_send 00A7                          ??_recv_msg 00B8  
                      ??i2_send_msg 003C                          ??_send_msg 0011  
   __size_of_i2c_master_int_handler 04F6          __end_of_timer1_int_handler 2176  
                         _RCSTAbits 000FAB                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 008B               parser_lthread@Command 00BF  
                  _lastMotorCommand 004E                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 14A6                  __end_ofi2_send_msg 159C  
               __size_of_WriteUSART 0014       FromMainHigh_recvmsg@maxlength 003E  
          timer1_int_handler@result 001C                      ??_uart_lthread 00B0  
                         _TXSTAbits 000FAC                          main@length 0135  
             parser_lthread@msgtype 00AE                         ?_in_low_int 00A9  
             timer0_lthread@msgtype 00A9                _i2c_configure_master 1E18  
             _start_i2c_slave_reply 1096                __size_ofi2_check_msg 0024  
          __end_of_enter_sleep_mode 2308                        ??_ReadTimer1 0003  
                _ToMainHigh_recvmsg 1FD6                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 2110                           i1memcpy@n 0005  
                         i1memcpy@s 0009                       __pidataCOMRAM 2308  
                    _timer0_lthread 2282                         ?_init_queue 00A7  
                         i2memcpy@d 0038                         _WriteTimer0 22DC  
                       _WriteTimer1 22B8                           i2memcpy@n 0036  
                         i2memcpy@s 003A                      __end_of_memcpy 1DBC  
                 _enable_interrupts 22FA                __size_of_Delay1KTCYx 0016  
               ?_ToMainHigh_recvmsg 00BF                     ??i2_in_high_int 0034  
               ?_ToMainHigh_sendmsg 008B                  ?_enable_interrupts 0001  
               start_initialization 1E6C              _i2c_master_int_handler 06FC  
                     ??_in_high_int 00A9                           _ReadUSART 223A  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 0040  
               ??_enable_interrupts 00A7      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 22DC       __end_of_block_on_To_msgqueues 1C76  
                         _OpenUSART 1A60        __end_of_InterruptHandlerHigh 1BF8  
                        init_i2c@ic 00A7                ??_ToMainHigh_recvmsg 00C3  
              ??_ToMainHigh_sendmsg 003D               ?_i2c_configure_master 0001  
            __end_of_timer0_lthread 2294           __end_of_enable_interrupts 2302  
                          ??_memcpy 00AD                _FromMainHigh_recvmsg 2018  
      __size_of_init_timer1_lthread 0012                         __pbssCOMRAM 003F  
                        ?_ReadUSART 0001                       ??_init_queues 00AB  
                     __pcstackBANK0 0080                       __pcstackBANK1 0100  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 0032  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 00A7  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 009E  
    i2c_slave_int_handler@data_read 0098                 __end_of_in_high_int 22B8  
                        ?_OpenUSART 00A7                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 00C1                        _ToMainLow_MQ 0184  
               __size_of_init_queue 007A                      _init_uart_recv 21A4  
                         _check_msg 20DA                           __pnvBANK0 00C6  
            ?_start_i2c_slave_reply 0032                   __size_of_init_i2c 00CE  
                      recv_msg@data 00B6                        ??_WriteUSART 00A7  
                      recv_msg@qmsg 00BD                        recv_msg@slot 00BA  
                      recv_msg@qptr 00B1                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 00AA  
                   ?_timer0_lthread 00A7               ?_FromMainHigh_recvmsg 008C  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 00C1  
              __end_of_uart_lthread 19B6                            ?_in_main 00AB  
                 WriteTimer0@timer0 0032                  _timer0_int_handler 1AF2  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00BA  
               uart_lthread@msgtype 00AA      i2c_slave_int_handler@error_buf 0090  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 2282                           _parseUART 159C  
                  uart_lthread@uptr 00A8      i2c_slave_int_handler@msg_ready 0097  
            __end_of_init_uart_recv 21CE                 __end_of_init_queues 1D5E  
                          _LATCbits 000F8B              ??_i2c_configure_master 00A7  
                   i2check_msg@qptr 0032                          ?_check_msg 00A7  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 0034                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 008C                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 0090  
             i2c_master_send@length 00AB          __size_of_enable_interrupts 0008  
              parser_lthread@length 00B0                timer0_lthread@length 00AB  
                _timer1_int_handler 2146                            i1_memcpy 205A  
              _InterruptHandlerHigh 0008                parser_lthread@msgbuf 00B2  
                       ??_ReadUSART 0001                            i2_memcpy 209A  
              timer0_lthread@msgval 00AF            FromMainHigh_recvmsg@data 008E  
                       _in_high_int 22A6                        send_msg@data 000F  
                      send_msg@qmsg 0015                        send_msg@slot 0014  
                      send_msg@qptr 000B               uart_lthread@msgbuffer 00AE  
               ?_timer1_int_handler 0001                          ?_parseUART 0001  
                   ?_init_uart_recv 00A7                            _i2c_mode 00C8  
                       ??_OpenUSART 00A9                     OpenUSART@config 00AC  
                    ??i2_in_low_int 0036               _uart_recv_int_handler 1DBC  
                      ??_in_low_int 00AB                            __Hrparam 0000  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 003E                ??_timer1_int_handler 001B  
          __size_of_i2c_int_handler 0022                  ??_enter_sleep_mode 0032  
          __size_of_i2c_master_send 00DE                        ??_init_queue 00A9  
                      ?_WriteTimer0 0032                        ?_WriteTimer1 0001  
           ToMainLow_sendmsg@length 001A             ?_i2c_master_int_handler 0001  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 011A  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0083         ToMainHigh_recvmsg@maxlength 00C3  
                 i2send_msg@tlength 0086             init_timer1_lthread@tptr 00A7  
                       _init_queues 1CF0                  __end_of_in_low_int 1F50  
                          __ptext10 1C76                            __ptext11 1760  
                          __ptext20 1FD6                            __ptext12 22FA  
                          __ptext21 124A                            __ptext13 1BF8  
                          __ptext30 21CE                            __ptext22 1D5E  
                          __ptext14 1F50                            __ptext31 19B6  
                          __ptext23 1A60                            __ptext15 1F0A  
                          __ptext40 00BA                            __ptext32 205A  
                          __ptext16 22A6                            __ptext41 1096  
                          __ptext33 22CA                            __ptext25 1DBC  
                          __ptext17 20DA                            __ptext50 21F4  
                          __ptext42 182E                            __ptext26 159C  
                          __ptext18 2258                            __ptext51 2302  
                          __ptext43 06FC                            __ptext35 1AF2  
                          __ptext27 223A                            __ptext19 1F94  
                          __ptext44 2110                            __ptext36 22DC  
                          __ptext28 2146                            __ptext45 14A6  
                          __ptext37 2018                            __ptext29 22B8  
                          __ptext46 209A                            __ptext38 1380  
                          __ptext47 1EBC                            __ptext39 2218  
                          __ptext48 2176                            __ptext49 22EE  
    i2c_configure_master@slave_addr 00A8             __size_of_parser_lthread 0216  
                uart_lthread@length 00AC            timer0_int_handler@length 0091  
                          _init_i2c 1760                 _init_timer1_lthread 2294  
                     __size_of_main 028E                       ??i2_check_msg 0034  
                 main@t1thread_data 011C                         ??_check_msg 00A9  
                __end_of_init_queue 1CF0                __size_of_SleepIfOkay 004E  
                          _recv_msg 124A    i2c_slave_int_handler@msg_to_send 0096  
                          _send_msg 19B6                      init_queue@qptr 00A7  
      i2c_master_send@currentLength 00AC               __size_of_uart_lthread 00C0  
                    i2recv_msg@data 0085                      i2recv_msg@qmsg 008A  
                     ??_Delay1KTCYx 00A7                      i2recv_msg@slot 0087  
                    i2recv_msg@qptr 0080      __end_of_i2c_master_int_handler 0BF2  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 00A7  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 00A7                            memcpy@d1 00A7  
                    _command_length 0043                            memcpy@s1 00A9  
             __end_ofi2_in_high_int 22FA                        _motor_length 0047  
                  i2send_msg@length 0082                            intlevel1 0000  
                          intlevel2 0000                         ??_parseUART 001B  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0034  
            ?_uart_recv_int_handler 0001                        _uart_lthread 18F6  
             _block_on_To_msgqueues 1BF8                       ?_handle_start 0001  
                  ??_timer0_lthread 00AF         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
          ToMainHigh_sendmsg@length 003D                  parser_lthread@data 00B9  
               __end_ofi2_check_msg 2218               ??_init_timer1_lthread 00A9  
                     _command_count 0041                         _motor_count 0045  
            ??_InterruptHandlerHigh 0099                   _ToMainLow_recvmsg 1F94  
                 _ToMainLow_sendmsg 21CE                  main@last_reg_recvd 0117  
              __end_ofi2_in_low_int 21A4                  ?_ToMainLow_recvmsg 00BF  
               __end_of_Delay1KTCYx 226E                   ??_i2c_int_handler 003F  
                ?_ToMainLow_sendmsg 0017                       uart_lthread@x 00B1  
                 ??_i2c_master_send 00A9                  i2c_master_send@msg 00A7  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 0084               ??_InterruptHandlerLow 0021  
               ??_ToMainLow_recvmsg 00C3                      i2send_msg@qmsg 0089  
                    i2send_msg@slot 0088                      i2send_msg@qptr 0080  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 0095  
                    ??_handle_start 0032                        _USART_Status 004A  
