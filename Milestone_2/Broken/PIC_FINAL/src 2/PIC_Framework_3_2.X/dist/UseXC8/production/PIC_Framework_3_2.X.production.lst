

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Feb 24 22:42:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  0014AC                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _j
    71  0014AC  0064               	dw	100
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADRESH	set	4036
    74  0000                     _ADRESL	set	4035
    75  0000                     _INTCONbits	set	4082
    76  0000                     _IPR1bits	set	3999
    77  0000                     _LATB	set	3978
    78  0000                     _LATBbits	set	3978
    79  0000                     _LATCbits	set	3979
    80  0000                     _OSCCON	set	4051
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _OSCTUNEbits	set	3995
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _RCONbits	set	4048
    86  0000                     _RCREG	set	4014
    87  0000                     _RCSTA	set	4011
    88  0000                     _RCSTAbits	set	4011
    89  0000                     _SPBRG	set	4015
    90  0000                     _SPBRGH	set	4016
    91  0000                     _SSPADD	set	4040
    92  0000                     _SSPBUF	set	4041
    93  0000                     _SSPCON1	set	4038
    94  0000                     _SSPCON1bits	set	4038
    95  0000                     _SSPCON2	set	4037
    96  0000                     _SSPCON2bits	set	4037
    97  0000                     _SSPSTAT	set	4039
    98  0000                     _SSPSTATbits	set	4039
    99  0000                     _T0CON	set	4053
   100  0000                     _T0CONbits	set	4053
   101  0000                     _TMR0H	set	4055
   102  0000                     _TMR0L	set	4054
   103  0000                     _TMR1H	set	4047
   104  0000                     _TMR1L	set	4046
   105  0000                     _TRISB	set	3987
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TXREG	set	4013
   108  0000                     _TXSTA	set	4012
   109  0000                     _TXSTAbits	set	4012
   110                           
   111                           	psect	nvCOMRAM
   112  00004D                     __pnvCOMRAM:
   113                           	opt stack 0
   114  00004D                     _uc_ptr:
   115                           	opt stack 0
   116  00004D                     	ds	2
   117                           
   118                           	psect	nvBANK0
   119  0000BA                     __pnvBANK0:
   120                           	opt stack 0
   121  0000BA                     _ic_ptr:
   122                           	opt stack 0
   123  0000BA                     	ds	2
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  00100A                     __pcinit:
   129                           	opt stack 0
   130  00100A                     start_initialization:
   131                           	opt stack 0
   132  00100A                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to BANK3 (102 bytes)
   136  00100A  EE03  F000         	lfsr	0,__pbssBANK3
   137  00100E  0E66               	movlw	102
   138  001010                     clear_0:
   139  001010  6AEE               	clrf	postinc0,c
   140  001012  06E8               	decf	wreg,f,c
   141  001014  E1FD               	bnz	clear_0
   142                           
   143                           ; Clear objects allocated to BANK2 (204 bytes)
   144  001016  EE02  F000         	lfsr	0,__pbssBANK2
   145  00101A  0ECC               	movlw	204
   146  00101C                     clear_1:
   147  00101C  6AEE               	clrf	postinc0,c
   148  00101E  06E8               	decf	wreg,f,c
   149  001020  E1FD               	bnz	clear_1
   150                           
   151                           ; Clear objects allocated to BANK1 (102 bytes)
   152  001022  EE01  F07E         	lfsr	0,__pbssBANK1
   153  001026  0E66               	movlw	102
   154  001028                     clear_2:
   155  001028  6AEE               	clrf	postinc0,c
   156  00102A  06E8               	decf	wreg,f,c
   157  00102C  E1FD               	bnz	clear_2
   158                           
   159                           ; Clear objects allocated to COMRAM (16 bytes)
   160  00102E  EE00  F03D         	lfsr	0,__pbssCOMRAM
   161  001032  0E10               	movlw	16
   162  001034                     clear_3:
   163  001034  6AEE               	clrf	postinc0,c
   164  001036  06E8               	decf	wreg,f,c
   165  001038  E1FD               	bnz	clear_3
   166                           
   167                           ; Initialize objects allocated to COMRAM (2 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  00103A  0EAC               	movlw	low __pidataCOMRAM
   170  00103C  6EF6               	movwf	tblptrl,c
   171  00103E  0E14               	movlw	high __pidataCOMRAM
   172  001040  6EF7               	movwf	tblptrh,c
   173  001042  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  001044  6EF8               	movwf	tblptru,c
   175  001046  0009               	tblrd		*+	;fetch initializer
   176  001048  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   177  00104C  0009               	tblrd		*+	;fetch initializer
   178  00104E  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   179  001052                     end_of_initialization:
   180                           	opt stack 0
   181  001052                     __end_of__initialization:
   182                           	opt stack 0
   183  001052  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  001054  6EF8               	movwf	tblptru,c
   185  001056  0100               	movlb	0
   186  001058  EF08  F003         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           
   194                           	psect	bssCOMRAM
   195  00003D                     __pbssCOMRAM:
   196                           	opt stack 0
   197  00003D                     _Send:
   198                           	opt stack 0
   199  00003D                     	ds	2
   200  00003F                     _i:
   201                           	opt stack 0
   202  00003F                     	ds	2
   203  000041                     _length:
   204                           	opt stack 0
   205  000041                     	ds	2
   206  000043                     _swit:
   207                           	opt stack 0
   208  000043                     	ds	2
   209  000045                     _x:
   210                           	opt stack 0
   211  000045                     	ds	2
   212  000047                     _COMMAND_LEN:
   213                           	opt stack 0
   214  000047                     	ds	1
   215  000048                     _COMMAND_REC:
   216                           	opt stack 0
   217  000048                     	ds	1
   218  000049                     _MQ_Main_Willing_to_block:
   219                           	opt stack 0
   220  000049                     	ds	1
   221  00004A                     _STATE:
   222                           	opt stack 0
   223  00004A                     	ds	1
   224  00004B                     _USART_Status:
   225                           	opt stack 0
   226  00004B                     	ds	1
   227  00004C                     _i2c_mode:
   228                           	opt stack 0
   229  00004C                     	ds	1
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           
   237                           	psect	dataCOMRAM
   238  00004F                     __pdataCOMRAM:
   239                           	opt stack 0
   240  00004F                     _j:
   241                           	opt stack 0
   242  00004F                     	ds	2
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           
   250                           	psect	bssBANK1
   251  00017E                     __pbssBANK1:
   252                           	opt stack 0
   253  00017E                     _ToMainLow_MQ:
   254                           	opt stack 0
   255  00017E                     	ds	102
   256                           tblptru	equ	0xFF8
   257                           tblptrh	equ	0xFF7
   258                           tblptrl	equ	0xFF6
   259                           tablat	equ	0xFF5
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           
   263                           	psect	bssBANK2
   264  000200                     __pbssBANK2:
   265                           	opt stack 0
   266  000200                     _FromMainLow_MQ:
   267                           	opt stack 0
   268  000200                     	ds	102
   269  000266                     _ToMainHigh_MQ:
   270                           	opt stack 0
   271  000266                     	ds	102
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	bssBANK3
   280  000300                     __pbssBANK3:
   281                           	opt stack 0
   282  000300                     _FromMainHigh_MQ:
   283                           	opt stack 0
   284  000300                     	ds	102
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292                           	psect	cstackBANK1
   293  000100                     __pcstackBANK1:
   294                           	opt stack 0
   295  000100                     main@msgbuffer:
   296                           	opt stack 0
   297                           
   298                           ; 23 bytes @ 0x0
   299  000100                     	ds	23
   300  000117                     main@last_reg_recvd:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x17
   304  000117                     	ds	1
   305  000118                     main@msgtype:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x18
   309  000118                     	ds	1
   310  000119                     main@length:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x19
   314  000119                     	ds	1
   315  00011A                     main@uc:
   316                           	opt stack 0
   317                           
   318                           ; 23 bytes @ 0x1A
   319  00011A                     	ds	23
   320  000131                     main@ic:
   321                           	opt stack 0
   322                           
   323                           ; 77 bytes @ 0x31
   324  000131                     	ds	77
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           
   332                           	psect	cstackBANK0
   333  000080                     __pcstackBANK0:
   334                           	opt stack 0
   335  000080                     i2send_msg@qptr:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x0
   339  000080                     	ds	2
   340  000082                     i2send_msg@length:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x2
   344  000082                     	ds	1
   345  000083                     i2send_msg@msgtype:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x3
   349  000083                     	ds	1
   350  000084                     i2send_msg@data:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x4
   354  000084                     	ds	2
   355  000086                     i2send_msg@tlength:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x6
   359  000086                     	ds	2
   360  000088                     i2send_msg@slot:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x8
   364  000088                     	ds	1
   365  000089                     i2send_msg@qmsg:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x9
   369  000089                     	ds	2
   370  00008B                     ToMainHigh_sendmsg@msgtype:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0xB
   374  00008B                     	ds	1
   375  00008C                     ToMainHigh_sendmsg@data:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0xC
   379  00008C                     	ds	2
   380  00008E                     ??_InterruptHandlerHigh:
   381                           
   382                           ; 0 bytes @ 0xE
   383  00008E                     	ds	15
   384  00009D                     ?_in_high_int:
   385                           	opt stack 0
   386  00009D                     OpenTimer0@config:
   387                           	opt stack 0
   388  00009D                     WriteUSART@data:
   389                           	opt stack 0
   390  00009D                     Delay1KTCYx@unit:
   391                           	opt stack 0
   392  00009D                     init_queue@qptr:
   393                           	opt stack 0
   394  00009D                     check_msg@qptr:
   395                           	opt stack 0
   396  00009D                     init_i2c@ic:
   397                           	opt stack 0
   398  00009D                     init_uart_recv@uc:
   399                           	opt stack 0
   400  00009D                     OpenUSART@spbrg:
   401                           	opt stack 0
   402  00009D                     memcpy@d1:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x1D
   406  00009D                     	ds	1
   407  00009E                     uart_write@msg:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x1E
   411  00009E                     	ds	1
   412  00009F                     ??_init_uart_recv:
   413  00009F                     ??_OpenUSART:
   414  00009F                     ??_init_queue:
   415  00009F                     ??_check_msg:
   416  00009F                     ?_in_low_int:
   417                           	opt stack 0
   418  00009F                     memcpy@s1:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x1F
   422  00009F                     	ds	1
   423  0000A0                     ??_uart_write:
   424  0000A0                     init_queue@i:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x20
   428  0000A0                     	ds	1
   429  0000A1                     ??_init_queues:
   430  0000A1                     ?_in_main:
   431                           	opt stack 0
   432  0000A1                     uart_write@length:
   433                           	opt stack 0
   434  0000A1                     memcpy@n:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x21
   438  0000A1                     	ds	1
   439  0000A2                     uart_write@i:
   440                           	opt stack 0
   441  0000A2                     OpenUSART@config:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x22
   445  0000A2                     	ds	1
   446  0000A3                     ??_block_on_To_msgqueues:
   447  0000A3                     memcpy@d:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x23
   451  0000A3                     	ds	2
   452  0000A5                     memcpy@s:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x25
   456  0000A5                     	ds	2
   457  0000A7                     recv_msg@qptr:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x27
   461  0000A7                     	ds	2
   462  0000A9                     recv_msg@maxlength:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x29
   466  0000A9                     	ds	1
   467  0000AA                     recv_msg@msgtype:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x2A
   471  0000AA                     	ds	2
   472  0000AC                     recv_msg@data:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x2C
   476  0000AC                     	ds	2
   477  0000AE                     ??_recv_msg:
   478                           
   479                           ; 0 bytes @ 0x2E
   480  0000AE                     	ds	2
   481  0000B0                     recv_msg@slot:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x30
   485  0000B0                     	ds	1
   486  0000B1                     recv_msg@tlength:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x31
   490  0000B1                     	ds	2
   491  0000B3                     recv_msg@qmsg:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x33
   495  0000B3                     	ds	2
   496  0000B5                     ToMainLow_recvmsg@msgtype:
   497                           	opt stack 0
   498  0000B5                     ToMainHigh_recvmsg@msgtype:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x35
   502  0000B5                     	ds	2
   503  0000B7                     ToMainLow_recvmsg@data:
   504                           	opt stack 0
   505  0000B7                     ToMainHigh_recvmsg@data:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x37
   509  0000B7                     	ds	2
   510  0000B9                     ToMainLow_recvmsg@maxlength:
   511                           	opt stack 0
   512  0000B9                     ToMainHigh_recvmsg@maxlength:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x39
   516  0000B9                     	ds	1
   517  0000BA                     tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           
   524                           ; 0 bytes @ 0x3A
   525                           
   526                           	psect	cstackCOMRAM
   527  000001                     __pcstackCOMRAM:
   528                           	opt stack 0
   529  000001                     ??_flipDBG:
   530  000001                     ?_ReadTimer1:
   531                           	opt stack 0
   532  000001                     ReadUSART@data:
   533                           	opt stack 0
   534  000001                     WriteTimer1@timer1:
   535                           	opt stack 0
   536  000001                     i1memcpy@d1:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x0
   540  000001                     	ds	1
   541  000002                     flipDBG@b:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x1
   545  000002                     	ds	1
   546  000003                     ReadTimer1@timer:
   547                           	opt stack 0
   548  000003                     WriteTimer1@timer:
   549                           	opt stack 0
   550  000003                     i1memcpy@s1:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x2
   554  000003                     	ds	2
   555  000005                     i1memcpy@n:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x4
   559  000005                     	ds	2
   560  000007                     i1memcpy@d:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x6
   564  000007                     	ds	2
   565  000009                     i1memcpy@s:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x8
   569  000009                     	ds	2
   570  00000B                     send_msg@qptr:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0xA
   574  00000B                     	ds	2
   575  00000D                     send_msg@length:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0xC
   579  00000D                     	ds	1
   580  00000E                     send_msg@msgtype:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0xD
   584  00000E                     	ds	1
   585  00000F                     send_msg@data:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xE
   589  00000F                     	ds	2
   590  000011                     ??_send_msg:
   591                           
   592                           ; 0 bytes @ 0x10
   593  000011                     	ds	1
   594  000012                     send_msg@tlength:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x11
   598  000012                     	ds	2
   599  000014                     send_msg@slot:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x13
   603  000014                     	ds	1
   604  000015                     send_msg@qmsg:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x14
   608  000015                     	ds	2
   609  000017                     ToMainLow_sendmsg@msgtype:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x16
   613  000017                     	ds	1
   614  000018                     ToMainLow_sendmsg@data:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x17
   618  000018                     	ds	2
   619  00001A                     ToMainLow_sendmsg@length:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x19
   623  00001A                     	ds	1
   624  00001B                     ??_timer1_int_handler:
   625  00001B                     ??_uart_recv_int_handler:
   626                           
   627                           ; 0 bytes @ 0x1A
   628  00001B                     	ds	1
   629  00001C                     timer1_int_handler@result:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x1B
   633  00001C                     	ds	3
   634  00001F                     ??_InterruptHandlerLow:
   635                           
   636                           ; 0 bytes @ 0x1E
   637  00001F                     	ds	17
   638  000030                     ?_ReadADC:
   639                           	opt stack 0
   640  000030                     ?i2_in_high_int:
   641                           	opt stack 0
   642  000030                     WriteTimer0@timer0:
   643                           	opt stack 0
   644  000030                     i2check_msg@qptr:
   645                           	opt stack 0
   646  000030                     i2memcpy@d1:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x2F
   650  000030                     	ds	2
   651  000032                     ??_adc_int_handler:
   652  000032                     ??i2_check_msg:
   653  000032                     ?i2_in_low_int:
   654                           	opt stack 0
   655  000032                     WriteTimer0@timer:
   656                           	opt stack 0
   657  000032                     i2memcpy@s1:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x31
   661  000032                     	ds	2
   662  000034                     adc_int_handler@result:
   663                           	opt stack 0
   664  000034                     i2memcpy@n:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x33
   668  000034                     	ds	2
   669  000036                     i2memcpy@d:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x35
   673  000036                     	ds	2
   674  000038                     i2memcpy@s:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x37
   678  000038                     	ds	2
   679  00003A                     ??i2_send_msg:
   680                           
   681                           ; 0 bytes @ 0x39
   682  00003A                     	ds	1
   683  00003B                     ToMainHigh_sendmsg@length:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x3A
   687  00003B                     	ds	1
   688  00003C                     ??_i2c_master_int_handler:
   689                           
   690                           ; 0 bytes @ 0x3B
   691  00003C                     	ds	1
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           
   699 ;;
   700 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   701 ;;
   702 ;; *************** function _main *****************
   703 ;; Defined at:
   704 ;;		line 187 in file "../src/main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  ic             77   49[BANK1 ] struct __i2c_comm
   709 ;;  msgbuffer      23    0[BANK1 ] unsigned char [23]
   710 ;;  uc             23   26[BANK1 ] struct __uart_comm
   711 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   712 ;;  uthread_data    2    0        struct __uart_thread_str
   713 ;;  length          1   25[BANK1 ] char 
   714 ;;  msgtype         1   24[BANK1 ] unsigned char 
   715 ;;  last_reg_rec    1   23[BANK1 ] unsigned char 
   716 ;;  i               1    0        unsigned char 
   717 ;;  c               1    0        unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;		None               void
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       0     126       0       0
   729 ;;      Temps:          0       0       0       0       0
   730 ;;      Totals:         0       0     126       0       0
   731 ;;Total ram usage:      126 bytes
   732 ;; Hardware stack levels required when called:   14
   733 ;; This function calls:
   734 ;;		_OpenTimer0
   735 ;;		_OpenUSART
   736 ;;		_ToMainHigh_recvmsg
   737 ;;		_ToMainLow_recvmsg
   738 ;;		_block_on_To_msgqueues
   739 ;;		_enable_interrupts
   740 ;;		_init_i2c
   741 ;;		_init_queues
   742 ;;		_init_uart_recv
   743 ;;		_uart_write
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text0
   750  000610                     __ptext0:
   751                           	opt stack 0
   752  000610                     _main:
   753                           	opt stack 17
   754                           
   755                           ;main.c: 188: char c;
   756                           ;main.c: 189: signed char length;
   757                           ;main.c: 190: unsigned char msgtype;
   758                           ;main.c: 191: unsigned char last_reg_recvd;
   759                           ;main.c: 192: uart_comm uc;
   760                           ;main.c: 193: i2c_comm ic;
   761                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   762                           ;main.c: 195: unsigned char i;
   763                           ;main.c: 196: uart_thread_struct uthread_data;
   764                           ;main.c: 198: timer0_thread_struct t0thread_data;
   765                           ;main.c: 206: OSCCON = 0x82;
   766                           
   767                           ;incstack = 0
   768  000610  0E82               	movlw	130
   769  000612  6ED3               	movwf	4051,c	;volatile
   770                           
   771                           ;main.c: 207: OSCTUNEbits.PLLEN = 1;
   772  000614  8C9B               	bsf	3995,6,c	;volatile
   773                           
   774                           ;main.c: 225: init_uart_recv(&uc);
   775  000616  0101               	movlb	1	; () banked
   776  000618  0E01               	movlw	high main@uc
   777  00061A  0100               	movlb	0	; () banked
   778  00061C  0100               	movlb	0	; () banked
   779  00061E  6F9E               	movwf	(init_uart_recv@uc+1)& (0+255),b
   780  000620  0101               	movlb	1	; () banked
   781  000622  0E1A               	movlw	low main@uc
   782  000624  0100               	movlb	0	; () banked
   783  000626  0100               	movlb	0	; () banked
   784  000628  6F9D               	movwf	init_uart_recv@uc& (0+255),b
   785  00062A  EC9A  F008         	call	_init_uart_recv	;wreg free
   786                           
   787                           ;main.c: 228: init_i2c(&ic);
   788  00062E  0101               	movlb	1	; () banked
   789  000630  0E01               	movlw	high main@ic
   790  000632  0100               	movlb	0	; () banked
   791  000634  0100               	movlb	0	; () banked
   792  000636  6F9E               	movwf	(init_i2c@ic+1)& (0+255),b
   793  000638  0101               	movlb	1	; () banked
   794  00063A  0E31               	movlw	low main@ic
   795  00063C  0100               	movlb	0	; () banked
   796  00063E  0100               	movlb	0	; () banked
   797  000640  6F9D               	movwf	init_i2c@ic& (0+255),b
   798  000642  EC33  F005         	call	_init_i2c	;wreg free
   799                           
   800                           ;main.c: 234: init_queues();
   801  000646  EC6D  F007         	call	_init_queues	;wreg free
   802                           
   803                           ;main.c: 238: TRISB = 0x0;
   804  00064A  0E00               	movlw	0
   805  00064C  6E93               	movwf	3987,c	;volatile
   806                           
   807                           ;main.c: 239: LATB = 0x0;
   808  00064E  0E00               	movlw	0
   809  000650  6E8A               	movwf	3978,c	;volatile
   810                           
   811                           ;main.c: 252: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110001);
   812  000652  0ED1               	movlw	209
   813  000654  ECA2  F009         	call	_OpenTimer0
   814                           
   815                           ;main.c: 270: IPR1bits.TMR1IP = 0;
   816  000658  909F               	bcf	3999,0,c	;volatile
   817                           
   818                           ;main.c: 272: IPR1bits.RCIP = 0;
   819  00065A  9A9F               	bcf	3999,5,c	;volatile
   820                           
   821                           ;main.c: 274: IPR1bits.SSPIP = 1;
   822  00065C  869F               	bsf	3999,3,c	;volatile
   823                           
   824                           ;main.c: 298: PIE1bits.SSPIE = 1;
   825  00065E  869D               	bsf	3997,3,c	;volatile
   826                           
   827                           ;main.c: 309: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   828                           ;main.c: 310: 0b11111111 & 0b11101111, 0x26);
   829  000660  0E00               	movlw	0
   830  000662  0100               	movlb	0	; () banked
   831  000664  0100               	movlb	0	; () banked
   832  000666  6F9E               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   833  000668  0E26               	movlw	38
   834  00066A  0100               	movlb	0	; () banked
   835  00066C  6F9D               	movwf	OpenUSART@spbrg& (0+255),b
   836  00066E  0E6C               	movlw	108
   837  000670  ECA8  F006         	call	_OpenUSART
   838                           
   839                           ;main.c: 316: enable_interrupts();
   840  000674  EC4D  F00A         	call	_enable_interrupts	;wreg free
   841  000678                     l2637:
   842                           
   843                           ;main.c: 341: block_on_To_msgqueues();
   844  000678  ECF1  F006         	call	_block_on_To_msgqueues	;wreg free
   845                           
   846                           ;main.c: 348: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
   847  00067C  0101               	movlb	1	; () banked
   848  00067E  0E01               	movlw	high main@msgtype
   849  000680  0100               	movlb	0	; () banked
   850  000682  0100               	movlb	0	; () banked
   851  000684  6FB6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   852  000686  0101               	movlb	1	; () banked
   853  000688  0E18               	movlw	low main@msgtype
   854  00068A  0100               	movlb	0	; () banked
   855  00068C  0100               	movlb	0	; () banked
   856  00068E  6FB5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   857  000690  0101               	movlb	1	; () banked
   858  000692  0E01               	movlw	high main@msgbuffer
   859  000694  0100               	movlb	0	; () banked
   860  000696  0100               	movlb	0	; () banked
   861  000698  6FB8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   862  00069A  0101               	movlb	1	; () banked
   863  00069C  0E00               	movlw	low main@msgbuffer
   864  00069E  0100               	movlb	0	; () banked
   865  0006A0  0100               	movlb	0	; () banked
   866  0006A2  6FB7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   867  0006A4  0E16               	movlw	22
   868  0006A6  ECDC  F008         	call	_ToMainHigh_recvmsg
   869  0006AA  0101               	movlb	1	; () banked
   870  0006AC  0101               	movlb	1	; () banked
   871  0006AE  6F19               	movwf	main@length& (0+255),b
   872                           
   873                           ; BSR set to: 1
   874                           ;main.c: 349: if (length < 0) {
   875  0006B0  0101               	movlb	1	; () banked
   876  0006B2  0101               	movlb	1	; () banked
   877  0006B4  BF19               	btfsc	main@length& (0+255),7,b
   878  0006B6  D00E               	goto	l2649
   879  0006B8  D003               	goto	l2647
   880  0006BA                     l105:
   881                           
   882                           ; BSR set to: 1
   883                           ;main.c: 357: case 41:
   884                           ;main.c: 358: {
   885                           ;main.c: 361: last_reg_recvd = msgbuffer[0];
   886  0006BA  C100  F117         	movff	main@msgbuffer,main@last_reg_recvd
   887                           
   888                           ;main.c: 362: break;
   889  0006BE  D00A               	goto	l2649
   890  0006C0                     l2647:
   891                           
   892                           ; BSR set to: 1
   893  0006C0  0101               	movlb	1	; () banked
   894  0006C2  0101               	movlb	1	; () banked
   895  0006C4  5118               	movf	main@msgtype& (0+255),w,b
   896                           
   897                           ; Switch size 1, requested type "space"
   898                           ; Number of cases is 3, Range of values is 40 to 42
   899                           ; switch strategies available:
   900                           ; Name         Instructions Cycles
   901                           ; simple_byte           10     6 (average)
   902                           ;	Chosen strategy is simple_byte
   903  0006C6  0A28               	xorlw	40	; case 40
   904  0006C8  B4D8               	btfsc	status,2,c
   905  0006CA  D7F7               	goto	l105
   906  0006CC  0A01               	xorlw	1	; case 41
   907  0006CE  B4D8               	btfsc	status,2,c
   908  0006D0  D7F4               	goto	l105
   909  0006D2  0A03               	xorlw	3	; case 42
   910  0006D4                     l2649:
   911                           
   912                           ; BSR set to: 1
   913                           ;main.c: 384: }
   914                           ;main.c: 387: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
   915  0006D4  0101               	movlb	1	; () banked
   916  0006D6  0E01               	movlw	high main@msgtype
   917  0006D8  0100               	movlb	0	; () banked
   918  0006DA  0100               	movlb	0	; () banked
   919  0006DC  6FB6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
   920  0006DE  0101               	movlb	1	; () banked
   921  0006E0  0E18               	movlw	low main@msgtype
   922  0006E2  0100               	movlb	0	; () banked
   923  0006E4  0100               	movlb	0	; () banked
   924  0006E6  6FB5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
   925  0006E8  0101               	movlb	1	; () banked
   926  0006EA  0E01               	movlw	high main@msgbuffer
   927  0006EC  0100               	movlb	0	; () banked
   928  0006EE  0100               	movlb	0	; () banked
   929  0006F0  6FB8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
   930  0006F2  0101               	movlb	1	; () banked
   931  0006F4  0E00               	movlw	low main@msgbuffer
   932  0006F6  0100               	movlb	0	; () banked
   933  0006F8  0100               	movlb	0	; () banked
   934  0006FA  6FB7               	movwf	ToMainLow_recvmsg@data& (0+255),b
   935  0006FC  0E16               	movlw	22
   936  0006FE  ECBB  F008         	call	_ToMainLow_recvmsg
   937  000702  0101               	movlb	1	; () banked
   938  000704  0101               	movlb	1	; () banked
   939  000706  6F19               	movwf	main@length& (0+255),b
   940                           
   941                           ; BSR set to: 1
   942                           ;main.c: 388: if (length < 0) {
   943  000708  0101               	movlb	1	; () banked
   944  00070A  0101               	movlb	1	; () banked
   945  00070C  BF19               	btfsc	main@length& (0+255),7,b
   946  00070E  D7B4               	goto	l2637
   947  000710  D010               	goto	l2659
   948  000712                     l2655:
   949                           
   950                           ; BSR set to: 1
   951                           ;main.c: 410: {
   952                           ;main.c: 411: uart_write(length, msgbuffer);
   953  000712  0101               	movlb	1	; () banked
   954  000714  0E01               	movlw	high main@msgbuffer
   955  000716  0100               	movlb	0	; () banked
   956  000718  0100               	movlb	0	; () banked
   957  00071A  6F9F               	movwf	(uart_write@msg+1)& (0+255),b
   958  00071C  0101               	movlb	1	; () banked
   959  00071E  0E00               	movlw	low main@msgbuffer
   960  000720  0100               	movlb	0	; () banked
   961  000722  0100               	movlb	0	; () banked
   962  000724  6F9E               	movwf	uart_write@msg& (0+255),b
   963  000726  0101               	movlb	1	; () banked
   964  000728  0101               	movlb	1	; () banked
   965  00072A  5119               	movf	main@length& (0+255),w,b
   966  00072C  ECA4  F007         	call	_uart_write
   967  000730  D7A3               	goto	l2637
   968  000732                     l2659:
   969  000732  0101               	movlb	1	; () banked
   970  000734  0101               	movlb	1	; () banked
   971  000736  5118               	movf	main@msgtype& (0+255),w,b
   972                           
   973                           ; Switch size 1, requested type "space"
   974                           ; Number of cases is 3, Range of values is 30 to 47
   975                           ; switch strategies available:
   976                           ; Name         Instructions Cycles
   977                           ; simple_byte           10     6 (average)
   978                           ;	Chosen strategy is simple_byte
   979  000738  0A1E               	xorlw	30	; case 30
   980  00073A  B4D8               	btfsc	status,2,c
   981  00073C  D7EA               	goto	l2655
   982  00073E  0A01               	xorlw	1	; case 31
   983  000740  B4D8               	btfsc	status,2,c
   984  000742  D7E7               	goto	l2655
   985  000744  0A30               	xorlw	48	; case 47
   986  000746  D798               	goto	l2637
   987  000748                     __end_of_main:
   988                           	opt stack 0
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _uart_write *****************
   998 ;; Defined at:
   999 ;;		line 75 in file "../src/my_uart.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  length          1    wreg     unsigned char 
  1002 ;;  msg             2   30[BANK0 ] PTR unsigned char 
  1003 ;;		 -> uart_lthread@a(1), uart_lthread@length(1), main@msgbuffer(23), 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  length          1   33[BANK0 ] unsigned char 
  1006 ;;  i               1   34[BANK0 ] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;		None               void
  1009 ;; Registers used:
  1010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1016 ;;      Params:         0       2       0       0       0
  1017 ;;      Locals:         0       2       0       0       0
  1018 ;;      Temps:          0       1       0       0       0
  1019 ;;      Totals:         0       5       0       0       0
  1020 ;;Total ram usage:        5 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:   11
  1023 ;; This function calls:
  1024 ;;		_WriteUSART
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;;		_uart_lthread
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text1
  1032  000F48                     __ptext1:
  1033                           	opt stack 0
  1034  000F48                     _uart_write:
  1035                           	opt stack 19
  1036                           
  1037                           ; BSR set to: 1
  1038                           ;incstack = 0
  1039                           ;uart_write@length stored from wreg
  1040  000F48  CFE8 F0A1          	movff	wreg,uart_write@length
  1041                           
  1042                           ;my_uart.c: 77: unsigned char i = 0;
  1043  000F4C  0100               	movlb	0	; () banked
  1044  000F4E  6FA0               	movwf	??_uart_write& (0+255),b
  1045  000F50  0E00               	movlw	0
  1046  000F52  0100               	movlb	0	; () banked
  1047  000F54  0100               	movlb	0	; () banked
  1048  000F56  6FA2               	movwf	uart_write@i& (0+255),b
  1049  000F58  0100               	movlb	0	; () banked
  1050  000F5A  51A0               	movf	??_uart_write& (0+255),w,b
  1051                           
  1052                           ;my_uart.c: 78: for(i = 0; i < length; i++){
  1053  000F5C  0100               	movlb	0	; () banked
  1054  000F5E  6FA0               	movwf	??_uart_write& (0+255),b
  1055  000F60  0E00               	movlw	0
  1056  000F62  0100               	movlb	0	; () banked
  1057  000F64  0100               	movlb	0	; () banked
  1058  000F66  6FA2               	movwf	uart_write@i& (0+255),b
  1059  000F68  0100               	movlb	0	; () banked
  1060  000F6A  51A0               	movf	??_uart_write& (0+255),w,b
  1061  000F6C  D016               	goto	l2797
  1062  000F6E                     l414:
  1063  000F6E  A2AC               	btfss	4012,1,c	;volatile
  1064  000F70  D7FE               	goto	l414
  1065                           
  1066                           ;my_uart.c: 80: WriteUSART(msg[i]);
  1067  000F72  0100               	movlb	0	; () banked
  1068  000F74  0100               	movlb	0	; () banked
  1069  000F76  51A2               	movf	uart_write@i& (0+255),w,b
  1070  000F78  0D01               	mullw	1
  1071  000F7A  50F3               	movf	prodl,w,c
  1072  000F7C  0100               	movlb	0	; () banked
  1073  000F7E  0100               	movlb	0	; () banked
  1074  000F80  259E               	addwf	uart_write@msg& (0+255),w,b
  1075  000F82  6ED9               	movwf	fsr2l,c
  1076  000F84  50F4               	movf	prodh,w,c
  1077  000F86  0100               	movlb	0	; () banked
  1078  000F88  0100               	movlb	0	; () banked
  1079  000F8A  219F               	addwfc	(uart_write@msg+1)& (0+255),w,b
  1080  000F8C  6EDA               	movwf	fsr2h,c
  1081  000F8E  50DF               	movf	indf2,w,c
  1082  000F90  EC0B  F00A         	call	_WriteUSART
  1083  000F94  0100               	movlb	0	; () banked
  1084  000F96  0100               	movlb	0	; () banked
  1085  000F98  2BA2               	incf	uart_write@i& (0+255),f,b
  1086  000F9A                     l2797:
  1087                           
  1088                           ; BSR set to: 0
  1089  000F9A  0100               	movlb	0	; () banked
  1090  000F9C  0100               	movlb	0	; () banked
  1091  000F9E  51A1               	movf	uart_write@length& (0+255),w,b
  1092  000FA0  0100               	movlb	0	; () banked
  1093  000FA2  0100               	movlb	0	; () banked
  1094  000FA4  5DA2               	subwf	uart_write@i& (0+255),w,b
  1095  000FA6  B0D8               	btfsc	status,0,c
  1096                           
  1097                           ; BSR set to: 0
  1098                           
  1099                           ; BSR set to: 0
  1100  000FA8  0012               	return	
  1101  000FAA  D7E1               	goto	l414
  1102  000FAC                     __end_of_uart_write:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           prodh	equ	0xFF4
  1109                           prodl	equ	0xFF3
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           indf2	equ	0xFDF
  1113                           fsr2h	equ	0xFDA
  1114                           fsr2l	equ	0xFD9
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _WriteUSART *****************
  1118 ;; Defined at:
  1119 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  data            1    wreg     unsigned char 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  data            1   29[BANK0 ] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;		None               void
  1126 ;; Registers used:
  1127 ;;		wreg
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1133 ;;      Params:         0       0       0       0       0
  1134 ;;      Locals:         0       1       0       0       0
  1135 ;;      Temps:          0       0       0       0       0
  1136 ;;      Totals:         0       1       0       0       0
  1137 ;;Total ram usage:        1 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:   10
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_uart_write
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text2
  1148  001416                     __ptext2:
  1149                           	opt stack 0
  1150  001416                     _WriteUSART:
  1151                           	opt stack 19
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;incstack = 0
  1155                           ;WriteUSART@data stored from wreg
  1156  001416  CFE8 F09D          	movff	wreg,WriteUSART@data
  1157  00141A  ACAC               	btfss	4012,6,c	;volatile
  1158  00141C  D003               	goto	l3169
  1159  00141E  90AC               	bcf	4012,0,c	;volatile
  1160  001420  B24B               	btfsc	_USART_Status,1,c
  1161  001422  80AC               	bsf	4012,0,c	;volatile
  1162  001424                     l3169:
  1163  001424  C09D  FFAD         	movff	WriteUSART@data,4013	;volatile
  1164  001428  0012               	return	
  1165  00142A                     __end_of_WriteUSART:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           prodh	equ	0xFF4
  1172                           prodl	equ	0xFF3
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           indf2	equ	0xFDF
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _init_uart_recv *****************
  1181 ;; Defined at:
  1182 ;;		line 66 in file "../src/my_uart.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  1185 ;;		 -> main@uc(23), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;		None               void
  1190 ;; Registers used:
  1191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1197 ;;      Params:         0       2       0       0       0
  1198 ;;      Locals:         0       0       0       0       0
  1199 ;;      Temps:          0       1       0       0       0
  1200 ;;      Totals:         0       3       0       0       0
  1201 ;;Total ram usage:        3 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:   10
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text3
  1212  001134                     __ptext3:
  1213                           	opt stack 0
  1214  001134                     _init_uart_recv:
  1215                           	opt stack 20
  1216                           
  1217                           ;my_uart.c: 67: uc_ptr = uc;
  1218                           
  1219                           ;incstack = 0
  1220  001134  0100               	movlb	0	; () banked
  1221  001136  C09E  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  1222  00113A  0100               	movlb	0	; () banked
  1223  00113C  C09D  F04D         	movff	init_uart_recv@uc,_uc_ptr
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;my_uart.c: 68: uc_ptr->buflen = 0;
  1227  001140  EE20 F016          	lfsr	2,22
  1228  001144  504D               	movf	_uc_ptr,w,c
  1229  001146  26D9               	addwf	fsr2l,f,c
  1230  001148  504E               	movf	_uc_ptr+1,w,c
  1231  00114A  22DA               	addwfc	fsr2h,f,c
  1232  00114C  0E00               	movlw	0
  1233  00114E  6EDF               	movwf	indf2,c
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;my_uart.c: 69: STATE = GET_MSG_COUNT;
  1237  001150  0100               	movlb	0	; () banked
  1238  001152  6F9F               	movwf	??_init_uart_recv& (0+255),b
  1239  001154  0E00               	movlw	0
  1240  001156  6E4A               	movwf	_STATE,c
  1241  001158  0100               	movlb	0	; () banked
  1242  00115A  519F               	movf	??_init_uart_recv& (0+255),w,b
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;my_uart.c: 70: COMMAND_LEN = 0;
  1246  00115C  0100               	movlb	0	; () banked
  1247  00115E  6F9F               	movwf	??_init_uart_recv& (0+255),b
  1248  001160  0E00               	movlw	0
  1249  001162  6E47               	movwf	_COMMAND_LEN,c
  1250  001164  0100               	movlb	0	; () banked
  1251  001166  519F               	movf	??_init_uart_recv& (0+255),w,b
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;my_uart.c: 71: COMMAND_REC = 0;
  1255  001168  0100               	movlb	0	; () banked
  1256  00116A  6F9F               	movwf	??_init_uart_recv& (0+255),b
  1257  00116C  0E00               	movlw	0
  1258  00116E  6E48               	movwf	_COMMAND_REC,c
  1259  001170  0100               	movlb	0	; () banked
  1260  001172  519F               	movf	??_init_uart_recv& (0+255),w,b
  1261                           
  1262                           ; BSR set to: 0
  1263  001174  0012               	return	
  1264  001176                     __end_of_init_uart_recv:
  1265                           	opt stack 0
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           prodh	equ	0xFF4
  1271                           prodl	equ	0xFF3
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           indf2	equ	0xFDF
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _init_queues *****************
  1280 ;; Defined at:
  1281 ;;		line 194 in file "../src/messages.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0
  1297 ;;      Temps:          0       1       0       0       0
  1298 ;;      Totals:         0       1       0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:   11
  1302 ;; This function calls:
  1303 ;;		_init_queue
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text4
  1310  000EDA                     __ptext4:
  1311                           	opt stack 0
  1312  000EDA                     _init_queues:
  1313                           	opt stack 19
  1314                           
  1315                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;incstack = 0
  1319  000EDA  0100               	movlb	0	; () banked
  1320  000EDC  6FA1               	movwf	??_init_queues& (0+255),b
  1321  000EDE  0E00               	movlw	0
  1322  000EE0  6E49               	movwf	_MQ_Main_Willing_to_block,c
  1323  000EE2  0100               	movlb	0	; () banked
  1324  000EE4  51A1               	movf	??_init_queues& (0+255),w,b
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1328  000EE6  0101               	movlb	1	; () banked
  1329  000EE8  0E01               	movlw	high _ToMainLow_MQ
  1330  000EEA  0100               	movlb	0	; () banked
  1331  000EEC  0100               	movlb	0	; () banked
  1332  000EEE  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  1333  000EF0  0101               	movlb	1	; () banked
  1334  000EF2  0E7E               	movlw	low _ToMainLow_MQ
  1335  000EF4  0100               	movlb	0	; () banked
  1336  000EF6  0100               	movlb	0	; () banked
  1337  000EF8  6F9D               	movwf	init_queue@qptr& (0+255),b
  1338  000EFA  EC30  F007         	call	_init_queue	;wreg free
  1339                           
  1340                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1341  000EFE  0102               	movlb	2	; () banked
  1342  000F00  0E02               	movlw	high _ToMainHigh_MQ
  1343  000F02  0100               	movlb	0	; () banked
  1344  000F04  0100               	movlb	0	; () banked
  1345  000F06  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  1346  000F08  0102               	movlb	2	; () banked
  1347  000F0A  0E66               	movlw	low _ToMainHigh_MQ
  1348  000F0C  0100               	movlb	0	; () banked
  1349  000F0E  0100               	movlb	0	; () banked
  1350  000F10  6F9D               	movwf	init_queue@qptr& (0+255),b
  1351  000F12  EC30  F007         	call	_init_queue	;wreg free
  1352                           
  1353                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1354  000F16  0102               	movlb	2	; () banked
  1355  000F18  0E02               	movlw	high _FromMainLow_MQ
  1356  000F1A  0100               	movlb	0	; () banked
  1357  000F1C  0100               	movlb	0	; () banked
  1358  000F1E  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  1359  000F20  0102               	movlb	2	; () banked
  1360  000F22  0E00               	movlw	low _FromMainLow_MQ
  1361  000F24  0100               	movlb	0	; () banked
  1362  000F26  0100               	movlb	0	; () banked
  1363  000F28  6F9D               	movwf	init_queue@qptr& (0+255),b
  1364  000F2A  EC30  F007         	call	_init_queue	;wreg free
  1365                           
  1366                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1367  000F2E  0103               	movlb	3	; () banked
  1368  000F30  0E03               	movlw	high _FromMainHigh_MQ
  1369  000F32  0100               	movlb	0	; () banked
  1370  000F34  0100               	movlb	0	; () banked
  1371  000F36  6F9E               	movwf	(init_queue@qptr+1)& (0+255),b
  1372  000F38  0103               	movlb	3	; () banked
  1373  000F3A  0E00               	movlw	low _FromMainHigh_MQ
  1374  000F3C  0100               	movlb	0	; () banked
  1375  000F3E  0100               	movlb	0	; () banked
  1376  000F40  6F9D               	movwf	init_queue@qptr& (0+255),b
  1377  000F42  EC30  F007         	call	_init_queue	;wreg free
  1378  000F46  0012               	return	
  1379  000F48                     __end_of_init_queues:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           indf2	equ	0xFDF
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function _init_queue *****************
  1395 ;; Defined at:
  1396 ;;		line 14 in file "../src/messages.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  1399 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  i               1   32[BANK0 ] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;		None               void
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1411 ;;      Params:         0       2       0       0       0
  1412 ;;      Locals:         0       1       0       0       0
  1413 ;;      Temps:          0       1       0       0       0
  1414 ;;      Totals:         0       4       0       0       0
  1415 ;;Total ram usage:        4 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:   10
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_init_queues
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text5
  1426  000E60                     __ptext5:
  1427                           	opt stack 0
  1428  000E60                     _init_queue:
  1429                           	opt stack 19
  1430                           
  1431                           ;messages.c: 15: unsigned char i;
  1432                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1433                           
  1434                           ;incstack = 0
  1435  000E60  0100               	movlb	0	; () banked
  1436  000E62  EE20 F064          	lfsr	2,100
  1437  000E66  0100               	movlb	0	; () banked
  1438  000E68  519D               	movf	init_queue@qptr& (0+255),w,b
  1439  000E6A  26D9               	addwf	fsr2l,f,c
  1440  000E6C  0100               	movlb	0	; () banked
  1441  000E6E  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  1442  000E70  22DA               	addwfc	fsr2h,f,c
  1443  000E72  0E00               	movlw	0
  1444  000E74  6EDF               	movwf	indf2,c
  1445                           
  1446                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1447  000E76  0100               	movlb	0	; () banked
  1448  000E78  EE20 F065          	lfsr	2,101
  1449  000E7C  0100               	movlb	0	; () banked
  1450  000E7E  519D               	movf	init_queue@qptr& (0+255),w,b
  1451  000E80  26D9               	addwf	fsr2l,f,c
  1452  000E82  0100               	movlb	0	; () banked
  1453  000E84  519E               	movf	(init_queue@qptr+1)& (0+255),w,b
  1454  000E86  22DA               	addwfc	fsr2h,f,c
  1455  000E88  0E00               	movlw	0
  1456  000E8A  6EDF               	movwf	indf2,c
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1460  000E8C  0100               	movlb	0	; () banked
  1461  000E8E  6F9F               	movwf	??_init_queue& (0+255),b
  1462  000E90  0E00               	movlw	0
  1463  000E92  0100               	movlb	0	; () banked
  1464  000E94  0100               	movlb	0	; () banked
  1465  000E96  6FA0               	movwf	init_queue@i& (0+255),b
  1466  000E98  0100               	movlb	0	; () banked
  1467  000E9A  519F               	movf	??_init_queue& (0+255),w,b
  1468                           
  1469                           ; BSR set to: 0
  1470  000E9C  0E03               	movlw	3
  1471  000E9E  0100               	movlb	0	; () banked
  1472  000EA0  0100               	movlb	0	; () banked
  1473  000EA2  65A0               	cpfsgt	init_queue@i& (0+255),b
  1474  000EA4  D001               	goto	l2807
  1475  000EA6  0012               	return	
  1476  000EA8                     l2807:
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;messages.c: 20: qptr->queue[i].full = 0;
  1480  000EA8  0100               	movlb	0	; () banked
  1481  000EAA  0100               	movlb	0	; () banked
  1482  000EAC  51A0               	movf	init_queue@i& (0+255),w,b
  1483  000EAE  0D19               	mullw	25
  1484  000EB0  50F3               	movf	prodl,w,c
  1485  000EB2  0100               	movlb	0	; () banked
  1486  000EB4  0100               	movlb	0	; () banked
  1487  000EB6  259D               	addwf	init_queue@qptr& (0+255),w,b
  1488  000EB8  6ED9               	movwf	fsr2l,c
  1489  000EBA  50F4               	movf	prodh,w,c
  1490  000EBC  0100               	movlb	0	; () banked
  1491  000EBE  0100               	movlb	0	; () banked
  1492  000EC0  219E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1493  000EC2  6EDA               	movwf	fsr2h,c
  1494  000EC4  0E00               	movlw	0
  1495  000EC6  6EDF               	movwf	indf2,c
  1496                           
  1497                           ; BSR set to: 0
  1498  000EC8  0100               	movlb	0	; () banked
  1499  000ECA  0100               	movlb	0	; () banked
  1500  000ECC  2BA0               	incf	init_queue@i& (0+255),f,b
  1501                           
  1502                           ; BSR set to: 0
  1503  000ECE  0E03               	movlw	3
  1504  000ED0  0100               	movlb	0	; () banked
  1505  000ED2  0100               	movlb	0	; () banked
  1506  000ED4  65A0               	cpfsgt	init_queue@i& (0+255),b
  1507  000ED6  D7E8               	goto	l2807
  1508  000ED8  0012               	return	
  1509  000EDA                     __end_of_init_queue:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           prodh	equ	0xFF4
  1516                           prodl	equ	0xFF3
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           indf2	equ	0xFDF
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _init_i2c *****************
  1525 ;; Defined at:
  1526 ;;		line 372 in file "../src/my_i2c.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  1529 ;;		 -> main@ic(77), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;		None               void
  1534 ;; Registers used:
  1535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1541 ;;      Params:         0       2       0       0       0
  1542 ;;      Locals:         0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0
  1544 ;;      Totals:         0       2       0       0       0
  1545 ;;Total ram usage:        2 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:   10
  1548 ;; This function calls:
  1549 ;;		Nothing
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text6
  1556  000A66                     __ptext6:
  1557                           	opt stack 0
  1558  000A66                     _init_i2c:
  1559                           	opt stack 20
  1560                           
  1561                           ;my_i2c.c: 373: ic_ptr = ic;
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;incstack = 0
  1565  000A66  0100               	movlb	0	; () banked
  1566  000A68  0100               	movlb	0	; () banked
  1567  000A6A  C09E  F0BB         	movff	init_i2c@ic+1,_ic_ptr+1
  1568  000A6E  0100               	movlb	0	; () banked
  1569  000A70  0100               	movlb	0	; () banked
  1570  000A72  C09D  F0BA         	movff	init_i2c@ic,_ic_ptr
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;my_i2c.c: 374: ic_ptr->buffer[0] = 0;
  1574  000A76  C0BA  FFD9         	movff	_ic_ptr,fsr2l
  1575  000A7A  C0BB  FFDA         	movff	_ic_ptr+1,fsr2h
  1576  000A7E  0E00               	movlw	0
  1577  000A80  6EDF               	movwf	indf2,c
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;my_i2c.c: 375: ic_ptr->buffer[1] = 0;
  1581  000A82  0100               	movlb	0	; () banked
  1582  000A84  EE20 F001          	lfsr	2,1
  1583  000A88  0100               	movlb	0	; () banked
  1584  000A8A  51BA               	movf	_ic_ptr& (0+255),w,b
  1585  000A8C  26D9               	addwf	fsr2l,f,c
  1586  000A8E  0100               	movlb	0	; () banked
  1587  000A90  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1588  000A92  22DA               	addwfc	fsr2h,f,c
  1589  000A94  0E00               	movlw	0
  1590  000A96  6EDF               	movwf	indf2,c
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;my_i2c.c: 376: ic_ptr->buffer[2] = 0;
  1594  000A98  0100               	movlb	0	; () banked
  1595  000A9A  EE20 F002          	lfsr	2,2
  1596  000A9E  0100               	movlb	0	; () banked
  1597  000AA0  51BA               	movf	_ic_ptr& (0+255),w,b
  1598  000AA2  26D9               	addwf	fsr2l,f,c
  1599  000AA4  0100               	movlb	0	; () banked
  1600  000AA6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1601  000AA8  22DA               	addwfc	fsr2h,f,c
  1602  000AAA  0E00               	movlw	0
  1603  000AAC  6EDF               	movwf	indf2,c
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;my_i2c.c: 377: ic_ptr->buflen = 0;
  1607  000AAE  0100               	movlb	0	; () banked
  1608  000AB0  EE20 F016          	lfsr	2,22
  1609  000AB4  0100               	movlb	0	; () banked
  1610  000AB6  51BA               	movf	_ic_ptr& (0+255),w,b
  1611  000AB8  26D9               	addwf	fsr2l,f,c
  1612  000ABA  0100               	movlb	0	; () banked
  1613  000ABC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1614  000ABE  22DA               	addwfc	fsr2h,f,c
  1615  000AC0  0E00               	movlw	0
  1616  000AC2  6EDF               	movwf	indf2,c
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;my_i2c.c: 378: ic_ptr->event_count = 0;
  1620  000AC4  0100               	movlb	0	; () banked
  1621  000AC6  EE20 F018          	lfsr	2,24
  1622  000ACA  0100               	movlb	0	; () banked
  1623  000ACC  51BA               	movf	_ic_ptr& (0+255),w,b
  1624  000ACE  26D9               	addwf	fsr2l,f,c
  1625  000AD0  0100               	movlb	0	; () banked
  1626  000AD2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1627  000AD4  22DA               	addwfc	fsr2h,f,c
  1628  000AD6  0E00               	movlw	0
  1629  000AD8  6EDF               	movwf	indf2,c
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;my_i2c.c: 379: ic_ptr->status = 0x5;
  1633  000ADA  0100               	movlb	0	; () banked
  1634  000ADC  EE20 F019          	lfsr	2,25
  1635  000AE0  0100               	movlb	0	; () banked
  1636  000AE2  51BA               	movf	_ic_ptr& (0+255),w,b
  1637  000AE4  26D9               	addwf	fsr2l,f,c
  1638  000AE6  0100               	movlb	0	; () banked
  1639  000AE8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1640  000AEA  22DA               	addwfc	fsr2h,f,c
  1641  000AEC  0E05               	movlw	5
  1642  000AEE  6EDF               	movwf	indf2,c
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;my_i2c.c: 380: ic_ptr->error_count = 0;
  1646  000AF0  0100               	movlb	0	; () banked
  1647  000AF2  EE20 F01B          	lfsr	2,27
  1648  000AF6  0100               	movlb	0	; () banked
  1649  000AF8  51BA               	movf	_ic_ptr& (0+255),w,b
  1650  000AFA  26D9               	addwf	fsr2l,f,c
  1651  000AFC  0100               	movlb	0	; () banked
  1652  000AFE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1653  000B00  22DA               	addwfc	fsr2h,f,c
  1654  000B02  0E00               	movlw	0
  1655  000B04  6EDF               	movwf	indf2,c
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;my_i2c.c: 381: ic_ptr->sendBufInd = 0;
  1659  000B06  0100               	movlb	0	; () banked
  1660  000B08  EE20 F04C          	lfsr	2,76
  1661  000B0C  0100               	movlb	0	; () banked
  1662  000B0E  51BA               	movf	_ic_ptr& (0+255),w,b
  1663  000B10  26D9               	addwf	fsr2l,f,c
  1664  000B12  0100               	movlb	0	; () banked
  1665  000B14  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1666  000B16  22DA               	addwfc	fsr2h,f,c
  1667  000B18  0E00               	movlw	0
  1668  000B1A  6EDF               	movwf	indf2,c
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;my_i2c.c: 382: ic_ptr->sendBufLen = 0;
  1672  000B1C  0100               	movlb	0	; () banked
  1673  000B1E  EE20 F04B          	lfsr	2,75
  1674  000B22  0100               	movlb	0	; () banked
  1675  000B24  51BA               	movf	_ic_ptr& (0+255),w,b
  1676  000B26  26D9               	addwf	fsr2l,f,c
  1677  000B28  0100               	movlb	0	; () banked
  1678  000B2A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  1679  000B2C  22DA               	addwfc	fsr2h,f,c
  1680  000B2E  0E00               	movlw	0
  1681  000B30  6EDF               	movwf	indf2,c
  1682                           
  1683                           ; BSR set to: 0
  1684  000B32  0012               	return	
  1685  000B34                     __end_of_init_i2c:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           prodh	equ	0xFF4
  1692                           prodl	equ	0xFF3
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           indf2	equ	0xFDF
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _enable_interrupts *****************
  1701 ;; Defined at:
  1702 ;;		line 14 in file "../src/interrupts.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;		None               void
  1709 ;; Registers used:
  1710 ;;		None
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1716 ;;      Params:         0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:   10
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text7
  1731  00149A                     __ptext7:
  1732                           	opt stack 0
  1733  00149A                     _enable_interrupts:
  1734                           	opt stack 20
  1735                           
  1736                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;incstack = 0
  1740  00149A  8ED0               	bsf	4048,7,c	;volatile
  1741                           
  1742                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  1743  00149C  8EF2               	bsf	intcon,7,c	;volatile
  1744                           
  1745                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  1746  00149E  8CF2               	bsf	intcon,6,c	;volatile
  1747  0014A0  0012               	return	
  1748  0014A2                     __end_of_enable_interrupts:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           prodh	equ	0xFF4
  1755                           prodl	equ	0xFF3
  1756                           intcon	equ	0xFF2
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           indf2	equ	0xFDF
  1760                           fsr2h	equ	0xFDA
  1761                           fsr2l	equ	0xFD9
  1762                           status	equ	0xFD8
  1763                           
  1764 ;; *************** function _block_on_To_msgqueues *****************
  1765 ;; Defined at:
  1766 ;;		line 258 in file "../src/messages.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;		None               void
  1773 ;; Registers used:
  1774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          0       1       0       0       0
  1783 ;;      Totals:         0       1       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:   13
  1787 ;; This function calls:
  1788 ;;		_Delay1KTCYx
  1789 ;;		_check_msg
  1790 ;;		_in_main
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text8
  1797  000DE2                     __ptext8:
  1798                           	opt stack 0
  1799  000DE2                     _block_on_To_msgqueues:
  1800                           	opt stack 17
  1801                           
  1802                           ;messages.c: 259: if (!in_main()) {
  1803                           
  1804                           ;incstack = 0
  1805  000DE2  EC78  F008         	call	_in_main	;wreg free
  1806  000DE6  0100               	movlb	0	; () banked
  1807  000DE8  0100               	movlb	0	; () banked
  1808  000DEA  51A2               	movf	(?_in_main+1)& (0+255),w,b
  1809  000DEC  0100               	movlb	0	; () banked
  1810  000DEE  11A1               	iorwf	?_in_main& (0+255),w,b
  1811  000DF0  B4D8               	btfsc	status,2,c
  1812  000DF2  0012               	return	
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;messages.c: 261: }
  1816                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  1817                           
  1818                           ; BSR set to: 0
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;messages.c: 260: return;
  1822  000DF4  0100               	movlb	0	; () banked
  1823  000DF6  6FA3               	movwf	??_block_on_To_msgqueues& (0+255),b
  1824  000DF8  0E01               	movlw	1
  1825  000DFA  6E49               	movwf	_MQ_Main_Willing_to_block,c
  1826  000DFC  0100               	movlb	0	; () banked
  1827  000DFE  51A3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1828  000E00                     l2769:
  1829                           
  1830                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  1831  000E00  0102               	movlb	2	; () banked
  1832  000E02  0E02               	movlw	high _ToMainHigh_MQ
  1833  000E04  0100               	movlb	0	; () banked
  1834  000E06  0100               	movlb	0	; () banked
  1835  000E08  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  1836  000E0A  0102               	movlb	2	; () banked
  1837  000E0C  0E66               	movlw	low _ToMainHigh_MQ
  1838  000E0E  0100               	movlb	0	; () banked
  1839  000E10  0100               	movlb	0	; () banked
  1840  000E12  6F9D               	movwf	check_msg@qptr& (0+255),b
  1841  000E14  EC3D  F009         	call	_check_msg	;wreg free
  1842  000E18  0900               	iorlw	0
  1843  000E1A  B4D8               	btfsc	status,2,c
  1844  000E1C  D007               	goto	l2775
  1845                           
  1846                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  1847  000E1E  0100               	movlb	0	; () banked
  1848  000E20  6FA3               	movwf	??_block_on_To_msgqueues& (0+255),b
  1849  000E22  0E00               	movlw	0
  1850  000E24  6E49               	movwf	_MQ_Main_Willing_to_block,c
  1851  000E26  0100               	movlb	0	; () banked
  1852  000E28  51A3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1853  000E2A  0012               	return	
  1854  000E2C                     l2775:
  1855                           
  1856                           ;messages.c: 271: }
  1857                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  1858  000E2C  0101               	movlb	1	; () banked
  1859  000E2E  0E01               	movlw	high _ToMainLow_MQ
  1860  000E30  0100               	movlb	0	; () banked
  1861  000E32  0100               	movlb	0	; () banked
  1862  000E34  6F9E               	movwf	(check_msg@qptr+1)& (0+255),b
  1863  000E36  0101               	movlb	1	; () banked
  1864  000E38  0E7E               	movlw	low _ToMainLow_MQ
  1865  000E3A  0100               	movlb	0	; () banked
  1866  000E3C  0100               	movlb	0	; () banked
  1867  000E3E  6F9D               	movwf	check_msg@qptr& (0+255),b
  1868  000E40  EC3D  F009         	call	_check_msg	;wreg free
  1869  000E44  0900               	iorlw	0
  1870  000E46  B4D8               	btfsc	status,2,c
  1871  000E48  D007               	goto	l2781
  1872                           
  1873                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  1874  000E4A  0100               	movlb	0	; () banked
  1875  000E4C  6FA3               	movwf	??_block_on_To_msgqueues& (0+255),b
  1876  000E4E  0E00               	movlw	0
  1877  000E50  6E49               	movwf	_MQ_Main_Willing_to_block,c
  1878  000E52  0100               	movlb	0	; () banked
  1879  000E54  51A3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  1880  000E56  0012               	return	
  1881  000E58                     l2781:
  1882                           
  1883                           ;messages.c: 278: }
  1884                           ;messages.c: 279: Delay1KTCYx(10);
  1885  000E58  0E0A               	movlw	10
  1886  000E5A  EC00  F00A         	call	_Delay1KTCYx
  1887  000E5E  D7D0               	goto	l2769
  1888  000E60                     __end_of_block_on_To_msgqueues:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           indf2	equ	0xFDF
  1900                           fsr2h	equ	0xFDA
  1901                           fsr2l	equ	0xFD9
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _in_main *****************
  1905 ;; Defined at:
  1906 ;;		line 40 in file "../src/interrupts.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   33[BANK0 ] int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1920 ;;      Params:         0       2       0       0       0
  1921 ;;      Locals:         0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0
  1923 ;;      Totals:         0       2       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:   12
  1927 ;; This function calls:
  1928 ;;		_in_high_int
  1929 ;;		_in_low_int
  1930 ;; This function is called by:
  1931 ;;		_block_on_To_msgqueues
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text9
  1936  0010F0                     __ptext9:
  1937                           	opt stack 0
  1938  0010F0                     _in_main:
  1939                           	opt stack 17
  1940                           
  1941                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  1942                           
  1943                           ;incstack = 0
  1944  0010F0  EC55  F008         	call	_in_low_int	;wreg free
  1945  0010F4  0100               	movlb	0	; () banked
  1946  0010F6  0100               	movlb	0	; () banked
  1947  0010F8  51A0               	movf	(?_in_low_int+1)& (0+255),w,b
  1948  0010FA  0100               	movlb	0	; () banked
  1949  0010FC  119F               	iorwf	?_in_low_int& (0+255),w,b
  1950  0010FE  A4D8               	btfss	status,2,c
  1951  001100  D011               	goto	l2455
  1952                           
  1953                           ; BSR set to: 0
  1954  001102  EC15  F00A         	call	_in_high_int	;wreg free
  1955  001106  0100               	movlb	0	; () banked
  1956  001108  0100               	movlb	0	; () banked
  1957  00110A  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  1958  00110C  0100               	movlb	0	; () banked
  1959  00110E  119D               	iorwf	?_in_high_int& (0+255),w,b
  1960  001110  A4D8               	btfss	status,2,c
  1961  001112  D008               	goto	l2455
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;interrupts.c: 42: return (1);
  1965  001114  0E00               	movlw	0
  1966  001116  0100               	movlb	0	; () banked
  1967  001118  0100               	movlb	0	; () banked
  1968  00111A  6FA2               	movwf	(?_in_main+1)& (0+255),b
  1969  00111C  0E01               	movlw	1
  1970  00111E  0100               	movlb	0	; () banked
  1971  001120  6FA1               	movwf	?_in_main& (0+255),b
  1972  001122  0012               	return	
  1973  001124                     l2455:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;interrupts.c: 44: return (0);
  1977  001124  0E00               	movlw	0
  1978  001126  0100               	movlb	0	; () banked
  1979  001128  0100               	movlb	0	; () banked
  1980  00112A  6FA2               	movwf	(?_in_main+1)& (0+255),b
  1981  00112C  0E00               	movlw	0
  1982  00112E  0100               	movlb	0	; () banked
  1983  001130  6FA1               	movwf	?_in_main& (0+255),b
  1984  001132  0012               	return	
  1985  001134                     __end_of_in_main:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           indf2	equ	0xFDF
  1997                           fsr2h	equ	0xFDA
  1998                           fsr2l	equ	0xFD9
  1999                           status	equ	0xFD8
  2000                           
  2001 ;; *************** function _in_low_int *****************
  2002 ;; Defined at:
  2003 ;;		line 30 in file "../src/interrupts.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2   31[BANK0 ] int 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2017 ;;      Params:         0       2       0       0       0
  2018 ;;      Locals:         0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0
  2020 ;;      Totals:         0       2       0       0       0
  2021 ;;Total ram usage:        2 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:   11
  2024 ;; This function calls:
  2025 ;;		_in_high_int
  2026 ;; This function is called by:
  2027 ;;		_in_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text10
  2032  0010AA                     __ptext10:
  2033                           	opt stack 0
  2034  0010AA                     _in_low_int:
  2035                           	opt stack 17
  2036                           
  2037                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;incstack = 0
  2041  0010AA  ACF2               	btfss	intcon,6,c	;volatile
  2042  0010AC  D008               	goto	l2433
  2043                           
  2044                           ;interrupts.c: 32: return (0);
  2045  0010AE  0E00               	movlw	0
  2046  0010B0  0100               	movlb	0	; () banked
  2047  0010B2  0100               	movlb	0	; () banked
  2048  0010B4  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  2049  0010B6  0E00               	movlw	0
  2050  0010B8  0100               	movlb	0	; () banked
  2051  0010BA  6F9F               	movwf	?_in_low_int& (0+255),b
  2052  0010BC  0012               	return	
  2053  0010BE                     l2433:
  2054  0010BE  EC15  F00A         	call	_in_high_int	;wreg free
  2055  0010C2  0100               	movlb	0	; () banked
  2056  0010C4  0100               	movlb	0	; () banked
  2057  0010C6  519E               	movf	(?_in_high_int+1)& (0+255),w,b
  2058  0010C8  0100               	movlb	0	; () banked
  2059  0010CA  119D               	iorwf	?_in_high_int& (0+255),w,b
  2060  0010CC  B4D8               	btfsc	status,2,c
  2061  0010CE  D008               	goto	l2441
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;interrupts.c: 34: return (0);
  2065  0010D0  0E00               	movlw	0
  2066  0010D2  0100               	movlb	0	; () banked
  2067  0010D4  0100               	movlb	0	; () banked
  2068  0010D6  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  2069  0010D8  0E00               	movlw	0
  2070  0010DA  0100               	movlb	0	; () banked
  2071  0010DC  6F9F               	movwf	?_in_low_int& (0+255),b
  2072  0010DE  0012               	return	
  2073  0010E0                     l2441:
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;interrupts.c: 36: return (1);
  2077  0010E0  0E00               	movlw	0
  2078  0010E2  0100               	movlb	0	; () banked
  2079  0010E4  0100               	movlb	0	; () banked
  2080  0010E6  6FA0               	movwf	(?_in_low_int+1)& (0+255),b
  2081  0010E8  0E01               	movlw	1
  2082  0010EA  0100               	movlb	0	; () banked
  2083  0010EC  6F9F               	movwf	?_in_low_int& (0+255),b
  2084  0010EE  0012               	return	
  2085  0010F0                     __end_of_in_low_int:
  2086                           	opt stack 0
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           prodh	equ	0xFF4
  2092                           prodl	equ	0xFF3
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           indf2	equ	0xFDF
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _in_high_int *****************
  2102 ;; Defined at:
  2103 ;;		line 22 in file "../src/interrupts.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2   29[BANK0 ] int 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2117 ;;      Params:         0       2       0       0       0
  2118 ;;      Locals:         0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0
  2120 ;;      Totals:         0       2       0       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:   10
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_in_low_int
  2128 ;;		_in_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text11
  2133  00142A                     __ptext11:
  2134                           	opt stack 0
  2135  00142A                     _in_high_int:
  2136                           	opt stack 17
  2137                           
  2138                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;incstack = 0
  2142  00142A  0E00               	movlw	0
  2143  00142C  AEF2               	btfss	intcon,7,c	;volatile
  2144  00142E  0E01               	movlw	1
  2145  001430  0100               	movlb	0	; () banked
  2146  001432  0100               	movlb	0	; () banked
  2147  001434  6F9D               	movwf	?_in_high_int& (0+255),b
  2148  001436  0100               	movlb	0	; () banked
  2149  001438  6B9E               	clrf	(?_in_high_int+1)& (0+255),b
  2150  00143A  0012               	return	
  2151  00143C                     __end_of_in_high_int:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf2	equ	0xFDF
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _check_msg *****************
  2168 ;; Defined at:
  2169 ;;		line 222 in file "../src/messages.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  2172 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2184 ;;      Params:         0       2       0       0       0
  2185 ;;      Locals:         0       0       0       0       0
  2186 ;;      Temps:          0       1       0       0       0
  2187 ;;      Totals:         0       3       0       0       0
  2188 ;;Total ram usage:        3 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:   10
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_block_on_To_msgqueues
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text12
  2199  00127A                     __ptext12:
  2200                           	opt stack 0
  2201  00127A                     _check_msg:
  2202                           	opt stack 19
  2203                           
  2204                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;incstack = 0
  2208  00127A  0100               	movlb	0	; () banked
  2209  00127C  EE20 F065          	lfsr	2,101
  2210  001280  0100               	movlb	0	; () banked
  2211  001282  519D               	movf	check_msg@qptr& (0+255),w,b
  2212  001284  26D9               	addwf	fsr2l,f,c
  2213  001286  0100               	movlb	0	; () banked
  2214  001288  519E               	movf	(check_msg@qptr+1)& (0+255),w,b
  2215  00128A  22DA               	addwfc	fsr2h,f,c
  2216  00128C  50DF               	movf	indf2,w,c
  2217  00128E  0100               	movlb	0	; () banked
  2218  001290  6F9F               	movwf	??_check_msg& (0+255),b
  2219  001292  0100               	movlb	0	; () banked
  2220  001294  519F               	movf	??_check_msg& (0+255),w,b
  2221  001296  0D19               	mullw	25
  2222  001298  50F3               	movf	prodl,w,c
  2223  00129A  0100               	movlb	0	; () banked
  2224  00129C  0100               	movlb	0	; () banked
  2225  00129E  259D               	addwf	check_msg@qptr& (0+255),w,b
  2226  0012A0  6ED9               	movwf	fsr2l,c
  2227  0012A2  50F4               	movf	prodh,w,c
  2228  0012A4  0100               	movlb	0	; () banked
  2229  0012A6  0100               	movlb	0	; () banked
  2230  0012A8  219E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2231  0012AA  6EDA               	movwf	fsr2h,c
  2232  0012AC  50DF               	movf	indf2,w,c
  2233  0012AE  0012               	return	
  2234  0012B0                     __end_of_check_msg:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           indf2	equ	0xFDF
  2246                           fsr2h	equ	0xFDA
  2247                           fsr2l	equ	0xFD9
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _Delay1KTCYx *****************
  2251 ;; Defined at:
  2252 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  unit            1    wreg     unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  unit            1   29[BANK0 ] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         0       1       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       1       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:   10
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_block_on_To_msgqueues
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text13
  2281  001400                     __ptext13:
  2282                           	opt stack 0
  2283  001400                     _Delay1KTCYx:
  2284                           	opt stack 19
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;incstack = 0
  2288                           ;Delay1KTCYx@unit stored from wreg
  2289  001400  CFE8 F09D          	movff	wreg,Delay1KTCYx@unit
  2290  001404                     l873:
  2291  001404  0EFA               	movlw	250
  2292  001406                     u2837:
  2293  001406  F000               	nop	
  2294  001408  2EE8               	decfsz	wreg,f,c
  2295  00140A  D7FD               	goto	u2837
  2296  00140C  0100               	movlb	0	; () banked
  2297  00140E  0100               	movlb	0	; () banked
  2298  001410  2F9D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2299  001412  D7F8               	goto	l873
  2300  001414  0012               	return	
  2301  001416                     __end_of_Delay1KTCYx:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodh	equ	0xFF4
  2308                           prodl	equ	0xFF3
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           indf2	equ	0xFDF
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _ToMainLow_recvmsg *****************
  2318 ;; Defined at:
  2319 ;;		line 112 in file "../src/messages.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  maxlength       1    wreg     unsigned char 
  2322 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  2323 ;;		 -> main@msgtype(1), 
  2324 ;;  data            2   55[BANK0 ] PTR void 
  2325 ;;		 -> main@msgbuffer(23), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  maxlength       1   57[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      char 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2337 ;;      Params:         0       4       0       0       0
  2338 ;;      Locals:         0       1       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       5       0       0       0
  2341 ;;Total ram usage:        5 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:   12
  2344 ;; This function calls:
  2345 ;;		_recv_msg
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text14
  2352  001176                     __ptext14:
  2353                           	opt stack 0
  2354  001176                     _ToMainLow_recvmsg:
  2355                           	opt stack 18
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;incstack = 0
  2359                           ;ToMainLow_recvmsg@maxlength stored from wreg
  2360  001176  CFE8 F0B9          	movff	wreg,ToMainLow_recvmsg@maxlength
  2361                           
  2362                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  2363  00117A  0101               	movlb	1	; () banked
  2364  00117C  0E01               	movlw	high _ToMainLow_MQ
  2365  00117E  0100               	movlb	0	; () banked
  2366  001180  0100               	movlb	0	; () banked
  2367  001182  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  2368  001184  0101               	movlb	1	; () banked
  2369  001186  0E7E               	movlw	low _ToMainLow_MQ
  2370  001188  0100               	movlb	0	; () banked
  2371  00118A  0100               	movlb	0	; () banked
  2372  00118C  6FA7               	movwf	recv_msg@qptr& (0+255),b
  2373  00118E  C0B9  F0A9         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  2374  001192  0100               	movlb	0	; () banked
  2375  001194  0100               	movlb	0	; () banked
  2376  001196  C0B6  F0AB         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  2377  00119A  0100               	movlb	0	; () banked
  2378  00119C  0100               	movlb	0	; () banked
  2379  00119E  C0B5  F0AA         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  2380  0011A2  0100               	movlb	0	; () banked
  2381  0011A4  0100               	movlb	0	; () banked
  2382  0011A6  C0B8  F0AD         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  2383  0011AA  0100               	movlb	0	; () banked
  2384  0011AC  0100               	movlb	0	; () banked
  2385  0011AE  C0B7  F0AC         	movff	ToMainLow_recvmsg@data,recv_msg@data
  2386  0011B2  ECA4  F003         	call	_recv_msg	;wreg free
  2387  0011B6  0012               	return	
  2388  0011B8                     __end_of_ToMainLow_recvmsg:
  2389                           	opt stack 0
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           prodh	equ	0xFF4
  2395                           prodl	equ	0xFF3
  2396                           intcon	equ	0xFF2
  2397                           postinc0	equ	0xFEE
  2398                           wreg	equ	0xFE8
  2399                           indf2	equ	0xFDF
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _ToMainHigh_recvmsg *****************
  2405 ;; Defined at:
  2406 ;;		line 135 in file "../src/messages.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  maxlength       1    wreg     unsigned char 
  2409 ;;  msgtype         2   53[BANK0 ] PTR unsigned char 
  2410 ;;		 -> main@msgtype(1), 
  2411 ;;  data            2   55[BANK0 ] PTR void 
  2412 ;;		 -> main@msgbuffer(23), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  maxlength       1   57[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2424 ;;      Params:         0       4       0       0       0
  2425 ;;      Locals:         0       1       0       0       0
  2426 ;;      Temps:          0       0       0       0       0
  2427 ;;      Totals:         0       5       0       0       0
  2428 ;;Total ram usage:        5 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:   12
  2431 ;; This function calls:
  2432 ;;		_recv_msg
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text15
  2439  0011B8                     __ptext15:
  2440                           	opt stack 0
  2441  0011B8                     _ToMainHigh_recvmsg:
  2442                           	opt stack 18
  2443                           
  2444                           ;incstack = 0
  2445                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  2446  0011B8  CFE8 F0B9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  2447                           
  2448                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2449  0011BC  0102               	movlb	2	; () banked
  2450  0011BE  0E02               	movlw	high _ToMainHigh_MQ
  2451  0011C0  0100               	movlb	0	; () banked
  2452  0011C2  0100               	movlb	0	; () banked
  2453  0011C4  6FA8               	movwf	(recv_msg@qptr+1)& (0+255),b
  2454  0011C6  0102               	movlb	2	; () banked
  2455  0011C8  0E66               	movlw	low _ToMainHigh_MQ
  2456  0011CA  0100               	movlb	0	; () banked
  2457  0011CC  0100               	movlb	0	; () banked
  2458  0011CE  6FA7               	movwf	recv_msg@qptr& (0+255),b
  2459  0011D0  C0B9  F0A9         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  2460  0011D4  0100               	movlb	0	; () banked
  2461  0011D6  0100               	movlb	0	; () banked
  2462  0011D8  C0B6  F0AB         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  2463  0011DC  0100               	movlb	0	; () banked
  2464  0011DE  0100               	movlb	0	; () banked
  2465  0011E0  C0B5  F0AA         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  2466  0011E4  0100               	movlb	0	; () banked
  2467  0011E6  0100               	movlb	0	; () banked
  2468  0011E8  C0B8  F0AD         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  2469  0011EC  0100               	movlb	0	; () banked
  2470  0011EE  0100               	movlb	0	; () banked
  2471  0011F0  C0B7  F0AC         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  2472  0011F4  ECA4  F003         	call	_recv_msg	;wreg free
  2473  0011F8  0012               	return	
  2474  0011FA                     __end_of_ToMainHigh_recvmsg:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           prodh	equ	0xFF4
  2481                           prodl	equ	0xFF3
  2482                           intcon	equ	0xFF2
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           indf2	equ	0xFDF
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function _recv_msg *****************
  2491 ;; Defined at:
  2492 ;;		line 63 in file "../src/messages.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  2495 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2496 ;;  maxlength       1   41[BANK0 ] unsigned char 
  2497 ;;  msgtype         2   42[BANK0 ] PTR unsigned char 
  2498 ;;		 -> main@msgtype(1), 
  2499 ;;  data            2   44[BANK0 ] PTR void 
  2500 ;;		 -> main@msgbuffer(23), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  qmsg            2   51[BANK0 ] PTR struct __msg
  2503 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  2504 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2505 ;;  tlength         2   49[BANK0 ] unsigned int 
  2506 ;;  slot            1   48[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      char 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2516 ;;      Params:         0       7       0       0       0
  2517 ;;      Locals:         0       5       0       0       0
  2518 ;;      Temps:          0       2       0       0       0
  2519 ;;      Totals:         0      14       0       0       0
  2520 ;;Total ram usage:       14 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:   11
  2523 ;; This function calls:
  2524 ;;		_memcpy
  2525 ;; This function is called by:
  2526 ;;		_ToMainLow_recvmsg
  2527 ;;		_ToMainHigh_recvmsg
  2528 ;;		_FromMainLow_recvmsg
  2529 ;;		_FromMainHigh_recvmsg
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text16
  2534  000748                     __ptext16:
  2535                           	opt stack 0
  2536  000748                     _recv_msg:
  2537                           	opt stack 18
  2538                           
  2539                           ;messages.c: 64: unsigned char slot;
  2540                           ;messages.c: 68: msg *qmsg;
  2541                           ;messages.c: 69: size_t tlength;
  2542                           ;messages.c: 72: slot = qptr->cur_read_ind;
  2543                           
  2544                           ;incstack = 0
  2545  000748  0100               	movlb	0	; () banked
  2546  00074A  EE20 F065          	lfsr	2,101
  2547  00074E  0100               	movlb	0	; () banked
  2548  000750  51A7               	movf	recv_msg@qptr& (0+255),w,b
  2549  000752  26D9               	addwf	fsr2l,f,c
  2550  000754  0100               	movlb	0	; () banked
  2551  000756  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2552  000758  22DA               	addwfc	fsr2h,f,c
  2553  00075A  50DF               	movf	indf2,w,c
  2554  00075C  0100               	movlb	0	; () banked
  2555  00075E  0100               	movlb	0	; () banked
  2556  000760  6FB0               	movwf	recv_msg@slot& (0+255),b
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  2560  000762  0100               	movlb	0	; () banked
  2561  000764  0100               	movlb	0	; () banked
  2562  000766  51B0               	movf	recv_msg@slot& (0+255),w,b
  2563  000768  0D19               	mullw	25
  2564  00076A  50F3               	movf	prodl,w,c
  2565  00076C  0100               	movlb	0	; () banked
  2566  00076E  0100               	movlb	0	; () banked
  2567  000770  25A7               	addwf	recv_msg@qptr& (0+255),w,b
  2568  000772  0100               	movlb	0	; () banked
  2569  000774  0100               	movlb	0	; () banked
  2570  000776  6FB3               	movwf	recv_msg@qmsg& (0+255),b
  2571  000778  50F4               	movf	prodh,w,c
  2572  00077A  0100               	movlb	0	; () banked
  2573  00077C  0100               	movlb	0	; () banked
  2574  00077E  21A8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2575  000780  0100               	movlb	0	; () banked
  2576  000782  6FB4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;messages.c: 74: if (qmsg->full == 1) {
  2580  000784  0E01               	movlw	1
  2581  000786  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  2582  00078A  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2583  00078E  62DF               	cpfseq	indf2,c
  2584  000790  D074               	goto	l2851
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;messages.c: 76: if (qmsg->length > maxlength) {
  2588  000792  0100               	movlb	0	; () banked
  2589  000794  EE20 F001          	lfsr	2,1
  2590  000798  0100               	movlb	0	; () banked
  2591  00079A  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  2592  00079C  26D9               	addwf	fsr2l,f,c
  2593  00079E  0100               	movlb	0	; () banked
  2594  0007A0  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2595  0007A2  22DA               	addwfc	fsr2h,f,c
  2596  0007A4  50DF               	movf	indf2,w,c
  2597  0007A6  0100               	movlb	0	; () banked
  2598  0007A8  0100               	movlb	0	; () banked
  2599  0007AA  5DA9               	subwf	recv_msg@maxlength& (0+255),w,b
  2600  0007AC  B0D8               	btfsc	status,0,c
  2601  0007AE  D002               	goto	l2835
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;messages.c: 77: return (-3);
  2605  0007B0  0EFD               	movlw	253
  2606  0007B2  0012               	return	
  2607  0007B4                     l2835:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;messages.c: 78: }
  2611                           ;messages.c: 80: tlength = qmsg->length;
  2612  0007B4  0100               	movlb	0	; () banked
  2613  0007B6  EE20 F001          	lfsr	2,1
  2614  0007BA  0100               	movlb	0	; () banked
  2615  0007BC  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  2616  0007BE  26D9               	addwf	fsr2l,f,c
  2617  0007C0  0100               	movlb	0	; () banked
  2618  0007C2  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2619  0007C4  22DA               	addwfc	fsr2h,f,c
  2620  0007C6  50DF               	movf	indf2,w,c
  2621  0007C8  0100               	movlb	0	; () banked
  2622  0007CA  6FAE               	movwf	??_recv_msg& (0+255),b
  2623  0007CC  0100               	movlb	0	; () banked
  2624  0007CE  51AE               	movf	??_recv_msg& (0+255),w,b
  2625  0007D0  0100               	movlb	0	; () banked
  2626  0007D2  0100               	movlb	0	; () banked
  2627  0007D4  6FB1               	movwf	recv_msg@tlength& (0+255),b
  2628  0007D6  0100               	movlb	0	; () banked
  2629  0007D8  6BB2               	clrf	(recv_msg@tlength+1)& (0+255),b
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  2633  0007DA  0100               	movlb	0	; () banked
  2634  0007DC  0100               	movlb	0	; () banked
  2635  0007DE  C0AD  F09E         	movff	recv_msg@data+1,memcpy@d1+1
  2636  0007E2  0100               	movlb	0	; () banked
  2637  0007E4  0100               	movlb	0	; () banked
  2638  0007E6  C0AC  F09D         	movff	recv_msg@data,memcpy@d1
  2639  0007EA  0E03               	movlw	3
  2640  0007EC  0100               	movlb	0	; () banked
  2641  0007EE  0100               	movlb	0	; () banked
  2642  0007F0  25B3               	addwf	recv_msg@qmsg& (0+255),w,b
  2643  0007F2  0100               	movlb	0	; () banked
  2644  0007F4  6FAE               	movwf	??_recv_msg& (0+255),b
  2645  0007F6  0E00               	movlw	0
  2646  0007F8  0100               	movlb	0	; () banked
  2647  0007FA  0100               	movlb	0	; () banked
  2648  0007FC  21B4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2649  0007FE  0100               	movlb	0	; () banked
  2650  000800  6FAF               	movwf	(??_recv_msg+1)& (0+255),b
  2651  000802  C0AE  F09F         	movff	??_recv_msg,memcpy@s1
  2652  000806  C0AF  F0A0         	movff	??_recv_msg+1,memcpy@s1+1
  2653  00080A  C0B1  F0A1         	movff	recv_msg@tlength,memcpy@n
  2654  00080E  C0B2  F0A2         	movff	recv_msg@tlength+1,memcpy@n+1
  2655  000812  ECD6  F007         	call	_memcpy	;wreg free
  2656                           
  2657                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2658  000816  0100               	movlb	0	; () banked
  2659  000818  EE20 F065          	lfsr	2,101
  2660  00081C  0100               	movlb	0	; () banked
  2661  00081E  51A7               	movf	recv_msg@qptr& (0+255),w,b
  2662  000820  26D9               	addwf	fsr2l,f,c
  2663  000822  0100               	movlb	0	; () banked
  2664  000824  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2665  000826  22DA               	addwfc	fsr2h,f,c
  2666  000828  0100               	movlb	0	; () banked
  2667  00082A  EE10 F065          	lfsr	1,101
  2668  00082E  0100               	movlb	0	; () banked
  2669  000830  51A7               	movf	recv_msg@qptr& (0+255),w,b
  2670  000832  26E1               	addwf	fsr1l,f,c
  2671  000834  0100               	movlb	0	; () banked
  2672  000836  51A8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2673  000838  22E2               	addwfc	fsr1h,f,c
  2674  00083A  50E7               	movf	indf1,w,c
  2675  00083C  0100               	movlb	0	; () banked
  2676  00083E  6FAE               	movwf	??_recv_msg& (0+255),b
  2677  000840  0100               	movlb	0	; () banked
  2678  000842  29AE               	incf	??_recv_msg& (0+255),w,b
  2679  000844  0B03               	andlw	3
  2680  000846  6EDF               	movwf	indf2,c
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  2684  000848  0100               	movlb	0	; () banked
  2685  00084A  EE20 F002          	lfsr	2,2
  2686  00084E  0100               	movlb	0	; () banked
  2687  000850  51B3               	movf	recv_msg@qmsg& (0+255),w,b
  2688  000852  26D9               	addwf	fsr2l,f,c
  2689  000854  0100               	movlb	0	; () banked
  2690  000856  51B4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2691  000858  22DA               	addwfc	fsr2h,f,c
  2692  00085A  C0AA  FFE1         	movff	recv_msg@msgtype,fsr1l
  2693  00085E  C0AB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2694  000862  CFDF FFE7          	movff	indf2,indf1
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;messages.c: 91: qmsg->full = 0;
  2698  000866  C0B3  FFD9         	movff	recv_msg@qmsg,fsr2l
  2699  00086A  C0B4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2700  00086E  0E00               	movlw	0
  2701  000870  6EDF               	movwf	indf2,c
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;messages.c: 92: return (tlength);
  2705  000872  0100               	movlb	0	; () banked
  2706  000874  0100               	movlb	0	; () banked
  2707  000876  51B1               	movf	recv_msg@tlength& (0+255),w,b
  2708  000878  0012               	return	
  2709  00087A                     l2851:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;messages.c: 94: return (-4);
  2713  00087A  0EFC               	movlw	252
  2714  00087C  0012               	return	
  2715  00087E                     __end_of_recv_msg:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           intcon	equ	0xFF2
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           indf1	equ	0xFE7
  2727                           fsr1h	equ	0xFE2
  2728                           fsr1l	equ	0xFE1
  2729                           indf2	equ	0xFDF
  2730                           fsr2h	equ	0xFDA
  2731                           fsr2l	equ	0xFD9
  2732                           status	equ	0xFD8
  2733                           
  2734 ;; *************** function _memcpy *****************
  2735 ;; Defined at:
  2736 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  d1              2   29[BANK0 ] PTR void 
  2739 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  2740 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2741 ;;		 -> main@msgbuffer(23), 
  2742 ;;  s1              2   31[BANK0 ] PTR const void 
  2743 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  2744 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  2745 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  2746 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), 
  2747 ;;		 -> main@uc(23), 
  2748 ;;  n               2   33[BANK0 ] unsigned int 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  2751 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  2752 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  2753 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  2754 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), 
  2755 ;;		 -> main@uc(23), 
  2756 ;;  d               2   35[BANK0 ] PTR unsigned char 
  2757 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  2758 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2759 ;;		 -> main@msgbuffer(23), 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2   29[BANK0 ] PTR void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2769 ;;      Params:         0       6       0       0       0
  2770 ;;      Locals:         0       4       0       0       0
  2771 ;;      Temps:          0       0       0       0       0
  2772 ;;      Totals:         0      10       0       0       0
  2773 ;;Total ram usage:       10 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:   10
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_recv_msg
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text17
  2784  000FAC                     __ptext17:
  2785                           	opt stack 0
  2786  000FAC                     _memcpy:
  2787                           	opt stack 18
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;incstack = 0
  2791  000FAC  0100               	movlb	0	; () banked
  2792  000FAE  0100               	movlb	0	; () banked
  2793  000FB0  C0A0  F0A6         	movff	memcpy@s1+1,memcpy@s+1
  2794  000FB4  0100               	movlb	0	; () banked
  2795  000FB6  0100               	movlb	0	; () banked
  2796  000FB8  C09F  F0A5         	movff	memcpy@s1,memcpy@s
  2797  000FBC  0100               	movlb	0	; () banked
  2798  000FBE  0100               	movlb	0	; () banked
  2799  000FC0  C09E  F0A4         	movff	memcpy@d1+1,memcpy@d+1
  2800  000FC4  0100               	movlb	0	; () banked
  2801  000FC6  0100               	movlb	0	; () banked
  2802  000FC8  C09D  F0A3         	movff	memcpy@d1,memcpy@d
  2803  000FCC  D012               	goto	l2821
  2804  000FCE                     l2815:
  2805                           
  2806                           ; BSR set to: 0
  2807  000FCE  C0A5  FFD9         	movff	memcpy@s,fsr2l
  2808  000FD2  C0A6  FFDA         	movff	memcpy@s+1,fsr2h
  2809  000FD6  C0A3  FFE1         	movff	memcpy@d,fsr1l
  2810  000FDA  C0A4  FFE2         	movff	memcpy@d+1,fsr1h
  2811  000FDE  CFDF FFE7          	movff	indf2,indf1
  2812                           
  2813                           ; BSR set to: 0
  2814  000FE2  0100               	movlb	0	; () banked
  2815  000FE4  0100               	movlb	0	; () banked
  2816  000FE6  4BA5               	infsnz	memcpy@s& (0+255),f,b
  2817  000FE8  2BA6               	incf	(memcpy@s+1)& (0+255),f,b
  2818                           
  2819                           ; BSR set to: 0
  2820  000FEA  0100               	movlb	0	; () banked
  2821  000FEC  0100               	movlb	0	; () banked
  2822  000FEE  4BA3               	infsnz	memcpy@d& (0+255),f,b
  2823  000FF0  2BA4               	incf	(memcpy@d+1)& (0+255),f,b
  2824  000FF2                     l2821:
  2825                           
  2826                           ; BSR set to: 0
  2827  000FF2  0100               	movlb	0	; () banked
  2828  000FF4  0100               	movlb	0	; () banked
  2829  000FF6  07A1               	decf	memcpy@n& (0+255),f,b
  2830  000FF8  A0D8               	btfss	status,0,c
  2831  000FFA  07A2               	decf	(memcpy@n+1)& (0+255),f,b
  2832  000FFC  0100               	movlb	0	; () banked
  2833  000FFE  29A1               	incf	memcpy@n& (0+255),w,b
  2834  001000  B4D8               	btfsc	status,2,c
  2835  001002  29A2               	incf	(memcpy@n+1)& (0+255),w,b
  2836  001004  B4D8               	btfsc	status,2,c
  2837                           
  2838                           ; BSR set to: 0
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;	Return value of _memcpy is never used
  2842  001006  0012               	return	
  2843  001008  D7E2               	goto	l2815
  2844  00100A                     __end_of_memcpy:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           prodh	equ	0xFF4
  2851                           prodl	equ	0xFF3
  2852                           intcon	equ	0xFF2
  2853                           postinc0	equ	0xFEE
  2854                           wreg	equ	0xFE8
  2855                           indf1	equ	0xFE7
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           fsr2h	equ	0xFDA
  2860                           fsr2l	equ	0xFD9
  2861                           status	equ	0xFD8
  2862                           
  2863 ;; *************** function _OpenUSART *****************
  2864 ;; Defined at:
  2865 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  config          1    wreg     unsigned char 
  2868 ;;  spbrg           2   29[BANK0 ] unsigned int 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  config          1   34[BANK0 ] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;		None               void
  2873 ;; Registers used:
  2874 ;;		wreg, status,2
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2880 ;;      Params:         0       2       0       0       0
  2881 ;;      Locals:         0       1       0       0       0
  2882 ;;      Temps:          0       3       0       0       0
  2883 ;;      Totals:         0       6       0       0       0
  2884 ;;Total ram usage:        6 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:   10
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text18
  2895  000D50                     __ptext18:
  2896                           	opt stack 0
  2897  000D50                     _OpenUSART:
  2898                           	opt stack 20
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;incstack = 0
  2902                           ;OpenUSART@config stored from wreg
  2903  000D50  CFE8 F0A2          	movff	wreg,OpenUSART@config
  2904  000D54  0E00               	movlw	0
  2905  000D56  6EAC               	movwf	4012,c	;volatile
  2906  000D58  0E00               	movlw	0
  2907  000D5A  6EAB               	movwf	4011,c	;volatile
  2908  000D5C  0100               	movlb	0	; () banked
  2909  000D5E  0100               	movlb	0	; () banked
  2910  000D60  B1A2               	btfsc	OpenUSART@config& (0+255),0,b
  2911                           
  2912                           ; BSR set to: 0
  2913  000D62  88AC               	bsf	4012,4,c	;volatile
  2914                           
  2915                           ; BSR set to: 0
  2916                           
  2917                           ; BSR set to: 0
  2918  000D64  0100               	movlb	0	; () banked
  2919  000D66  0100               	movlb	0	; () banked
  2920  000D68  A3A2               	btfss	OpenUSART@config& (0+255),1,b
  2921  000D6A  D002               	goto	l2723
  2922                           
  2923                           ; BSR set to: 0
  2924  000D6C  8CAC               	bsf	4012,6,c	;volatile
  2925  000D6E  8CAB               	bsf	4011,6,c	;volatile
  2926  000D70                     l2723:
  2927                           
  2928                           ; BSR set to: 0
  2929  000D70  0100               	movlb	0	; () banked
  2930  000D72  0100               	movlb	0	; () banked
  2931  000D74  B5A2               	btfsc	OpenUSART@config& (0+255),2,b
  2932                           
  2933                           ; BSR set to: 0
  2934  000D76  8EAC               	bsf	4012,7,c	;volatile
  2935                           
  2936                           ; BSR set to: 0
  2937                           
  2938                           ; BSR set to: 0
  2939  000D78  0100               	movlb	0	; () banked
  2940  000D7A  0100               	movlb	0	; () banked
  2941  000D7C  A7A2               	btfss	OpenUSART@config& (0+255),3,b
  2942  000D7E  D002               	goto	l629
  2943                           
  2944                           ; BSR set to: 0
  2945  000D80  88AB               	bsf	4011,4,c	;volatile
  2946  000D82  D001               	goto	l2731
  2947  000D84                     l629:
  2948                           
  2949                           ; BSR set to: 0
  2950  000D84  8AAB               	bsf	4011,5,c	;volatile
  2951  000D86                     l2731:
  2952                           
  2953                           ; BSR set to: 0
  2954  000D86  0100               	movlb	0	; () banked
  2955  000D88  0100               	movlb	0	; () banked
  2956  000D8A  B9A2               	btfsc	OpenUSART@config& (0+255),4,b
  2957                           
  2958                           ; BSR set to: 0
  2959  000D8C  84AC               	bsf	4012,2,c	;volatile
  2960                           
  2961                           ; BSR set to: 0
  2962  000D8E  989E               	bcf	3998,4,c	;volatile
  2963                           
  2964                           ; BSR set to: 0
  2965  000D90  0100               	movlb	0	; () banked
  2966  000D92  0100               	movlb	0	; () banked
  2967  000D94  BBA2               	btfsc	OpenUSART@config& (0+255),5,b
  2968                           
  2969                           ; BSR set to: 0
  2970  000D96  86AB               	bsf	4011,3,c	;volatile
  2971                           
  2972                           ; BSR set to: 0
  2973                           
  2974                           ; BSR set to: 0
  2975  000D98  0100               	movlb	0	; () banked
  2976  000D9A  0100               	movlb	0	; () banked
  2977  000D9C  ADA2               	btfss	OpenUSART@config& (0+255),6,b
  2978  000D9E  D002               	goto	l633
  2979                           
  2980                           ; BSR set to: 0
  2981  000DA0  8A9D               	bsf	3997,5,c	;volatile
  2982  000DA2  D001               	goto	l634
  2983  000DA4                     l633:
  2984                           
  2985                           ; BSR set to: 0
  2986  000DA4  9A9D               	bcf	3997,5,c	;volatile
  2987  000DA6                     l634:
  2988                           
  2989                           ; BSR set to: 0
  2990  000DA6  9A9E               	bcf	3998,5,c	;volatile
  2991                           
  2992                           ; BSR set to: 0
  2993  000DA8  0100               	movlb	0	; () banked
  2994  000DAA  0100               	movlb	0	; () banked
  2995  000DAC  AFA2               	btfss	OpenUSART@config& (0+255),7,b
  2996  000DAE  D002               	goto	l635
  2997                           
  2998                           ; BSR set to: 0
  2999  000DB0  889D               	bsf	3997,4,c	;volatile
  3000  000DB2  D001               	goto	l636
  3001  000DB4                     l635:
  3002                           
  3003                           ; BSR set to: 0
  3004  000DB4  989D               	bcf	3997,4,c	;volatile
  3005  000DB6                     l636:
  3006                           
  3007                           ; BSR set to: 0
  3008  000DB6  C09D  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3009                           
  3010                           ; BSR set to: 0
  3011  000DBA  0100               	movlb	0	; () banked
  3012  000DBC  C09E  F09F         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3013  000DC0  C09F  F0A0         	movff	??_OpenUSART,??_OpenUSART+1
  3014  000DC4  0100               	movlb	0	; () banked
  3015  000DC6  6BA1               	clrf	(??_OpenUSART+2)& (0+255),b
  3016  000DC8  0100               	movlb	0	; () banked
  3017  000DCA  51A0               	movf	(??_OpenUSART+1)& (0+255),w,b
  3018  000DCC  6EB0               	movwf	4016,c	;volatile
  3019                           
  3020                           ; BSR set to: 0
  3021  000DCE  8AAC               	bsf	4012,5,c	;volatile
  3022                           
  3023                           ; BSR set to: 0
  3024  000DD0  8EAB               	bsf	4011,7,c	;volatile
  3025                           
  3026                           ; BSR set to: 0
  3027  000DD2  9C94               	bcf	3988,6,c	;volatile
  3028                           
  3029                           ; BSR set to: 0
  3030  000DD4  8E94               	bsf	3988,7,c	;volatile
  3031                           
  3032                           ; BSR set to: 0
  3033  000DD6  A8AC               	btfss	4012,4,c	;volatile
  3034  000DD8  0012               	return	
  3035                           
  3036                           ; BSR set to: 0
  3037  000DDA  BEAC               	btfsc	4012,7,c	;volatile
  3038  000DDC  0012               	return	
  3039                           
  3040                           ; BSR set to: 0
  3041  000DDE  8C94               	bsf	3988,6,c	;volatile
  3042  000DE0  0012               	return	
  3043  000DE2                     __end_of_OpenUSART:
  3044                           	opt stack 0
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           prodh	equ	0xFF4
  3050                           prodl	equ	0xFF3
  3051                           intcon	equ	0xFF2
  3052                           postinc0	equ	0xFEE
  3053                           wreg	equ	0xFE8
  3054                           indf1	equ	0xFE7
  3055                           fsr1h	equ	0xFE2
  3056                           fsr1l	equ	0xFE1
  3057                           indf2	equ	0xFDF
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _OpenTimer0 *****************
  3063 ;; Defined at:
  3064 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  config          1    wreg     unsigned char 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  config          1   29[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;		None               void
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3078 ;;      Params:         0       0       0       0       0
  3079 ;;      Locals:         0       1       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         0       1       0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:   10
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text19
  3093  001344                     __ptext19:
  3094                           	opt stack 0
  3095  001344                     _OpenTimer0:
  3096                           	opt stack 20
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;incstack = 0
  3100                           ;OpenTimer0@config stored from wreg
  3101  001344  CFE8 F09D          	movff	wreg,OpenTimer0@config
  3102  001348  0100               	movlb	0	; () banked
  3103  00134A  0100               	movlb	0	; () banked
  3104  00134C  519D               	movf	OpenTimer0@config& (0+255),w,b
  3105  00134E  0B7F               	andlw	127
  3106  001350  6ED5               	movwf	4053,c	;volatile
  3107                           
  3108                           ; BSR set to: 0
  3109  001352  0E00               	movlw	0
  3110  001354  6ED7               	movwf	4055,c	;volatile
  3111                           
  3112                           ; BSR set to: 0
  3113  001356  0E00               	movlw	0
  3114  001358  6ED6               	movwf	4054,c	;volatile
  3115                           
  3116                           ; BSR set to: 0
  3117  00135A  94F2               	bcf	intcon,2,c	;volatile
  3118                           
  3119                           ; BSR set to: 0
  3120  00135C  0100               	movlb	0	; () banked
  3121  00135E  0100               	movlb	0	; () banked
  3122  001360  AF9D               	btfss	OpenTimer0@config& (0+255),7,b
  3123  001362  D002               	goto	l580
  3124                           
  3125                           ; BSR set to: 0
  3126  001364  8AF2               	bsf	intcon,5,c	;volatile
  3127  001366  D001               	goto	l581
  3128  001368                     l580:
  3129                           
  3130                           ; BSR set to: 0
  3131  001368  9AF2               	bcf	intcon,5,c	;volatile
  3132  00136A                     l581:
  3133                           
  3134                           ; BSR set to: 0
  3135  00136A  8ED5               	bsf	4053,7,c	;volatile
  3136                           
  3137                           ; BSR set to: 0
  3138  00136C  0012               	return	
  3139  00136E                     __end_of_OpenTimer0:
  3140                           	opt stack 0
  3141                           tblptru	equ	0xFF8
  3142                           tblptrh	equ	0xFF7
  3143                           tblptrl	equ	0xFF6
  3144                           tablat	equ	0xFF5
  3145                           prodh	equ	0xFF4
  3146                           prodl	equ	0xFF3
  3147                           intcon	equ	0xFF2
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           indf1	equ	0xFE7
  3151                           fsr1h	equ	0xFE2
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           fsr2h	equ	0xFDA
  3155                           fsr2l	equ	0xFD9
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _InterruptHandlerLow *****************
  3159 ;; Defined at:
  3160 ;;		line 131 in file "../src/interrupts.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;		None               void
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3174 ;;      Params:         0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:         17       0       0       0       0
  3177 ;;      Totals:        17       0       0       0       0
  3178 ;;Total ram usage:       17 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    9
  3181 ;; This function calls:
  3182 ;;		_timer1_int_handler
  3183 ;;		_uart_recv_int_handler
  3184 ;; This function is called by:
  3185 ;;		Interrupt level 1
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	intcodelo
  3190  000018                     __pintcodelo:
  3191                           	opt stack 0
  3192  000018                     _InterruptHandlerLow:
  3193                           	opt stack 17
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;incstack = 0
  3197  000018  CFD8 F01F          	movff	status,??_InterruptHandlerLow
  3198  00001C  CFE8 F020          	movff	wreg,??_InterruptHandlerLow+1
  3199  000020  CFE0 F021          	movff	bsr,??_InterruptHandlerLow+2
  3200  000024  CFFA F022          	movff	pclath,??_InterruptHandlerLow+3
  3201  000028  CFFB F023          	movff	pclatu,??_InterruptHandlerLow+4
  3202  00002C  CFE9 F024          	movff	fsr0l,??_InterruptHandlerLow+5
  3203  000030  CFEA F025          	movff	fsr0h,??_InterruptHandlerLow+6
  3204  000034  CFE1 F026          	movff	fsr1l,??_InterruptHandlerLow+7
  3205  000038  CFE2 F027          	movff	fsr1h,??_InterruptHandlerLow+8
  3206  00003C  CFD9 F028          	movff	fsr2l,??_InterruptHandlerLow+9
  3207  000040  CFDA F029          	movff	fsr2h,??_InterruptHandlerLow+10
  3208  000044  CFF3 F02A          	movff	prodl,??_InterruptHandlerLow+11
  3209  000048  CFF4 F02B          	movff	prodh,??_InterruptHandlerLow+12
  3210  00004C  CFF6 F02C          	movff	tblptrl,??_InterruptHandlerLow+13
  3211  000050  CFF7 F02D          	movff	tblptrh,??_InterruptHandlerLow+14
  3212  000054  CFF8 F02E          	movff	tblptru,??_InterruptHandlerLow+15
  3213  000058  CFF5 F02F          	movff	tablat,??_InterruptHandlerLow+16
  3214                           
  3215                           ;interrupts.c: 133: if (PIR1bits.TMR1IF) {
  3216  00005C  A09E               	btfss	3998,0,c	;volatile
  3217  00005E  D003               	goto	i1l3423
  3218                           
  3219                           ;interrupts.c: 134: PIR1bits.TMR1IF = 0;
  3220  000060  909E               	bcf	3998,0,c	;volatile
  3221                           
  3222                           ;interrupts.c: 135: timer1_int_handler();
  3223  000062  EC73  F009         	call	_timer1_int_handler	;wreg free
  3224  000066                     i1l3423:
  3225                           
  3226                           ;interrupts.c: 136: }
  3227                           ;interrupts.c: 139: if (PIR1bits.RCIF) {
  3228  000066  AA9E               	btfss	3998,5,c	;volatile
  3229  000068  D003               	goto	i1l58
  3230                           
  3231                           ;interrupts.c: 140: PIR1bits.RCIF = 0;
  3232  00006A  9A9E               	bcf	3998,5,c	;volatile
  3233                           
  3234                           ;interrupts.c: 141: uart_recv_int_handler();
  3235  00006C  ECBA  F004         	call	_uart_recv_int_handler	;wreg free
  3236  000070                     i1l58:
  3237  000070  C02F  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  3238  000074  C02E  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  3239  000078  C02D  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  3240  00007C  C02C  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  3241  000080  C02B  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  3242  000084  C02A  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  3243  000088  C029  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  3244  00008C  C028  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  3245  000090  C027  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  3246  000094  C026  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  3247  000098  C025  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  3248  00009C  C024  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  3249  0000A0  C023  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  3250  0000A4  C022  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  3251  0000A8  C021  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  3252  0000AC  C020  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3253  0000B0  C01F  FFD8         	movff	??_InterruptHandlerLow,status
  3254  0000B4  0010               	retfie	
  3255  0000B6                     __end_of_InterruptHandlerLow:
  3256                           	opt stack 0
  3257                           pclatu	equ	0xFFB
  3258                           pclath	equ	0xFFA
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           fsr0h	equ	0xFEA
  3268                           fsr0l	equ	0xFE9
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           fsr1h	equ	0xFE2
  3272                           fsr1l	equ	0xFE1
  3273                           bsr	equ	0xFE0
  3274                           indf2	equ	0xFDF
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _uart_recv_int_handler *****************
  3280 ;; Defined at:
  3281 ;;		line 12 in file "../src/my_uart.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3295 ;;      Params:         0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0
  3297 ;;      Temps:          4       0       0       0       0
  3298 ;;      Totals:         4       0       0       0       0
  3299 ;;Total ram usage:        4 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    8
  3302 ;; This function calls:
  3303 ;;		_ReadUSART
  3304 ;;		_ToMainLow_sendmsg
  3305 ;;		_flipDBG
  3306 ;; This function is called by:
  3307 ;;		_InterruptHandlerLow
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text21
  3312  000974                     __ptext21:
  3313                           	opt stack 0
  3314  000974                     _uart_recv_int_handler:
  3315                           	opt stack 17
  3316                           
  3317                           ;my_uart.c: 21: if ((PIR1bits.RCIF)) {
  3318                           
  3319                           ;incstack = 0
  3320  000974  AA9E               	btfss	3998,5,c	;volatile
  3321  000976  D067               	goto	i1l3411
  3322                           
  3323                           ;my_uart.c: 23: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  3324  000978  EE20 F016          	lfsr	2,22
  3325  00097C  504D               	movf	_uc_ptr,w,c
  3326  00097E  26D9               	addwf	fsr2l,f,c
  3327  000980  504E               	movf	_uc_ptr+1,w,c
  3328  000982  22DA               	addwfc	fsr2h,f,c
  3329  000984  50DF               	movf	indf2,w,c
  3330  000986  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3331  000988  501B               	movf	??_uart_recv_int_handler,w,c
  3332  00098A  0D01               	mullw	1
  3333  00098C  50F3               	movf	prodl,w,c
  3334  00098E  244D               	addwf	_uc_ptr,w,c
  3335  000990  6ED9               	movwf	fsr2l,c
  3336  000992  50F4               	movf	prodh,w,c
  3337  000994  204E               	addwfc	_uc_ptr+1,w,c
  3338  000996  6EDA               	movwf	fsr2h,c
  3339  000998  ECF1  F009         	call	_ReadUSART	;wreg free
  3340  00099C  6EDF               	movwf	indf2,c
  3341                           
  3342                           ;my_uart.c: 27: uc_ptr->buflen++;
  3343  00099E  EE20 F016          	lfsr	2,22
  3344  0009A2  504D               	movf	_uc_ptr,w,c
  3345  0009A4  26D9               	addwf	fsr2l,f,c
  3346  0009A6  504E               	movf	_uc_ptr+1,w,c
  3347  0009A8  22DA               	addwfc	fsr2h,f,c
  3348  0009AA  2ADF               	incf	indf2,f,c
  3349                           
  3350                           ;my_uart.c: 28: flipDBG(0);
  3351  0009AC  0E00               	movlw	0
  3352  0009AE  ECFC  F005         	call	_flipDBG
  3353                           
  3354                           ;my_uart.c: 36: if(uc_ptr->buflen == 2)
  3355  0009B2  EE20 F016          	lfsr	2,22
  3356  0009B6  504D               	movf	_uc_ptr,w,c
  3357  0009B8  26D9               	addwf	fsr2l,f,c
  3358  0009BA  504E               	movf	_uc_ptr+1,w,c
  3359  0009BC  22DA               	addwfc	fsr2h,f,c
  3360  0009BE  0E02               	movlw	2
  3361  0009C0  62DF               	cpfseq	indf2,c
  3362  0009C2  D01A               	goto	i1l3401
  3363                           
  3364                           ;my_uart.c: 37: COMMAND_LEN = uc_ptr->buffer[uc_ptr->buflen - 1] & 0xF;
  3365  0009C4  0EFF               	movlw	255
  3366  0009C6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3367  0009C8  0EFF               	movlw	255
  3368  0009CA  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  3369  0009CC  EE20 F016          	lfsr	2,22
  3370  0009D0  504D               	movf	_uc_ptr,w,c
  3371  0009D2  26D9               	addwf	fsr2l,f,c
  3372  0009D4  504E               	movf	_uc_ptr+1,w,c
  3373  0009D6  22DA               	addwfc	fsr2h,f,c
  3374  0009D8  50DF               	movf	indf2,w,c
  3375  0009DA  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  3376  0009DC  6A1E               	clrf	(??_uart_recv_int_handler+3)& (0+255),c
  3377  0009DE  501B               	movf	??_uart_recv_int_handler,w,c
  3378  0009E0  261D               	addwf	??_uart_recv_int_handler+2,f,c
  3379  0009E2  501C               	movf	??_uart_recv_int_handler+1,w,c
  3380  0009E4  221E               	addwfc	??_uart_recv_int_handler+3,f,c
  3381  0009E6  501D               	movf	??_uart_recv_int_handler+2,w,c
  3382  0009E8  244D               	addwf	_uc_ptr,w,c
  3383  0009EA  6ED9               	movwf	fsr2l,c
  3384  0009EC  501E               	movf	??_uart_recv_int_handler+3,w,c
  3385  0009EE  204E               	addwfc	_uc_ptr+1,w,c
  3386  0009F0  6EDA               	movwf	fsr2h,c
  3387  0009F2  50DF               	movf	indf2,w,c
  3388  0009F4  0B0F               	andlw	15
  3389  0009F6  6E47               	movwf	_COMMAND_LEN,c
  3390  0009F8                     i1l3401:
  3391                           
  3392                           ;my_uart.c: 39: if(COMMAND_REC < COMMAND_LEN)
  3393  0009F8  5047               	movf	_COMMAND_LEN,w,c
  3394  0009FA  5C48               	subwf	_COMMAND_REC,w,c
  3395  0009FC  B0D8               	btfsc	status,0,c
  3396  0009FE  D002               	goto	i1l3405
  3397                           
  3398                           ;my_uart.c: 40: COMMAND_REC++;
  3399  000A00  2A48               	incf	_COMMAND_REC,f,c
  3400  000A02  D021               	goto	i1l3411
  3401  000A04                     i1l3405:
  3402                           
  3403                           ;my_uart.c: 41: else {
  3404                           ;my_uart.c: 42: COMMAND_LEN = 0;
  3405  000A04  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3406  000A06  0E00               	movlw	0
  3407  000A08  6E47               	movwf	_COMMAND_LEN,c
  3408  000A0A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  3409                           
  3410                           ;my_uart.c: 43: COMMAND_REC = 0;
  3411  000A0C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3412  000A0E  0E00               	movlw	0
  3413  000A10  6E48               	movwf	_COMMAND_REC,c
  3414  000A12  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  3415                           
  3416                           ;my_uart.c: 44: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  3417  000A14  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3418  000A16  0E1F               	movlw	31
  3419  000A18  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3420  000A1A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  3421  000A1C  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  3422  000A20  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  3423  000A24  EE20 F016          	lfsr	2,22
  3424  000A28  504D               	movf	_uc_ptr,w,c
  3425  000A2A  26D9               	addwf	fsr2l,f,c
  3426  000A2C  504E               	movf	_uc_ptr+1,w,c
  3427  000A2E  22DA               	addwfc	fsr2h,f,c
  3428  000A30  50DF               	movf	indf2,w,c
  3429  000A32  ECCC  F009         	call	_ToMainLow_sendmsg
  3430                           
  3431                           ;my_uart.c: 45: uc_ptr->buflen = 0;
  3432  000A36  EE20 F016          	lfsr	2,22
  3433  000A3A  504D               	movf	_uc_ptr,w,c
  3434  000A3C  26D9               	addwf	fsr2l,f,c
  3435  000A3E  504E               	movf	_uc_ptr+1,w,c
  3436  000A40  22DA               	addwfc	fsr2h,f,c
  3437  000A42  0E00               	movlw	0
  3438  000A44  6EDF               	movwf	indf2,c
  3439  000A46                     i1l3411:
  3440                           
  3441                           ;my_uart.c: 46: }
  3442                           ;my_uart.c: 48: }
  3443                           ;my_uart.c: 55: if (USART_Status.OVERRUN_ERROR == 1) {
  3444  000A46  A64B               	btfss	_USART_Status,3,c
  3445  000A48  0012               	return	
  3446                           
  3447                           ;my_uart.c: 60: RCSTAbits.CREN = 0;
  3448  000A4A  98AB               	bcf	4011,4,c	;volatile
  3449                           
  3450                           ;my_uart.c: 61: RCSTAbits.CREN = 1;
  3451  000A4C  88AB               	bsf	4011,4,c	;volatile
  3452                           
  3453                           ;my_uart.c: 62: ToMainLow_sendmsg(0, 30, (void *) 0);
  3454  000A4E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  3455  000A50  0E1E               	movlw	30
  3456  000A52  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3457  000A54  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  3458  000A56  0E00               	movlw	0
  3459  000A58  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  3460  000A5A  0E00               	movlw	0
  3461  000A5C  6E18               	movwf	ToMainLow_sendmsg@data,c
  3462  000A5E  0E00               	movlw	0
  3463  000A60  ECCC  F009         	call	_ToMainLow_sendmsg
  3464  000A64  0012               	return	
  3465  000A66                     __end_of_uart_recv_int_handler:
  3466                           	opt stack 0
  3467                           pclatu	equ	0xFFB
  3468                           pclath	equ	0xFFA
  3469                           tblptru	equ	0xFF8
  3470                           tblptrh	equ	0xFF7
  3471                           tblptrl	equ	0xFF6
  3472                           tablat	equ	0xFF5
  3473                           prodh	equ	0xFF4
  3474                           prodl	equ	0xFF3
  3475                           intcon	equ	0xFF2
  3476                           postinc0	equ	0xFEE
  3477                           fsr0h	equ	0xFEA
  3478                           fsr0l	equ	0xFE9
  3479                           wreg	equ	0xFE8
  3480                           indf1	equ	0xFE7
  3481                           fsr1h	equ	0xFE2
  3482                           fsr1l	equ	0xFE1
  3483                           bsr	equ	0xFE0
  3484                           indf2	equ	0xFDF
  3485                           fsr2h	equ	0xFDA
  3486                           fsr2l	equ	0xFD9
  3487                           status	equ	0xFD8
  3488                           
  3489 ;; *************** function _flipDBG *****************
  3490 ;; Defined at:
  3491 ;;		line 47 in file "../src/debug.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  b               1    wreg     unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  b               1    1[COMRAM] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;		None               void
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         1       0       0       0       0
  3507 ;;      Temps:          1       0       0       0       0
  3508 ;;      Totals:         2       0       0       0       0
  3509 ;;Total ram usage:        2 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    5
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_uart_recv_int_handler
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text22
  3520  000BF8                     __ptext22:
  3521                           	opt stack 0
  3522  000BF8                     _flipDBG:
  3523                           	opt stack 19
  3524                           
  3525                           ;incstack = 0
  3526                           ;flipDBG@b stored from wreg
  3527  000BF8  CFE8 F002          	movff	wreg,flipDBG@b
  3528                           
  3529                           ;debug.c: 48: switch(b) {
  3530  000BFC  D043               	goto	i1l3161
  3531  000BFE                     i1l3149:
  3532                           
  3533                           ;debug.c: 50: LATBbits.LATB0 = !LATBbits.LATB0;
  3534  000BFE  B08A               	btfsc	3978,0,c	;volatile
  3535  000C00  D002               	goto	i1u210_20
  3536  000C02  0E01               	movlw	1
  3537  000C04  D001               	goto	i1u210_26
  3538  000C06                     i1u210_20:
  3539  000C06  0E00               	movlw	0
  3540  000C08                     i1u210_26:
  3541  000C08  6E01               	movwf	??_flipDBG& (0+255),c
  3542  000C0A  508A               	movf	3978,w,c	;volatile
  3543  000C0C  1801               	xorwf	??_flipDBG,w,c
  3544  000C0E  0BFE               	andlw	-2
  3545  000C10  1801               	xorwf	??_flipDBG,w,c
  3546  000C12  6E8A               	movwf	3978,c	;volatile
  3547                           
  3548                           ;debug.c: 51: break;
  3549  000C14  0012               	return	
  3550  000C16                     i1l3151:
  3551                           
  3552                           ;debug.c: 53: LATBbits.LATB1 = !LATBbits.LATB1;
  3553  000C16  B28A               	btfsc	3978,1,c	;volatile
  3554  000C18  D002               	goto	i1u211_20
  3555  000C1A  0E01               	movlw	1
  3556  000C1C  D001               	goto	i1u211_26
  3557  000C1E                     i1u211_20:
  3558  000C1E  0E00               	movlw	0
  3559  000C20                     i1u211_26:
  3560  000C20  6E01               	movwf	??_flipDBG& (0+255),c
  3561  000C22  4601               	rlncf	??_flipDBG,f,c
  3562  000C24  508A               	movf	3978,w,c	;volatile
  3563  000C26  1801               	xorwf	??_flipDBG,w,c
  3564  000C28  0BFD               	andlw	-3
  3565  000C2A  1801               	xorwf	??_flipDBG,w,c
  3566  000C2C  6E8A               	movwf	3978,c	;volatile
  3567                           
  3568                           ;debug.c: 54: break;
  3569  000C2E  0012               	return	
  3570  000C30                     i1l3153:
  3571                           
  3572                           ;debug.c: 56: LATBbits.LATB2 = !LATBbits.LATB2;
  3573  000C30  B48A               	btfsc	3978,2,c	;volatile
  3574  000C32  D002               	goto	i1u212_20
  3575  000C34  0E01               	movlw	1
  3576  000C36  D001               	goto	i1u212_26
  3577  000C38                     i1u212_20:
  3578  000C38  0E00               	movlw	0
  3579  000C3A                     i1u212_26:
  3580  000C3A  6E01               	movwf	??_flipDBG& (0+255),c
  3581  000C3C  4601               	rlncf	??_flipDBG,f,c
  3582  000C3E  4601               	rlncf	??_flipDBG,f,c
  3583  000C40  508A               	movf	3978,w,c	;volatile
  3584  000C42  1801               	xorwf	??_flipDBG,w,c
  3585  000C44  0BFB               	andlw	-5
  3586  000C46  1801               	xorwf	??_flipDBG,w,c
  3587  000C48  6E8A               	movwf	3978,c	;volatile
  3588                           
  3589                           ;debug.c: 57: break;
  3590  000C4A  0012               	return	
  3591  000C4C                     i1l3155:
  3592                           
  3593                           ;debug.c: 59: LATBbits.LATB3 = !LATBbits.LATB3;
  3594  000C4C  B68A               	btfsc	3978,3,c	;volatile
  3595  000C4E  D002               	goto	i1u213_20
  3596  000C50  0E01               	movlw	1
  3597  000C52  D001               	goto	i1u213_26
  3598  000C54                     i1u213_20:
  3599  000C54  0E00               	movlw	0
  3600  000C56                     i1u213_26:
  3601  000C56  6E01               	movwf	??_flipDBG& (0+255),c
  3602  000C58  4601               	rlncf	??_flipDBG,f,c
  3603  000C5A  4601               	rlncf	??_flipDBG,f,c
  3604  000C5C  4601               	rlncf	??_flipDBG,f,c
  3605  000C5E  508A               	movf	3978,w,c	;volatile
  3606  000C60  1801               	xorwf	??_flipDBG,w,c
  3607  000C62  0BF7               	andlw	-9
  3608  000C64  1801               	xorwf	??_flipDBG,w,c
  3609  000C66  6E8A               	movwf	3978,c	;volatile
  3610                           
  3611                           ;debug.c: 60: break;
  3612  000C68  0012               	return	
  3613  000C6A                     i1l3157:
  3614                           
  3615                           ;debug.c: 62: LATBbits.LATB4 = !LATBbits.LATB4;
  3616  000C6A  B88A               	btfsc	3978,4,c	;volatile
  3617  000C6C  D002               	goto	i1u214_20
  3618  000C6E  0E01               	movlw	1
  3619  000C70  D001               	goto	i1u214_26
  3620  000C72                     i1u214_20:
  3621  000C72  0E00               	movlw	0
  3622  000C74                     i1u214_26:
  3623  000C74  6E01               	movwf	??_flipDBG& (0+255),c
  3624  000C76  3A01               	swapf	??_flipDBG,f,c
  3625  000C78  508A               	movf	3978,w,c	;volatile
  3626  000C7A  1801               	xorwf	??_flipDBG,w,c
  3627  000C7C  0BEF               	andlw	-17
  3628  000C7E  1801               	xorwf	??_flipDBG,w,c
  3629  000C80  6E8A               	movwf	3978,c	;volatile
  3630                           
  3631                           ;debug.c: 63: break;
  3632  000C82  0012               	return	
  3633  000C84                     i1l3161:
  3634  000C84  5002               	movf	flipDBG@b,w,c
  3635                           
  3636                           ; Switch size 1, requested type "space"
  3637                           ; Number of cases is 5, Range of values is 0 to 4
  3638                           ; switch strategies available:
  3639                           ; Name         Instructions Cycles
  3640                           ; simple_byte           16     9 (average)
  3641                           ;	Chosen strategy is simple_byte
  3642  000C86  0A00               	xorlw	0	; case 0
  3643  000C88  B4D8               	btfsc	status,2,c
  3644  000C8A  D7B9               	goto	i1l3149
  3645  000C8C  0A01               	xorlw	1	; case 1
  3646  000C8E  B4D8               	btfsc	status,2,c
  3647  000C90  D7C2               	goto	i1l3151
  3648  000C92  0A03               	xorlw	3	; case 2
  3649  000C94  B4D8               	btfsc	status,2,c
  3650  000C96  D7CC               	goto	i1l3153
  3651  000C98  0A01               	xorlw	1	; case 3
  3652  000C9A  B4D8               	btfsc	status,2,c
  3653  000C9C  D7D7               	goto	i1l3155
  3654  000C9E  0A07               	xorlw	7	; case 4
  3655  000CA0  A4D8               	btfss	status,2,c
  3656  000CA2  0012               	return	
  3657  000CA4  D7E2               	goto	i1l3157
  3658  000CA6                     __end_of_flipDBG:
  3659                           	opt stack 0
  3660                           pclatu	equ	0xFFB
  3661                           pclath	equ	0xFFA
  3662                           tblptru	equ	0xFF8
  3663                           tblptrh	equ	0xFF7
  3664                           tblptrl	equ	0xFF6
  3665                           tablat	equ	0xFF5
  3666                           prodh	equ	0xFF4
  3667                           prodl	equ	0xFF3
  3668                           intcon	equ	0xFF2
  3669                           postinc0	equ	0xFEE
  3670                           fsr0h	equ	0xFEA
  3671                           fsr0l	equ	0xFE9
  3672                           wreg	equ	0xFE8
  3673                           indf1	equ	0xFE7
  3674                           fsr1h	equ	0xFE2
  3675                           fsr1l	equ	0xFE1
  3676                           bsr	equ	0xFE0
  3677                           indf2	equ	0xFDF
  3678                           fsr2h	equ	0xFDA
  3679                           fsr2l	equ	0xFD9
  3680                           status	equ	0xFD8
  3681                           
  3682 ;; *************** function _ReadUSART *****************
  3683 ;; Defined at:
  3684 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  data            1    0[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      unsigned char 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         1       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0
  3701 ;;      Totals:         1       0       0       0       0
  3702 ;;Total ram usage:        1 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    5
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_uart_recv_int_handler
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text23
  3713  0013E2                     __ptext23:
  3714                           	opt stack 0
  3715  0013E2                     _ReadUSART:
  3716                           	opt stack 19
  3717                           
  3718                           ;incstack = 0
  3719  0013E2  0EF2               	movlw	242
  3720  0013E4  164B               	andwf	_USART_Status,f,c
  3721  0013E6  ACAB               	btfss	4011,6,c	;volatile
  3722  0013E8  D003               	goto	i1l647
  3723  0013EA  904B               	bcf	_USART_Status,0,c
  3724  0013EC  B0AB               	btfsc	4011,0,c	;volatile
  3725  0013EE  804B               	bsf	_USART_Status,0,c
  3726  0013F0                     i1l647:
  3727  0013F0  B4AB               	btfsc	4011,2,c	;volatile
  3728  0013F2  844B               	bsf	_USART_Status,2,c
  3729  0013F4  B2AB               	btfsc	4011,1,c	;volatile
  3730  0013F6  864B               	bsf	_USART_Status,3,c
  3731  0013F8  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  3732  0013FC  5001               	movf	ReadUSART@data,w,c
  3733  0013FE  0012               	return	
  3734  001400                     __end_of_ReadUSART:
  3735                           	opt stack 0
  3736                           pclatu	equ	0xFFB
  3737                           pclath	equ	0xFFA
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           intcon	equ	0xFF2
  3745                           postinc0	equ	0xFEE
  3746                           fsr0h	equ	0xFEA
  3747                           fsr0l	equ	0xFE9
  3748                           wreg	equ	0xFE8
  3749                           indf1	equ	0xFE7
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           bsr	equ	0xFE0
  3753                           indf2	equ	0xFDF
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _timer1_int_handler *****************
  3759 ;; Defined at:
  3760 ;;		line 42 in file "../src/user_interrupts.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  result          2   27[COMRAM] unsigned int 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;		None               void
  3767 ;; Registers used:
  3768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3774 ;;      Params:         0       0       0       0       0
  3775 ;;      Locals:         2       0       0       0       0
  3776 ;;      Temps:          1       0       0       0       0
  3777 ;;      Totals:         3       0       0       0       0
  3778 ;;Total ram usage:        3 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    8
  3781 ;; This function calls:
  3782 ;;		_ReadTimer1
  3783 ;;		_ToMainLow_sendmsg
  3784 ;;		_WriteTimer1
  3785 ;; This function is called by:
  3786 ;;		_InterruptHandlerLow
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text24
  3791  0012E6                     __ptext24:
  3792                           	opt stack 0
  3793  0012E6                     _timer1_int_handler:
  3794                           	opt stack 17
  3795                           
  3796                           ;user_interrupts.c: 43: unsigned int result;
  3797                           ;user_interrupts.c: 50: result = ReadTimer1();
  3798                           
  3799                           ;incstack = 0
  3800  0012E6  EC27  F00A         	call	_ReadTimer1	;wreg free
  3801  0012EA  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  3802  0012EE  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  3803                           
  3804                           ;user_interrupts.c: 51: ToMainLow_sendmsg(0, 11, (void *) 0);
  3805  0012F2  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  3806  0012F4  0E0B               	movlw	11
  3807  0012F6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  3808  0012F8  501B               	movf	??_timer1_int_handler& (0+255),w,c
  3809  0012FA  0E00               	movlw	0
  3810  0012FC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  3811  0012FE  0E00               	movlw	0
  3812  001300  6E18               	movwf	ToMainLow_sendmsg@data,c
  3813  001302  0E00               	movlw	0
  3814  001304  ECCC  F009         	call	_ToMainLow_sendmsg
  3815                           
  3816                           ;user_interrupts.c: 54: WriteTimer1(0);
  3817  001308  0E00               	movlw	0
  3818  00130A  6E02               	movwf	WriteTimer1@timer1+1,c
  3819  00130C  0E00               	movlw	0
  3820  00130E  6E01               	movwf	WriteTimer1@timer1,c
  3821  001310  EC1E  F00A         	call	_WriteTimer1	;wreg free
  3822  001314  0012               	return	
  3823  001316                     __end_of_timer1_int_handler:
  3824                           	opt stack 0
  3825                           pclatu	equ	0xFFB
  3826                           pclath	equ	0xFFA
  3827                           tblptru	equ	0xFF8
  3828                           tblptrh	equ	0xFF7
  3829                           tblptrl	equ	0xFF6
  3830                           tablat	equ	0xFF5
  3831                           prodh	equ	0xFF4
  3832                           prodl	equ	0xFF3
  3833                           intcon	equ	0xFF2
  3834                           postinc0	equ	0xFEE
  3835                           fsr0h	equ	0xFEA
  3836                           fsr0l	equ	0xFE9
  3837                           wreg	equ	0xFE8
  3838                           indf1	equ	0xFE7
  3839                           fsr1h	equ	0xFE2
  3840                           fsr1l	equ	0xFE1
  3841                           bsr	equ	0xFE0
  3842                           indf2	equ	0xFDF
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8
  3846                           
  3847 ;; *************** function _WriteTimer1 *****************
  3848 ;; Defined at:
  3849 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  timer1          2    0[COMRAM] unsigned int 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  timer           2    2[COMRAM] struct Timers
  3854 ;; Return value:  Size  Location     Type
  3855 ;;		None               void
  3856 ;; Registers used:
  3857 ;;		None
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3863 ;;      Params:         2       0       0       0       0
  3864 ;;      Locals:         2       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0
  3866 ;;      Totals:         4       0       0       0       0
  3867 ;;Total ram usage:        4 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    5
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_timer1_int_handler
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text25
  3878  00143C                     __ptext25:
  3879                           	opt stack 0
  3880  00143C                     _WriteTimer1:
  3881                           	opt stack 19
  3882                           
  3883                           ;incstack = 0
  3884  00143C  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3885  001440  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3886  001444  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3887  001448  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3888  00144C  0012               	return	
  3889  00144E                     __end_of_WriteTimer1:
  3890                           	opt stack 0
  3891                           pclatu	equ	0xFFB
  3892                           pclath	equ	0xFFA
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           postinc0	equ	0xFEE
  3901                           fsr0h	equ	0xFEA
  3902                           fsr0l	equ	0xFE9
  3903                           wreg	equ	0xFE8
  3904                           indf1	equ	0xFE7
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           bsr	equ	0xFE0
  3908                           indf2	equ	0xFDF
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8
  3912                           
  3913 ;; *************** function _ToMainLow_sendmsg *****************
  3914 ;; Defined at:
  3915 ;;		line 103 in file "../src/messages.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  length          1    wreg     unsigned char 
  3918 ;;  msgtype         1   22[COMRAM] unsigned char 
  3919 ;;  data            2   23[COMRAM] PTR void 
  3920 ;;		 -> timer0_lthread@val(2), NULL(0), main@uc(23), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  length          1   25[COMRAM] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      char 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3932 ;;      Params:         3       0       0       0       0
  3933 ;;      Locals:         1       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0
  3935 ;;      Totals:         4       0       0       0       0
  3936 ;;Total ram usage:        4 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    7
  3939 ;; This function calls:
  3940 ;;		_send_msg
  3941 ;; This function is called by:
  3942 ;;		_uart_recv_int_handler
  3943 ;;		_timer1_int_handler
  3944 ;;		_retrieve_command
  3945 ;;		_timer0_lthread
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text26
  3950  001398                     __ptext26:
  3951                           	opt stack 0
  3952  001398                     _ToMainLow_sendmsg:
  3953                           	opt stack 17
  3954                           
  3955                           ;incstack = 0
  3956                           ;ToMainLow_sendmsg@length stored from wreg
  3957  001398  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  3958                           
  3959                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3960                           ;	Return value of _ToMainLow_sendmsg is never used
  3961  00139C  0101               	movlb	1	; () banked
  3962  00139E  0E01               	movlw	high _ToMainLow_MQ
  3963  0013A0  6E0C               	movwf	send_msg@qptr+1,c
  3964  0013A2  0101               	movlb	1	; () banked
  3965  0013A4  0E7E               	movlw	low _ToMainLow_MQ
  3966  0013A6  6E0B               	movwf	send_msg@qptr,c
  3967  0013A8  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  3968  0013AC  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3969  0013B0  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3970  0013B4  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  3971  0013B8  EC53  F006         	call	_send_msg	;wreg free
  3972  0013BC  0012               	return	
  3973  0013BE                     __end_of_ToMainLow_sendmsg:
  3974                           	opt stack 0
  3975                           pclatu	equ	0xFFB
  3976                           pclath	equ	0xFFA
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           intcon	equ	0xFF2
  3984                           postinc0	equ	0xFEE
  3985                           fsr0h	equ	0xFEA
  3986                           fsr0l	equ	0xFE9
  3987                           wreg	equ	0xFE8
  3988                           indf1	equ	0xFE7
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           bsr	equ	0xFE0
  3992                           indf2	equ	0xFDF
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function _send_msg *****************
  3998 ;; Defined at:
  3999 ;;		line 24 in file "../src/messages.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4002 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4003 ;;  length          1   12[COMRAM] unsigned char 
  4004 ;;  msgtype         1   13[COMRAM] unsigned char 
  4005 ;;  data            2   14[COMRAM] PTR void 
  4006 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(77), 
  4007 ;;		 -> main@uc(23), 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  4010 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4011 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4012 ;;  tlength         2   17[COMRAM] unsigned int 
  4013 ;;  slot            1   19[COMRAM] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      char 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4023 ;;      Params:         6       0       0       0       0
  4024 ;;      Locals:         5       0       0       0       0
  4025 ;;      Temps:          1       0       0       0       0
  4026 ;;      Totals:        12       0       0       0       0
  4027 ;;Total ram usage:       12 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    6
  4030 ;; This function calls:
  4031 ;;		i1_memcpy
  4032 ;; This function is called by:
  4033 ;;		_ToMainLow_sendmsg
  4034 ;;		_FromMainLow_sendmsg
  4035 ;;		_FromMainHigh_sendmsg
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text27
  4040  000CA6                     __ptext27:
  4041                           	opt stack 0
  4042  000CA6                     _send_msg:
  4043                           	opt stack 17
  4044                           
  4045                           ;messages.c: 25: unsigned char slot;
  4046                           ;messages.c: 27: msg *qmsg;
  4047                           ;messages.c: 28: size_t tlength = length;
  4048                           
  4049                           ;incstack = 0
  4050  000CA6  C00D  F012         	movff	send_msg@length,send_msg@tlength
  4051  000CAA  6A13               	clrf	send_msg@tlength+1,c
  4052                           
  4053                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4054  000CAC  EE20 F064          	lfsr	2,100
  4055  000CB0  500B               	movf	send_msg@qptr,w,c
  4056  000CB2  26D9               	addwf	fsr2l,f,c
  4057  000CB4  500C               	movf	send_msg@qptr+1,w,c
  4058  000CB6  22DA               	addwfc	fsr2h,f,c
  4059  000CB8  50DF               	movf	indf2,w,c
  4060  000CBA  6E14               	movwf	send_msg@slot,c
  4061                           
  4062                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4063  000CBC  5014               	movf	send_msg@slot,w,c
  4064  000CBE  0D19               	mullw	25
  4065  000CC0  50F3               	movf	prodl,w,c
  4066  000CC2  240B               	addwf	send_msg@qptr,w,c
  4067  000CC4  6E15               	movwf	send_msg@qmsg,c
  4068  000CC6  50F4               	movf	prodh,w,c
  4069  000CC8  200C               	addwfc	send_msg@qptr+1,w,c
  4070  000CCA  6E16               	movwf	send_msg@qmsg+1,c
  4071                           
  4072                           ;messages.c: 41: if (qmsg->full != 0) {
  4073  000CCC  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  4074  000CD0  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4075  000CD4  50DF               	movf	indf2,w,c
  4076  000CD6  B4D8               	btfsc	status,2,c
  4077  000CD8  D002               	goto	i1l3367
  4078                           
  4079                           ;messages.c: 42: return (-1);
  4080  000CDA  0EFF               	movlw	255
  4081  000CDC  0012               	return	
  4082  000CDE                     i1l3367:
  4083                           
  4084                           ;messages.c: 43: }
  4085                           ;messages.c: 46: qmsg->length = length;
  4086  000CDE  EE20 F001          	lfsr	2,1
  4087  000CE2  5015               	movf	send_msg@qmsg,w,c
  4088  000CE4  26D9               	addwf	fsr2l,f,c
  4089  000CE6  5016               	movf	send_msg@qmsg+1,w,c
  4090  000CE8  22DA               	addwfc	fsr2h,f,c
  4091  000CEA  C00D  FFDF         	movff	send_msg@length,indf2
  4092                           
  4093                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4094  000CEE  EE20 F002          	lfsr	2,2
  4095  000CF2  5015               	movf	send_msg@qmsg,w,c
  4096  000CF4  26D9               	addwf	fsr2l,f,c
  4097  000CF6  5016               	movf	send_msg@qmsg+1,w,c
  4098  000CF8  22DA               	addwfc	fsr2h,f,c
  4099  000CFA  C00E  FFDF         	movff	send_msg@msgtype,indf2
  4100                           
  4101                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4102  000CFE  0E03               	movlw	3
  4103  000D00  2415               	addwf	send_msg@qmsg,w,c
  4104  000D02  6E01               	movwf	i1memcpy@d1,c
  4105  000D04  0E00               	movlw	0
  4106  000D06  2016               	addwfc	send_msg@qmsg+1,w,c
  4107  000D08  6E02               	movwf	i1memcpy@d1+1,c
  4108  000D0A  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  4109  000D0E  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  4110  000D12  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  4111  000D16  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  4112  000D1A  ECFD  F008         	call	i1_memcpy	;wreg free
  4113                           
  4114                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4115  000D1E  EE20 F064          	lfsr	2,100
  4116  000D22  500B               	movf	send_msg@qptr,w,c
  4117  000D24  26D9               	addwf	fsr2l,f,c
  4118  000D26  500C               	movf	send_msg@qptr+1,w,c
  4119  000D28  22DA               	addwfc	fsr2h,f,c
  4120  000D2A  EE10 F064          	lfsr	1,100
  4121  000D2E  500B               	movf	send_msg@qptr,w,c
  4122  000D30  26E1               	addwf	fsr1l,f,c
  4123  000D32  500C               	movf	send_msg@qptr+1,w,c
  4124  000D34  22E2               	addwfc	fsr1h,f,c
  4125  000D36  50E7               	movf	indf1,w,c
  4126  000D38  6E11               	movwf	??_send_msg& (0+255),c
  4127  000D3A  2811               	incf	??_send_msg,w,c
  4128  000D3C  0B03               	andlw	3
  4129  000D3E  6EDF               	movwf	indf2,c
  4130                           
  4131                           ;messages.c: 59: qmsg->full = 1;
  4132  000D40  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  4133  000D44  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4134  000D48  0E01               	movlw	1
  4135  000D4A  6EDF               	movwf	indf2,c
  4136                           
  4137                           ;messages.c: 60: return (1);
  4138  000D4C  0E01               	movlw	1
  4139  000D4E  0012               	return	
  4140  000D50                     __end_of_send_msg:
  4141                           	opt stack 0
  4142                           pclatu	equ	0xFFB
  4143                           pclath	equ	0xFFA
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           prodh	equ	0xFF4
  4149                           prodl	equ	0xFF3
  4150                           intcon	equ	0xFF2
  4151                           postinc0	equ	0xFEE
  4152                           fsr0h	equ	0xFEA
  4153                           fsr0l	equ	0xFE9
  4154                           wreg	equ	0xFE8
  4155                           indf1	equ	0xFE7
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           bsr	equ	0xFE0
  4159                           indf2	equ	0xFDF
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function i1_memcpy *****************
  4165 ;; Defined at:
  4166 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  d1              2    0[COMRAM] PTR void 
  4169 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4170 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4171 ;;		 -> main@msgbuffer(23), 
  4172 ;;  s1              2    2[COMRAM] PTR const void 
  4173 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4174 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4175 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  4176 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), 
  4177 ;;		 -> main@uc(23), 
  4178 ;;  n               2    4[COMRAM] unsigned int 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4181 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4182 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4183 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  4184 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), 
  4185 ;;		 -> main@uc(23), 
  4186 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4187 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4188 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4189 ;;		 -> main@msgbuffer(23), 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2    0[COMRAM] PTR void 
  4192 ;; Registers used:
  4193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4199 ;;      Params:         6       0       0       0       0
  4200 ;;      Locals:         4       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0
  4202 ;;      Totals:        10       0       0       0       0
  4203 ;;Total ram usage:       10 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    5
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_send_msg
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text28
  4214  0011FA                     __ptext28:
  4215                           	opt stack 0
  4216  0011FA                     i1_memcpy:
  4217                           	opt stack 17
  4218                           
  4219                           ;incstack = 0
  4220  0011FA  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4221  0011FE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4222  001202  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4223  001206  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4224  00120A  D00E               	goto	i1l3343
  4225  00120C                     i1l3337:
  4226  00120C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4227  001210  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4228  001214  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4229  001218  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4230  00121C  CFDF FFE7          	movff	indf2,indf1
  4231  001220  4A09               	infsnz	i1memcpy@s,f,c
  4232  001222  2A0A               	incf	i1memcpy@s+1,f,c
  4233  001224  4A07               	infsnz	i1memcpy@d,f,c
  4234  001226  2A08               	incf	i1memcpy@d+1,f,c
  4235  001228                     i1l3343:
  4236  001228  0605               	decf	i1memcpy@n,f,c
  4237  00122A  A0D8               	btfss	status,0,c
  4238  00122C  0606               	decf	i1memcpy@n+1,f,c
  4239  00122E  2805               	incf	i1memcpy@n& (0+255),w,c
  4240  001230  B4D8               	btfsc	status,2,c
  4241  001232  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4242  001234  B4D8               	btfsc	status,2,c
  4243                           
  4244                           ;	Return value of i1_memcpy is never used
  4245  001236  0012               	return	
  4246  001238  D7E9               	goto	i1l3337
  4247  00123A                     __end_ofi1_memcpy:
  4248                           	opt stack 0
  4249                           pclatu	equ	0xFFB
  4250                           pclath	equ	0xFFA
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           prodh	equ	0xFF4
  4256                           prodl	equ	0xFF3
  4257                           intcon	equ	0xFF2
  4258                           postinc0	equ	0xFEE
  4259                           fsr0h	equ	0xFEA
  4260                           fsr0l	equ	0xFE9
  4261                           wreg	equ	0xFE8
  4262                           indf1	equ	0xFE7
  4263                           fsr1h	equ	0xFE2
  4264                           fsr1l	equ	0xFE1
  4265                           bsr	equ	0xFE0
  4266                           indf2	equ	0xFDF
  4267                           fsr2h	equ	0xFDA
  4268                           fsr2l	equ	0xFD9
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function _ReadTimer1 *****************
  4272 ;; Defined at:
  4273 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  timer           2    2[COMRAM] struct Timers
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    0[COMRAM] unsigned int 
  4280 ;; Registers used:
  4281 ;;		None
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4287 ;;      Params:         2       0       0       0       0
  4288 ;;      Locals:         2       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0
  4290 ;;      Totals:         4       0       0       0       0
  4291 ;;Total ram usage:        4 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    5
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_timer1_int_handler
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text29
  4302  00144E                     __ptext29:
  4303                           	opt stack 0
  4304  00144E                     _ReadTimer1:
  4305                           	opt stack 19
  4306                           
  4307                           ;incstack = 0
  4308  00144E  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  4309  001452  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  4310  001456  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  4311  00145A  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  4312  00145E  0012               	return	
  4313  001460                     __end_of_ReadTimer1:
  4314                           	opt stack 0
  4315                           pclatu	equ	0xFFB
  4316                           pclath	equ	0xFFA
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           postinc0	equ	0xFEE
  4325                           fsr0h	equ	0xFEA
  4326                           fsr0l	equ	0xFE9
  4327                           wreg	equ	0xFE8
  4328                           indf1	equ	0xFE7
  4329                           fsr1h	equ	0xFE2
  4330                           fsr1l	equ	0xFE1
  4331                           bsr	equ	0xFE0
  4332                           indf2	equ	0xFDF
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _InterruptHandlerHigh *****************
  4338 ;; Defined at:
  4339 ;;		line 84 in file "../src/interrupts.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;		None               void
  4346 ;; Registers used:
  4347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4353 ;;      Params:         0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0
  4355 ;;      Temps:          0      15       0       0       0
  4356 ;;      Totals:         0      15       0       0       0
  4357 ;;Total ram usage:       15 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    4
  4360 ;; This function calls:
  4361 ;;		_SleepIfOkay
  4362 ;;		_adc_int_handler
  4363 ;;		_i2c_master_int_handler
  4364 ;;		_timer0_int_handler
  4365 ;; This function is called by:
  4366 ;;		Interrupt level 2
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	intcode
  4371  000008                     __pintcode:
  4372                           	opt stack 0
  4373  000008                     _InterruptHandlerHigh:
  4374                           	opt stack 17
  4375                           
  4376                           ;incstack = 0
  4377  000008  CFFA F08F          	movff	pclath,??_InterruptHandlerHigh+1
  4378  00000C  CFFB F090          	movff	pclatu,??_InterruptHandlerHigh+2
  4379  000010  EF9A  F005         	goto	int_func
  4380                           pclatu	equ	0xFFB
  4381                           pclath	equ	0xFFA
  4382                           tblptru	equ	0xFF8
  4383                           tblptrh	equ	0xFF7
  4384                           tblptrl	equ	0xFF6
  4385                           tablat	equ	0xFF5
  4386                           prodh	equ	0xFF4
  4387                           prodl	equ	0xFF3
  4388                           intcon	equ	0xFF2
  4389                           postinc0	equ	0xFEE
  4390                           fsr0h	equ	0xFEA
  4391                           fsr0l	equ	0xFE9
  4392                           wreg	equ	0xFE8
  4393                           indf1	equ	0xFE7
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           bsr	equ	0xFE0
  4397                           indf2	equ	0xFDF
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402                           	psect	intcode_body
  4403  000B34                     __pintcode_body:
  4404                           	opt stack 17
  4405  000B34                     int_func:
  4406                           	opt stack 17
  4407  000B34  CFE9 F091          	movff	fsr0l,??_InterruptHandlerHigh+3
  4408  000B38  CFEA F092          	movff	fsr0h,??_InterruptHandlerHigh+4
  4409  000B3C  CFE1 F093          	movff	fsr1l,??_InterruptHandlerHigh+5
  4410  000B40  CFE2 F094          	movff	fsr1h,??_InterruptHandlerHigh+6
  4411  000B44  CFD9 F095          	movff	fsr2l,??_InterruptHandlerHigh+7
  4412  000B48  CFDA F096          	movff	fsr2h,??_InterruptHandlerHigh+8
  4413  000B4C  CFF3 F097          	movff	prodl,??_InterruptHandlerHigh+9
  4414  000B50  CFF4 F098          	movff	prodh,??_InterruptHandlerHigh+10
  4415  000B54  CFF6 F099          	movff	tblptrl,??_InterruptHandlerHigh+11
  4416  000B58  CFF7 F09A          	movff	tblptrh,??_InterruptHandlerHigh+12
  4417  000B5C  CFF8 F09B          	movff	tblptru,??_InterruptHandlerHigh+13
  4418  000B60  CFF5 F09C          	movff	tablat,??_InterruptHandlerHigh+14
  4419                           
  4420                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  4421  000B64  A69E               	btfss	3998,3,c	;volatile
  4422  000B66  D003               	goto	i2l3435
  4423                           
  4424                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  4425  000B68  969E               	bcf	3998,3,c	;volatile
  4426                           
  4427                           ;interrupts.c: 94: i2c_master_int_handler();
  4428  000B6A  EC5D  F000         	call	_i2c_master_int_handler	;wreg free
  4429  000B6E                     i2l3435:
  4430                           
  4431                           ;interrupts.c: 95: }
  4432                           ;interrupts.c: 96: if(PIR1bits.ADIF)
  4433  000B6E  AC9E               	btfss	3998,6,c	;volatile
  4434  000B70  D012               	goto	i2l3443
  4435                           
  4436                           ;interrupts.c: 97: {
  4437                           ;interrupts.c: 98: LATBbits.LATB1 = !LATBbits.LATB1;
  4438  000B72  B28A               	btfsc	3978,1,c	;volatile
  4439  000B74  D002               	goto	i2u242_40
  4440  000B76  0E01               	movlw	1
  4441  000B78  D001               	goto	i2u242_46
  4442  000B7A                     i2u242_40:
  4443  000B7A  0E00               	movlw	0
  4444  000B7C                     i2u242_46:
  4445  000B7C  0100               	movlb	0	; () banked
  4446  000B7E  6F8E               	movwf	??_InterruptHandlerHigh& (0+255),b
  4447  000B80  0100               	movlb	0	; () banked
  4448  000B82  478E               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  4449  000B84  508A               	movf	3978,w,c	;volatile
  4450  000B86  0100               	movlb	0	; () banked
  4451  000B88  198E               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  4452  000B8A  0BFD               	andlw	-3
  4453  000B8C  198E               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  4454  000B8E  6E8A               	movwf	3978,c	;volatile
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;interrupts.c: 100: PIR1bits.ADIF = 0;
  4458  000B90  9C9E               	bcf	3998,6,c	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;interrupts.c: 101: adc_int_handler();
  4462  000B92  ECB7  F009         	call	_adc_int_handler	;wreg free
  4463  000B96                     i2l3443:
  4464                           
  4465                           ;interrupts.c: 102: }
  4466                           ;interrupts.c: 104: if (INTCONbits.TMR0IF) {
  4467  000B96  A4F2               	btfss	intcon,2,c	;volatile
  4468  000B98  D010               	goto	i2l3451
  4469                           
  4470                           ;interrupts.c: 105: LATBbits.LATB0 = !LATBbits.LATB0;
  4471  000B9A  B08A               	btfsc	3978,0,c	;volatile
  4472  000B9C  D002               	goto	i2u244_40
  4473  000B9E  0E01               	movlw	1
  4474  000BA0  D001               	goto	i2u244_46
  4475  000BA2                     i2u244_40:
  4476  000BA2  0E00               	movlw	0
  4477  000BA4                     i2u244_46:
  4478  000BA4  0100               	movlb	0	; () banked
  4479  000BA6  6F8E               	movwf	??_InterruptHandlerHigh& (0+255),b
  4480  000BA8  508A               	movf	3978,w,c	;volatile
  4481  000BAA  0100               	movlb	0	; () banked
  4482  000BAC  198E               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  4483  000BAE  0BFE               	andlw	-2
  4484  000BB0  198E               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  4485  000BB2  6E8A               	movwf	3978,c	;volatile
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  4489  000BB4  94F2               	bcf	intcon,2,c	;volatile
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;interrupts.c: 108: timer0_int_handler();
  4493  000BB6  EC30  F00A         	call	_timer0_int_handler	;wreg free
  4494  000BBA                     i2l3451:
  4495                           
  4496                           ;interrupts.c: 109: }
  4497                           ;interrupts.c: 118: SleepIfOkay();
  4498  000BBA  EC2E  F008         	call	_SleepIfOkay	;wreg free
  4499  000BBE  C09C  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  4500  000BC2  C09B  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  4501  000BC6  C09A  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  4502  000BCA  C099  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  4503  000BCE  C098  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  4504  000BD2  C097  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  4505  000BD6  C096  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  4506  000BDA  C095  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  4507  000BDE  C094  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  4508  000BE2  C093  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  4509  000BE6  C092  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  4510  000BEA  C091  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  4511  000BEE  C090  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  4512  000BF2  C08F  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  4513  000BF6  0011               	retfie		f
  4514  000BF8                     __end_of_InterruptHandlerHigh:
  4515                           	opt stack 0
  4516                           pclatu	equ	0xFFB
  4517                           pclath	equ	0xFFA
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           fsr0h	equ	0xFEA
  4527                           fsr0l	equ	0xFE9
  4528                           wreg	equ	0xFE8
  4529                           indf1	equ	0xFE7
  4530                           fsr1h	equ	0xFE2
  4531                           fsr1l	equ	0xFE1
  4532                           bsr	equ	0xFE0
  4533                           indf2	equ	0xFDF
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538 ;; *************** function _timer0_int_handler *****************
  4539 ;; Defined at:
  4540 ;;		line 18 in file "../src/user_interrupts.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  msgtype         2    0        int 
  4545 ;;  length          2    0        int 
  4546 ;;  val             2    0        unsigned int 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    1
  4563 ;; This function calls:
  4564 ;;		_ConvertADC
  4565 ;;		_WriteTimer0
  4566 ;; This function is called by:
  4567 ;;		_InterruptHandlerHigh
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text31
  4572  001460                     __ptext31:
  4573                           	opt stack 0
  4574  001460                     _timer0_int_handler:
  4575                           	opt stack 19
  4576                           
  4577                           ;user_interrupts.c: 19: unsigned int val;
  4578                           ;user_interrupts.c: 20: int length, msgtype;
  4579                           ;user_interrupts.c: 27: WriteTimer0(0);
  4580                           
  4581                           ;incstack = 0
  4582  001460  0E00               	movlw	0
  4583  001462  6E31               	movwf	WriteTimer0@timer0+1,c
  4584  001464  0E00               	movlw	0
  4585  001466  6E30               	movwf	WriteTimer0@timer0,c
  4586  001468  EC39  F00A         	call	_WriteTimer0	;wreg free
  4587                           
  4588                           ;user_interrupts.c: 33: ConvertADC();
  4589  00146C  EC54  F00A         	call	_ConvertADC	;wreg free
  4590  001470  0012               	return	
  4591  001472                     __end_of_timer0_int_handler:
  4592                           	opt stack 0
  4593                           pclatu	equ	0xFFB
  4594                           pclath	equ	0xFFA
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           intcon	equ	0xFF2
  4602                           postinc0	equ	0xFEE
  4603                           fsr0h	equ	0xFEA
  4604                           fsr0l	equ	0xFE9
  4605                           wreg	equ	0xFE8
  4606                           indf1	equ	0xFE7
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           bsr	equ	0xFE0
  4610                           indf2	equ	0xFDF
  4611                           fsr2h	equ	0xFDA
  4612                           fsr2l	equ	0xFD9
  4613                           status	equ	0xFD8
  4614                           
  4615 ;; *************** function _WriteTimer0 *****************
  4616 ;; Defined at:
  4617 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  timer0          2   47[COMRAM] unsigned int 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  timer           2   49[COMRAM] struct Timers
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		None
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4631 ;;      Params:         2       0       0       0       0
  4632 ;;      Locals:         2       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0
  4634 ;;      Totals:         4       0       0       0       0
  4635 ;;Total ram usage:        4 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_timer0_int_handler
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text32
  4645  001472                     __ptext32:
  4646                           	opt stack 0
  4647  001472                     _WriteTimer0:
  4648                           	opt stack 19
  4649                           
  4650                           ;incstack = 0
  4651  001472  C030  F032         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4652  001476  C031  F033         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4653  00147A  C033  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4654  00147E  C032  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4655  001482  0012               	return	
  4656  001484                     __end_of_WriteTimer0:
  4657                           	opt stack 0
  4658                           pclatu	equ	0xFFB
  4659                           pclath	equ	0xFFA
  4660                           tblptru	equ	0xFF8
  4661                           tblptrh	equ	0xFF7
  4662                           tblptrl	equ	0xFF6
  4663                           tablat	equ	0xFF5
  4664                           prodh	equ	0xFF4
  4665                           prodl	equ	0xFF3
  4666                           intcon	equ	0xFF2
  4667                           postinc0	equ	0xFEE
  4668                           fsr0h	equ	0xFEA
  4669                           fsr0l	equ	0xFE9
  4670                           wreg	equ	0xFE8
  4671                           indf1	equ	0xFE7
  4672                           fsr1h	equ	0xFE2
  4673                           fsr1l	equ	0xFE1
  4674                           bsr	equ	0xFE0
  4675                           indf2	equ	0xFDF
  4676                           fsr2h	equ	0xFDA
  4677                           fsr2l	equ	0xFD9
  4678                           status	equ	0xFD8
  4679                           
  4680 ;; *************** function _ConvertADC *****************
  4681 ;; Defined at:
  4682 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;		None               void
  4689 ;; Registers used:
  4690 ;;		None
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4696 ;;      Params:         0       0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0
  4699 ;;      Totals:         0       0       0       0       0
  4700 ;;Total ram usage:        0 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_timer0_int_handler
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text33
  4710  0014A8                     __ptext33:
  4711                           	opt stack 0
  4712  0014A8                     _ConvertADC:
  4713                           	opt stack 19
  4714                           
  4715                           ;incstack = 0
  4716  0014A8  82C2               	bsf	4034,1,c	;volatile
  4717  0014AA  0012               	return	
  4718  0014AC                     __end_of_ConvertADC:
  4719                           	opt stack 0
  4720                           pclatu	equ	0xFFB
  4721                           pclath	equ	0xFFA
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           intcon	equ	0xFF2
  4729                           postinc0	equ	0xFEE
  4730                           fsr0h	equ	0xFEA
  4731                           fsr0l	equ	0xFE9
  4732                           wreg	equ	0xFE8
  4733                           indf1	equ	0xFE7
  4734                           fsr1h	equ	0xFE2
  4735                           fsr1l	equ	0xFE1
  4736                           bsr	equ	0xFE0
  4737                           indf2	equ	0xFDF
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _i2c_master_int_handler *****************
  4743 ;; Defined at:
  4744 ;;		line 442 in file "../src/my_i2c.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;		None               void
  4751 ;; Registers used:
  4752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4758 ;;      Params:         0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0
  4760 ;;      Temps:          1       0       0       0       0
  4761 ;;      Totals:         1       0       0       0       0
  4762 ;;Total ram usage:        1 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    3
  4765 ;; This function calls:
  4766 ;;		_ToMainHigh_sendmsg
  4767 ;; This function is called by:
  4768 ;;		_InterruptHandlerHigh
  4769 ;;		_i2c_int_handler
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text34
  4774  0000BA                     __ptext34:
  4775                           	opt stack 0
  4776  0000BA                     _i2c_master_int_handler:
  4777                           	opt stack 17
  4778                           
  4779                           ;my_i2c.c: 443: switch (ic_ptr->status){
  4780                           
  4781                           ;incstack = 0
  4782  0000BA  D27E               	goto	i2l3555
  4783  0000BC                     i2l3455:
  4784                           
  4785                           ;my_i2c.c: 446: ic_ptr->status = 0x11;
  4786  0000BC  0100               	movlb	0	; () banked
  4787  0000BE  EE20 F019          	lfsr	2,25
  4788  0000C2  0100               	movlb	0	; () banked
  4789  0000C4  51BA               	movf	_ic_ptr& (0+255),w,b
  4790  0000C6  26D9               	addwf	fsr2l,f,c
  4791  0000C8  0100               	movlb	0	; () banked
  4792  0000CA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4793  0000CC  22DA               	addwfc	fsr2h,f,c
  4794  0000CE  0E11               	movlw	17
  4795  0000D0  6EDF               	movwf	indf2,c
  4796                           
  4797                           ;my_i2c.c: 447: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  4798  0000D2  0100               	movlb	0	; () banked
  4799  0000D4  EE20 F034          	lfsr	2,52
  4800  0000D8  0100               	movlb	0	; () banked
  4801  0000DA  51BA               	movf	_ic_ptr& (0+255),w,b
  4802  0000DC  26D9               	addwf	fsr2l,f,c
  4803  0000DE  0100               	movlb	0	; () banked
  4804  0000E0  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4805  0000E2  22DA               	addwfc	fsr2h,f,c
  4806  0000E4  50DF               	movf	indf2,w,c
  4807  0000E6  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  4808  0000E8  90D8               	bcf	status,0,c
  4809  0000EA  343C               	rlcf	??_i2c_master_int_handler,w,c
  4810  0000EC  0BFE               	andlw	254
  4811  0000EE  6EC9               	movwf	4041,c	;volatile
  4812                           
  4813                           ;my_i2c.c: 448: break;
  4814  0000F0  0012               	return	
  4815  0000F2                     i2l345:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;my_i2c.c: 451: if (SSPCON2bits.ACKSTAT == 0) {
  4819  0000F2  BCC5               	btfsc	4037,6,c	;volatile
  4820  0000F4  D074               	goto	i2l3473
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;my_i2c.c: 452: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  4824  0000F6  0100               	movlb	0	; () banked
  4825  0000F8  EE20 F033          	lfsr	2,51
  4826  0000FC  0100               	movlb	0	; () banked
  4827  0000FE  51BA               	movf	_ic_ptr& (0+255),w,b
  4828  000100  26D9               	addwf	fsr2l,f,c
  4829  000102  0100               	movlb	0	; () banked
  4830  000104  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4831  000106  22DA               	addwfc	fsr2h,f,c
  4832  000108  50DF               	movf	indf2,w,c
  4833  00010A  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  4834  00010C  0100               	movlb	0	; () banked
  4835  00010E  EE20 F032          	lfsr	2,50
  4836  000112  0100               	movlb	0	; () banked
  4837  000114  51BA               	movf	_ic_ptr& (0+255),w,b
  4838  000116  26D9               	addwf	fsr2l,f,c
  4839  000118  0100               	movlb	0	; () banked
  4840  00011A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4841  00011C  22DA               	addwfc	fsr2h,f,c
  4842  00011E  50DF               	movf	indf2,w,c
  4843  000120  5C3C               	subwf	??_i2c_master_int_handler,w,c
  4844  000122  B0D8               	btfsc	status,0,c
  4845  000124  D033               	goto	i2l3465
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;my_i2c.c: 453: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4849  000126  0100               	movlb	0	; () banked
  4850  000128  EE20 F033          	lfsr	2,51
  4851  00012C  0100               	movlb	0	; () banked
  4852  00012E  51BA               	movf	_ic_ptr& (0+255),w,b
  4853  000130  26D9               	addwf	fsr2l,f,c
  4854  000132  0100               	movlb	0	; () banked
  4855  000134  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4856  000136  22DA               	addwfc	fsr2h,f,c
  4857  000138  50DF               	movf	indf2,w,c
  4858  00013A  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  4859  00013C  503C               	movf	??_i2c_master_int_handler,w,c
  4860  00013E  0D01               	mullw	1
  4861  000140  0E1C               	movlw	28
  4862  000142  26F3               	addwf	prodl,f,c
  4863  000144  0E00               	movlw	0
  4864  000146  22F4               	addwfc	prodh,f,c
  4865  000148  50F3               	movf	prodl,w,c
  4866  00014A  0100               	movlb	0	; () banked
  4867  00014C  0100               	movlb	0	; () banked
  4868  00014E  25BA               	addwf	_ic_ptr& (0+255),w,b
  4869  000150  6ED9               	movwf	fsr2l,c
  4870  000152  50F4               	movf	prodh,w,c
  4871  000154  0100               	movlb	0	; () banked
  4872  000156  0100               	movlb	0	; () banked
  4873  000158  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4874  00015A  6EDA               	movwf	fsr2h,c
  4875  00015C  50DF               	movf	indf2,w,c
  4876  00015E  6EC9               	movwf	4041,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;my_i2c.c: 454: ic_ptr->outbufind++;
  4880  000160  0100               	movlb	0	; () banked
  4881  000162  EE20 F033          	lfsr	2,51
  4882  000166  0100               	movlb	0	; () banked
  4883  000168  51BA               	movf	_ic_ptr& (0+255),w,b
  4884  00016A  26D9               	addwf	fsr2l,f,c
  4885  00016C  0100               	movlb	0	; () banked
  4886  00016E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4887  000170  22DA               	addwfc	fsr2h,f,c
  4888  000172  2ADF               	incf	indf2,f,c
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;my_i2c.c: 455: ic_ptr->status = 0x12;
  4892  000174  0100               	movlb	0	; () banked
  4893  000176  EE20 F019          	lfsr	2,25
  4894  00017A  0100               	movlb	0	; () banked
  4895  00017C  51BA               	movf	_ic_ptr& (0+255),w,b
  4896  00017E  26D9               	addwf	fsr2l,f,c
  4897  000180  0100               	movlb	0	; () banked
  4898  000182  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4899  000184  22DA               	addwfc	fsr2h,f,c
  4900  000186  0E12               	movlw	18
  4901  000188  6EDF               	movwf	indf2,c
  4902                           
  4903                           ;my_i2c.c: 456: }
  4904  00018A  0012               	return	
  4905  00018C                     i2l3465:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;my_i2c.c: 457: else {
  4909                           ;my_i2c.c: 458: ToMainHigh_sendmsg(0, 43, 0);
  4910  00018C  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  4911  00018E  0E2B               	movlw	43
  4912  000190  0100               	movlb	0	; () banked
  4913  000192  0100               	movlb	0	; () banked
  4914  000194  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  4915  000196  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  4916  000198  0E00               	movlw	0
  4917  00019A  0100               	movlb	0	; () banked
  4918  00019C  0100               	movlb	0	; () banked
  4919  00019E  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  4920  0001A0  0E00               	movlw	0
  4921  0001A2  0100               	movlb	0	; () banked
  4922  0001A4  0100               	movlb	0	; () banked
  4923  0001A6  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  4924  0001A8  0E00               	movlw	0
  4925  0001AA  EC58  F009         	call	_ToMainHigh_sendmsg
  4926                           
  4927                           ;my_i2c.c: 459: ic_ptr->outbuflen = 0;
  4928  0001AE  0100               	movlb	0	; () banked
  4929  0001B0  EE20 F032          	lfsr	2,50
  4930  0001B4  0100               	movlb	0	; () banked
  4931  0001B6  51BA               	movf	_ic_ptr& (0+255),w,b
  4932  0001B8  26D9               	addwf	fsr2l,f,c
  4933  0001BA  0100               	movlb	0	; () banked
  4934  0001BC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4935  0001BE  22DA               	addwfc	fsr2h,f,c
  4936  0001C0  0E00               	movlw	0
  4937  0001C2  6EDF               	movwf	indf2,c
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;my_i2c.c: 460: ic_ptr->status = 0x5;
  4941  0001C4  0100               	movlb	0	; () banked
  4942  0001C6  EE20 F019          	lfsr	2,25
  4943  0001CA  0100               	movlb	0	; () banked
  4944  0001CC  51BA               	movf	_ic_ptr& (0+255),w,b
  4945  0001CE  26D9               	addwf	fsr2l,f,c
  4946  0001D0  0100               	movlb	0	; () banked
  4947  0001D2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4948  0001D4  22DA               	addwfc	fsr2h,f,c
  4949  0001D6  0E05               	movlw	5
  4950  0001D8  6EDF               	movwf	indf2,c
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;my_i2c.c: 461: SSPCON2bits.PEN = 1;
  4954  0001DA  84C5               	bsf	4037,2,c	;volatile
  4955  0001DC  0012               	return	
  4956  0001DE                     i2l3473:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;my_i2c.c: 464: else {
  4960                           ;my_i2c.c: 465: ToMainHigh_sendmsg(0, 44, 0);
  4961  0001DE  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  4962  0001E0  0E2C               	movlw	44
  4963  0001E2  0100               	movlb	0	; () banked
  4964  0001E4  0100               	movlb	0	; () banked
  4965  0001E6  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  4966  0001E8  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  4967  0001EA  0E00               	movlw	0
  4968  0001EC  0100               	movlb	0	; () banked
  4969  0001EE  0100               	movlb	0	; () banked
  4970  0001F0  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  4971  0001F2  0E00               	movlw	0
  4972  0001F4  0100               	movlb	0	; () banked
  4973  0001F6  0100               	movlb	0	; () banked
  4974  0001F8  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  4975  0001FA  0E00               	movlw	0
  4976  0001FC  EC58  F009         	call	_ToMainHigh_sendmsg
  4977                           
  4978                           ;my_i2c.c: 466: ic_ptr->status = 0x5;
  4979  000200  0100               	movlb	0	; () banked
  4980  000202  EE20 F019          	lfsr	2,25
  4981  000206  0100               	movlb	0	; () banked
  4982  000208  51BA               	movf	_ic_ptr& (0+255),w,b
  4983  00020A  26D9               	addwf	fsr2l,f,c
  4984  00020C  0100               	movlb	0	; () banked
  4985  00020E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  4986  000210  22DA               	addwfc	fsr2h,f,c
  4987  000212  0E05               	movlw	5
  4988  000214  6EDF               	movwf	indf2,c
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;my_i2c.c: 467: SSPCON2bits.PEN = 1;
  4992  000216  84C5               	bsf	4037,2,c	;volatile
  4993  000218  0012               	return	
  4994  00021A                     i2l350:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;my_i2c.c: 472: if (SSPCON2bits.ACKSTAT == 1) {
  4998  00021A  ACC5               	btfss	4037,6,c	;volatile
  4999  00021C  D00D               	goto	i2l3483
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;my_i2c.c: 473: ic_ptr->status = 0x13;
  5003  00021E  0100               	movlb	0	; () banked
  5004  000220  EE20 F019          	lfsr	2,25
  5005  000224  0100               	movlb	0	; () banked
  5006  000226  51BA               	movf	_ic_ptr& (0+255),w,b
  5007  000228  26D9               	addwf	fsr2l,f,c
  5008  00022A  0100               	movlb	0	; () banked
  5009  00022C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5010  00022E  22DA               	addwfc	fsr2h,f,c
  5011  000230  0E13               	movlw	19
  5012  000232  6EDF               	movwf	indf2,c
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;my_i2c.c: 474: SSPCON2bits.PEN = 1;
  5016  000234  84C5               	bsf	4037,2,c	;volatile
  5017                           
  5018                           ;my_i2c.c: 475: }
  5019  000236  0012               	return	
  5020  000238                     i2l3483:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;my_i2c.c: 476: else {
  5024                           ;my_i2c.c: 477: ToMainHigh_sendmsg(0, 44, 0);
  5025  000238  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5026  00023A  0E2C               	movlw	44
  5027  00023C  0100               	movlb	0	; () banked
  5028  00023E  0100               	movlb	0	; () banked
  5029  000240  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5030  000242  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5031  000244  0E00               	movlw	0
  5032  000246  0100               	movlb	0	; () banked
  5033  000248  0100               	movlb	0	; () banked
  5034  00024A  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5035  00024C  0E00               	movlw	0
  5036  00024E  0100               	movlb	0	; () banked
  5037  000250  0100               	movlb	0	; () banked
  5038  000252  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5039  000254  0E00               	movlw	0
  5040  000256  EC58  F009         	call	_ToMainHigh_sendmsg
  5041                           
  5042                           ;my_i2c.c: 478: ic_ptr->status = 0x5;
  5043  00025A  0100               	movlb	0	; () banked
  5044  00025C  EE20 F019          	lfsr	2,25
  5045  000260  0100               	movlb	0	; () banked
  5046  000262  51BA               	movf	_ic_ptr& (0+255),w,b
  5047  000264  26D9               	addwf	fsr2l,f,c
  5048  000266  0100               	movlb	0	; () banked
  5049  000268  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5050  00026A  22DA               	addwfc	fsr2h,f,c
  5051  00026C  0E05               	movlw	5
  5052  00026E  6EDF               	movwf	indf2,c
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;my_i2c.c: 479: SSPCON2bits.PEN = 1;
  5056  000270  84C5               	bsf	4037,2,c	;volatile
  5057  000272  0012               	return	
  5058  000274                     i2l3489:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;my_i2c.c: 484: ToMainHigh_sendmsg(0, 43, 0);
  5062  000274  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5063  000276  0E2B               	movlw	43
  5064  000278  0100               	movlb	0	; () banked
  5065  00027A  0100               	movlb	0	; () banked
  5066  00027C  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5067  00027E  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5068  000280  0E00               	movlw	0
  5069  000282  0100               	movlb	0	; () banked
  5070  000284  0100               	movlb	0	; () banked
  5071  000286  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5072  000288  0E00               	movlw	0
  5073  00028A  0100               	movlb	0	; () banked
  5074  00028C  0100               	movlb	0	; () banked
  5075  00028E  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5076  000290  0E00               	movlw	0
  5077  000292  EC58  F009         	call	_ToMainHigh_sendmsg
  5078                           
  5079                           ;my_i2c.c: 485: ic_ptr->status = 0x5;
  5080  000296  0100               	movlb	0	; () banked
  5081  000298  EE20 F019          	lfsr	2,25
  5082  00029C  0100               	movlb	0	; () banked
  5083  00029E  51BA               	movf	_ic_ptr& (0+255),w,b
  5084  0002A0  26D9               	addwf	fsr2l,f,c
  5085  0002A2  0100               	movlb	0	; () banked
  5086  0002A4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5087  0002A6  22DA               	addwfc	fsr2h,f,c
  5088  0002A8  0E05               	movlw	5
  5089  0002AA  6EDF               	movwf	indf2,c
  5090                           
  5091                           ;my_i2c.c: 486: break;
  5092  0002AC  0012               	return	
  5093  0002AE                     i2l354:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;my_i2c.c: 538: if (SSPCON2bits.ACKSTAT == 0) {
  5097  0002AE  BCC5               	btfsc	4037,6,c	;volatile
  5098  0002B0  D017               	goto	i2l3495
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;my_i2c.c: 539: ic_ptr->status = 0x14;
  5102  0002B2  0100               	movlb	0	; () banked
  5103  0002B4  EE20 F019          	lfsr	2,25
  5104  0002B8  0100               	movlb	0	; () banked
  5105  0002BA  51BA               	movf	_ic_ptr& (0+255),w,b
  5106  0002BC  26D9               	addwf	fsr2l,f,c
  5107  0002BE  0100               	movlb	0	; () banked
  5108  0002C0  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5109  0002C2  22DA               	addwfc	fsr2h,f,c
  5110  0002C4  0E14               	movlw	20
  5111  0002C6  6EDF               	movwf	indf2,c
  5112                           
  5113                           ;my_i2c.c: 540: SSPBUF = ic_ptr->slave_addr;
  5114  0002C8  0100               	movlb	0	; () banked
  5115  0002CA  EE20 F034          	lfsr	2,52
  5116  0002CE  0100               	movlb	0	; () banked
  5117  0002D0  51BA               	movf	_ic_ptr& (0+255),w,b
  5118  0002D2  26D9               	addwf	fsr2l,f,c
  5119  0002D4  0100               	movlb	0	; () banked
  5120  0002D6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5121  0002D8  22DA               	addwfc	fsr2h,f,c
  5122  0002DA  50DF               	movf	indf2,w,c
  5123  0002DC  6EC9               	movwf	4041,c	;volatile
  5124                           
  5125                           ;my_i2c.c: 541: }
  5126  0002DE  0012               	return	
  5127  0002E0                     i2l3495:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;my_i2c.c: 543: else {
  5131                           ;my_i2c.c: 544: ToMainHigh_sendmsg(0, 46, 0);
  5132  0002E0  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5133  0002E2  0E2E               	movlw	46
  5134  0002E4  0100               	movlb	0	; () banked
  5135  0002E6  0100               	movlb	0	; () banked
  5136  0002E8  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5137  0002EA  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5138  0002EC  0E00               	movlw	0
  5139  0002EE  0100               	movlb	0	; () banked
  5140  0002F0  0100               	movlb	0	; () banked
  5141  0002F2  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5142  0002F4  0E00               	movlw	0
  5143  0002F6  0100               	movlb	0	; () banked
  5144  0002F8  0100               	movlb	0	; () banked
  5145  0002FA  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5146  0002FC  0E00               	movlw	0
  5147  0002FE  EC58  F009         	call	_ToMainHigh_sendmsg
  5148                           
  5149                           ;my_i2c.c: 545: ic_ptr->status = 0x5;
  5150  000302  0100               	movlb	0	; () banked
  5151  000304  EE20 F019          	lfsr	2,25
  5152  000308  0100               	movlb	0	; () banked
  5153  00030A  51BA               	movf	_ic_ptr& (0+255),w,b
  5154  00030C  26D9               	addwf	fsr2l,f,c
  5155  00030E  0100               	movlb	0	; () banked
  5156  000310  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5157  000312  22DA               	addwfc	fsr2h,f,c
  5158  000314  0E05               	movlw	5
  5159  000316  6EDF               	movwf	indf2,c
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;my_i2c.c: 546: SSPCON2bits.PEN = 1;
  5163  000318  84C5               	bsf	4037,2,c	;volatile
  5164  00031A  0012               	return	
  5165  00031C                     i2l357:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;my_i2c.c: 551: if (SSPCON2bits.ACKSTAT == 0) {
  5169  00031C  BCC5               	btfsc	4037,6,c	;volatile
  5170  00031E  D022               	goto	i2l3503
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;my_i2c.c: 552: ic_ptr->status = 0x15;
  5174  000320  0100               	movlb	0	; () banked
  5175  000322  EE20 F019          	lfsr	2,25
  5176  000326  0100               	movlb	0	; () banked
  5177  000328  51BA               	movf	_ic_ptr& (0+255),w,b
  5178  00032A  26D9               	addwf	fsr2l,f,c
  5179  00032C  0100               	movlb	0	; () banked
  5180  00032E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5181  000330  22DA               	addwfc	fsr2h,f,c
  5182  000332  0E15               	movlw	21
  5183  000334  6EDF               	movwf	indf2,c
  5184                           
  5185                           ;my_i2c.c: 553: ic_ptr->outbuflen = 0;
  5186  000336  0100               	movlb	0	; () banked
  5187  000338  EE20 F032          	lfsr	2,50
  5188  00033C  0100               	movlb	0	; () banked
  5189  00033E  51BA               	movf	_ic_ptr& (0+255),w,b
  5190  000340  26D9               	addwf	fsr2l,f,c
  5191  000342  0100               	movlb	0	; () banked
  5192  000344  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5193  000346  22DA               	addwfc	fsr2h,f,c
  5194  000348  0E00               	movlw	0
  5195  00034A  6EDF               	movwf	indf2,c
  5196                           
  5197                           ;my_i2c.c: 554: SSPBUF = ic_ptr->outbuffer[0];
  5198  00034C  0100               	movlb	0	; () banked
  5199  00034E  EE20 F01C          	lfsr	2,28
  5200  000352  0100               	movlb	0	; () banked
  5201  000354  51BA               	movf	_ic_ptr& (0+255),w,b
  5202  000356  26D9               	addwf	fsr2l,f,c
  5203  000358  0100               	movlb	0	; () banked
  5204  00035A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5205  00035C  22DA               	addwfc	fsr2h,f,c
  5206  00035E  50DF               	movf	indf2,w,c
  5207  000360  6EC9               	movwf	4041,c	;volatile
  5208                           
  5209                           ;my_i2c.c: 555: }
  5210  000362  0012               	return	
  5211  000364                     i2l3503:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;my_i2c.c: 556: else {
  5215                           ;my_i2c.c: 557: ToMainHigh_sendmsg(0, 46, 0);
  5216  000364  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5217  000366  0E2E               	movlw	46
  5218  000368  0100               	movlb	0	; () banked
  5219  00036A  0100               	movlb	0	; () banked
  5220  00036C  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5221  00036E  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5222  000370  0E00               	movlw	0
  5223  000372  0100               	movlb	0	; () banked
  5224  000374  0100               	movlb	0	; () banked
  5225  000376  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5226  000378  0E00               	movlw	0
  5227  00037A  0100               	movlb	0	; () banked
  5228  00037C  0100               	movlb	0	; () banked
  5229  00037E  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5230  000380  0E00               	movlw	0
  5231  000382  EC58  F009         	call	_ToMainHigh_sendmsg
  5232                           
  5233                           ;my_i2c.c: 558: ic_ptr->status = 0x5;
  5234  000386  0100               	movlb	0	; () banked
  5235  000388  EE20 F019          	lfsr	2,25
  5236  00038C  0100               	movlb	0	; () banked
  5237  00038E  51BA               	movf	_ic_ptr& (0+255),w,b
  5238  000390  26D9               	addwf	fsr2l,f,c
  5239  000392  0100               	movlb	0	; () banked
  5240  000394  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5241  000396  22DA               	addwfc	fsr2h,f,c
  5242  000398  0E05               	movlw	5
  5243  00039A  6EDF               	movwf	indf2,c
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;my_i2c.c: 559: SSPCON2bits.PEN = 1;
  5247  00039C  84C5               	bsf	4037,2,c	;volatile
  5248  00039E  0012               	return	
  5249  0003A0                     i2l360:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;my_i2c.c: 564: if (SSPCON2bits.ACKSTAT == 0) {
  5253  0003A0  BCC5               	btfsc	4037,6,c	;volatile
  5254  0003A2  D00D               	goto	i2l3513
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;my_i2c.c: 565: ic_ptr->status = 0x20;
  5258  0003A4  0100               	movlb	0	; () banked
  5259  0003A6  EE20 F019          	lfsr	2,25
  5260  0003AA  0100               	movlb	0	; () banked
  5261  0003AC  51BA               	movf	_ic_ptr& (0+255),w,b
  5262  0003AE  26D9               	addwf	fsr2l,f,c
  5263  0003B0  0100               	movlb	0	; () banked
  5264  0003B2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5265  0003B4  22DA               	addwfc	fsr2h,f,c
  5266  0003B6  0E20               	movlw	32
  5267  0003B8  6EDF               	movwf	indf2,c
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;my_i2c.c: 566: SSPCON2bits.RSEN = 1;
  5271  0003BA  82C5               	bsf	4037,1,c	;volatile
  5272                           
  5273                           ;my_i2c.c: 567: }
  5274  0003BC  0012               	return	
  5275  0003BE                     i2l3513:
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;my_i2c.c: 568: else {
  5279                           ;my_i2c.c: 569: ToMainHigh_sendmsg(0, 46, 0);
  5280  0003BE  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5281  0003C0  0E2E               	movlw	46
  5282  0003C2  0100               	movlb	0	; () banked
  5283  0003C4  0100               	movlb	0	; () banked
  5284  0003C6  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5285  0003C8  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5286  0003CA  0E00               	movlw	0
  5287  0003CC  0100               	movlb	0	; () banked
  5288  0003CE  0100               	movlb	0	; () banked
  5289  0003D0  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5290  0003D2  0E00               	movlw	0
  5291  0003D4  0100               	movlb	0	; () banked
  5292  0003D6  0100               	movlb	0	; () banked
  5293  0003D8  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5294  0003DA  0E00               	movlw	0
  5295  0003DC  EC58  F009         	call	_ToMainHigh_sendmsg
  5296                           
  5297                           ;my_i2c.c: 570: ic_ptr->status = 0x5;
  5298  0003E0  0100               	movlb	0	; () banked
  5299  0003E2  EE20 F019          	lfsr	2,25
  5300  0003E6  0100               	movlb	0	; () banked
  5301  0003E8  51BA               	movf	_ic_ptr& (0+255),w,b
  5302  0003EA  26D9               	addwf	fsr2l,f,c
  5303  0003EC  0100               	movlb	0	; () banked
  5304  0003EE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5305  0003F0  22DA               	addwfc	fsr2h,f,c
  5306  0003F2  0E05               	movlw	5
  5307  0003F4  6EDF               	movwf	indf2,c
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;my_i2c.c: 571: SSPCON2bits.PEN = 1;
  5311  0003F6  84C5               	bsf	4037,2,c	;volatile
  5312  0003F8  0012               	return	
  5313  0003FA                     i2l3519:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;my_i2c.c: 576: ic_ptr->status = 0x21;
  5317  0003FA  0100               	movlb	0	; () banked
  5318  0003FC  EE20 F019          	lfsr	2,25
  5319  000400  0100               	movlb	0	; () banked
  5320  000402  51BA               	movf	_ic_ptr& (0+255),w,b
  5321  000404  26D9               	addwf	fsr2l,f,c
  5322  000406  0100               	movlb	0	; () banked
  5323  000408  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5324  00040A  22DA               	addwfc	fsr2h,f,c
  5325  00040C  0E21               	movlw	33
  5326  00040E  6EDF               	movwf	indf2,c
  5327                           
  5328                           ;my_i2c.c: 577: SSPBUF = ic_ptr->slave_addr | 0x1;
  5329  000410  0100               	movlb	0	; () banked
  5330  000412  EE20 F034          	lfsr	2,52
  5331  000416  0100               	movlb	0	; () banked
  5332  000418  51BA               	movf	_ic_ptr& (0+255),w,b
  5333  00041A  26D9               	addwf	fsr2l,f,c
  5334  00041C  0100               	movlb	0	; () banked
  5335  00041E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5336  000420  22DA               	addwfc	fsr2h,f,c
  5337  000422  50DF               	movf	indf2,w,c
  5338  000424  0901               	iorlw	1
  5339  000426  6EC9               	movwf	4041,c	;volatile
  5340                           
  5341                           ;my_i2c.c: 578: break;
  5342  000428  0012               	return	
  5343  00042A                     i2l364:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;my_i2c.c: 581: if (SSPCON2bits.ACKSTAT == 0) {
  5347  00042A  BCC5               	btfsc	4037,6,c	;volatile
  5348  00042C  D00D               	goto	i2l3525
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;my_i2c.c: 582: ic_ptr->status = 0x22;
  5352  00042E  0100               	movlb	0	; () banked
  5353  000430  EE20 F019          	lfsr	2,25
  5354  000434  0100               	movlb	0	; () banked
  5355  000436  51BA               	movf	_ic_ptr& (0+255),w,b
  5356  000438  26D9               	addwf	fsr2l,f,c
  5357  00043A  0100               	movlb	0	; () banked
  5358  00043C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5359  00043E  22DA               	addwfc	fsr2h,f,c
  5360  000440  0E22               	movlw	34
  5361  000442  6EDF               	movwf	indf2,c
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;my_i2c.c: 583: SSPCON2bits.RCEN = 1;
  5365  000444  86C5               	bsf	4037,3,c	;volatile
  5366                           
  5367                           ;my_i2c.c: 584: }
  5368  000446  0012               	return	
  5369  000448                     i2l3525:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;my_i2c.c: 585: else {
  5373                           ;my_i2c.c: 586: ToMainHigh_sendmsg(0, 46, 0);
  5374  000448  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5375  00044A  0E2E               	movlw	46
  5376  00044C  0100               	movlb	0	; () banked
  5377  00044E  0100               	movlb	0	; () banked
  5378  000450  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5379  000452  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5380  000454  0E00               	movlw	0
  5381  000456  0100               	movlb	0	; () banked
  5382  000458  0100               	movlb	0	; () banked
  5383  00045A  6F8D               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5384  00045C  0E00               	movlw	0
  5385  00045E  0100               	movlb	0	; () banked
  5386  000460  0100               	movlb	0	; () banked
  5387  000462  6F8C               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5388  000464  0E00               	movlw	0
  5389  000466  EC58  F009         	call	_ToMainHigh_sendmsg
  5390                           
  5391                           ;my_i2c.c: 587: ic_ptr->status = 0x5;
  5392  00046A  0100               	movlb	0	; () banked
  5393  00046C  EE20 F019          	lfsr	2,25
  5394  000470  0100               	movlb	0	; () banked
  5395  000472  51BA               	movf	_ic_ptr& (0+255),w,b
  5396  000474  26D9               	addwf	fsr2l,f,c
  5397  000476  0100               	movlb	0	; () banked
  5398  000478  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5399  00047A  22DA               	addwfc	fsr2h,f,c
  5400  00047C  0E05               	movlw	5
  5401  00047E  6EDF               	movwf	indf2,c
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;my_i2c.c: 588: SSPCON2bits.PEN = 1;
  5405  000480  84C5               	bsf	4037,2,c	;volatile
  5406  000482  0012               	return	
  5407  000484                     i2l367:
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;my_i2c.c: 593: if (SSPSTATbits.BF == 1) {
  5411  000484  A0C7               	btfss	4039,0,c	;volatile
  5412  000486  0012               	return	
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;my_i2c.c: 594: ic_ptr->status = 0x23;
  5416  000488  0100               	movlb	0	; () banked
  5417  00048A  EE20 F019          	lfsr	2,25
  5418  00048E  0100               	movlb	0	; () banked
  5419  000490  51BA               	movf	_ic_ptr& (0+255),w,b
  5420  000492  26D9               	addwf	fsr2l,f,c
  5421  000494  0100               	movlb	0	; () banked
  5422  000496  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5423  000498  22DA               	addwfc	fsr2h,f,c
  5424  00049A  0E23               	movlw	35
  5425  00049C  6EDF               	movwf	indf2,c
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;my_i2c.c: 595: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  5429  00049E  0100               	movlb	0	; () banked
  5430  0004A0  EE20 F017          	lfsr	2,23
  5431  0004A4  0100               	movlb	0	; () banked
  5432  0004A6  51BA               	movf	_ic_ptr& (0+255),w,b
  5433  0004A8  26D9               	addwf	fsr2l,f,c
  5434  0004AA  0100               	movlb	0	; () banked
  5435  0004AC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5436  0004AE  22DA               	addwfc	fsr2h,f,c
  5437  0004B0  50DF               	movf	indf2,w,c
  5438  0004B2  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5439  0004B4  503C               	movf	??_i2c_master_int_handler,w,c
  5440  0004B6  0D01               	mullw	1
  5441  0004B8  50F3               	movf	prodl,w,c
  5442  0004BA  0100               	movlb	0	; () banked
  5443  0004BC  0100               	movlb	0	; () banked
  5444  0004BE  25BA               	addwf	_ic_ptr& (0+255),w,b
  5445  0004C0  6ED9               	movwf	fsr2l,c
  5446  0004C2  50F4               	movf	prodh,w,c
  5447  0004C4  0100               	movlb	0	; () banked
  5448  0004C6  0100               	movlb	0	; () banked
  5449  0004C8  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  5450  0004CA  6EDA               	movwf	fsr2h,c
  5451  0004CC  CFC9 FFDF          	movff	4041,indf2	;volatile
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;my_i2c.c: 596: ic_ptr->bufind++;
  5455  0004D0  0100               	movlb	0	; () banked
  5456  0004D2  EE20 F017          	lfsr	2,23
  5457  0004D6  0100               	movlb	0	; () banked
  5458  0004D8  51BA               	movf	_ic_ptr& (0+255),w,b
  5459  0004DA  26D9               	addwf	fsr2l,f,c
  5460  0004DC  0100               	movlb	0	; () banked
  5461  0004DE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5462  0004E0  22DA               	addwfc	fsr2h,f,c
  5463  0004E2  2ADF               	incf	indf2,f,c
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;my_i2c.c: 597: if (ic_ptr->bufind < ic_ptr->buflen) {
  5467  0004E4  0100               	movlb	0	; () banked
  5468  0004E6  EE20 F017          	lfsr	2,23
  5469  0004EA  0100               	movlb	0	; () banked
  5470  0004EC  51BA               	movf	_ic_ptr& (0+255),w,b
  5471  0004EE  26D9               	addwf	fsr2l,f,c
  5472  0004F0  0100               	movlb	0	; () banked
  5473  0004F2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5474  0004F4  22DA               	addwfc	fsr2h,f,c
  5475  0004F6  50DF               	movf	indf2,w,c
  5476  0004F8  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5477  0004FA  0100               	movlb	0	; () banked
  5478  0004FC  EE20 F016          	lfsr	2,22
  5479  000500  0100               	movlb	0	; () banked
  5480  000502  51BA               	movf	_ic_ptr& (0+255),w,b
  5481  000504  26D9               	addwf	fsr2l,f,c
  5482  000506  0100               	movlb	0	; () banked
  5483  000508  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5484  00050A  22DA               	addwfc	fsr2h,f,c
  5485  00050C  50DF               	movf	indf2,w,c
  5486  00050E  5C3C               	subwf	??_i2c_master_int_handler,w,c
  5487  000510  B0D8               	btfsc	status,0,c
  5488  000512  D003               	goto	i2l369
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;my_i2c.c: 598: SSPCON2bits.ACKDT = 0;
  5492  000514  9AC5               	bcf	4037,5,c	;volatile
  5493                           
  5494                           ;my_i2c.c: 599: SSPCON2bits.ACKEN = 1;
  5495  000516  88C5               	bsf	4037,4,c	;volatile
  5496                           
  5497                           ;my_i2c.c: 600: }
  5498  000518  0012               	return	
  5499  00051A                     i2l369:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;my_i2c.c: 601: else {
  5503                           ;my_i2c.c: 602: SSPCON2bits.ACKDT = 1;
  5504  00051A  8AC5               	bsf	4037,5,c	;volatile
  5505                           
  5506                           ;my_i2c.c: 603: SSPCON2bits.ACKEN = 1;
  5507  00051C  88C5               	bsf	4037,4,c	;volatile
  5508  00051E  0012               	return	
  5509  000520                     i2l3541:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;my_i2c.c: 609: if (ic_ptr->bufind < ic_ptr->buflen) {
  5513  000520  0100               	movlb	0	; () banked
  5514  000522  EE20 F017          	lfsr	2,23
  5515  000526  0100               	movlb	0	; () banked
  5516  000528  51BA               	movf	_ic_ptr& (0+255),w,b
  5517  00052A  26D9               	addwf	fsr2l,f,c
  5518  00052C  0100               	movlb	0	; () banked
  5519  00052E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5520  000530  22DA               	addwfc	fsr2h,f,c
  5521  000532  50DF               	movf	indf2,w,c
  5522  000534  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5523  000536  0100               	movlb	0	; () banked
  5524  000538  EE20 F016          	lfsr	2,22
  5525  00053C  0100               	movlb	0	; () banked
  5526  00053E  51BA               	movf	_ic_ptr& (0+255),w,b
  5527  000540  26D9               	addwf	fsr2l,f,c
  5528  000542  0100               	movlb	0	; () banked
  5529  000544  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5530  000546  22DA               	addwfc	fsr2h,f,c
  5531  000548  50DF               	movf	indf2,w,c
  5532  00054A  5C3C               	subwf	??_i2c_master_int_handler,w,c
  5533  00054C  B0D8               	btfsc	status,0,c
  5534  00054E  D00D               	goto	i2l3547
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;my_i2c.c: 610: ic_ptr->status = 0x22;
  5538  000550  0100               	movlb	0	; () banked
  5539  000552  EE20 F019          	lfsr	2,25
  5540  000556  0100               	movlb	0	; () banked
  5541  000558  51BA               	movf	_ic_ptr& (0+255),w,b
  5542  00055A  26D9               	addwf	fsr2l,f,c
  5543  00055C  0100               	movlb	0	; () banked
  5544  00055E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5545  000560  22DA               	addwfc	fsr2h,f,c
  5546  000562  0E22               	movlw	34
  5547  000564  6EDF               	movwf	indf2,c
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;my_i2c.c: 611: SSPCON2bits.RCEN = 1;
  5551  000566  86C5               	bsf	4037,3,c	;volatile
  5552                           
  5553                           ;my_i2c.c: 612: }
  5554  000568  0012               	return	
  5555  00056A                     i2l3547:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;my_i2c.c: 613: else {
  5559                           ;my_i2c.c: 614: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
  5560                           ;my_i2c.c: 615: (void *)(ic_ptr->buffer));
  5561  00056A  6E3C               	movwf	??_i2c_master_int_handler& (0+255),c
  5562  00056C  0E2D               	movlw	45
  5563  00056E  0100               	movlb	0	; () banked
  5564  000570  0100               	movlb	0	; () banked
  5565  000572  6F8B               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5566  000574  503C               	movf	??_i2c_master_int_handler& (0+255),w,c
  5567  000576  0100               	movlb	0	; () banked
  5568  000578  0100               	movlb	0	; () banked
  5569  00057A  C0BB  F08D         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  5570  00057E  0100               	movlb	0	; () banked
  5571  000580  0100               	movlb	0	; () banked
  5572  000582  C0BA  F08C         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  5573  000586  0100               	movlb	0	; () banked
  5574  000588  EE20 F016          	lfsr	2,22
  5575  00058C  0100               	movlb	0	; () banked
  5576  00058E  51BA               	movf	_ic_ptr& (0+255),w,b
  5577  000590  26D9               	addwf	fsr2l,f,c
  5578  000592  0100               	movlb	0	; () banked
  5579  000594  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5580  000596  22DA               	addwfc	fsr2h,f,c
  5581  000598  50DF               	movf	indf2,w,c
  5582  00059A  EC58  F009         	call	_ToMainHigh_sendmsg
  5583                           
  5584                           ;my_i2c.c: 616: ic_ptr->status = 0x5;
  5585  00059E  0100               	movlb	0	; () banked
  5586  0005A0  EE20 F019          	lfsr	2,25
  5587  0005A4  0100               	movlb	0	; () banked
  5588  0005A6  51BA               	movf	_ic_ptr& (0+255),w,b
  5589  0005A8  26D9               	addwf	fsr2l,f,c
  5590  0005AA  0100               	movlb	0	; () banked
  5591  0005AC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5592  0005AE  22DA               	addwfc	fsr2h,f,c
  5593  0005B0  0E05               	movlw	5
  5594  0005B2  6EDF               	movwf	indf2,c
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;my_i2c.c: 617: SSPCON2bits.PEN = 1;
  5598  0005B4  84C5               	bsf	4037,2,c	;volatile
  5599  0005B6  0012               	return	
  5600  0005B8                     i2l3555:
  5601  0005B8  0100               	movlb	0	; () banked
  5602  0005BA  EE20 F019          	lfsr	2,25
  5603  0005BE  0100               	movlb	0	; () banked
  5604  0005C0  51BA               	movf	_ic_ptr& (0+255),w,b
  5605  0005C2  26D9               	addwf	fsr2l,f,c
  5606  0005C4  0100               	movlb	0	; () banked
  5607  0005C6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  5608  0005C8  22DA               	addwfc	fsr2h,f,c
  5609  0005CA  50DF               	movf	indf2,w,c
  5610                           
  5611                           ; Switch size 1, requested type "space"
  5612                           ; Number of cases is 11, Range of values is 9 to 35
  5613                           ; switch strategies available:
  5614                           ; Name         Instructions Cycles
  5615                           ; simple_byte           34    18 (average)
  5616                           ;	Chosen strategy is simple_byte
  5617  0005CC  0A09               	xorlw	9	; case 9
  5618  0005CE  B4D8               	btfsc	status,2,c
  5619  0005D0  D575               	goto	i2l3455
  5620  0005D2  0A19               	xorlw	25	; case 16
  5621  0005D4  B4D8               	btfsc	status,2,c
  5622  0005D6  D66B               	goto	i2l354
  5623  0005D8  0A01               	xorlw	1	; case 17
  5624  0005DA  B4D8               	btfsc	status,2,c
  5625  0005DC  D58A               	goto	i2l345
  5626  0005DE  0A03               	xorlw	3	; case 18
  5627  0005E0  B4D8               	btfsc	status,2,c
  5628  0005E2  D61B               	goto	i2l350
  5629  0005E4  0A01               	xorlw	1	; case 19
  5630  0005E6  B4D8               	btfsc	status,2,c
  5631  0005E8  D645               	goto	i2l3489
  5632  0005EA  0A07               	xorlw	7	; case 20
  5633  0005EC  B4D8               	btfsc	status,2,c
  5634  0005EE  D696               	goto	i2l357
  5635  0005F0  0A01               	xorlw	1	; case 21
  5636  0005F2  B4D8               	btfsc	status,2,c
  5637  0005F4  D6D5               	goto	i2l360
  5638  0005F6  0A35               	xorlw	53	; case 32
  5639  0005F8  B4D8               	btfsc	status,2,c
  5640  0005FA  D6FF               	goto	i2l3519
  5641  0005FC  0A01               	xorlw	1	; case 33
  5642  0005FE  B4D8               	btfsc	status,2,c
  5643  000600  D714               	goto	i2l364
  5644  000602  0A03               	xorlw	3	; case 34
  5645  000604  B4D8               	btfsc	status,2,c
  5646  000606  D73E               	goto	i2l367
  5647  000608  0A01               	xorlw	1	; case 35
  5648  00060A  A4D8               	btfss	status,2,c
  5649  00060C  0012               	return	
  5650  00060E  D788               	goto	i2l3541
  5651  000610                     __end_of_i2c_master_int_handler:
  5652                           	opt stack 0
  5653                           pclatu	equ	0xFFB
  5654                           pclath	equ	0xFFA
  5655                           tblptru	equ	0xFF8
  5656                           tblptrh	equ	0xFF7
  5657                           tblptrl	equ	0xFF6
  5658                           tablat	equ	0xFF5
  5659                           prodh	equ	0xFF4
  5660                           prodl	equ	0xFF3
  5661                           intcon	equ	0xFF2
  5662                           postinc0	equ	0xFEE
  5663                           fsr0h	equ	0xFEA
  5664                           fsr0l	equ	0xFE9
  5665                           wreg	equ	0xFE8
  5666                           indf1	equ	0xFE7
  5667                           fsr1h	equ	0xFE2
  5668                           fsr1l	equ	0xFE1
  5669                           bsr	equ	0xFE0
  5670                           indf2	equ	0xFDF
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           
  5675 ;; *************** function _ToMainHigh_sendmsg *****************
  5676 ;; Defined at:
  5677 ;;		line 126 in file "../src/messages.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  length          1    wreg     unsigned char 
  5680 ;;  msgtype         1   11[BANK0 ] unsigned char 
  5681 ;;  data            2   12[BANK0 ] PTR void 
  5682 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(77), 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  length          1   58[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      char 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5694 ;;      Params:         0       3       0       0       0
  5695 ;;      Locals:         1       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0
  5697 ;;      Totals:         1       3       0       0       0
  5698 ;;Total ram usage:        4 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    2
  5701 ;; This function calls:
  5702 ;;		i2_send_msg
  5703 ;; This function is called by:
  5704 ;;		_i2c_master_int_handler
  5705 ;;		_i2c_slave_int_handler
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text35
  5710  0012B0                     __ptext35:
  5711                           	opt stack 0
  5712  0012B0                     _ToMainHigh_sendmsg:
  5713                           	opt stack 17
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;incstack = 0
  5717                           ;ToMainHigh_sendmsg@length stored from wreg
  5718  0012B0  CFE8 F03B          	movff	wreg,ToMainHigh_sendmsg@length
  5719                           
  5720                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5721                           ;	Return value of _ToMainHigh_sendmsg is never used
  5722  0012B4  0102               	movlb	2	; () banked
  5723  0012B6  0E02               	movlw	high _ToMainHigh_MQ
  5724  0012B8  0100               	movlb	0	; () banked
  5725  0012BA  0100               	movlb	0	; () banked
  5726  0012BC  6F81               	movwf	(i2send_msg@qptr+1)& (0+255),b
  5727  0012BE  0102               	movlb	2	; () banked
  5728  0012C0  0E66               	movlw	low _ToMainHigh_MQ
  5729  0012C2  0100               	movlb	0	; () banked
  5730  0012C4  0100               	movlb	0	; () banked
  5731  0012C6  6F80               	movwf	i2send_msg@qptr& (0+255),b
  5732  0012C8  C03B  F082         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  5733  0012CC  C08B  F083         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  5734  0012D0  0100               	movlb	0	; () banked
  5735  0012D2  0100               	movlb	0	; () banked
  5736  0012D4  C08D  F085         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  5737  0012D8  0100               	movlb	0	; () banked
  5738  0012DA  0100               	movlb	0	; () banked
  5739  0012DC  C08C  F084         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  5740  0012E0  EC3F  F004         	call	i2_send_msg	;wreg free
  5741  0012E4  0012               	return	
  5742  0012E6                     __end_of_ToMainHigh_sendmsg:
  5743                           	opt stack 0
  5744                           pclatu	equ	0xFFB
  5745                           pclath	equ	0xFFA
  5746                           tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           prodh	equ	0xFF4
  5751                           prodl	equ	0xFF3
  5752                           intcon	equ	0xFF2
  5753                           postinc0	equ	0xFEE
  5754                           fsr0h	equ	0xFEA
  5755                           fsr0l	equ	0xFE9
  5756                           wreg	equ	0xFE8
  5757                           indf1	equ	0xFE7
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           bsr	equ	0xFE0
  5761                           indf2	equ	0xFDF
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function i2_send_msg *****************
  5767 ;; Defined at:
  5768 ;;		line 24 in file "../src/messages.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  5771 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5772 ;;  length          1    2[BANK0 ] unsigned char 
  5773 ;;  msgtype         1    3[BANK0 ] unsigned char 
  5774 ;;  data            2    4[BANK0 ] PTR void 
  5775 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(77), 
  5776 ;;		 -> main@uc(23), 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  5779 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5780 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5781 ;;  send_msg        2    6[BANK0 ] unsigned int 
  5782 ;;  send_msg        1    8[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      char 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5792 ;;      Params:         0       6       0       0       0
  5793 ;;      Locals:         0       5       0       0       0
  5794 ;;      Temps:          1       0       0       0       0
  5795 ;;      Totals:         1      11       0       0       0
  5796 ;;Total ram usage:       12 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    1
  5799 ;; This function calls:
  5800 ;;		i2_memcpy
  5801 ;; This function is called by:
  5802 ;;		_ToMainHigh_sendmsg
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text36
  5807  00087E                     __ptext36:
  5808                           	opt stack 0
  5809  00087E                     i2_send_msg:
  5810                           	opt stack 17
  5811                           
  5812                           ;messages.c: 25: unsigned char slot;
  5813                           ;messages.c: 27: msg *qmsg;
  5814                           ;messages.c: 28: size_t tlength = length;
  5815                           
  5816                           ;incstack = 0
  5817  00087E  0100               	movlb	0	; () banked
  5818  000880  0100               	movlb	0	; () banked
  5819  000882  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  5820  000886  0100               	movlb	0	; () banked
  5821  000888  0100               	movlb	0	; () banked
  5822  00088A  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5826  00088C  0100               	movlb	0	; () banked
  5827  00088E  EE20 F064          	lfsr	2,100
  5828  000892  0100               	movlb	0	; () banked
  5829  000894  5180               	movf	i2send_msg@qptr& (0+255),w,b
  5830  000896  26D9               	addwf	fsr2l,f,c
  5831  000898  0100               	movlb	0	; () banked
  5832  00089A  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  5833  00089C  22DA               	addwfc	fsr2h,f,c
  5834  00089E  50DF               	movf	indf2,w,c
  5835  0008A0  0100               	movlb	0	; () banked
  5836  0008A2  0100               	movlb	0	; () banked
  5837  0008A4  6F88               	movwf	i2send_msg@slot& (0+255),b
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5841  0008A6  0100               	movlb	0	; () banked
  5842  0008A8  0100               	movlb	0	; () banked
  5843  0008AA  5188               	movf	i2send_msg@slot& (0+255),w,b
  5844  0008AC  0D19               	mullw	25
  5845  0008AE  50F3               	movf	prodl,w,c
  5846  0008B0  0100               	movlb	0	; () banked
  5847  0008B2  0100               	movlb	0	; () banked
  5848  0008B4  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  5849  0008B6  0100               	movlb	0	; () banked
  5850  0008B8  0100               	movlb	0	; () banked
  5851  0008BA  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  5852  0008BC  50F4               	movf	prodh,w,c
  5853  0008BE  0100               	movlb	0	; () banked
  5854  0008C0  0100               	movlb	0	; () banked
  5855  0008C2  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  5856  0008C4  0100               	movlb	0	; () banked
  5857  0008C6  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;messages.c: 41: if (qmsg->full != 0) {
  5861  0008C8  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  5862  0008CC  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  5863  0008D0  50DF               	movf	indf2,w,c
  5864  0008D2  B4D8               	btfsc	status,2,c
  5865  0008D4  D002               	goto	i2l3725
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;messages.c: 42: return (-1);
  5869  0008D6  0EFF               	movlw	255
  5870  0008D8  0012               	return	
  5871  0008DA                     i2l3725:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;messages.c: 43: }
  5875                           ;messages.c: 46: qmsg->length = length;
  5876  0008DA  0100               	movlb	0	; () banked
  5877  0008DC  EE20 F001          	lfsr	2,1
  5878  0008E0  0100               	movlb	0	; () banked
  5879  0008E2  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  5880  0008E4  26D9               	addwf	fsr2l,f,c
  5881  0008E6  0100               	movlb	0	; () banked
  5882  0008E8  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  5883  0008EA  22DA               	addwfc	fsr2h,f,c
  5884  0008EC  0100               	movlb	0	; () banked
  5885  0008EE  C082  FFDF         	movff	i2send_msg@length,indf2
  5886                           
  5887                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5888  0008F2  0100               	movlb	0	; () banked
  5889  0008F4  EE20 F002          	lfsr	2,2
  5890  0008F8  0100               	movlb	0	; () banked
  5891  0008FA  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  5892  0008FC  26D9               	addwf	fsr2l,f,c
  5893  0008FE  0100               	movlb	0	; () banked
  5894  000900  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  5895  000902  22DA               	addwfc	fsr2h,f,c
  5896  000904  0100               	movlb	0	; () banked
  5897  000906  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5901  00090A  0E03               	movlw	3
  5902  00090C  0100               	movlb	0	; () banked
  5903  00090E  0100               	movlb	0	; () banked
  5904  000910  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  5905  000912  6E30               	movwf	i2memcpy@d1,c
  5906  000914  0E00               	movlw	0
  5907  000916  0100               	movlb	0	; () banked
  5908  000918  0100               	movlb	0	; () banked
  5909  00091A  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  5910  00091C  6E31               	movwf	i2memcpy@d1+1,c
  5911  00091E  0100               	movlb	0	; () banked
  5912  000920  C085  F033         	movff	i2send_msg@data+1,i2memcpy@s1+1
  5913  000924  0100               	movlb	0	; () banked
  5914  000926  C084  F032         	movff	i2send_msg@data,i2memcpy@s1
  5915  00092A  C086  F034         	movff	i2send_msg@tlength,i2memcpy@n
  5916  00092E  C087  F035         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  5917  000932  EC1D  F009         	call	i2_memcpy	;wreg free
  5918                           
  5919                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5920  000936  0100               	movlb	0	; () banked
  5921  000938  EE20 F064          	lfsr	2,100
  5922  00093C  0100               	movlb	0	; () banked
  5923  00093E  5180               	movf	i2send_msg@qptr& (0+255),w,b
  5924  000940  26D9               	addwf	fsr2l,f,c
  5925  000942  0100               	movlb	0	; () banked
  5926  000944  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  5927  000946  22DA               	addwfc	fsr2h,f,c
  5928  000948  0100               	movlb	0	; () banked
  5929  00094A  EE10 F064          	lfsr	1,100
  5930  00094E  0100               	movlb	0	; () banked
  5931  000950  5180               	movf	i2send_msg@qptr& (0+255),w,b
  5932  000952  26E1               	addwf	fsr1l,f,c
  5933  000954  0100               	movlb	0	; () banked
  5934  000956  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  5935  000958  22E2               	addwfc	fsr1h,f,c
  5936  00095A  50E7               	movf	indf1,w,c
  5937  00095C  6E3A               	movwf	??i2_send_msg& (0+255),c
  5938  00095E  283A               	incf	??i2_send_msg,w,c
  5939  000960  0B03               	andlw	3
  5940  000962  6EDF               	movwf	indf2,c
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;messages.c: 59: qmsg->full = 1;
  5944  000964  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  5945  000968  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  5946  00096C  0E01               	movlw	1
  5947  00096E  6EDF               	movwf	indf2,c
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;messages.c: 60: return (1);
  5951  000970  0E01               	movlw	1
  5952  000972  0012               	return	
  5953  000974                     __end_ofi2_send_msg:
  5954                           	opt stack 0
  5955                           pclatu	equ	0xFFB
  5956                           pclath	equ	0xFFA
  5957                           tblptru	equ	0xFF8
  5958                           tblptrh	equ	0xFF7
  5959                           tblptrl	equ	0xFF6
  5960                           tablat	equ	0xFF5
  5961                           prodh	equ	0xFF4
  5962                           prodl	equ	0xFF3
  5963                           intcon	equ	0xFF2
  5964                           postinc0	equ	0xFEE
  5965                           fsr0h	equ	0xFEA
  5966                           fsr0l	equ	0xFE9
  5967                           wreg	equ	0xFE8
  5968                           indf1	equ	0xFE7
  5969                           fsr1h	equ	0xFE2
  5970                           fsr1l	equ	0xFE1
  5971                           bsr	equ	0xFE0
  5972                           indf2	equ	0xFDF
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function i2_memcpy *****************
  5978 ;; Defined at:
  5979 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  d1              2   47[COMRAM] PTR void 
  5982 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5983 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5984 ;;		 -> main@msgbuffer(23), 
  5985 ;;  s1              2   49[COMRAM] PTR const void 
  5986 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5987 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5988 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  5989 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), 
  5990 ;;		 -> main@uc(23), 
  5991 ;;  n               2   51[COMRAM] unsigned int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  memcpy          2   55[COMRAM] PTR const unsigned char 
  5994 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5995 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5996 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(102), 
  5997 ;;		 -> FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), main@ic(77), 
  5998 ;;		 -> main@uc(23), 
  5999 ;;  memcpy          2   53[COMRAM] PTR unsigned char 
  6000 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6001 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6002 ;;		 -> main@msgbuffer(23), 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  2   47[COMRAM] PTR void 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6012 ;;      Params:         6       0       0       0       0
  6013 ;;      Locals:         4       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0
  6015 ;;      Totals:        10       0       0       0       0
  6016 ;;Total ram usage:       10 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		i2_send_msg
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text37
  6026  00123A                     __ptext37:
  6027                           	opt stack 0
  6028  00123A                     i2_memcpy:
  6029                           	opt stack 17
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;incstack = 0
  6033  00123A  C033  F039         	movff	i2memcpy@s1+1,i2memcpy@s+1
  6034  00123E  C032  F038         	movff	i2memcpy@s1,i2memcpy@s
  6035  001242  C031  F037         	movff	i2memcpy@d1+1,i2memcpy@d+1
  6036  001246  C030  F036         	movff	i2memcpy@d1,i2memcpy@d
  6037  00124A  D00E               	goto	i2l3745
  6038  00124C                     i2l3739:
  6039  00124C  C038  FFD9         	movff	i2memcpy@s,fsr2l
  6040  001250  C039  FFDA         	movff	i2memcpy@s+1,fsr2h
  6041  001254  C036  FFE1         	movff	i2memcpy@d,fsr1l
  6042  001258  C037  FFE2         	movff	i2memcpy@d+1,fsr1h
  6043  00125C  CFDF FFE7          	movff	indf2,indf1
  6044  001260  4A38               	infsnz	i2memcpy@s,f,c
  6045  001262  2A39               	incf	i2memcpy@s+1,f,c
  6046  001264  4A36               	infsnz	i2memcpy@d,f,c
  6047  001266  2A37               	incf	i2memcpy@d+1,f,c
  6048  001268                     i2l3745:
  6049  001268  0634               	decf	i2memcpy@n,f,c
  6050  00126A  A0D8               	btfss	status,0,c
  6051  00126C  0635               	decf	i2memcpy@n+1,f,c
  6052  00126E  2834               	incf	i2memcpy@n& (0+255),w,c
  6053  001270  B4D8               	btfsc	status,2,c
  6054  001272  2835               	incf	(i2memcpy@n+1)& (0+255),w,c
  6055  001274  B4D8               	btfsc	status,2,c
  6056                           
  6057                           ;	Return value of i2_memcpy is never used
  6058  001276  0012               	return	
  6059  001278  D7E9               	goto	i2l3739
  6060  00127A                     __end_ofi2_memcpy:
  6061                           	opt stack 0
  6062                           pclatu	equ	0xFFB
  6063                           pclath	equ	0xFFA
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           prodh	equ	0xFF4
  6069                           prodl	equ	0xFF3
  6070                           intcon	equ	0xFF2
  6071                           postinc0	equ	0xFEE
  6072                           fsr0h	equ	0xFEA
  6073                           fsr0l	equ	0xFE9
  6074                           wreg	equ	0xFE8
  6075                           indf1	equ	0xFE7
  6076                           fsr1h	equ	0xFE2
  6077                           fsr1l	equ	0xFE1
  6078                           bsr	equ	0xFE0
  6079                           indf2	equ	0xFDF
  6080                           fsr2h	equ	0xFDA
  6081                           fsr2l	equ	0xFD9
  6082                           status	equ	0xFD8
  6083                           
  6084 ;; *************** function _adc_int_handler *****************
  6085 ;; Defined at:
  6086 ;;		line 56 in file "../src/user_interrupts.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  result          2   51[COMRAM] unsigned int 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;		None               void
  6093 ;; Registers used:
  6094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6100 ;;      Params:         0       0       0       0       0
  6101 ;;      Locals:         2       0       0       0       0
  6102 ;;      Temps:          2       0       0       0       0
  6103 ;;      Totals:         4       0       0       0       0
  6104 ;;Total ram usage:        4 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    1
  6107 ;; This function calls:
  6108 ;;		_ReadADC
  6109 ;; This function is called by:
  6110 ;;		_InterruptHandlerHigh
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text38
  6115  00136E                     __ptext38:
  6116                           	opt stack 0
  6117  00136E                     _adc_int_handler:
  6118                           	opt stack 19
  6119                           
  6120                           ;user_interrupts.c: 58: unsigned int result;
  6121                           ;user_interrupts.c: 59: result = ReadADC();
  6122                           
  6123                           ;incstack = 0
  6124  00136E  EC48  F00A         	call	_ReadADC	;wreg free
  6125  001372  C030  F034         	movff	?_ReadADC,adc_int_handler@result
  6126  001376  C031  F035         	movff	?_ReadADC+1,adc_int_handler@result+1
  6127                           
  6128                           ;user_interrupts.c: 60: result = result /4;
  6129  00137A  C034  F032         	movff	adc_int_handler@result,??_adc_int_handler
  6130  00137E  C035  F033         	movff	adc_int_handler@result+1,??_adc_int_handler+1
  6131  001382  90D8               	bcf	status,0,c
  6132  001384  3233               	rrcf	??_adc_int_handler+1,f,c
  6133  001386  3232               	rrcf	??_adc_int_handler,f,c
  6134  001388  90D8               	bcf	status,0,c
  6135  00138A  3233               	rrcf	??_adc_int_handler+1,f,c
  6136  00138C  3232               	rrcf	??_adc_int_handler,f,c
  6137  00138E  C032  F034         	movff	??_adc_int_handler,adc_int_handler@result
  6138  001392  C033  F035         	movff	??_adc_int_handler+1,adc_int_handler@result+1
  6139  001396  0012               	return	
  6140  001398                     __end_of_adc_int_handler:
  6141                           	opt stack 0
  6142                           pclatu	equ	0xFFB
  6143                           pclath	equ	0xFFA
  6144                           tblptru	equ	0xFF8
  6145                           tblptrh	equ	0xFF7
  6146                           tblptrl	equ	0xFF6
  6147                           tablat	equ	0xFF5
  6148                           prodh	equ	0xFF4
  6149                           prodl	equ	0xFF3
  6150                           intcon	equ	0xFF2
  6151                           postinc0	equ	0xFEE
  6152                           fsr0h	equ	0xFEA
  6153                           fsr0l	equ	0xFE9
  6154                           wreg	equ	0xFE8
  6155                           indf1	equ	0xFE7
  6156                           fsr1h	equ	0xFE2
  6157                           fsr1l	equ	0xFE1
  6158                           bsr	equ	0xFE0
  6159                           indf2	equ	0xFDF
  6160                           fsr2h	equ	0xFDA
  6161                           fsr2l	equ	0xFD9
  6162                           status	equ	0xFD8
  6163                           
  6164 ;; *************** function _ReadADC *****************
  6165 ;; Defined at:
  6166 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2   47[COMRAM] int 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6180 ;;      Params:         2       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0
  6183 ;;      Totals:         2       0       0       0       0
  6184 ;;Total ram usage:        2 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_adc_int_handler
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text39
  6194  001490                     __ptext39:
  6195                           	opt stack 0
  6196  001490                     _ReadADC:
  6197                           	opt stack 19
  6198                           
  6199                           ;incstack = 0
  6200  001490  50C4               	movf	4036,w,c	;volatile
  6201  001492  6E31               	movwf	?_ReadADC+1,c
  6202  001494  50C3               	movf	4035,w,c	;volatile
  6203  001496  6E30               	movwf	?_ReadADC,c
  6204  001498  0012               	return	
  6205  00149A                     __end_of_ReadADC:
  6206                           	opt stack 0
  6207                           pclatu	equ	0xFFB
  6208                           pclath	equ	0xFFA
  6209                           tblptru	equ	0xFF8
  6210                           tblptrh	equ	0xFF7
  6211                           tblptrl	equ	0xFF6
  6212                           tablat	equ	0xFF5
  6213                           prodh	equ	0xFF4
  6214                           prodl	equ	0xFF3
  6215                           intcon	equ	0xFF2
  6216                           postinc0	equ	0xFEE
  6217                           fsr0h	equ	0xFEA
  6218                           fsr0l	equ	0xFE9
  6219                           wreg	equ	0xFE8
  6220                           indf1	equ	0xFE7
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           bsr	equ	0xFE0
  6224                           indf2	equ	0xFDF
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8
  6228                           
  6229 ;; *************** function _SleepIfOkay *****************
  6230 ;; Defined at:
  6231 ;;		line 228 in file "../src/messages.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;		None               void
  6238 ;; Registers used:
  6239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6245 ;;      Params:         0       0       0       0       0
  6246 ;;      Locals:         0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0
  6248 ;;      Totals:         0       0       0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    2
  6252 ;; This function calls:
  6253 ;;		_enter_sleep_mode
  6254 ;;		i2_check_msg
  6255 ;;		i2_in_high_int
  6256 ;;		i2_in_low_int
  6257 ;; This function is called by:
  6258 ;;		_InterruptHandlerHigh
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text40
  6263  00105C                     __ptext40:
  6264                           	opt stack 0
  6265  00105C                     _SleepIfOkay:
  6266                           	opt stack 18
  6267                           
  6268                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  6269                           
  6270                           ;incstack = 0
  6271  00105C  6649               	tstfsz	_MQ_Main_Willing_to_block,c
  6272  00105E  D001               	goto	i2l2591
  6273  001060  0012               	return	
  6274  001062                     i2l2591:
  6275                           
  6276                           ;messages.c: 232: }
  6277                           ;messages.c: 235: if (in_low_int()) {
  6278  001062  EC8B  F009         	call	i2_in_low_int	;wreg free
  6279  001066  5033               	movf	?i2_in_low_int+1,w,c
  6280  001068  1032               	iorwf	?i2_in_low_int,w,c
  6281  00106A  A4D8               	btfss	status,2,c
  6282  00106C  0012               	return	
  6283                           
  6284                           ;messages.c: 237: }
  6285                           ;messages.c: 240: if (!in_high_int()) {
  6286                           
  6287                           ;messages.c: 236: return;
  6288  00106E  EC42  F00A         	call	i2_in_high_int	;wreg free
  6289  001072  5031               	movf	?i2_in_high_int+1,w,c
  6290  001074  1030               	iorwf	?i2_in_high_int,w,c
  6291  001076  B4D8               	btfsc	status,2,c
  6292  001078  0012               	return	
  6293                           
  6294                           ;messages.c: 242: }
  6295                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  6296                           
  6297                           ;messages.c: 241: return;
  6298  00107A  0102               	movlb	2	; () banked
  6299  00107C  0E02               	movlw	high _ToMainHigh_MQ
  6300  00107E  6E31               	movwf	i2check_msg@qptr+1,c
  6301  001080  0102               	movlb	2	; () banked
  6302  001082  0E66               	movlw	low _ToMainHigh_MQ
  6303  001084  6E30               	movwf	i2check_msg@qptr,c
  6304  001086  ECDF  F009         	call	i2_check_msg	;wreg free
  6305  00108A  0900               	iorlw	0
  6306  00108C  A4D8               	btfss	status,2,c
  6307  00108E  0012               	return	
  6308                           
  6309                           ;messages.c: 249: }
  6310                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  6311                           
  6312                           ;messages.c: 248: return;
  6313  001090  0101               	movlb	1	; () banked
  6314  001092  0E01               	movlw	high _ToMainLow_MQ
  6315  001094  6E31               	movwf	i2check_msg@qptr+1,c
  6316  001096  0101               	movlb	1	; () banked
  6317  001098  0E7E               	movlw	low _ToMainLow_MQ
  6318  00109A  6E30               	movwf	i2check_msg@qptr,c
  6319  00109C  ECDF  F009         	call	i2_check_msg	;wreg free
  6320  0010A0  0900               	iorlw	0
  6321  0010A2  B4D8               	btfsc	status,2,c
  6322                           
  6323                           ;messages.c: 252: }
  6324                           ;messages.c: 253: enter_sleep_mode();
  6325                           
  6326                           ;messages.c: 251: return;
  6327  0010A4  EC51  F00A         	call	_enter_sleep_mode	;wreg free
  6328  0010A8  0012               	return	
  6329  0010AA                     __end_of_SleepIfOkay:
  6330                           	opt stack 0
  6331                           pclatu	equ	0xFFB
  6332                           pclath	equ	0xFFA
  6333                           tblptru	equ	0xFF8
  6334                           tblptrh	equ	0xFF7
  6335                           tblptrl	equ	0xFF6
  6336                           tablat	equ	0xFF5
  6337                           prodh	equ	0xFF4
  6338                           prodl	equ	0xFF3
  6339                           intcon	equ	0xFF2
  6340                           postinc0	equ	0xFEE
  6341                           fsr0h	equ	0xFEA
  6342                           fsr0l	equ	0xFE9
  6343                           wreg	equ	0xFE8
  6344                           indf1	equ	0xFE7
  6345                           fsr1h	equ	0xFE2
  6346                           fsr1l	equ	0xFE1
  6347                           bsr	equ	0xFE0
  6348                           indf2	equ	0xFDF
  6349                           fsr2h	equ	0xFDA
  6350                           fsr2l	equ	0xFD9
  6351                           status	equ	0xFD8
  6352                           
  6353 ;; *************** function i2_in_low_int *****************
  6354 ;; Defined at:
  6355 ;;		line 30 in file "../src/interrupts.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  2   49[COMRAM] int 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6369 ;;      Params:         2       0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0
  6372 ;;      Totals:         2       0       0       0       0
  6373 ;;Total ram usage:        2 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    1
  6376 ;; This function calls:
  6377 ;;		i2_in_high_int
  6378 ;; This function is called by:
  6379 ;;		_SleepIfOkay
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text41
  6384  001316                     __ptext41:
  6385                           	opt stack 0
  6386  001316                     i2_in_low_int:
  6387                           	opt stack 18
  6388                           
  6389                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  6390                           
  6391                           ;incstack = 0
  6392  001316  ACF2               	btfss	intcon,6,c	;volatile
  6393  001318  D005               	goto	i2l3295
  6394                           
  6395                           ;interrupts.c: 32: return (0);
  6396  00131A  0E00               	movlw	0
  6397  00131C  6E33               	movwf	?i2_in_low_int+1,c
  6398  00131E  0E00               	movlw	0
  6399  001320  6E32               	movwf	?i2_in_low_int,c
  6400  001322  0012               	return	
  6401  001324                     i2l3295:
  6402  001324  EC42  F00A         	call	i2_in_high_int	;wreg free
  6403  001328  5031               	movf	?i2_in_high_int+1,w,c
  6404  00132A  1030               	iorwf	?i2_in_high_int,w,c
  6405  00132C  B4D8               	btfsc	status,2,c
  6406  00132E  D005               	goto	i2l3303
  6407                           
  6408                           ;interrupts.c: 34: return (0);
  6409  001330  0E00               	movlw	0
  6410  001332  6E33               	movwf	?i2_in_low_int+1,c
  6411  001334  0E00               	movlw	0
  6412  001336  6E32               	movwf	?i2_in_low_int,c
  6413  001338  0012               	return	
  6414  00133A                     i2l3303:
  6415                           
  6416                           ;interrupts.c: 36: return (1);
  6417  00133A  0E00               	movlw	0
  6418  00133C  6E33               	movwf	?i2_in_low_int+1,c
  6419  00133E  0E01               	movlw	1
  6420  001340  6E32               	movwf	?i2_in_low_int,c
  6421  001342  0012               	return	
  6422  001344                     __end_ofi2_in_low_int:
  6423                           	opt stack 0
  6424                           pclatu	equ	0xFFB
  6425                           pclath	equ	0xFFA
  6426                           tblptru	equ	0xFF8
  6427                           tblptrh	equ	0xFF7
  6428                           tblptrl	equ	0xFF6
  6429                           tablat	equ	0xFF5
  6430                           prodh	equ	0xFF4
  6431                           prodl	equ	0xFF3
  6432                           intcon	equ	0xFF2
  6433                           postinc0	equ	0xFEE
  6434                           fsr0h	equ	0xFEA
  6435                           fsr0l	equ	0xFE9
  6436                           wreg	equ	0xFE8
  6437                           indf1	equ	0xFE7
  6438                           fsr1h	equ	0xFE2
  6439                           fsr1l	equ	0xFE1
  6440                           bsr	equ	0xFE0
  6441                           indf2	equ	0xFDF
  6442                           fsr2h	equ	0xFDA
  6443                           fsr2l	equ	0xFD9
  6444                           status	equ	0xFD8
  6445                           
  6446 ;; *************** function i2_in_high_int *****************
  6447 ;; Defined at:
  6448 ;;		line 22 in file "../src/interrupts.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  2   47[COMRAM] int 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6462 ;;      Params:         2       0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0
  6465 ;;      Totals:         2       0       0       0       0
  6466 ;;Total ram usage:        2 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_SleepIfOkay
  6472 ;;		i2_in_low_int
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text42
  6477  001484                     __ptext42:
  6478                           	opt stack 0
  6479  001484                     i2_in_high_int:
  6480                           	opt stack 18
  6481                           
  6482                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  6483                           
  6484                           ;incstack = 0
  6485  001484  0E00               	movlw	0
  6486  001486  AEF2               	btfss	intcon,7,c	;volatile
  6487  001488  0E01               	movlw	1
  6488  00148A  6E30               	movwf	?i2_in_high_int,c
  6489  00148C  6A31               	clrf	?i2_in_high_int+1,c
  6490  00148E  0012               	return	
  6491  001490                     __end_ofi2_in_high_int:
  6492                           	opt stack 0
  6493                           pclatu	equ	0xFFB
  6494                           pclath	equ	0xFFA
  6495                           tblptru	equ	0xFF8
  6496                           tblptrh	equ	0xFF7
  6497                           tblptrl	equ	0xFF6
  6498                           tablat	equ	0xFF5
  6499                           prodh	equ	0xFF4
  6500                           prodl	equ	0xFF3
  6501                           intcon	equ	0xFF2
  6502                           postinc0	equ	0xFEE
  6503                           fsr0h	equ	0xFEA
  6504                           fsr0l	equ	0xFE9
  6505                           wreg	equ	0xFE8
  6506                           indf1	equ	0xFE7
  6507                           fsr1h	equ	0xFE2
  6508                           fsr1l	equ	0xFE1
  6509                           bsr	equ	0xFE0
  6510                           indf2	equ	0xFDF
  6511                           fsr2h	equ	0xFDA
  6512                           fsr2l	equ	0xFD9
  6513                           status	equ	0xFD8
  6514                           
  6515 ;; *************** function i2_check_msg *****************
  6516 ;; Defined at:
  6517 ;;		line 222 in file "../src/messages.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  qptr            2   47[COMRAM] PTR struct __msg_queue
  6520 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      unsigned char 
  6525 ;; Registers used:
  6526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6532 ;;      Params:         2       0       0       0       0
  6533 ;;      Locals:         0       0       0       0       0
  6534 ;;      Temps:          1       0       0       0       0
  6535 ;;      Totals:         3       0       0       0       0
  6536 ;;Total ram usage:        3 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_SleepIfOkay
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text43
  6546  0013BE                     __ptext43:
  6547                           	opt stack 0
  6548  0013BE                     i2_check_msg:
  6549                           	opt stack 19
  6550                           
  6551                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  6552                           
  6553                           ;incstack = 0
  6554  0013BE  EE20 F065          	lfsr	2,101
  6555  0013C2  5030               	movf	i2check_msg@qptr,w,c
  6556  0013C4  26D9               	addwf	fsr2l,f,c
  6557  0013C6  5031               	movf	i2check_msg@qptr+1,w,c
  6558  0013C8  22DA               	addwfc	fsr2h,f,c
  6559  0013CA  50DF               	movf	indf2,w,c
  6560  0013CC  6E32               	movwf	??i2_check_msg& (0+255),c
  6561  0013CE  5032               	movf	??i2_check_msg,w,c
  6562  0013D0  0D19               	mullw	25
  6563  0013D2  50F3               	movf	prodl,w,c
  6564  0013D4  2430               	addwf	i2check_msg@qptr,w,c
  6565  0013D6  6ED9               	movwf	fsr2l,c
  6566  0013D8  50F4               	movf	prodh,w,c
  6567  0013DA  2031               	addwfc	i2check_msg@qptr+1,w,c
  6568  0013DC  6EDA               	movwf	fsr2h,c
  6569  0013DE  50DF               	movf	indf2,w,c
  6570  0013E0  0012               	return	
  6571  0013E2                     __end_ofi2_check_msg:
  6572                           	opt stack 0
  6573                           pclatu	equ	0xFFB
  6574                           pclath	equ	0xFFA
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodh	equ	0xFF4
  6580                           prodl	equ	0xFF3
  6581                           intcon	equ	0xFF2
  6582                           postinc0	equ	0xFEE
  6583                           fsr0h	equ	0xFEA
  6584                           fsr0l	equ	0xFE9
  6585                           wreg	equ	0xFE8
  6586                           indf1	equ	0xFE7
  6587                           fsr1h	equ	0xFE2
  6588                           fsr1l	equ	0xFE1
  6589                           bsr	equ	0xFE0
  6590                           indf2	equ	0xFDF
  6591                           fsr2h	equ	0xFDA
  6592                           fsr2l	equ	0xFD9
  6593                           status	equ	0xFD8
  6594                           
  6595 ;; *************** function _enter_sleep_mode *****************
  6596 ;; Defined at:
  6597 ;;		line 202 in file "../src/messages.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;		None               void
  6604 ;; Registers used:
  6605 ;;		None
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6611 ;;      Params:         0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_SleepIfOkay
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text44
  6625  0014A2                     __ptext44:
  6626                           	opt stack 0
  6627  0014A2                     _enter_sleep_mode:
  6628                           	opt stack 19
  6629                           
  6630                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  6631                           
  6632                           ;incstack = 0
  6633  0014A2  8ED3               	bsf	4051,7,c	;volatile
  6634  0014A4  0003               	sleep		;# 
  6635  0014A6  0012               	return	
  6636  0014A8                     __end_of_enter_sleep_mode:
  6637                           	opt stack 0
  6638  0000                     pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           postinc0	equ	0xFEE
  6648                           fsr0h	equ	0xFEA
  6649                           fsr0l	equ	0xFE9
  6650                           wreg	equ	0xFE8
  6651                           indf1	equ	0xFE7
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           bsr	equ	0xFE0
  6655                           indf2	equ	0xFDF
  6656                           fsr2h	equ	0xFDA
  6657                           fsr2l	equ	0xFD9
  6658                           status	equ	0xFD8
  6659                           pclatu	equ	0xFFB
  6660                           pclath	equ	0xFFA
  6661                           tblptru	equ	0xFF8
  6662                           tblptrh	equ	0xFF7
  6663                           tblptrl	equ	0xFF6
  6664                           tablat	equ	0xFF5
  6665                           prodh	equ	0xFF4
  6666                           prodl	equ	0xFF3
  6667                           intcon	equ	0xFF2
  6668                           postinc0	equ	0xFEE
  6669                           fsr0h	equ	0xFEA
  6670                           fsr0l	equ	0xFE9
  6671                           wreg	equ	0xFE8
  6672                           indf1	equ	0xFE7
  6673                           fsr1h	equ	0xFE2
  6674                           fsr1l	equ	0xFE1
  6675                           bsr	equ	0xFE0
  6676                           indf2	equ	0xFDF
  6677                           fsr2h	equ	0xFDA
  6678                           fsr2l	equ	0xFD9
  6679                           status	equ	0xFD8
  6680                           
  6681                           	psect	rparam
  6682  0000                     pclatu	equ	0xFFB
  6683                           pclath	equ	0xFFA
  6684                           tblptru	equ	0xFF8
  6685                           tblptrh	equ	0xFF7
  6686                           tblptrl	equ	0xFF6
  6687                           tablat	equ	0xFF5
  6688                           prodh	equ	0xFF4
  6689                           prodl	equ	0xFF3
  6690                           intcon	equ	0xFF2
  6691                           postinc0	equ	0xFEE
  6692                           fsr0h	equ	0xFEA
  6693                           fsr0l	equ	0xFE9
  6694                           wreg	equ	0xFE8
  6695                           indf1	equ	0xFE7
  6696                           fsr1h	equ	0xFE2
  6697                           fsr1l	equ	0xFE1
  6698                           bsr	equ	0xFE0
  6699                           indf2	equ	0xFDF
  6700                           fsr2h	equ	0xFDA
  6701                           fsr2l	equ	0xFD9
  6702                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         424
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      80
    BANK0           128     58      60
    BANK1           256    126     228
    BANK2           256      0     204
    BANK3           256      0     102

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), main@ic(BANK1[77]), 
		 -> main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK1[22]), ToMainHigh_MQ.data(BANK2[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK1[22]), ToMainHigh_MQ.queue.data(BANK2[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK3[102]), 
		 -> FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), main@ic(BANK1[77]), 
		 -> main@uc(BANK1[23]), 

    uart_write@msg	PTR unsigned char  size(2) Largest target is 23
		 -> uart_lthread@a(COMRAM[1]), uart_lthread@length(COMRAM[1]), main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 77
		 -> main@ic(BANK1[77]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 77
		 -> NULL(NULL[0]), main@ic(BANK1[77]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 77
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[77]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 
		 -> main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 77
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[77]), 
		 -> main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK2[100]), ToMainLow_MQ.queue(BANK1[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK2[102]), ToMainLow_MQ(BANK1[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_master_int_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _adc_int_handler->_ReadADC
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_write->_WriteUSART
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0    6064
                                              0 BANK1    126   126      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                           _init_i2c
                        _init_queues
                     _init_uart_recv
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           5     3      2     305
                                             30 BANK0      5     3      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      86
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             33 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             35 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1999
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1999
                                             53 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1805
                                             39 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     426
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5152
                                             30 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                4     4      0    2534
                                             26 COMRAM     4     4      0
                          _ReadUSART
                  _ToMainLow_sendmsg
                            _flipDBG
 ---------------------------------------------------------------------------------
 (7) _flipDBG                                              2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2618
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2489
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    1783
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               15    15      0    4483
                                             14 BANK0     15    15      0
                        _SleepIfOkay
                    _adc_int_handler
             _i2c_master_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0      98
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      98
                                             47 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_master_int_handler                              1     1      0    4134
                                             59 COMRAM     1     1      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    4134
                                             58 COMRAM     1     1      0
                                             11 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2347
                                             57 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     796
                                             47 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _adc_int_handler                                     4     4      0      15
                                             49 COMRAM     4     4      0
                            _ReadADC
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                             47 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             49 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             47 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             47 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _init_i2c
   _init_queues
     _init_queue
   _init_uart_recv
   _uart_write
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _flipDBG

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _adc_int_handler
     _ReadADC
   _i2c_master_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      66      10       39.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CC       8       79.7%
BITBANK1           100      0       0       5        0.0%
BANK1              100     7E      E4       6       89.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3A      3C       4       46.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A2      11        0.0%
DATA                 0      0     2A2      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Feb 24 22:42:21 2014

                  uart_write@msg 009E                                _i 003F  
                              _j 004F                                _x 0045  
       _MQ_Main_Willing_to_block 0049                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 11B8                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 13BE                     __CFG_CP0$OFF 000000  
                            l105 06BA                              l414 0F6E  
                            l633 0DA4                              l634 0DA6  
                            l635 0DB4                              l580 1368  
                            l636 0DB6                              l581 136A  
                            l629 0D84                              l873 1404  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0200                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 009D  
               ??_init_uart_recv 009F                  ReadTimer1@timer 0003  
                           l2441 10E0                             l2433 10BE  
                           l2455 1124                             l3169 1424  
                           l2731 0D86                             l2723 0D70  
                           l2821 0FF2                             l2637 0678  
                           l2815 0FCE                             l2807 0EA8  
                           l2655 0712                             l2647 06C0  
                           l2649 06D4                             l2835 07B4  
                           l2851 087A                             l2659 0732  
                           l2781 0E58                             l2775 0E2C  
                           l2769 0E00                             l2797 0F9A  
                           _LATB 000F8A                             u2837 1406  
                           i1l58 0070                 uart_write@length 00A1  
                _FromMainHigh_MQ 0300                             _Send 003D  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                           _main 0610                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             _swit 0043  
                    main@msgtype 0118                             pclat 000FFA  
                    i2_check_msg 13BE                             prodh 000FF4  
                           prodl 000FF3                             start 00B6  
                  __CFG_FOSC2$ON 000000                 ?_adc_int_handler 0001  
                     i2_send_msg 087E        ToMainHigh_recvmsg@msgtype 00B5  
                __end_of_ReadADC 149A                   send_msg@length 000D  
    __size_of_timer0_int_handler 0012                      _Delay1KTCYx 1400  
                          ?_main 0001                            _T0CON 000FD5  
                     i1memcpy@d1 0001                            i2l350 021A  
                          i1l647 13F0                            i2l360 03A0  
                          i2l345 00F2                            i2l354 02AE  
                          i2l364 042A                            i2l357 031C  
                          i2l367 0484                            i2l369 051A  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _STATE 004A                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                __end_of_flipDBG 0CA6                       i2memcpy@d1 0030  
                     i2memcpy@s1 0032                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 1134  
     ToMainLow_recvmsg@maxlength 00B9                       _ConvertADC 14A8  
                          tablat 000FF5                            status 000FD8  
               __end_ofi1_memcpy 123A                 __end_ofi2_memcpy 127A  
                 WriteUSART@data 009D                  __initialization 100A  
                   __end_of_main 0748                       _ReadTimer1 144E  
    __size_of_timer1_int_handler 0030       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026            __size_ofi2_in_low_int 002E  
                         ??_main 00BA                  send_msg@msgtype 000E  
                  __activetblptr 000002                  send_msg@tlength 0012  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
        ??_uart_recv_int_handler 001B                           i1l3151 0C16  
                         i1l3153 0C30                           i1l3161 0C84  
                         i1l3401 09F8                           i1l3155 0C4C  
                         i1l3411 0A46                           i1l3157 0C6A  
                         i1l3149 0BFE                           i1l3405 0A04  
                         i1l3343 1228                           i1l3423 0066  
                         i1l3337 120C                           i1l3367 0CDE  
                         i2l3303 133A                       _OpenTimer0 1344  
                 __CFG_WDTEN$OFF 000000                           i2l3503 0364  
                         i2l3513 03BE                           i2l3451 0BBA  
                         i2l3443 0B96                           i2l3435 0B6E  
                         i2l3541 0520                           i2l3525 0448  
                         i2l3295 1324                           i2l2591 1062  
                         i2l3519 03FA                           i2l3455 00BC  
                         i2l3465 018C                           i2l3473 01DE  
                         i2l3547 056A                           i2l3483 0238  
                         i2l3555 05B8                           i2l3725 08DA  
                         i2l3495 02E0                           i2l3745 1268  
                         i2l3489 0274                           i2l3739 124C  
                  ??_SleepIfOkay 0034               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
                      ??_ReadADC 0032                     i2_in_low_int 1316  
                    ?i2_send_msg 0080                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0092                 OpenTimer0@config 009D  
                         _ic_ptr 00BA                    main@msgbuffer 0100  
               __end_of_init_i2c 0B34                           _length 0041  
                         _memcpy 0FAC                           clear_0 1010  
                         clear_1 101C                           clear_2 1028  
                         clear_3 1034                           _uc_ptr 004D  
                      ??_flipDBG 0001                           main@ic 0131  
                         main@uc 011A                 __end_of_recv_msg 087E  
                      ??_in_main 00A3                 __end_of_send_msg 0D50  
                   __pdataCOMRAM 004F                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00A0         ToMainLow_recvmsg@msgtype 00B5  
           __size_of_in_high_int 0012                      ?_ConvertADC 0001  
                __CFG_FOSC$HSPLL 000000                       __accesstop 0080  
        __end_of__initialization 1052       __end_of_ToMainHigh_recvmsg 11FA  
     __end_of_ToMainHigh_sendmsg 12E6              __end_of_SleepIfOkay 10AA  
                     _WriteUSART 1416                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C                      ?_ReadTimer1 0001  
             __size_of_check_msg 0036                __end_of_ReadUSART 1400  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 0BF0  
    __end_of_InterruptHandlerLow 00B6                        ?i2_memcpy 0030  
                  _ToMainHigh_MQ 0266                 _enter_sleep_mode 14A2  
            __size_ofi2_send_msg 00F6                    ReadUSART@data 0001  
              __end_of_OpenUSART 0DE2                    check_msg@qptr 009D  
        ??_block_on_To_msgqueues 00A3             __size_of_init_queues 006E  
                     __pbssBANK1 017E                       __pbssBANK2 0200  
                     __pbssBANK3 0300                      ?_OpenTimer0 0001  
                     __pnvCOMRAM 004D                     ?i2_check_msg 0030  
       ??_i2c_master_int_handler 003C                recv_msg@maxlength 00A9  
                recv_msg@msgtype 00AA                  recv_msg@tlength 00B1  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0032  
                        ?_memcpy 009D                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0032                    ??_WriteTimer1 0003  
            __size_of_ConvertADC 0004                       ??i1_memcpy 0007  
                     ??i2_memcpy 0036                    i2_in_high_int 1484  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7              __size_of_ReadTimer1 0012  
              __end_of_check_msg 12B0                        ?_init_i2c 009D  
                    _SleepIfOkay 105C                          _ReadADC 1490  
                      ?_recv_msg 00A7                       _in_low_int 10AA  
                        __Hparam 0000                        ?_send_msg 000B  
                        __Lparam 0000       __end_of_timer0_int_handler 1472  
                    ?_WriteUSART 0001                 init_uart_recv@uc 009D  
                __CFG_STVREN$OFF 000000                          __pcinit 100A  
                __size_of_memcpy 005E         __size_of_adc_int_handler 002A  
                     _init_queue 0E60                          __ramtop 0400  
            __size_of_OpenTimer0 002A                          _flipDBG 0BF8  
                        __ptext0 0610                          __ptext1 0F48  
                        __ptext2 1416                          __ptext3 1134  
                        __ptext4 0EDA                          __ptext5 0E60  
                        __ptext6 0A66                          __ptext7 149A  
                        __ptext8 0DE2                          __ptext9 10F0  
                      _T0CONbits 000FD5                          _in_main 10F0  
            __end_of_WriteTimer0 1484              __end_of_WriteTimer1 144E  
                 ?i2_in_high_int 0030                   __pintcode_body 0B34  
           end_of_initialization 1052   __size_of_uart_recv_int_handler 00F2  
                        memcpy@d 00A3                          memcpy@n 00A1  
                        memcpy@s 00A5    __end_of_uart_recv_int_handler 0A66  
                     ??_init_i2c 009F                    __Lmediumconst 0000  
                        int_func 0B34          __size_of_init_uart_recv 0042  
                     ??_recv_msg 00AE                     ??i2_send_msg 003A  
                     ??_send_msg 0011  __size_of_i2c_master_int_handler 0556  
     __end_of_timer1_int_handler 1316                        _RCSTAbits 000FAB  
                        postinc0 000FEE        ToMainHigh_sendmsg@msgtype 008B  
                     _uart_write 0F48                        _TRISCbits 000F94  
                    uart_write@i 00A2               __end_ofi2_send_msg 0974  
            __size_of_WriteUSART 0014                     ??_ConvertADC 0030  
       timer1_int_handler@result 001C                        _TXSTAbits 000FAC  
                     main@length 0119                      ?_in_low_int 009F  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 14A8  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 11B8  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 12B0  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                  __pidataCOMRAM 14AC                      ?_init_queue 009D  
                      i2memcpy@d 0036                      _WriteTimer0 1472  
                    _WriteTimer1 143C                        i2memcpy@n 0034  
                      i2memcpy@s 0038               __end_of_ConvertADC 14AC  
                 __end_of_memcpy 100A                _enable_interrupts 149A  
           __size_of_Delay1KTCYx 0016              ?_ToMainHigh_recvmsg 00B5  
                ??i2_in_high_int 0032              ?_ToMainHigh_sendmsg 008B  
             ?_enable_interrupts 0001              start_initialization 100A  
         _i2c_master_int_handler 00BA                    ??_in_high_int 009F  
                      _ReadUSART 13E2                ??_adc_int_handler 0032  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
            ??_enable_interrupts 009D                     ??_OpenTimer0 009D  
 __size_of_block_on_To_msgqueues 007E               __end_of_ReadTimer1 1460  
  __end_of_block_on_To_msgqueues 0E60                        _OpenUSART 0D50  
   __end_of_InterruptHandlerHigh 0BF8                       init_i2c@ic 009D  
           ??_ToMainHigh_recvmsg 00B9             ??_ToMainHigh_sendmsg 003B  
      __end_of_enable_interrupts 14A2                         ??_memcpy 00A3  
                    ?_uart_write 009E               __end_of_OpenTimer0 136E  
                    __pbssCOMRAM 003D                       ?_ReadUSART 0001  
                  ??_init_queues 00A1                    __pcstackBANK0 0080  
                  __pcstackBANK1 0100              __size_of_in_low_int 0046  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 009D  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 009E  
            __end_of_in_high_int 143C                       ?_OpenUSART 009D  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00B7  
                   _ToMainLow_MQ 017E              __size_of_init_queue 007A  
                 _init_uart_recv 1134                         ?_ReadADC 0030  
                      _check_msg 127A                        __pnvBANK0 00BA  
                    _COMMAND_LEN 0047                      _COMMAND_REC 0048  
              __size_of_init_i2c 00CE                     recv_msg@data 00AC  
                   ??_WriteUSART 009D                     recv_msg@qmsg 00B3  
                   recv_msg@slot 00B0                     recv_msg@qptr 00A7  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_send_msg 00AA                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00B7                         ?_flipDBG 0001  
                       ?_in_main 00A1                WriteTimer0@timer0 0030  
             _timer0_int_handler 1460                WriteTimer1@timer1 0001  
          ToMainLow_sendmsg@data 0018              ?_timer0_int_handler 0001  
             __end_of_WriteUSART 142A           __end_of_init_uart_recv 1176  
            __end_of_init_queues 0F48                         _LATBbits 000F8A  
                       _LATCbits 000F8B              __size_of_uart_write 0064  
                i2check_msg@qptr 0030                       ?_check_msg 009D  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       i1u210_20 0C06                         i1u210_26 0C08  
                       i1u211_20 0C1E                         i1u211_26 0C20  
                       i1u212_20 0C38                         i1u212_26 0C3A  
                       i1u213_20 0C54                    ?i2_in_low_int 0032  
                       i1u213_26 0C56                         i1u214_20 0C72  
                       i1u214_26 0C74                         i2u242_40 0B7A  
                       i2u242_46 0B7C                         i2u244_40 0BA2  
                       i2u244_46 0BA4                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 008C                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000             ??_timer0_int_handler 0034  
     __size_of_enable_interrupts 0008                       _ADCON0bits 000FC2  
             _timer1_int_handler 12E6                         i1_memcpy 11FA  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 123A                      _in_high_int 142A  
                   send_msg@data 000F                     send_msg@qmsg 0015  
                   send_msg@slot 0014                     send_msg@qptr 000B  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 009D  
                       _i2c_mode 004C                      ??_OpenUSART 009F  
                OpenUSART@config 00A2                   ??i2_in_low_int 0034  
          _uart_recv_int_handler 0974                     ??_in_low_int 00A1  
               __size_of_ReadADC 000A                         __Hrparam 0000  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
           ??_timer1_int_handler 001B                  _adc_int_handler 136E  
             ??_enter_sleep_mode 0030                     ??_init_queue 009F  
                   ?_WriteTimer0 0030                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
               __size_of_flipDBG 00AE            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 0083  
    ToMainHigh_recvmsg@maxlength 00B9                i2send_msg@tlength 0086  
                    _init_queues 0EDA               __end_of_in_low_int 10F0  
                       __ptext10 10AA                         __ptext11 142A  
                       __ptext12 127A                         __ptext21 0974  
                       __ptext13 1400                         __ptext22 0BF8  
                       __ptext14 1176                         __ptext31 1460  
                       __ptext23 13E2                         __ptext15 11B8  
                       __ptext40 105C                         __ptext32 1472  
                       __ptext24 12E6                         __ptext16 0748  
                       __ptext41 1316                         __ptext33 14A8  
                       __ptext25 143C                         __ptext17 0FAC  
                       __ptext42 1484                         __ptext34 00BA  
                       __ptext26 1398                         __ptext18 0D50  
                       __ptext43 13BE                         __ptext35 12B0  
                       __ptext27 0CA6                         __ptext19 1344  
                       __ptext44 14A2                         __ptext36 087E  
                       __ptext28 11FA                         __ptext37 123A  
                       __ptext29 144E                         __ptext38 136E  
                       __ptext39 1490                         _init_i2c 0A66  
                  __size_of_main 0138                    ??i2_check_msg 0032  
                    ??_check_msg 009F               __end_of_init_queue 0EDA  
           __size_of_SleepIfOkay 004E                         _recv_msg 0748  
                       _send_msg 0CA6                         flipDBG@b 0002  
                 init_queue@qptr 009D                    ??_Delay1KTCYx 009D  
 __end_of_i2c_master_int_handler 0610              _InterruptHandlerLow 0018  
                   ??_uart_write 00A0                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 009D  
                       memcpy@d1 009D                         memcpy@s1 009F  
          __end_ofi2_in_high_int 1490                 i2send_msg@length 0082  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001           ?_uart_recv_int_handler 0001  
             __end_of_uart_write 0FAC            _block_on_To_msgqueues 0DE2  
    __size_of_ToMainHigh_recvmsg 0042          __end_of_adc_int_handler 1398  
    __size_of_ToMainHigh_sendmsg 0036                       _OSCCONbits 000FD3  
          adc_int_handler@result 0034         ToMainHigh_sendmsg@length 003B  
            __end_ofi2_check_msg 13E2           ??_InterruptHandlerHigh 008E  
              _ToMainLow_recvmsg 1176                _ToMainLow_sendmsg 1398  
             main@last_reg_recvd 0117             __end_ofi2_in_low_int 1344  
             ?_ToMainLow_recvmsg 00B5              __end_of_Delay1KTCYx 1416  
             ?_ToMainLow_sendmsg 0017                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0084  
          ??_InterruptHandlerLow 001F              ??_ToMainLow_recvmsg 00B9  
                 i2send_msg@qmsg 0089                   i2send_msg@slot 0088  
                 i2send_msg@qptr 0080              ??_ToMainLow_sendmsg 001A  
                   _USART_Status 004B  
