

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Feb 25 03:04:12 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0026AE                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _lastMotorCommand
    82  0026AE  FF                 	db	255
    83  0000                     _INTCONbits	set	4082
    84  0000                     _IPR1bits	set	3999
    85  0000                     _LATB	set	3978
    86  0000                     _LATCbits	set	3979
    87  0000                     _OSCCON	set	4051
    88  0000                     _OSCCONbits	set	4051
    89  0000                     _OSCTUNEbits	set	3995
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PIR1bits	set	3998
    92  0000                     _RCONbits	set	4048
    93  0000                     _RCREG	set	4014
    94  0000                     _RCSTA	set	4011
    95  0000                     _RCSTAbits	set	4011
    96  0000                     _SPBRG	set	4015
    97  0000                     _SPBRGH	set	4016
    98  0000                     _SSPADD	set	4040
    99  0000                     _SSPBUF	set	4041
   100  0000                     _SSPCON1	set	4038
   101  0000                     _SSPCON1bits	set	4038
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPCON2bits	set	4037
   104  0000                     _SSPSTAT	set	4039
   105  0000                     _SSPSTATbits	set	4039
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR1H	set	4047
   109  0000                     _TMR1L	set	4046
   110  0000                     _TRISB	set	3987
   111  0000                     _TRISCbits	set	3988
   112  0000                     _TXREG	set	4013
   113  0000                     _TXSTA	set	4012
   114  0000                     _TXSTAbits	set	4012
   115                           
   116                           	psect	nvCOMRAM
   117  00004C                     __pnvCOMRAM:
   118                           	opt stack 0
   119  00004C                     _uc_ptr:
   120                           	opt stack 0
   121  00004C                     	ds	2
   122                           
   123                           	psect	nvBANK0
   124  0000CC                     __pnvBANK0:
   125                           	opt stack 0
   126  0000CC                     _ic_ptr:
   127                           	opt stack 0
   128  0000CC                     	ds	2
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  00218C                     __pcinit:
   134                           	opt stack 0
   135  00218C                     start_initialization:
   136                           	opt stack 0
   137  00218C                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK3 (102 bytes)
   141  00218C  EE03  F000         	lfsr	0,__pbssBANK3
   142  002190  0E66               	movlw	102
   143  002192                     clear_0:
   144  002192  6AEE               	clrf	postinc0,c
   145  002194  06E8               	decf	wreg,f,c
   146  002196  E1FD               	bnz	clear_0
   147                           
   148                           ; Clear objects allocated to BANK2 (204 bytes)
   149  002198  EE02  F000         	lfsr	0,__pbssBANK2
   150  00219C  0ECC               	movlw	204
   151  00219E                     clear_1:
   152  00219E  6AEE               	clrf	postinc0,c
   153  0021A0  06E8               	decf	wreg,f,c
   154  0021A2  E1FD               	bnz	clear_1
   155                           
   156                           ; Clear objects allocated to BANK1 (102 bytes)
   157  0021A4  EE01  F094         	lfsr	0,__pbssBANK1
   158  0021A8  0E66               	movlw	102
   159  0021AA                     clear_2:
   160  0021AA  6AEE               	clrf	postinc0,c
   161  0021AC  06E8               	decf	wreg,f,c
   162  0021AE  E1FD               	bnz	clear_2
   163                           
   164                           ; Clear objects allocated to BANK0 (1 bytes)
   165  0021B0  0100               	movlb	0
   166  0021B2  6BCE               	clrf	__pbssBANK0& (0+255),b
   167                           
   168                           ; Clear objects allocated to COMRAM (13 bytes)
   169  0021B4  EE00  F03F         	lfsr	0,__pbssCOMRAM
   170  0021B8  0E0D               	movlw	13
   171  0021BA                     clear_3:
   172  0021BA  6AEE               	clrf	postinc0,c
   173  0021BC  06E8               	decf	wreg,f,c
   174  0021BE  E1FD               	bnz	clear_3
   175                           
   176                           ; Initialize objects allocated to COMRAM (1 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178  0021C0  0EAE               	movlw	low __pidataCOMRAM
   179  0021C2  6EF6               	movwf	tblptrl,c
   180  0021C4  0E26               	movlw	high __pidataCOMRAM
   181  0021C6  6EF7               	movwf	tblptrh,c
   182  0021C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183  0021CA  6EF8               	movwf	tblptru,c
   184  0021CC  0009               	tblrd		*+	;fetch initializer
   185  0021CE  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   186  0021D2                     end_of_initialization:
   187                           	opt stack 0
   188  0021D2                     __end_of__initialization:
   189                           	opt stack 0
   190  0021D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  0021D4  6EF8               	movwf	tblptru,c
   192  0021D6  0100               	movlb	0
   193  0021D8  EF29  F006         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	bssCOMRAM
   202  00003F                     __pbssCOMRAM:
   203                           	opt stack 0
   204  00003F                     _Send:
   205                           	opt stack 0
   206  00003F                     	ds	2
   207  000041                     _command_count:
   208                           	opt stack 0
   209  000041                     	ds	2
   210  000043                     _command_length:
   211                           	opt stack 0
   212  000043                     	ds	2
   213  000045                     _motor_count:
   214                           	opt stack 0
   215  000045                     	ds	2
   216  000047                     _motor_length:
   217                           	opt stack 0
   218  000047                     	ds	2
   219  000049                     _MQ_Main_Willing_to_block:
   220                           	opt stack 0
   221  000049                     	ds	1
   222  00004A                     _State:
   223                           	opt stack 0
   224  00004A                     	ds	1
   225  00004B                     _USART_Status:
   226                           	opt stack 0
   227  00004B                     	ds	1
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	dataCOMRAM
   236  00004E                     __pdataCOMRAM:
   237                           	opt stack 0
   238  00004E                     _lastMotorCommand:
   239                           	opt stack 0
   240  00004E                     	ds	1
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           
   248                           	psect	bssBANK0
   249  0000CE                     __pbssBANK0:
   250                           	opt stack 0
   251  0000CE                     _i2c_mode:
   252                           	opt stack 0
   253  0000CE                     	ds	1
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           
   261                           	psect	bssBANK1
   262  000194                     __pbssBANK1:
   263                           	opt stack 0
   264  000194                     _ToMainHigh_MQ:
   265                           	opt stack 0
   266  000194                     	ds	102
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	bssBANK2
   275  000200                     __pbssBANK2:
   276                           	opt stack 0
   277  000200                     _FromMainLow_MQ:
   278                           	opt stack 0
   279  000200                     	ds	102
   280  000266                     _ToMainLow_MQ:
   281                           	opt stack 0
   282  000266                     	ds	102
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	bssBANK3
   291  000300                     __pbssBANK3:
   292                           	opt stack 0
   293  000300                     _FromMainHigh_MQ:
   294                           	opt stack 0
   295  000300                     	ds	102
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           
   303                           	psect	cstackBANK1
   304  000100                     __pcstackBANK1:
   305                           	opt stack 0
   306  000100                     parser_lthread@data_1510:
   307                           	opt stack 0
   308                           
   309                           ; 9 bytes @ 0x0
   310  000100                     	ds	9
   311  000109                     parser_lthread@data:
   312                           	opt stack 0
   313                           
   314                           ; 3 bytes @ 0x9
   315  000109                     	ds	3
   316  00010C                     parser_lthread@checksum:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0xC
   320  00010C                     	ds	1
   321  00010D                     parser_lthread@Command:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xD
   325  00010D                     	ds	1
   326  00010E                     parser_lthread@i:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0xE
   330  00010E                     	ds	2
   331  000110                     main@msgbuffer:
   332                           	opt stack 0
   333                           
   334                           ; 23 bytes @ 0x10
   335  000110                     	ds	23
   336  000127                     main@last_reg_recvd:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x27
   340  000127                     	ds	1
   341  000128                     main@t0thread_data:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x28
   345  000128                     	ds	2
   346  00012A                     main@t1thread_data:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x2A
   350  00012A                     	ds	2
   351  00012C                     main@uthread_data:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x2C
   355  00012C                     	ds	2
   356  00012E                     main@uc:
   357                           	opt stack 0
   358                           
   359                           ; 23 bytes @ 0x2E
   360  00012E                     	ds	23
   361  000145                     main@msgtype:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x45
   365  000145                     	ds	1
   366  000146                     main@length:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x46
   370  000146                     	ds	1
   371  000147                     main@ic:
   372                           	opt stack 0
   373                           
   374                           ; 77 bytes @ 0x47
   375  000147                     	ds	77
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK0
   384  000080                     __pcstackBANK0:
   385                           	opt stack 0
   386  000080                     i2send_msg@qptr:
   387                           	opt stack 0
   388  000080                     i2recv_msg@qptr:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x0
   392  000080                     	ds	2
   393  000082                     i2send_msg@length:
   394                           	opt stack 0
   395  000082                     i2recv_msg@maxlength:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x2
   399  000082                     	ds	1
   400  000083                     i2send_msg@msgtype:
   401                           	opt stack 0
   402  000083                     i2recv_msg@msgtype:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x3
   406  000083                     	ds	1
   407  000084                     i2send_msg@data:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x4
   411  000084                     	ds	1
   412  000085                     i2recv_msg@data:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x5
   416  000085                     	ds	1
   417  000086                     i2send_msg@tlength:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x6
   421  000086                     	ds	1
   422  000087                     i2recv_msg@slot:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x7
   426  000087                     	ds	1
   427  000088                     i2send_msg@slot:
   428                           	opt stack 0
   429  000088                     i2recv_msg@tlength:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x8
   433  000088                     	ds	1
   434  000089                     i2send_msg@qmsg:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x9
   438  000089                     	ds	1
   439  00008A                     i2recv_msg@qmsg:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0xA
   443  00008A                     	ds	1
   444  00008B                     i2ToMainHigh_sendmsg@msgtype:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0xB
   448  00008B                     	ds	1
   449  00008C                     FromMainHigh_recvmsg@msgtype:
   450                           	opt stack 0
   451  00008C                     i2ToMainHigh_sendmsg@data:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0xC
   455  00008C                     	ds	2
   456  00008E                     ??_i2c_slave_int_handler:
   457  00008E                     FromMainHigh_recvmsg@data:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0xE
   461  00008E                     	ds	2
   462  000090                     ??_timer0_int_handler:
   463  000090                     i2c_slave_int_handler@error_buf:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x10
   467  000090                     	ds	1
   468  000091                     timer0_int_handler@length:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x11
   472  000091                     	ds	2
   473  000093                     i2c_slave_int_handler@data_written:
   474                           	opt stack 0
   475  000093                     timer0_int_handler@msgtype:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x13
   479  000093                     	ds	1
   480  000094                     i2c_slave_int_handler@overrun_error:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x14
   484  000094                     	ds	1
   485  000095                     i2c_slave_int_handler@i2c_data:
   486                           	opt stack 0
   487  000095                     timer0_int_handler@val:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x15
   491  000095                     	ds	1
   492  000096                     i2c_slave_int_handler@msg_to_send:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x16
   496  000096                     	ds	1
   497  000097                     i2c_slave_int_handler@msg_ready:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x17
   501  000097                     	ds	1
   502  000098                     i2c_slave_int_handler@data_read:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x18
   506  000098                     	ds	1
   507  000099                     ??_InterruptHandlerHigh:
   508                           
   509                           ; 0 bytes @ 0x19
   510  000099                     	ds	14
   511  0000A7                     ??_i2c_configure_master:
   512  0000A7                     ?_in_high_int:
   513                           	opt stack 0
   514  0000A7                     WriteUSART@data:
   515                           	opt stack 0
   516  0000A7                     Delay1KTCYx@unit:
   517                           	opt stack 0
   518  0000A7                     init_queue@qptr:
   519                           	opt stack 0
   520  0000A7                     check_msg@qptr:
   521                           	opt stack 0
   522  0000A7                     i2c_master_send@msg:
   523                           	opt stack 0
   524  0000A7                     start_i2c_slave_reply@msg:
   525                           	opt stack 0
   526  0000A7                     init_i2c@ic:
   527                           	opt stack 0
   528  0000A7                     init_uart_recv@uc:
   529                           	opt stack 0
   530  0000A7                     timer0_lthread@tptr:
   531                           	opt stack 0
   532  0000A7                     init_timer1_lthread@tptr:
   533                           	opt stack 0
   534  0000A7                     OpenUSART@spbrg:
   535                           	opt stack 0
   536  0000A7                     memcpy@d1:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x27
   540  0000A7                     	ds	1
   541  0000A8                     i2c_configure_master@slave_addr:
   542                           	opt stack 0
   543  0000A8                     uart_lthread@uptr:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x28
   547  0000A8                     	ds	1
   548  0000A9                     ??_init_uart_recv:
   549  0000A9                     ??_OpenUSART:
   550  0000A9                     ??_start_i2c_slave_reply:
   551  0000A9                     ??_init_queue:
   552  0000A9                     ??_check_msg:
   553  0000A9                     ??_i2c_master_send:
   554  0000A9                     ?_in_low_int:
   555                           	opt stack 0
   556  0000A9                     timer0_lthread@msgtype:
   557                           	opt stack 0
   558  0000A9                     memcpy@s1:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x29
   562  0000A9                     	ds	1
   563  0000AA                     init_queue@i:
   564                           	opt stack 0
   565  0000AA                     uart_lthread@msgtype:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2A
   569  0000AA                     	ds	1
   570  0000AB                     ??_init_queues:
   571  0000AB                     ?_in_main:
   572                           	opt stack 0
   573  0000AB                     i2c_master_send@length:
   574                           	opt stack 0
   575  0000AB                     timer0_lthread@length:
   576                           	opt stack 0
   577  0000AB                     memcpy@n:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x2B
   581  0000AB                     	ds	1
   582  0000AC                     start_i2c_slave_reply@length:
   583                           	opt stack 0
   584  0000AC                     OpenUSART@config:
   585                           	opt stack 0
   586  0000AC                     i2c_master_send@currentLength:
   587                           	opt stack 0
   588  0000AC                     uart_lthread@length:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x2C
   592  0000AC                     	ds	1
   593  0000AD                     ??_block_on_To_msgqueues:
   594  0000AD                     timer0_lthread@msgbuffer:
   595                           	opt stack 0
   596  0000AD                     memcpy@d:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x2D
   600  0000AD                     	ds	1
   601  0000AE                     uart_lthread@msgbuffer:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x2E
   605  0000AE                     	ds	1
   606  0000AF                     timer0_lthread@msgval:
   607                           	opt stack 0
   608  0000AF                     memcpy@s:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x2F
   612  0000AF                     	ds	1
   613  0000B0                     ??_uart_lthread:
   614                           
   615                           ; 0 bytes @ 0x30
   616  0000B0                     	ds	1
   617  0000B1                     send_msg@qptr:
   618                           	opt stack 0
   619  0000B1                     recv_msg@qptr:
   620                           	opt stack 0
   621  0000B1                     uart_lthread@x:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x31
   625  0000B1                     	ds	2
   626  0000B3                     send_msg@length:
   627                           	opt stack 0
   628  0000B3                     recv_msg@maxlength:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x33
   632  0000B3                     	ds	1
   633  0000B4                     send_msg@msgtype:
   634                           	opt stack 0
   635  0000B4                     recv_msg@msgtype:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x34
   639  0000B4                     	ds	1
   640  0000B5                     send_msg@data:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x35
   644  0000B5                     	ds	1
   645  0000B6                     recv_msg@data:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x36
   649  0000B6                     	ds	1
   650  0000B7                     ??_send_msg:
   651                           
   652                           ; 0 bytes @ 0x37
   653  0000B7                     	ds	1
   654  0000B8                     ??_recv_msg:
   655  0000B8                     send_msg@tlength:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x38
   659  0000B8                     	ds	2
   660  0000BA                     send_msg@slot:
   661                           	opt stack 0
   662  0000BA                     recv_msg@slot:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x3A
   666  0000BA                     	ds	1
   667  0000BB                     send_msg@qmsg:
   668                           	opt stack 0
   669  0000BB                     recv_msg@tlength:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x3B
   673  0000BB                     	ds	2
   674  0000BD                     ToMainHigh_sendmsg@msgtype:
   675                           	opt stack 0
   676  0000BD                     recv_msg@qmsg:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x3D
   680  0000BD                     	ds	1
   681  0000BE                     ToMainHigh_sendmsg@data:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x3E
   685  0000BE                     	ds	1
   686  0000BF                     ToMainLow_recvmsg@msgtype:
   687                           	opt stack 0
   688  0000BF                     ToMainHigh_recvmsg@msgtype:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x3F
   692  0000BF                     	ds	1
   693  0000C0                     ToMainHigh_sendmsg@length:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x40
   697  0000C0                     	ds	1
   698  0000C1                     ToMainLow_recvmsg@data:
   699                           	opt stack 0
   700  0000C1                     ToMainHigh_recvmsg@data:
   701                           	opt stack 0
   702  0000C1                     parser_lthread@msgtype:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x41
   706  0000C1                     	ds	2
   707  0000C3                     ToMainLow_recvmsg@maxlength:
   708                           	opt stack 0
   709  0000C3                     ToMainHigh_recvmsg@maxlength:
   710                           	opt stack 0
   711  0000C3                     parser_lthread@length:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x43
   715  0000C3                     	ds	2
   716  0000C5                     parser_lthread@msgbuf:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x45
   720  0000C5                     	ds	2
   721  0000C7                     ??_parser_lthread:
   722                           
   723                           ; 0 bytes @ 0x47
   724  0000C7                     	ds	5
   725  0000CC                     tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           
   732                           ; 0 bytes @ 0x4C
   733                           
   734                           	psect	cstackCOMRAM
   735  000001                     __pcstackCOMRAM:
   736                           	opt stack 0
   737  000001                     ?_ReadTimer1:
   738                           	opt stack 0
   739  000001                     ReadUSART@data:
   740                           	opt stack 0
   741  000001                     WriteTimer1@timer1:
   742                           	opt stack 0
   743  000001                     i1memcpy@d1:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x0
   747  000001                     	ds	2
   748  000003                     ReadTimer1@timer:
   749                           	opt stack 0
   750  000003                     WriteTimer1@timer:
   751                           	opt stack 0
   752  000003                     i1memcpy@s1:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x2
   756  000003                     	ds	2
   757  000005                     i1memcpy@n:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x4
   761  000005                     	ds	2
   762  000007                     i1memcpy@d:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x6
   766  000007                     	ds	2
   767  000009                     i1memcpy@s:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x8
   771  000009                     	ds	2
   772  00000B                     i1send_msg@qptr:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0xA
   776  00000B                     	ds	2
   777  00000D                     i1send_msg@length:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0xC
   781  00000D                     	ds	1
   782  00000E                     i1send_msg@msgtype:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0xD
   786  00000E                     	ds	1
   787  00000F                     i1send_msg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0xE
   791  00000F                     	ds	2
   792  000011                     ??i1_send_msg:
   793                           
   794                           ; 0 bytes @ 0x10
   795  000011                     	ds	1
   796  000012                     i1send_msg@tlength:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x11
   800  000012                     	ds	2
   801  000014                     i1send_msg@slot:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x13
   805  000014                     	ds	1
   806  000015                     i1send_msg@qmsg:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x14
   810  000015                     	ds	2
   811  000017                     ToMainLow_sendmsg@msgtype:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x16
   815  000017                     	ds	1
   816  000018                     ToMainLow_sendmsg@data:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x17
   820  000018                     	ds	2
   821  00001A                     ToMainLow_sendmsg@length:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x19
   825  00001A                     	ds	1
   826  00001B                     ??_timer1_int_handler:
   827  00001B                     ??_parseUART:
   828                           
   829                           ; 0 bytes @ 0x1A
   830  00001B                     	ds	1
   831  00001C                     timer1_int_handler@result:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x1B
   835  00001C                     	ds	4
   836  000020                     ??_uart_recv_int_handler:
   837                           
   838                           ; 0 bytes @ 0x1F
   839  000020                     	ds	1
   840  000021                     ??_InterruptHandlerLow:
   841                           
   842                           ; 0 bytes @ 0x20
   843  000021                     	ds	17
   844  000032                     ?i2_in_high_int:
   845                           	opt stack 0
   846  000032                     handle_start@data_read:
   847                           	opt stack 0
   848  000032                     WriteTimer0@timer0:
   849                           	opt stack 0
   850  000032                     i2check_msg@qptr:
   851                           	opt stack 0
   852  000032                     i2start_i2c_slave_reply@msg:
   853                           	opt stack 0
   854  000032                     i2memcpy@d1:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x31
   858  000032                     	ds	2
   859  000034                     ??i2_check_msg:
   860  000034                     ??i2_start_i2c_slave_reply:
   861  000034                     ?i2_in_low_int:
   862                           	opt stack 0
   863  000034                     WriteTimer0@timer:
   864                           	opt stack 0
   865  000034                     i2memcpy@s1:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x33
   869  000034                     	ds	2
   870  000036                     i2memcpy@n:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x35
   874  000036                     	ds	1
   875  000037                     i2start_i2c_slave_reply@length:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x36
   879  000037                     	ds	1
   880  000038                     i2memcpy@d:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x37
   884  000038                     	ds	2
   885  00003A                     i2memcpy@s:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x39
   889  00003A                     	ds	2
   890  00003C                     ??i2_send_msg:
   891  00003C                     ??i2_recv_msg:
   892                           
   893                           ; 0 bytes @ 0x3B
   894  00003C                     	ds	1
   895  00003D                     i2ToMainHigh_sendmsg@length:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x3C
   899  00003D                     	ds	1
   900  00003E                     ??_i2c_master_int_handler:
   901  00003E                     FromMainHigh_recvmsg@maxlength:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x3D
   905  00003E                     	ds	1
   906  00003F                     tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           
   913                           ; 0 bytes @ 0x3E
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 187 in file "source/main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  ic             77   71[BANK1 ] struct __i2c_comm
   924 ;;  msgbuffer      23   16[BANK1 ] unsigned char [23]
   925 ;;  uc             23   46[BANK1 ] struct __uart_comm
   926 ;;  uthread_data    2   44[BANK1 ] struct __uart_thread_str
   927 ;;  t1thread_dat    2   42[BANK1 ] struct __timer1_thread_s
   928 ;;  t0thread_dat    2   40[BANK1 ] struct __timer0_thread_s
   929 ;;  length          1   70[BANK1 ] char 
   930 ;;  msgtype         1   69[BANK1 ] unsigned char 
   931 ;;  last_reg_rec    1   39[BANK1 ] unsigned char 
   932 ;;  i               1    0        unsigned char 
   933 ;;  c               1    0        unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;		None               void
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0     132       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         0       0     132       0       0
   947 ;;Total ram usage:      132 bytes
   948 ;; Hardware stack levels required when called:   16
   949 ;; This function calls:
   950 ;;		_OpenUSART
   951 ;;		_ToMainHigh_recvmsg
   952 ;;		_ToMainLow_recvmsg
   953 ;;		_block_on_To_msgqueues
   954 ;;		_enable_interrupts
   955 ;;		_init_i2c
   956 ;;		_init_queues
   957 ;;		_init_timer1_lthread
   958 ;;		_init_uart_recv
   959 ;;		_parser_lthread
   960 ;;		_start_i2c_slave_reply
   961 ;;		_timer0_lthread
   962 ;;		_uart_lthread
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text0
   969  000C52                     __ptext0:
   970                           	opt stack 0
   971  000C52                     _main:
   972                           	opt stack 14
   973                           
   974                           ;main.c: 188: char c;
   975                           ;main.c: 189: signed char length;
   976                           ;main.c: 190: unsigned char msgtype;
   977                           ;main.c: 191: unsigned char last_reg_recvd;
   978                           ;main.c: 192: uart_comm uc;
   979                           ;main.c: 193: i2c_comm ic;
   980                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   981                           ;main.c: 195: unsigned char i;
   982                           ;main.c: 196: uart_thread_struct uthread_data;
   983                           ;main.c: 197: timer1_thread_struct t1thread_data;
   984                           ;main.c: 198: timer0_thread_struct t0thread_data;
   985                           ;main.c: 206: OSCCON = 0x82;
   986                           
   987                           ;incstack = 0
   988  000C52  0E82               	movlw	130
   989  000C54  6ED3               	movwf	4051,c	;volatile
   990                           
   991                           ;main.c: 207: OSCTUNEbits.PLLEN = 1;
   992  000C56  8C9B               	bsf	3995,6,c	;volatile
   993                           
   994                           ;main.c: 225: init_uart_recv(&uc);
   995  000C58  0101               	movlb	1	; () banked
   996  000C5A  0E01               	movlw	high main@uc
   997  000C5C  0100               	movlb	0	; () banked
   998  000C5E  0100               	movlb	0	; () banked
   999  000C60  6FA8               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1000  000C62  0101               	movlb	1	; () banked
  1001  000C64  0E2E               	movlw	low main@uc
  1002  000C66  0100               	movlb	0	; () banked
  1003  000C68  0100               	movlb	0	; () banked
  1004  000C6A  6FA7               	movwf	init_uart_recv@uc& (0+255),b
  1005  000C6C  ECA5  F012         	call	_init_uart_recv	;wreg free
  1006                           
  1007                           ;main.c: 228: init_i2c(&ic);
  1008  000C70  0101               	movlb	1	; () banked
  1009  000C72  0E01               	movlw	high main@ic
  1010  000C74  0100               	movlb	0	; () banked
  1011  000C76  0100               	movlb	0	; () banked
  1012  000C78  6FA8               	movwf	(init_i2c@ic+1)& (0+255),b
  1013  000C7A  0101               	movlb	1	; () banked
  1014  000C7C  0E47               	movlw	low main@ic
  1015  000C7E  0100               	movlb	0	; () banked
  1016  000C80  0100               	movlb	0	; () banked
  1017  000C82  6FA7               	movwf	init_i2c@ic& (0+255),b
  1018  000C84  EC6A  F00D         	call	_init_i2c	;wreg free
  1019                           
  1020                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
  1021  000C88  0101               	movlb	1	; () banked
  1022  000C8A  0E01               	movlw	high main@t1thread_data
  1023  000C8C  0100               	movlb	0	; () banked
  1024  000C8E  0100               	movlb	0	; () banked
  1025  000C90  6FA8               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1026  000C92  0101               	movlb	1	; () banked
  1027  000C94  0E2A               	movlw	low main@t1thread_data
  1028  000C96  0100               	movlb	0	; () banked
  1029  000C98  0100               	movlb	0	; () banked
  1030  000C9A  6FA7               	movwf	init_timer1_lthread@tptr& (0+255),b
  1031  000C9C  EC1D  F013         	call	_init_timer1_lthread	;wreg free
  1032                           
  1033                           ;main.c: 234: init_queues();
  1034  000CA0  EC32  F010         	call	_init_queues	;wreg free
  1035                           
  1036                           ;main.c: 238: TRISB = 0x0;
  1037  000CA4  0E00               	movlw	0
  1038  000CA6  6E93               	movwf	3987,c	;volatile
  1039                           
  1040                           ;main.c: 239: LATB = 0x0;
  1041  000CA8  0E00               	movlw	0
  1042  000CAA  6E8A               	movwf	3978,c	;volatile
  1043                           
  1044                           ;main.c: 268: IPR1bits.TMR1IP = 0;
  1045  000CAC  909F               	bcf	3999,0,c	;volatile
  1046                           
  1047                           ;main.c: 270: IPR1bits.RCIP = 0;
  1048  000CAE  9A9F               	bcf	3999,5,c	;volatile
  1049                           
  1050                           ;main.c: 272: IPR1bits.SSPIP = 1;
  1051  000CB0  869F               	bsf	3999,3,c	;volatile
  1052                           
  1053                           ;main.c: 296: PIE1bits.SSPIE = 1;
  1054  000CB2  869D               	bsf	3997,3,c	;volatile
  1055                           
  1056                           ;main.c: 307: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1057                           ;main.c: 308: 0b11111111 & 0b11101111, 0x26);
  1058  000CB4  0E00               	movlw	0
  1059  000CB6  0100               	movlb	0	; () banked
  1060  000CB8  0100               	movlb	0	; () banked
  1061  000CBA  6FA8               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1062  000CBC  0E26               	movlw	38
  1063  000CBE  0100               	movlb	0	; () banked
  1064  000CC0  6FA7               	movwf	OpenUSART@spbrg& (0+255),b
  1065  000CC2  0E6C               	movlw	108
  1066  000CC4  ECEA  F00E         	call	_OpenUSART
  1067                           
  1068                           ;main.c: 314: enable_interrupts();
  1069  000CC8  EC50  F013         	call	_enable_interrupts	;wreg free
  1070  000CCC                     l3552:
  1071                           
  1072                           ;main.c: 338: block_on_To_msgqueues();
  1073  000CCC  ECB6  F00F         	call	_block_on_To_msgqueues	;wreg free
  1074                           
  1075                           ;main.c: 345: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
  1076  000CD0  0101               	movlb	1	; () banked
  1077  000CD2  0E01               	movlw	high main@msgtype
  1078  000CD4  0100               	movlb	0	; () banked
  1079  000CD6  0100               	movlb	0	; () banked
  1080  000CD8  6FC0               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1081  000CDA  0101               	movlb	1	; () banked
  1082  000CDC  0E45               	movlw	low main@msgtype
  1083  000CDE  0100               	movlb	0	; () banked
  1084  000CE0  0100               	movlb	0	; () banked
  1085  000CE2  6FBF               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1086  000CE4  0101               	movlb	1	; () banked
  1087  000CE6  0E01               	movlw	high main@msgbuffer
  1088  000CE8  0100               	movlb	0	; () banked
  1089  000CEA  0100               	movlb	0	; () banked
  1090  000CEC  6FC2               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1091  000CEE  0101               	movlb	1	; () banked
  1092  000CF0  0E10               	movlw	low main@msgbuffer
  1093  000CF2  0100               	movlb	0	; () banked
  1094  000CF4  0100               	movlb	0	; () banked
  1095  000CF6  6FC1               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1096  000CF8  0E16               	movlw	22
  1097  000CFA  ECA3  F011         	call	_ToMainHigh_recvmsg
  1098  000CFE  0101               	movlb	1	; () banked
  1099  000D00  0101               	movlb	1	; () banked
  1100  000D02  6F46               	movwf	main@length& (0+255),b
  1101                           
  1102                           ; BSR set to: 1
  1103                           ;main.c: 346: if (length < 0) {
  1104  000D04  0101               	movlb	1	; () banked
  1105  000D06  0101               	movlb	1	; () banked
  1106  000D08  BF46               	btfsc	main@length& (0+255),7,b
  1107  000D0A  D079               	goto	l3570
  1108  000D0C  D065               	goto	l3568
  1109  000D0E                     l3560:
  1110                           
  1111                           ; BSR set to: 1
  1112                           ;main.c: 354: {
  1113                           ;main.c: 355: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1114  000D0E  0101               	movlb	1	; () banked
  1115  000D10  0E01               	movlw	high main@t0thread_data
  1116  000D12  0100               	movlb	0	; () banked
  1117  000D14  0100               	movlb	0	; () banked
  1118  000D16  6FA8               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1119  000D18  0101               	movlb	1	; () banked
  1120  000D1A  0E28               	movlw	low main@t0thread_data
  1121  000D1C  0100               	movlb	0	; () banked
  1122  000D1E  0100               	movlb	0	; () banked
  1123  000D20  6FA7               	movwf	timer0_lthread@tptr& (0+255),b
  1124  000D22  0101               	movlb	1	; () banked
  1125  000D24  0100               	movlb	0	; () banked
  1126  000D26  C145  F0A9         	movff	main@msgtype,timer0_lthread@msgtype
  1127  000D2A  0100               	movlb	0	; () banked
  1128  000D2C  0100               	movlb	0	; () banked
  1129  000D2E  6BAA               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1130  000D30  0101               	movlb	1	; () banked
  1131  000D32  0101               	movlb	1	; () banked
  1132  000D34  5146               	movf	main@length& (0+255),w,b
  1133  000D36  0100               	movlb	0	; () banked
  1134  000D38  0100               	movlb	0	; () banked
  1135  000D3A  6FAB               	movwf	timer0_lthread@length& (0+255),b
  1136  000D3C  0100               	movlb	0	; () banked
  1137  000D3E  6BAC               	clrf	(timer0_lthread@length+1)& (0+255),b
  1138  000D40  0100               	movlb	0	; () banked
  1139  000D42  BFAB               	btfsc	timer0_lthread@length& (0+255),7,b
  1140  000D44  07AC               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1141  000D46  0101               	movlb	1	; () banked
  1142  000D48  0E01               	movlw	high main@msgbuffer
  1143  000D4A  0100               	movlb	0	; () banked
  1144  000D4C  0100               	movlb	0	; () banked
  1145  000D4E  6FAE               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1146  000D50  0101               	movlb	1	; () banked
  1147  000D52  0E10               	movlw	low main@msgbuffer
  1148  000D54  0100               	movlb	0	; () banked
  1149  000D56  0100               	movlb	0	; () banked
  1150  000D58  6FAD               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1151  000D5A  EC14  F013         	call	_timer0_lthread	;wreg free
  1152                           
  1153                           ;main.c: 356: break;
  1154  000D5E  D04F               	goto	l3570
  1155  000D60                     l96:
  1156                           
  1157                           ; BSR set to: 1
  1158                           ;main.c: 363: {
  1159                           ;main.c: 366: last_reg_recvd = msgbuffer[0];
  1160  000D60  C110  F127         	movff	main@msgbuffer,main@last_reg_recvd
  1161                           
  1162                           ;main.c: 367: break;
  1163  000D64  D04C               	goto	l3570
  1164  000D66                     l3562:
  1165                           
  1166                           ; BSR set to: 1
  1167                           ;main.c: 370: {
  1168                           ;main.c: 378: start_i2c_slave_reply(length, msgbuffer);
  1169  000D66  0101               	movlb	1	; () banked
  1170  000D68  0E01               	movlw	high main@msgbuffer
  1171  000D6A  0100               	movlb	0	; () banked
  1172  000D6C  0100               	movlb	0	; () banked
  1173  000D6E  6FA8               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1174  000D70  0101               	movlb	1	; () banked
  1175  000D72  0E10               	movlw	low main@msgbuffer
  1176  000D74  0100               	movlb	0	; () banked
  1177  000D76  0100               	movlb	0	; () banked
  1178  000D78  6FA7               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1179  000D7A  0101               	movlb	1	; () banked
  1180  000D7C  0101               	movlb	1	; () banked
  1181  000D7E  5146               	movf	main@length& (0+255),w,b
  1182  000D80  EC8C  F008         	call	_start_i2c_slave_reply
  1183                           
  1184                           ;main.c: 379: break;
  1185  000D84  D03C               	goto	l3570
  1186  000D86                     l3564:
  1187                           
  1188                           ;main.c: 387: {
  1189                           ;main.c: 388: uart_lthread(&uthread_data,msgtype,length,msgbuffer);
  1190  000D86  0101               	movlb	1	; () banked
  1191  000D88  0E01               	movlw	high main@uthread_data
  1192  000D8A  0100               	movlb	0	; () banked
  1193  000D8C  0100               	movlb	0	; () banked
  1194  000D8E  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1195  000D90  0101               	movlb	1	; () banked
  1196  000D92  0E2C               	movlw	low main@uthread_data
  1197  000D94  0100               	movlb	0	; () banked
  1198  000D96  0100               	movlb	0	; () banked
  1199  000D98  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1200  000D9A  0101               	movlb	1	; () banked
  1201  000D9C  0100               	movlb	0	; () banked
  1202  000D9E  C145  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1203  000DA2  0100               	movlb	0	; () banked
  1204  000DA4  0100               	movlb	0	; () banked
  1205  000DA6  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1206  000DA8  0101               	movlb	1	; () banked
  1207  000DAA  0101               	movlb	1	; () banked
  1208  000DAC  5146               	movf	main@length& (0+255),w,b
  1209  000DAE  0100               	movlb	0	; () banked
  1210  000DB0  0100               	movlb	0	; () banked
  1211  000DB2  6FAC               	movwf	uart_lthread@length& (0+255),b
  1212  000DB4  0100               	movlb	0	; () banked
  1213  000DB6  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1214  000DB8  0100               	movlb	0	; () banked
  1215  000DBA  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1216  000DBC  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1217  000DBE  0101               	movlb	1	; () banked
  1218  000DC0  0E01               	movlw	high main@msgbuffer
  1219  000DC2  0100               	movlb	0	; () banked
  1220  000DC4  0100               	movlb	0	; () banked
  1221  000DC6  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1222  000DC8  0101               	movlb	1	; () banked
  1223  000DCA  0E10               	movlw	low main@msgbuffer
  1224  000DCC  0100               	movlb	0	; () banked
  1225  000DCE  0100               	movlb	0	; () banked
  1226  000DD0  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1227  000DD2  EC35  F00E         	call	_uart_lthread	;wreg free
  1228                           
  1229                           ;main.c: 389: break;
  1230  000DD6  D013               	goto	l3570
  1231  000DD8                     l3568:
  1232  000DD8  0101               	movlb	1	; () banked
  1233  000DDA  0101               	movlb	1	; () banked
  1234  000DDC  5145               	movf	main@msgtype& (0+255),w,b
  1235                           
  1236                           ; Switch size 1, requested type "space"
  1237                           ; Number of cases is 6, Range of values is 10 to 48
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte           19    10 (average)
  1241                           ;	Chosen strategy is simple_byte
  1242  000DDE  0A0A               	xorlw	10	; case 10
  1243  000DE0  B4D8               	btfsc	status,2,c
  1244  000DE2  D795               	goto	l3560
  1245  000DE4  0A22               	xorlw	34	; case 40
  1246  000DE6  B4D8               	btfsc	status,2,c
  1247  000DE8  D00A               	goto	l3570
  1248  000DEA  0A01               	xorlw	1	; case 41
  1249  000DEC  B4D8               	btfsc	status,2,c
  1250  000DEE  D7B8               	goto	l96
  1251  000DF0  0A03               	xorlw	3	; case 42
  1252  000DF2  B4D8               	btfsc	status,2,c
  1253  000DF4  D7B8               	goto	l3562
  1254  000DF6  0A05               	xorlw	5	; case 47
  1255  000DF8  B4D8               	btfsc	status,2,c
  1256  000DFA  D7C5               	goto	l3564
  1257  000DFC  0A1F               	xorlw	31	; case 48
  1258  000DFE                     l3570:
  1259                           
  1260                           ;main.c: 397: }
  1261                           ;main.c: 400: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
  1262  000DFE  0101               	movlb	1	; () banked
  1263  000E00  0E01               	movlw	high main@msgtype
  1264  000E02  0100               	movlb	0	; () banked
  1265  000E04  0100               	movlb	0	; () banked
  1266  000E06  6FC0               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1267  000E08  0101               	movlb	1	; () banked
  1268  000E0A  0E45               	movlw	low main@msgtype
  1269  000E0C  0100               	movlb	0	; () banked
  1270  000E0E  0100               	movlb	0	; () banked
  1271  000E10  6FBF               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1272  000E12  0101               	movlb	1	; () banked
  1273  000E14  0E01               	movlw	high main@msgbuffer
  1274  000E16  0100               	movlb	0	; () banked
  1275  000E18  0100               	movlb	0	; () banked
  1276  000E1A  6FC2               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1277  000E1C  0101               	movlb	1	; () banked
  1278  000E1E  0E10               	movlw	low main@msgbuffer
  1279  000E20  0100               	movlb	0	; () banked
  1280  000E22  0100               	movlb	0	; () banked
  1281  000E24  6FC1               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1282  000E26  0E16               	movlw	22
  1283  000E28  EC82  F011         	call	_ToMainLow_recvmsg
  1284  000E2C  0101               	movlb	1	; () banked
  1285  000E2E  0101               	movlb	1	; () banked
  1286  000E30  6F46               	movwf	main@length& (0+255),b
  1287                           
  1288                           ; BSR set to: 1
  1289                           ;main.c: 401: if (length < 0) {
  1290  000E32  0101               	movlb	1	; () banked
  1291  000E34  0101               	movlb	1	; () banked
  1292  000E36  BF46               	btfsc	main@length& (0+255),7,b
  1293  000E38  D749               	goto	l3552
  1294  000E3A  D048               	goto	l3582
  1295  000E3C                     l3576:
  1296                           
  1297                           ; BSR set to: 1
  1298                           ;main.c: 409: {
  1299                           ;main.c: 410: parser_lthread(msgtype,length,msgbuffer);
  1300  000E3C  0101               	movlb	1	; () banked
  1301  000E3E  0100               	movlb	0	; () banked
  1302  000E40  C145  F0C1         	movff	main@msgtype,parser_lthread@msgtype
  1303  000E44  0100               	movlb	0	; () banked
  1304  000E46  0100               	movlb	0	; () banked
  1305  000E48  6BC2               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1306  000E4A  0101               	movlb	1	; () banked
  1307  000E4C  0101               	movlb	1	; () banked
  1308  000E4E  5146               	movf	main@length& (0+255),w,b
  1309  000E50  0100               	movlb	0	; () banked
  1310  000E52  0100               	movlb	0	; () banked
  1311  000E54  6FC3               	movwf	parser_lthread@length& (0+255),b
  1312  000E56  0100               	movlb	0	; () banked
  1313  000E58  6BC4               	clrf	(parser_lthread@length+1)& (0+255),b
  1314  000E5A  0100               	movlb	0	; () banked
  1315  000E5C  BFC3               	btfsc	parser_lthread@length& (0+255),7,b
  1316  000E5E  07C4               	decf	(parser_lthread@length+1)& (0+255),f,b
  1317  000E60  0101               	movlb	1	; () banked
  1318  000E62  0E01               	movlw	high main@msgbuffer
  1319  000E64  0100               	movlb	0	; () banked
  1320  000E66  0100               	movlb	0	; () banked
  1321  000E68  6FC6               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1322  000E6A  0101               	movlb	1	; () banked
  1323  000E6C  0E10               	movlw	low main@msgbuffer
  1324  000E6E  0100               	movlb	0	; () banked
  1325  000E70  0100               	movlb	0	; () banked
  1326  000E72  6FC5               	movwf	parser_lthread@msgbuf& (0+255),b
  1327  000E74  EC73  F007         	call	_parser_lthread	;wreg free
  1328                           
  1329                           ;main.c: 411: break;
  1330  000E78  D729               	goto	l3552
  1331  000E7A                     l3578:
  1332                           
  1333                           ;main.c: 414: case 31:
  1334                           ;main.c: 415: {
  1335                           ;main.c: 416: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1336  000E7A  0101               	movlb	1	; () banked
  1337  000E7C  0E01               	movlw	high main@uthread_data
  1338  000E7E  0100               	movlb	0	; () banked
  1339  000E80  0100               	movlb	0	; () banked
  1340  000E82  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1341  000E84  0101               	movlb	1	; () banked
  1342  000E86  0E2C               	movlw	low main@uthread_data
  1343  000E88  0100               	movlb	0	; () banked
  1344  000E8A  0100               	movlb	0	; () banked
  1345  000E8C  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1346  000E8E  0101               	movlb	1	; () banked
  1347  000E90  0100               	movlb	0	; () banked
  1348  000E92  C145  F0AA         	movff	main@msgtype,uart_lthread@msgtype
  1349  000E96  0100               	movlb	0	; () banked
  1350  000E98  0100               	movlb	0	; () banked
  1351  000E9A  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1352  000E9C  0101               	movlb	1	; () banked
  1353  000E9E  0101               	movlb	1	; () banked
  1354  000EA0  5146               	movf	main@length& (0+255),w,b
  1355  000EA2  0100               	movlb	0	; () banked
  1356  000EA4  0100               	movlb	0	; () banked
  1357  000EA6  6FAC               	movwf	uart_lthread@length& (0+255),b
  1358  000EA8  0100               	movlb	0	; () banked
  1359  000EAA  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1360  000EAC  0100               	movlb	0	; () banked
  1361  000EAE  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1362  000EB0  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1363  000EB2  0101               	movlb	1	; () banked
  1364  000EB4  0E01               	movlw	high main@msgbuffer
  1365  000EB6  0100               	movlb	0	; () banked
  1366  000EB8  0100               	movlb	0	; () banked
  1367  000EBA  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1368  000EBC  0101               	movlb	1	; () banked
  1369  000EBE  0E10               	movlw	low main@msgbuffer
  1370  000EC0  0100               	movlb	0	; () banked
  1371  000EC2  0100               	movlb	0	; () banked
  1372  000EC4  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1373  000EC6  EC35  F00E         	call	_uart_lthread	;wreg free
  1374                           
  1375                           ;main.c: 417: break;
  1376  000ECA  D700               	goto	l3552
  1377  000ECC                     l3582:
  1378  000ECC  0101               	movlb	1	; () banked
  1379  000ECE  0101               	movlb	1	; () banked
  1380  000ED0  5145               	movf	main@msgtype& (0+255),w,b
  1381                           
  1382                           ; Switch size 1, requested type "space"
  1383                           ; Number of cases is 3, Range of values is 30 to 50
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte           10     6 (average)
  1387                           ;	Chosen strategy is simple_byte
  1388  000ED2  0A1E               	xorlw	30	; case 30
  1389  000ED4  B4D8               	btfsc	status,2,c
  1390  000ED6  D7D1               	goto	l3578
  1391  000ED8  0A01               	xorlw	1	; case 31
  1392  000EDA  B4D8               	btfsc	status,2,c
  1393  000EDC  D7CE               	goto	l3578
  1394  000EDE  0A2D               	xorlw	45	; case 50
  1395  000EE0  B4D8               	btfsc	status,2,c
  1396  000EE2  D7AC               	goto	l3576
  1397  000EE4  D6F3               	goto	l3552
  1398  000EE6                     __end_of_main:
  1399                           	opt stack 0
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _uart_lthread *****************
  1409 ;; Defined at:
  1410 ;;		line 9 in file "source/uart_thread.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  uptr            2   40[BANK0 ] PTR struct __uart_thread
  1413 ;;		 -> main@uthread_data(2), 
  1414 ;;  msgtype         2   42[BANK0 ] int 
  1415 ;;  length          2   44[BANK0 ] int 
  1416 ;;  msgbuffer       2   46[BANK0 ] PTR unsigned char 
  1417 ;;		 -> main@msgbuffer(23), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  x               2   49[BANK0 ] int 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2   40[BANK0 ] int 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1429 ;;      Params:         0       8       0       0       0
  1430 ;;      Locals:         0       2       0       0       0
  1431 ;;      Temps:          0       1       0       0       0
  1432 ;;      Totals:         0      11       0       0       0
  1433 ;;Total ram usage:       11 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:   13
  1436 ;; This function calls:
  1437 ;;		_WriteUSART
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text1
  1444  001C6A                     __ptext1:
  1445                           	opt stack 0
  1446  001C6A                     _uart_lthread:
  1447                           	opt stack 16
  1448                           
  1449                           ;uart_thread.c: 10: if (msgtype == 30) {
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;incstack = 0
  1453  001C6A  0100               	movlb	0	; () banked
  1454  001C6C  0100               	movlb	0	; () banked
  1455  001C6E  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1456  001C70  0A1E               	xorlw	30
  1457  001C72  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1458  001C74  B4D8               	btfsc	status,2,c
  1459  001C76  0012               	return	
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1463                           
  1464                           ; BSR set to: 0
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;uart_thread.c: 11: }
  1468  001C78  0100               	movlb	0	; () banked
  1469  001C7A  0100               	movlb	0	; () banked
  1470  001C7C  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1471  001C7E  0A1F               	xorlw	31
  1472  001C80  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1473  001C82  A4D8               	btfss	status,2,c
  1474  001C84  D011               	goto	l2710
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1478  001C86  0100               	movlb	0	; () banked
  1479  001C88  0100               	movlb	0	; () banked
  1480  001C8A  51AC               	movf	uart_lthread@length& (0+255),w,b
  1481  001C8C  0100               	movlb	0	; () banked
  1482  001C8E  0100               	movlb	0	; () banked
  1483  001C90  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1484  001C92  6ED9               	movwf	fsr2l,c
  1485  001C94  0100               	movlb	0	; () banked
  1486  001C96  0100               	movlb	0	; () banked
  1487  001C98  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1488  001C9A  0100               	movlb	0	; () banked
  1489  001C9C  0100               	movlb	0	; () banked
  1490  001C9E  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1491  001CA0  6EDA               	movwf	fsr2h,c
  1492  001CA2  0E00               	movlw	0
  1493  001CA4  6EDF               	movwf	indf2,c
  1494                           
  1495                           ;uart_thread.c: 18: }
  1496  001CA6  0012               	return	
  1497  001CA8                     l2710:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;uart_thread.c: 19: else if(msgtype == 47)
  1501  001CA8  0100               	movlb	0	; () banked
  1502  001CAA  0100               	movlb	0	; () banked
  1503  001CAC  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1504  001CAE  0A2F               	xorlw	47
  1505  001CB0  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1506  001CB2  A4D8               	btfss	status,2,c
  1507  001CB4  0012               	return	
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;uart_thread.c: 20: {
  1511                           ;uart_thread.c: 22: int x = 0;
  1512  001CB6  0E00               	movlw	0
  1513  001CB8  0100               	movlb	0	; () banked
  1514  001CBA  0100               	movlb	0	; () banked
  1515  001CBC  6FB2               	movwf	(uart_lthread@x+1)& (0+255),b
  1516  001CBE  0E00               	movlw	0
  1517  001CC0  0100               	movlb	0	; () banked
  1518  001CC2  6FB1               	movwf	uart_lthread@x& (0+255),b
  1519                           
  1520                           ;uart_thread.c: 24: for(x = 0; x < length; x++ )
  1521  001CC4  0E00               	movlw	0
  1522  001CC6  0100               	movlb	0	; () banked
  1523  001CC8  0100               	movlb	0	; () banked
  1524  001CCA  6FB2               	movwf	(uart_lthread@x+1)& (0+255),b
  1525  001CCC  0E00               	movlw	0
  1526  001CCE  0100               	movlb	0	; () banked
  1527  001CD0  6FB1               	movwf	uart_lthread@x& (0+255),b
  1528  001CD2  D017               	goto	l2718
  1529  001CD4                     l474:
  1530  001CD4  A2AC               	btfss	4012,1,c	;volatile
  1531  001CD6  D7FE               	goto	l474
  1532                           
  1533                           ;uart_thread.c: 27: WriteUSART(msgbuffer[x]);
  1534  001CD8  0100               	movlb	0	; () banked
  1535  001CDA  0100               	movlb	0	; () banked
  1536  001CDC  51B1               	movf	uart_lthread@x& (0+255),w,b
  1537  001CDE  0100               	movlb	0	; () banked
  1538  001CE0  0100               	movlb	0	; () banked
  1539  001CE2  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1540  001CE4  6ED9               	movwf	fsr2l,c
  1541  001CE6  0100               	movlb	0	; () banked
  1542  001CE8  0100               	movlb	0	; () banked
  1543  001CEA  51B2               	movf	(uart_lthread@x+1)& (0+255),w,b
  1544  001CEC  0100               	movlb	0	; () banked
  1545  001CEE  0100               	movlb	0	; () banked
  1546  001CF0  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1547  001CF2  6EDA               	movwf	fsr2h,c
  1548  001CF4  50DF               	movf	indf2,w,c
  1549  001CF6  EC0A  F013         	call	_WriteUSART
  1550  001CFA  0100               	movlb	0	; () banked
  1551  001CFC  0100               	movlb	0	; () banked
  1552  001CFE  4BB1               	infsnz	uart_lthread@x& (0+255),f,b
  1553  001D00  2BB2               	incf	(uart_lthread@x+1)& (0+255),f,b
  1554  001D02                     l2718:
  1555                           
  1556                           ; BSR set to: 0
  1557  001D02  0100               	movlb	0	; () banked
  1558  001D04  0100               	movlb	0	; () banked
  1559  001D06  51B2               	movf	(uart_lthread@x+1)& (0+255),w,b
  1560  001D08  0A80               	xorlw	128
  1561  001D0A  0100               	movlb	0	; () banked
  1562  001D0C  6FB0               	movwf	??_uart_lthread& (0+255),b
  1563  001D0E  0100               	movlb	0	; () banked
  1564  001D10  51AC               	movf	uart_lthread@length& (0+255),w,b
  1565  001D12  0100               	movlb	0	; () banked
  1566  001D14  0100               	movlb	0	; () banked
  1567  001D16  5DB1               	subwf	uart_lthread@x& (0+255),w,b
  1568  001D18  0100               	movlb	0	; () banked
  1569  001D1A  0100               	movlb	0	; () banked
  1570  001D1C  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1571  001D1E  0A80               	xorlw	128
  1572  001D20  0100               	movlb	0	; () banked
  1573  001D22  59B0               	subwfb	??_uart_lthread& (0+255),w,b
  1574  001D24  B0D8               	btfsc	status,0,c
  1575                           
  1576                           ; BSR set to: 0
  1577                           
  1578                           ; BSR set to: 0
  1579                           
  1580                           ; BSR set to: 0
  1581                           
  1582                           ; BSR set to: 0
  1583                           
  1584                           ; BSR set to: 0
  1585  001D26  0012               	return	
  1586  001D28  D7D5               	goto	l474
  1587  001D2A                     __end_of_uart_lthread:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           indf2	equ	0xFDF
  1596                           fsr2h	equ	0xFDA
  1597                           fsr2l	equ	0xFD9
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _WriteUSART *****************
  1601 ;; Defined at:
  1602 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  data            1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  data            1   39[BANK0 ] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		wreg
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         0       1       0       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         0       1       0       0       0
  1620 ;;Total ram usage:        1 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:   12
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_uart_lthread
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text2
  1631  002614                     __ptext2:
  1632                           	opt stack 0
  1633  002614                     _WriteUSART:
  1634                           	opt stack 16
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;incstack = 0
  1638                           ;WriteUSART@data stored from wreg
  1639  002614  CFE8 F0A7          	movff	wreg,WriteUSART@data
  1640  002618  ACAC               	btfss	4012,6,c	;volatile
  1641  00261A  D003               	goto	l3264
  1642  00261C  90AC               	bcf	4012,0,c	;volatile
  1643  00261E  B24B               	btfsc	_USART_Status,1,c
  1644  002620  80AC               	bsf	4012,0,c	;volatile
  1645  002622                     l3264:
  1646  002622  C0A7  FFAD         	movff	WriteUSART@data,4013	;volatile
  1647  002626  0012               	return	
  1648  002628                     __end_of_WriteUSART:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           indf2	equ	0xFDF
  1657                           fsr2h	equ	0xFDA
  1658                           fsr2l	equ	0xFD9
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _timer0_lthread *****************
  1662 ;; Defined at:
  1663 ;;		line 9 in file "source/timer0_thread.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  tptr            2   39[BANK0 ] PTR struct __timer0_thre
  1666 ;;		 -> main@t0thread_data(2), 
  1667 ;;  msgtype         2   41[BANK0 ] int 
  1668 ;;  length          2   43[BANK0 ] int 
  1669 ;;  msgbuffer       2   45[BANK0 ] PTR unsigned char 
  1670 ;;		 -> main@msgbuffer(23), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  msgval          2   47[BANK0 ] PTR unsigned int 
  1673 ;;		 -> main@msgbuffer(23), 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2   39[BANK0 ] int 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1683 ;;      Params:         0       8       0       0       0
  1684 ;;      Locals:         0       2       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         0      10       0       0       0
  1687 ;;Total ram usage:       10 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:   12
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text3
  1698  002628                     __ptext3:
  1699                           	opt stack 0
  1700  002628                     _timer0_lthread:
  1701                           	opt stack 17
  1702                           
  1703                           ;timer0_thread.c: 10: unsigned int *msgval;
  1704                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1705                           
  1706                           ;incstack = 0
  1707  002628  0100               	movlb	0	; () banked
  1708  00262A  0100               	movlb	0	; () banked
  1709  00262C  C0AE  F0B0         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1710  002630  0100               	movlb	0	; () banked
  1711  002632  0100               	movlb	0	; () banked
  1712  002634  C0AD  F0AF         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1713                           
  1714                           ; BSR set to: 0
  1715  002638  0012               	return	
  1716  00263A                     __end_of_timer0_lthread:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           indf2	equ	0xFDF
  1725                           fsr2h	equ	0xFDA
  1726                           fsr2l	equ	0xFD9
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _start_i2c_slave_reply *****************
  1730 ;; Defined at:
  1731 ;;		line 122 in file "source/my_i2c.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  length          1    wreg     unsigned char 
  1734 ;;  msg             2   39[BANK0 ] PTR unsigned char 
  1735 ;;		 -> NULL(0), main@msgbuffer(23), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  length          1   44[BANK0 ] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1747 ;;      Params:         0       2       0       0       0
  1748 ;;      Locals:         0       1       0       0       0
  1749 ;;      Temps:          0       3       0       0       0
  1750 ;;      Totals:         0       6       0       0       0
  1751 ;;Total ram usage:        6 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:   12
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text4
  1762  001118                     __ptext4:
  1763                           	opt stack 0
  1764  001118                     _start_i2c_slave_reply:
  1765                           	opt stack 17
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;incstack = 0
  1769                           ;start_i2c_slave_reply@length stored from wreg
  1770  001118  CFE8 F0AC          	movff	wreg,start_i2c_slave_reply@length
  1771                           
  1772                           ;my_i2c.c: 126: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  1773  00111C  0100               	movlb	0	; () banked
  1774  00111E  EE20 F032          	lfsr	2,50
  1775  001122  0100               	movlb	0	; () banked
  1776  001124  51CC               	movf	_ic_ptr& (0+255),w,b
  1777  001126  26D9               	addwf	fsr2l,f,c
  1778  001128  0100               	movlb	0	; () banked
  1779  00112A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1780  00112C  22DA               	addwfc	fsr2h,f,c
  1781  00112E  0E00               	movlw	0
  1782  001130  6EDF               	movwf	indf2,c
  1783  001132  D09D               	goto	l2696
  1784  001134                     l2684:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;my_i2c.c: 129: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  1788  001134  0100               	movlb	0	; () banked
  1789  001136  EE20 F032          	lfsr	2,50
  1790  00113A  0100               	movlb	0	; () banked
  1791  00113C  51CC               	movf	_ic_ptr& (0+255),w,b
  1792  00113E  26D9               	addwf	fsr2l,f,c
  1793  001140  0100               	movlb	0	; () banked
  1794  001142  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1795  001144  22DA               	addwfc	fsr2h,f,c
  1796  001146  50DF               	movf	indf2,w,c
  1797  001148  0100               	movlb	0	; () banked
  1798  00114A  6FA9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1799  00114C  0100               	movlb	0	; () banked
  1800  00114E  EE20 F04B          	lfsr	2,75
  1801  001152  0100               	movlb	0	; () banked
  1802  001154  51CC               	movf	_ic_ptr& (0+255),w,b
  1803  001156  26D9               	addwf	fsr2l,f,c
  1804  001158  0100               	movlb	0	; () banked
  1805  00115A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1806  00115C  22DA               	addwfc	fsr2h,f,c
  1807  00115E  50DF               	movf	indf2,w,c
  1808  001160  0100               	movlb	0	; () banked
  1809  001162  5DA9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1810  001164  B0D8               	btfsc	status,0,c
  1811  001166  D02C               	goto	l2688
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;my_i2c.c: 130: {
  1815                           ;my_i2c.c: 131: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  1816  001168  0100               	movlb	0	; () banked
  1817  00116A  EE20 F032          	lfsr	2,50
  1818  00116E  0100               	movlb	0	; () banked
  1819  001170  51CC               	movf	_ic_ptr& (0+255),w,b
  1820  001172  26D9               	addwf	fsr2l,f,c
  1821  001174  0100               	movlb	0	; () banked
  1822  001176  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1823  001178  22DA               	addwfc	fsr2h,f,c
  1824  00117A  50DF               	movf	indf2,w,c
  1825  00117C  0100               	movlb	0	; () banked
  1826  00117E  6FA9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1827  001180  0100               	movlb	0	; () banked
  1828  001182  51A9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1829  001184  0D01               	mullw	1
  1830  001186  0E35               	movlw	53
  1831  001188  26F3               	addwf	prodl,f,c
  1832  00118A  0E00               	movlw	0
  1833  00118C  22F4               	addwfc	prodh,f,c
  1834  00118E  50F3               	movf	prodl,w,c
  1835  001190  0100               	movlb	0	; () banked
  1836  001192  0100               	movlb	0	; () banked
  1837  001194  25CC               	addwf	_ic_ptr& (0+255),w,b
  1838  001196  6ED9               	movwf	fsr2l,c
  1839  001198  50F4               	movf	prodh,w,c
  1840  00119A  0100               	movlb	0	; () banked
  1841  00119C  0100               	movlb	0	; () banked
  1842  00119E  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1843  0011A0  6EDA               	movwf	fsr2h,c
  1844  0011A2  0100               	movlb	0	; () banked
  1845  0011A4  EE10 F032          	lfsr	1,50
  1846  0011A8  0100               	movlb	0	; () banked
  1847  0011AA  51CC               	movf	_ic_ptr& (0+255),w,b
  1848  0011AC  26E1               	addwf	fsr1l,f,c
  1849  0011AE  0100               	movlb	0	; () banked
  1850  0011B0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1851  0011B2  22E2               	addwfc	fsr1h,f,c
  1852  0011B4  50E7               	movf	indf1,w,c
  1853  0011B6  0100               	movlb	0	; () banked
  1854  0011B8  6FAA               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1855  0011BA  0100               	movlb	0	; () banked
  1856  0011BC  51AA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1857  0011BE  D03C               	goto	L3
  1858  0011C0                     l2688:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;my_i2c.c: 133: else if(ic_ptr->sendBufLen != 0)
  1862  0011C0  0100               	movlb	0	; () banked
  1863  0011C2  EE20 F04B          	lfsr	2,75
  1864  0011C6  0100               	movlb	0	; () banked
  1865  0011C8  51CC               	movf	_ic_ptr& (0+255),w,b
  1866  0011CA  26D9               	addwf	fsr2l,f,c
  1867  0011CC  0100               	movlb	0	; () banked
  1868  0011CE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1869  0011D0  22DA               	addwfc	fsr2h,f,c
  1870  0011D2  50DF               	movf	indf2,w,c
  1871  0011D4  B4D8               	btfsc	status,2,c
  1872  0011D6  D00B               	goto	l2692
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;my_i2c.c: 134: {
  1876                           ;my_i2c.c: 135: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  1877  0011D8  0100               	movlb	0	; () banked
  1878  0011DA  EE20 F04B          	lfsr	2,75
  1879  0011DE  0100               	movlb	0	; () banked
  1880  0011E0  51CC               	movf	_ic_ptr& (0+255),w,b
  1881  0011E2  26D9               	addwf	fsr2l,f,c
  1882  0011E4  0100               	movlb	0	; () banked
  1883  0011E6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1884  0011E8  22DA               	addwfc	fsr2h,f,c
  1885  0011EA  50DF               	movf	indf2,w,c
  1886  0011EC  D003               	goto	L2
  1887  0011EE                     l2692:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;my_i2c.c: 137: else
  1891                           ;my_i2c.c: 138: {
  1892                           ;my_i2c.c: 139: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  1893  0011EE  0100               	movlb	0	; () banked
  1894  0011F0  0100               	movlb	0	; () banked
  1895  0011F2  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1896  0011F4                     L2:
  1897  0011F4  0100               	movlb	0	; () banked
  1898  0011F6  6FA9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1899  0011F8  6BAA               	clrf	(??_start_i2c_slave_reply+1)& (0+255),b
  1900  0011FA  0E34               	movlw	52
  1901  0011FC  0100               	movlb	0	; () banked
  1902  0011FE  27A9               	addwf	??_start_i2c_slave_reply& (0+255),f,b
  1903  001200  0E00               	movlw	0
  1904  001202  23AA               	addwfc	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1905  001204  0100               	movlb	0	; () banked
  1906  001206  51A9               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1907  001208  0100               	movlb	0	; () banked
  1908  00120A  0100               	movlb	0	; () banked
  1909  00120C  25CC               	addwf	_ic_ptr& (0+255),w,b
  1910  00120E  6ED9               	movwf	fsr2l,c
  1911  001210  0100               	movlb	0	; () banked
  1912  001212  51AA               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1913  001214  0100               	movlb	0	; () banked
  1914  001216  0100               	movlb	0	; () banked
  1915  001218  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1916  00121A  6EDA               	movwf	fsr2h,c
  1917  00121C  0100               	movlb	0	; () banked
  1918  00121E  EE10 F032          	lfsr	1,50
  1919  001222  0100               	movlb	0	; () banked
  1920  001224  51CC               	movf	_ic_ptr& (0+255),w,b
  1921  001226  26E1               	addwf	fsr1l,f,c
  1922  001228  0100               	movlb	0	; () banked
  1923  00122A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1924  00122C  22E2               	addwfc	fsr1h,f,c
  1925  00122E  50E7               	movf	indf1,w,c
  1926  001230  0100               	movlb	0	; () banked
  1927  001232  6FAB               	movwf	(??_start_i2c_slave_reply+2)& (0+255),b
  1928  001234  0100               	movlb	0	; () banked
  1929  001236  51AB               	movf	(??_start_i2c_slave_reply+2)& (0+255),w,b
  1930  001238                     L3:
  1931  001238  0D01               	mullw	1
  1932  00123A  0E1C               	movlw	28
  1933  00123C  26F3               	addwf	prodl,f,c
  1934  00123E  0E00               	movlw	0
  1935  001240  22F4               	addwfc	prodh,f,c
  1936  001242  50F3               	movf	prodl,w,c
  1937  001244  0100               	movlb	0	; () banked
  1938  001246  0100               	movlb	0	; () banked
  1939  001248  25CC               	addwf	_ic_ptr& (0+255),w,b
  1940  00124A  6EE1               	movwf	fsr1l,c
  1941  00124C  50F4               	movf	prodh,w,c
  1942  00124E  0100               	movlb	0	; () banked
  1943  001250  0100               	movlb	0	; () banked
  1944  001252  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1945  001254  6EE2               	movwf	fsr1h,c
  1946  001256  CFDF FFE7          	movff	indf2,indf1
  1947                           
  1948                           ; BSR set to: 0
  1949                           
  1950                           ; BSR set to: 0
  1951                           
  1952                           ; BSR set to: 0
  1953  00125A  0100               	movlb	0	; () banked
  1954  00125C  EE20 F032          	lfsr	2,50
  1955  001260  0100               	movlb	0	; () banked
  1956  001262  51CC               	movf	_ic_ptr& (0+255),w,b
  1957  001264  26D9               	addwf	fsr2l,f,c
  1958  001266  0100               	movlb	0	; () banked
  1959  001268  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1960  00126A  22DA               	addwfc	fsr2h,f,c
  1961  00126C  2ADF               	incf	indf2,f,c
  1962  00126E                     l2696:
  1963                           
  1964                           ; BSR set to: 0
  1965  00126E  0100               	movlb	0	; () banked
  1966  001270  EE20 F032          	lfsr	2,50
  1967  001274  0100               	movlb	0	; () banked
  1968  001276  51CC               	movf	_ic_ptr& (0+255),w,b
  1969  001278  26D9               	addwf	fsr2l,f,c
  1970  00127A  0100               	movlb	0	; () banked
  1971  00127C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1972  00127E  22DA               	addwfc	fsr2h,f,c
  1973  001280  50DF               	movf	indf2,w,c
  1974  001282  0100               	movlb	0	; () banked
  1975  001284  6FA9               	movwf	??_start_i2c_slave_reply& (0+255),b
  1976  001286  0100               	movlb	0	; () banked
  1977  001288  0100               	movlb	0	; () banked
  1978  00128A  51AC               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1979  00128C  0100               	movlb	0	; () banked
  1980  00128E  5DA9               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1981  001290  A0D8               	btfss	status,0,c
  1982  001292  D750               	goto	l2684
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;my_i2c.c: 140: }
  1986                           ;my_i2c.c: 142: }
  1987                           ;my_i2c.c: 143: ic_ptr->sendBufLen =0;
  1988                           
  1989                           ; BSR set to: 0
  1990  001294  0100               	movlb	0	; () banked
  1991  001296  EE20 F04B          	lfsr	2,75
  1992  00129A  0100               	movlb	0	; () banked
  1993  00129C  51CC               	movf	_ic_ptr& (0+255),w,b
  1994  00129E  26D9               	addwf	fsr2l,f,c
  1995  0012A0  0100               	movlb	0	; () banked
  1996  0012A2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1997  0012A4  22DA               	addwfc	fsr2h,f,c
  1998  0012A6  0E00               	movlw	0
  1999  0012A8  6EDF               	movwf	indf2,c
  2000                           
  2001                           ;my_i2c.c: 144: ic_ptr->outbuflen = length;
  2002  0012AA  0100               	movlb	0	; () banked
  2003  0012AC  EE20 F032          	lfsr	2,50
  2004  0012B0  0100               	movlb	0	; () banked
  2005  0012B2  51CC               	movf	_ic_ptr& (0+255),w,b
  2006  0012B4  26D9               	addwf	fsr2l,f,c
  2007  0012B6  0100               	movlb	0	; () banked
  2008  0012B8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2009  0012BA  22DA               	addwfc	fsr2h,f,c
  2010  0012BC  0100               	movlb	0	; () banked
  2011  0012BE  C0AC  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2012                           
  2013                           ;my_i2c.c: 145: ic_ptr->outbufind = 1;
  2014  0012C2  0100               	movlb	0	; () banked
  2015  0012C4  EE20 F033          	lfsr	2,51
  2016  0012C8  0100               	movlb	0	; () banked
  2017  0012CA  51CC               	movf	_ic_ptr& (0+255),w,b
  2018  0012CC  26D9               	addwf	fsr2l,f,c
  2019  0012CE  0100               	movlb	0	; () banked
  2020  0012D0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2021  0012D2  22DA               	addwfc	fsr2h,f,c
  2022  0012D4  0E01               	movlw	1
  2023  0012D6  6EDF               	movwf	indf2,c
  2024                           
  2025                           ;my_i2c.c: 148: SSPBUF = ic_ptr->outbuffer[0];
  2026  0012D8  0100               	movlb	0	; () banked
  2027  0012DA  EE20 F01C          	lfsr	2,28
  2028  0012DE  0100               	movlb	0	; () banked
  2029  0012E0  51CC               	movf	_ic_ptr& (0+255),w,b
  2030  0012E2  26D9               	addwf	fsr2l,f,c
  2031  0012E4  0100               	movlb	0	; () banked
  2032  0012E6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2033  0012E8  22DA               	addwfc	fsr2h,f,c
  2034  0012EA  50DF               	movf	indf2,w,c
  2035  0012EC  6EC9               	movwf	4041,c	;volatile
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;my_i2c.c: 151: SSPCON1bits.CKP = 1;
  2039  0012EE  88C6               	bsf	4038,4,c	;volatile
  2040                           
  2041                           ; BSR set to: 0
  2042  0012F0  0012               	return	
  2043  0012F2                     __end_of_start_i2c_slave_reply:
  2044                           	opt stack 0
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           prodh	equ	0xFF4
  2050                           prodl	equ	0xFF3
  2051                           postinc0	equ	0xFEE
  2052                           wreg	equ	0xFE8
  2053                           indf1	equ	0xFE7
  2054                           fsr1h	equ	0xFE2
  2055                           fsr1l	equ	0xFE1
  2056                           indf2	equ	0xFDF
  2057                           fsr2h	equ	0xFDA
  2058                           fsr2l	equ	0xFD9
  2059                           status	equ	0xFD8
  2060                           
  2061 ;; *************** function _parser_lthread *****************
  2062 ;; Defined at:
  2063 ;;		line 6 in file "source/Parser_thread.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  msgtype         2   65[BANK0 ] int 
  2066 ;;  length          2   67[BANK0 ] int 
  2067 ;;  msgbuf          2   69[BANK0 ] PTR unsigned char 
  2068 ;;		 -> main@msgbuffer(23), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  data            9    0[BANK1 ] unsigned char [9]
  2071 ;;  data            3    9[BANK1 ] unsigned char [3]
  2072 ;;  Command         1   13[BANK1 ] unsigned char 
  2073 ;;  i               2   14[BANK1 ] int 
  2074 ;;  checksum        1   12[BANK1 ] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2   65[BANK0 ] int 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2084 ;;      Params:         0       6       0       0       0
  2085 ;;      Locals:         0       0      16       0       0
  2086 ;;      Temps:          0       5       0       0       0
  2087 ;;      Totals:         0      11      16       0       0
  2088 ;;Total ram usage:       27 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:   15
  2091 ;; This function calls:
  2092 ;;		_ToMainHigh_sendmsg
  2093 ;;		_i2c_configure_master
  2094 ;;		_i2c_master_send
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text5
  2101  000EE6                     __ptext5:
  2102                           	opt stack 0
  2103  000EE6                     _parser_lthread:
  2104                           	opt stack 14
  2105                           
  2106                           ;Parser_thread.c: 9: int i = 0;
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;incstack = 0
  2110  000EE6  0E00               	movlw	0
  2111  000EE8  0101               	movlb	1	; () banked
  2112  000EEA  0101               	movlb	1	; () banked
  2113  000EEC  6F0F               	movwf	(parser_lthread@i+1)& (0+255),b
  2114  000EEE  0E00               	movlw	0
  2115  000EF0  0101               	movlb	1	; () banked
  2116  000EF2  6F0E               	movwf	parser_lthread@i& (0+255),b
  2117                           
  2118                           ; BSR set to: 1
  2119                           ;Parser_thread.c: 10: char checksum = 0x0;
  2120  000EF4  0100               	movlb	0	; () banked
  2121  000EF6  6FC7               	movwf	??_parser_lthread& (0+255),b
  2122  000EF8  0E00               	movlw	0
  2123  000EFA  0101               	movlb	1	; () banked
  2124  000EFC  0101               	movlb	1	; () banked
  2125  000EFE  6F0C               	movwf	parser_lthread@checksum& (0+255),b
  2126  000F00  0100               	movlb	0	; () banked
  2127  000F02  51C7               	movf	??_parser_lthread& (0+255),w,b
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;Parser_thread.c: 12: for(i = 0; i < length-1; i++)
  2131  000F04  0E00               	movlw	0
  2132  000F06  0101               	movlb	1	; () banked
  2133  000F08  0101               	movlb	1	; () banked
  2134  000F0A  6F0F               	movwf	(parser_lthread@i+1)& (0+255),b
  2135  000F0C  0E00               	movlw	0
  2136  000F0E  0101               	movlb	1	; () banked
  2137  000F10  6F0E               	movwf	parser_lthread@i& (0+255),b
  2138  000F12  D016               	goto	l3602
  2139  000F14                     l3598:
  2140                           
  2141                           ;Parser_thread.c: 13: {
  2142                           ;Parser_thread.c: 14: checksum += msgbuf[i];
  2143  000F14  0101               	movlb	1	; () banked
  2144  000F16  0101               	movlb	1	; () banked
  2145  000F18  510E               	movf	parser_lthread@i& (0+255),w,b
  2146  000F1A  0100               	movlb	0	; () banked
  2147  000F1C  0100               	movlb	0	; () banked
  2148  000F1E  25C5               	addwf	parser_lthread@msgbuf& (0+255),w,b
  2149  000F20  6ED9               	movwf	fsr2l,c
  2150  000F22  0101               	movlb	1	; () banked
  2151  000F24  0101               	movlb	1	; () banked
  2152  000F26  510F               	movf	(parser_lthread@i+1)& (0+255),w,b
  2153  000F28  0100               	movlb	0	; () banked
  2154  000F2A  0100               	movlb	0	; () banked
  2155  000F2C  21C6               	addwfc	(parser_lthread@msgbuf+1)& (0+255),w,b
  2156  000F2E  6EDA               	movwf	fsr2h,c
  2157  000F30  50DF               	movf	indf2,w,c
  2158  000F32  0101               	movlb	1	; () banked
  2159  000F34  0101               	movlb	1	; () banked
  2160  000F36  270C               	addwf	parser_lthread@checksum& (0+255),f,b
  2161                           
  2162                           ; BSR set to: 1
  2163  000F38  0101               	movlb	1	; () banked
  2164  000F3A  0101               	movlb	1	; () banked
  2165  000F3C  4B0E               	infsnz	parser_lthread@i& (0+255),f,b
  2166  000F3E  2B0F               	incf	(parser_lthread@i+1)& (0+255),f,b
  2167  000F40                     l3602:
  2168                           
  2169                           ; BSR set to: 1
  2170  000F40  0EFF               	movlw	255
  2171  000F42  0100               	movlb	0	; () banked
  2172  000F44  6FC7               	movwf	??_parser_lthread& (0+255),b
  2173  000F46  0EFF               	movlw	255
  2174  000F48  6FC8               	movwf	(??_parser_lthread+1)& (0+255),b
  2175  000F4A  0100               	movlb	0	; () banked
  2176  000F4C  C0C3  F0C9         	movff	parser_lthread@length,??_parser_lthread+2
  2177  000F50  0100               	movlb	0	; () banked
  2178  000F52  C0C4  F0CA         	movff	parser_lthread@length+1,??_parser_lthread+3
  2179  000F56  0100               	movlb	0	; () banked
  2180  000F58  51C7               	movf	??_parser_lthread& (0+255),w,b
  2181  000F5A  0100               	movlb	0	; () banked
  2182  000F5C  27C9               	addwf	(??_parser_lthread+2)& (0+255),f,b
  2183  000F5E  0100               	movlb	0	; () banked
  2184  000F60  51C8               	movf	(??_parser_lthread+1)& (0+255),w,b
  2185  000F62  0100               	movlb	0	; () banked
  2186  000F64  23CA               	addwfc	(??_parser_lthread+3)& (0+255),f,b
  2187  000F66  0101               	movlb	1	; () banked
  2188  000F68  0101               	movlb	1	; () banked
  2189  000F6A  510F               	movf	(parser_lthread@i+1)& (0+255),w,b
  2190  000F6C  0A80               	xorlw	128
  2191  000F6E  0100               	movlb	0	; () banked
  2192  000F70  6FCB               	movwf	(??_parser_lthread+4)& (0+255),b
  2193  000F72  51C9               	movf	(??_parser_lthread+2)& (0+255),w,b
  2194  000F74  0101               	movlb	1	; () banked
  2195  000F76  0101               	movlb	1	; () banked
  2196  000F78  5D0E               	subwf	parser_lthread@i& (0+255),w,b
  2197  000F7A  0100               	movlb	0	; () banked
  2198  000F7C  51CA               	movf	(??_parser_lthread+3)& (0+255),w,b
  2199  000F7E  0A80               	xorlw	128
  2200  000F80  0100               	movlb	0	; () banked
  2201  000F82  59CB               	subwfb	(??_parser_lthread+4)& (0+255),w,b
  2202  000F84  A0D8               	btfss	status,0,c
  2203  000F86  D7C6               	goto	l3598
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;Parser_thread.c: 15: }
  2207                           ;Parser_thread.c: 16: if(checksum == msgbuf[length-1])
  2208                           
  2209                           ; BSR set to: 0
  2210  000F88  0EFF               	movlw	255
  2211  000F8A  0100               	movlb	0	; () banked
  2212  000F8C  6FC7               	movwf	??_parser_lthread& (0+255),b
  2213  000F8E  0EFF               	movlw	255
  2214  000F90  6FC8               	movwf	(??_parser_lthread+1)& (0+255),b
  2215  000F92  0100               	movlb	0	; () banked
  2216  000F94  C0C3  F0C9         	movff	parser_lthread@length,??_parser_lthread+2
  2217  000F98  0100               	movlb	0	; () banked
  2218  000F9A  C0C4  F0CA         	movff	parser_lthread@length+1,??_parser_lthread+3
  2219  000F9E  0100               	movlb	0	; () banked
  2220  000FA0  51C7               	movf	??_parser_lthread& (0+255),w,b
  2221  000FA2  0100               	movlb	0	; () banked
  2222  000FA4  27C9               	addwf	(??_parser_lthread+2)& (0+255),f,b
  2223  000FA6  0100               	movlb	0	; () banked
  2224  000FA8  51C8               	movf	(??_parser_lthread+1)& (0+255),w,b
  2225  000FAA  0100               	movlb	0	; () banked
  2226  000FAC  23CA               	addwfc	(??_parser_lthread+3)& (0+255),f,b
  2227  000FAE  0100               	movlb	0	; () banked
  2228  000FB0  51C9               	movf	(??_parser_lthread+2)& (0+255),w,b
  2229  000FB2  0100               	movlb	0	; () banked
  2230  000FB4  0100               	movlb	0	; () banked
  2231  000FB6  25C5               	addwf	parser_lthread@msgbuf& (0+255),w,b
  2232  000FB8  6ED9               	movwf	fsr2l,c
  2233  000FBA  0100               	movlb	0	; () banked
  2234  000FBC  51CA               	movf	(??_parser_lthread+3)& (0+255),w,b
  2235  000FBE  0100               	movlb	0	; () banked
  2236  000FC0  0100               	movlb	0	; () banked
  2237  000FC2  21C6               	addwfc	(parser_lthread@msgbuf+1)& (0+255),w,b
  2238  000FC4  6EDA               	movwf	fsr2h,c
  2239  000FC6  0101               	movlb	1	; () banked
  2240  000FC8  0101               	movlb	1	; () banked
  2241  000FCA  510C               	movf	parser_lthread@checksum& (0+255),w,b
  2242  000FCC  62DF               	cpfseq	indf2,c
  2243  000FCE  0012               	return	
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;Parser_thread.c: 17: {
  2247                           ;Parser_thread.c: 18: char Command = (msgbuf[1] >> 4) & 0xF;
  2248  000FD0  0100               	movlb	0	; () banked
  2249  000FD2  EE20 F001          	lfsr	2,1
  2250  000FD6  0100               	movlb	0	; () banked
  2251  000FD8  51C5               	movf	parser_lthread@msgbuf& (0+255),w,b
  2252  000FDA  26D9               	addwf	fsr2l,f,c
  2253  000FDC  0100               	movlb	0	; () banked
  2254  000FDE  51C6               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2255  000FE0  22DA               	addwfc	fsr2h,f,c
  2256  000FE2  50DF               	movf	indf2,w,c
  2257  000FE4  0100               	movlb	0	; () banked
  2258  000FE6  6FC7               	movwf	??_parser_lthread& (0+255),b
  2259  000FE8  0100               	movlb	0	; () banked
  2260  000FEA  39C7               	swapf	??_parser_lthread& (0+255),w,b
  2261  000FEC  0B0F               	andlw	15
  2262  000FEE  0B0F               	andlw	15
  2263  000FF0  0101               	movlb	1	; () banked
  2264  000FF2  0101               	movlb	1	; () banked
  2265  000FF4  6F0D               	movwf	parser_lthread@Command& (0+255),b
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;Parser_thread.c: 20: if(Command == 0x02)
  2269  000FF6  0101               	movlb	1	; () banked
  2270  000FF8  0101               	movlb	1	; () banked
  2271  000FFA  510D               	movf	parser_lthread@Command& (0+255),w,b
  2272  000FFC  0A02               	xorlw	2
  2273  000FFE  A4D8               	btfss	status,2,c
  2274  001000  D029               	goto	l444
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;Parser_thread.c: 21: {
  2278                           ;Parser_thread.c: 22: char data[3];
  2279                           ;Parser_thread.c: 23: data[0] = 0x07;
  2280  001002  0100               	movlb	0	; () banked
  2281  001004  6FC7               	movwf	??_parser_lthread& (0+255),b
  2282  001006  0E07               	movlw	7
  2283  001008  0101               	movlb	1	; () banked
  2284  00100A  0101               	movlb	1	; () banked
  2285  00100C  6F09               	movwf	parser_lthread@data& (0+255),b
  2286  00100E  0100               	movlb	0	; () banked
  2287  001010  51C7               	movf	??_parser_lthread& (0+255),w,b
  2288                           
  2289                           ;Parser_thread.c: 24: data[1] = 0x01;
  2290  001012  0100               	movlb	0	; () banked
  2291  001014  6FC7               	movwf	??_parser_lthread& (0+255),b
  2292  001016  0E01               	movlw	1
  2293  001018  0101               	movlb	1	; () banked
  2294  00101A  0101               	movlb	1	; () banked
  2295  00101C  6F0A               	movwf	(parser_lthread@data+1)& (0+255),b
  2296  00101E  0100               	movlb	0	; () banked
  2297  001020  51C7               	movf	??_parser_lthread& (0+255),w,b
  2298                           
  2299                           ;Parser_thread.c: 25: data[2] = 0x02;
  2300  001022  0100               	movlb	0	; () banked
  2301  001024  6FC7               	movwf	??_parser_lthread& (0+255),b
  2302  001026  0E02               	movlw	2
  2303  001028  0101               	movlb	1	; () banked
  2304  00102A  0101               	movlb	1	; () banked
  2305  00102C  6F0B               	movwf	(parser_lthread@data+2)& (0+255),b
  2306  00102E  0100               	movlb	0	; () banked
  2307  001030  51C7               	movf	??_parser_lthread& (0+255),w,b
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;Parser_thread.c: 26: i2c_configure_master(0x4F);
  2311  001032  0E4F               	movlw	79
  2312  001034  ECEE  F010         	call	_i2c_configure_master
  2313                           
  2314                           ;Parser_thread.c: 27: i2c_master_send(0x03,&data);
  2315  001038  0101               	movlb	1	; () banked
  2316  00103A  0E01               	movlw	high parser_lthread@data
  2317  00103C  0100               	movlb	0	; () banked
  2318  00103E  0100               	movlb	0	; () banked
  2319  001040  6FA8               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2320  001042  0101               	movlb	1	; () banked
  2321  001044  0E09               	movlw	low parser_lthread@data
  2322  001046  0100               	movlb	0	; () banked
  2323  001048  0100               	movlb	0	; () banked
  2324  00104A  6FA7               	movwf	i2c_master_send@msg& (0+255),b
  2325  00104C  0E03               	movlw	3
  2326  00104E  ECFB  F00C         	call	_i2c_master_send
  2327                           
  2328                           ;Parser_thread.c: 31: }
  2329  001052  0012               	return	
  2330  001054                     l444:
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;Parser_thread.c: 32: else if(Command == 0x00)
  2334  001054  0101               	movlb	1	; () banked
  2335  001056  0101               	movlb	1	; () banked
  2336  001058  670D               	tstfsz	parser_lthread@Command& (0+255),b
  2337  00105A  0012               	return	
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;Parser_thread.c: 33: {
  2341                           ;Parser_thread.c: 35: unsigned char data[9];
  2342                           ;Parser_thread.c: 36: data[0] = 0;
  2343  00105C  0100               	movlb	0	; () banked
  2344  00105E  6FC7               	movwf	??_parser_lthread& (0+255),b
  2345  001060  0E00               	movlw	0
  2346  001062  0101               	movlb	1	; () banked
  2347  001064  0101               	movlb	1	; () banked
  2348  001066  6F00               	movwf	parser_lthread@data_1510& (0+255),b
  2349  001068  0100               	movlb	0	; () banked
  2350  00106A  51C7               	movf	??_parser_lthread& (0+255),w,b
  2351                           
  2352                           ;Parser_thread.c: 37: data[1] = 0x02;
  2353  00106C  0100               	movlb	0	; () banked
  2354  00106E  6FC7               	movwf	??_parser_lthread& (0+255),b
  2355  001070  0E02               	movlw	2
  2356  001072  0101               	movlb	1	; () banked
  2357  001074  0101               	movlb	1	; () banked
  2358  001076  6F01               	movwf	(parser_lthread@data_1510+1)& (0+255),b
  2359  001078  0100               	movlb	0	; () banked
  2360  00107A  51C7               	movf	??_parser_lthread& (0+255),w,b
  2361                           
  2362                           ;Parser_thread.c: 38: data[2] = 0x00;
  2363  00107C  0100               	movlb	0	; () banked
  2364  00107E  6FC7               	movwf	??_parser_lthread& (0+255),b
  2365  001080  0E00               	movlw	0
  2366  001082  0101               	movlb	1	; () banked
  2367  001084  0101               	movlb	1	; () banked
  2368  001086  6F02               	movwf	(parser_lthread@data_1510+2)& (0+255),b
  2369  001088  0100               	movlb	0	; () banked
  2370  00108A  51C7               	movf	??_parser_lthread& (0+255),w,b
  2371                           
  2372                           ;Parser_thread.c: 39: data[3] = 0x00;
  2373  00108C  0100               	movlb	0	; () banked
  2374  00108E  6FC7               	movwf	??_parser_lthread& (0+255),b
  2375  001090  0E00               	movlw	0
  2376  001092  0101               	movlb	1	; () banked
  2377  001094  0101               	movlb	1	; () banked
  2378  001096  6F03               	movwf	(parser_lthread@data_1510+3)& (0+255),b
  2379  001098  0100               	movlb	0	; () banked
  2380  00109A  51C7               	movf	??_parser_lthread& (0+255),w,b
  2381                           
  2382                           ;Parser_thread.c: 40: data[4] = 0x01;
  2383  00109C  0100               	movlb	0	; () banked
  2384  00109E  6FC7               	movwf	??_parser_lthread& (0+255),b
  2385  0010A0  0E01               	movlw	1
  2386  0010A2  0101               	movlb	1	; () banked
  2387  0010A4  0101               	movlb	1	; () banked
  2388  0010A6  6F04               	movwf	(parser_lthread@data_1510+4)& (0+255),b
  2389  0010A8  0100               	movlb	0	; () banked
  2390  0010AA  51C7               	movf	??_parser_lthread& (0+255),w,b
  2391                           
  2392                           ;Parser_thread.c: 41: data[5] = 0x02;
  2393  0010AC  0100               	movlb	0	; () banked
  2394  0010AE  6FC7               	movwf	??_parser_lthread& (0+255),b
  2395  0010B0  0E02               	movlw	2
  2396  0010B2  0101               	movlb	1	; () banked
  2397  0010B4  0101               	movlb	1	; () banked
  2398  0010B6  6F05               	movwf	(parser_lthread@data_1510+5)& (0+255),b
  2399  0010B8  0100               	movlb	0	; () banked
  2400  0010BA  51C7               	movf	??_parser_lthread& (0+255),w,b
  2401                           
  2402                           ;Parser_thread.c: 42: data[6] = 0x03;
  2403  0010BC  0100               	movlb	0	; () banked
  2404  0010BE  6FC7               	movwf	??_parser_lthread& (0+255),b
  2405  0010C0  0E03               	movlw	3
  2406  0010C2  0101               	movlb	1	; () banked
  2407  0010C4  0101               	movlb	1	; () banked
  2408  0010C6  6F06               	movwf	(parser_lthread@data_1510+6)& (0+255),b
  2409  0010C8  0100               	movlb	0	; () banked
  2410  0010CA  51C7               	movf	??_parser_lthread& (0+255),w,b
  2411                           
  2412                           ;Parser_thread.c: 43: data[7] = 0x04;
  2413  0010CC  0100               	movlb	0	; () banked
  2414  0010CE  6FC7               	movwf	??_parser_lthread& (0+255),b
  2415  0010D0  0E04               	movlw	4
  2416  0010D2  0101               	movlb	1	; () banked
  2417  0010D4  0101               	movlb	1	; () banked
  2418  0010D6  6F07               	movwf	(parser_lthread@data_1510+7)& (0+255),b
  2419  0010D8  0100               	movlb	0	; () banked
  2420  0010DA  51C7               	movf	??_parser_lthread& (0+255),w,b
  2421                           
  2422                           ;Parser_thread.c: 44: data[8] = 0x0C;
  2423  0010DC  0100               	movlb	0	; () banked
  2424  0010DE  6FC7               	movwf	??_parser_lthread& (0+255),b
  2425  0010E0  0E0C               	movlw	12
  2426  0010E2  0101               	movlb	1	; () banked
  2427  0010E4  0101               	movlb	1	; () banked
  2428  0010E6  6F08               	movwf	(parser_lthread@data_1510+8)& (0+255),b
  2429  0010E8  0100               	movlb	0	; () banked
  2430  0010EA  51C7               	movf	??_parser_lthread& (0+255),w,b
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;Parser_thread.c: 45: ToMainHigh_sendmsg(sizeof(data),47,(void*)&data);
  2434  0010EC  0100               	movlb	0	; () banked
  2435  0010EE  6FC7               	movwf	??_parser_lthread& (0+255),b
  2436  0010F0  0E2F               	movlw	47
  2437  0010F2  0100               	movlb	0	; () banked
  2438  0010F4  0100               	movlb	0	; () banked
  2439  0010F6  6FBD               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2440  0010F8  0100               	movlb	0	; () banked
  2441  0010FA  51C7               	movf	??_parser_lthread& (0+255),w,b
  2442  0010FC  0101               	movlb	1	; () banked
  2443  0010FE  0E01               	movlw	high parser_lthread@data_1510
  2444  001100  0100               	movlb	0	; () banked
  2445  001102  0100               	movlb	0	; () banked
  2446  001104  6FBF               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  2447  001106  0101               	movlb	1	; () banked
  2448  001108  0E00               	movlw	low parser_lthread@data_1510
  2449  00110A  0100               	movlb	0	; () banked
  2450  00110C  0100               	movlb	0	; () banked
  2451  00110E  6FBE               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  2452  001110  0E09               	movlw	9
  2453  001112  EC25  F012         	call	_ToMainHigh_sendmsg
  2454  001116  0012               	return	
  2455  001118                     __end_of_parser_lthread:
  2456                           	opt stack 0
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           prodh	equ	0xFF4
  2462                           prodl	equ	0xFF3
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           indf1	equ	0xFE7
  2466                           fsr1h	equ	0xFE2
  2467                           fsr1l	equ	0xFE1
  2468                           indf2	equ	0xFDF
  2469                           fsr2h	equ	0xFDA
  2470                           fsr2l	equ	0xFD9
  2471                           status	equ	0xFD8
  2472                           
  2473 ;; *************** function _i2c_master_send *****************
  2474 ;; Defined at:
  2475 ;;		line 59 in file "source/my_i2c.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  length          1    wreg     unsigned char 
  2478 ;;  msg             2   39[BANK0 ] PTR unsigned char 
  2479 ;;		 -> parser_lthread@data(3), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  length          1   43[BANK0 ] unsigned char 
  2482 ;;  currentLengt    2   44[BANK0 ] unsigned int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      unsigned char 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2492 ;;      Params:         0       2       0       0       0
  2493 ;;      Locals:         0       3       0       0       0
  2494 ;;      Temps:          0       2       0       0       0
  2495 ;;      Totals:         0       7       0       0       0
  2496 ;;Total ram usage:        7 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:   12
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_parser_lthread
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text6
  2507  0019F6                     __ptext6:
  2508                           	opt stack 0
  2509  0019F6                     _i2c_master_send:
  2510                           	opt stack 16
  2511                           
  2512                           ;incstack = 0
  2513                           ;i2c_master_send@length stored from wreg
  2514  0019F6  CFE8 F0AB          	movff	wreg,i2c_master_send@length
  2515                           
  2516                           ;my_i2c.c: 62: if (SSPSTATbits.READ_WRITE == 1){
  2517  0019FA  B4C7               	btfsc	4039,2,c	;volatile
  2518  0019FC  0012               	return	
  2519                           
  2520                           ;my_i2c.c: 64: }
  2521                           ;my_i2c.c: 67: unsigned int currentLength;
  2522                           ;my_i2c.c: 68: for (currentLength = 0; currentLength < length; currentLength++){
  2523                           
  2524                           ;my_i2c.c: 63: return -1;
  2525                           ;	Return value of _i2c_master_send is never used
  2526  0019FE  0E00               	movlw	0
  2527  001A00  0100               	movlb	0	; () banked
  2528  001A02  0100               	movlb	0	; () banked
  2529  001A04  6FAD               	movwf	(i2c_master_send@currentLength+1)& (0+255),b
  2530  001A06  0E00               	movlw	0
  2531  001A08  0100               	movlb	0	; () banked
  2532  001A0A  6FAC               	movwf	i2c_master_send@currentLength& (0+255),b
  2533  001A0C  D02C               	goto	l3770
  2534  001A0E                     l3766:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;my_i2c.c: 69: ic_ptr->outbuffer[currentLength] = msg[currentLength];
  2538  001A0E  0100               	movlb	0	; () banked
  2539  001A10  0100               	movlb	0	; () banked
  2540  001A12  51AC               	movf	i2c_master_send@currentLength& (0+255),w,b
  2541  001A14  0100               	movlb	0	; () banked
  2542  001A16  0100               	movlb	0	; () banked
  2543  001A18  25A7               	addwf	i2c_master_send@msg& (0+255),w,b
  2544  001A1A  6ED9               	movwf	fsr2l,c
  2545  001A1C  0100               	movlb	0	; () banked
  2546  001A1E  0100               	movlb	0	; () banked
  2547  001A20  51AD               	movf	(i2c_master_send@currentLength+1)& (0+255),w,b
  2548  001A22  0100               	movlb	0	; () banked
  2549  001A24  0100               	movlb	0	; () banked
  2550  001A26  21A8               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2551  001A28  6EDA               	movwf	fsr2h,c
  2552  001A2A  0E1C               	movlw	28
  2553  001A2C  0100               	movlb	0	; () banked
  2554  001A2E  0100               	movlb	0	; () banked
  2555  001A30  25AC               	addwf	i2c_master_send@currentLength& (0+255),w,b
  2556  001A32  0100               	movlb	0	; () banked
  2557  001A34  6FA9               	movwf	??_i2c_master_send& (0+255),b
  2558  001A36  0E00               	movlw	0
  2559  001A38  0100               	movlb	0	; () banked
  2560  001A3A  0100               	movlb	0	; () banked
  2561  001A3C  21AD               	addwfc	(i2c_master_send@currentLength+1)& (0+255),w,b
  2562  001A3E  0100               	movlb	0	; () banked
  2563  001A40  6FAA               	movwf	(??_i2c_master_send+1)& (0+255),b
  2564  001A42  0100               	movlb	0	; () banked
  2565  001A44  51A9               	movf	??_i2c_master_send& (0+255),w,b
  2566  001A46  0100               	movlb	0	; () banked
  2567  001A48  0100               	movlb	0	; () banked
  2568  001A4A  25CC               	addwf	_ic_ptr& (0+255),w,b
  2569  001A4C  6EE1               	movwf	fsr1l,c
  2570  001A4E  0100               	movlb	0	; () banked
  2571  001A50  51AA               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2572  001A52  0100               	movlb	0	; () banked
  2573  001A54  0100               	movlb	0	; () banked
  2574  001A56  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2575  001A58  6EE2               	movwf	fsr1h,c
  2576  001A5A  CFDF FFE7          	movff	indf2,indf1
  2577                           
  2578                           ; BSR set to: 0
  2579  001A5E  0100               	movlb	0	; () banked
  2580  001A60  0100               	movlb	0	; () banked
  2581  001A62  4BAC               	infsnz	i2c_master_send@currentLength& (0+255),f,b
  2582  001A64  2BAD               	incf	(i2c_master_send@currentLength+1)& (0+255),f,b
  2583  001A66                     l3770:
  2584                           
  2585                           ; BSR set to: 0
  2586  001A66  0100               	movlb	0	; () banked
  2587  001A68  0100               	movlb	0	; () banked
  2588  001A6A  51AB               	movf	i2c_master_send@length& (0+255),w,b
  2589  001A6C  0100               	movlb	0	; () banked
  2590  001A6E  6FA9               	movwf	??_i2c_master_send& (0+255),b
  2591  001A70  6BAA               	clrf	(??_i2c_master_send+1)& (0+255),b
  2592  001A72  0100               	movlb	0	; () banked
  2593  001A74  51A9               	movf	??_i2c_master_send& (0+255),w,b
  2594  001A76  0100               	movlb	0	; () banked
  2595  001A78  0100               	movlb	0	; () banked
  2596  001A7A  5DAC               	subwf	i2c_master_send@currentLength& (0+255),w,b
  2597  001A7C  0100               	movlb	0	; () banked
  2598  001A7E  51AA               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2599  001A80  0100               	movlb	0	; () banked
  2600  001A82  0100               	movlb	0	; () banked
  2601  001A84  59AD               	subwfb	(i2c_master_send@currentLength+1)& (0+255),w,b
  2602  001A86  A0D8               	btfss	status,0,c
  2603  001A88  D7C2               	goto	l3766
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;my_i2c.c: 70: }
  2607                           ;my_i2c.c: 72: ic_ptr->outbuflen = length;
  2608                           
  2609                           ; BSR set to: 0
  2610  001A8A  0100               	movlb	0	; () banked
  2611  001A8C  EE20 F032          	lfsr	2,50
  2612  001A90  0100               	movlb	0	; () banked
  2613  001A92  51CC               	movf	_ic_ptr& (0+255),w,b
  2614  001A94  26D9               	addwf	fsr2l,f,c
  2615  001A96  0100               	movlb	0	; () banked
  2616  001A98  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2617  001A9A  22DA               	addwfc	fsr2h,f,c
  2618  001A9C  0100               	movlb	0	; () banked
  2619  001A9E  C0AB  FFDF         	movff	i2c_master_send@length,indf2
  2620                           
  2621                           ;my_i2c.c: 73: ic_ptr->outbufind = 0;
  2622  001AA2  0100               	movlb	0	; () banked
  2623  001AA4  EE20 F033          	lfsr	2,51
  2624  001AA8  0100               	movlb	0	; () banked
  2625  001AAA  51CC               	movf	_ic_ptr& (0+255),w,b
  2626  001AAC  26D9               	addwf	fsr2l,f,c
  2627  001AAE  0100               	movlb	0	; () banked
  2628  001AB0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2629  001AB2  22DA               	addwfc	fsr2h,f,c
  2630  001AB4  0E00               	movlw	0
  2631  001AB6  6EDF               	movwf	indf2,c
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;my_i2c.c: 77: SSPCON2bits.RCEN = 0;
  2635  001AB8  96C5               	bcf	4037,3,c	;volatile
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;my_i2c.c: 78: SSPCON2bits.SEN = 1;
  2639  001ABA  80C5               	bsf	4037,0,c	;volatile
  2640                           
  2641                           ;my_i2c.c: 80: ic_ptr->status = 0x9;
  2642  001ABC  0100               	movlb	0	; () banked
  2643  001ABE  EE20 F019          	lfsr	2,25
  2644  001AC2  0100               	movlb	0	; () banked
  2645  001AC4  51CC               	movf	_ic_ptr& (0+255),w,b
  2646  001AC6  26D9               	addwf	fsr2l,f,c
  2647  001AC8  0100               	movlb	0	; () banked
  2648  001ACA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2649  001ACC  22DA               	addwfc	fsr2h,f,c
  2650  001ACE  0E09               	movlw	9
  2651  001AD0  6EDF               	movwf	indf2,c
  2652  001AD2  0012               	return	
  2653  001AD4                     __end_of_i2c_master_send:
  2654                           	opt stack 0
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           prodh	equ	0xFF4
  2660                           prodl	equ	0xFF3
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           indf1	equ	0xFE7
  2664                           fsr1h	equ	0xFE2
  2665                           fsr1l	equ	0xFE1
  2666                           indf2	equ	0xFDF
  2667                           fsr2h	equ	0xFDA
  2668                           fsr2l	equ	0xFD9
  2669                           status	equ	0xFD8
  2670                           
  2671 ;; *************** function _i2c_configure_master *****************
  2672 ;; Defined at:
  2673 ;;		line 22 in file "source/my_i2c.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  slave_addr      1    wreg     unsigned char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  slave_addr      1   40[BANK0 ] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         0       1       0       0       0
  2689 ;;      Temps:          0       1       0       0       0
  2690 ;;      Totals:         0       2       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:   12
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_parser_lthread
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text7
  2702  0021DC                     __ptext7:
  2703                           	opt stack 0
  2704  0021DC                     _i2c_configure_master:
  2705                           	opt stack 16
  2706                           
  2707                           ;incstack = 0
  2708                           ;i2c_configure_master@slave_addr stored from wreg
  2709  0021DC  CFE8 F0A8          	movff	wreg,i2c_configure_master@slave_addr
  2710                           
  2711                           ;my_i2c.c: 23: i2c_mode = 1;
  2712  0021E0  0100               	movlb	0	; () banked
  2713  0021E2  6FA7               	movwf	??_i2c_configure_master& (0+255),b
  2714  0021E4  0E01               	movlw	1
  2715  0021E6  0100               	movlb	0	; () banked
  2716  0021E8  0100               	movlb	0	; () banked
  2717  0021EA  6FCE               	movwf	_i2c_mode& (0+255),b
  2718  0021EC  0100               	movlb	0	; () banked
  2719  0021EE  51A7               	movf	??_i2c_configure_master& (0+255),w,b
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;my_i2c.c: 25: ic_ptr->slave_addr = slave_addr;
  2723  0021F0  0100               	movlb	0	; () banked
  2724  0021F2  EE20 F034          	lfsr	2,52
  2725  0021F6  0100               	movlb	0	; () banked
  2726  0021F8  51CC               	movf	_ic_ptr& (0+255),w,b
  2727  0021FA  26D9               	addwf	fsr2l,f,c
  2728  0021FC  0100               	movlb	0	; () banked
  2729  0021FE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  2730  002200  22DA               	addwfc	fsr2h,f,c
  2731  002202  0100               	movlb	0	; () banked
  2732  002204  C0A8  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;my_i2c.c: 28: SSPCON1 = 0x0;
  2736  002208  0E00               	movlw	0
  2737  00220A  6EC6               	movwf	4038,c	;volatile
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;my_i2c.c: 29: SSPCON2 = 0x0;
  2741  00220C  0E00               	movlw	0
  2742  00220E  6EC5               	movwf	4037,c	;volatile
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;my_i2c.c: 30: SSPSTAT = 0x0;
  2746  002210  0E00               	movlw	0
  2747  002212  6EC7               	movwf	4039,c	;volatile
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;my_i2c.c: 33: SSPADD = 0x63;
  2751  002214  0E63               	movlw	99
  2752  002216  6EC8               	movwf	4040,c	;volatile
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;my_i2c.c: 36: SSPCON1bits.SSPM = 0x08;
  2756  002218  50C6               	movf	4038,w,c	;volatile
  2757  00221A  0BF0               	andlw	-16
  2758  00221C  0908               	iorlw	8
  2759  00221E  6EC6               	movwf	4038,c	;volatile
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;my_i2c.c: 37: SSPCON1bits.SSPEN = 1;
  2763  002220  8AC6               	bsf	4038,5,c	;volatile
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;my_i2c.c: 40: SSPSTAT = 0b10000000;
  2767  002222  0E80               	movlw	128
  2768  002224  6EC7               	movwf	4039,c	;volatile
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;my_i2c.c: 43: LATCbits.LATC3 = 1;
  2772  002226  868B               	bsf	3979,3,c	;volatile
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;my_i2c.c: 44: LATCbits.LATC4 = 1;
  2776  002228  888B               	bsf	3979,4,c	;volatile
  2777                           
  2778                           ; BSR set to: 0
  2779  00222A  0012               	return	
  2780  00222C                     __end_of_i2c_configure_master:
  2781                           	opt stack 0
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           postinc0	equ	0xFEE
  2789                           wreg	equ	0xFE8
  2790                           indf1	equ	0xFE7
  2791                           fsr1h	equ	0xFE2
  2792                           fsr1l	equ	0xFE1
  2793                           indf2	equ	0xFDF
  2794                           fsr2h	equ	0xFDA
  2795                           fsr2l	equ	0xFD9
  2796                           status	equ	0xFD8
  2797                           
  2798 ;; *************** function _ToMainHigh_sendmsg *****************
  2799 ;; Defined at:
  2800 ;;		line 126 in file "source/messages.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  length          1    wreg     unsigned char 
  2803 ;;  msgtype         1   61[BANK0 ] unsigned char 
  2804 ;;  data            2   62[BANK0 ] PTR void 
  2805 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  2806 ;;		 -> motor_lthread@message(2), main@ic(77), 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  length          1   64[BANK0 ] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      char 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2818 ;;      Params:         0       3       0       0       0
  2819 ;;      Locals:         0       1       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         0       4       0       0       0
  2822 ;;Total ram usage:        4 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:   14
  2825 ;; This function calls:
  2826 ;;		_send_msg
  2827 ;; This function is called by:
  2828 ;;		_parser_lthread
  2829 ;;		_motor_lthread
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text8
  2834  00244A                     __ptext8:
  2835                           	opt stack 0
  2836  00244A                     _ToMainHigh_sendmsg:
  2837                           	opt stack 14
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;incstack = 0
  2841                           ;ToMainHigh_sendmsg@length stored from wreg
  2842  00244A  CFE8 F0C0          	movff	wreg,ToMainHigh_sendmsg@length
  2843                           
  2844                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  2845                           ;	Return value of _ToMainHigh_sendmsg is never used
  2846  00244E  0101               	movlb	1	; () banked
  2847  002450  0E01               	movlw	high _ToMainHigh_MQ
  2848  002452  0100               	movlb	0	; () banked
  2849  002454  0100               	movlb	0	; () banked
  2850  002456  6FB2               	movwf	(send_msg@qptr+1)& (0+255),b
  2851  002458  0101               	movlb	1	; () banked
  2852  00245A  0E94               	movlw	low _ToMainHigh_MQ
  2853  00245C  0100               	movlb	0	; () banked
  2854  00245E  0100               	movlb	0	; () banked
  2855  002460  6FB1               	movwf	send_msg@qptr& (0+255),b
  2856  002462  C0C0  F0B3         	movff	ToMainHigh_sendmsg@length,send_msg@length
  2857  002466  C0BD  F0B4         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  2858  00246A  0100               	movlb	0	; () banked
  2859  00246C  0100               	movlb	0	; () banked
  2860  00246E  C0BF  F0B6         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  2861  002472  0100               	movlb	0	; () banked
  2862  002474  0100               	movlb	0	; () banked
  2863  002476  C0BE  F0B5         	movff	ToMainHigh_sendmsg@data,send_msg@data
  2864  00247A  EC81  F00B         	call	_send_msg	;wreg free
  2865  00247E  0012               	return	
  2866  002480                     __end_of_ToMainHigh_sendmsg:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           postinc0	equ	0xFEE
  2875                           wreg	equ	0xFE8
  2876                           indf1	equ	0xFE7
  2877                           fsr1h	equ	0xFE2
  2878                           fsr1l	equ	0xFE1
  2879                           indf2	equ	0xFDF
  2880                           fsr2h	equ	0xFDA
  2881                           fsr2l	equ	0xFD9
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function _send_msg *****************
  2885 ;; Defined at:
  2886 ;;		line 24 in file "source/messages.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  qptr            2   49[BANK0 ] PTR struct __msg_queue
  2889 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2890 ;;  length          1   51[BANK0 ] unsigned char 
  2891 ;;  msgtype         1   52[BANK0 ] unsigned char 
  2892 ;;  data            2   53[BANK0 ] PTR void 
  2893 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  2894 ;;		 -> motor_lthread@message(2), main@ic(77), main@uc(23), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  qmsg            2   59[BANK0 ] PTR struct __msg
  2897 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  2898 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2899 ;;  tlength         2   56[BANK0 ] unsigned int 
  2900 ;;  slot            1   58[BANK0 ] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      char 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2910 ;;      Params:         0       6       0       0       0
  2911 ;;      Locals:         0       5       0       0       0
  2912 ;;      Temps:          0       1       0       0       0
  2913 ;;      Totals:         0      12       0       0       0
  2914 ;;Total ram usage:       12 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:   13
  2917 ;; This function calls:
  2918 ;;		_memcpy
  2919 ;; This function is called by:
  2920 ;;		_ToMainHigh_sendmsg
  2921 ;;		_FromMainLow_sendmsg
  2922 ;;		_FromMainHigh_sendmsg
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text9
  2927  001702                     __ptext9:
  2928                           	opt stack 0
  2929  001702                     _send_msg:
  2930                           	opt stack 14
  2931                           
  2932                           ;messages.c: 25: unsigned char slot;
  2933                           ;messages.c: 27: msg *qmsg;
  2934                           ;messages.c: 28: size_t tlength = length;
  2935                           
  2936                           ;incstack = 0
  2937  001702  0100               	movlb	0	; () banked
  2938  001704  0100               	movlb	0	; () banked
  2939  001706  C0B3  F0B8         	movff	send_msg@length,send_msg@tlength
  2940  00170A  0100               	movlb	0	; () banked
  2941  00170C  0100               	movlb	0	; () banked
  2942  00170E  6BB9               	clrf	(send_msg@tlength+1)& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2946  001710  0100               	movlb	0	; () banked
  2947  001712  EE20 F064          	lfsr	2,100
  2948  001716  0100               	movlb	0	; () banked
  2949  001718  51B1               	movf	send_msg@qptr& (0+255),w,b
  2950  00171A  26D9               	addwf	fsr2l,f,c
  2951  00171C  0100               	movlb	0	; () banked
  2952  00171E  51B2               	movf	(send_msg@qptr+1)& (0+255),w,b
  2953  001720  22DA               	addwfc	fsr2h,f,c
  2954  001722  50DF               	movf	indf2,w,c
  2955  001724  0100               	movlb	0	; () banked
  2956  001726  0100               	movlb	0	; () banked
  2957  001728  6FBA               	movwf	send_msg@slot& (0+255),b
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2961  00172A  0100               	movlb	0	; () banked
  2962  00172C  0100               	movlb	0	; () banked
  2963  00172E  51BA               	movf	send_msg@slot& (0+255),w,b
  2964  001730  0D19               	mullw	25
  2965  001732  50F3               	movf	prodl,w,c
  2966  001734  0100               	movlb	0	; () banked
  2967  001736  0100               	movlb	0	; () banked
  2968  001738  25B1               	addwf	send_msg@qptr& (0+255),w,b
  2969  00173A  0100               	movlb	0	; () banked
  2970  00173C  0100               	movlb	0	; () banked
  2971  00173E  6FBB               	movwf	send_msg@qmsg& (0+255),b
  2972  001740  50F4               	movf	prodh,w,c
  2973  001742  0100               	movlb	0	; () banked
  2974  001744  0100               	movlb	0	; () banked
  2975  001746  21B2               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2976  001748  0100               	movlb	0	; () banked
  2977  00174A  6FBC               	movwf	(send_msg@qmsg+1)& (0+255),b
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;messages.c: 41: if (qmsg->full != 0) {
  2981  00174C  C0BB  FFD9         	movff	send_msg@qmsg,fsr2l
  2982  001750  C0BC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2983  001754  50DF               	movf	indf2,w,c
  2984  001756  B4D8               	btfsc	status,2,c
  2985  001758  D002               	goto	l3632
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;messages.c: 42: return (-1);
  2989  00175A  0EFF               	movlw	255
  2990  00175C  0012               	return	
  2991  00175E                     l3632:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;messages.c: 43: }
  2995                           ;messages.c: 46: qmsg->length = length;
  2996  00175E  0100               	movlb	0	; () banked
  2997  001760  EE20 F001          	lfsr	2,1
  2998  001764  0100               	movlb	0	; () banked
  2999  001766  51BB               	movf	send_msg@qmsg& (0+255),w,b
  3000  001768  26D9               	addwf	fsr2l,f,c
  3001  00176A  0100               	movlb	0	; () banked
  3002  00176C  51BC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3003  00176E  22DA               	addwfc	fsr2h,f,c
  3004  001770  0100               	movlb	0	; () banked
  3005  001772  C0B3  FFDF         	movff	send_msg@length,indf2
  3006                           
  3007                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3008  001776  0100               	movlb	0	; () banked
  3009  001778  EE20 F002          	lfsr	2,2
  3010  00177C  0100               	movlb	0	; () banked
  3011  00177E  51BB               	movf	send_msg@qmsg& (0+255),w,b
  3012  001780  26D9               	addwf	fsr2l,f,c
  3013  001782  0100               	movlb	0	; () banked
  3014  001784  51BC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3015  001786  22DA               	addwfc	fsr2h,f,c
  3016  001788  0100               	movlb	0	; () banked
  3017  00178A  C0B4  FFDF         	movff	send_msg@msgtype,indf2
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3021  00178E  0E03               	movlw	3
  3022  001790  0100               	movlb	0	; () banked
  3023  001792  0100               	movlb	0	; () banked
  3024  001794  25BB               	addwf	send_msg@qmsg& (0+255),w,b
  3025  001796  0100               	movlb	0	; () banked
  3026  001798  0100               	movlb	0	; () banked
  3027  00179A  6FA7               	movwf	memcpy@d1& (0+255),b
  3028  00179C  0E00               	movlw	0
  3029  00179E  0100               	movlb	0	; () banked
  3030  0017A0  0100               	movlb	0	; () banked
  3031  0017A2  21BC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3032  0017A4  0100               	movlb	0	; () banked
  3033  0017A6  6FA8               	movwf	(memcpy@d1+1)& (0+255),b
  3034  0017A8  0100               	movlb	0	; () banked
  3035  0017AA  0100               	movlb	0	; () banked
  3036  0017AC  C0B6  F0AA         	movff	send_msg@data+1,memcpy@s1+1
  3037  0017B0  0100               	movlb	0	; () banked
  3038  0017B2  0100               	movlb	0	; () banked
  3039  0017B4  C0B5  F0A9         	movff	send_msg@data,memcpy@s1
  3040  0017B8  C0B8  F0AB         	movff	send_msg@tlength,memcpy@n
  3041  0017BC  C0B9  F0AC         	movff	send_msg@tlength+1,memcpy@n+1
  3042  0017C0  EC69  F010         	call	_memcpy	;wreg free
  3043                           
  3044                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3045  0017C4  0100               	movlb	0	; () banked
  3046  0017C6  EE20 F064          	lfsr	2,100
  3047  0017CA  0100               	movlb	0	; () banked
  3048  0017CC  51B1               	movf	send_msg@qptr& (0+255),w,b
  3049  0017CE  26D9               	addwf	fsr2l,f,c
  3050  0017D0  0100               	movlb	0	; () banked
  3051  0017D2  51B2               	movf	(send_msg@qptr+1)& (0+255),w,b
  3052  0017D4  22DA               	addwfc	fsr2h,f,c
  3053  0017D6  0100               	movlb	0	; () banked
  3054  0017D8  EE10 F064          	lfsr	1,100
  3055  0017DC  0100               	movlb	0	; () banked
  3056  0017DE  51B1               	movf	send_msg@qptr& (0+255),w,b
  3057  0017E0  26E1               	addwf	fsr1l,f,c
  3058  0017E2  0100               	movlb	0	; () banked
  3059  0017E4  51B2               	movf	(send_msg@qptr+1)& (0+255),w,b
  3060  0017E6  22E2               	addwfc	fsr1h,f,c
  3061  0017E8  50E7               	movf	indf1,w,c
  3062  0017EA  0100               	movlb	0	; () banked
  3063  0017EC  6FB7               	movwf	??_send_msg& (0+255),b
  3064  0017EE  0100               	movlb	0	; () banked
  3065  0017F0  29B7               	incf	??_send_msg& (0+255),w,b
  3066  0017F2  0B03               	andlw	3
  3067  0017F4  6EDF               	movwf	indf2,c
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;messages.c: 59: qmsg->full = 1;
  3071  0017F6  C0BB  FFD9         	movff	send_msg@qmsg,fsr2l
  3072  0017FA  C0BC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3073  0017FE  0E01               	movlw	1
  3074  001800  6EDF               	movwf	indf2,c
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;messages.c: 60: return (1);
  3078  001802  0E01               	movlw	1
  3079  001804  0012               	return	
  3080  001806                     __end_of_send_msg:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           indf1	equ	0xFE7
  3091                           fsr1h	equ	0xFE2
  3092                           fsr1l	equ	0xFE1
  3093                           indf2	equ	0xFDF
  3094                           fsr2h	equ	0xFDA
  3095                           fsr2l	equ	0xFD9
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _init_uart_recv *****************
  3099 ;; Defined at:
  3100 ;;		line 51 in file "source/my_uart.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  uc              2   39[BANK0 ] PTR struct __uart_comm
  3103 ;;		 -> main@uc(23), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;		None               void
  3108 ;; Registers used:
  3109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3115 ;;      Params:         0       2       0       0       0
  3116 ;;      Locals:         0       0       0       0       0
  3117 ;;      Temps:          0       1       0       0       0
  3118 ;;      Totals:         0       3       0       0       0
  3119 ;;Total ram usage:        3 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:   12
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_main
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text10
  3130  00254A                     __ptext10:
  3131                           	opt stack 0
  3132  00254A                     _init_uart_recv:
  3133                           	opt stack 17
  3134                           
  3135                           ;my_uart.c: 52: uc_ptr = uc;
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;incstack = 0
  3139  00254A  0100               	movlb	0	; () banked
  3140  00254C  C0A8  F04D         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3141  002550  0100               	movlb	0	; () banked
  3142  002552  C0A7  F04C         	movff	init_uart_recv@uc,_uc_ptr
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  3146  002556  EE20 F016          	lfsr	2,22
  3147  00255A  504C               	movf	_uc_ptr,w,c
  3148  00255C  26D9               	addwf	fsr2l,f,c
  3149  00255E  504D               	movf	_uc_ptr+1,w,c
  3150  002560  22DA               	addwfc	fsr2h,f,c
  3151  002562  0E00               	movlw	0
  3152  002564  6EDF               	movwf	indf2,c
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;my_uart.c: 54: State = MSGCOUNT;
  3156  002566  0100               	movlb	0	; () banked
  3157  002568  6FA9               	movwf	??_init_uart_recv& (0+255),b
  3158  00256A  0E00               	movlw	0
  3159  00256C  6E4A               	movwf	_State,c
  3160  00256E  0100               	movlb	0	; () banked
  3161  002570  51A9               	movf	??_init_uart_recv& (0+255),w,b
  3162                           
  3163                           ; BSR set to: 0
  3164  002572  0012               	return	
  3165  002574                     __end_of_init_uart_recv:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           indf1	equ	0xFE7
  3176                           fsr1h	equ	0xFE2
  3177                           fsr1l	equ	0xFE1
  3178                           indf2	equ	0xFDF
  3179                           fsr2h	equ	0xFDA
  3180                           fsr2l	equ	0xFD9
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _init_timer1_lthread *****************
  3184 ;; Defined at:
  3185 ;;		line 6 in file "source/timer1_thread.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  tptr            2   39[BANK0 ] PTR struct __timer1_thre
  3188 ;;		 -> main@t1thread_data(2), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;		None               void
  3193 ;; Registers used:
  3194 ;;		wreg, fsr2l, fsr2h
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3200 ;;      Params:         0       2       0       0       0
  3201 ;;      Locals:         0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0
  3203 ;;      Totals:         0       2       0       0       0
  3204 ;;Total ram usage:        2 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:   12
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_main
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text11
  3215  00263A                     __ptext11:
  3216                           	opt stack 0
  3217  00263A                     _init_timer1_lthread:
  3218                           	opt stack 17
  3219                           
  3220                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;incstack = 0
  3224  00263A  C0A7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3225  00263E  C0A8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3226  002642  0E00               	movlw	0
  3227  002644  6EDE               	movwf	postinc2,c
  3228  002646  0E00               	movlw	0
  3229  002648  6EDD               	movwf	postdec2,c
  3230  00264A  0012               	return	
  3231  00264C                     __end_of_init_timer1_lthread:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           postinc0	equ	0xFEE
  3240                           wreg	equ	0xFE8
  3241                           indf1	equ	0xFE7
  3242                           fsr1h	equ	0xFE2
  3243                           fsr1l	equ	0xFE1
  3244                           indf2	equ	0xFDF
  3245                           postinc2	equ	0xFDE
  3246                           postdec2	equ	0xFDD
  3247                           fsr2h	equ	0xFDA
  3248                           fsr2l	equ	0xFD9
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _init_queues *****************
  3252 ;; Defined at:
  3253 ;;		line 194 in file "source/messages.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          0       1       0       0       0
  3270 ;;      Totals:         0       1       0       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:   13
  3274 ;; This function calls:
  3275 ;;		_init_queue
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text12
  3282  002064                     __ptext12:
  3283                           	opt stack 0
  3284  002064                     _init_queues:
  3285                           	opt stack 16
  3286                           
  3287                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3288                           
  3289                           ;incstack = 0
  3290  002064  0100               	movlb	0	; () banked
  3291  002066  6FAB               	movwf	??_init_queues& (0+255),b
  3292  002068  0E00               	movlw	0
  3293  00206A  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3294  00206C  0100               	movlb	0	; () banked
  3295  00206E  51AB               	movf	??_init_queues& (0+255),w,b
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3299  002070  0102               	movlb	2	; () banked
  3300  002072  0E02               	movlw	high _ToMainLow_MQ
  3301  002074  0100               	movlb	0	; () banked
  3302  002076  0100               	movlb	0	; () banked
  3303  002078  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  3304  00207A  0102               	movlb	2	; () banked
  3305  00207C  0E66               	movlw	low _ToMainLow_MQ
  3306  00207E  0100               	movlb	0	; () banked
  3307  002080  0100               	movlb	0	; () banked
  3308  002082  6FA7               	movwf	init_queue@qptr& (0+255),b
  3309  002084  ECF5  F00F         	call	_init_queue	;wreg free
  3310                           
  3311                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3312  002088  0101               	movlb	1	; () banked
  3313  00208A  0E01               	movlw	high _ToMainHigh_MQ
  3314  00208C  0100               	movlb	0	; () banked
  3315  00208E  0100               	movlb	0	; () banked
  3316  002090  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  3317  002092  0101               	movlb	1	; () banked
  3318  002094  0E94               	movlw	low _ToMainHigh_MQ
  3319  002096  0100               	movlb	0	; () banked
  3320  002098  0100               	movlb	0	; () banked
  3321  00209A  6FA7               	movwf	init_queue@qptr& (0+255),b
  3322  00209C  ECF5  F00F         	call	_init_queue	;wreg free
  3323                           
  3324                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3325  0020A0  0102               	movlb	2	; () banked
  3326  0020A2  0E02               	movlw	high _FromMainLow_MQ
  3327  0020A4  0100               	movlb	0	; () banked
  3328  0020A6  0100               	movlb	0	; () banked
  3329  0020A8  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  3330  0020AA  0102               	movlb	2	; () banked
  3331  0020AC  0E00               	movlw	low _FromMainLow_MQ
  3332  0020AE  0100               	movlb	0	; () banked
  3333  0020B0  0100               	movlb	0	; () banked
  3334  0020B2  6FA7               	movwf	init_queue@qptr& (0+255),b
  3335  0020B4  ECF5  F00F         	call	_init_queue	;wreg free
  3336                           
  3337                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3338  0020B8  0103               	movlb	3	; () banked
  3339  0020BA  0E03               	movlw	high _FromMainHigh_MQ
  3340  0020BC  0100               	movlb	0	; () banked
  3341  0020BE  0100               	movlb	0	; () banked
  3342  0020C0  6FA8               	movwf	(init_queue@qptr+1)& (0+255),b
  3343  0020C2  0103               	movlb	3	; () banked
  3344  0020C4  0E00               	movlw	low _FromMainHigh_MQ
  3345  0020C6  0100               	movlb	0	; () banked
  3346  0020C8  0100               	movlb	0	; () banked
  3347  0020CA  6FA7               	movwf	init_queue@qptr& (0+255),b
  3348  0020CC  ECF5  F00F         	call	_init_queue	;wreg free
  3349  0020D0  0012               	return	
  3350  0020D2                     __end_of_init_queues:
  3351                           	opt stack 0
  3352                           tblptru	equ	0xFF8
  3353                           tblptrh	equ	0xFF7
  3354                           tblptrl	equ	0xFF6
  3355                           tablat	equ	0xFF5
  3356                           prodh	equ	0xFF4
  3357                           prodl	equ	0xFF3
  3358                           postinc0	equ	0xFEE
  3359                           wreg	equ	0xFE8
  3360                           indf1	equ	0xFE7
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _init_queue *****************
  3371 ;; Defined at:
  3372 ;;		line 14 in file "source/messages.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3375 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  i               1   42[BANK0 ] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3387 ;;      Params:         0       2       0       0       0
  3388 ;;      Locals:         0       1       0       0       0
  3389 ;;      Temps:          0       1       0       0       0
  3390 ;;      Totals:         0       4       0       0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:   12
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_init_queues
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text13
  3402  001FEA                     __ptext13:
  3403                           	opt stack 0
  3404  001FEA                     _init_queue:
  3405                           	opt stack 16
  3406                           
  3407                           ;messages.c: 15: unsigned char i;
  3408                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3409                           
  3410                           ;incstack = 0
  3411  001FEA  0100               	movlb	0	; () banked
  3412  001FEC  EE20 F064          	lfsr	2,100
  3413  001FF0  0100               	movlb	0	; () banked
  3414  001FF2  51A7               	movf	init_queue@qptr& (0+255),w,b
  3415  001FF4  26D9               	addwf	fsr2l,f,c
  3416  001FF6  0100               	movlb	0	; () banked
  3417  001FF8  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3418  001FFA  22DA               	addwfc	fsr2h,f,c
  3419  001FFC  0E00               	movlw	0
  3420  001FFE  6EDF               	movwf	indf2,c
  3421                           
  3422                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3423  002000  0100               	movlb	0	; () banked
  3424  002002  EE20 F065          	lfsr	2,101
  3425  002006  0100               	movlb	0	; () banked
  3426  002008  51A7               	movf	init_queue@qptr& (0+255),w,b
  3427  00200A  26D9               	addwf	fsr2l,f,c
  3428  00200C  0100               	movlb	0	; () banked
  3429  00200E  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3430  002010  22DA               	addwfc	fsr2h,f,c
  3431  002012  0E00               	movlw	0
  3432  002014  6EDF               	movwf	indf2,c
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3436  002016  0100               	movlb	0	; () banked
  3437  002018  6FA9               	movwf	??_init_queue& (0+255),b
  3438  00201A  0E00               	movlw	0
  3439  00201C  0100               	movlb	0	; () banked
  3440  00201E  0100               	movlb	0	; () banked
  3441  002020  6FAA               	movwf	init_queue@i& (0+255),b
  3442  002022  0100               	movlb	0	; () banked
  3443  002024  51A9               	movf	??_init_queue& (0+255),w,b
  3444                           
  3445                           ; BSR set to: 0
  3446  002026  0E03               	movlw	3
  3447  002028  0100               	movlb	0	; () banked
  3448  00202A  0100               	movlb	0	; () banked
  3449  00202C  65AA               	cpfsgt	init_queue@i& (0+255),b
  3450  00202E  D001               	goto	l2760
  3451  002030  0012               	return	
  3452  002032                     l2760:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;messages.c: 20: qptr->queue[i].full = 0;
  3456  002032  0100               	movlb	0	; () banked
  3457  002034  0100               	movlb	0	; () banked
  3458  002036  51AA               	movf	init_queue@i& (0+255),w,b
  3459  002038  0D19               	mullw	25
  3460  00203A  50F3               	movf	prodl,w,c
  3461  00203C  0100               	movlb	0	; () banked
  3462  00203E  0100               	movlb	0	; () banked
  3463  002040  25A7               	addwf	init_queue@qptr& (0+255),w,b
  3464  002042  6ED9               	movwf	fsr2l,c
  3465  002044  50F4               	movf	prodh,w,c
  3466  002046  0100               	movlb	0	; () banked
  3467  002048  0100               	movlb	0	; () banked
  3468  00204A  21A8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3469  00204C  6EDA               	movwf	fsr2h,c
  3470  00204E  0E00               	movlw	0
  3471  002050  6EDF               	movwf	indf2,c
  3472                           
  3473                           ; BSR set to: 0
  3474  002052  0100               	movlb	0	; () banked
  3475  002054  0100               	movlb	0	; () banked
  3476  002056  2BAA               	incf	init_queue@i& (0+255),f,b
  3477                           
  3478                           ; BSR set to: 0
  3479  002058  0E03               	movlw	3
  3480  00205A  0100               	movlb	0	; () banked
  3481  00205C  0100               	movlb	0	; () banked
  3482  00205E  65AA               	cpfsgt	init_queue@i& (0+255),b
  3483  002060  D7E8               	goto	l2760
  3484  002062  0012               	return	
  3485  002064                     __end_of_init_queue:
  3486                           	opt stack 0
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           prodh	equ	0xFF4
  3492                           prodl	equ	0xFF3
  3493                           postinc0	equ	0xFEE
  3494                           wreg	equ	0xFE8
  3495                           indf1	equ	0xFE7
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           postdec2	equ	0xFDD
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _init_i2c *****************
  3506 ;; Defined at:
  3507 ;;		line 372 in file "source/my_i2c.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  ic              2   39[BANK0 ] PTR struct __i2c_comm
  3510 ;;		 -> main@ic(77), 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3522 ;;      Params:         0       2       0       0       0
  3523 ;;      Locals:         0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0
  3525 ;;      Totals:         0       2       0       0       0
  3526 ;;Total ram usage:        2 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:   12
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text14
  3537  001AD4                     __ptext14:
  3538                           	opt stack 0
  3539  001AD4                     _init_i2c:
  3540                           	opt stack 17
  3541                           
  3542                           ;my_i2c.c: 373: ic_ptr = ic;
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;incstack = 0
  3546  001AD4  0100               	movlb	0	; () banked
  3547  001AD6  0100               	movlb	0	; () banked
  3548  001AD8  C0A8  F0CD         	movff	init_i2c@ic+1,_ic_ptr+1
  3549  001ADC  0100               	movlb	0	; () banked
  3550  001ADE  0100               	movlb	0	; () banked
  3551  001AE0  C0A7  F0CC         	movff	init_i2c@ic,_ic_ptr
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;my_i2c.c: 374: ic_ptr->buffer[0] = 0;
  3555  001AE4  C0CC  FFD9         	movff	_ic_ptr,fsr2l
  3556  001AE8  C0CD  FFDA         	movff	_ic_ptr+1,fsr2h
  3557  001AEC  0E00               	movlw	0
  3558  001AEE  6EDF               	movwf	indf2,c
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;my_i2c.c: 375: ic_ptr->buffer[1] = 0;
  3562  001AF0  0100               	movlb	0	; () banked
  3563  001AF2  EE20 F001          	lfsr	2,1
  3564  001AF6  0100               	movlb	0	; () banked
  3565  001AF8  51CC               	movf	_ic_ptr& (0+255),w,b
  3566  001AFA  26D9               	addwf	fsr2l,f,c
  3567  001AFC  0100               	movlb	0	; () banked
  3568  001AFE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3569  001B00  22DA               	addwfc	fsr2h,f,c
  3570  001B02  0E00               	movlw	0
  3571  001B04  6EDF               	movwf	indf2,c
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;my_i2c.c: 376: ic_ptr->buffer[2] = 0;
  3575  001B06  0100               	movlb	0	; () banked
  3576  001B08  EE20 F002          	lfsr	2,2
  3577  001B0C  0100               	movlb	0	; () banked
  3578  001B0E  51CC               	movf	_ic_ptr& (0+255),w,b
  3579  001B10  26D9               	addwf	fsr2l,f,c
  3580  001B12  0100               	movlb	0	; () banked
  3581  001B14  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3582  001B16  22DA               	addwfc	fsr2h,f,c
  3583  001B18  0E00               	movlw	0
  3584  001B1A  6EDF               	movwf	indf2,c
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;my_i2c.c: 377: ic_ptr->buflen = 0;
  3588  001B1C  0100               	movlb	0	; () banked
  3589  001B1E  EE20 F016          	lfsr	2,22
  3590  001B22  0100               	movlb	0	; () banked
  3591  001B24  51CC               	movf	_ic_ptr& (0+255),w,b
  3592  001B26  26D9               	addwf	fsr2l,f,c
  3593  001B28  0100               	movlb	0	; () banked
  3594  001B2A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3595  001B2C  22DA               	addwfc	fsr2h,f,c
  3596  001B2E  0E00               	movlw	0
  3597  001B30  6EDF               	movwf	indf2,c
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;my_i2c.c: 378: ic_ptr->event_count = 0;
  3601  001B32  0100               	movlb	0	; () banked
  3602  001B34  EE20 F018          	lfsr	2,24
  3603  001B38  0100               	movlb	0	; () banked
  3604  001B3A  51CC               	movf	_ic_ptr& (0+255),w,b
  3605  001B3C  26D9               	addwf	fsr2l,f,c
  3606  001B3E  0100               	movlb	0	; () banked
  3607  001B40  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3608  001B42  22DA               	addwfc	fsr2h,f,c
  3609  001B44  0E00               	movlw	0
  3610  001B46  6EDF               	movwf	indf2,c
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;my_i2c.c: 379: ic_ptr->status = 0x5;
  3614  001B48  0100               	movlb	0	; () banked
  3615  001B4A  EE20 F019          	lfsr	2,25
  3616  001B4E  0100               	movlb	0	; () banked
  3617  001B50  51CC               	movf	_ic_ptr& (0+255),w,b
  3618  001B52  26D9               	addwf	fsr2l,f,c
  3619  001B54  0100               	movlb	0	; () banked
  3620  001B56  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3621  001B58  22DA               	addwfc	fsr2h,f,c
  3622  001B5A  0E05               	movlw	5
  3623  001B5C  6EDF               	movwf	indf2,c
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;my_i2c.c: 380: ic_ptr->error_count = 0;
  3627  001B5E  0100               	movlb	0	; () banked
  3628  001B60  EE20 F01B          	lfsr	2,27
  3629  001B64  0100               	movlb	0	; () banked
  3630  001B66  51CC               	movf	_ic_ptr& (0+255),w,b
  3631  001B68  26D9               	addwf	fsr2l,f,c
  3632  001B6A  0100               	movlb	0	; () banked
  3633  001B6C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3634  001B6E  22DA               	addwfc	fsr2h,f,c
  3635  001B70  0E00               	movlw	0
  3636  001B72  6EDF               	movwf	indf2,c
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;my_i2c.c: 381: ic_ptr->sendBufInd = 0;
  3640  001B74  0100               	movlb	0	; () banked
  3641  001B76  EE20 F04C          	lfsr	2,76
  3642  001B7A  0100               	movlb	0	; () banked
  3643  001B7C  51CC               	movf	_ic_ptr& (0+255),w,b
  3644  001B7E  26D9               	addwf	fsr2l,f,c
  3645  001B80  0100               	movlb	0	; () banked
  3646  001B82  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3647  001B84  22DA               	addwfc	fsr2h,f,c
  3648  001B86  0E00               	movlw	0
  3649  001B88  6EDF               	movwf	indf2,c
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;my_i2c.c: 382: ic_ptr->sendBufLen = 0;
  3653  001B8A  0100               	movlb	0	; () banked
  3654  001B8C  EE20 F04B          	lfsr	2,75
  3655  001B90  0100               	movlb	0	; () banked
  3656  001B92  51CC               	movf	_ic_ptr& (0+255),w,b
  3657  001B94  26D9               	addwf	fsr2l,f,c
  3658  001B96  0100               	movlb	0	; () banked
  3659  001B98  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3660  001B9A  22DA               	addwfc	fsr2h,f,c
  3661  001B9C  0E00               	movlw	0
  3662  001B9E  6EDF               	movwf	indf2,c
  3663                           
  3664                           ; BSR set to: 0
  3665  001BA0  0012               	return	
  3666  001BA2                     __end_of_init_i2c:
  3667                           	opt stack 0
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           postinc0	equ	0xFEE
  3675                           wreg	equ	0xFE8
  3676                           indf1	equ	0xFE7
  3677                           fsr1h	equ	0xFE2
  3678                           fsr1l	equ	0xFE1
  3679                           indf2	equ	0xFDF
  3680                           postinc2	equ	0xFDE
  3681                           postdec2	equ	0xFDD
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _enable_interrupts *****************
  3687 ;; Defined at:
  3688 ;;		line 14 in file "source/interrupts.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;		None               void
  3695 ;; Registers used:
  3696 ;;		None
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3702 ;;      Params:         0       0       0       0       0
  3703 ;;      Locals:         0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0
  3705 ;;      Totals:         0       0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:   12
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text15
  3717  0026A0                     __ptext15:
  3718                           	opt stack 0
  3719  0026A0                     _enable_interrupts:
  3720                           	opt stack 17
  3721                           
  3722                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;incstack = 0
  3726  0026A0  8ED0               	bsf	4048,7,c	;volatile
  3727                           
  3728                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3729  0026A2  8EF2               	bsf	intcon,7,c	;volatile
  3730                           
  3731                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3732  0026A4  8CF2               	bsf	intcon,6,c	;volatile
  3733  0026A6  0012               	return	
  3734  0026A8                     __end_of_enable_interrupts:
  3735                           	opt stack 0
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           prodh	equ	0xFF4
  3741                           prodl	equ	0xFF3
  3742                           intcon	equ	0xFF2
  3743                           postinc0	equ	0xFEE
  3744                           wreg	equ	0xFE8
  3745                           indf1	equ	0xFE7
  3746                           fsr1h	equ	0xFE2
  3747                           fsr1l	equ	0xFE1
  3748                           indf2	equ	0xFDF
  3749                           postinc2	equ	0xFDE
  3750                           postdec2	equ	0xFDD
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _block_on_To_msgqueues *****************
  3756 ;; Defined at:
  3757 ;;		line 258 in file "source/messages.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3771 ;;      Params:         0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0
  3773 ;;      Temps:          0       1       0       0       0
  3774 ;;      Totals:         0       1       0       0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:   15
  3778 ;; This function calls:
  3779 ;;		_Delay1KTCYx
  3780 ;;		_check_msg
  3781 ;;		_in_main
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text16
  3788  001F6C                     __ptext16:
  3789                           	opt stack 0
  3790  001F6C                     _block_on_To_msgqueues:
  3791                           	opt stack 14
  3792                           
  3793                           ;messages.c: 259: if (!in_main()) {
  3794                           
  3795                           ;incstack = 0
  3796  001F6C  EC60  F011         	call	_in_main	;wreg free
  3797  001F70  0100               	movlb	0	; () banked
  3798  001F72  0100               	movlb	0	; () banked
  3799  001F74  51AC               	movf	(?_in_main+1)& (0+255),w,b
  3800  001F76  0100               	movlb	0	; () banked
  3801  001F78  11AB               	iorwf	?_in_main& (0+255),w,b
  3802  001F7A  B4D8               	btfsc	status,2,c
  3803  001F7C  0012               	return	
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;messages.c: 261: }
  3807                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3808                           
  3809                           ; BSR set to: 0
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;messages.c: 260: return;
  3813  001F7E  0100               	movlb	0	; () banked
  3814  001F80  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3815  001F82  0E01               	movlw	1
  3816  001F84  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3817  001F86  0100               	movlb	0	; () banked
  3818  001F88  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3819  001F8A                     l2662:
  3820                           
  3821                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3822  001F8A  0101               	movlb	1	; () banked
  3823  001F8C  0E01               	movlw	high _ToMainHigh_MQ
  3824  001F8E  0100               	movlb	0	; () banked
  3825  001F90  0100               	movlb	0	; () banked
  3826  001F92  6FA8               	movwf	(check_msg@qptr+1)& (0+255),b
  3827  001F94  0101               	movlb	1	; () banked
  3828  001F96  0E94               	movlw	low _ToMainHigh_MQ
  3829  001F98  0100               	movlb	0	; () banked
  3830  001F9A  0100               	movlb	0	; () banked
  3831  001F9C  6FA7               	movwf	check_msg@qptr& (0+255),b
  3832  001F9E  EC40  F012         	call	_check_msg	;wreg free
  3833  001FA2  0900               	iorlw	0
  3834  001FA4  B4D8               	btfsc	status,2,c
  3835  001FA6  D007               	goto	l2668
  3836                           
  3837                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3838  001FA8  0100               	movlb	0	; () banked
  3839  001FAA  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3840  001FAC  0E00               	movlw	0
  3841  001FAE  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3842  001FB0  0100               	movlb	0	; () banked
  3843  001FB2  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3844  001FB4  0012               	return	
  3845  001FB6                     l2668:
  3846                           
  3847                           ;messages.c: 271: }
  3848                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3849  001FB6  0102               	movlb	2	; () banked
  3850  001FB8  0E02               	movlw	high _ToMainLow_MQ
  3851  001FBA  0100               	movlb	0	; () banked
  3852  001FBC  0100               	movlb	0	; () banked
  3853  001FBE  6FA8               	movwf	(check_msg@qptr+1)& (0+255),b
  3854  001FC0  0102               	movlb	2	; () banked
  3855  001FC2  0E66               	movlw	low _ToMainLow_MQ
  3856  001FC4  0100               	movlb	0	; () banked
  3857  001FC6  0100               	movlb	0	; () banked
  3858  001FC8  6FA7               	movwf	check_msg@qptr& (0+255),b
  3859  001FCA  EC40  F012         	call	_check_msg	;wreg free
  3860  001FCE  0900               	iorlw	0
  3861  001FD0  B4D8               	btfsc	status,2,c
  3862  001FD2  D007               	goto	l2674
  3863                           
  3864                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3865  001FD4  0100               	movlb	0	; () banked
  3866  001FD6  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  3867  001FD8  0E00               	movlw	0
  3868  001FDA  6E49               	movwf	_MQ_Main_Willing_to_block,c
  3869  001FDC  0100               	movlb	0	; () banked
  3870  001FDE  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3871  001FE0  0012               	return	
  3872  001FE2                     l2674:
  3873                           
  3874                           ;messages.c: 278: }
  3875                           ;messages.c: 279: Delay1KTCYx(10);
  3876  001FE2  0E0A               	movlw	10
  3877  001FE4  ECFF  F012         	call	_Delay1KTCYx
  3878  001FE8  D7D0               	goto	l2662
  3879  001FEA                     __end_of_block_on_To_msgqueues:
  3880                           	opt stack 0
  3881                           tblptru	equ	0xFF8
  3882                           tblptrh	equ	0xFF7
  3883                           tblptrl	equ	0xFF6
  3884                           tablat	equ	0xFF5
  3885                           prodh	equ	0xFF4
  3886                           prodl	equ	0xFF3
  3887                           intcon	equ	0xFF2
  3888                           postinc0	equ	0xFEE
  3889                           wreg	equ	0xFE8
  3890                           indf1	equ	0xFE7
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           indf2	equ	0xFDF
  3894                           postinc2	equ	0xFDE
  3895                           postdec2	equ	0xFDD
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _in_main *****************
  3901 ;; Defined at:
  3902 ;;		line 40 in file "source/interrupts.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  2   43[BANK0 ] int 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3916 ;;      Params:         0       2       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       2       0       0       0
  3920 ;;Total ram usage:        2 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:   14
  3923 ;; This function calls:
  3924 ;;		_in_high_int
  3925 ;;		_in_low_int
  3926 ;; This function is called by:
  3927 ;;		_block_on_To_msgqueues
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text17
  3932  0022C0                     __ptext17:
  3933                           	opt stack 0
  3934  0022C0                     _in_main:
  3935                           	opt stack 14
  3936                           
  3937                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3938                           
  3939                           ;incstack = 0
  3940  0022C0  EC3D  F011         	call	_in_low_int	;wreg free
  3941  0022C4  0100               	movlb	0	; () banked
  3942  0022C6  0100               	movlb	0	; () banked
  3943  0022C8  51AA               	movf	(?_in_low_int+1)& (0+255),w,b
  3944  0022CA  0100               	movlb	0	; () banked
  3945  0022CC  11A9               	iorwf	?_in_low_int& (0+255),w,b
  3946  0022CE  A4D8               	btfss	status,2,c
  3947  0022D0  D011               	goto	l2452
  3948                           
  3949                           ; BSR set to: 0
  3950  0022D2  EC26  F013         	call	_in_high_int	;wreg free
  3951  0022D6  0100               	movlb	0	; () banked
  3952  0022D8  0100               	movlb	0	; () banked
  3953  0022DA  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3954  0022DC  0100               	movlb	0	; () banked
  3955  0022DE  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3956  0022E0  A4D8               	btfss	status,2,c
  3957  0022E2  D008               	goto	l2452
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;interrupts.c: 42: return (1);
  3961  0022E4  0E00               	movlw	0
  3962  0022E6  0100               	movlb	0	; () banked
  3963  0022E8  0100               	movlb	0	; () banked
  3964  0022EA  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3965  0022EC  0E01               	movlw	1
  3966  0022EE  0100               	movlb	0	; () banked
  3967  0022F0  6FAB               	movwf	?_in_main& (0+255),b
  3968  0022F2  0012               	return	
  3969  0022F4                     l2452:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;interrupts.c: 44: return (0);
  3973  0022F4  0E00               	movlw	0
  3974  0022F6  0100               	movlb	0	; () banked
  3975  0022F8  0100               	movlb	0	; () banked
  3976  0022FA  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3977  0022FC  0E00               	movlw	0
  3978  0022FE  0100               	movlb	0	; () banked
  3979  002300  6FAB               	movwf	?_in_main& (0+255),b
  3980  002302  0012               	return	
  3981  002304                     __end_of_in_main:
  3982                           	opt stack 0
  3983                           tblptru	equ	0xFF8
  3984                           tblptrh	equ	0xFF7
  3985                           tblptrl	equ	0xFF6
  3986                           tablat	equ	0xFF5
  3987                           prodh	equ	0xFF4
  3988                           prodl	equ	0xFF3
  3989                           intcon	equ	0xFF2
  3990                           postinc0	equ	0xFEE
  3991                           wreg	equ	0xFE8
  3992                           indf1	equ	0xFE7
  3993                           fsr1h	equ	0xFE2
  3994                           fsr1l	equ	0xFE1
  3995                           indf2	equ	0xFDF
  3996                           postinc2	equ	0xFDE
  3997                           postdec2	equ	0xFDD
  3998                           fsr2h	equ	0xFDA
  3999                           fsr2l	equ	0xFD9
  4000                           status	equ	0xFD8
  4001                           
  4002 ;; *************** function _in_low_int *****************
  4003 ;; Defined at:
  4004 ;;		line 30 in file "source/interrupts.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2   41[BANK0 ] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4018 ;;      Params:         0       2       0       0       0
  4019 ;;      Locals:         0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0
  4021 ;;      Totals:         0       2       0       0       0
  4022 ;;Total ram usage:        2 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:   13
  4025 ;; This function calls:
  4026 ;;		_in_high_int
  4027 ;; This function is called by:
  4028 ;;		_in_main
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text18
  4033  00227A                     __ptext18:
  4034                           	opt stack 0
  4035  00227A                     _in_low_int:
  4036                           	opt stack 14
  4037                           
  4038                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;incstack = 0
  4042  00227A  ACF2               	btfss	intcon,6,c	;volatile
  4043  00227C  D008               	goto	l2430
  4044                           
  4045                           ;interrupts.c: 32: return (0);
  4046  00227E  0E00               	movlw	0
  4047  002280  0100               	movlb	0	; () banked
  4048  002282  0100               	movlb	0	; () banked
  4049  002284  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  4050  002286  0E00               	movlw	0
  4051  002288  0100               	movlb	0	; () banked
  4052  00228A  6FA9               	movwf	?_in_low_int& (0+255),b
  4053  00228C  0012               	return	
  4054  00228E                     l2430:
  4055  00228E  EC26  F013         	call	_in_high_int	;wreg free
  4056  002292  0100               	movlb	0	; () banked
  4057  002294  0100               	movlb	0	; () banked
  4058  002296  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  4059  002298  0100               	movlb	0	; () banked
  4060  00229A  11A7               	iorwf	?_in_high_int& (0+255),w,b
  4061  00229C  B4D8               	btfsc	status,2,c
  4062  00229E  D008               	goto	l2438
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;interrupts.c: 34: return (0);
  4066  0022A0  0E00               	movlw	0
  4067  0022A2  0100               	movlb	0	; () banked
  4068  0022A4  0100               	movlb	0	; () banked
  4069  0022A6  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  4070  0022A8  0E00               	movlw	0
  4071  0022AA  0100               	movlb	0	; () banked
  4072  0022AC  6FA9               	movwf	?_in_low_int& (0+255),b
  4073  0022AE  0012               	return	
  4074  0022B0                     l2438:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;interrupts.c: 36: return (1);
  4078  0022B0  0E00               	movlw	0
  4079  0022B2  0100               	movlb	0	; () banked
  4080  0022B4  0100               	movlb	0	; () banked
  4081  0022B6  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  4082  0022B8  0E01               	movlw	1
  4083  0022BA  0100               	movlb	0	; () banked
  4084  0022BC  6FA9               	movwf	?_in_low_int& (0+255),b
  4085  0022BE  0012               	return	
  4086  0022C0                     __end_of_in_low_int:
  4087                           	opt stack 0
  4088                           tblptru	equ	0xFF8
  4089                           tblptrh	equ	0xFF7
  4090                           tblptrl	equ	0xFF6
  4091                           tablat	equ	0xFF5
  4092                           prodh	equ	0xFF4
  4093                           prodl	equ	0xFF3
  4094                           intcon	equ	0xFF2
  4095                           postinc0	equ	0xFEE
  4096                           wreg	equ	0xFE8
  4097                           indf1	equ	0xFE7
  4098                           fsr1h	equ	0xFE2
  4099                           fsr1l	equ	0xFE1
  4100                           indf2	equ	0xFDF
  4101                           postinc2	equ	0xFDE
  4102                           postdec2	equ	0xFDD
  4103                           fsr2h	equ	0xFDA
  4104                           fsr2l	equ	0xFD9
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _in_high_int *****************
  4108 ;; Defined at:
  4109 ;;		line 22 in file "source/interrupts.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  2   39[BANK0 ] int 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4123 ;;      Params:         0       2       0       0       0
  4124 ;;      Locals:         0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0
  4126 ;;      Totals:         0       2       0       0       0
  4127 ;;Total ram usage:        2 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:   12
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_in_low_int
  4134 ;;		_in_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text19
  4139  00264C                     __ptext19:
  4140                           	opt stack 0
  4141  00264C                     _in_high_int:
  4142                           	opt stack 14
  4143                           
  4144                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;incstack = 0
  4148  00264C  0E00               	movlw	0
  4149  00264E  AEF2               	btfss	intcon,7,c	;volatile
  4150  002650  0E01               	movlw	1
  4151  002652  0100               	movlb	0	; () banked
  4152  002654  0100               	movlb	0	; () banked
  4153  002656  6FA7               	movwf	?_in_high_int& (0+255),b
  4154  002658  0100               	movlb	0	; () banked
  4155  00265A  6BA8               	clrf	(?_in_high_int+1)& (0+255),b
  4156  00265C  0012               	return	
  4157  00265E                     __end_of_in_high_int:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           prodh	equ	0xFF4
  4164                           prodl	equ	0xFF3
  4165                           intcon	equ	0xFF2
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           indf1	equ	0xFE7
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           indf2	equ	0xFDF
  4172                           postinc2	equ	0xFDE
  4173                           postdec2	equ	0xFDD
  4174                           fsr2h	equ	0xFDA
  4175                           fsr2l	equ	0xFD9
  4176                           status	equ	0xFD8
  4177                           
  4178 ;; *************** function _check_msg *****************
  4179 ;; Defined at:
  4180 ;;		line 222 in file "source/messages.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  4183 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      unsigned char 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4195 ;;      Params:         0       2       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          0       1       0       0       0
  4198 ;;      Totals:         0       3       0       0       0
  4199 ;;Total ram usage:        3 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:   12
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_block_on_To_msgqueues
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text20
  4210  002480                     __ptext20:
  4211                           	opt stack 0
  4212  002480                     _check_msg:
  4213                           	opt stack 16
  4214                           
  4215                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;incstack = 0
  4219  002480  0100               	movlb	0	; () banked
  4220  002482  EE20 F065          	lfsr	2,101
  4221  002486  0100               	movlb	0	; () banked
  4222  002488  51A7               	movf	check_msg@qptr& (0+255),w,b
  4223  00248A  26D9               	addwf	fsr2l,f,c
  4224  00248C  0100               	movlb	0	; () banked
  4225  00248E  51A8               	movf	(check_msg@qptr+1)& (0+255),w,b
  4226  002490  22DA               	addwfc	fsr2h,f,c
  4227  002492  50DF               	movf	indf2,w,c
  4228  002494  0100               	movlb	0	; () banked
  4229  002496  6FA9               	movwf	??_check_msg& (0+255),b
  4230  002498  0100               	movlb	0	; () banked
  4231  00249A  51A9               	movf	??_check_msg& (0+255),w,b
  4232  00249C  0D19               	mullw	25
  4233  00249E  50F3               	movf	prodl,w,c
  4234  0024A0  0100               	movlb	0	; () banked
  4235  0024A2  0100               	movlb	0	; () banked
  4236  0024A4  25A7               	addwf	check_msg@qptr& (0+255),w,b
  4237  0024A6  6ED9               	movwf	fsr2l,c
  4238  0024A8  50F4               	movf	prodh,w,c
  4239  0024AA  0100               	movlb	0	; () banked
  4240  0024AC  0100               	movlb	0	; () banked
  4241  0024AE  21A8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4242  0024B0  6EDA               	movwf	fsr2h,c
  4243  0024B2  50DF               	movf	indf2,w,c
  4244  0024B4  0012               	return	
  4245  0024B6                     __end_of_check_msg:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           tblptrh	equ	0xFF7
  4249                           tblptrl	equ	0xFF6
  4250                           tablat	equ	0xFF5
  4251                           prodh	equ	0xFF4
  4252                           prodl	equ	0xFF3
  4253                           intcon	equ	0xFF2
  4254                           postinc0	equ	0xFEE
  4255                           wreg	equ	0xFE8
  4256                           indf1	equ	0xFE7
  4257                           fsr1h	equ	0xFE2
  4258                           fsr1l	equ	0xFE1
  4259                           indf2	equ	0xFDF
  4260                           postinc2	equ	0xFDE
  4261                           postdec2	equ	0xFDD
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8
  4265                           
  4266 ;; *************** function _Delay1KTCYx *****************
  4267 ;; Defined at:
  4268 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  unit            1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  unit            1   39[BANK0 ] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;		None               void
  4275 ;; Registers used:
  4276 ;;		wreg
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4282 ;;      Params:         0       0       0       0       0
  4283 ;;      Locals:         0       1       0       0       0
  4284 ;;      Temps:          0       0       0       0       0
  4285 ;;      Totals:         0       1       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:   12
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_block_on_To_msgqueues
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text21
  4297  0025FE                     __ptext21:
  4298                           	opt stack 0
  4299  0025FE                     _Delay1KTCYx:
  4300                           	opt stack 16
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;incstack = 0
  4304                           ;Delay1KTCYx@unit stored from wreg
  4305  0025FE  CFE8 F0A7          	movff	wreg,Delay1KTCYx@unit
  4306  002602                     l788:
  4307  002602  0EFA               	movlw	250
  4308  002604                     u3007:
  4309  002604  F000               	nop	
  4310  002606  2EE8               	decfsz	wreg,f,c
  4311  002608  D7FD               	goto	u3007
  4312  00260A  0100               	movlb	0	; () banked
  4313  00260C  0100               	movlb	0	; () banked
  4314  00260E  2FA7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4315  002610  D7F8               	goto	l788
  4316  002612  0012               	return	
  4317  002614                     __end_of_Delay1KTCYx:
  4318                           	opt stack 0
  4319                           tblptru	equ	0xFF8
  4320                           tblptrh	equ	0xFF7
  4321                           tblptrl	equ	0xFF6
  4322                           tablat	equ	0xFF5
  4323                           prodh	equ	0xFF4
  4324                           prodl	equ	0xFF3
  4325                           intcon	equ	0xFF2
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           indf1	equ	0xFE7
  4329                           fsr1h	equ	0xFE2
  4330                           fsr1l	equ	0xFE1
  4331                           indf2	equ	0xFDF
  4332                           postinc2	equ	0xFDE
  4333                           postdec2	equ	0xFDD
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _ToMainLow_recvmsg *****************
  4339 ;; Defined at:
  4340 ;;		line 112 in file "source/messages.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  maxlength       1    wreg     unsigned char 
  4343 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  4344 ;;		 -> main@msgtype(1), 
  4345 ;;  data            2   65[BANK0 ] PTR void 
  4346 ;;		 -> main@msgbuffer(23), 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  maxlength       1   67[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      char 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4358 ;;      Params:         0       4       0       0       0
  4359 ;;      Locals:         0       1       0       0       0
  4360 ;;      Temps:          0       0       0       0       0
  4361 ;;      Totals:         0       5       0       0       0
  4362 ;;Total ram usage:        5 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:   14
  4365 ;; This function calls:
  4366 ;;		_recv_msg
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text22
  4373  002304                     __ptext22:
  4374                           	opt stack 0
  4375  002304                     _ToMainLow_recvmsg:
  4376                           	opt stack 15
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;incstack = 0
  4380                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4381  002304  CFE8 F0C3          	movff	wreg,ToMainLow_recvmsg@maxlength
  4382                           
  4383                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4384  002308  0102               	movlb	2	; () banked
  4385  00230A  0E02               	movlw	high _ToMainLow_MQ
  4386  00230C  0100               	movlb	0	; () banked
  4387  00230E  0100               	movlb	0	; () banked
  4388  002310  6FB2               	movwf	(recv_msg@qptr+1)& (0+255),b
  4389  002312  0102               	movlb	2	; () banked
  4390  002314  0E66               	movlw	low _ToMainLow_MQ
  4391  002316  0100               	movlb	0	; () banked
  4392  002318  0100               	movlb	0	; () banked
  4393  00231A  6FB1               	movwf	recv_msg@qptr& (0+255),b
  4394  00231C  C0C3  F0B3         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4395  002320  0100               	movlb	0	; () banked
  4396  002322  0100               	movlb	0	; () banked
  4397  002324  C0C0  F0B5         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4398  002328  0100               	movlb	0	; () banked
  4399  00232A  0100               	movlb	0	; () banked
  4400  00232C  C0BF  F0B4         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4401  002330  0100               	movlb	0	; () banked
  4402  002332  0100               	movlb	0	; () banked
  4403  002334  C0C2  F0B7         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4404  002338  0100               	movlb	0	; () banked
  4405  00233A  0100               	movlb	0	; () banked
  4406  00233C  C0C1  F0B6         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4407  002340  EC53  F00A         	call	_recv_msg	;wreg free
  4408  002344  0012               	return	
  4409  002346                     __end_of_ToMainLow_recvmsg:
  4410                           	opt stack 0
  4411                           tblptru	equ	0xFF8
  4412                           tblptrh	equ	0xFF7
  4413                           tblptrl	equ	0xFF6
  4414                           tablat	equ	0xFF5
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           intcon	equ	0xFF2
  4418                           postinc0	equ	0xFEE
  4419                           wreg	equ	0xFE8
  4420                           indf1	equ	0xFE7
  4421                           fsr1h	equ	0xFE2
  4422                           fsr1l	equ	0xFE1
  4423                           indf2	equ	0xFDF
  4424                           postinc2	equ	0xFDE
  4425                           postdec2	equ	0xFDD
  4426                           fsr2h	equ	0xFDA
  4427                           fsr2l	equ	0xFD9
  4428                           status	equ	0xFD8
  4429                           
  4430 ;; *************** function _ToMainHigh_recvmsg *****************
  4431 ;; Defined at:
  4432 ;;		line 135 in file "source/messages.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  maxlength       1    wreg     unsigned char 
  4435 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  4436 ;;		 -> main@msgtype(1), 
  4437 ;;  data            2   65[BANK0 ] PTR void 
  4438 ;;		 -> main@msgbuffer(23), 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  maxlength       1   67[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      char 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4450 ;;      Params:         0       4       0       0       0
  4451 ;;      Locals:         0       1       0       0       0
  4452 ;;      Temps:          0       0       0       0       0
  4453 ;;      Totals:         0       5       0       0       0
  4454 ;;Total ram usage:        5 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:   14
  4457 ;; This function calls:
  4458 ;;		_recv_msg
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text23
  4465  002346                     __ptext23:
  4466                           	opt stack 0
  4467  002346                     _ToMainHigh_recvmsg:
  4468                           	opt stack 15
  4469                           
  4470                           ;incstack = 0
  4471                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4472  002346  CFE8 F0C3          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4473                           
  4474                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4475  00234A  0101               	movlb	1	; () banked
  4476  00234C  0E01               	movlw	high _ToMainHigh_MQ
  4477  00234E  0100               	movlb	0	; () banked
  4478  002350  0100               	movlb	0	; () banked
  4479  002352  6FB2               	movwf	(recv_msg@qptr+1)& (0+255),b
  4480  002354  0101               	movlb	1	; () banked
  4481  002356  0E94               	movlw	low _ToMainHigh_MQ
  4482  002358  0100               	movlb	0	; () banked
  4483  00235A  0100               	movlb	0	; () banked
  4484  00235C  6FB1               	movwf	recv_msg@qptr& (0+255),b
  4485  00235E  C0C3  F0B3         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4486  002362  0100               	movlb	0	; () banked
  4487  002364  0100               	movlb	0	; () banked
  4488  002366  C0C0  F0B5         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4489  00236A  0100               	movlb	0	; () banked
  4490  00236C  0100               	movlb	0	; () banked
  4491  00236E  C0BF  F0B4         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4492  002372  0100               	movlb	0	; () banked
  4493  002374  0100               	movlb	0	; () banked
  4494  002376  C0C2  F0B7         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4495  00237A  0100               	movlb	0	; () banked
  4496  00237C  0100               	movlb	0	; () banked
  4497  00237E  C0C1  F0B6         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4498  002382  EC53  F00A         	call	_recv_msg	;wreg free
  4499  002386  0012               	return	
  4500  002388                     __end_of_ToMainHigh_recvmsg:
  4501                           	opt stack 0
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           indf1	equ	0xFE7
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           indf2	equ	0xFDF
  4515                           postinc2	equ	0xFDE
  4516                           postdec2	equ	0xFDD
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function _recv_msg *****************
  4522 ;; Defined at:
  4523 ;;		line 63 in file "source/messages.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  qptr            2   49[BANK0 ] PTR struct __msg_queue
  4526 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4527 ;;  maxlength       1   51[BANK0 ] unsigned char 
  4528 ;;  msgtype         2   52[BANK0 ] PTR unsigned char 
  4529 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4530 ;;  data            2   54[BANK0 ] PTR void 
  4531 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  qmsg            2   61[BANK0 ] PTR struct __msg
  4534 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4535 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4536 ;;  tlength         2   59[BANK0 ] unsigned int 
  4537 ;;  slot            1   58[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      char 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4547 ;;      Params:         0       7       0       0       0
  4548 ;;      Locals:         0       5       0       0       0
  4549 ;;      Temps:          0       2       0       0       0
  4550 ;;      Totals:         0      14       0       0       0
  4551 ;;Total ram usage:       14 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:   13
  4554 ;; This function calls:
  4555 ;;		_memcpy
  4556 ;; This function is called by:
  4557 ;;		_ToMainLow_recvmsg
  4558 ;;		_ToMainHigh_recvmsg
  4559 ;;		_FromMainLow_recvmsg
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text24
  4564  0014A6                     __ptext24:
  4565                           	opt stack 0
  4566  0014A6                     _recv_msg:
  4567                           	opt stack 15
  4568                           
  4569                           ;messages.c: 64: unsigned char slot;
  4570                           ;messages.c: 68: msg *qmsg;
  4571                           ;messages.c: 69: size_t tlength;
  4572                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4573                           
  4574                           ;incstack = 0
  4575  0014A6  0100               	movlb	0	; () banked
  4576  0014A8  EE20 F065          	lfsr	2,101
  4577  0014AC  0100               	movlb	0	; () banked
  4578  0014AE  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4579  0014B0  26D9               	addwf	fsr2l,f,c
  4580  0014B2  0100               	movlb	0	; () banked
  4581  0014B4  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4582  0014B6  22DA               	addwfc	fsr2h,f,c
  4583  0014B8  50DF               	movf	indf2,w,c
  4584  0014BA  0100               	movlb	0	; () banked
  4585  0014BC  0100               	movlb	0	; () banked
  4586  0014BE  6FBA               	movwf	recv_msg@slot& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4590  0014C0  0100               	movlb	0	; () banked
  4591  0014C2  0100               	movlb	0	; () banked
  4592  0014C4  51BA               	movf	recv_msg@slot& (0+255),w,b
  4593  0014C6  0D19               	mullw	25
  4594  0014C8  50F3               	movf	prodl,w,c
  4595  0014CA  0100               	movlb	0	; () banked
  4596  0014CC  0100               	movlb	0	; () banked
  4597  0014CE  25B1               	addwf	recv_msg@qptr& (0+255),w,b
  4598  0014D0  0100               	movlb	0	; () banked
  4599  0014D2  0100               	movlb	0	; () banked
  4600  0014D4  6FBD               	movwf	recv_msg@qmsg& (0+255),b
  4601  0014D6  50F4               	movf	prodh,w,c
  4602  0014D8  0100               	movlb	0	; () banked
  4603  0014DA  0100               	movlb	0	; () banked
  4604  0014DC  21B2               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4605  0014DE  0100               	movlb	0	; () banked
  4606  0014E0  6FBE               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;messages.c: 74: if (qmsg->full == 1) {
  4610  0014E2  0E01               	movlw	1
  4611  0014E4  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4612  0014E8  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4613  0014EC  62DF               	cpfseq	indf2,c
  4614  0014EE  D074               	goto	l3682
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4618  0014F0  0100               	movlb	0	; () banked
  4619  0014F2  EE20 F001          	lfsr	2,1
  4620  0014F6  0100               	movlb	0	; () banked
  4621  0014F8  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4622  0014FA  26D9               	addwf	fsr2l,f,c
  4623  0014FC  0100               	movlb	0	; () banked
  4624  0014FE  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4625  001500  22DA               	addwfc	fsr2h,f,c
  4626  001502  50DF               	movf	indf2,w,c
  4627  001504  0100               	movlb	0	; () banked
  4628  001506  0100               	movlb	0	; () banked
  4629  001508  5DB3               	subwf	recv_msg@maxlength& (0+255),w,b
  4630  00150A  B0D8               	btfsc	status,0,c
  4631  00150C  D002               	goto	l3666
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;messages.c: 77: return (-3);
  4635  00150E  0EFD               	movlw	253
  4636  001510  0012               	return	
  4637  001512                     l3666:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;messages.c: 78: }
  4641                           ;messages.c: 80: tlength = qmsg->length;
  4642  001512  0100               	movlb	0	; () banked
  4643  001514  EE20 F001          	lfsr	2,1
  4644  001518  0100               	movlb	0	; () banked
  4645  00151A  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4646  00151C  26D9               	addwf	fsr2l,f,c
  4647  00151E  0100               	movlb	0	; () banked
  4648  001520  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4649  001522  22DA               	addwfc	fsr2h,f,c
  4650  001524  50DF               	movf	indf2,w,c
  4651  001526  0100               	movlb	0	; () banked
  4652  001528  6FB8               	movwf	??_recv_msg& (0+255),b
  4653  00152A  0100               	movlb	0	; () banked
  4654  00152C  51B8               	movf	??_recv_msg& (0+255),w,b
  4655  00152E  0100               	movlb	0	; () banked
  4656  001530  0100               	movlb	0	; () banked
  4657  001532  6FBB               	movwf	recv_msg@tlength& (0+255),b
  4658  001534  0100               	movlb	0	; () banked
  4659  001536  6BBC               	clrf	(recv_msg@tlength+1)& (0+255),b
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4663  001538  0100               	movlb	0	; () banked
  4664  00153A  0100               	movlb	0	; () banked
  4665  00153C  C0B7  F0A8         	movff	recv_msg@data+1,memcpy@d1+1
  4666  001540  0100               	movlb	0	; () banked
  4667  001542  0100               	movlb	0	; () banked
  4668  001544  C0B6  F0A7         	movff	recv_msg@data,memcpy@d1
  4669  001548  0E03               	movlw	3
  4670  00154A  0100               	movlb	0	; () banked
  4671  00154C  0100               	movlb	0	; () banked
  4672  00154E  25BD               	addwf	recv_msg@qmsg& (0+255),w,b
  4673  001550  0100               	movlb	0	; () banked
  4674  001552  6FB8               	movwf	??_recv_msg& (0+255),b
  4675  001554  0E00               	movlw	0
  4676  001556  0100               	movlb	0	; () banked
  4677  001558  0100               	movlb	0	; () banked
  4678  00155A  21BE               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4679  00155C  0100               	movlb	0	; () banked
  4680  00155E  6FB9               	movwf	(??_recv_msg+1)& (0+255),b
  4681  001560  C0B8  F0A9         	movff	??_recv_msg,memcpy@s1
  4682  001564  C0B9  F0AA         	movff	??_recv_msg+1,memcpy@s1+1
  4683  001568  C0BB  F0AB         	movff	recv_msg@tlength,memcpy@n
  4684  00156C  C0BC  F0AC         	movff	recv_msg@tlength+1,memcpy@n+1
  4685  001570  EC69  F010         	call	_memcpy	;wreg free
  4686                           
  4687                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4688  001574  0100               	movlb	0	; () banked
  4689  001576  EE20 F065          	lfsr	2,101
  4690  00157A  0100               	movlb	0	; () banked
  4691  00157C  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4692  00157E  26D9               	addwf	fsr2l,f,c
  4693  001580  0100               	movlb	0	; () banked
  4694  001582  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4695  001584  22DA               	addwfc	fsr2h,f,c
  4696  001586  0100               	movlb	0	; () banked
  4697  001588  EE10 F065          	lfsr	1,101
  4698  00158C  0100               	movlb	0	; () banked
  4699  00158E  51B1               	movf	recv_msg@qptr& (0+255),w,b
  4700  001590  26E1               	addwf	fsr1l,f,c
  4701  001592  0100               	movlb	0	; () banked
  4702  001594  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4703  001596  22E2               	addwfc	fsr1h,f,c
  4704  001598  50E7               	movf	indf1,w,c
  4705  00159A  0100               	movlb	0	; () banked
  4706  00159C  6FB8               	movwf	??_recv_msg& (0+255),b
  4707  00159E  0100               	movlb	0	; () banked
  4708  0015A0  29B8               	incf	??_recv_msg& (0+255),w,b
  4709  0015A2  0B03               	andlw	3
  4710  0015A4  6EDF               	movwf	indf2,c
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4714  0015A6  0100               	movlb	0	; () banked
  4715  0015A8  EE20 F002          	lfsr	2,2
  4716  0015AC  0100               	movlb	0	; () banked
  4717  0015AE  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  4718  0015B0  26D9               	addwf	fsr2l,f,c
  4719  0015B2  0100               	movlb	0	; () banked
  4720  0015B4  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4721  0015B6  22DA               	addwfc	fsr2h,f,c
  4722  0015B8  C0B4  FFE1         	movff	recv_msg@msgtype,fsr1l
  4723  0015BC  C0B5  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4724  0015C0  CFDF FFE7          	movff	indf2,indf1
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;messages.c: 91: qmsg->full = 0;
  4728  0015C4  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4729  0015C8  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4730  0015CC  0E00               	movlw	0
  4731  0015CE  6EDF               	movwf	indf2,c
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;messages.c: 92: return (tlength);
  4735  0015D0  0100               	movlb	0	; () banked
  4736  0015D2  0100               	movlb	0	; () banked
  4737  0015D4  51BB               	movf	recv_msg@tlength& (0+255),w,b
  4738  0015D6  0012               	return	
  4739  0015D8                     l3682:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;messages.c: 94: return (-4);
  4743  0015D8  0EFC               	movlw	252
  4744  0015DA  0012               	return	
  4745  0015DC                     __end_of_recv_msg:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           prodh	equ	0xFF4
  4752                           prodl	equ	0xFF3
  4753                           intcon	equ	0xFF2
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           indf1	equ	0xFE7
  4757                           fsr1h	equ	0xFE2
  4758                           fsr1l	equ	0xFE1
  4759                           indf2	equ	0xFDF
  4760                           postinc2	equ	0xFDE
  4761                           postdec2	equ	0xFDD
  4762                           fsr2h	equ	0xFDA
  4763                           fsr2l	equ	0xFD9
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _memcpy *****************
  4767 ;; Defined at:
  4768 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  d1              2   39[BANK0 ] PTR void 
  4771 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4772 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4773 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4774 ;;  s1              2   41[BANK0 ] PTR const void 
  4775 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4776 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4777 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  4778 ;;		 -> motor_lthread@message(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4779 ;;		 -> ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  4780 ;;  n               2   43[BANK0 ] unsigned int 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  s               2   47[BANK0 ] PTR const unsigned char 
  4783 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4784 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4785 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  4786 ;;		 -> motor_lthread@message(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4787 ;;		 -> ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  4788 ;;  d               2   45[BANK0 ] PTR unsigned char 
  4789 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4790 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4791 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2   39[BANK0 ] PTR void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4801 ;;      Params:         0       6       0       0       0
  4802 ;;      Locals:         0       4       0       0       0
  4803 ;;      Temps:          0       0       0       0       0
  4804 ;;      Totals:         0      10       0       0       0
  4805 ;;Total ram usage:       10 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:   12
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_send_msg
  4812 ;;		_recv_msg
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text25
  4817  0020D2                     __ptext25:
  4818                           	opt stack 0
  4819  0020D2                     _memcpy:
  4820                           	opt stack 14
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;incstack = 0
  4824  0020D2  0100               	movlb	0	; () banked
  4825  0020D4  0100               	movlb	0	; () banked
  4826  0020D6  C0AA  F0B0         	movff	memcpy@s1+1,memcpy@s+1
  4827  0020DA  0100               	movlb	0	; () banked
  4828  0020DC  0100               	movlb	0	; () banked
  4829  0020DE  C0A9  F0AF         	movff	memcpy@s1,memcpy@s
  4830  0020E2  0100               	movlb	0	; () banked
  4831  0020E4  0100               	movlb	0	; () banked
  4832  0020E6  C0A8  F0AE         	movff	memcpy@d1+1,memcpy@d+1
  4833  0020EA  0100               	movlb	0	; () banked
  4834  0020EC  0100               	movlb	0	; () banked
  4835  0020EE  C0A7  F0AD         	movff	memcpy@d1,memcpy@d
  4836  0020F2  D012               	goto	l3652
  4837  0020F4                     l3646:
  4838                           
  4839                           ; BSR set to: 0
  4840  0020F4  C0AF  FFD9         	movff	memcpy@s,fsr2l
  4841  0020F8  C0B0  FFDA         	movff	memcpy@s+1,fsr2h
  4842  0020FC  C0AD  FFE1         	movff	memcpy@d,fsr1l
  4843  002100  C0AE  FFE2         	movff	memcpy@d+1,fsr1h
  4844  002104  CFDF FFE7          	movff	indf2,indf1
  4845                           
  4846                           ; BSR set to: 0
  4847  002108  0100               	movlb	0	; () banked
  4848  00210A  0100               	movlb	0	; () banked
  4849  00210C  4BAF               	infsnz	memcpy@s& (0+255),f,b
  4850  00210E  2BB0               	incf	(memcpy@s+1)& (0+255),f,b
  4851                           
  4852                           ; BSR set to: 0
  4853  002110  0100               	movlb	0	; () banked
  4854  002112  0100               	movlb	0	; () banked
  4855  002114  4BAD               	infsnz	memcpy@d& (0+255),f,b
  4856  002116  2BAE               	incf	(memcpy@d+1)& (0+255),f,b
  4857  002118                     l3652:
  4858                           
  4859                           ; BSR set to: 0
  4860  002118  0100               	movlb	0	; () banked
  4861  00211A  0100               	movlb	0	; () banked
  4862  00211C  07AB               	decf	memcpy@n& (0+255),f,b
  4863  00211E  A0D8               	btfss	status,0,c
  4864  002120  07AC               	decf	(memcpy@n+1)& (0+255),f,b
  4865  002122  0100               	movlb	0	; () banked
  4866  002124  29AB               	incf	memcpy@n& (0+255),w,b
  4867  002126  B4D8               	btfsc	status,2,c
  4868  002128  29AC               	incf	(memcpy@n+1)& (0+255),w,b
  4869  00212A  B4D8               	btfsc	status,2,c
  4870                           
  4871                           ; BSR set to: 0
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;	Return value of _memcpy is never used
  4875  00212C  0012               	return	
  4876  00212E  D7E2               	goto	l3646
  4877  002130                     __end_of_memcpy:
  4878                           	opt stack 0
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           postinc0	equ	0xFEE
  4887                           wreg	equ	0xFE8
  4888                           indf1	equ	0xFE7
  4889                           fsr1h	equ	0xFE2
  4890                           fsr1l	equ	0xFE1
  4891                           indf2	equ	0xFDF
  4892                           postinc2	equ	0xFDE
  4893                           postdec2	equ	0xFDD
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _OpenUSART *****************
  4899 ;; Defined at:
  4900 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  config          1    wreg     unsigned char 
  4903 ;;  spbrg           2   39[BANK0 ] unsigned int 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  config          1   44[BANK0 ] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;		None               void
  4908 ;; Registers used:
  4909 ;;		wreg, status,2
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4915 ;;      Params:         0       2       0       0       0
  4916 ;;      Locals:         0       1       0       0       0
  4917 ;;      Temps:          0       3       0       0       0
  4918 ;;      Totals:         0       6       0       0       0
  4919 ;;Total ram usage:        6 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:   12
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text26
  4930  001DD4                     __ptext26:
  4931                           	opt stack 0
  4932  001DD4                     _OpenUSART:
  4933                           	opt stack 17
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;incstack = 0
  4937                           ;OpenUSART@config stored from wreg
  4938  001DD4  CFE8 F0AC          	movff	wreg,OpenUSART@config
  4939  001DD8  0E00               	movlw	0
  4940  001DDA  6EAC               	movwf	4012,c	;volatile
  4941  001DDC  0E00               	movlw	0
  4942  001DDE  6EAB               	movwf	4011,c	;volatile
  4943  001DE0  0100               	movlb	0	; () banked
  4944  001DE2  0100               	movlb	0	; () banked
  4945  001DE4  B1AC               	btfsc	OpenUSART@config& (0+255),0,b
  4946                           
  4947                           ; BSR set to: 0
  4948  001DE6  88AC               	bsf	4012,4,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951                           
  4952                           ; BSR set to: 0
  4953  001DE8  0100               	movlb	0	; () banked
  4954  001DEA  0100               	movlb	0	; () banked
  4955  001DEC  A3AC               	btfss	OpenUSART@config& (0+255),1,b
  4956  001DEE  D002               	goto	l2616
  4957                           
  4958                           ; BSR set to: 0
  4959  001DF0  8CAC               	bsf	4012,6,c	;volatile
  4960  001DF2  8CAB               	bsf	4011,6,c	;volatile
  4961  001DF4                     l2616:
  4962                           
  4963                           ; BSR set to: 0
  4964  001DF4  0100               	movlb	0	; () banked
  4965  001DF6  0100               	movlb	0	; () banked
  4966  001DF8  B5AC               	btfsc	OpenUSART@config& (0+255),2,b
  4967                           
  4968                           ; BSR set to: 0
  4969  001DFA  8EAC               	bsf	4012,7,c	;volatile
  4970                           
  4971                           ; BSR set to: 0
  4972                           
  4973                           ; BSR set to: 0
  4974  001DFC  0100               	movlb	0	; () banked
  4975  001DFE  0100               	movlb	0	; () banked
  4976  001E00  A7AC               	btfss	OpenUSART@config& (0+255),3,b
  4977  001E02  D002               	goto	l544
  4978                           
  4979                           ; BSR set to: 0
  4980  001E04  88AB               	bsf	4011,4,c	;volatile
  4981  001E06  D001               	goto	l2624
  4982  001E08                     l544:
  4983                           
  4984                           ; BSR set to: 0
  4985  001E08  8AAB               	bsf	4011,5,c	;volatile
  4986  001E0A                     l2624:
  4987                           
  4988                           ; BSR set to: 0
  4989  001E0A  0100               	movlb	0	; () banked
  4990  001E0C  0100               	movlb	0	; () banked
  4991  001E0E  B9AC               	btfsc	OpenUSART@config& (0+255),4,b
  4992                           
  4993                           ; BSR set to: 0
  4994  001E10  84AC               	bsf	4012,2,c	;volatile
  4995                           
  4996                           ; BSR set to: 0
  4997  001E12  989E               	bcf	3998,4,c	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000  001E14  0100               	movlb	0	; () banked
  5001  001E16  0100               	movlb	0	; () banked
  5002  001E18  BBAC               	btfsc	OpenUSART@config& (0+255),5,b
  5003                           
  5004                           ; BSR set to: 0
  5005  001E1A  86AB               	bsf	4011,3,c	;volatile
  5006                           
  5007                           ; BSR set to: 0
  5008                           
  5009                           ; BSR set to: 0
  5010  001E1C  0100               	movlb	0	; () banked
  5011  001E1E  0100               	movlb	0	; () banked
  5012  001E20  ADAC               	btfss	OpenUSART@config& (0+255),6,b
  5013  001E22  D002               	goto	l548
  5014                           
  5015                           ; BSR set to: 0
  5016  001E24  8A9D               	bsf	3997,5,c	;volatile
  5017  001E26  D001               	goto	l549
  5018  001E28                     l548:
  5019                           
  5020                           ; BSR set to: 0
  5021  001E28  9A9D               	bcf	3997,5,c	;volatile
  5022  001E2A                     l549:
  5023                           
  5024                           ; BSR set to: 0
  5025  001E2A  9A9E               	bcf	3998,5,c	;volatile
  5026                           
  5027                           ; BSR set to: 0
  5028  001E2C  0100               	movlb	0	; () banked
  5029  001E2E  0100               	movlb	0	; () banked
  5030  001E30  AFAC               	btfss	OpenUSART@config& (0+255),7,b
  5031  001E32  D002               	goto	l550
  5032                           
  5033                           ; BSR set to: 0
  5034  001E34  889D               	bsf	3997,4,c	;volatile
  5035  001E36  D001               	goto	l551
  5036  001E38                     l550:
  5037                           
  5038                           ; BSR set to: 0
  5039  001E38  989D               	bcf	3997,4,c	;volatile
  5040  001E3A                     l551:
  5041                           
  5042                           ; BSR set to: 0
  5043  001E3A  C0A7  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5044                           
  5045                           ; BSR set to: 0
  5046  001E3E  0100               	movlb	0	; () banked
  5047  001E40  C0A8  F0A9         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5048  001E44  C0A9  F0AA         	movff	??_OpenUSART,??_OpenUSART+1
  5049  001E48  0100               	movlb	0	; () banked
  5050  001E4A  6BAB               	clrf	(??_OpenUSART+2)& (0+255),b
  5051  001E4C  0100               	movlb	0	; () banked
  5052  001E4E  51AA               	movf	(??_OpenUSART+1)& (0+255),w,b
  5053  001E50  6EB0               	movwf	4016,c	;volatile
  5054                           
  5055                           ; BSR set to: 0
  5056  001E52  8AAC               	bsf	4012,5,c	;volatile
  5057                           
  5058                           ; BSR set to: 0
  5059  001E54  8EAB               	bsf	4011,7,c	;volatile
  5060                           
  5061                           ; BSR set to: 0
  5062  001E56  9C94               	bcf	3988,6,c	;volatile
  5063                           
  5064                           ; BSR set to: 0
  5065  001E58  8E94               	bsf	3988,7,c	;volatile
  5066                           
  5067                           ; BSR set to: 0
  5068  001E5A  A8AC               	btfss	4012,4,c	;volatile
  5069  001E5C  0012               	return	
  5070                           
  5071                           ; BSR set to: 0
  5072  001E5E  BEAC               	btfsc	4012,7,c	;volatile
  5073  001E60  0012               	return	
  5074                           
  5075                           ; BSR set to: 0
  5076  001E62  8C94               	bsf	3988,6,c	;volatile
  5077  001E64  0012               	return	
  5078  001E66                     __end_of_OpenUSART:
  5079                           	opt stack 0
  5080                           tblptru	equ	0xFF8
  5081                           tblptrh	equ	0xFF7
  5082                           tblptrl	equ	0xFF6
  5083                           tablat	equ	0xFF5
  5084                           prodh	equ	0xFF4
  5085                           prodl	equ	0xFF3
  5086                           intcon	equ	0xFF2
  5087                           postinc0	equ	0xFEE
  5088                           wreg	equ	0xFE8
  5089                           indf1	equ	0xFE7
  5090                           fsr1h	equ	0xFE2
  5091                           fsr1l	equ	0xFE1
  5092                           indf2	equ	0xFDF
  5093                           postinc2	equ	0xFDE
  5094                           postdec2	equ	0xFDD
  5095                           fsr2h	equ	0xFDA
  5096                           fsr2l	equ	0xFD9
  5097                           status	equ	0xFD8
  5098                           
  5099 ;; *************** function _InterruptHandlerLow *****************
  5100 ;; Defined at:
  5101 ;;		line 122 in file "source/interrupts.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;		None               void
  5108 ;; Registers used:
  5109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5115 ;;      Params:         0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0
  5117 ;;      Temps:         17       0       0       0       0
  5118 ;;      Totals:        17       0       0       0       0
  5119 ;;Total ram usage:       17 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:   11
  5122 ;; This function calls:
  5123 ;;		_timer1_int_handler
  5124 ;;		_uart_recv_int_handler
  5125 ;; This function is called by:
  5126 ;;		Interrupt level 1
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	intcodelo
  5131  000018                     __pintcodelo:
  5132                           	opt stack 0
  5133  000018                     _InterruptHandlerLow:
  5134                           	opt stack 14
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;incstack = 0
  5138  000018  CFD8 F021          	movff	status,??_InterruptHandlerLow
  5139  00001C  CFE8 F022          	movff	wreg,??_InterruptHandlerLow+1
  5140  000020  CFE0 F023          	movff	bsr,??_InterruptHandlerLow+2
  5141  000024  CFFA F024          	movff	pclath,??_InterruptHandlerLow+3
  5142  000028  CFFB F025          	movff	pclatu,??_InterruptHandlerLow+4
  5143  00002C  CFE9 F026          	movff	fsr0l,??_InterruptHandlerLow+5
  5144  000030  CFEA F027          	movff	fsr0h,??_InterruptHandlerLow+6
  5145  000034  CFE1 F028          	movff	fsr1l,??_InterruptHandlerLow+7
  5146  000038  CFE2 F029          	movff	fsr1h,??_InterruptHandlerLow+8
  5147  00003C  CFD9 F02A          	movff	fsr2l,??_InterruptHandlerLow+9
  5148  000040  CFDA F02B          	movff	fsr2h,??_InterruptHandlerLow+10
  5149  000044  CFF3 F02C          	movff	prodl,??_InterruptHandlerLow+11
  5150  000048  CFF4 F02D          	movff	prodh,??_InterruptHandlerLow+12
  5151  00004C  CFF6 F02E          	movff	tblptrl,??_InterruptHandlerLow+13
  5152  000050  CFF7 F02F          	movff	tblptrh,??_InterruptHandlerLow+14
  5153  000054  CFF8 F030          	movff	tblptru,??_InterruptHandlerLow+15
  5154  000058  CFF5 F031          	movff	tablat,??_InterruptHandlerLow+16
  5155                           
  5156                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5157  00005C  A09E               	btfss	3998,0,c	;volatile
  5158  00005E  D003               	goto	i1l4200
  5159                           
  5160                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5161  000060  909E               	bcf	3998,0,c	;volatile
  5162                           
  5163                           ;interrupts.c: 126: timer1_int_handler();
  5164  000062  EC76  F012         	call	_timer1_int_handler	;wreg free
  5165  000066                     i1l4200:
  5166                           
  5167                           ;interrupts.c: 127: }
  5168                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5169  000066  AA9E               	btfss	3998,5,c	;volatile
  5170  000068  D003               	goto	i1l47
  5171                           
  5172                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5173  00006A  9A9E               	bcf	3998,5,c	;volatile
  5174                           
  5175                           ;interrupts.c: 132: uart_recv_int_handler();
  5176  00006C  EC98  F010         	call	_uart_recv_int_handler	;wreg free
  5177  000070                     i1l47:
  5178  000070  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5179  000074  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5180  000078  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5181  00007C  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5182  000080  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5183  000084  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5184  000088  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5185  00008C  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5186  000090  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5187  000094  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5188  000098  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5189  00009C  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5190  0000A0  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5191  0000A4  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5192  0000A8  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5193  0000AC  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5194  0000B0  C021  FFD8         	movff	??_InterruptHandlerLow,status
  5195  0000B4  0010               	retfie	
  5196  0000B6                     __end_of_InterruptHandlerLow:
  5197                           	opt stack 0
  5198                           pclatu	equ	0xFFB
  5199                           pclath	equ	0xFFA
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           postinc0	equ	0xFEE
  5208                           fsr0h	equ	0xFEA
  5209                           fsr0l	equ	0xFE9
  5210                           wreg	equ	0xFE8
  5211                           indf1	equ	0xFE7
  5212                           fsr1h	equ	0xFE2
  5213                           fsr1l	equ	0xFE1
  5214                           bsr	equ	0xFE0
  5215                           indf2	equ	0xFDF
  5216                           postinc2	equ	0xFDE
  5217                           postdec2	equ	0xFDD
  5218                           fsr2h	equ	0xFDA
  5219                           fsr2l	equ	0xFD9
  5220                           status	equ	0xFD8
  5221                           
  5222 ;; *************** function _uart_recv_int_handler *****************
  5223 ;; Defined at:
  5224 ;;		line 16 in file "source/my_uart.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;		None               void
  5231 ;; Registers used:
  5232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5238 ;;      Params:         0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0
  5240 ;;      Temps:          1       0       0       0       0
  5241 ;;      Totals:         1       0       0       0       0
  5242 ;;Total ram usage:        1 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:   10
  5245 ;; This function calls:
  5246 ;;		_ReadUSART
  5247 ;;		_ToMainLow_sendmsg
  5248 ;;		_parseUART
  5249 ;; This function is called by:
  5250 ;;		_InterruptHandlerLow
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text28
  5255  002130                     __ptext28:
  5256                           	opt stack 0
  5257  002130                     _uart_recv_int_handler:
  5258                           	opt stack 14
  5259                           
  5260                           ;my_uart.c: 25: if ((PIR1bits.RCIF)) {
  5261                           
  5262                           ;incstack = 0
  5263  002130  AA9E               	btfss	3998,5,c	;volatile
  5264  002132  D01C               	goto	i1l4188
  5265                           
  5266                           ;my_uart.c: 26: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5267  002134  EE20 F016          	lfsr	2,22
  5268  002138  504C               	movf	_uc_ptr,w,c
  5269  00213A  26D9               	addwf	fsr2l,f,c
  5270  00213C  504D               	movf	_uc_ptr+1,w,c
  5271  00213E  22DA               	addwfc	fsr2h,f,c
  5272  002140  50DF               	movf	indf2,w,c
  5273  002142  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  5274  002144  5020               	movf	??_uart_recv_int_handler,w,c
  5275  002146  0D01               	mullw	1
  5276  002148  50F3               	movf	prodl,w,c
  5277  00214A  244C               	addwf	_uc_ptr,w,c
  5278  00214C  6ED9               	movwf	fsr2l,c
  5279  00214E  50F4               	movf	prodh,w,c
  5280  002150  204D               	addwfc	_uc_ptr+1,w,c
  5281  002152  6EDA               	movwf	fsr2h,c
  5282  002154  ECF0  F012         	call	_ReadUSART	;wreg free
  5283  002158  6EDF               	movwf	indf2,c
  5284                           
  5285                           ;my_uart.c: 29: uc_ptr->buflen++;
  5286  00215A  EE20 F016          	lfsr	2,22
  5287  00215E  504C               	movf	_uc_ptr,w,c
  5288  002160  26D9               	addwf	fsr2l,f,c
  5289  002162  504D               	movf	_uc_ptr+1,w,c
  5290  002164  22DA               	addwfc	fsr2h,f,c
  5291  002166  2ADF               	incf	indf2,f,c
  5292                           
  5293                           ;my_uart.c: 30: parseUART();
  5294  002168  EC03  F00C         	call	_parseUART	;wreg free
  5295  00216C                     i1l4188:
  5296                           
  5297                           ;my_uart.c: 33: }
  5298                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  5299  00216C  A64B               	btfss	_USART_Status,3,c
  5300  00216E  0012               	return	
  5301                           
  5302                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  5303  002170  98AB               	bcf	4011,4,c	;volatile
  5304                           
  5305                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  5306  002172  88AB               	bsf	4011,4,c	;volatile
  5307                           
  5308                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  5309  002174  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  5310  002176  0E1E               	movlw	30
  5311  002178  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5312  00217A  5020               	movf	??_uart_recv_int_handler& (0+255),w,c
  5313  00217C  0E00               	movlw	0
  5314  00217E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5315  002180  0E00               	movlw	0
  5316  002182  6E18               	movwf	ToMainLow_sendmsg@data,c
  5317  002184  0E00               	movlw	0
  5318  002186  ECBA  F012         	call	_ToMainLow_sendmsg
  5319  00218A  0012               	return	
  5320  00218C                     __end_of_uart_recv_int_handler:
  5321                           	opt stack 0
  5322                           pclatu	equ	0xFFB
  5323                           pclath	equ	0xFFA
  5324                           tblptru	equ	0xFF8
  5325                           tblptrh	equ	0xFF7
  5326                           tblptrl	equ	0xFF6
  5327                           tablat	equ	0xFF5
  5328                           prodh	equ	0xFF4
  5329                           prodl	equ	0xFF3
  5330                           intcon	equ	0xFF2
  5331                           postinc0	equ	0xFEE
  5332                           fsr0h	equ	0xFEA
  5333                           fsr0l	equ	0xFE9
  5334                           wreg	equ	0xFE8
  5335                           indf1	equ	0xFE7
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           bsr	equ	0xFE0
  5339                           indf2	equ	0xFDF
  5340                           postinc2	equ	0xFDE
  5341                           postdec2	equ	0xFDD
  5342                           fsr2h	equ	0xFDA
  5343                           fsr2l	equ	0xFD9
  5344                           status	equ	0xFD8
  5345                           
  5346 ;; *************** function _parseUART *****************
  5347 ;; Defined at:
  5348 ;;		line 56 in file "source/my_uart.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;		None               void
  5355 ;; Registers used:
  5356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5362 ;;      Params:         0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0
  5364 ;;      Temps:          5       0       0       0       0
  5365 ;;      Totals:         5       0       0       0       0
  5366 ;;Total ram usage:        5 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    9
  5369 ;; This function calls:
  5370 ;;		_ToMainLow_sendmsg
  5371 ;; This function is called by:
  5372 ;;		_uart_recv_int_handler
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text29
  5377  001806                     __ptext29:
  5378                           	opt stack 0
  5379  001806                     _parseUART:
  5380                           	opt stack 14
  5381                           
  5382                           ;my_uart.c: 58: switch(State)
  5383                           
  5384                           ;incstack = 0
  5385  001806  D06E               	goto	i1l4178
  5386  001808                     i1l4148:
  5387                           
  5388                           ;my_uart.c: 61: {
  5389                           ;my_uart.c: 62: State = MSGID;
  5390  001808  6E1B               	movwf	??_parseUART& (0+255),c
  5391  00180A  0E01               	movlw	1
  5392  00180C  6E4A               	movwf	_State,c
  5393  00180E  501B               	movf	??_parseUART& (0+255),w,c
  5394                           
  5395                           ;my_uart.c: 63: command_count = 0;
  5396  001810  0E00               	movlw	0
  5397  001812  6E42               	movwf	_command_count+1,c
  5398  001814  0E00               	movlw	0
  5399  001816  6E41               	movwf	_command_count,c
  5400                           
  5401                           ;my_uart.c: 64: command_length = 0;
  5402  001818  0E00               	movlw	0
  5403  00181A  6E44               	movwf	_command_length+1,c
  5404  00181C  0E00               	movlw	0
  5405  00181E  6E43               	movwf	_command_length,c
  5406                           
  5407                           ;my_uart.c: 65: motor_count = 0;
  5408  001820  0E00               	movlw	0
  5409  001822  6E46               	movwf	_motor_count+1,c
  5410  001824  0E00               	movlw	0
  5411  001826  6E45               	movwf	_motor_count,c
  5412                           
  5413                           ;my_uart.c: 66: break;
  5414  001828  0012               	return	
  5415  00182A                     i1l4156:
  5416                           
  5417                           ;my_uart.c: 69: {
  5418                           ;my_uart.c: 70: command_length = uc_ptr->buffer[uc_ptr->buflen-1] & 0x0f;
  5419  00182A  0EFF               	movlw	255
  5420  00182C  6E1B               	movwf	??_parseUART& (0+255),c
  5421  00182E  0EFF               	movlw	255
  5422  001830  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5423  001832  EE20 F016          	lfsr	2,22
  5424  001836  504C               	movf	_uc_ptr,w,c
  5425  001838  26D9               	addwf	fsr2l,f,c
  5426  00183A  504D               	movf	_uc_ptr+1,w,c
  5427  00183C  22DA               	addwfc	fsr2h,f,c
  5428  00183E  50DF               	movf	indf2,w,c
  5429  001840  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5430  001842  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  5431  001844  501B               	movf	??_parseUART,w,c
  5432  001846  261D               	addwf	??_parseUART+2,f,c
  5433  001848  501C               	movf	??_parseUART+1,w,c
  5434  00184A  221E               	addwfc	??_parseUART+3,f,c
  5435  00184C  501D               	movf	??_parseUART+2,w,c
  5436  00184E  244C               	addwf	_uc_ptr,w,c
  5437  001850  6ED9               	movwf	fsr2l,c
  5438  001852  501E               	movf	??_parseUART+3,w,c
  5439  001854  204D               	addwfc	_uc_ptr+1,w,c
  5440  001856  6EDA               	movwf	fsr2h,c
  5441  001858  50DF               	movf	indf2,w,c
  5442  00185A  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  5443  00185C  0E0F               	movlw	15
  5444  00185E  161F               	andwf	??_parseUART+4,f,c
  5445  001860  501F               	movf	??_parseUART+4,w,c
  5446  001862  6E43               	movwf	_command_length,c
  5447  001864  6A44               	clrf	_command_length+1,c
  5448                           
  5449                           ;my_uart.c: 71: if(command_length != 0)
  5450  001866  5044               	movf	_command_length+1,w,c
  5451  001868  1043               	iorwf	_command_length,w,c
  5452  00186A  B4D8               	btfsc	status,2,c
  5453  00186C  D005               	goto	i1l4162
  5454                           
  5455                           ;my_uart.c: 72: {
  5456                           ;my_uart.c: 73: State = COMMAND;
  5457  00186E  6E1B               	movwf	??_parseUART& (0+255),c
  5458  001870  0E02               	movlw	2
  5459  001872  6E4A               	movwf	_State,c
  5460  001874  501B               	movf	??_parseUART& (0+255),w,c
  5461                           
  5462                           ;my_uart.c: 74: }
  5463  001876  0012               	return	
  5464  001878                     i1l4162:
  5465                           
  5466                           ;my_uart.c: 75: else
  5467                           ;my_uart.c: 76: {
  5468                           ;my_uart.c: 77: State = CHECKSUM;
  5469  001878  6E1B               	movwf	??_parseUART& (0+255),c
  5470  00187A  0E03               	movlw	3
  5471  00187C  6E4A               	movwf	_State,c
  5472  00187E  501B               	movf	??_parseUART& (0+255),w,c
  5473  001880  0012               	return	
  5474  001882                     i1l4164:
  5475                           
  5476                           ;my_uart.c: 82: {
  5477                           ;my_uart.c: 83: if(command_count+1 < command_length)
  5478  001882  0E01               	movlw	1
  5479  001884  2441               	addwf	_command_count,w,c
  5480  001886  6E1B               	movwf	??_parseUART& (0+255),c
  5481  001888  0E00               	movlw	0
  5482  00188A  2042               	addwfc	_command_count+1,w,c
  5483  00188C  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5484  00188E  501C               	movf	??_parseUART+1,w,c
  5485  001890  0A80               	xorlw	128
  5486  001892  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5487  001894  5043               	movf	_command_length,w,c
  5488  001896  5C1B               	subwf	??_parseUART,w,c
  5489  001898  5044               	movf	_command_length+1,w,c
  5490  00189A  0A80               	xorlw	128
  5491  00189C  581D               	subwfb	(??_parseUART+2)& (0+255),w,c
  5492  00189E  B0D8               	btfsc	status,0,c
  5493  0018A0  D003               	goto	i1l4168
  5494                           
  5495                           ;my_uart.c: 84: {command_count++;}
  5496  0018A2  4A41               	infsnz	_command_count,f,c
  5497  0018A4  2A42               	incf	_command_count+1,f,c
  5498  0018A6  0012               	return	
  5499  0018A8                     i1l4168:
  5500                           
  5501                           ;my_uart.c: 85: else
  5502                           ;my_uart.c: 86: {State = CHECKSUM;}
  5503  0018A8  6E1B               	movwf	??_parseUART& (0+255),c
  5504  0018AA  0E03               	movlw	3
  5505  0018AC  6E4A               	movwf	_State,c
  5506  0018AE  501B               	movf	??_parseUART& (0+255),w,c
  5507  0018B0  0012               	return	
  5508  0018B2                     i1l4170:
  5509                           
  5510                           ;my_uart.c: 90: {
  5511                           ;my_uart.c: 91: ToMainLow_sendmsg(sizeof(unsigned char)*(3 + command_length),50,uc_ptr->
      +                          buffer);
  5512  0018B2  6E1B               	movwf	??_parseUART& (0+255),c
  5513  0018B4  0E32               	movlw	50
  5514  0018B6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5515  0018B8  501B               	movf	??_parseUART& (0+255),w,c
  5516  0018BA  C04D  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5517  0018BE  C04C  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5518  0018C2  5043               	movf	_command_length,w,c
  5519  0018C4  0F03               	addlw	3
  5520  0018C6  ECBA  F012         	call	_ToMainLow_sendmsg
  5521                           
  5522                           ;my_uart.c: 92: uc_ptr->buflen = 0;
  5523  0018CA  EE20 F016          	lfsr	2,22
  5524  0018CE  504C               	movf	_uc_ptr,w,c
  5525  0018D0  26D9               	addwf	fsr2l,f,c
  5526  0018D2  504D               	movf	_uc_ptr+1,w,c
  5527  0018D4  22DA               	addwfc	fsr2h,f,c
  5528  0018D6  0E00               	movlw	0
  5529  0018D8  6EDF               	movwf	indf2,c
  5530                           
  5531                           ;my_uart.c: 93: State = MSGCOUNT;
  5532  0018DA  6E1B               	movwf	??_parseUART& (0+255),c
  5533  0018DC  0E00               	movlw	0
  5534  0018DE  6E4A               	movwf	_State,c
  5535  0018E0  501B               	movf	??_parseUART& (0+255),w,c
  5536                           
  5537                           ;my_uart.c: 94: break;
  5538  0018E2  0012               	return	
  5539  0018E4                     i1l4178:
  5540  0018E4  504A               	movf	_State,w,c
  5541                           
  5542                           ; Switch size 1, requested type "space"
  5543                           ; Number of cases is 4, Range of values is 0 to 3
  5544                           ; switch strategies available:
  5545                           ; Name         Instructions Cycles
  5546                           ; simple_byte           13     7 (average)
  5547                           ;	Chosen strategy is simple_byte
  5548  0018E6  0A00               	xorlw	0	; case 0
  5549  0018E8  B4D8               	btfsc	status,2,c
  5550  0018EA  D78E               	goto	i1l4148
  5551  0018EC  0A01               	xorlw	1	; case 1
  5552  0018EE  B4D8               	btfsc	status,2,c
  5553  0018F0  D79C               	goto	i1l4156
  5554  0018F2  0A03               	xorlw	3	; case 2
  5555  0018F4  B4D8               	btfsc	status,2,c
  5556  0018F6  D7C5               	goto	i1l4164
  5557  0018F8  0A01               	xorlw	1	; case 3
  5558  0018FA  A4D8               	btfss	status,2,c
  5559  0018FC  0012               	return	
  5560  0018FE  D7D9               	goto	i1l4170
  5561  001900                     __end_of_parseUART:
  5562                           	opt stack 0
  5563                           pclatu	equ	0xFFB
  5564                           pclath	equ	0xFFA
  5565                           tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           intcon	equ	0xFF2
  5572                           postinc0	equ	0xFEE
  5573                           fsr0h	equ	0xFEA
  5574                           fsr0l	equ	0xFE9
  5575                           wreg	equ	0xFE8
  5576                           indf1	equ	0xFE7
  5577                           fsr1h	equ	0xFE2
  5578                           fsr1l	equ	0xFE1
  5579                           bsr	equ	0xFE0
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function _ReadUSART *****************
  5588 ;; Defined at:
  5589 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  data            1    0[COMRAM] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      unsigned char 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5603 ;;      Params:         0       0       0       0       0
  5604 ;;      Locals:         1       0       0       0       0
  5605 ;;      Temps:          0       0       0       0       0
  5606 ;;      Totals:         1       0       0       0       0
  5607 ;;Total ram usage:        1 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    6
  5610 ;; This function calls:
  5611 ;;		Nothing
  5612 ;; This function is called by:
  5613 ;;		_uart_recv_int_handler
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text30
  5618  0025E0                     __ptext30:
  5619                           	opt stack 0
  5620  0025E0                     _ReadUSART:
  5621                           	opt stack 17
  5622                           
  5623                           ;incstack = 0
  5624  0025E0  0EF2               	movlw	242
  5625  0025E2  164B               	andwf	_USART_Status,f,c
  5626  0025E4  ACAB               	btfss	4011,6,c	;volatile
  5627  0025E6  D003               	goto	i1l562
  5628  0025E8  904B               	bcf	_USART_Status,0,c
  5629  0025EA  B0AB               	btfsc	4011,0,c	;volatile
  5630  0025EC  804B               	bsf	_USART_Status,0,c
  5631  0025EE                     i1l562:
  5632  0025EE  B4AB               	btfsc	4011,2,c	;volatile
  5633  0025F0  844B               	bsf	_USART_Status,2,c
  5634  0025F2  B2AB               	btfsc	4011,1,c	;volatile
  5635  0025F4  864B               	bsf	_USART_Status,3,c
  5636  0025F6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5637  0025FA  5001               	movf	ReadUSART@data,w,c
  5638  0025FC  0012               	return	
  5639  0025FE                     __end_of_ReadUSART:
  5640                           	opt stack 0
  5641                           pclatu	equ	0xFFB
  5642                           pclath	equ	0xFFA
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           intcon	equ	0xFF2
  5650                           postinc0	equ	0xFEE
  5651                           fsr0h	equ	0xFEA
  5652                           fsr0l	equ	0xFE9
  5653                           wreg	equ	0xFE8
  5654                           indf1	equ	0xFE7
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           bsr	equ	0xFE0
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _timer1_int_handler *****************
  5666 ;; Defined at:
  5667 ;;		line 36 in file "source/user_interrupts.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  result          2   27[COMRAM] unsigned int 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;		None               void
  5674 ;; Registers used:
  5675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5681 ;;      Params:         0       0       0       0       0
  5682 ;;      Locals:         2       0       0       0       0
  5683 ;;      Temps:          1       0       0       0       0
  5684 ;;      Totals:         3       0       0       0       0
  5685 ;;Total ram usage:        3 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    9
  5688 ;; This function calls:
  5689 ;;		_ReadTimer1
  5690 ;;		_ToMainLow_sendmsg
  5691 ;;		_WriteTimer1
  5692 ;; This function is called by:
  5693 ;;		_InterruptHandlerLow
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text31
  5698  0024EC                     __ptext31:
  5699                           	opt stack 0
  5700  0024EC                     _timer1_int_handler:
  5701                           	opt stack 15
  5702                           
  5703                           ;user_interrupts.c: 37: unsigned int result;
  5704                           ;user_interrupts.c: 44: result = ReadTimer1();
  5705                           
  5706                           ;incstack = 0
  5707  0024EC  EC38  F013         	call	_ReadTimer1	;wreg free
  5708  0024F0  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5709  0024F4  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5710                           
  5711                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5712  0024F8  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5713  0024FA  0E0B               	movlw	11
  5714  0024FC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5715  0024FE  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5716  002500  0E00               	movlw	0
  5717  002502  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5718  002504  0E00               	movlw	0
  5719  002506  6E18               	movwf	ToMainLow_sendmsg@data,c
  5720  002508  0E00               	movlw	0
  5721  00250A  ECBA  F012         	call	_ToMainLow_sendmsg
  5722                           
  5723                           ;user_interrupts.c: 48: WriteTimer1(0);
  5724  00250E  0E00               	movlw	0
  5725  002510  6E02               	movwf	WriteTimer1@timer1+1,c
  5726  002512  0E00               	movlw	0
  5727  002514  6E01               	movwf	WriteTimer1@timer1,c
  5728  002516  EC2F  F013         	call	_WriteTimer1	;wreg free
  5729  00251A  0012               	return	
  5730  00251C                     __end_of_timer1_int_handler:
  5731                           	opt stack 0
  5732                           pclatu	equ	0xFFB
  5733                           pclath	equ	0xFFA
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           prodh	equ	0xFF4
  5739                           prodl	equ	0xFF3
  5740                           intcon	equ	0xFF2
  5741                           postinc0	equ	0xFEE
  5742                           fsr0h	equ	0xFEA
  5743                           fsr0l	equ	0xFE9
  5744                           wreg	equ	0xFE8
  5745                           indf1	equ	0xFE7
  5746                           fsr1h	equ	0xFE2
  5747                           fsr1l	equ	0xFE1
  5748                           bsr	equ	0xFE0
  5749                           indf2	equ	0xFDF
  5750                           postinc2	equ	0xFDE
  5751                           postdec2	equ	0xFDD
  5752                           fsr2h	equ	0xFDA
  5753                           fsr2l	equ	0xFD9
  5754                           status	equ	0xFD8
  5755                           
  5756 ;; *************** function _WriteTimer1 *****************
  5757 ;; Defined at:
  5758 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  timer1          2    0[COMRAM] unsigned int 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  timer           2    2[COMRAM] struct Timers
  5763 ;; Return value:  Size  Location     Type
  5764 ;;		None               void
  5765 ;; Registers used:
  5766 ;;		None
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5772 ;;      Params:         2       0       0       0       0
  5773 ;;      Locals:         2       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0
  5775 ;;      Totals:         4       0       0       0       0
  5776 ;;Total ram usage:        4 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    6
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_timer1_int_handler
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text32
  5787  00265E                     __ptext32:
  5788                           	opt stack 0
  5789  00265E                     _WriteTimer1:
  5790                           	opt stack 17
  5791                           
  5792                           ;incstack = 0
  5793  00265E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5794  002662  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5795  002666  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5796  00266A  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5797  00266E  0012               	return	
  5798  002670                     __end_of_WriteTimer1:
  5799                           	opt stack 0
  5800                           pclatu	equ	0xFFB
  5801                           pclath	equ	0xFFA
  5802                           tblptru	equ	0xFF8
  5803                           tblptrh	equ	0xFF7
  5804                           tblptrl	equ	0xFF6
  5805                           tablat	equ	0xFF5
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon	equ	0xFF2
  5809                           postinc0	equ	0xFEE
  5810                           fsr0h	equ	0xFEA
  5811                           fsr0l	equ	0xFE9
  5812                           wreg	equ	0xFE8
  5813                           indf1	equ	0xFE7
  5814                           fsr1h	equ	0xFE2
  5815                           fsr1l	equ	0xFE1
  5816                           bsr	equ	0xFE0
  5817                           indf2	equ	0xFDF
  5818                           postinc2	equ	0xFDE
  5819                           postdec2	equ	0xFDD
  5820                           fsr2h	equ	0xFDA
  5821                           fsr2l	equ	0xFD9
  5822                           status	equ	0xFD8
  5823                           
  5824 ;; *************** function _ToMainLow_sendmsg *****************
  5825 ;; Defined at:
  5826 ;;		line 103 in file "source/messages.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  length          1    wreg     unsigned char 
  5829 ;;  msgtype         1   22[COMRAM] unsigned char 
  5830 ;;  data            2   23[COMRAM] PTR void 
  5831 ;;		 -> NULL(0), main@uc(23), 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  length          1   25[COMRAM] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      char 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5843 ;;      Params:         3       0       0       0       0
  5844 ;;      Locals:         1       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0
  5846 ;;      Totals:         4       0       0       0       0
  5847 ;;Total ram usage:        4 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    8
  5850 ;; This function calls:
  5851 ;;		i1_send_msg
  5852 ;; This function is called by:
  5853 ;;		_uart_recv_int_handler
  5854 ;;		_parseUART
  5855 ;;		_timer1_int_handler
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text33
  5860  002574                     __ptext33:
  5861                           	opt stack 0
  5862  002574                     _ToMainLow_sendmsg:
  5863                           	opt stack 14
  5864                           
  5865                           ;incstack = 0
  5866                           ;ToMainLow_sendmsg@length stored from wreg
  5867  002574  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5868                           
  5869                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5870                           ;	Return value of _ToMainLow_sendmsg is never used
  5871  002578  0102               	movlb	2	; () banked
  5872  00257A  0E02               	movlw	high _ToMainLow_MQ
  5873  00257C  6E0C               	movwf	i1send_msg@qptr+1,c
  5874  00257E  0102               	movlb	2	; () banked
  5875  002580  0E66               	movlw	low _ToMainLow_MQ
  5876  002582  6E0B               	movwf	i1send_msg@qptr,c
  5877  002584  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5878  002588  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5879  00258C  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5880  002590  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5881  002594  EC95  F00E         	call	i1_send_msg	;wreg free
  5882  002598  0012               	return	
  5883  00259A                     __end_of_ToMainLow_sendmsg:
  5884                           	opt stack 0
  5885                           pclatu	equ	0xFFB
  5886                           pclath	equ	0xFFA
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           intcon	equ	0xFF2
  5894                           postinc0	equ	0xFEE
  5895                           fsr0h	equ	0xFEA
  5896                           fsr0l	equ	0xFE9
  5897                           wreg	equ	0xFE8
  5898                           indf1	equ	0xFE7
  5899                           fsr1h	equ	0xFE2
  5900                           fsr1l	equ	0xFE1
  5901                           bsr	equ	0xFE0
  5902                           indf2	equ	0xFDF
  5903                           postinc2	equ	0xFDE
  5904                           postdec2	equ	0xFDD
  5905                           fsr2h	equ	0xFDA
  5906                           fsr2l	equ	0xFD9
  5907                           status	equ	0xFD8
  5908                           
  5909 ;; *************** function i1_send_msg *****************
  5910 ;; Defined at:
  5911 ;;		line 24 in file "source/messages.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5914 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5915 ;;  length          1   12[COMRAM] unsigned char 
  5916 ;;  msgtype         1   13[COMRAM] unsigned char 
  5917 ;;  data            2   14[COMRAM] PTR void 
  5918 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  5919 ;;		 -> motor_lthread@message(2), main@ic(77), main@uc(23), 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5922 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5923 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5924 ;;  send_msg        2   17[COMRAM] unsigned int 
  5925 ;;  send_msg        1   19[COMRAM] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      char 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5935 ;;      Params:         6       0       0       0       0
  5936 ;;      Locals:         5       0       0       0       0
  5937 ;;      Temps:          1       0       0       0       0
  5938 ;;      Totals:        12       0       0       0       0
  5939 ;;Total ram usage:       12 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    7
  5942 ;; This function calls:
  5943 ;;		i1_memcpy
  5944 ;; This function is called by:
  5945 ;;		_ToMainLow_sendmsg
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text34
  5950  001D2A                     __ptext34:
  5951                           	opt stack 0
  5952  001D2A                     i1_send_msg:
  5953                           	opt stack 14
  5954                           
  5955                           ;messages.c: 25: unsigned char slot;
  5956                           ;messages.c: 27: msg *qmsg;
  5957                           ;messages.c: 28: size_t tlength = length;
  5958                           
  5959                           ;incstack = 0
  5960  001D2A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5961  001D2E  6A13               	clrf	i1send_msg@tlength+1,c
  5962                           
  5963                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5964  001D30  EE20 F064          	lfsr	2,100
  5965  001D34  500B               	movf	i1send_msg@qptr,w,c
  5966  001D36  26D9               	addwf	fsr2l,f,c
  5967  001D38  500C               	movf	i1send_msg@qptr+1,w,c
  5968  001D3A  22DA               	addwfc	fsr2h,f,c
  5969  001D3C  50DF               	movf	indf2,w,c
  5970  001D3E  6E14               	movwf	i1send_msg@slot,c
  5971                           
  5972                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5973  001D40  5014               	movf	i1send_msg@slot,w,c
  5974  001D42  0D19               	mullw	25
  5975  001D44  50F3               	movf	prodl,w,c
  5976  001D46  240B               	addwf	i1send_msg@qptr,w,c
  5977  001D48  6E15               	movwf	i1send_msg@qmsg,c
  5978  001D4A  50F4               	movf	prodh,w,c
  5979  001D4C  200C               	addwfc	i1send_msg@qptr+1,w,c
  5980  001D4E  6E16               	movwf	i1send_msg@qmsg+1,c
  5981                           
  5982                           ;messages.c: 41: if (qmsg->full != 0) {
  5983  001D50  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5984  001D54  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5985  001D58  50DF               	movf	indf2,w,c
  5986  001D5A  B4D8               	btfsc	status,2,c
  5987  001D5C  D002               	goto	i1l4124
  5988                           
  5989                           ;messages.c: 42: return (-1);
  5990  001D5E  0EFF               	movlw	255
  5991  001D60  0012               	return	
  5992  001D62                     i1l4124:
  5993                           
  5994                           ;messages.c: 43: }
  5995                           ;messages.c: 46: qmsg->length = length;
  5996  001D62  EE20 F001          	lfsr	2,1
  5997  001D66  5015               	movf	i1send_msg@qmsg,w,c
  5998  001D68  26D9               	addwf	fsr2l,f,c
  5999  001D6A  5016               	movf	i1send_msg@qmsg+1,w,c
  6000  001D6C  22DA               	addwfc	fsr2h,f,c
  6001  001D6E  C00D  FFDF         	movff	i1send_msg@length,indf2
  6002                           
  6003                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6004  001D72  EE20 F002          	lfsr	2,2
  6005  001D76  5015               	movf	i1send_msg@qmsg,w,c
  6006  001D78  26D9               	addwf	fsr2l,f,c
  6007  001D7A  5016               	movf	i1send_msg@qmsg+1,w,c
  6008  001D7C  22DA               	addwfc	fsr2h,f,c
  6009  001D7E  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6010                           
  6011                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6012  001D82  0E03               	movlw	3
  6013  001D84  2415               	addwf	i1send_msg@qmsg,w,c
  6014  001D86  6E01               	movwf	i1memcpy@d1,c
  6015  001D88  0E00               	movlw	0
  6016  001D8A  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6017  001D8C  6E02               	movwf	i1memcpy@d1+1,c
  6018  001D8E  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6019  001D92  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6020  001D96  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6021  001D9A  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6022  001D9E  ECE5  F011         	call	i1_memcpy	;wreg free
  6023                           
  6024                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6025  001DA2  EE20 F064          	lfsr	2,100
  6026  001DA6  500B               	movf	i1send_msg@qptr,w,c
  6027  001DA8  26D9               	addwf	fsr2l,f,c
  6028  001DAA  500C               	movf	i1send_msg@qptr+1,w,c
  6029  001DAC  22DA               	addwfc	fsr2h,f,c
  6030  001DAE  EE10 F064          	lfsr	1,100
  6031  001DB2  500B               	movf	i1send_msg@qptr,w,c
  6032  001DB4  26E1               	addwf	fsr1l,f,c
  6033  001DB6  500C               	movf	i1send_msg@qptr+1,w,c
  6034  001DB8  22E2               	addwfc	fsr1h,f,c
  6035  001DBA  50E7               	movf	indf1,w,c
  6036  001DBC  6E11               	movwf	??i1_send_msg& (0+255),c
  6037  001DBE  2811               	incf	??i1_send_msg,w,c
  6038  001DC0  0B03               	andlw	3
  6039  001DC2  6EDF               	movwf	indf2,c
  6040                           
  6041                           ;messages.c: 59: qmsg->full = 1;
  6042  001DC4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6043  001DC8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6044  001DCC  0E01               	movlw	1
  6045  001DCE  6EDF               	movwf	indf2,c
  6046                           
  6047                           ;messages.c: 60: return (1);
  6048  001DD0  0E01               	movlw	1
  6049  001DD2  0012               	return	
  6050  001DD4                     __end_ofi1_send_msg:
  6051                           	opt stack 0
  6052                           pclatu	equ	0xFFB
  6053                           pclath	equ	0xFFA
  6054                           tblptru	equ	0xFF8
  6055                           tblptrh	equ	0xFF7
  6056                           tblptrl	equ	0xFF6
  6057                           tablat	equ	0xFF5
  6058                           prodh	equ	0xFF4
  6059                           prodl	equ	0xFF3
  6060                           intcon	equ	0xFF2
  6061                           postinc0	equ	0xFEE
  6062                           fsr0h	equ	0xFEA
  6063                           fsr0l	equ	0xFE9
  6064                           wreg	equ	0xFE8
  6065                           indf1	equ	0xFE7
  6066                           fsr1h	equ	0xFE2
  6067                           fsr1l	equ	0xFE1
  6068                           bsr	equ	0xFE0
  6069                           indf2	equ	0xFDF
  6070                           postinc2	equ	0xFDE
  6071                           postdec2	equ	0xFDD
  6072                           fsr2h	equ	0xFDA
  6073                           fsr2l	equ	0xFD9
  6074                           status	equ	0xFD8
  6075                           
  6076 ;; *************** function i1_memcpy *****************
  6077 ;; Defined at:
  6078 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  d1              2    0[COMRAM] PTR void 
  6081 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6082 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  6083 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  6084 ;;  s1              2    2[COMRAM] PTR const void 
  6085 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  6086 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  6087 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  6088 ;;		 -> motor_lthread@message(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  6089 ;;		 -> ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  6090 ;;  n               2    4[COMRAM] unsigned int 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6093 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  6094 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  6095 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  6096 ;;		 -> motor_lthread@message(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  6097 ;;		 -> ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  6098 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6099 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6100 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  6101 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  2    0[COMRAM] PTR void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6111 ;;      Params:         6       0       0       0       0
  6112 ;;      Locals:         4       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0
  6114 ;;      Totals:        10       0       0       0       0
  6115 ;;Total ram usage:       10 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    6
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		i1_send_msg
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text35
  6126  0023CA                     __ptext35:
  6127                           	opt stack 0
  6128  0023CA                     i1_memcpy:
  6129                           	opt stack 14
  6130                           
  6131                           ;incstack = 0
  6132  0023CA  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6133  0023CE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6134  0023D2  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6135  0023D6  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6136  0023DA  D00E               	goto	i1l4100
  6137  0023DC                     i1l4094:
  6138  0023DC  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6139  0023E0  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6140  0023E4  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6141  0023E8  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6142  0023EC  CFDF FFE7          	movff	indf2,indf1
  6143  0023F0  4A09               	infsnz	i1memcpy@s,f,c
  6144  0023F2  2A0A               	incf	i1memcpy@s+1,f,c
  6145  0023F4  4A07               	infsnz	i1memcpy@d,f,c
  6146  0023F6  2A08               	incf	i1memcpy@d+1,f,c
  6147  0023F8                     i1l4100:
  6148  0023F8  0605               	decf	i1memcpy@n,f,c
  6149  0023FA  A0D8               	btfss	status,0,c
  6150  0023FC  0606               	decf	i1memcpy@n+1,f,c
  6151  0023FE  2805               	incf	i1memcpy@n& (0+255),w,c
  6152  002400  B4D8               	btfsc	status,2,c
  6153  002402  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6154  002404  B4D8               	btfsc	status,2,c
  6155                           
  6156                           ;	Return value of i1_memcpy is never used
  6157  002406  0012               	return	
  6158  002408  D7E9               	goto	i1l4094
  6159  00240A                     __end_ofi1_memcpy:
  6160                           	opt stack 0
  6161                           pclatu	equ	0xFFB
  6162                           pclath	equ	0xFFA
  6163                           tblptru	equ	0xFF8
  6164                           tblptrh	equ	0xFF7
  6165                           tblptrl	equ	0xFF6
  6166                           tablat	equ	0xFF5
  6167                           prodh	equ	0xFF4
  6168                           prodl	equ	0xFF3
  6169                           intcon	equ	0xFF2
  6170                           postinc0	equ	0xFEE
  6171                           fsr0h	equ	0xFEA
  6172                           fsr0l	equ	0xFE9
  6173                           wreg	equ	0xFE8
  6174                           indf1	equ	0xFE7
  6175                           fsr1h	equ	0xFE2
  6176                           fsr1l	equ	0xFE1
  6177                           bsr	equ	0xFE0
  6178                           indf2	equ	0xFDF
  6179                           postinc2	equ	0xFDE
  6180                           postdec2	equ	0xFDD
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185 ;; *************** function _ReadTimer1 *****************
  6186 ;; Defined at:
  6187 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  timer           2    2[COMRAM] struct Timers
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  2    0[COMRAM] unsigned int 
  6194 ;; Registers used:
  6195 ;;		None
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6201 ;;      Params:         2       0       0       0       0
  6202 ;;      Locals:         2       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0
  6204 ;;      Totals:         4       0       0       0       0
  6205 ;;Total ram usage:        4 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    6
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_timer1_int_handler
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text36
  6216  002670                     __ptext36:
  6217                           	opt stack 0
  6218  002670                     _ReadTimer1:
  6219                           	opt stack 17
  6220                           
  6221                           ;incstack = 0
  6222  002670  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6223  002674  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6224  002678  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6225  00267C  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6226  002680  0012               	return	
  6227  002682                     __end_of_ReadTimer1:
  6228                           	opt stack 0
  6229                           pclatu	equ	0xFFB
  6230                           pclath	equ	0xFFA
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           postinc0	equ	0xFEE
  6239                           fsr0h	equ	0xFEA
  6240                           fsr0l	equ	0xFE9
  6241                           wreg	equ	0xFE8
  6242                           indf1	equ	0xFE7
  6243                           fsr1h	equ	0xFE2
  6244                           fsr1l	equ	0xFE1
  6245                           bsr	equ	0xFE0
  6246                           indf2	equ	0xFDF
  6247                           postinc2	equ	0xFDE
  6248                           postdec2	equ	0xFDD
  6249                           fsr2h	equ	0xFDA
  6250                           fsr2l	equ	0xFD9
  6251                           status	equ	0xFD8
  6252                           
  6253 ;; *************** function _InterruptHandlerHigh *****************
  6254 ;; Defined at:
  6255 ;;		line 83 in file "source/interrupts.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;		None               void
  6262 ;; Registers used:
  6263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6269 ;;      Params:         0       0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0
  6271 ;;      Temps:          0      14       0       0       0
  6272 ;;      Totals:         0      14       0       0       0
  6273 ;;Total ram usage:       14 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    5
  6276 ;; This function calls:
  6277 ;;		_SleepIfOkay
  6278 ;;		_i2c_int_handler
  6279 ;;		_timer0_int_handler
  6280 ;; This function is called by:
  6281 ;;		Interrupt level 2
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	intcode
  6286  000008                     __pintcode:
  6287                           	opt stack 0
  6288  000008                     _InterruptHandlerHigh:
  6289                           	opt stack 14
  6290                           
  6291                           ;incstack = 0
  6292  000008  CFFA F099          	movff	pclath,??_InterruptHandlerHigh
  6293  00000C  CFFB F09A          	movff	pclatu,??_InterruptHandlerHigh+1
  6294  000010  EF75  F00F         	goto	int_func
  6295                           pclatu	equ	0xFFB
  6296                           pclath	equ	0xFFA
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           postinc0	equ	0xFEE
  6305                           fsr0h	equ	0xFEA
  6306                           fsr0l	equ	0xFE9
  6307                           wreg	equ	0xFE8
  6308                           indf1	equ	0xFE7
  6309                           fsr1h	equ	0xFE2
  6310                           fsr1l	equ	0xFE1
  6311                           bsr	equ	0xFE0
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           postdec2	equ	0xFDD
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319                           	psect	intcode_body
  6320  001EEA                     __pintcode_body:
  6321                           	opt stack 14
  6322  001EEA                     int_func:
  6323                           	opt stack 14
  6324  001EEA  CFE9 F09B          	movff	fsr0l,??_InterruptHandlerHigh+2
  6325  001EEE  CFEA F09C          	movff	fsr0h,??_InterruptHandlerHigh+3
  6326  001EF2  CFE1 F09D          	movff	fsr1l,??_InterruptHandlerHigh+4
  6327  001EF6  CFE2 F09E          	movff	fsr1h,??_InterruptHandlerHigh+5
  6328  001EFA  CFD9 F09F          	movff	fsr2l,??_InterruptHandlerHigh+6
  6329  001EFE  CFDA F0A0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6330  001F02  CFF3 F0A1          	movff	prodl,??_InterruptHandlerHigh+8
  6331  001F06  CFF4 F0A2          	movff	prodh,??_InterruptHandlerHigh+9
  6332  001F0A  CFF6 F0A3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6333  001F0E  CFF7 F0A4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6334  001F12  CFF8 F0A5          	movff	tblptru,??_InterruptHandlerHigh+12
  6335  001F16  CFF5 F0A6          	movff	tablat,??_InterruptHandlerHigh+13
  6336                           
  6337                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6338  001F1A  A69E               	btfss	3998,3,c	;volatile
  6339  001F1C  D003               	goto	i2l3498
  6340                           
  6341                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6342  001F1E  969E               	bcf	3998,3,c	;volatile
  6343                           
  6344                           ;interrupts.c: 92: i2c_int_handler();
  6345  001F20  ECDF  F012         	call	_i2c_int_handler	;wreg free
  6346  001F24                     i2l3498:
  6347                           
  6348                           ;interrupts.c: 93: }
  6349                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6350  001F24  A4F2               	btfss	intcon,2,c	;volatile
  6351  001F26  D003               	goto	i2l3504
  6352                           
  6353                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6354  001F28  94F2               	bcf	intcon,2,c	;volatile
  6355                           
  6356                           ;interrupts.c: 99: timer0_int_handler();
  6357  001F2A  EC33  F00F         	call	_timer0_int_handler	;wreg free
  6358  001F2E                     i2l3504:
  6359                           
  6360                           ;interrupts.c: 100: }
  6361                           ;interrupts.c: 109: SleepIfOkay();
  6362  001F2E  EC16  F011         	call	_SleepIfOkay	;wreg free
  6363  001F32  C0A6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6364  001F36  C0A5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6365  001F3A  C0A4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6366  001F3E  C0A3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6367  001F42  C0A2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6368  001F46  C0A1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6369  001F4A  C0A0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6370  001F4E  C09F  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6371  001F52  C09E  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6372  001F56  C09D  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6373  001F5A  C09C  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6374  001F5E  C09B  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6375  001F62  C09A  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6376  001F66  C099  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6377  001F6A  0011               	retfie		f
  6378  001F6C                     __end_of_InterruptHandlerHigh:
  6379                           	opt stack 0
  6380                           pclatu	equ	0xFFB
  6381                           pclath	equ	0xFFA
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           postinc0	equ	0xFEE
  6390                           fsr0h	equ	0xFEA
  6391                           fsr0l	equ	0xFE9
  6392                           wreg	equ	0xFE8
  6393                           indf1	equ	0xFE7
  6394                           fsr1h	equ	0xFE2
  6395                           fsr1l	equ	0xFE1
  6396                           bsr	equ	0xFE0
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _timer0_int_handler *****************
  6405 ;; Defined at:
  6406 ;;		line 16 in file "source/user_interrupts.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  val             2   21[BANK0 ] unsigned int 
  6411 ;;  msgtype         2   19[BANK0 ] int 
  6412 ;;  length          2   17[BANK0 ] int 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;		None               void
  6415 ;; Registers used:
  6416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6422 ;;      Params:         0       0       0       0       0
  6423 ;;      Locals:         0       6       0       0       0
  6424 ;;      Temps:          0       1       0       0       0
  6425 ;;      Totals:         0       7       0       0       0
  6426 ;;Total ram usage:        7 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    3
  6429 ;; This function calls:
  6430 ;;		_FromMainHigh_recvmsg
  6431 ;;		_WriteTimer0
  6432 ;;		i2_ToMainHigh_sendmsg
  6433 ;; This function is called by:
  6434 ;;		_InterruptHandlerHigh
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text38
  6439  001E66                     __ptext38:
  6440                           	opt stack 0
  6441  001E66                     _timer0_int_handler:
  6442                           	opt stack 15
  6443                           
  6444                           ;user_interrupts.c: 17: unsigned int val;
  6445                           ;user_interrupts.c: 18: int length, msgtype;
  6446                           ;user_interrupts.c: 25: WriteTimer0(0);
  6447                           
  6448                           ;incstack = 0
  6449  001E66  0E00               	movlw	0
  6450  001E68  6E33               	movwf	WriteTimer0@timer0+1,c
  6451  001E6A  0E00               	movlw	0
  6452  001E6C  6E32               	movwf	WriteTimer0@timer0,c
  6453  001E6E  EC41  F013         	call	_WriteTimer0	;wreg free
  6454                           
  6455                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6456  001E72  0100               	movlb	0	; () banked
  6457  001E74  0E00               	movlw	high timer0_int_handler@msgtype
  6458  001E76  0100               	movlb	0	; () banked
  6459  001E78  0100               	movlb	0	; () banked
  6460  001E7A  6F8D               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6461  001E7C  0100               	movlb	0	; () banked
  6462  001E7E  0E93               	movlw	low timer0_int_handler@msgtype
  6463  001E80  0100               	movlb	0	; () banked
  6464  001E82  0100               	movlb	0	; () banked
  6465  001E84  6F8C               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6466  001E86  0100               	movlb	0	; () banked
  6467  001E88  0E00               	movlw	high timer0_int_handler@val
  6468  001E8A  0100               	movlb	0	; () banked
  6469  001E8C  0100               	movlb	0	; () banked
  6470  001E8E  6F8F               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6471  001E90  0100               	movlb	0	; () banked
  6472  001E92  0E95               	movlw	low timer0_int_handler@val
  6473  001E94  0100               	movlb	0	; () banked
  6474  001E96  0100               	movlb	0	; () banked
  6475  001E98  6F8E               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6476  001E9A  0E02               	movlw	2
  6477  001E9C  ECC4  F011         	call	_FromMainHigh_recvmsg
  6478  001EA0  0100               	movlb	0	; () banked
  6479  001EA2  0100               	movlb	0	; () banked
  6480  001EA4  6F91               	movwf	timer0_int_handler@length& (0+255),b
  6481  001EA6  0100               	movlb	0	; () banked
  6482  001EA8  6B92               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6483  001EAA  0100               	movlb	0	; () banked
  6484  001EAC  BF91               	btfsc	timer0_int_handler@length& (0+255),7,b
  6485  001EAE  0792               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6489  001EB0  0100               	movlb	0	; () banked
  6490  001EB2  0100               	movlb	0	; () banked
  6491  001EB4  5191               	movf	timer0_int_handler@length& (0+255),w,b
  6492  001EB6  0A02               	xorlw	2
  6493  001EB8  1192               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6494  001EBA  A4D8               	btfss	status,2,c
  6495  001EBC  0012               	return	
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6499  001EBE  0100               	movlb	0	; () banked
  6500  001EC0  6F90               	movwf	??_timer0_int_handler& (0+255),b
  6501  001EC2  0E0A               	movlw	10
  6502  001EC4  0100               	movlb	0	; () banked
  6503  001EC6  0100               	movlb	0	; () banked
  6504  001EC8  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6505  001ECA  0100               	movlb	0	; () banked
  6506  001ECC  5190               	movf	??_timer0_int_handler& (0+255),w,b
  6507  001ECE  0100               	movlb	0	; () banked
  6508  001ED0  0E00               	movlw	high timer0_int_handler@val
  6509  001ED2  0100               	movlb	0	; () banked
  6510  001ED4  0100               	movlb	0	; () banked
  6511  001ED6  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  6512  001ED8  0100               	movlb	0	; () banked
  6513  001EDA  0E95               	movlw	low timer0_int_handler@val
  6514  001EDC  0100               	movlb	0	; () banked
  6515  001EDE  0100               	movlb	0	; () banked
  6516  001EE0  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  6517  001EE2  0E02               	movlw	2
  6518  001EE4  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  6519  001EE8  0012               	return	
  6520  001EEA                     __end_of_timer0_int_handler:
  6521                           	opt stack 0
  6522                           pclatu	equ	0xFFB
  6523                           pclath	equ	0xFFA
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           prodh	equ	0xFF4
  6529                           prodl	equ	0xFF3
  6530                           intcon	equ	0xFF2
  6531                           postinc0	equ	0xFEE
  6532                           fsr0h	equ	0xFEA
  6533                           fsr0l	equ	0xFE9
  6534                           wreg	equ	0xFE8
  6535                           indf1	equ	0xFE7
  6536                           fsr1h	equ	0xFE2
  6537                           fsr1l	equ	0xFE1
  6538                           bsr	equ	0xFE0
  6539                           indf2	equ	0xFDF
  6540                           postinc2	equ	0xFDE
  6541                           postdec2	equ	0xFDD
  6542                           fsr2h	equ	0xFDA
  6543                           fsr2l	equ	0xFD9
  6544                           status	equ	0xFD8
  6545                           
  6546 ;; *************** function _WriteTimer0 *****************
  6547 ;; Defined at:
  6548 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  timer0          2   49[COMRAM] unsigned int 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  timer           2   51[COMRAM] struct Timers
  6553 ;; Return value:  Size  Location     Type
  6554 ;;		None               void
  6555 ;; Registers used:
  6556 ;;		None
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6562 ;;      Params:         2       0       0       0       0
  6563 ;;      Locals:         2       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0
  6565 ;;      Totals:         4       0       0       0       0
  6566 ;;Total ram usage:        4 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_timer0_int_handler
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text39
  6576  002682                     __ptext39:
  6577                           	opt stack 0
  6578  002682                     _WriteTimer0:
  6579                           	opt stack 17
  6580                           
  6581                           ;incstack = 0
  6582  002682  C032  F034         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6583  002686  C033  F035         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6584  00268A  C035  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6585  00268E  C034  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6586  002692  0012               	return	
  6587  002694                     __end_of_WriteTimer0:
  6588                           	opt stack 0
  6589                           pclatu	equ	0xFFB
  6590                           pclath	equ	0xFFA
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           prodh	equ	0xFF4
  6596                           prodl	equ	0xFF3
  6597                           intcon	equ	0xFF2
  6598                           postinc0	equ	0xFEE
  6599                           fsr0h	equ	0xFEA
  6600                           fsr0l	equ	0xFE9
  6601                           wreg	equ	0xFE8
  6602                           indf1	equ	0xFE7
  6603                           fsr1h	equ	0xFE2
  6604                           fsr1l	equ	0xFE1
  6605                           bsr	equ	0xFE0
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _FromMainHigh_recvmsg *****************
  6614 ;; Defined at:
  6615 ;;		line 183 in file "source/messages.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  maxlength       1    wreg     unsigned char 
  6618 ;;  msgtype         2   12[BANK0 ] PTR unsigned char 
  6619 ;;		 -> timer0_int_handler@msgtype(2), 
  6620 ;;  data            2   14[BANK0 ] PTR void 
  6621 ;;		 -> timer0_int_handler@val(2), 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  maxlength       1   61[COMRAM] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      char 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6633 ;;      Params:         0       4       0       0       0
  6634 ;;      Locals:         1       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0
  6636 ;;      Totals:         1       4       0       0       0
  6637 ;;Total ram usage:        5 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    2
  6640 ;; This function calls:
  6641 ;;		i2_recv_msg
  6642 ;; This function is called by:
  6643 ;;		_timer0_int_handler
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text40
  6648  002388                     __ptext40:
  6649                           	opt stack 0
  6650  002388                     _FromMainHigh_recvmsg:
  6651                           	opt stack 15
  6652                           
  6653                           ;incstack = 0
  6654                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6655  002388  CFE8 F03E          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6656                           
  6657                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6658  00238C  0103               	movlb	3	; () banked
  6659  00238E  0E03               	movlw	high _FromMainHigh_MQ
  6660  002390  0100               	movlb	0	; () banked
  6661  002392  0100               	movlb	0	; () banked
  6662  002394  6F81               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6663  002396  0103               	movlb	3	; () banked
  6664  002398  0E00               	movlw	low _FromMainHigh_MQ
  6665  00239A  0100               	movlb	0	; () banked
  6666  00239C  0100               	movlb	0	; () banked
  6667  00239E  6F80               	movwf	i2recv_msg@qptr& (0+255),b
  6668  0023A0  C03E  F082         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6669  0023A4  0100               	movlb	0	; () banked
  6670  0023A6  0100               	movlb	0	; () banked
  6671  0023A8  C08D  F084         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6672  0023AC  0100               	movlb	0	; () banked
  6673  0023AE  0100               	movlb	0	; () banked
  6674  0023B0  C08C  F083         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6675  0023B4  0100               	movlb	0	; () banked
  6676  0023B6  0100               	movlb	0	; () banked
  6677  0023B8  C08F  F086         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6678  0023BC  0100               	movlb	0	; () banked
  6679  0023BE  0100               	movlb	0	; () banked
  6680  0023C0  C08E  F085         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6681  0023C4  ECEE  F00A         	call	i2_recv_msg	;wreg free
  6682  0023C8  0012               	return	
  6683  0023CA                     __end_of_FromMainHigh_recvmsg:
  6684                           	opt stack 0
  6685                           pclatu	equ	0xFFB
  6686                           pclath	equ	0xFFA
  6687                           tblptru	equ	0xFF8
  6688                           tblptrh	equ	0xFF7
  6689                           tblptrl	equ	0xFF6
  6690                           tablat	equ	0xFF5
  6691                           prodh	equ	0xFF4
  6692                           prodl	equ	0xFF3
  6693                           intcon	equ	0xFF2
  6694                           postinc0	equ	0xFEE
  6695                           fsr0h	equ	0xFEA
  6696                           fsr0l	equ	0xFE9
  6697                           wreg	equ	0xFE8
  6698                           indf1	equ	0xFE7
  6699                           fsr1h	equ	0xFE2
  6700                           fsr1l	equ	0xFE1
  6701                           bsr	equ	0xFE0
  6702                           indf2	equ	0xFDF
  6703                           postinc2	equ	0xFDE
  6704                           postdec2	equ	0xFDD
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709 ;; *************** function i2_recv_msg *****************
  6710 ;; Defined at:
  6711 ;;		line 63 in file "source/messages.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  6714 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6715 ;;  maxlength       1    2[BANK0 ] unsigned char 
  6716 ;;  msgtype         2    3[BANK0 ] PTR unsigned char 
  6717 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6718 ;;  data            2    5[BANK0 ] PTR void 
  6719 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
  6722 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6723 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6724 ;;  recv_msg        2    8[BANK0 ] unsigned int 
  6725 ;;  recv_msg        1    7[BANK0 ] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      char 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6735 ;;      Params:         0       7       0       0       0
  6736 ;;      Locals:         0       5       0       0       0
  6737 ;;      Temps:          2       0       0       0       0
  6738 ;;      Totals:         2      12       0       0       0
  6739 ;;Total ram usage:       14 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    1
  6742 ;; This function calls:
  6743 ;;		i2_memcpy
  6744 ;; This function is called by:
  6745 ;;		_FromMainHigh_recvmsg
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text41
  6750  0015DC                     __ptext41:
  6751                           	opt stack 0
  6752  0015DC                     i2_recv_msg:
  6753                           	opt stack 15
  6754                           
  6755                           ;messages.c: 64: unsigned char slot;
  6756                           ;messages.c: 68: msg *qmsg;
  6757                           ;messages.c: 69: size_t tlength;
  6758                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6759                           
  6760                           ;incstack = 0
  6761  0015DC  0100               	movlb	0	; () banked
  6762  0015DE  EE20 F065          	lfsr	2,101
  6763  0015E2  0100               	movlb	0	; () banked
  6764  0015E4  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6765  0015E6  26D9               	addwf	fsr2l,f,c
  6766  0015E8  0100               	movlb	0	; () banked
  6767  0015EA  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6768  0015EC  22DA               	addwfc	fsr2h,f,c
  6769  0015EE  50DF               	movf	indf2,w,c
  6770  0015F0  0100               	movlb	0	; () banked
  6771  0015F2  0100               	movlb	0	; () banked
  6772  0015F4  6F87               	movwf	i2recv_msg@slot& (0+255),b
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6776  0015F6  0100               	movlb	0	; () banked
  6777  0015F8  0100               	movlb	0	; () banked
  6778  0015FA  5187               	movf	i2recv_msg@slot& (0+255),w,b
  6779  0015FC  0D19               	mullw	25
  6780  0015FE  50F3               	movf	prodl,w,c
  6781  001600  0100               	movlb	0	; () banked
  6782  001602  0100               	movlb	0	; () banked
  6783  001604  2580               	addwf	i2recv_msg@qptr& (0+255),w,b
  6784  001606  0100               	movlb	0	; () banked
  6785  001608  0100               	movlb	0	; () banked
  6786  00160A  6F8A               	movwf	i2recv_msg@qmsg& (0+255),b
  6787  00160C  50F4               	movf	prodh,w,c
  6788  00160E  0100               	movlb	0	; () banked
  6789  001610  0100               	movlb	0	; () banked
  6790  001612  2181               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6791  001614  0100               	movlb	0	; () banked
  6792  001616  6F8B               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;messages.c: 74: if (qmsg->full == 1) {
  6796  001618  0E01               	movlw	1
  6797  00161A  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6798  00161E  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6799  001622  62DF               	cpfseq	indf2,c
  6800  001624  D06C               	goto	i2l4084
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6804  001626  0100               	movlb	0	; () banked
  6805  001628  EE20 F001          	lfsr	2,1
  6806  00162C  0100               	movlb	0	; () banked
  6807  00162E  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6808  001630  26D9               	addwf	fsr2l,f,c
  6809  001632  0100               	movlb	0	; () banked
  6810  001634  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6811  001636  22DA               	addwfc	fsr2h,f,c
  6812  001638  50DF               	movf	indf2,w,c
  6813  00163A  0100               	movlb	0	; () banked
  6814  00163C  0100               	movlb	0	; () banked
  6815  00163E  5D82               	subwf	i2recv_msg@maxlength& (0+255),w,b
  6816  001640  B0D8               	btfsc	status,0,c
  6817  001642  D002               	goto	i2l4068
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;messages.c: 77: return (-3);
  6821  001644  0EFD               	movlw	253
  6822  001646  0012               	return	
  6823  001648                     i2l4068:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;messages.c: 78: }
  6827                           ;messages.c: 80: tlength = qmsg->length;
  6828  001648  0100               	movlb	0	; () banked
  6829  00164A  EE20 F001          	lfsr	2,1
  6830  00164E  0100               	movlb	0	; () banked
  6831  001650  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6832  001652  26D9               	addwf	fsr2l,f,c
  6833  001654  0100               	movlb	0	; () banked
  6834  001656  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6835  001658  22DA               	addwfc	fsr2h,f,c
  6836  00165A  50DF               	movf	indf2,w,c
  6837  00165C  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6838  00165E  503C               	movf	??i2_recv_msg,w,c
  6839  001660  0100               	movlb	0	; () banked
  6840  001662  0100               	movlb	0	; () banked
  6841  001664  6F88               	movwf	i2recv_msg@tlength& (0+255),b
  6842  001666  0100               	movlb	0	; () banked
  6843  001668  6B89               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6847  00166A  0100               	movlb	0	; () banked
  6848  00166C  C086  F033         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6849  001670  0100               	movlb	0	; () banked
  6850  001672  C085  F032         	movff	i2recv_msg@data,i2memcpy@d1
  6851  001676  0E03               	movlw	3
  6852  001678  0100               	movlb	0	; () banked
  6853  00167A  0100               	movlb	0	; () banked
  6854  00167C  258A               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6855  00167E  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6856  001680  0E00               	movlw	0
  6857  001682  0100               	movlb	0	; () banked
  6858  001684  0100               	movlb	0	; () banked
  6859  001686  218B               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6860  001688  6E3D               	movwf	(??i2_recv_msg+1)& (0+255),c
  6861  00168A  C03C  F034         	movff	??i2_recv_msg,i2memcpy@s1
  6862  00168E  C03D  F035         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6863  001692  C088  F036         	movff	i2recv_msg@tlength,i2memcpy@n
  6864  001696  C089  F037         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6865  00169A  EC05  F012         	call	i2_memcpy	;wreg free
  6866                           
  6867                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6868  00169E  0100               	movlb	0	; () banked
  6869  0016A0  EE20 F065          	lfsr	2,101
  6870  0016A4  0100               	movlb	0	; () banked
  6871  0016A6  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6872  0016A8  26D9               	addwf	fsr2l,f,c
  6873  0016AA  0100               	movlb	0	; () banked
  6874  0016AC  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6875  0016AE  22DA               	addwfc	fsr2h,f,c
  6876  0016B0  0100               	movlb	0	; () banked
  6877  0016B2  EE10 F065          	lfsr	1,101
  6878  0016B6  0100               	movlb	0	; () banked
  6879  0016B8  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6880  0016BA  26E1               	addwf	fsr1l,f,c
  6881  0016BC  0100               	movlb	0	; () banked
  6882  0016BE  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6883  0016C0  22E2               	addwfc	fsr1h,f,c
  6884  0016C2  50E7               	movf	indf1,w,c
  6885  0016C4  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6886  0016C6  283C               	incf	??i2_recv_msg,w,c
  6887  0016C8  0B03               	andlw	3
  6888  0016CA  6EDF               	movwf	indf2,c
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6892  0016CC  0100               	movlb	0	; () banked
  6893  0016CE  EE20 F002          	lfsr	2,2
  6894  0016D2  0100               	movlb	0	; () banked
  6895  0016D4  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6896  0016D6  26D9               	addwf	fsr2l,f,c
  6897  0016D8  0100               	movlb	0	; () banked
  6898  0016DA  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6899  0016DC  22DA               	addwfc	fsr2h,f,c
  6900  0016DE  C083  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6901  0016E2  C084  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6902  0016E6  CFDF FFE7          	movff	indf2,indf1
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;messages.c: 91: qmsg->full = 0;
  6906  0016EA  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6907  0016EE  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6908  0016F2  0E00               	movlw	0
  6909  0016F4  6EDF               	movwf	indf2,c
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;messages.c: 92: return (tlength);
  6913  0016F6  0100               	movlb	0	; () banked
  6914  0016F8  0100               	movlb	0	; () banked
  6915  0016FA  5188               	movf	i2recv_msg@tlength& (0+255),w,b
  6916  0016FC  0012               	return	
  6917  0016FE                     i2l4084:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;messages.c: 94: return (-4);
  6921  0016FE  0EFC               	movlw	252
  6922  001700  0012               	return	
  6923  001702                     __end_ofi2_recv_msg:
  6924                           	opt stack 0
  6925                           pclatu	equ	0xFFB
  6926                           pclath	equ	0xFFA
  6927                           tblptru	equ	0xFF8
  6928                           tblptrh	equ	0xFF7
  6929                           tblptrl	equ	0xFF6
  6930                           tablat	equ	0xFF5
  6931                           prodh	equ	0xFF4
  6932                           prodl	equ	0xFF3
  6933                           intcon	equ	0xFF2
  6934                           postinc0	equ	0xFEE
  6935                           fsr0h	equ	0xFEA
  6936                           fsr0l	equ	0xFE9
  6937                           wreg	equ	0xFE8
  6938                           indf1	equ	0xFE7
  6939                           fsr1h	equ	0xFE2
  6940                           fsr1l	equ	0xFE1
  6941                           bsr	equ	0xFE0
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _i2c_int_handler *****************
  6950 ;; Defined at:
  6951 ;;		line 186 in file "source/my_i2c.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;		None               void
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6965 ;;      Params:         0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0
  6968 ;;      Totals:         0       0       0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    4
  6972 ;; This function calls:
  6973 ;;		_i2c_master_int_handler
  6974 ;;		_i2c_slave_int_handler
  6975 ;; This function is called by:
  6976 ;;		_InterruptHandlerHigh
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text42
  6981  0025BE                     __ptext42:
  6982                           	opt stack 0
  6983  0025BE                     _i2c_int_handler:
  6984                           	opt stack 14
  6985                           
  6986                           ;my_i2c.c: 187: switch (i2c_mode){
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;incstack = 0
  6990  0025BE  D006               	goto	i2l3514
  6991  0025C0                     i2l3508:
  6992                           
  6993                           ;my_i2c.c: 189: i2c_master_int_handler();
  6994  0025C0  EC7E  F003         	call	_i2c_master_int_handler	;wreg free
  6995                           
  6996                           ;my_i2c.c: 190: break;
  6997  0025C4  0012               	return	
  6998  0025C6                     i2l3510:
  6999                           
  7000                           ;my_i2c.c: 193: i2c_slave_int_handler();
  7001  0025C6  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  7002                           
  7003                           ;my_i2c.c: 194: break;
  7004  0025CA  0012               	return	
  7005  0025CC                     i2l3514:
  7006  0025CC  0100               	movlb	0	; () banked
  7007  0025CE  0100               	movlb	0	; () banked
  7008  0025D0  51CE               	movf	_i2c_mode& (0+255),w,b
  7009                           
  7010                           ; Switch size 1, requested type "space"
  7011                           ; Number of cases is 2, Range of values is 1 to 2
  7012                           ; switch strategies available:
  7013                           ; Name         Instructions Cycles
  7014                           ; simple_byte            7     4 (average)
  7015                           ;	Chosen strategy is simple_byte
  7016  0025D2  0A01               	xorlw	1	; case 1
  7017  0025D4  B4D8               	btfsc	status,2,c
  7018  0025D6  D7F4               	goto	i2l3508
  7019  0025D8  0A03               	xorlw	3	; case 2
  7020  0025DA  A4D8               	btfss	status,2,c
  7021  0025DC  0012               	return	
  7022  0025DE  D7F3               	goto	i2l3510
  7023  0025E0                     __end_of_i2c_int_handler:
  7024                           	opt stack 0
  7025                           pclatu	equ	0xFFB
  7026                           pclath	equ	0xFFA
  7027                           tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           intcon	equ	0xFF2
  7034                           postinc0	equ	0xFEE
  7035                           fsr0h	equ	0xFEA
  7036                           fsr0l	equ	0xFE9
  7037                           wreg	equ	0xFE8
  7038                           indf1	equ	0xFE7
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           bsr	equ	0xFE0
  7042                           indf2	equ	0xFDF
  7043                           postinc2	equ	0xFDE
  7044                           postdec2	equ	0xFDD
  7045                           fsr2h	equ	0xFDA
  7046                           fsr2l	equ	0xFD9
  7047                           status	equ	0xFD8
  7048                           
  7049 ;; *************** function _i2c_slave_int_handler *****************
  7050 ;; Defined at:
  7051 ;;		line 203 in file "source/my_i2c.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  error_buf       3   16[BANK0 ] unsigned char [3]
  7056 ;;  data_read       1   24[BANK0 ] unsigned char 
  7057 ;;  msg_ready       1   23[BANK0 ] unsigned char 
  7058 ;;  msg_to_send     1   22[BANK0 ] unsigned char 
  7059 ;;  i2c_data        1   21[BANK0 ] unsigned char 
  7060 ;;  overrun_erro    1   20[BANK0 ] unsigned char 
  7061 ;;  data_written    1   19[BANK0 ] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;		None               void
  7064 ;; Registers used:
  7065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7071 ;;      Params:         0       0       0       0       0
  7072 ;;      Locals:         0       9       0       0       0
  7073 ;;      Temps:          0       2       0       0       0
  7074 ;;      Totals:         0      11       0       0       0
  7075 ;;Total ram usage:       11 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    3
  7078 ;; This function calls:
  7079 ;;		_handle_start
  7080 ;;		i2_ToMainHigh_sendmsg
  7081 ;;		i2_start_i2c_slave_reply
  7082 ;; This function is called by:
  7083 ;;		_i2c_int_handler
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text43
  7088  0000BA                     __ptext43:
  7089                           	opt stack 0
  7090  0000BA                     _i2c_slave_int_handler:
  7091                           	opt stack 14
  7092                           
  7093                           ;my_i2c.c: 204: unsigned char i2c_data;
  7094                           ;my_i2c.c: 205: unsigned char data_read = 0;
  7095                           
  7096                           ;incstack = 0
  7097  0000BA  0100               	movlb	0	; () banked
  7098  0000BC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7099  0000BE  0E00               	movlw	0
  7100  0000C0  0100               	movlb	0	; () banked
  7101  0000C2  0100               	movlb	0	; () banked
  7102  0000C4  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7103  0000C6  0100               	movlb	0	; () banked
  7104  0000C8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7105                           
  7106                           ;my_i2c.c: 206: unsigned char data_written = 0;
  7107  0000CA  0100               	movlb	0	; () banked
  7108  0000CC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7109  0000CE  0E00               	movlw	0
  7110  0000D0  0100               	movlb	0	; () banked
  7111  0000D2  0100               	movlb	0	; () banked
  7112  0000D4  6F93               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7113  0000D6  0100               	movlb	0	; () banked
  7114  0000D8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7115                           
  7116                           ;my_i2c.c: 207: unsigned char msg_ready = 0;
  7117  0000DA  0100               	movlb	0	; () banked
  7118  0000DC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7119  0000DE  0E00               	movlw	0
  7120  0000E0  0100               	movlb	0	; () banked
  7121  0000E2  0100               	movlb	0	; () banked
  7122  0000E4  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7123  0000E6  0100               	movlb	0	; () banked
  7124  0000E8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7125                           
  7126                           ;my_i2c.c: 208: unsigned char msg_to_send = 0;
  7127  0000EA  0100               	movlb	0	; () banked
  7128  0000EC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7129  0000EE  0E00               	movlw	0
  7130  0000F0  0100               	movlb	0	; () banked
  7131  0000F2  0100               	movlb	0	; () banked
  7132  0000F4  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7133  0000F6  0100               	movlb	0	; () banked
  7134  0000F8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7135                           
  7136                           ;my_i2c.c: 209: unsigned char overrun_error = 0;
  7137  0000FA  0100               	movlb	0	; () banked
  7138  0000FC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7139  0000FE  0E00               	movlw	0
  7140  000100  0100               	movlb	0	; () banked
  7141  000102  0100               	movlb	0	; () banked
  7142  000104  6F94               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7143  000106  0100               	movlb	0	; () banked
  7144  000108  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;my_i2c.c: 210: unsigned char error_buf[3];
  7148                           ;my_i2c.c: 213: if (SSPCON1bits.SSPOV == 1) {
  7149  00010A  ACC6               	btfss	4038,6,c	;volatile
  7150  00010C  D029               	goto	i2l3898
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;my_i2c.c: 214: SSPCON1bits.SSPOV = 0;
  7154  00010E  9CC6               	bcf	4038,6,c	;volatile
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;my_i2c.c: 218: ic_ptr->status = 0x5;
  7158  000110  0100               	movlb	0	; () banked
  7159  000112  EE20 F019          	lfsr	2,25
  7160  000116  0100               	movlb	0	; () banked
  7161  000118  51CC               	movf	_ic_ptr& (0+255),w,b
  7162  00011A  26D9               	addwf	fsr2l,f,c
  7163  00011C  0100               	movlb	0	; () banked
  7164  00011E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7165  000120  22DA               	addwfc	fsr2h,f,c
  7166  000122  0E05               	movlw	5
  7167  000124  6EDF               	movwf	indf2,c
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;my_i2c.c: 219: overrun_error = 1;
  7171  000126  0100               	movlb	0	; () banked
  7172  000128  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7173  00012A  0E01               	movlw	1
  7174  00012C  0100               	movlb	0	; () banked
  7175  00012E  0100               	movlb	0	; () banked
  7176  000130  6F94               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7177  000132  0100               	movlb	0	; () banked
  7178  000134  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;my_i2c.c: 220: ic_ptr->error_count++;
  7182  000136  0100               	movlb	0	; () banked
  7183  000138  EE20 F01B          	lfsr	2,27
  7184  00013C  0100               	movlb	0	; () banked
  7185  00013E  51CC               	movf	_ic_ptr& (0+255),w,b
  7186  000140  26D9               	addwf	fsr2l,f,c
  7187  000142  0100               	movlb	0	; () banked
  7188  000144  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7189  000146  22DA               	addwfc	fsr2h,f,c
  7190  000148  2ADF               	incf	indf2,f,c
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;my_i2c.c: 221: ic_ptr->error_code = 0x4;
  7194  00014A  0100               	movlb	0	; () banked
  7195  00014C  EE20 F01A          	lfsr	2,26
  7196  000150  0100               	movlb	0	; () banked
  7197  000152  51CC               	movf	_ic_ptr& (0+255),w,b
  7198  000154  26D9               	addwf	fsr2l,f,c
  7199  000156  0100               	movlb	0	; () banked
  7200  000158  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7201  00015A  22DA               	addwfc	fsr2h,f,c
  7202  00015C  0E04               	movlw	4
  7203  00015E  6EDF               	movwf	indf2,c
  7204  000160                     i2l3898:
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;my_i2c.c: 222: }
  7208                           ;my_i2c.c: 224: if (SSPSTATbits.BF == 1) {
  7209  000160  A0C7               	btfss	4039,0,c	;volatile
  7210  000162  D00A               	goto	i2l3904
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;my_i2c.c: 225: i2c_data = SSPBUF;
  7214  000164  CFC9 F095          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;my_i2c.c: 226: data_read = 1;
  7218  000168  0100               	movlb	0	; () banked
  7219  00016A  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7220  00016C  0E01               	movlw	1
  7221  00016E  0100               	movlb	0	; () banked
  7222  000170  0100               	movlb	0	; () banked
  7223  000172  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7224  000174  0100               	movlb	0	; () banked
  7225  000176  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7226  000178                     i2l3904:
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;my_i2c.c: 227: }
  7230                           ;my_i2c.c: 229: if (!overrun_error) {
  7231  000178  0100               	movlb	0	; () banked
  7232  00017A  0100               	movlb	0	; () banked
  7233  00017C  6794               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7234  00017E  D1CE               	goto	i2l304
  7235  000180  D1B7               	goto	i2l3992
  7236  000182                     i2l306:
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;my_i2c.c: 232: {
  7240                           ;my_i2c.c: 234: if (SSPSTATbits.S == 1) {
  7241  000182  A6C7               	btfss	4039,3,c	;volatile
  7242  000184  D1CB               	goto	i2l304
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;my_i2c.c: 235: handle_start(data_read);
  7246  000186  0100               	movlb	0	; () banked
  7247  000188  0100               	movlb	0	; () banked
  7248  00018A  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7249  00018C  ECD1  F00D         	call	_handle_start
  7250                           
  7251                           ;my_i2c.c: 237: if (ic_ptr->status == 0x8) {
  7252  000190  0100               	movlb	0	; () banked
  7253  000192  EE20 F019          	lfsr	2,25
  7254  000196  0100               	movlb	0	; () banked
  7255  000198  51CC               	movf	_ic_ptr& (0+255),w,b
  7256  00019A  26D9               	addwf	fsr2l,f,c
  7257  00019C  0100               	movlb	0	; () banked
  7258  00019E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7259  0001A0  22DA               	addwfc	fsr2h,f,c
  7260  0001A2  0E08               	movlw	8
  7261  0001A4  62DF               	cpfseq	indf2,c
  7262  0001A6  D1BA               	goto	i2l304
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;my_i2c.c: 238: data_read = 0;
  7266  0001A8  0100               	movlb	0	; () banked
  7267  0001AA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7268  0001AC  0E00               	movlw	0
  7269  0001AE  0100               	movlb	0	; () banked
  7270  0001B0  0100               	movlb	0	; () banked
  7271  0001B2  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7272  0001B4  0100               	movlb	0	; () banked
  7273  0001B6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7274                           
  7275                           ;my_i2c.c: 239: msg_to_send = 1;
  7276  0001B8  0100               	movlb	0	; () banked
  7277  0001BA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7278  0001BC  0E01               	movlw	1
  7279  0001BE  0100               	movlb	0	; () banked
  7280  0001C0  0100               	movlb	0	; () banked
  7281  0001C2  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7282  0001C4  D187               	goto	L9
  7283  0001C6                     i2l310:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;my_i2c.c: 245: {
  7287                           ;my_i2c.c: 247: if (SSPSTATbits.P == 1) {
  7288  0001C6  A8C7               	btfss	4039,4,c	;volatile
  7289  0001C8  D030               	goto	i2l3924
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;my_i2c.c: 250: ic_ptr->event_count++;
  7293  0001CA  0100               	movlb	0	; () banked
  7294  0001CC  EE20 F018          	lfsr	2,24
  7295  0001D0  0100               	movlb	0	; () banked
  7296  0001D2  51CC               	movf	_ic_ptr& (0+255),w,b
  7297  0001D4  26D9               	addwf	fsr2l,f,c
  7298  0001D6  0100               	movlb	0	; () banked
  7299  0001D8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7300  0001DA  22DA               	addwfc	fsr2h,f,c
  7301  0001DC  2ADF               	incf	indf2,f,c
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;my_i2c.c: 251: if (data_read) {
  7305  0001DE  0100               	movlb	0	; () banked
  7306  0001E0  0100               	movlb	0	; () banked
  7307  0001E2  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7308  0001E4  B4D8               	btfsc	status,2,c
  7309  0001E6  D179               	goto	L11
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;my_i2c.c: 252: if (SSPSTATbits.D_A == 0) {
  7313  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  7314  0001EA  D009               	goto	i2l3922
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;my_i2c.c: 253: msg_ready = 1;
  7318  0001EC  0100               	movlb	0	; () banked
  7319  0001EE  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7320  0001F0  0E01               	movlw	1
  7321  0001F2  0100               	movlb	0	; () banked
  7322  0001F4  0100               	movlb	0	; () banked
  7323  0001F6  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7324  0001F8  0100               	movlb	0	; () banked
  7325  0001FA  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7326                           
  7327                           ;my_i2c.c: 254: } else {
  7328  0001FC  D16E               	goto	L11
  7329  0001FE                     i2l3922:
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;my_i2c.c: 255: ic_ptr->error_count++;
  7333  0001FE  0100               	movlb	0	; () banked
  7334  000200  EE20 F01B          	lfsr	2,27
  7335  000204  0100               	movlb	0	; () banked
  7336  000206  51CC               	movf	_ic_ptr& (0+255),w,b
  7337  000208  26D9               	addwf	fsr2l,f,c
  7338  00020A  0100               	movlb	0	; () banked
  7339  00020C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7340  00020E  22DA               	addwfc	fsr2h,f,c
  7341  000210  2ADF               	incf	indf2,f,c
  7342                           
  7343                           ;my_i2c.c: 256: ic_ptr->error_code = 0x6;
  7344  000212  0100               	movlb	0	; () banked
  7345  000214  EE20 F01A          	lfsr	2,26
  7346  000218  0100               	movlb	0	; () banked
  7347  00021A  51CC               	movf	_ic_ptr& (0+255),w,b
  7348  00021C  26D9               	addwf	fsr2l,f,c
  7349  00021E  0100               	movlb	0	; () banked
  7350  000220  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7351  000222  22DA               	addwfc	fsr2h,f,c
  7352  000224  0E06               	movlw	6
  7353  000226  6EDF               	movwf	indf2,c
  7354                           
  7355                           ; BSR set to: 0
  7356  000228  D158               	goto	L11
  7357  00022A                     i2l3924:
  7358                           
  7359                           ; BSR set to: 0
  7360  00022A  0100               	movlb	0	; () banked
  7361  00022C  0100               	movlb	0	; () banked
  7362  00022E  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7363  000230  B4D8               	btfsc	status,2,c
  7364  000232  D174               	goto	i2l304
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;my_i2c.c: 261: ic_ptr->event_count++;
  7368  000234  0100               	movlb	0	; () banked
  7369  000236  EE20 F018          	lfsr	2,24
  7370  00023A  0100               	movlb	0	; () banked
  7371  00023C  51CC               	movf	_ic_ptr& (0+255),w,b
  7372  00023E  26D9               	addwf	fsr2l,f,c
  7373  000240  0100               	movlb	0	; () banked
  7374  000242  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7375  000244  22DA               	addwfc	fsr2h,f,c
  7376  000246  2ADF               	incf	indf2,f,c
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 262: if (SSPSTATbits.D_A == 0) {
  7380  000248  BAC7               	btfsc	4039,5,c	;volatile
  7381  00024A  D019               	goto	i2l3940
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 263: if (SSPSTATbits.R_W == 0) {
  7385  00024C  B4C7               	btfsc	4039,2,c	;volatile
  7386  00024E  D00B               	goto	i2l3934
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;my_i2c.c: 264: ic_ptr->status = 0x7;
  7390  000250  0100               	movlb	0	; () banked
  7391  000252  EE20 F019          	lfsr	2,25
  7392  000256  0100               	movlb	0	; () banked
  7393  000258  51CC               	movf	_ic_ptr& (0+255),w,b
  7394  00025A  26D9               	addwf	fsr2l,f,c
  7395  00025C  0100               	movlb	0	; () banked
  7396  00025E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7397  000260  22DA               	addwfc	fsr2h,f,c
  7398  000262  0E07               	movlw	7
  7399  000264  D076               	goto	L8
  7400  000266                     i2l3934:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;my_i2c.c: 266: ic_ptr->status = 0x8;
  7404  000266  0100               	movlb	0	; () banked
  7405  000268  EE20 F019          	lfsr	2,25
  7406  00026C  0100               	movlb	0	; () banked
  7407  00026E  51CC               	movf	_ic_ptr& (0+255),w,b
  7408  000270  26D9               	addwf	fsr2l,f,c
  7409  000272  0100               	movlb	0	; () banked
  7410  000274  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7411  000276  22DA               	addwfc	fsr2h,f,c
  7412  000278  0E08               	movlw	8
  7413  00027A  6EDF               	movwf	indf2,c
  7414  00027C  D11D               	goto	L12
  7415  00027E                     i2l3940:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;my_i2c.c: 272: ic_ptr->error_count++;
  7419  00027E  0100               	movlb	0	; () banked
  7420  000280  EE20 F01B          	lfsr	2,27
  7421  000284  0100               	movlb	0	; () banked
  7422  000286  51CC               	movf	_ic_ptr& (0+255),w,b
  7423  000288  26D9               	addwf	fsr2l,f,c
  7424  00028A  0100               	movlb	0	; () banked
  7425  00028C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7426  00028E  22DA               	addwfc	fsr2h,f,c
  7427  000290  2ADF               	incf	indf2,f,c
  7428                           
  7429                           ;my_i2c.c: 273: ic_ptr->status = 0x5;
  7430  000292  0100               	movlb	0	; () banked
  7431  000294  EE20 F019          	lfsr	2,25
  7432  000298  0100               	movlb	0	; () banked
  7433  00029A  51CC               	movf	_ic_ptr& (0+255),w,b
  7434  00029C  26D9               	addwf	fsr2l,f,c
  7435  00029E  0100               	movlb	0	; () banked
  7436  0002A0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7437  0002A2  22DA               	addwfc	fsr2h,f,c
  7438  0002A4  0E05               	movlw	5
  7439  0002A6  6EDF               	movwf	indf2,c
  7440                           
  7441                           ;my_i2c.c: 274: ic_ptr->error_code = 0x6;
  7442  0002A8  0100               	movlb	0	; () banked
  7443  0002AA  EE20 F01A          	lfsr	2,26
  7444  0002AE  0100               	movlb	0	; () banked
  7445  0002B0  51CC               	movf	_ic_ptr& (0+255),w,b
  7446  0002B2  26D9               	addwf	fsr2l,f,c
  7447  0002B4  0100               	movlb	0	; () banked
  7448  0002B6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7449  0002B8  22DA               	addwfc	fsr2h,f,c
  7450  0002BA  0E06               	movlw	6
  7451  0002BC  D04A               	goto	L8
  7452  0002BE                     i2l3942:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;my_i2c.c: 280: {
  7456                           ;my_i2c.c: 281: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7457  0002BE  0100               	movlb	0	; () banked
  7458  0002C0  EE20 F033          	lfsr	2,51
  7459  0002C4  0100               	movlb	0	; () banked
  7460  0002C6  51CC               	movf	_ic_ptr& (0+255),w,b
  7461  0002C8  26D9               	addwf	fsr2l,f,c
  7462  0002CA  0100               	movlb	0	; () banked
  7463  0002CC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7464  0002CE  22DA               	addwfc	fsr2h,f,c
  7465  0002D0  50DF               	movf	indf2,w,c
  7466  0002D2  0100               	movlb	0	; () banked
  7467  0002D4  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7468  0002D6  0100               	movlb	0	; () banked
  7469  0002D8  EE20 F032          	lfsr	2,50
  7470  0002DC  0100               	movlb	0	; () banked
  7471  0002DE  51CC               	movf	_ic_ptr& (0+255),w,b
  7472  0002E0  26D9               	addwf	fsr2l,f,c
  7473  0002E2  0100               	movlb	0	; () banked
  7474  0002E4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  0002E6  22DA               	addwfc	fsr2h,f,c
  7476  0002E8  50DF               	movf	indf2,w,c
  7477  0002EA  0100               	movlb	0	; () banked
  7478  0002EC  5D8E               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7479  0002EE  B0D8               	btfsc	status,0,c
  7480  0002F0  D0F4               	goto	L11
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 282: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7484  0002F2  0100               	movlb	0	; () banked
  7485  0002F4  EE20 F033          	lfsr	2,51
  7486  0002F8  0100               	movlb	0	; () banked
  7487  0002FA  51CC               	movf	_ic_ptr& (0+255),w,b
  7488  0002FC  26D9               	addwf	fsr2l,f,c
  7489  0002FE  0100               	movlb	0	; () banked
  7490  000300  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  000302  22DA               	addwfc	fsr2h,f,c
  7492  000304  50DF               	movf	indf2,w,c
  7493  000306  0100               	movlb	0	; () banked
  7494  000308  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7495  00030A  0100               	movlb	0	; () banked
  7496  00030C  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7497  00030E  0D01               	mullw	1
  7498  000310  0E1C               	movlw	28
  7499  000312  26F3               	addwf	prodl,f,c
  7500  000314  0E00               	movlw	0
  7501  000316  22F4               	addwfc	prodh,f,c
  7502  000318  50F3               	movf	prodl,w,c
  7503  00031A  0100               	movlb	0	; () banked
  7504  00031C  0100               	movlb	0	; () banked
  7505  00031E  25CC               	addwf	_ic_ptr& (0+255),w,b
  7506  000320  6ED9               	movwf	fsr2l,c
  7507  000322  50F4               	movf	prodh,w,c
  7508  000324  0100               	movlb	0	; () banked
  7509  000326  0100               	movlb	0	; () banked
  7510  000328  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7511  00032A  6EDA               	movwf	fsr2h,c
  7512  00032C  50DF               	movf	indf2,w,c
  7513  00032E  6EC9               	movwf	4041,c	;volatile
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 283: ic_ptr->outbufind++;
  7517  000330  0100               	movlb	0	; () banked
  7518  000332  EE20 F033          	lfsr	2,51
  7519  000336  0100               	movlb	0	; () banked
  7520  000338  51CC               	movf	_ic_ptr& (0+255),w,b
  7521  00033A  26D9               	addwf	fsr2l,f,c
  7522  00033C  0100               	movlb	0	; () banked
  7523  00033E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7524  000340  22DA               	addwfc	fsr2h,f,c
  7525  000342  2ADF               	incf	indf2,f,c
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;my_i2c.c: 284: data_written = 1;
  7529  000344  0100               	movlb	0	; () banked
  7530  000346  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7531  000348  0E01               	movlw	1
  7532  00034A  0100               	movlb	0	; () banked
  7533  00034C  0100               	movlb	0	; () banked
  7534  00034E  6F93               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7535  000350  D0C1               	goto	L9
  7536  000352                     L8:
  7537  000352  6EDF               	movwf	indf2,c
  7538  000354  D0E3               	goto	i2l304
  7539  000356                     i2l324:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;my_i2c.c: 292: {
  7543                           ;my_i2c.c: 294: if (SSPSTATbits.P == 1) {
  7544  000356  A8C7               	btfss	4039,4,c	;volatile
  7545  000358  D062               	goto	i2l3970
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;my_i2c.c: 296: ic_ptr->event_count++;
  7549  00035A  0100               	movlb	0	; () banked
  7550  00035C  EE20 F018          	lfsr	2,24
  7551  000360  0100               	movlb	0	; () banked
  7552  000362  51CC               	movf	_ic_ptr& (0+255),w,b
  7553  000364  26D9               	addwf	fsr2l,f,c
  7554  000366  0100               	movlb	0	; () banked
  7555  000368  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7556  00036A  22DA               	addwfc	fsr2h,f,c
  7557  00036C  2ADF               	incf	indf2,f,c
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;my_i2c.c: 297: if (data_read) {
  7561  00036E  0100               	movlb	0	; () banked
  7562  000370  0100               	movlb	0	; () banked
  7563  000372  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7564  000374  B4D8               	btfsc	status,2,c
  7565  000376  D04A               	goto	i2l3966
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;my_i2c.c: 298: if (SSPSTATbits.D_A == 1) {
  7569  000378  AAC7               	btfss	4039,5,c	;volatile
  7570  00037A  D027               	goto	i2l3964
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;my_i2c.c: 299: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7574  00037C  0100               	movlb	0	; () banked
  7575  00037E  EE20 F016          	lfsr	2,22
  7576  000382  0100               	movlb	0	; () banked
  7577  000384  51CC               	movf	_ic_ptr& (0+255),w,b
  7578  000386  26D9               	addwf	fsr2l,f,c
  7579  000388  0100               	movlb	0	; () banked
  7580  00038A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7581  00038C  22DA               	addwfc	fsr2h,f,c
  7582  00038E  50DF               	movf	indf2,w,c
  7583  000390  0100               	movlb	0	; () banked
  7584  000392  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7585  000394  0100               	movlb	0	; () banked
  7586  000396  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7587  000398  0D01               	mullw	1
  7588  00039A  50F3               	movf	prodl,w,c
  7589  00039C  0100               	movlb	0	; () banked
  7590  00039E  0100               	movlb	0	; () banked
  7591  0003A0  25CC               	addwf	_ic_ptr& (0+255),w,b
  7592  0003A2  6ED9               	movwf	fsr2l,c
  7593  0003A4  50F4               	movf	prodh,w,c
  7594  0003A6  0100               	movlb	0	; () banked
  7595  0003A8  0100               	movlb	0	; () banked
  7596  0003AA  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7597  0003AC  6EDA               	movwf	fsr2h,c
  7598  0003AE  0100               	movlb	0	; () banked
  7599  0003B0  C095  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;my_i2c.c: 300: ic_ptr->buflen++;
  7603  0003B4  0100               	movlb	0	; () banked
  7604  0003B6  EE20 F016          	lfsr	2,22
  7605  0003BA  0100               	movlb	0	; () banked
  7606  0003BC  51CC               	movf	_ic_ptr& (0+255),w,b
  7607  0003BE  26D9               	addwf	fsr2l,f,c
  7608  0003C0  0100               	movlb	0	; () banked
  7609  0003C2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7610  0003C4  22DA               	addwfc	fsr2h,f,c
  7611  0003C6  2ADF               	incf	indf2,f,c
  7612  0003C8  D021               	goto	i2l3966
  7613  0003CA                     i2l3964:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;my_i2c.c: 303: ic_ptr->error_count++;
  7617  0003CA  0100               	movlb	0	; () banked
  7618  0003CC  EE20 F01B          	lfsr	2,27
  7619  0003D0  0100               	movlb	0	; () banked
  7620  0003D2  51CC               	movf	_ic_ptr& (0+255),w,b
  7621  0003D4  26D9               	addwf	fsr2l,f,c
  7622  0003D6  0100               	movlb	0	; () banked
  7623  0003D8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  0003DA  22DA               	addwfc	fsr2h,f,c
  7625  0003DC  2ADF               	incf	indf2,f,c
  7626                           
  7627                           ;my_i2c.c: 304: ic_ptr->error_code = 0x6;
  7628  0003DE  0100               	movlb	0	; () banked
  7629  0003E0  EE20 F01A          	lfsr	2,26
  7630  0003E4  0100               	movlb	0	; () banked
  7631  0003E6  51CC               	movf	_ic_ptr& (0+255),w,b
  7632  0003E8  26D9               	addwf	fsr2l,f,c
  7633  0003EA  0100               	movlb	0	; () banked
  7634  0003EC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7635  0003EE  22DA               	addwfc	fsr2h,f,c
  7636  0003F0  0E06               	movlw	6
  7637  0003F2  6EDF               	movwf	indf2,c
  7638                           
  7639                           ;my_i2c.c: 305: ic_ptr->status = 0x5;
  7640  0003F4  0100               	movlb	0	; () banked
  7641  0003F6  EE20 F019          	lfsr	2,25
  7642  0003FA  0100               	movlb	0	; () banked
  7643  0003FC  51CC               	movf	_ic_ptr& (0+255),w,b
  7644  0003FE  26D9               	addwf	fsr2l,f,c
  7645  000400  0100               	movlb	0	; () banked
  7646  000402  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7647  000404  22DA               	addwfc	fsr2h,f,c
  7648  000406  0E05               	movlw	5
  7649  000408  6EDF               	movwf	indf2,c
  7650  00040A  D067               	goto	L11
  7651  00040C                     i2l3966:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;my_i2c.c: 308: msg_ready = 1;
  7655  00040C  0100               	movlb	0	; () banked
  7656  00040E  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7657  000410  0E01               	movlw	1
  7658  000412  0100               	movlb	0	; () banked
  7659  000414  0100               	movlb	0	; () banked
  7660  000416  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7661  000418  0100               	movlb	0	; () banked
  7662  00041A  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7663                           
  7664                           ; BSR set to: 0
  7665  00041C  D05E               	goto	L11
  7666  00041E                     i2l3970:
  7667                           
  7668                           ; BSR set to: 0
  7669  00041E  0100               	movlb	0	; () banked
  7670  000420  0100               	movlb	0	; () banked
  7671  000422  5198               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7672  000424  B4D8               	btfsc	status,2,c
  7673  000426  D07A               	goto	i2l304
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;my_i2c.c: 312: ic_ptr->event_count++;
  7677  000428  0100               	movlb	0	; () banked
  7678  00042A  EE20 F018          	lfsr	2,24
  7679  00042E  0100               	movlb	0	; () banked
  7680  000430  51CC               	movf	_ic_ptr& (0+255),w,b
  7681  000432  26D9               	addwf	fsr2l,f,c
  7682  000434  0100               	movlb	0	; () banked
  7683  000436  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7684  000438  22DA               	addwfc	fsr2h,f,c
  7685  00043A  2ADF               	incf	indf2,f,c
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;my_i2c.c: 313: if (SSPSTATbits.D_A == 1) {
  7689  00043C  AAC7               	btfss	4039,5,c	;volatile
  7690  00043E  D027               	goto	i2l332
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;my_i2c.c: 314: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7694  000440  0100               	movlb	0	; () banked
  7695  000442  EE20 F016          	lfsr	2,22
  7696  000446  0100               	movlb	0	; () banked
  7697  000448  51CC               	movf	_ic_ptr& (0+255),w,b
  7698  00044A  26D9               	addwf	fsr2l,f,c
  7699  00044C  0100               	movlb	0	; () banked
  7700  00044E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7701  000450  22DA               	addwfc	fsr2h,f,c
  7702  000452  50DF               	movf	indf2,w,c
  7703  000454  0100               	movlb	0	; () banked
  7704  000456  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7705  000458  0100               	movlb	0	; () banked
  7706  00045A  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7707  00045C  0D01               	mullw	1
  7708  00045E  50F3               	movf	prodl,w,c
  7709  000460  0100               	movlb	0	; () banked
  7710  000462  0100               	movlb	0	; () banked
  7711  000464  25CC               	addwf	_ic_ptr& (0+255),w,b
  7712  000466  6ED9               	movwf	fsr2l,c
  7713  000468  50F4               	movf	prodh,w,c
  7714  00046A  0100               	movlb	0	; () banked
  7715  00046C  0100               	movlb	0	; () banked
  7716  00046E  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7717  000470  6EDA               	movwf	fsr2h,c
  7718  000472  0100               	movlb	0	; () banked
  7719  000474  C095  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;my_i2c.c: 315: ic_ptr->buflen++;
  7723  000478  0100               	movlb	0	; () banked
  7724  00047A  EE20 F016          	lfsr	2,22
  7725  00047E  0100               	movlb	0	; () banked
  7726  000480  51CC               	movf	_ic_ptr& (0+255),w,b
  7727  000482  26D9               	addwf	fsr2l,f,c
  7728  000484  0100               	movlb	0	; () banked
  7729  000486  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7730  000488  22DA               	addwfc	fsr2h,f,c
  7731  00048A  2ADF               	incf	indf2,f,c
  7732                           
  7733                           ;my_i2c.c: 316: } else {
  7734  00048C  D047               	goto	i2l304
  7735  00048E                     i2l332:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;my_i2c.c: 317: if (SSPSTATbits.R_W == 1) {
  7739  00048E  A4C7               	btfss	4039,2,c	;volatile
  7740  000490  D6B6               	goto	i2l3922
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;my_i2c.c: 318: ic_ptr->status = 0x8;
  7744  000492  0100               	movlb	0	; () banked
  7745  000494  EE20 F019          	lfsr	2,25
  7746  000498  0100               	movlb	0	; () banked
  7747  00049A  51CC               	movf	_ic_ptr& (0+255),w,b
  7748  00049C  26D9               	addwf	fsr2l,f,c
  7749  00049E  0100               	movlb	0	; () banked
  7750  0004A0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  0004A2  22DA               	addwfc	fsr2h,f,c
  7752  0004A4  0E08               	movlw	8
  7753  0004A6  6EDF               	movwf	indf2,c
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;my_i2c.c: 319: msg_ready = 1;
  7757  0004A8  0100               	movlb	0	; () banked
  7758  0004AA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7759  0004AC  0E01               	movlw	1
  7760  0004AE  0100               	movlb	0	; () banked
  7761  0004B0  0100               	movlb	0	; () banked
  7762  0004B2  6F97               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7763  0004B4  0100               	movlb	0	; () banked
  7764  0004B6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7765  0004B8                     L12:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;my_i2c.c: 320: msg_to_send = 1;
  7769  0004B8  0100               	movlb	0	; () banked
  7770  0004BA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7771  0004BC  0E01               	movlw	1
  7772  0004BE  0100               	movlb	0	; () banked
  7773  0004C0  0100               	movlb	0	; () banked
  7774  0004C2  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7775  0004C4  0100               	movlb	0	; () banked
  7776  0004C6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;my_i2c.c: 322: data_read = 0;
  7780  0004C8  0100               	movlb	0	; () banked
  7781  0004CA  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7782  0004CC  0E00               	movlw	0
  7783  0004CE  0100               	movlb	0	; () banked
  7784  0004D0  0100               	movlb	0	; () banked
  7785  0004D2  6F98               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7786  0004D4                     L9:
  7787  0004D4  0100               	movlb	0	; () banked
  7788  0004D6  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7789                           
  7790                           ;my_i2c.c: 323: } else {
  7791  0004D8  D021               	goto	i2l304
  7792  0004DA                     L11:
  7793                           
  7794                           ;my_i2c.c: 326: ic_ptr->status = 0x5;
  7795  0004DA  0100               	movlb	0	; () banked
  7796  0004DC  EE20 F019          	lfsr	2,25
  7797  0004E0  0100               	movlb	0	; () banked
  7798  0004E2  51CC               	movf	_ic_ptr& (0+255),w,b
  7799  0004E4  26D9               	addwf	fsr2l,f,c
  7800  0004E6  0100               	movlb	0	; () banked
  7801  0004E8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7802  0004EA  22DA               	addwfc	fsr2h,f,c
  7803  0004EC  0E05               	movlw	5
  7804  0004EE  D731               	goto	L8
  7805  0004F0                     i2l3992:
  7806                           
  7807                           ; BSR set to: 0
  7808  0004F0  0100               	movlb	0	; () banked
  7809  0004F2  EE20 F019          	lfsr	2,25
  7810  0004F6  0100               	movlb	0	; () banked
  7811  0004F8  51CC               	movf	_ic_ptr& (0+255),w,b
  7812  0004FA  26D9               	addwf	fsr2l,f,c
  7813  0004FC  0100               	movlb	0	; () banked
  7814  0004FE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7815  000500  22DA               	addwfc	fsr2h,f,c
  7816  000502  50DF               	movf	indf2,w,c
  7817                           
  7818                           ; Switch size 1, requested type "space"
  7819                           ; Number of cases is 4, Range of values is 5 to 8
  7820                           ; switch strategies available:
  7821                           ; Name         Instructions Cycles
  7822                           ; simple_byte           13     7 (average)
  7823                           ;	Chosen strategy is simple_byte
  7824  000504  0A05               	xorlw	5	; case 5
  7825  000506  B4D8               	btfsc	status,2,c
  7826  000508  D63C               	goto	i2l306
  7827  00050A  0A03               	xorlw	3	; case 6
  7828  00050C  B4D8               	btfsc	status,2,c
  7829  00050E  D65B               	goto	i2l310
  7830  000510  0A01               	xorlw	1	; case 7
  7831  000512  B4D8               	btfsc	status,2,c
  7832  000514  D720               	goto	i2l324
  7833  000516  0A0F               	xorlw	15	; case 8
  7834  000518  B4D8               	btfsc	status,2,c
  7835  00051A  D6D1               	goto	i2l3942
  7836  00051C                     i2l304:
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;my_i2c.c: 333: }
  7840                           ;my_i2c.c: 336: if (data_read || data_written) {
  7841  00051C  0100               	movlb	0	; () banked
  7842  00051E  0100               	movlb	0	; () banked
  7843  000520  6798               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7844  000522  D005               	goto	i2l338
  7845                           
  7846                           ; BSR set to: 0
  7847  000524  0100               	movlb	0	; () banked
  7848  000526  0100               	movlb	0	; () banked
  7849  000528  5193               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7850  00052A  B4D8               	btfsc	status,2,c
  7851  00052C  D002               	goto	i2l3998
  7852  00052E                     i2l338:
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;my_i2c.c: 338: if (SSPCON1bits.CKP == 0) {
  7856  00052E  A8C6               	btfss	4038,4,c	;volatile
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;my_i2c.c: 339: SSPCON1bits.CKP = 1;
  7860  000530  88C6               	bsf	4038,4,c	;volatile
  7861  000532                     i2l3998:
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;my_i2c.c: 340: }
  7865                           ;my_i2c.c: 341: }
  7866                           ;my_i2c.c: 344: if ((ic_ptr->buflen > 22 - 2) && (!msg_ready)) {
  7867  000532  0100               	movlb	0	; () banked
  7868  000534  EE20 F016          	lfsr	2,22
  7869  000538  0100               	movlb	0	; () banked
  7870  00053A  51CC               	movf	_ic_ptr& (0+255),w,b
  7871  00053C  26D9               	addwf	fsr2l,f,c
  7872  00053E  0100               	movlb	0	; () banked
  7873  000540  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7874  000542  22DA               	addwfc	fsr2h,f,c
  7875  000544  0E14               	movlw	20
  7876  000546  64DF               	cpfsgt	indf2,c
  7877  000548  D024               	goto	i2l4004
  7878                           
  7879                           ; BSR set to: 0
  7880  00054A  0100               	movlb	0	; () banked
  7881  00054C  0100               	movlb	0	; () banked
  7882  00054E  6797               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7883  000550  D020               	goto	i2l4004
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;my_i2c.c: 345: ic_ptr->status = 0x5;
  7887  000552  0100               	movlb	0	; () banked
  7888  000554  EE20 F019          	lfsr	2,25
  7889  000558  0100               	movlb	0	; () banked
  7890  00055A  51CC               	movf	_ic_ptr& (0+255),w,b
  7891  00055C  26D9               	addwf	fsr2l,f,c
  7892  00055E  0100               	movlb	0	; () banked
  7893  000560  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7894  000562  22DA               	addwfc	fsr2h,f,c
  7895  000564  0E05               	movlw	5
  7896  000566  6EDF               	movwf	indf2,c
  7897                           
  7898                           ;my_i2c.c: 346: ic_ptr->error_count++;
  7899  000568  0100               	movlb	0	; () banked
  7900  00056A  EE20 F01B          	lfsr	2,27
  7901  00056E  0100               	movlb	0	; () banked
  7902  000570  51CC               	movf	_ic_ptr& (0+255),w,b
  7903  000572  26D9               	addwf	fsr2l,f,c
  7904  000574  0100               	movlb	0	; () banked
  7905  000576  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7906  000578  22DA               	addwfc	fsr2h,f,c
  7907  00057A  2ADF               	incf	indf2,f,c
  7908                           
  7909                           ;my_i2c.c: 347: ic_ptr->error_code = 0x7;
  7910  00057C  0100               	movlb	0	; () banked
  7911  00057E  EE20 F01A          	lfsr	2,26
  7912  000582  0100               	movlb	0	; () banked
  7913  000584  51CC               	movf	_ic_ptr& (0+255),w,b
  7914  000586  26D9               	addwf	fsr2l,f,c
  7915  000588  0100               	movlb	0	; () banked
  7916  00058A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7917  00058C  22DA               	addwfc	fsr2h,f,c
  7918  00058E  0E07               	movlw	7
  7919  000590  6EDF               	movwf	indf2,c
  7920  000592                     i2l4004:
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;my_i2c.c: 348: }
  7924                           ;my_i2c.c: 350: if (msg_ready) {
  7925  000592  0100               	movlb	0	; () banked
  7926  000594  0100               	movlb	0	; () banked
  7927  000596  5197               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7928  000598  B4D8               	btfsc	status,2,c
  7929  00059A  D048               	goto	i2l4012
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;my_i2c.c: 351: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7933  00059C  0100               	movlb	0	; () banked
  7934  00059E  EE20 F018          	lfsr	2,24
  7935  0005A2  0100               	movlb	0	; () banked
  7936  0005A4  51CC               	movf	_ic_ptr& (0+255),w,b
  7937  0005A6  26D9               	addwf	fsr2l,f,c
  7938  0005A8  0100               	movlb	0	; () banked
  7939  0005AA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7940  0005AC  22DA               	addwfc	fsr2h,f,c
  7941  0005AE  0100               	movlb	0	; () banked
  7942  0005B0  EE10 F016          	lfsr	1,22
  7943  0005B4  0100               	movlb	0	; () banked
  7944  0005B6  51CC               	movf	_ic_ptr& (0+255),w,b
  7945  0005B8  26E1               	addwf	fsr1l,f,c
  7946  0005BA  0100               	movlb	0	; () banked
  7947  0005BC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7948  0005BE  22E2               	addwfc	fsr1h,f,c
  7949  0005C0  50E7               	movf	indf1,w,c
  7950  0005C2  0100               	movlb	0	; () banked
  7951  0005C4  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7952  0005C6  0100               	movlb	0	; () banked
  7953  0005C8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7954  0005CA  0D01               	mullw	1
  7955  0005CC  50F3               	movf	prodl,w,c
  7956  0005CE  0100               	movlb	0	; () banked
  7957  0005D0  0100               	movlb	0	; () banked
  7958  0005D2  25CC               	addwf	_ic_ptr& (0+255),w,b
  7959  0005D4  6EE1               	movwf	fsr1l,c
  7960  0005D6  50F4               	movf	prodh,w,c
  7961  0005D8  0100               	movlb	0	; () banked
  7962  0005DA  0100               	movlb	0	; () banked
  7963  0005DC  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7964  0005DE  6EE2               	movwf	fsr1h,c
  7965  0005E0  CFDF FFE7          	movff	indf2,indf1
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;my_i2c.c: 352: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7969  0005E4  0100               	movlb	0	; () banked
  7970  0005E6  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  7971  0005E8  0E28               	movlw	40
  7972  0005EA  0100               	movlb	0	; () banked
  7973  0005EC  0100               	movlb	0	; () banked
  7974  0005EE  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  7975  0005F0  0100               	movlb	0	; () banked
  7976  0005F2  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7977  0005F4  0100               	movlb	0	; () banked
  7978  0005F6  0100               	movlb	0	; () banked
  7979  0005F8  C0CD  F08D         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  7980  0005FC  0100               	movlb	0	; () banked
  7981  0005FE  0100               	movlb	0	; () banked
  7982  000600  C0CC  F08C         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  7983  000604  0100               	movlb	0	; () banked
  7984  000606  EE20 F016          	lfsr	2,22
  7985  00060A  0100               	movlb	0	; () banked
  7986  00060C  51CC               	movf	_ic_ptr& (0+255),w,b
  7987  00060E  26D9               	addwf	fsr2l,f,c
  7988  000610  0100               	movlb	0	; () banked
  7989  000612  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7990  000614  22DA               	addwfc	fsr2h,f,c
  7991  000616  50DF               	movf	indf2,w,c
  7992  000618  0100               	movlb	0	; () banked
  7993  00061A  6F8F               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7994  00061C  0100               	movlb	0	; () banked
  7995  00061E  298F               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7996  000620  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  7997                           
  7998                           ;my_i2c.c: 353: ic_ptr->buflen = 0;
  7999  000624  0100               	movlb	0	; () banked
  8000  000626  EE20 F016          	lfsr	2,22
  8001  00062A  D04B               	goto	L10
  8002  00062C                     i2l4012:
  8003                           
  8004                           ; BSR set to: 0
  8005  00062C  0100               	movlb	0	; () banked
  8006  00062E  EE20 F01B          	lfsr	2,27
  8007  000632  0100               	movlb	0	; () banked
  8008  000634  51CC               	movf	_ic_ptr& (0+255),w,b
  8009  000636  26D9               	addwf	fsr2l,f,c
  8010  000638  0100               	movlb	0	; () banked
  8011  00063A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8012  00063C  22DA               	addwfc	fsr2h,f,c
  8013  00063E  50DF               	movf	indf2,w,c
  8014  000640  B4D8               	btfsc	status,2,c
  8015  000642  D047               	goto	i2l4020
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;my_i2c.c: 355: error_buf[0] = ic_ptr->error_count;
  8019  000644  0100               	movlb	0	; () banked
  8020  000646  EE20 F01B          	lfsr	2,27
  8021  00064A  0100               	movlb	0	; () banked
  8022  00064C  51CC               	movf	_ic_ptr& (0+255),w,b
  8023  00064E  26D9               	addwf	fsr2l,f,c
  8024  000650  0100               	movlb	0	; () banked
  8025  000652  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8026  000654  22DA               	addwfc	fsr2h,f,c
  8027  000656  50DF               	movf	indf2,w,c
  8028  000658  0100               	movlb	0	; () banked
  8029  00065A  0100               	movlb	0	; () banked
  8030  00065C  6F90               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8031                           
  8032                           ;my_i2c.c: 356: error_buf[1] = ic_ptr->error_code;
  8033  00065E  0100               	movlb	0	; () banked
  8034  000660  EE20 F01A          	lfsr	2,26
  8035  000664  0100               	movlb	0	; () banked
  8036  000666  51CC               	movf	_ic_ptr& (0+255),w,b
  8037  000668  26D9               	addwf	fsr2l,f,c
  8038  00066A  0100               	movlb	0	; () banked
  8039  00066C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8040  00066E  22DA               	addwfc	fsr2h,f,c
  8041  000670  50DF               	movf	indf2,w,c
  8042  000672  0100               	movlb	0	; () banked
  8043  000674  0100               	movlb	0	; () banked
  8044  000676  6F91               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8045                           
  8046                           ;my_i2c.c: 357: error_buf[2] = ic_ptr->event_count;
  8047  000678  0100               	movlb	0	; () banked
  8048  00067A  EE20 F018          	lfsr	2,24
  8049  00067E  0100               	movlb	0	; () banked
  8050  000680  51CC               	movf	_ic_ptr& (0+255),w,b
  8051  000682  26D9               	addwf	fsr2l,f,c
  8052  000684  0100               	movlb	0	; () banked
  8053  000686  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8054  000688  22DA               	addwfc	fsr2h,f,c
  8055  00068A  50DF               	movf	indf2,w,c
  8056  00068C  0100               	movlb	0	; () banked
  8057  00068E  0100               	movlb	0	; () banked
  8058  000690  6F92               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;my_i2c.c: 358: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8062  000692  0100               	movlb	0	; () banked
  8063  000694  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  8064  000696  0E29               	movlw	41
  8065  000698  0100               	movlb	0	; () banked
  8066  00069A  0100               	movlb	0	; () banked
  8067  00069C  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8068  00069E  0100               	movlb	0	; () banked
  8069  0006A0  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8070  0006A2  0100               	movlb	0	; () banked
  8071  0006A4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8072  0006A6  0100               	movlb	0	; () banked
  8073  0006A8  0100               	movlb	0	; () banked
  8074  0006AA  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8075  0006AC  0100               	movlb	0	; () banked
  8076  0006AE  0E90               	movlw	low i2c_slave_int_handler@error_buf
  8077  0006B0  0100               	movlb	0	; () banked
  8078  0006B2  0100               	movlb	0	; () banked
  8079  0006B4  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8080  0006B6  0E03               	movlw	3
  8081  0006B8  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  8082                           
  8083                           ;my_i2c.c: 359: ic_ptr->error_count = 0;
  8084  0006BC  0100               	movlb	0	; () banked
  8085  0006BE  EE20 F01B          	lfsr	2,27
  8086  0006C2                     L10:
  8087  0006C2  0100               	movlb	0	; () banked
  8088  0006C4  51CC               	movf	_ic_ptr& (0+255),w,b
  8089  0006C6  26D9               	addwf	fsr2l,f,c
  8090  0006C8  0100               	movlb	0	; () banked
  8091  0006CA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8092  0006CC  22DA               	addwfc	fsr2h,f,c
  8093  0006CE  0E00               	movlw	0
  8094  0006D0  6EDF               	movwf	indf2,c
  8095  0006D2                     i2l4020:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;my_i2c.c: 360: }
  8099                           ;my_i2c.c: 361: if (msg_to_send) {
  8100  0006D2  0100               	movlb	0	; () banked
  8101  0006D4  0100               	movlb	0	; () banked
  8102  0006D6  5196               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8103  0006D8  B4D8               	btfsc	status,2,c
  8104  0006DA  0012               	return	
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;my_i2c.c: 364: start_i2c_slave_reply(22, 0);
  8108  0006DC  0E00               	movlw	0
  8109  0006DE  6E33               	movwf	i2start_i2c_slave_reply@msg+1,c
  8110  0006E0  0E00               	movlw	0
  8111  0006E2  6E32               	movwf	i2start_i2c_slave_reply@msg,c
  8112  0006E4  0E16               	movlw	22
  8113  0006E6  EC79  F009         	call	i2_start_i2c_slave_reply
  8114                           
  8115                           ;my_i2c.c: 365: msg_to_send = 0;
  8116  0006EA  0100               	movlb	0	; () banked
  8117  0006EC  6F8E               	movwf	??_i2c_slave_int_handler& (0+255),b
  8118  0006EE  0E00               	movlw	0
  8119  0006F0  0100               	movlb	0	; () banked
  8120  0006F2  0100               	movlb	0	; () banked
  8121  0006F4  6F96               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8122  0006F6  0100               	movlb	0	; () banked
  8123  0006F8  518E               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8124  0006FA  0012               	return	
  8125  0006FC                     __end_of_i2c_slave_int_handler:
  8126                           	opt stack 0
  8127                           pclatu	equ	0xFFB
  8128                           pclath	equ	0xFFA
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           intcon	equ	0xFF2
  8136                           postinc0	equ	0xFEE
  8137                           fsr0h	equ	0xFEA
  8138                           fsr0l	equ	0xFE9
  8139                           wreg	equ	0xFE8
  8140                           indf1	equ	0xFE7
  8141                           fsr1h	equ	0xFE2
  8142                           fsr1l	equ	0xFE1
  8143                           bsr	equ	0xFE0
  8144                           indf2	equ	0xFDF
  8145                           postinc2	equ	0xFDE
  8146                           postdec2	equ	0xFDD
  8147                           fsr2h	equ	0xFDA
  8148                           fsr2l	equ	0xFD9
  8149                           status	equ	0xFD8
  8150                           
  8151 ;; *************** function i2_start_i2c_slave_reply *****************
  8152 ;; Defined at:
  8153 ;;		line 122 in file "source/my_i2c.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  length          1    wreg     unsigned char 
  8156 ;;  msg             2   49[COMRAM] PTR unsigned char 
  8157 ;;		 -> NULL(0), main@msgbuffer(23), 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  length          1   54[COMRAM] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;		None               void
  8162 ;; Registers used:
  8163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8169 ;;      Params:         2       0       0       0       0
  8170 ;;      Locals:         1       0       0       0       0
  8171 ;;      Temps:          3       0       0       0       0
  8172 ;;      Totals:         6       0       0       0       0
  8173 ;;Total ram usage:        6 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_i2c_slave_int_handler
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text44
  8183  0012F2                     __ptext44:
  8184                           	opt stack 0
  8185  0012F2                     i2_start_i2c_slave_reply:
  8186                           	opt stack 16
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;incstack = 0
  8190                           ;i2start_i2c_slave_reply@length stored from wreg
  8191  0012F2  CFE8 F037          	movff	wreg,i2start_i2c_slave_reply@length
  8192                           
  8193                           ;my_i2c.c: 126: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  8194  0012F6  0100               	movlb	0	; () banked
  8195  0012F8  EE20 F032          	lfsr	2,50
  8196  0012FC  0100               	movlb	0	; () banked
  8197  0012FE  51CC               	movf	_ic_ptr& (0+255),w,b
  8198  001300  26D9               	addwf	fsr2l,f,c
  8199  001302  0100               	movlb	0	; () banked
  8200  001304  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8201  001306  22DA               	addwfc	fsr2h,f,c
  8202  001308  0E00               	movlw	0
  8203  00130A  6EDF               	movwf	indf2,c
  8204  00130C  D08F               	goto	i2l3370
  8205  00130E                     i2l3358:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;my_i2c.c: 129: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  8209  00130E  0100               	movlb	0	; () banked
  8210  001310  EE20 F032          	lfsr	2,50
  8211  001314  0100               	movlb	0	; () banked
  8212  001316  51CC               	movf	_ic_ptr& (0+255),w,b
  8213  001318  26D9               	addwf	fsr2l,f,c
  8214  00131A  0100               	movlb	0	; () banked
  8215  00131C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8216  00131E  22DA               	addwfc	fsr2h,f,c
  8217  001320  50DF               	movf	indf2,w,c
  8218  001322  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8219  001324  0100               	movlb	0	; () banked
  8220  001326  EE20 F04B          	lfsr	2,75
  8221  00132A  0100               	movlb	0	; () banked
  8222  00132C  51CC               	movf	_ic_ptr& (0+255),w,b
  8223  00132E  26D9               	addwf	fsr2l,f,c
  8224  001330  0100               	movlb	0	; () banked
  8225  001332  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8226  001334  22DA               	addwfc	fsr2h,f,c
  8227  001336  50DF               	movf	indf2,w,c
  8228  001338  5C34               	subwf	??i2_start_i2c_slave_reply,w,c
  8229  00133A  B0D8               	btfsc	status,0,c
  8230  00133C  D028               	goto	i2l3362
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;my_i2c.c: 130: {
  8234                           ;my_i2c.c: 131: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  8235  00133E  0100               	movlb	0	; () banked
  8236  001340  EE20 F032          	lfsr	2,50
  8237  001344  0100               	movlb	0	; () banked
  8238  001346  51CC               	movf	_ic_ptr& (0+255),w,b
  8239  001348  26D9               	addwf	fsr2l,f,c
  8240  00134A  0100               	movlb	0	; () banked
  8241  00134C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8242  00134E  22DA               	addwfc	fsr2h,f,c
  8243  001350  50DF               	movf	indf2,w,c
  8244  001352  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8245  001354  5034               	movf	??i2_start_i2c_slave_reply,w,c
  8246  001356  0D01               	mullw	1
  8247  001358  0E35               	movlw	53
  8248  00135A  26F3               	addwf	prodl,f,c
  8249  00135C  0E00               	movlw	0
  8250  00135E  22F4               	addwfc	prodh,f,c
  8251  001360  50F3               	movf	prodl,w,c
  8252  001362  0100               	movlb	0	; () banked
  8253  001364  0100               	movlb	0	; () banked
  8254  001366  25CC               	addwf	_ic_ptr& (0+255),w,b
  8255  001368  6ED9               	movwf	fsr2l,c
  8256  00136A  50F4               	movf	prodh,w,c
  8257  00136C  0100               	movlb	0	; () banked
  8258  00136E  0100               	movlb	0	; () banked
  8259  001370  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8260  001372  6EDA               	movwf	fsr2h,c
  8261  001374  0100               	movlb	0	; () banked
  8262  001376  EE10 F032          	lfsr	1,50
  8263  00137A  0100               	movlb	0	; () banked
  8264  00137C  51CC               	movf	_ic_ptr& (0+255),w,b
  8265  00137E  26E1               	addwf	fsr1l,f,c
  8266  001380  0100               	movlb	0	; () banked
  8267  001382  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8268  001384  22E2               	addwfc	fsr1h,f,c
  8269  001386  50E7               	movf	indf1,w,c
  8270  001388  6E35               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  8271  00138A  5035               	movf	??i2_start_i2c_slave_reply+1,w,c
  8272  00138C  D034               	goto	L15
  8273  00138E                     i2l3362:
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;my_i2c.c: 133: else if(ic_ptr->sendBufLen != 0)
  8277  00138E  0100               	movlb	0	; () banked
  8278  001390  EE20 F04B          	lfsr	2,75
  8279  001394  0100               	movlb	0	; () banked
  8280  001396  51CC               	movf	_ic_ptr& (0+255),w,b
  8281  001398  26D9               	addwf	fsr2l,f,c
  8282  00139A  0100               	movlb	0	; () banked
  8283  00139C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8284  00139E  22DA               	addwfc	fsr2h,f,c
  8285  0013A0  50DF               	movf	indf2,w,c
  8286  0013A2  B4D8               	btfsc	status,2,c
  8287  0013A4  D00B               	goto	i2l3366
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;my_i2c.c: 134: {
  8291                           ;my_i2c.c: 135: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  8292  0013A6  0100               	movlb	0	; () banked
  8293  0013A8  EE20 F04B          	lfsr	2,75
  8294  0013AC  0100               	movlb	0	; () banked
  8295  0013AE  51CC               	movf	_ic_ptr& (0+255),w,b
  8296  0013B0  26D9               	addwf	fsr2l,f,c
  8297  0013B2  0100               	movlb	0	; () banked
  8298  0013B4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8299  0013B6  22DA               	addwfc	fsr2h,f,c
  8300  0013B8  50DF               	movf	indf2,w,c
  8301  0013BA  D001               	goto	L14
  8302  0013BC                     i2l3366:
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;my_i2c.c: 137: else
  8306                           ;my_i2c.c: 138: {
  8307                           ;my_i2c.c: 139: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  8308  0013BC  5037               	movf	i2start_i2c_slave_reply@length,w,c
  8309  0013BE                     L14:
  8310  0013BE  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8311  0013C0  6A35               	clrf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  8312  0013C2  0E34               	movlw	52
  8313  0013C4  2634               	addwf	??i2_start_i2c_slave_reply,f,c
  8314  0013C6  0E00               	movlw	0
  8315  0013C8  2235               	addwfc	??i2_start_i2c_slave_reply+1,f,c
  8316  0013CA  5034               	movf	??i2_start_i2c_slave_reply,w,c
  8317  0013CC  0100               	movlb	0	; () banked
  8318  0013CE  0100               	movlb	0	; () banked
  8319  0013D0  25CC               	addwf	_ic_ptr& (0+255),w,b
  8320  0013D2  6ED9               	movwf	fsr2l,c
  8321  0013D4  5035               	movf	??i2_start_i2c_slave_reply+1,w,c
  8322  0013D6  0100               	movlb	0	; () banked
  8323  0013D8  0100               	movlb	0	; () banked
  8324  0013DA  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8325  0013DC  6EDA               	movwf	fsr2h,c
  8326  0013DE  0100               	movlb	0	; () banked
  8327  0013E0  EE10 F032          	lfsr	1,50
  8328  0013E4  0100               	movlb	0	; () banked
  8329  0013E6  51CC               	movf	_ic_ptr& (0+255),w,b
  8330  0013E8  26E1               	addwf	fsr1l,f,c
  8331  0013EA  0100               	movlb	0	; () banked
  8332  0013EC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8333  0013EE  22E2               	addwfc	fsr1h,f,c
  8334  0013F0  50E7               	movf	indf1,w,c
  8335  0013F2  6E36               	movwf	(??i2_start_i2c_slave_reply+2)& (0+255),c
  8336  0013F4  5036               	movf	??i2_start_i2c_slave_reply+2,w,c
  8337  0013F6                     L15:
  8338  0013F6  0D01               	mullw	1
  8339  0013F8  0E1C               	movlw	28
  8340  0013FA  26F3               	addwf	prodl,f,c
  8341  0013FC  0E00               	movlw	0
  8342  0013FE  22F4               	addwfc	prodh,f,c
  8343  001400  50F3               	movf	prodl,w,c
  8344  001402  0100               	movlb	0	; () banked
  8345  001404  0100               	movlb	0	; () banked
  8346  001406  25CC               	addwf	_ic_ptr& (0+255),w,b
  8347  001408  6EE1               	movwf	fsr1l,c
  8348  00140A  50F4               	movf	prodh,w,c
  8349  00140C  0100               	movlb	0	; () banked
  8350  00140E  0100               	movlb	0	; () banked
  8351  001410  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8352  001412  6EE2               	movwf	fsr1h,c
  8353  001414  CFDF FFE7          	movff	indf2,indf1
  8354                           
  8355                           ; BSR set to: 0
  8356                           
  8357                           ; BSR set to: 0
  8358                           
  8359                           ; BSR set to: 0
  8360  001418  0100               	movlb	0	; () banked
  8361  00141A  EE20 F032          	lfsr	2,50
  8362  00141E  0100               	movlb	0	; () banked
  8363  001420  51CC               	movf	_ic_ptr& (0+255),w,b
  8364  001422  26D9               	addwf	fsr2l,f,c
  8365  001424  0100               	movlb	0	; () banked
  8366  001426  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8367  001428  22DA               	addwfc	fsr2h,f,c
  8368  00142A  2ADF               	incf	indf2,f,c
  8369  00142C                     i2l3370:
  8370                           
  8371                           ; BSR set to: 0
  8372  00142C  0100               	movlb	0	; () banked
  8373  00142E  EE20 F032          	lfsr	2,50
  8374  001432  0100               	movlb	0	; () banked
  8375  001434  51CC               	movf	_ic_ptr& (0+255),w,b
  8376  001436  26D9               	addwf	fsr2l,f,c
  8377  001438  0100               	movlb	0	; () banked
  8378  00143A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8379  00143C  22DA               	addwfc	fsr2h,f,c
  8380  00143E  50DF               	movf	indf2,w,c
  8381  001440  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  8382  001442  5037               	movf	i2start_i2c_slave_reply@length,w,c
  8383  001444  5C34               	subwf	??i2_start_i2c_slave_reply,w,c
  8384  001446  A0D8               	btfss	status,0,c
  8385  001448  D762               	goto	i2l3358
  8386                           
  8387                           ; BSR set to: 0
  8388                           ;my_i2c.c: 140: }
  8389                           ;my_i2c.c: 142: }
  8390                           ;my_i2c.c: 143: ic_ptr->sendBufLen =0;
  8391                           
  8392                           ; BSR set to: 0
  8393  00144A  0100               	movlb	0	; () banked
  8394  00144C  EE20 F04B          	lfsr	2,75
  8395  001450  0100               	movlb	0	; () banked
  8396  001452  51CC               	movf	_ic_ptr& (0+255),w,b
  8397  001454  26D9               	addwf	fsr2l,f,c
  8398  001456  0100               	movlb	0	; () banked
  8399  001458  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8400  00145A  22DA               	addwfc	fsr2h,f,c
  8401  00145C  0E00               	movlw	0
  8402  00145E  6EDF               	movwf	indf2,c
  8403                           
  8404                           ;my_i2c.c: 144: ic_ptr->outbuflen = length;
  8405  001460  0100               	movlb	0	; () banked
  8406  001462  EE20 F032          	lfsr	2,50
  8407  001466  0100               	movlb	0	; () banked
  8408  001468  51CC               	movf	_ic_ptr& (0+255),w,b
  8409  00146A  26D9               	addwf	fsr2l,f,c
  8410  00146C  0100               	movlb	0	; () banked
  8411  00146E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8412  001470  22DA               	addwfc	fsr2h,f,c
  8413  001472  C037  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  8414                           
  8415                           ;my_i2c.c: 145: ic_ptr->outbufind = 1;
  8416  001476  0100               	movlb	0	; () banked
  8417  001478  EE20 F033          	lfsr	2,51
  8418  00147C  0100               	movlb	0	; () banked
  8419  00147E  51CC               	movf	_ic_ptr& (0+255),w,b
  8420  001480  26D9               	addwf	fsr2l,f,c
  8421  001482  0100               	movlb	0	; () banked
  8422  001484  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8423  001486  22DA               	addwfc	fsr2h,f,c
  8424  001488  0E01               	movlw	1
  8425  00148A  6EDF               	movwf	indf2,c
  8426                           
  8427                           ;my_i2c.c: 148: SSPBUF = ic_ptr->outbuffer[0];
  8428  00148C  0100               	movlb	0	; () banked
  8429  00148E  EE20 F01C          	lfsr	2,28
  8430  001492  0100               	movlb	0	; () banked
  8431  001494  51CC               	movf	_ic_ptr& (0+255),w,b
  8432  001496  26D9               	addwf	fsr2l,f,c
  8433  001498  0100               	movlb	0	; () banked
  8434  00149A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8435  00149C  22DA               	addwfc	fsr2h,f,c
  8436  00149E  50DF               	movf	indf2,w,c
  8437  0014A0  6EC9               	movwf	4041,c	;volatile
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;my_i2c.c: 151: SSPCON1bits.CKP = 1;
  8441  0014A2  88C6               	bsf	4038,4,c	;volatile
  8442                           
  8443                           ; BSR set to: 0
  8444  0014A4  0012               	return	
  8445  0014A6                     __end_ofi2_start_i2c_slave_reply:
  8446                           	opt stack 0
  8447                           pclatu	equ	0xFFB
  8448                           pclath	equ	0xFFA
  8449                           tblptru	equ	0xFF8
  8450                           tblptrh	equ	0xFF7
  8451                           tblptrl	equ	0xFF6
  8452                           tablat	equ	0xFF5
  8453                           prodh	equ	0xFF4
  8454                           prodl	equ	0xFF3
  8455                           intcon	equ	0xFF2
  8456                           postinc0	equ	0xFEE
  8457                           fsr0h	equ	0xFEA
  8458                           fsr0l	equ	0xFE9
  8459                           wreg	equ	0xFE8
  8460                           indf1	equ	0xFE7
  8461                           fsr1h	equ	0xFE2
  8462                           fsr1l	equ	0xFE1
  8463                           bsr	equ	0xFE0
  8464                           indf2	equ	0xFDF
  8465                           postinc2	equ	0xFDE
  8466                           postdec2	equ	0xFDD
  8467                           fsr2h	equ	0xFDA
  8468                           fsr2l	equ	0xFD9
  8469                           status	equ	0xFD8
  8470                           
  8471 ;; *************** function _handle_start *****************
  8472 ;; Defined at:
  8473 ;;		line 157 in file "source/my_i2c.c"
  8474 ;; Parameters:    Size  Location     Type
  8475 ;;  data_read       1    wreg     unsigned char 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  data_read       1   49[COMRAM] unsigned char 
  8478 ;; Return value:  Size  Location     Type
  8479 ;;		None               void
  8480 ;; Registers used:
  8481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8487 ;;      Params:         0       0       0       0       0
  8488 ;;      Locals:         1       0       0       0       0
  8489 ;;      Temps:          0       0       0       0       0
  8490 ;;      Totals:         1       0       0       0       0
  8491 ;;Total ram usage:        1 bytes
  8492 ;; Hardware stack levels used:    1
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_i2c_slave_int_handler
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text45
  8501  001BA2                     __ptext45:
  8502                           	opt stack 0
  8503  001BA2                     _handle_start:
  8504                           	opt stack 16
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;incstack = 0
  8508                           ;handle_start@data_read stored from wreg
  8509  001BA2  CFE8 F032          	movff	wreg,handle_start@data_read
  8510                           
  8511                           ;my_i2c.c: 158: ic_ptr->event_count = 1;
  8512  001BA6  0100               	movlb	0	; () banked
  8513  001BA8  EE20 F018          	lfsr	2,24
  8514  001BAC  0100               	movlb	0	; () banked
  8515  001BAE  51CC               	movf	_ic_ptr& (0+255),w,b
  8516  001BB0  26D9               	addwf	fsr2l,f,c
  8517  001BB2  0100               	movlb	0	; () banked
  8518  001BB4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8519  001BB6  22DA               	addwfc	fsr2h,f,c
  8520  001BB8  0E01               	movlw	1
  8521  001BBA  6EDF               	movwf	indf2,c
  8522                           
  8523                           ;my_i2c.c: 159: ic_ptr->buflen = 0;
  8524  001BBC  0100               	movlb	0	; () banked
  8525  001BBE  EE20 F016          	lfsr	2,22
  8526  001BC2  0100               	movlb	0	; () banked
  8527  001BC4  51CC               	movf	_ic_ptr& (0+255),w,b
  8528  001BC6  26D9               	addwf	fsr2l,f,c
  8529  001BC8  0100               	movlb	0	; () banked
  8530  001BCA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8531  001BCC  22DA               	addwfc	fsr2h,f,c
  8532  001BCE  0E00               	movlw	0
  8533  001BD0  6EDF               	movwf	indf2,c
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;my_i2c.c: 161: if (data_read) {
  8537  001BD2  5032               	movf	handle_start@data_read,w,c
  8538  001BD4  B4D8               	btfsc	status,2,c
  8539  001BD6  D03D               	goto	i2l2966
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 1) {
  8543  001BD8  AAC7               	btfss	4039,5,c	;volatile
  8544  001BDA  D021               	goto	i2l286
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;my_i2c.c: 165: ic_ptr->status = 0x5;
  8548  001BDC  0100               	movlb	0	; () banked
  8549  001BDE  EE20 F019          	lfsr	2,25
  8550  001BE2  0100               	movlb	0	; () banked
  8551  001BE4  51CC               	movf	_ic_ptr& (0+255),w,b
  8552  001BE6  26D9               	addwf	fsr2l,f,c
  8553  001BE8  0100               	movlb	0	; () banked
  8554  001BEA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8555  001BEC  22DA               	addwfc	fsr2h,f,c
  8556  001BEE  0E05               	movlw	5
  8557  001BF0  6EDF               	movwf	indf2,c
  8558                           
  8559                           ;my_i2c.c: 166: ic_ptr->error_count++;
  8560  001BF2  0100               	movlb	0	; () banked
  8561  001BF4  EE20 F01B          	lfsr	2,27
  8562  001BF8  0100               	movlb	0	; () banked
  8563  001BFA  51CC               	movf	_ic_ptr& (0+255),w,b
  8564  001BFC  26D9               	addwf	fsr2l,f,c
  8565  001BFE  0100               	movlb	0	; () banked
  8566  001C00  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8567  001C02  22DA               	addwfc	fsr2h,f,c
  8568  001C04  2ADF               	incf	indf2,f,c
  8569                           
  8570                           ;my_i2c.c: 167: ic_ptr->error_code = 0x5;
  8571  001C06  0100               	movlb	0	; () banked
  8572  001C08  EE20 F01A          	lfsr	2,26
  8573  001C0C  0100               	movlb	0	; () banked
  8574  001C0E  51CC               	movf	_ic_ptr& (0+255),w,b
  8575  001C10  26D9               	addwf	fsr2l,f,c
  8576  001C12  0100               	movlb	0	; () banked
  8577  001C14  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8578  001C16  22DA               	addwfc	fsr2h,f,c
  8579  001C18  0E05               	movlw	5
  8580  001C1A  6EDF               	movwf	indf2,c
  8581                           
  8582                           ;my_i2c.c: 168: } else {
  8583  001C1C  0012               	return	
  8584  001C1E                     i2l286:
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;my_i2c.c: 169: if (SSPSTATbits.R_W == 1) {
  8588  001C1E  A4C7               	btfss	4039,2,c	;volatile
  8589  001C20  D00C               	goto	i2l2964
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;my_i2c.c: 170: ic_ptr->status = 0x8;
  8593  001C22  0100               	movlb	0	; () banked
  8594  001C24  EE20 F019          	lfsr	2,25
  8595  001C28  0100               	movlb	0	; () banked
  8596  001C2A  51CC               	movf	_ic_ptr& (0+255),w,b
  8597  001C2C  26D9               	addwf	fsr2l,f,c
  8598  001C2E  0100               	movlb	0	; () banked
  8599  001C30  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8600  001C32  22DA               	addwfc	fsr2h,f,c
  8601  001C34  0E08               	movlw	8
  8602  001C36  6EDF               	movwf	indf2,c
  8603                           
  8604                           ;my_i2c.c: 171: } else {
  8605  001C38  0012               	return	
  8606  001C3A                     i2l2964:
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;my_i2c.c: 172: ic_ptr->status = 0x7;
  8610  001C3A  0100               	movlb	0	; () banked
  8611  001C3C  EE20 F019          	lfsr	2,25
  8612  001C40  0100               	movlb	0	; () banked
  8613  001C42  51CC               	movf	_ic_ptr& (0+255),w,b
  8614  001C44  26D9               	addwf	fsr2l,f,c
  8615  001C46  0100               	movlb	0	; () banked
  8616  001C48  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8617  001C4A  22DA               	addwfc	fsr2h,f,c
  8618  001C4C  0E07               	movlw	7
  8619  001C4E  6EDF               	movwf	indf2,c
  8620  001C50  0012               	return	
  8621  001C52                     i2l2966:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;my_i2c.c: 176: ic_ptr->status = 0x6;
  8625  001C52  0100               	movlb	0	; () banked
  8626  001C54  EE20 F019          	lfsr	2,25
  8627  001C58  0100               	movlb	0	; () banked
  8628  001C5A  51CC               	movf	_ic_ptr& (0+255),w,b
  8629  001C5C  26D9               	addwf	fsr2l,f,c
  8630  001C5E  0100               	movlb	0	; () banked
  8631  001C60  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8632  001C62  22DA               	addwfc	fsr2h,f,c
  8633  001C64  0E06               	movlw	6
  8634  001C66  6EDF               	movwf	indf2,c
  8635  001C68  0012               	return	
  8636  001C6A                     __end_of_handle_start:
  8637                           	opt stack 0
  8638                           pclatu	equ	0xFFB
  8639                           pclath	equ	0xFFA
  8640                           tblptru	equ	0xFF8
  8641                           tblptrh	equ	0xFF7
  8642                           tblptrl	equ	0xFF6
  8643                           tablat	equ	0xFF5
  8644                           prodh	equ	0xFF4
  8645                           prodl	equ	0xFF3
  8646                           intcon	equ	0xFF2
  8647                           postinc0	equ	0xFEE
  8648                           fsr0h	equ	0xFEA
  8649                           fsr0l	equ	0xFE9
  8650                           wreg	equ	0xFE8
  8651                           indf1	equ	0xFE7
  8652                           fsr1h	equ	0xFE2
  8653                           fsr1l	equ	0xFE1
  8654                           bsr	equ	0xFE0
  8655                           indf2	equ	0xFDF
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           
  8662 ;; *************** function _i2c_master_int_handler *****************
  8663 ;; Defined at:
  8664 ;;		line 442 in file "source/my_i2c.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;		None               void
  8671 ;; Registers used:
  8672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8678 ;;      Params:         0       0       0       0       0
  8679 ;;      Locals:         0       0       0       0       0
  8680 ;;      Temps:          1       0       0       0       0
  8681 ;;      Totals:         1       0       0       0       0
  8682 ;;Total ram usage:        1 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    3
  8685 ;; This function calls:
  8686 ;;		i2_ToMainHigh_sendmsg
  8687 ;; This function is called by:
  8688 ;;		_i2c_int_handler
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text46
  8693  0006FC                     __ptext46:
  8694                           	opt stack 0
  8695  0006FC                     _i2c_master_int_handler:
  8696                           	opt stack 14
  8697                           
  8698                           ;my_i2c.c: 443: switch (ic_ptr->status){
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;incstack = 0
  8702  0006FC  D27E               	goto	i2l3882
  8703  0006FE                     i2l3782:
  8704                           
  8705                           ;my_i2c.c: 446: ic_ptr->status = 0x11;
  8706  0006FE  0100               	movlb	0	; () banked
  8707  000700  EE20 F019          	lfsr	2,25
  8708  000704  0100               	movlb	0	; () banked
  8709  000706  51CC               	movf	_ic_ptr& (0+255),w,b
  8710  000708  26D9               	addwf	fsr2l,f,c
  8711  00070A  0100               	movlb	0	; () banked
  8712  00070C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8713  00070E  22DA               	addwfc	fsr2h,f,c
  8714  000710  0E11               	movlw	17
  8715  000712  6EDF               	movwf	indf2,c
  8716                           
  8717                           ;my_i2c.c: 447: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  8718  000714  0100               	movlb	0	; () banked
  8719  000716  EE20 F034          	lfsr	2,52
  8720  00071A  0100               	movlb	0	; () banked
  8721  00071C  51CC               	movf	_ic_ptr& (0+255),w,b
  8722  00071E  26D9               	addwf	fsr2l,f,c
  8723  000720  0100               	movlb	0	; () banked
  8724  000722  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8725  000724  22DA               	addwfc	fsr2h,f,c
  8726  000726  50DF               	movf	indf2,w,c
  8727  000728  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8728  00072A  90D8               	bcf	status,0,c
  8729  00072C  343E               	rlcf	??_i2c_master_int_handler,w,c
  8730  00072E  0BFE               	andlw	254
  8731  000730  6EC9               	movwf	4041,c	;volatile
  8732                           
  8733                           ;my_i2c.c: 448: break;
  8734  000732  0012               	return	
  8735  000734                     i2l357:
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;my_i2c.c: 451: if (SSPCON2bits.ACKSTAT == 0) {
  8739  000734  BCC5               	btfsc	4037,6,c	;volatile
  8740  000736  D074               	goto	i2l3800
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;my_i2c.c: 452: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8744  000738  0100               	movlb	0	; () banked
  8745  00073A  EE20 F033          	lfsr	2,51
  8746  00073E  0100               	movlb	0	; () banked
  8747  000740  51CC               	movf	_ic_ptr& (0+255),w,b
  8748  000742  26D9               	addwf	fsr2l,f,c
  8749  000744  0100               	movlb	0	; () banked
  8750  000746  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8751  000748  22DA               	addwfc	fsr2h,f,c
  8752  00074A  50DF               	movf	indf2,w,c
  8753  00074C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8754  00074E  0100               	movlb	0	; () banked
  8755  000750  EE20 F032          	lfsr	2,50
  8756  000754  0100               	movlb	0	; () banked
  8757  000756  51CC               	movf	_ic_ptr& (0+255),w,b
  8758  000758  26D9               	addwf	fsr2l,f,c
  8759  00075A  0100               	movlb	0	; () banked
  8760  00075C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8761  00075E  22DA               	addwfc	fsr2h,f,c
  8762  000760  50DF               	movf	indf2,w,c
  8763  000762  5C3E               	subwf	??_i2c_master_int_handler,w,c
  8764  000764  B0D8               	btfsc	status,0,c
  8765  000766  D033               	goto	i2l3792
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;my_i2c.c: 453: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8769  000768  0100               	movlb	0	; () banked
  8770  00076A  EE20 F033          	lfsr	2,51
  8771  00076E  0100               	movlb	0	; () banked
  8772  000770  51CC               	movf	_ic_ptr& (0+255),w,b
  8773  000772  26D9               	addwf	fsr2l,f,c
  8774  000774  0100               	movlb	0	; () banked
  8775  000776  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8776  000778  22DA               	addwfc	fsr2h,f,c
  8777  00077A  50DF               	movf	indf2,w,c
  8778  00077C  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8779  00077E  503E               	movf	??_i2c_master_int_handler,w,c
  8780  000780  0D01               	mullw	1
  8781  000782  0E1C               	movlw	28
  8782  000784  26F3               	addwf	prodl,f,c
  8783  000786  0E00               	movlw	0
  8784  000788  22F4               	addwfc	prodh,f,c
  8785  00078A  50F3               	movf	prodl,w,c
  8786  00078C  0100               	movlb	0	; () banked
  8787  00078E  0100               	movlb	0	; () banked
  8788  000790  25CC               	addwf	_ic_ptr& (0+255),w,b
  8789  000792  6ED9               	movwf	fsr2l,c
  8790  000794  50F4               	movf	prodh,w,c
  8791  000796  0100               	movlb	0	; () banked
  8792  000798  0100               	movlb	0	; () banked
  8793  00079A  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8794  00079C  6EDA               	movwf	fsr2h,c
  8795  00079E  50DF               	movf	indf2,w,c
  8796  0007A0  6EC9               	movwf	4041,c	;volatile
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;my_i2c.c: 454: ic_ptr->outbufind++;
  8800  0007A2  0100               	movlb	0	; () banked
  8801  0007A4  EE20 F033          	lfsr	2,51
  8802  0007A8  0100               	movlb	0	; () banked
  8803  0007AA  51CC               	movf	_ic_ptr& (0+255),w,b
  8804  0007AC  26D9               	addwf	fsr2l,f,c
  8805  0007AE  0100               	movlb	0	; () banked
  8806  0007B0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8807  0007B2  22DA               	addwfc	fsr2h,f,c
  8808  0007B4  2ADF               	incf	indf2,f,c
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;my_i2c.c: 455: ic_ptr->status = 0x12;
  8812  0007B6  0100               	movlb	0	; () banked
  8813  0007B8  EE20 F019          	lfsr	2,25
  8814  0007BC  0100               	movlb	0	; () banked
  8815  0007BE  51CC               	movf	_ic_ptr& (0+255),w,b
  8816  0007C0  26D9               	addwf	fsr2l,f,c
  8817  0007C2  0100               	movlb	0	; () banked
  8818  0007C4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8819  0007C6  22DA               	addwfc	fsr2h,f,c
  8820  0007C8  0E12               	movlw	18
  8821  0007CA  6EDF               	movwf	indf2,c
  8822                           
  8823                           ;my_i2c.c: 456: }
  8824  0007CC  0012               	return	
  8825  0007CE                     i2l3792:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;my_i2c.c: 457: else {
  8829                           ;my_i2c.c: 458: ToMainHigh_sendmsg(0, 43, 0);
  8830  0007CE  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8831  0007D0  0E2B               	movlw	43
  8832  0007D2  0100               	movlb	0	; () banked
  8833  0007D4  0100               	movlb	0	; () banked
  8834  0007D6  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8835  0007D8  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8836  0007DA  0E00               	movlw	0
  8837  0007DC  0100               	movlb	0	; () banked
  8838  0007DE  0100               	movlb	0	; () banked
  8839  0007E0  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8840  0007E2  0E00               	movlw	0
  8841  0007E4  0100               	movlb	0	; () banked
  8842  0007E6  0100               	movlb	0	; () banked
  8843  0007E8  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8844  0007EA  0E00               	movlw	0
  8845  0007EC  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  8846                           
  8847                           ;my_i2c.c: 459: ic_ptr->outbuflen = 0;
  8848  0007F0  0100               	movlb	0	; () banked
  8849  0007F2  EE20 F032          	lfsr	2,50
  8850  0007F6  0100               	movlb	0	; () banked
  8851  0007F8  51CC               	movf	_ic_ptr& (0+255),w,b
  8852  0007FA  26D9               	addwf	fsr2l,f,c
  8853  0007FC  0100               	movlb	0	; () banked
  8854  0007FE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8855  000800  22DA               	addwfc	fsr2h,f,c
  8856  000802  0E00               	movlw	0
  8857  000804  6EDF               	movwf	indf2,c
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;my_i2c.c: 460: ic_ptr->status = 0x5;
  8861  000806  0100               	movlb	0	; () banked
  8862  000808  EE20 F019          	lfsr	2,25
  8863  00080C  0100               	movlb	0	; () banked
  8864  00080E  51CC               	movf	_ic_ptr& (0+255),w,b
  8865  000810  26D9               	addwf	fsr2l,f,c
  8866  000812  0100               	movlb	0	; () banked
  8867  000814  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8868  000816  22DA               	addwfc	fsr2h,f,c
  8869  000818  0E05               	movlw	5
  8870  00081A  6EDF               	movwf	indf2,c
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;my_i2c.c: 461: SSPCON2bits.PEN = 1;
  8874  00081C  84C5               	bsf	4037,2,c	;volatile
  8875  00081E  0012               	return	
  8876  000820                     i2l3800:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;my_i2c.c: 464: else {
  8880                           ;my_i2c.c: 465: ToMainHigh_sendmsg(0, 44, 0);
  8881  000820  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8882  000822  0E2C               	movlw	44
  8883  000824  0100               	movlb	0	; () banked
  8884  000826  0100               	movlb	0	; () banked
  8885  000828  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8886  00082A  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8887  00082C  0E00               	movlw	0
  8888  00082E  0100               	movlb	0	; () banked
  8889  000830  0100               	movlb	0	; () banked
  8890  000832  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8891  000834  0E00               	movlw	0
  8892  000836  0100               	movlb	0	; () banked
  8893  000838  0100               	movlb	0	; () banked
  8894  00083A  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8895  00083C  0E00               	movlw	0
  8896  00083E  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  8897                           
  8898                           ;my_i2c.c: 466: ic_ptr->status = 0x5;
  8899  000842  0100               	movlb	0	; () banked
  8900  000844  EE20 F019          	lfsr	2,25
  8901  000848  0100               	movlb	0	; () banked
  8902  00084A  51CC               	movf	_ic_ptr& (0+255),w,b
  8903  00084C  26D9               	addwf	fsr2l,f,c
  8904  00084E  0100               	movlb	0	; () banked
  8905  000850  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8906  000852  22DA               	addwfc	fsr2h,f,c
  8907  000854  0E05               	movlw	5
  8908  000856  6EDF               	movwf	indf2,c
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;my_i2c.c: 467: SSPCON2bits.PEN = 1;
  8912  000858  84C5               	bsf	4037,2,c	;volatile
  8913  00085A  0012               	return	
  8914  00085C                     i2l362:
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;my_i2c.c: 472: if (SSPCON2bits.ACKSTAT == 1) {
  8918  00085C  ACC5               	btfss	4037,6,c	;volatile
  8919  00085E  D00D               	goto	i2l3810
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;my_i2c.c: 473: ic_ptr->status = 0x13;
  8923  000860  0100               	movlb	0	; () banked
  8924  000862  EE20 F019          	lfsr	2,25
  8925  000866  0100               	movlb	0	; () banked
  8926  000868  51CC               	movf	_ic_ptr& (0+255),w,b
  8927  00086A  26D9               	addwf	fsr2l,f,c
  8928  00086C  0100               	movlb	0	; () banked
  8929  00086E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8930  000870  22DA               	addwfc	fsr2h,f,c
  8931  000872  0E13               	movlw	19
  8932  000874  6EDF               	movwf	indf2,c
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;my_i2c.c: 474: SSPCON2bits.PEN = 1;
  8936  000876  84C5               	bsf	4037,2,c	;volatile
  8937                           
  8938                           ;my_i2c.c: 475: }
  8939  000878  0012               	return	
  8940  00087A                     i2l3810:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;my_i2c.c: 476: else {
  8944                           ;my_i2c.c: 477: ToMainHigh_sendmsg(0, 44, 0);
  8945  00087A  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8946  00087C  0E2C               	movlw	44
  8947  00087E  0100               	movlb	0	; () banked
  8948  000880  0100               	movlb	0	; () banked
  8949  000882  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8950  000884  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8951  000886  0E00               	movlw	0
  8952  000888  0100               	movlb	0	; () banked
  8953  00088A  0100               	movlb	0	; () banked
  8954  00088C  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8955  00088E  0E00               	movlw	0
  8956  000890  0100               	movlb	0	; () banked
  8957  000892  0100               	movlb	0	; () banked
  8958  000894  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8959  000896  0E00               	movlw	0
  8960  000898  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  8961                           
  8962                           ;my_i2c.c: 478: ic_ptr->status = 0x5;
  8963  00089C  0100               	movlb	0	; () banked
  8964  00089E  EE20 F019          	lfsr	2,25
  8965  0008A2  0100               	movlb	0	; () banked
  8966  0008A4  51CC               	movf	_ic_ptr& (0+255),w,b
  8967  0008A6  26D9               	addwf	fsr2l,f,c
  8968  0008A8  0100               	movlb	0	; () banked
  8969  0008AA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8970  0008AC  22DA               	addwfc	fsr2h,f,c
  8971  0008AE  0E05               	movlw	5
  8972  0008B0  6EDF               	movwf	indf2,c
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;my_i2c.c: 479: SSPCON2bits.PEN = 1;
  8976  0008B2  84C5               	bsf	4037,2,c	;volatile
  8977  0008B4  0012               	return	
  8978  0008B6                     i2l3816:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;my_i2c.c: 484: ToMainHigh_sendmsg(0, 43, 0);
  8982  0008B6  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  8983  0008B8  0E2B               	movlw	43
  8984  0008BA  0100               	movlb	0	; () banked
  8985  0008BC  0100               	movlb	0	; () banked
  8986  0008BE  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8987  0008C0  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  8988  0008C2  0E00               	movlw	0
  8989  0008C4  0100               	movlb	0	; () banked
  8990  0008C6  0100               	movlb	0	; () banked
  8991  0008C8  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8992  0008CA  0E00               	movlw	0
  8993  0008CC  0100               	movlb	0	; () banked
  8994  0008CE  0100               	movlb	0	; () banked
  8995  0008D0  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8996  0008D2  0E00               	movlw	0
  8997  0008D4  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  8998                           
  8999                           ;my_i2c.c: 485: ic_ptr->status = 0x5;
  9000  0008D8  0100               	movlb	0	; () banked
  9001  0008DA  EE20 F019          	lfsr	2,25
  9002  0008DE  0100               	movlb	0	; () banked
  9003  0008E0  51CC               	movf	_ic_ptr& (0+255),w,b
  9004  0008E2  26D9               	addwf	fsr2l,f,c
  9005  0008E4  0100               	movlb	0	; () banked
  9006  0008E6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9007  0008E8  22DA               	addwfc	fsr2h,f,c
  9008  0008EA  0E05               	movlw	5
  9009  0008EC  6EDF               	movwf	indf2,c
  9010                           
  9011                           ;my_i2c.c: 486: break;
  9012  0008EE  0012               	return	
  9013  0008F0                     i2l366:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;my_i2c.c: 538: if (SSPCON2bits.ACKSTAT == 0) {
  9017  0008F0  BCC5               	btfsc	4037,6,c	;volatile
  9018  0008F2  D017               	goto	i2l3822
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;my_i2c.c: 539: ic_ptr->status = 0x14;
  9022  0008F4  0100               	movlb	0	; () banked
  9023  0008F6  EE20 F019          	lfsr	2,25
  9024  0008FA  0100               	movlb	0	; () banked
  9025  0008FC  51CC               	movf	_ic_ptr& (0+255),w,b
  9026  0008FE  26D9               	addwf	fsr2l,f,c
  9027  000900  0100               	movlb	0	; () banked
  9028  000902  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9029  000904  22DA               	addwfc	fsr2h,f,c
  9030  000906  0E14               	movlw	20
  9031  000908  6EDF               	movwf	indf2,c
  9032                           
  9033                           ;my_i2c.c: 540: SSPBUF = ic_ptr->slave_addr;
  9034  00090A  0100               	movlb	0	; () banked
  9035  00090C  EE20 F034          	lfsr	2,52
  9036  000910  0100               	movlb	0	; () banked
  9037  000912  51CC               	movf	_ic_ptr& (0+255),w,b
  9038  000914  26D9               	addwf	fsr2l,f,c
  9039  000916  0100               	movlb	0	; () banked
  9040  000918  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9041  00091A  22DA               	addwfc	fsr2h,f,c
  9042  00091C  50DF               	movf	indf2,w,c
  9043  00091E  6EC9               	movwf	4041,c	;volatile
  9044                           
  9045                           ;my_i2c.c: 541: }
  9046  000920  0012               	return	
  9047  000922                     i2l3822:
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;my_i2c.c: 543: else {
  9051                           ;my_i2c.c: 544: ToMainHigh_sendmsg(0, 46, 0);
  9052  000922  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9053  000924  0E2E               	movlw	46
  9054  000926  0100               	movlb	0	; () banked
  9055  000928  0100               	movlb	0	; () banked
  9056  00092A  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9057  00092C  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  9058  00092E  0E00               	movlw	0
  9059  000930  0100               	movlb	0	; () banked
  9060  000932  0100               	movlb	0	; () banked
  9061  000934  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9062  000936  0E00               	movlw	0
  9063  000938  0100               	movlb	0	; () banked
  9064  00093A  0100               	movlb	0	; () banked
  9065  00093C  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9066  00093E  0E00               	movlw	0
  9067  000940  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  9068                           
  9069                           ;my_i2c.c: 545: ic_ptr->status = 0x5;
  9070  000944  0100               	movlb	0	; () banked
  9071  000946  EE20 F019          	lfsr	2,25
  9072  00094A  0100               	movlb	0	; () banked
  9073  00094C  51CC               	movf	_ic_ptr& (0+255),w,b
  9074  00094E  26D9               	addwf	fsr2l,f,c
  9075  000950  0100               	movlb	0	; () banked
  9076  000952  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9077  000954  22DA               	addwfc	fsr2h,f,c
  9078  000956  0E05               	movlw	5
  9079  000958  6EDF               	movwf	indf2,c
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;my_i2c.c: 546: SSPCON2bits.PEN = 1;
  9083  00095A  84C5               	bsf	4037,2,c	;volatile
  9084  00095C  0012               	return	
  9085  00095E                     i2l369:
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;my_i2c.c: 551: if (SSPCON2bits.ACKSTAT == 0) {
  9089  00095E  BCC5               	btfsc	4037,6,c	;volatile
  9090  000960  D022               	goto	i2l3830
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;my_i2c.c: 552: ic_ptr->status = 0x15;
  9094  000962  0100               	movlb	0	; () banked
  9095  000964  EE20 F019          	lfsr	2,25
  9096  000968  0100               	movlb	0	; () banked
  9097  00096A  51CC               	movf	_ic_ptr& (0+255),w,b
  9098  00096C  26D9               	addwf	fsr2l,f,c
  9099  00096E  0100               	movlb	0	; () banked
  9100  000970  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9101  000972  22DA               	addwfc	fsr2h,f,c
  9102  000974  0E15               	movlw	21
  9103  000976  6EDF               	movwf	indf2,c
  9104                           
  9105                           ;my_i2c.c: 553: ic_ptr->outbuflen = 0;
  9106  000978  0100               	movlb	0	; () banked
  9107  00097A  EE20 F032          	lfsr	2,50
  9108  00097E  0100               	movlb	0	; () banked
  9109  000980  51CC               	movf	_ic_ptr& (0+255),w,b
  9110  000982  26D9               	addwf	fsr2l,f,c
  9111  000984  0100               	movlb	0	; () banked
  9112  000986  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9113  000988  22DA               	addwfc	fsr2h,f,c
  9114  00098A  0E00               	movlw	0
  9115  00098C  6EDF               	movwf	indf2,c
  9116                           
  9117                           ;my_i2c.c: 554: SSPBUF = ic_ptr->outbuffer[0];
  9118  00098E  0100               	movlb	0	; () banked
  9119  000990  EE20 F01C          	lfsr	2,28
  9120  000994  0100               	movlb	0	; () banked
  9121  000996  51CC               	movf	_ic_ptr& (0+255),w,b
  9122  000998  26D9               	addwf	fsr2l,f,c
  9123  00099A  0100               	movlb	0	; () banked
  9124  00099C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9125  00099E  22DA               	addwfc	fsr2h,f,c
  9126  0009A0  50DF               	movf	indf2,w,c
  9127  0009A2  6EC9               	movwf	4041,c	;volatile
  9128                           
  9129                           ;my_i2c.c: 555: }
  9130  0009A4  0012               	return	
  9131  0009A6                     i2l3830:
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;my_i2c.c: 556: else {
  9135                           ;my_i2c.c: 557: ToMainHigh_sendmsg(0, 46, 0);
  9136  0009A6  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9137  0009A8  0E2E               	movlw	46
  9138  0009AA  0100               	movlb	0	; () banked
  9139  0009AC  0100               	movlb	0	; () banked
  9140  0009AE  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9141  0009B0  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  9142  0009B2  0E00               	movlw	0
  9143  0009B4  0100               	movlb	0	; () banked
  9144  0009B6  0100               	movlb	0	; () banked
  9145  0009B8  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9146  0009BA  0E00               	movlw	0
  9147  0009BC  0100               	movlb	0	; () banked
  9148  0009BE  0100               	movlb	0	; () banked
  9149  0009C0  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9150  0009C2  0E00               	movlw	0
  9151  0009C4  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  9152                           
  9153                           ;my_i2c.c: 558: ic_ptr->status = 0x5;
  9154  0009C8  0100               	movlb	0	; () banked
  9155  0009CA  EE20 F019          	lfsr	2,25
  9156  0009CE  0100               	movlb	0	; () banked
  9157  0009D0  51CC               	movf	_ic_ptr& (0+255),w,b
  9158  0009D2  26D9               	addwf	fsr2l,f,c
  9159  0009D4  0100               	movlb	0	; () banked
  9160  0009D6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9161  0009D8  22DA               	addwfc	fsr2h,f,c
  9162  0009DA  0E05               	movlw	5
  9163  0009DC  6EDF               	movwf	indf2,c
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;my_i2c.c: 559: SSPCON2bits.PEN = 1;
  9167  0009DE  84C5               	bsf	4037,2,c	;volatile
  9168  0009E0  0012               	return	
  9169  0009E2                     i2l372:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;my_i2c.c: 564: if (SSPCON2bits.ACKSTAT == 0) {
  9173  0009E2  BCC5               	btfsc	4037,6,c	;volatile
  9174  0009E4  D00D               	goto	i2l3840
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;my_i2c.c: 565: ic_ptr->status = 0x20;
  9178  0009E6  0100               	movlb	0	; () banked
  9179  0009E8  EE20 F019          	lfsr	2,25
  9180  0009EC  0100               	movlb	0	; () banked
  9181  0009EE  51CC               	movf	_ic_ptr& (0+255),w,b
  9182  0009F0  26D9               	addwf	fsr2l,f,c
  9183  0009F2  0100               	movlb	0	; () banked
  9184  0009F4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9185  0009F6  22DA               	addwfc	fsr2h,f,c
  9186  0009F8  0E20               	movlw	32
  9187  0009FA  6EDF               	movwf	indf2,c
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;my_i2c.c: 566: SSPCON2bits.RSEN = 1;
  9191  0009FC  82C5               	bsf	4037,1,c	;volatile
  9192                           
  9193                           ;my_i2c.c: 567: }
  9194  0009FE  0012               	return	
  9195  000A00                     i2l3840:
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;my_i2c.c: 568: else {
  9199                           ;my_i2c.c: 569: ToMainHigh_sendmsg(0, 46, 0);
  9200  000A00  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9201  000A02  0E2E               	movlw	46
  9202  000A04  0100               	movlb	0	; () banked
  9203  000A06  0100               	movlb	0	; () banked
  9204  000A08  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9205  000A0A  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  9206  000A0C  0E00               	movlw	0
  9207  000A0E  0100               	movlb	0	; () banked
  9208  000A10  0100               	movlb	0	; () banked
  9209  000A12  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9210  000A14  0E00               	movlw	0
  9211  000A16  0100               	movlb	0	; () banked
  9212  000A18  0100               	movlb	0	; () banked
  9213  000A1A  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9214  000A1C  0E00               	movlw	0
  9215  000A1E  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  9216                           
  9217                           ;my_i2c.c: 570: ic_ptr->status = 0x5;
  9218  000A22  0100               	movlb	0	; () banked
  9219  000A24  EE20 F019          	lfsr	2,25
  9220  000A28  0100               	movlb	0	; () banked
  9221  000A2A  51CC               	movf	_ic_ptr& (0+255),w,b
  9222  000A2C  26D9               	addwf	fsr2l,f,c
  9223  000A2E  0100               	movlb	0	; () banked
  9224  000A30  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9225  000A32  22DA               	addwfc	fsr2h,f,c
  9226  000A34  0E05               	movlw	5
  9227  000A36  6EDF               	movwf	indf2,c
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;my_i2c.c: 571: SSPCON2bits.PEN = 1;
  9231  000A38  84C5               	bsf	4037,2,c	;volatile
  9232  000A3A  0012               	return	
  9233  000A3C                     i2l3846:
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;my_i2c.c: 576: ic_ptr->status = 0x21;
  9237  000A3C  0100               	movlb	0	; () banked
  9238  000A3E  EE20 F019          	lfsr	2,25
  9239  000A42  0100               	movlb	0	; () banked
  9240  000A44  51CC               	movf	_ic_ptr& (0+255),w,b
  9241  000A46  26D9               	addwf	fsr2l,f,c
  9242  000A48  0100               	movlb	0	; () banked
  9243  000A4A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9244  000A4C  22DA               	addwfc	fsr2h,f,c
  9245  000A4E  0E21               	movlw	33
  9246  000A50  6EDF               	movwf	indf2,c
  9247                           
  9248                           ;my_i2c.c: 577: SSPBUF = ic_ptr->slave_addr | 0x1;
  9249  000A52  0100               	movlb	0	; () banked
  9250  000A54  EE20 F034          	lfsr	2,52
  9251  000A58  0100               	movlb	0	; () banked
  9252  000A5A  51CC               	movf	_ic_ptr& (0+255),w,b
  9253  000A5C  26D9               	addwf	fsr2l,f,c
  9254  000A5E  0100               	movlb	0	; () banked
  9255  000A60  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9256  000A62  22DA               	addwfc	fsr2h,f,c
  9257  000A64  50DF               	movf	indf2,w,c
  9258  000A66  0901               	iorlw	1
  9259  000A68  6EC9               	movwf	4041,c	;volatile
  9260                           
  9261                           ;my_i2c.c: 578: break;
  9262  000A6A  0012               	return	
  9263  000A6C                     i2l376:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;my_i2c.c: 581: if (SSPCON2bits.ACKSTAT == 0) {
  9267  000A6C  BCC5               	btfsc	4037,6,c	;volatile
  9268  000A6E  D00D               	goto	i2l3852
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;my_i2c.c: 582: ic_ptr->status = 0x22;
  9272  000A70  0100               	movlb	0	; () banked
  9273  000A72  EE20 F019          	lfsr	2,25
  9274  000A76  0100               	movlb	0	; () banked
  9275  000A78  51CC               	movf	_ic_ptr& (0+255),w,b
  9276  000A7A  26D9               	addwf	fsr2l,f,c
  9277  000A7C  0100               	movlb	0	; () banked
  9278  000A7E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9279  000A80  22DA               	addwfc	fsr2h,f,c
  9280  000A82  0E22               	movlw	34
  9281  000A84  6EDF               	movwf	indf2,c
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;my_i2c.c: 583: SSPCON2bits.RCEN = 1;
  9285  000A86  86C5               	bsf	4037,3,c	;volatile
  9286                           
  9287                           ;my_i2c.c: 584: }
  9288  000A88  0012               	return	
  9289  000A8A                     i2l3852:
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;my_i2c.c: 585: else {
  9293                           ;my_i2c.c: 586: ToMainHigh_sendmsg(0, 46, 0);
  9294  000A8A  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9295  000A8C  0E2E               	movlw	46
  9296  000A8E  0100               	movlb	0	; () banked
  9297  000A90  0100               	movlb	0	; () banked
  9298  000A92  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9299  000A94  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  9300  000A96  0E00               	movlw	0
  9301  000A98  0100               	movlb	0	; () banked
  9302  000A9A  0100               	movlb	0	; () banked
  9303  000A9C  6F8D               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9304  000A9E  0E00               	movlw	0
  9305  000AA0  0100               	movlb	0	; () banked
  9306  000AA2  0100               	movlb	0	; () banked
  9307  000AA4  6F8C               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9308  000AA6  0E00               	movlw	0
  9309  000AA8  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  9310                           
  9311                           ;my_i2c.c: 587: ic_ptr->status = 0x5;
  9312  000AAC  0100               	movlb	0	; () banked
  9313  000AAE  EE20 F019          	lfsr	2,25
  9314  000AB2  0100               	movlb	0	; () banked
  9315  000AB4  51CC               	movf	_ic_ptr& (0+255),w,b
  9316  000AB6  26D9               	addwf	fsr2l,f,c
  9317  000AB8  0100               	movlb	0	; () banked
  9318  000ABA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9319  000ABC  22DA               	addwfc	fsr2h,f,c
  9320  000ABE  0E05               	movlw	5
  9321  000AC0  6EDF               	movwf	indf2,c
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;my_i2c.c: 588: SSPCON2bits.PEN = 1;
  9325  000AC2  84C5               	bsf	4037,2,c	;volatile
  9326  000AC4  0012               	return	
  9327  000AC6                     i2l379:
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;my_i2c.c: 593: if (SSPSTATbits.BF == 1) {
  9331  000AC6  A0C7               	btfss	4039,0,c	;volatile
  9332  000AC8  0012               	return	
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;my_i2c.c: 594: ic_ptr->status = 0x23;
  9336  000ACA  0100               	movlb	0	; () banked
  9337  000ACC  EE20 F019          	lfsr	2,25
  9338  000AD0  0100               	movlb	0	; () banked
  9339  000AD2  51CC               	movf	_ic_ptr& (0+255),w,b
  9340  000AD4  26D9               	addwf	fsr2l,f,c
  9341  000AD6  0100               	movlb	0	; () banked
  9342  000AD8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9343  000ADA  22DA               	addwfc	fsr2h,f,c
  9344  000ADC  0E23               	movlw	35
  9345  000ADE  6EDF               	movwf	indf2,c
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;my_i2c.c: 595: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  9349  000AE0  0100               	movlb	0	; () banked
  9350  000AE2  EE20 F017          	lfsr	2,23
  9351  000AE6  0100               	movlb	0	; () banked
  9352  000AE8  51CC               	movf	_ic_ptr& (0+255),w,b
  9353  000AEA  26D9               	addwf	fsr2l,f,c
  9354  000AEC  0100               	movlb	0	; () banked
  9355  000AEE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9356  000AF0  22DA               	addwfc	fsr2h,f,c
  9357  000AF2  50DF               	movf	indf2,w,c
  9358  000AF4  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9359  000AF6  503E               	movf	??_i2c_master_int_handler,w,c
  9360  000AF8  0D01               	mullw	1
  9361  000AFA  50F3               	movf	prodl,w,c
  9362  000AFC  0100               	movlb	0	; () banked
  9363  000AFE  0100               	movlb	0	; () banked
  9364  000B00  25CC               	addwf	_ic_ptr& (0+255),w,b
  9365  000B02  6ED9               	movwf	fsr2l,c
  9366  000B04  50F4               	movf	prodh,w,c
  9367  000B06  0100               	movlb	0	; () banked
  9368  000B08  0100               	movlb	0	; () banked
  9369  000B0A  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9370  000B0C  6EDA               	movwf	fsr2h,c
  9371  000B0E  CFC9 FFDF          	movff	4041,indf2	;volatile
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;my_i2c.c: 596: ic_ptr->bufind++;
  9375  000B12  0100               	movlb	0	; () banked
  9376  000B14  EE20 F017          	lfsr	2,23
  9377  000B18  0100               	movlb	0	; () banked
  9378  000B1A  51CC               	movf	_ic_ptr& (0+255),w,b
  9379  000B1C  26D9               	addwf	fsr2l,f,c
  9380  000B1E  0100               	movlb	0	; () banked
  9381  000B20  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9382  000B22  22DA               	addwfc	fsr2h,f,c
  9383  000B24  2ADF               	incf	indf2,f,c
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;my_i2c.c: 597: if (ic_ptr->bufind < ic_ptr->buflen) {
  9387  000B26  0100               	movlb	0	; () banked
  9388  000B28  EE20 F017          	lfsr	2,23
  9389  000B2C  0100               	movlb	0	; () banked
  9390  000B2E  51CC               	movf	_ic_ptr& (0+255),w,b
  9391  000B30  26D9               	addwf	fsr2l,f,c
  9392  000B32  0100               	movlb	0	; () banked
  9393  000B34  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9394  000B36  22DA               	addwfc	fsr2h,f,c
  9395  000B38  50DF               	movf	indf2,w,c
  9396  000B3A  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9397  000B3C  0100               	movlb	0	; () banked
  9398  000B3E  EE20 F016          	lfsr	2,22
  9399  000B42  0100               	movlb	0	; () banked
  9400  000B44  51CC               	movf	_ic_ptr& (0+255),w,b
  9401  000B46  26D9               	addwf	fsr2l,f,c
  9402  000B48  0100               	movlb	0	; () banked
  9403  000B4A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9404  000B4C  22DA               	addwfc	fsr2h,f,c
  9405  000B4E  50DF               	movf	indf2,w,c
  9406  000B50  5C3E               	subwf	??_i2c_master_int_handler,w,c
  9407  000B52  B0D8               	btfsc	status,0,c
  9408  000B54  D003               	goto	i2l381
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;my_i2c.c: 598: SSPCON2bits.ACKDT = 0;
  9412  000B56  9AC5               	bcf	4037,5,c	;volatile
  9413                           
  9414                           ;my_i2c.c: 599: SSPCON2bits.ACKEN = 1;
  9415  000B58  88C5               	bsf	4037,4,c	;volatile
  9416                           
  9417                           ;my_i2c.c: 600: }
  9418  000B5A  0012               	return	
  9419  000B5C                     i2l381:
  9420                           
  9421                           ; BSR set to: 0
  9422                           ;my_i2c.c: 601: else {
  9423                           ;my_i2c.c: 602: SSPCON2bits.ACKDT = 1;
  9424  000B5C  8AC5               	bsf	4037,5,c	;volatile
  9425                           
  9426                           ;my_i2c.c: 603: SSPCON2bits.ACKEN = 1;
  9427  000B5E  88C5               	bsf	4037,4,c	;volatile
  9428  000B60  0012               	return	
  9429  000B62                     i2l3868:
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;my_i2c.c: 609: if (ic_ptr->bufind < ic_ptr->buflen) {
  9433  000B62  0100               	movlb	0	; () banked
  9434  000B64  EE20 F017          	lfsr	2,23
  9435  000B68  0100               	movlb	0	; () banked
  9436  000B6A  51CC               	movf	_ic_ptr& (0+255),w,b
  9437  000B6C  26D9               	addwf	fsr2l,f,c
  9438  000B6E  0100               	movlb	0	; () banked
  9439  000B70  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9440  000B72  22DA               	addwfc	fsr2h,f,c
  9441  000B74  50DF               	movf	indf2,w,c
  9442  000B76  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9443  000B78  0100               	movlb	0	; () banked
  9444  000B7A  EE20 F016          	lfsr	2,22
  9445  000B7E  0100               	movlb	0	; () banked
  9446  000B80  51CC               	movf	_ic_ptr& (0+255),w,b
  9447  000B82  26D9               	addwf	fsr2l,f,c
  9448  000B84  0100               	movlb	0	; () banked
  9449  000B86  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9450  000B88  22DA               	addwfc	fsr2h,f,c
  9451  000B8A  50DF               	movf	indf2,w,c
  9452  000B8C  5C3E               	subwf	??_i2c_master_int_handler,w,c
  9453  000B8E  B0D8               	btfsc	status,0,c
  9454  000B90  D00D               	goto	i2l3874
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;my_i2c.c: 610: ic_ptr->status = 0x22;
  9458  000B92  0100               	movlb	0	; () banked
  9459  000B94  EE20 F019          	lfsr	2,25
  9460  000B98  0100               	movlb	0	; () banked
  9461  000B9A  51CC               	movf	_ic_ptr& (0+255),w,b
  9462  000B9C  26D9               	addwf	fsr2l,f,c
  9463  000B9E  0100               	movlb	0	; () banked
  9464  000BA0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9465  000BA2  22DA               	addwfc	fsr2h,f,c
  9466  000BA4  0E22               	movlw	34
  9467  000BA6  6EDF               	movwf	indf2,c
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;my_i2c.c: 611: SSPCON2bits.RCEN = 1;
  9471  000BA8  86C5               	bsf	4037,3,c	;volatile
  9472                           
  9473                           ;my_i2c.c: 612: }
  9474  000BAA  0012               	return	
  9475  000BAC                     i2l3874:
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;my_i2c.c: 613: else {
  9479                           ;my_i2c.c: 614: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
  9480                           ;my_i2c.c: 615: (void *)(ic_ptr->buffer));
  9481  000BAC  6E3E               	movwf	??_i2c_master_int_handler& (0+255),c
  9482  000BAE  0E2D               	movlw	45
  9483  000BB0  0100               	movlb	0	; () banked
  9484  000BB2  0100               	movlb	0	; () banked
  9485  000BB4  6F8B               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9486  000BB6  503E               	movf	??_i2c_master_int_handler& (0+255),w,c
  9487  000BB8  0100               	movlb	0	; () banked
  9488  000BBA  0100               	movlb	0	; () banked
  9489  000BBC  C0CD  F08D         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  9490  000BC0  0100               	movlb	0	; () banked
  9491  000BC2  0100               	movlb	0	; () banked
  9492  000BC4  C0CC  F08C         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  9493  000BC8  0100               	movlb	0	; () banked
  9494  000BCA  EE20 F016          	lfsr	2,22
  9495  000BCE  0100               	movlb	0	; () banked
  9496  000BD0  51CC               	movf	_ic_ptr& (0+255),w,b
  9497  000BD2  26D9               	addwf	fsr2l,f,c
  9498  000BD4  0100               	movlb	0	; () banked
  9499  000BD6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9500  000BD8  22DA               	addwfc	fsr2h,f,c
  9501  000BDA  50DF               	movf	indf2,w,c
  9502  000BDC  EC5B  F012         	call	i2_ToMainHigh_sendmsg
  9503                           
  9504                           ;my_i2c.c: 616: ic_ptr->status = 0x5;
  9505  000BE0  0100               	movlb	0	; () banked
  9506  000BE2  EE20 F019          	lfsr	2,25
  9507  000BE6  0100               	movlb	0	; () banked
  9508  000BE8  51CC               	movf	_ic_ptr& (0+255),w,b
  9509  000BEA  26D9               	addwf	fsr2l,f,c
  9510  000BEC  0100               	movlb	0	; () banked
  9511  000BEE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9512  000BF0  22DA               	addwfc	fsr2h,f,c
  9513  000BF2  0E05               	movlw	5
  9514  000BF4  6EDF               	movwf	indf2,c
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;my_i2c.c: 617: SSPCON2bits.PEN = 1;
  9518  000BF6  84C5               	bsf	4037,2,c	;volatile
  9519  000BF8  0012               	return	
  9520  000BFA                     i2l3882:
  9521  000BFA  0100               	movlb	0	; () banked
  9522  000BFC  EE20 F019          	lfsr	2,25
  9523  000C00  0100               	movlb	0	; () banked
  9524  000C02  51CC               	movf	_ic_ptr& (0+255),w,b
  9525  000C04  26D9               	addwf	fsr2l,f,c
  9526  000C06  0100               	movlb	0	; () banked
  9527  000C08  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  9528  000C0A  22DA               	addwfc	fsr2h,f,c
  9529  000C0C  50DF               	movf	indf2,w,c
  9530                           
  9531                           ; Switch size 1, requested type "space"
  9532                           ; Number of cases is 11, Range of values is 9 to 35
  9533                           ; switch strategies available:
  9534                           ; Name         Instructions Cycles
  9535                           ; simple_byte           34    18 (average)
  9536                           ;	Chosen strategy is simple_byte
  9537  000C0E  0A09               	xorlw	9	; case 9
  9538  000C10  B4D8               	btfsc	status,2,c
  9539  000C12  D575               	goto	i2l3782
  9540  000C14  0A19               	xorlw	25	; case 16
  9541  000C16  B4D8               	btfsc	status,2,c
  9542  000C18  D66B               	goto	i2l366
  9543  000C1A  0A01               	xorlw	1	; case 17
  9544  000C1C  B4D8               	btfsc	status,2,c
  9545  000C1E  D58A               	goto	i2l357
  9546  000C20  0A03               	xorlw	3	; case 18
  9547  000C22  B4D8               	btfsc	status,2,c
  9548  000C24  D61B               	goto	i2l362
  9549  000C26  0A01               	xorlw	1	; case 19
  9550  000C28  B4D8               	btfsc	status,2,c
  9551  000C2A  D645               	goto	i2l3816
  9552  000C2C  0A07               	xorlw	7	; case 20
  9553  000C2E  B4D8               	btfsc	status,2,c
  9554  000C30  D696               	goto	i2l369
  9555  000C32  0A01               	xorlw	1	; case 21
  9556  000C34  B4D8               	btfsc	status,2,c
  9557  000C36  D6D5               	goto	i2l372
  9558  000C38  0A35               	xorlw	53	; case 32
  9559  000C3A  B4D8               	btfsc	status,2,c
  9560  000C3C  D6FF               	goto	i2l3846
  9561  000C3E  0A01               	xorlw	1	; case 33
  9562  000C40  B4D8               	btfsc	status,2,c
  9563  000C42  D714               	goto	i2l376
  9564  000C44  0A03               	xorlw	3	; case 34
  9565  000C46  B4D8               	btfsc	status,2,c
  9566  000C48  D73E               	goto	i2l379
  9567  000C4A  0A01               	xorlw	1	; case 35
  9568  000C4C  A4D8               	btfss	status,2,c
  9569  000C4E  0012               	return	
  9570  000C50  D788               	goto	i2l3868
  9571  000C52                     __end_of_i2c_master_int_handler:
  9572                           	opt stack 0
  9573                           pclatu	equ	0xFFB
  9574                           pclath	equ	0xFFA
  9575                           tblptru	equ	0xFF8
  9576                           tblptrh	equ	0xFF7
  9577                           tblptrl	equ	0xFF6
  9578                           tablat	equ	0xFF5
  9579                           prodh	equ	0xFF4
  9580                           prodl	equ	0xFF3
  9581                           intcon	equ	0xFF2
  9582                           postinc0	equ	0xFEE
  9583                           fsr0h	equ	0xFEA
  9584                           fsr0l	equ	0xFE9
  9585                           wreg	equ	0xFE8
  9586                           indf1	equ	0xFE7
  9587                           fsr1h	equ	0xFE2
  9588                           fsr1l	equ	0xFE1
  9589                           bsr	equ	0xFE0
  9590                           indf2	equ	0xFDF
  9591                           postinc2	equ	0xFDE
  9592                           postdec2	equ	0xFDD
  9593                           fsr2h	equ	0xFDA
  9594                           fsr2l	equ	0xFD9
  9595                           status	equ	0xFD8
  9596                           
  9597 ;; *************** function i2_ToMainHigh_sendmsg *****************
  9598 ;; Defined at:
  9599 ;;		line 126 in file "source/messages.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  length          1    wreg     unsigned char 
  9602 ;;  msgtype         1   11[BANK0 ] unsigned char 
  9603 ;;  data            2   12[BANK0 ] PTR void 
  9604 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  9605 ;;		 -> motor_lthread@message(2), main@ic(77), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  length          1   60[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      char 
  9610 ;; Registers used:
  9611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9617 ;;      Params:         0       3       0       0       0
  9618 ;;      Locals:         1       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0
  9620 ;;      Totals:         1       3       0       0       0
  9621 ;;Total ram usage:        4 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:    2
  9624 ;; This function calls:
  9625 ;;		i2_send_msg
  9626 ;; This function is called by:
  9627 ;;		_i2c_slave_int_handler
  9628 ;;		_i2c_master_int_handler
  9629 ;;		_timer0_int_handler
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text47
  9634  0024B6                     __ptext47:
  9635                           	opt stack 0
  9636  0024B6                     i2_ToMainHigh_sendmsg:
  9637                           	opt stack 15
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;incstack = 0
  9641                           ;i2ToMainHigh_sendmsg@length stored from wreg
  9642  0024B6  CFE8 F03D          	movff	wreg,i2ToMainHigh_sendmsg@length
  9643                           
  9644                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9645                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  9646  0024BA  0101               	movlb	1	; () banked
  9647  0024BC  0E01               	movlw	high _ToMainHigh_MQ
  9648  0024BE  0100               	movlb	0	; () banked
  9649  0024C0  0100               	movlb	0	; () banked
  9650  0024C2  6F81               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9651  0024C4  0101               	movlb	1	; () banked
  9652  0024C6  0E94               	movlw	low _ToMainHigh_MQ
  9653  0024C8  0100               	movlb	0	; () banked
  9654  0024CA  0100               	movlb	0	; () banked
  9655  0024CC  6F80               	movwf	i2send_msg@qptr& (0+255),b
  9656  0024CE  C03D  F082         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  9657  0024D2  C08B  F083         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9658  0024D6  0100               	movlb	0	; () banked
  9659  0024D8  0100               	movlb	0	; () banked
  9660  0024DA  C08D  F085         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9661  0024DE  0100               	movlb	0	; () banked
  9662  0024E0  0100               	movlb	0	; () banked
  9663  0024E2  C08C  F084         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  9664  0024E6  EC80  F00C         	call	i2_send_msg	;wreg free
  9665  0024EA  0012               	return	
  9666  0024EC                     __end_ofi2_ToMainHigh_sendmsg:
  9667                           	opt stack 0
  9668                           pclatu	equ	0xFFB
  9669                           pclath	equ	0xFFA
  9670                           tblptru	equ	0xFF8
  9671                           tblptrh	equ	0xFF7
  9672                           tblptrl	equ	0xFF6
  9673                           tablat	equ	0xFF5
  9674                           prodh	equ	0xFF4
  9675                           prodl	equ	0xFF3
  9676                           intcon	equ	0xFF2
  9677                           postinc0	equ	0xFEE
  9678                           fsr0h	equ	0xFEA
  9679                           fsr0l	equ	0xFE9
  9680                           wreg	equ	0xFE8
  9681                           indf1	equ	0xFE7
  9682                           fsr1h	equ	0xFE2
  9683                           fsr1l	equ	0xFE1
  9684                           bsr	equ	0xFE0
  9685                           indf2	equ	0xFDF
  9686                           postinc2	equ	0xFDE
  9687                           postdec2	equ	0xFDD
  9688                           fsr2h	equ	0xFDA
  9689                           fsr2l	equ	0xFD9
  9690                           status	equ	0xFD8
  9691                           
  9692 ;; *************** function i2_send_msg *****************
  9693 ;; Defined at:
  9694 ;;		line 24 in file "source/messages.c"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9697 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9698 ;;  length          1    2[BANK0 ] unsigned char 
  9699 ;;  msgtype         1    3[BANK0 ] unsigned char 
  9700 ;;  data            2    4[BANK0 ] PTR void 
  9701 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  9702 ;;		 -> motor_lthread@message(2), main@ic(77), main@uc(23), 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  9705 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9706 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9707 ;;  send_msg        2    6[BANK0 ] unsigned int 
  9708 ;;  send_msg        1    8[BANK0 ] unsigned char 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      char 
  9711 ;; Registers used:
  9712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9718 ;;      Params:         0       6       0       0       0
  9719 ;;      Locals:         0       5       0       0       0
  9720 ;;      Temps:          1       0       0       0       0
  9721 ;;      Totals:         1      11       0       0       0
  9722 ;;Total ram usage:       12 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    1
  9725 ;; This function calls:
  9726 ;;		i2_memcpy
  9727 ;; This function is called by:
  9728 ;;		i2_ToMainHigh_sendmsg
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text48
  9733  001900                     __ptext48:
  9734                           	opt stack 0
  9735  001900                     i2_send_msg:
  9736                           	opt stack 15
  9737                           
  9738                           ;messages.c: 25: unsigned char slot;
  9739                           ;messages.c: 27: msg *qmsg;
  9740                           ;messages.c: 28: size_t tlength = length;
  9741                           
  9742                           ;incstack = 0
  9743  001900  0100               	movlb	0	; () banked
  9744  001902  0100               	movlb	0	; () banked
  9745  001904  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  9746  001908  0100               	movlb	0	; () banked
  9747  00190A  0100               	movlb	0	; () banked
  9748  00190C  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9752  00190E  0100               	movlb	0	; () banked
  9753  001910  EE20 F064          	lfsr	2,100
  9754  001914  0100               	movlb	0	; () banked
  9755  001916  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9756  001918  26D9               	addwf	fsr2l,f,c
  9757  00191A  0100               	movlb	0	; () banked
  9758  00191C  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9759  00191E  22DA               	addwfc	fsr2h,f,c
  9760  001920  50DF               	movf	indf2,w,c
  9761  001922  0100               	movlb	0	; () banked
  9762  001924  0100               	movlb	0	; () banked
  9763  001926  6F88               	movwf	i2send_msg@slot& (0+255),b
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9767  001928  0100               	movlb	0	; () banked
  9768  00192A  0100               	movlb	0	; () banked
  9769  00192C  5188               	movf	i2send_msg@slot& (0+255),w,b
  9770  00192E  0D19               	mullw	25
  9771  001930  50F3               	movf	prodl,w,c
  9772  001932  0100               	movlb	0	; () banked
  9773  001934  0100               	movlb	0	; () banked
  9774  001936  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  9775  001938  0100               	movlb	0	; () banked
  9776  00193A  0100               	movlb	0	; () banked
  9777  00193C  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  9778  00193E  50F4               	movf	prodh,w,c
  9779  001940  0100               	movlb	0	; () banked
  9780  001942  0100               	movlb	0	; () banked
  9781  001944  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9782  001946  0100               	movlb	0	; () banked
  9783  001948  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;messages.c: 41: if (qmsg->full != 0) {
  9787  00194A  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9788  00194E  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9789  001952  50DF               	movf	indf2,w,c
  9790  001954  B4D8               	btfsc	status,2,c
  9791  001956  D002               	goto	i2l4044
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;messages.c: 42: return (-1);
  9795  001958  0EFF               	movlw	255
  9796  00195A  0012               	return	
  9797  00195C                     i2l4044:
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;messages.c: 43: }
  9801                           ;messages.c: 46: qmsg->length = length;
  9802  00195C  0100               	movlb	0	; () banked
  9803  00195E  EE20 F001          	lfsr	2,1
  9804  001962  0100               	movlb	0	; () banked
  9805  001964  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9806  001966  26D9               	addwf	fsr2l,f,c
  9807  001968  0100               	movlb	0	; () banked
  9808  00196A  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9809  00196C  22DA               	addwfc	fsr2h,f,c
  9810  00196E  0100               	movlb	0	; () banked
  9811  001970  C082  FFDF         	movff	i2send_msg@length,indf2
  9812                           
  9813                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9814  001974  0100               	movlb	0	; () banked
  9815  001976  EE20 F002          	lfsr	2,2
  9816  00197A  0100               	movlb	0	; () banked
  9817  00197C  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9818  00197E  26D9               	addwf	fsr2l,f,c
  9819  001980  0100               	movlb	0	; () banked
  9820  001982  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9821  001984  22DA               	addwfc	fsr2h,f,c
  9822  001986  0100               	movlb	0	; () banked
  9823  001988  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9827  00198C  0E03               	movlw	3
  9828  00198E  0100               	movlb	0	; () banked
  9829  001990  0100               	movlb	0	; () banked
  9830  001992  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  9831  001994  6E32               	movwf	i2memcpy@d1,c
  9832  001996  0E00               	movlw	0
  9833  001998  0100               	movlb	0	; () banked
  9834  00199A  0100               	movlb	0	; () banked
  9835  00199C  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9836  00199E  6E33               	movwf	i2memcpy@d1+1,c
  9837  0019A0  0100               	movlb	0	; () banked
  9838  0019A2  C085  F035         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9839  0019A6  0100               	movlb	0	; () banked
  9840  0019A8  C084  F034         	movff	i2send_msg@data,i2memcpy@s1
  9841  0019AC  C086  F036         	movff	i2send_msg@tlength,i2memcpy@n
  9842  0019B0  C087  F037         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9843  0019B4  EC05  F012         	call	i2_memcpy	;wreg free
  9844                           
  9845                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9846  0019B8  0100               	movlb	0	; () banked
  9847  0019BA  EE20 F064          	lfsr	2,100
  9848  0019BE  0100               	movlb	0	; () banked
  9849  0019C0  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9850  0019C2  26D9               	addwf	fsr2l,f,c
  9851  0019C4  0100               	movlb	0	; () banked
  9852  0019C6  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9853  0019C8  22DA               	addwfc	fsr2h,f,c
  9854  0019CA  0100               	movlb	0	; () banked
  9855  0019CC  EE10 F064          	lfsr	1,100
  9856  0019D0  0100               	movlb	0	; () banked
  9857  0019D2  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9858  0019D4  26E1               	addwf	fsr1l,f,c
  9859  0019D6  0100               	movlb	0	; () banked
  9860  0019D8  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9861  0019DA  22E2               	addwfc	fsr1h,f,c
  9862  0019DC  50E7               	movf	indf1,w,c
  9863  0019DE  6E3C               	movwf	??i2_send_msg& (0+255),c
  9864  0019E0  283C               	incf	??i2_send_msg,w,c
  9865  0019E2  0B03               	andlw	3
  9866  0019E4  6EDF               	movwf	indf2,c
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;messages.c: 59: qmsg->full = 1;
  9870  0019E6  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9871  0019EA  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9872  0019EE  0E01               	movlw	1
  9873  0019F0  6EDF               	movwf	indf2,c
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;messages.c: 60: return (1);
  9877  0019F2  0E01               	movlw	1
  9878  0019F4  0012               	return	
  9879  0019F6                     __end_ofi2_send_msg:
  9880                           	opt stack 0
  9881                           pclatu	equ	0xFFB
  9882                           pclath	equ	0xFFA
  9883                           tblptru	equ	0xFF8
  9884                           tblptrh	equ	0xFF7
  9885                           tblptrl	equ	0xFF6
  9886                           tablat	equ	0xFF5
  9887                           prodh	equ	0xFF4
  9888                           prodl	equ	0xFF3
  9889                           intcon	equ	0xFF2
  9890                           postinc0	equ	0xFEE
  9891                           fsr0h	equ	0xFEA
  9892                           fsr0l	equ	0xFE9
  9893                           wreg	equ	0xFE8
  9894                           indf1	equ	0xFE7
  9895                           fsr1h	equ	0xFE2
  9896                           fsr1l	equ	0xFE1
  9897                           bsr	equ	0xFE0
  9898                           indf2	equ	0xFDF
  9899                           postinc2	equ	0xFDE
  9900                           postdec2	equ	0xFDD
  9901                           fsr2h	equ	0xFDA
  9902                           fsr2l	equ	0xFD9
  9903                           status	equ	0xFD8
  9904                           
  9905 ;; *************** function i2_memcpy *****************
  9906 ;; Defined at:
  9907 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  d1              2   49[COMRAM] PTR void 
  9910 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9911 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9912 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9913 ;;  s1              2   51[COMRAM] PTR const void 
  9914 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9915 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9916 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  9917 ;;		 -> motor_lthread@message(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9918 ;;		 -> ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  9919 ;;  n               2   53[COMRAM] unsigned int 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  memcpy          2   57[COMRAM] PTR const unsigned char 
  9922 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9923 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9924 ;;		 -> timer0_int_handler@val(2), parser_lthread@data_1510(9), NULL(0), i2c_slave_int_handler@error_buf(3), 
  9925 ;;		 -> motor_lthread@message(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9926 ;;		 -> ToMainLow_MQ(102), main@ic(77), main@uc(23), 
  9927 ;;  memcpy          2   55[COMRAM] PTR unsigned char 
  9928 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9929 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9930 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  2   49[COMRAM] PTR void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9940 ;;      Params:         6       0       0       0       0
  9941 ;;      Locals:         4       0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0
  9943 ;;      Totals:        10       0       0       0       0
  9944 ;;Total ram usage:       10 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; This function calls:
  9947 ;;		Nothing
  9948 ;; This function is called by:
  9949 ;;		i2_send_msg
  9950 ;;		i2_recv_msg
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           	psect	text49
  9955  00240A                     __ptext49:
  9956                           	opt stack 0
  9957  00240A                     i2_memcpy:
  9958                           	opt stack 15
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;incstack = 0
  9962  00240A  C035  F03B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9963  00240E  C034  F03A         	movff	i2memcpy@s1,i2memcpy@s
  9964  002412  C033  F039         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9965  002416  C032  F038         	movff	i2memcpy@d1,i2memcpy@d
  9966  00241A  D00E               	goto	i2l4110
  9967  00241C                     i2l4104:
  9968  00241C  C03A  FFD9         	movff	i2memcpy@s,fsr2l
  9969  002420  C03B  FFDA         	movff	i2memcpy@s+1,fsr2h
  9970  002424  C038  FFE1         	movff	i2memcpy@d,fsr1l
  9971  002428  C039  FFE2         	movff	i2memcpy@d+1,fsr1h
  9972  00242C  CFDF FFE7          	movff	indf2,indf1
  9973  002430  4A3A               	infsnz	i2memcpy@s,f,c
  9974  002432  2A3B               	incf	i2memcpy@s+1,f,c
  9975  002434  4A38               	infsnz	i2memcpy@d,f,c
  9976  002436  2A39               	incf	i2memcpy@d+1,f,c
  9977  002438                     i2l4110:
  9978  002438  0636               	decf	i2memcpy@n,f,c
  9979  00243A  A0D8               	btfss	status,0,c
  9980  00243C  0637               	decf	i2memcpy@n+1,f,c
  9981  00243E  2836               	incf	i2memcpy@n& (0+255),w,c
  9982  002440  B4D8               	btfsc	status,2,c
  9983  002442  2837               	incf	(i2memcpy@n+1)& (0+255),w,c
  9984  002444  B4D8               	btfsc	status,2,c
  9985                           
  9986                           ;	Return value of i2_memcpy is never used
  9987  002446  0012               	return	
  9988  002448  D7E9               	goto	i2l4104
  9989  00244A                     __end_ofi2_memcpy:
  9990                           	opt stack 0
  9991                           pclatu	equ	0xFFB
  9992                           pclath	equ	0xFFA
  9993                           tblptru	equ	0xFF8
  9994                           tblptrh	equ	0xFF7
  9995                           tblptrl	equ	0xFF6
  9996                           tablat	equ	0xFF5
  9997                           prodh	equ	0xFF4
  9998                           prodl	equ	0xFF3
  9999                           intcon	equ	0xFF2
 10000                           postinc0	equ	0xFEE
 10001                           fsr0h	equ	0xFEA
 10002                           fsr0l	equ	0xFE9
 10003                           wreg	equ	0xFE8
 10004                           indf1	equ	0xFE7
 10005                           fsr1h	equ	0xFE2
 10006                           fsr1l	equ	0xFE1
 10007                           bsr	equ	0xFE0
 10008                           indf2	equ	0xFDF
 10009                           postinc2	equ	0xFDE
 10010                           postdec2	equ	0xFDD
 10011                           fsr2h	equ	0xFDA
 10012                           fsr2l	equ	0xFD9
 10013                           status	equ	0xFD8
 10014                           
 10015 ;; *************** function _SleepIfOkay *****************
 10016 ;; Defined at:
 10017 ;;		line 228 in file "source/messages.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;		None
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;		None               void
 10024 ;; Registers used:
 10025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10031 ;;      Params:         0       0       0       0       0
 10032 ;;      Locals:         0       0       0       0       0
 10033 ;;      Temps:          0       0       0       0       0
 10034 ;;      Totals:         0       0       0       0       0
 10035 ;;Total ram usage:        0 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; Hardware stack levels required when called:    2
 10038 ;; This function calls:
 10039 ;;		_enter_sleep_mode
 10040 ;;		i2_check_msg
 10041 ;;		i2_in_high_int
 10042 ;;		i2_in_low_int
 10043 ;; This function is called by:
 10044 ;;		_InterruptHandlerHigh
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           	psect	text50
 10049  00222C                     __ptext50:
 10050                           	opt stack 0
 10051  00222C                     _SleepIfOkay:
 10052                           	opt stack 16
 10053                           
 10054                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 10055                           
 10056                           ;incstack = 0
 10057  00222C  6649               	tstfsz	_MQ_Main_Willing_to_block,c
 10058  00222E  D001               	goto	i2l2490
 10059  002230  0012               	return	
 10060  002232                     i2l2490:
 10061                           
 10062                           ;messages.c: 232: }
 10063                           ;messages.c: 235: if (in_low_int()) {
 10064  002232  EC8E  F012         	call	i2_in_low_int	;wreg free
 10065  002236  5035               	movf	?i2_in_low_int+1,w,c
 10066  002238  1034               	iorwf	?i2_in_low_int,w,c
 10067  00223A  A4D8               	btfss	status,2,c
 10068  00223C  0012               	return	
 10069                           
 10070                           ;messages.c: 237: }
 10071                           ;messages.c: 240: if (!in_high_int()) {
 10072                           
 10073                           ;messages.c: 236: return;
 10074  00223E  EC4A  F013         	call	i2_in_high_int	;wreg free
 10075  002242  5033               	movf	?i2_in_high_int+1,w,c
 10076  002244  1032               	iorwf	?i2_in_high_int,w,c
 10077  002246  B4D8               	btfsc	status,2,c
 10078  002248  0012               	return	
 10079                           
 10080                           ;messages.c: 242: }
 10081                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 10082                           
 10083                           ;messages.c: 241: return;
 10084  00224A  0101               	movlb	1	; () banked
 10085  00224C  0E01               	movlw	high _ToMainHigh_MQ
 10086  00224E  6E33               	movwf	i2check_msg@qptr+1,c
 10087  002250  0101               	movlb	1	; () banked
 10088  002252  0E94               	movlw	low _ToMainHigh_MQ
 10089  002254  6E32               	movwf	i2check_msg@qptr,c
 10090  002256  ECCD  F012         	call	i2_check_msg	;wreg free
 10091  00225A  0900               	iorlw	0
 10092  00225C  A4D8               	btfss	status,2,c
 10093  00225E  0012               	return	
 10094                           
 10095                           ;messages.c: 249: }
 10096                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 10097                           
 10098                           ;messages.c: 248: return;
 10099  002260  0102               	movlb	2	; () banked
 10100  002262  0E02               	movlw	high _ToMainLow_MQ
 10101  002264  6E33               	movwf	i2check_msg@qptr+1,c
 10102  002266  0102               	movlb	2	; () banked
 10103  002268  0E66               	movlw	low _ToMainLow_MQ
 10104  00226A  6E32               	movwf	i2check_msg@qptr,c
 10105  00226C  ECCD  F012         	call	i2_check_msg	;wreg free
 10106  002270  0900               	iorlw	0
 10107  002272  B4D8               	btfsc	status,2,c
 10108                           
 10109                           ;messages.c: 252: }
 10110                           ;messages.c: 253: enter_sleep_mode();
 10111                           
 10112                           ;messages.c: 251: return;
 10113  002274  EC54  F013         	call	_enter_sleep_mode	;wreg free
 10114  002278  0012               	return	
 10115  00227A                     __end_of_SleepIfOkay:
 10116                           	opt stack 0
 10117                           pclatu	equ	0xFFB
 10118                           pclath	equ	0xFFA
 10119                           tblptru	equ	0xFF8
 10120                           tblptrh	equ	0xFF7
 10121                           tblptrl	equ	0xFF6
 10122                           tablat	equ	0xFF5
 10123                           prodh	equ	0xFF4
 10124                           prodl	equ	0xFF3
 10125                           intcon	equ	0xFF2
 10126                           postinc0	equ	0xFEE
 10127                           fsr0h	equ	0xFEA
 10128                           fsr0l	equ	0xFE9
 10129                           wreg	equ	0xFE8
 10130                           indf1	equ	0xFE7
 10131                           fsr1h	equ	0xFE2
 10132                           fsr1l	equ	0xFE1
 10133                           bsr	equ	0xFE0
 10134                           indf2	equ	0xFDF
 10135                           postinc2	equ	0xFDE
 10136                           postdec2	equ	0xFDD
 10137                           fsr2h	equ	0xFDA
 10138                           fsr2l	equ	0xFD9
 10139                           status	equ	0xFD8
 10140                           
 10141 ;; *************** function i2_in_low_int *****************
 10142 ;; Defined at:
 10143 ;;		line 30 in file "source/interrupts.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;		None
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;		None
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  2   51[COMRAM] int 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0, cstack
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10157 ;;      Params:         2       0       0       0       0
 10158 ;;      Locals:         0       0       0       0       0
 10159 ;;      Temps:          0       0       0       0       0
 10160 ;;      Totals:         2       0       0       0       0
 10161 ;;Total ram usage:        2 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:    1
 10164 ;; This function calls:
 10165 ;;		i2_in_high_int
 10166 ;; This function is called by:
 10167 ;;		_SleepIfOkay
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text51
 10172  00251C                     __ptext51:
 10173                           	opt stack 0
 10174  00251C                     i2_in_low_int:
 10175                           	opt stack 16
 10176                           
 10177                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 10178                           
 10179                           ;incstack = 0
 10180  00251C  ACF2               	btfss	intcon,6,c	;volatile
 10181  00251E  D005               	goto	i2l3280
 10182                           
 10183                           ;interrupts.c: 32: return (0);
 10184  002520  0E00               	movlw	0
 10185  002522  6E35               	movwf	?i2_in_low_int+1,c
 10186  002524  0E00               	movlw	0
 10187  002526  6E34               	movwf	?i2_in_low_int,c
 10188  002528  0012               	return	
 10189  00252A                     i2l3280:
 10190  00252A  EC4A  F013         	call	i2_in_high_int	;wreg free
 10191  00252E  5033               	movf	?i2_in_high_int+1,w,c
 10192  002530  1032               	iorwf	?i2_in_high_int,w,c
 10193  002532  B4D8               	btfsc	status,2,c
 10194  002534  D005               	goto	i2l3288
 10195                           
 10196                           ;interrupts.c: 34: return (0);
 10197  002536  0E00               	movlw	0
 10198  002538  6E35               	movwf	?i2_in_low_int+1,c
 10199  00253A  0E00               	movlw	0
 10200  00253C  6E34               	movwf	?i2_in_low_int,c
 10201  00253E  0012               	return	
 10202  002540                     i2l3288:
 10203                           
 10204                           ;interrupts.c: 36: return (1);
 10205  002540  0E00               	movlw	0
 10206  002542  6E35               	movwf	?i2_in_low_int+1,c
 10207  002544  0E01               	movlw	1
 10208  002546  6E34               	movwf	?i2_in_low_int,c
 10209  002548  0012               	return	
 10210  00254A                     __end_ofi2_in_low_int:
 10211                           	opt stack 0
 10212                           pclatu	equ	0xFFB
 10213                           pclath	equ	0xFFA
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           intcon	equ	0xFF2
 10221                           postinc0	equ	0xFEE
 10222                           fsr0h	equ	0xFEA
 10223                           fsr0l	equ	0xFE9
 10224                           wreg	equ	0xFE8
 10225                           indf1	equ	0xFE7
 10226                           fsr1h	equ	0xFE2
 10227                           fsr1l	equ	0xFE1
 10228                           bsr	equ	0xFE0
 10229                           indf2	equ	0xFDF
 10230                           postinc2	equ	0xFDE
 10231                           postdec2	equ	0xFDD
 10232                           fsr2h	equ	0xFDA
 10233                           fsr2l	equ	0xFD9
 10234                           status	equ	0xFD8
 10235                           
 10236 ;; *************** function i2_in_high_int *****************
 10237 ;; Defined at:
 10238 ;;		line 22 in file "source/interrupts.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;		None
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;		None
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  2   49[COMRAM] int 
 10245 ;; Registers used:
 10246 ;;		wreg, status,2
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10252 ;;      Params:         2       0       0       0       0
 10253 ;;      Locals:         0       0       0       0       0
 10254 ;;      Temps:          0       0       0       0       0
 10255 ;;      Totals:         2       0       0       0       0
 10256 ;;Total ram usage:        2 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; This function calls:
 10259 ;;		Nothing
 10260 ;; This function is called by:
 10261 ;;		_SleepIfOkay
 10262 ;;		i2_in_low_int
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text52
 10267  002694                     __ptext52:
 10268                           	opt stack 0
 10269  002694                     i2_in_high_int:
 10270                           	opt stack 16
 10271                           
 10272                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 10273                           
 10274                           ;incstack = 0
 10275  002694  0E00               	movlw	0
 10276  002696  AEF2               	btfss	intcon,7,c	;volatile
 10277  002698  0E01               	movlw	1
 10278  00269A  6E32               	movwf	?i2_in_high_int,c
 10279  00269C  6A33               	clrf	?i2_in_high_int+1,c
 10280  00269E  0012               	return	
 10281  0026A0                     __end_ofi2_in_high_int:
 10282                           	opt stack 0
 10283                           pclatu	equ	0xFFB
 10284                           pclath	equ	0xFFA
 10285                           tblptru	equ	0xFF8
 10286                           tblptrh	equ	0xFF7
 10287                           tblptrl	equ	0xFF6
 10288                           tablat	equ	0xFF5
 10289                           prodh	equ	0xFF4
 10290                           prodl	equ	0xFF3
 10291                           intcon	equ	0xFF2
 10292                           postinc0	equ	0xFEE
 10293                           fsr0h	equ	0xFEA
 10294                           fsr0l	equ	0xFE9
 10295                           wreg	equ	0xFE8
 10296                           indf1	equ	0xFE7
 10297                           fsr1h	equ	0xFE2
 10298                           fsr1l	equ	0xFE1
 10299                           bsr	equ	0xFE0
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function i2_check_msg *****************
 10308 ;; Defined at:
 10309 ;;		line 222 in file "source/messages.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  qptr            2   49[COMRAM] PTR struct __msg_queue
 10312 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;		None
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      unsigned char 
 10317 ;; Registers used:
 10318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10324 ;;      Params:         2       0       0       0       0
 10325 ;;      Locals:         0       0       0       0       0
 10326 ;;      Temps:          1       0       0       0       0
 10327 ;;      Totals:         3       0       0       0       0
 10328 ;;Total ram usage:        3 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; This function calls:
 10331 ;;		Nothing
 10332 ;; This function is called by:
 10333 ;;		_SleepIfOkay
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text53
 10338  00259A                     __ptext53:
 10339                           	opt stack 0
 10340  00259A                     i2_check_msg:
 10341                           	opt stack 17
 10342                           
 10343                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 10344                           
 10345                           ;incstack = 0
 10346  00259A  EE20 F065          	lfsr	2,101
 10347  00259E  5032               	movf	i2check_msg@qptr,w,c
 10348  0025A0  26D9               	addwf	fsr2l,f,c
 10349  0025A2  5033               	movf	i2check_msg@qptr+1,w,c
 10350  0025A4  22DA               	addwfc	fsr2h,f,c
 10351  0025A6  50DF               	movf	indf2,w,c
 10352  0025A8  6E34               	movwf	??i2_check_msg& (0+255),c
 10353  0025AA  5034               	movf	??i2_check_msg,w,c
 10354  0025AC  0D19               	mullw	25
 10355  0025AE  50F3               	movf	prodl,w,c
 10356  0025B0  2432               	addwf	i2check_msg@qptr,w,c
 10357  0025B2  6ED9               	movwf	fsr2l,c
 10358  0025B4  50F4               	movf	prodh,w,c
 10359  0025B6  2033               	addwfc	i2check_msg@qptr+1,w,c
 10360  0025B8  6EDA               	movwf	fsr2h,c
 10361  0025BA  50DF               	movf	indf2,w,c
 10362  0025BC  0012               	return	
 10363  0025BE                     __end_ofi2_check_msg:
 10364                           	opt stack 0
 10365                           pclatu	equ	0xFFB
 10366                           pclath	equ	0xFFA
 10367                           tblptru	equ	0xFF8
 10368                           tblptrh	equ	0xFF7
 10369                           tblptrl	equ	0xFF6
 10370                           tablat	equ	0xFF5
 10371                           prodh	equ	0xFF4
 10372                           prodl	equ	0xFF3
 10373                           intcon	equ	0xFF2
 10374                           postinc0	equ	0xFEE
 10375                           fsr0h	equ	0xFEA
 10376                           fsr0l	equ	0xFE9
 10377                           wreg	equ	0xFE8
 10378                           indf1	equ	0xFE7
 10379                           fsr1h	equ	0xFE2
 10380                           fsr1l	equ	0xFE1
 10381                           bsr	equ	0xFE0
 10382                           indf2	equ	0xFDF
 10383                           postinc2	equ	0xFDE
 10384                           postdec2	equ	0xFDD
 10385                           fsr2h	equ	0xFDA
 10386                           fsr2l	equ	0xFD9
 10387                           status	equ	0xFD8
 10388                           
 10389 ;; *************** function _enter_sleep_mode *****************
 10390 ;; Defined at:
 10391 ;;		line 202 in file "source/messages.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;		None
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;		None               void
 10398 ;; Registers used:
 10399 ;;		None
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10405 ;;      Params:         0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; This function calls:
 10412 ;;		Nothing
 10413 ;; This function is called by:
 10414 ;;		_SleepIfOkay
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text54
 10419  0026A8                     __ptext54:
 10420                           	opt stack 0
 10421  0026A8                     _enter_sleep_mode:
 10422                           	opt stack 17
 10423                           
 10424                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10425                           
 10426                           ;incstack = 0
 10427  0026A8  8ED3               	bsf	4051,7,c	;volatile
 10428  0026AA  0003               	sleep		;# 
 10429  0026AC  0012               	return	
 10430  0026AE                     __end_of_enter_sleep_mode:
 10431                           	opt stack 0
 10432  0000                     pclatu	equ	0xFFB
 10433                           pclath	equ	0xFFA
 10434                           tblptru	equ	0xFF8
 10435                           tblptrh	equ	0xFF7
 10436                           tblptrl	equ	0xFF6
 10437                           tablat	equ	0xFF5
 10438                           prodh	equ	0xFF4
 10439                           prodl	equ	0xFF3
 10440                           intcon	equ	0xFF2
 10441                           postinc0	equ	0xFEE
 10442                           fsr0h	equ	0xFEA
 10443                           fsr0l	equ	0xFE9
 10444                           wreg	equ	0xFE8
 10445                           indf1	equ	0xFE7
 10446                           fsr1h	equ	0xFE2
 10447                           fsr1l	equ	0xFE1
 10448                           bsr	equ	0xFE0
 10449                           indf2	equ	0xFDF
 10450                           postinc2	equ	0xFDE
 10451                           postdec2	equ	0xFDD
 10452                           fsr2h	equ	0xFDA
 10453                           fsr2l	equ	0xFD9
 10454                           status	equ	0xFD8
 10455                           pclatu	equ	0xFFB
 10456                           pclath	equ	0xFFA
 10457                           tblptru	equ	0xFF8
 10458                           tblptrh	equ	0xFF7
 10459                           tblptrl	equ	0xFF6
 10460                           tablat	equ	0xFF5
 10461                           prodh	equ	0xFF4
 10462                           prodl	equ	0xFF3
 10463                           intcon	equ	0xFF2
 10464                           postinc0	equ	0xFEE
 10465                           fsr0h	equ	0xFEA
 10466                           fsr0l	equ	0xFE9
 10467                           wreg	equ	0xFE8
 10468                           indf1	equ	0xFE7
 10469                           fsr1h	equ	0xFE2
 10470                           fsr1l	equ	0xFE1
 10471                           bsr	equ	0xFE0
 10472                           indf2	equ	0xFDF
 10473                           postinc2	equ	0xFDE
 10474                           postdec2	equ	0xFDD
 10475                           fsr2h	equ	0xFDA
 10476                           fsr2l	equ	0xFD9
 10477                           status	equ	0xFD8
 10478                           
 10479                           	psect	rparam
 10480  0000                     pclatu	equ	0xFFB
 10481                           pclath	equ	0xFFA
 10482                           tblptru	equ	0xFF8
 10483                           tblptrh	equ	0xFF7
 10484                           tblptrl	equ	0xFF6
 10485                           tablat	equ	0xFF5
 10486                           prodh	equ	0xFF4
 10487                           prodl	equ	0xFF3
 10488                           intcon	equ	0xFF2
 10489                           postinc0	equ	0xFEE
 10490                           fsr0h	equ	0xFEA
 10491                           fsr0l	equ	0xFE9
 10492                           wreg	equ	0xFE8
 10493                           indf1	equ	0xFE7
 10494                           fsr1h	equ	0xFE2
 10495                           fsr1l	equ	0xFE1
 10496                           bsr	equ	0xFE0
 10497                           indf2	equ	0xFDF
 10498                           postinc2	equ	0xFDE
 10499                           postdec2	equ	0xFDD
 10500                           fsr2h	equ	0xFDA
 10501                           fsr2l	equ	0xFD9
 10502                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         422
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      78
    BANK0           128     76      79
    BANK1           256    148     250
    BANK2           256      0     204
    BANK3           256      0     102

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[23]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK2[22]), ToMainHigh_MQ.data(BANK1[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK2[22]), ToMainHigh_MQ.queue.data(BANK1[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), parser_lthread@data_1510(BANK1[9]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> motor_lthread@message(COMRAM[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@ic(BANK1[77]), main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK2[22]), ToMainHigh_MQ.data(BANK1[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK2[22]), ToMainHigh_MQ.queue.data(BANK1[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), parser_lthread@data_1510(BANK1[9]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> motor_lthread@message(COMRAM[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@ic(BANK1[77]), main@uc(BANK1[23]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    parser_lthread@msgbuf	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 77
		 -> main@ic(BANK1[77]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 3
		 -> parser_lthread@data(BANK1[3]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 77
		 -> NULL(NULL[0]), main@ic(BANK1[77]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), parser_lthread@data_1510(BANK1[9]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> motor_lthread@message(COMRAM[2]), main@ic(BANK1[77]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), parser_lthread@data_1510(BANK1[9]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> motor_lthread@message(COMRAM[2]), main@ic(BANK1[77]), main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_slave_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_parser_lthread
    _uart_lthread->_WriteUSART
    _parser_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_parser_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               134   134      0   12679
                                             16 BANK1    132   132      0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _parser_lthread
              _start_i2c_slave_reply
                     _timer0_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8     647
                                             40 BANK0     11     3      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             39 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                6     4      2     146
                                             39 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _parser_lthread                                      27    21      6    4276
                                             65 BANK0     11     5      6
                                              0 BANK1     16    16      0
                 _ToMainHigh_sendmsg
               _i2c_configure_master
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                      7     5      2     257
                                             39 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _i2c_configure_master                                 2     2      0      31
                                             39 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    3011
                                             61 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             49 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      75
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             43 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             39 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             45 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             43 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             41 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             63 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             63 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             49 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             39 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             39 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    8634
                                             32 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    5683
                                             31 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
                          _parseUART
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            5     5      0    2830
                                             26 COMRAM     5     5      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2951
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2830
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   17636
                                             25 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0    7692
                                             16 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    2970
                                             61 COMRAM     1     1      0
                                             12 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    2747
                                             59 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0    9708
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    5289
                                             14 BANK0     11    11      0
                       _handle_start
               i2_ToMainHigh_sendmsg
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                             6     4      2     264
                                             49 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      22
                                             49 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    4419
                                             61 COMRAM     1     1      0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) i2_ToMainHigh_sendmsg                                4     1      3    4419
                                             60 COMRAM     1     1      0
                                             11 BANK0      3     0      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2859
                                             59 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                             49 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _parser_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _i2c_configure_master
     _i2c_master_send
   _start_i2c_slave_reply
   _timer0_lthread
   _uart_lthread
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _parseUART
       _ToMainLow_sendmsg
         i1_send_msg
           i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _handle_start
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       i2_start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      66      12       39.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CC       8       79.7%
BITBANK1           100      0       0      10        0.0%
BANK1              100     94      FA       6       97.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4C      4F       5       61.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C9       9        0.0%
DATA                 0      0     2C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Feb 25 03:04:12 2014

                  main@uthread_data 012C            _MQ_Main_Willing_to_block 0049  
             ?i2_ToMainHigh_sendmsg 008B                         _SSPSTATbits 000FC7  
                                l96 0D60           __end_of_ToMainLow_recvmsg 2346  
           parser_lthread@data_1510 0100                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 259A              parser_lthread@checksum 010C  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 0083  
                 i2recv_msg@tlength 0088                                 l444 1054  
                               l550 1E38                                 l551 1E3A  
                               l544 1E08                                 l474 1CD4  
                               l548 1E28                                 l549 1E2A  
                               l788 2602                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                      _FromMainLow_MQ 0200  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 00A7                    ??_init_uart_recv 00A9  
                   ReadTimer1@timer 0003                      _parser_lthread 0EE6  
               i2recv_msg@maxlength 0082                                l2430 228E  
                              l2452 22F4                                l2438 22B0  
                              l2710 1CA8                                l2624 1E0A  
                              l2616 1DF4                                l3264 2622  
                              l3602 0F40                                l2662 1F8A  
                              l2718 1D02                                l2760 2032  
                              l3632 175E                                l3560 0D0E  
                              l3552 0CCC                                l2674 1FE2  
                              l3562 0D66                                l3570 0DFE  
                              l3652 2118                                l2668 1FB6  
                              l2692 11EE                                l2684 1134  
                              l3564 0D86                                l3646 20F4  
                              l3582 0ECC                                l2688 11C0  
                              l2696 126E                                l3576 0E3C  
                              l3568 0DD8                                l3666 1512  
                              l3682 15D8                                l3770 1A66  
                              l3578 0E7A                                l3766 1A0E  
                              l3598 0F14                                _LATB 000F8A  
                              u3007 2604                                i1l47 0070  
                   _FromMainHigh_MQ 0300                                _Send 003F  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 0C52                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 0145  
                        i1_send_msg 1D2A                                pclat 000FFA  
                       i2_check_msg 259A                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0032  
                              start 00B6                          i2_recv_msg 15DC  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 1900  
     __size_of_i2c_configure_master 0050           ToMainHigh_recvmsg@msgtype 00BF  
                    send_msg@length 00B3       i2start_i2c_slave_reply@length 0037  
       __size_of_timer0_int_handler 0084             ??_i2c_slave_int_handler 008E  
                       _Delay1KTCYx 25FE                               ?_main 0001  
                        i1memcpy@d1 0001                               i2l310 01C6  
                             i2l304 051C                               i2l306 0182  
                             i1l562 25EE                               i2l332 048E  
                             i2l324 0356                               i2l362 085C  
                             i2l338 052E                               i2l372 09E2  
                             i2l381 0B5C                               i2l357 0734  
                             i2l366 08F0                               i2l286 1C1E  
                             i2l376 0A6C                               i2l369 095E  
                             i2l379 0AC6                          i1memcpy@s1 0003  
       FromMainHigh_recvmsg@msgtype 008C                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _TRISB 000F93                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0032  
            __end_of_parser_lthread 1118                          i2memcpy@s1 0034  
                      ?_init_queues 0001                               _State 004A  
         __size_of_enter_sleep_mode 0006                     __end_of_in_main 2304  
        ToMainLow_recvmsg@maxlength 00C3             timer0_lthread@msgbuffer 00AD  
                             tablat 000FF5                               status 000FD8  
          i2ToMainHigh_sendmsg@data 008C                    __end_ofi1_memcpy 240A  
                  __end_ofi2_memcpy 244A                      WriteUSART@data 00A7  
                   __initialization 218C              ??i2_ToMainHigh_sendmsg 003D  
                      __end_of_main 0EE6                          _ReadTimer1 2670  
       __size_of_timer1_int_handler 0030          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026       __size_of_FromMainHigh_recvmsg 0042  
             __size_ofi2_in_low_int 002E                              ??_main 00CC  
                   send_msg@msgtype 00B4                       __activetblptr 000002  
                   send_msg@tlength 00B8                __end_of_handle_start 1C6A  
                   ?_parser_lthread 00C1             ??_uart_recv_int_handler 0020  
                            i1l4100 23F8                              i1l4200 0066  
                            i1l4124 1D62                              i1l4170 18B2  
                            i1l4162 1878                              i1l4164 1882  
                            i1l4156 182A                              i1l4148 1808  
                            i1l4094 23DC                              i1l4168 18A8  
                            i1l4178 18E4                              i1l4188 216C  
                            i2l4020 06D2                              i2l4012 062C  
                            i2l4004 0592                              i2l4110 2438  
                            i2l4104 241C                              i2l4044 195C  
                            i2l3510 25C6                      __CFG_WDTEN$OFF 000000  
                            i2l3280 252A                              i2l3504 1F2E  
                            i2l2490 2232                              i2l3362 138E  
                            i2l3370 142C                              i2l3514 25CC  
                            i2l3508 25C0                              i2l4068 1648  
                            i2l4084 16FE                              i2l3366 13BC  
                            i2l3358 130E                              i2l3288 2540  
                            i2l3800 0820                              i2l3810 087A  
                            i2l3830 09A6                              i2l3822 0922  
                            i2l3840 0A00                              i2l3816 08B6  
                            i2l3904 0178                              i2l3922 01FE  
                            i2l3498 1F24                              i2l3852 0A8A  
                            i2l2964 1C3A                              i2l3940 027E  
                            i2l3924 022A                              i2l3846 0A3C  
                            i2l3782 06FE                              i2l2966 1C52  
                            i2l3942 02BE                              i2l3934 0266  
                            i2l3792 07CE                              i2l3874 0BAC  
                            i2l3882 0BFA                              i2l3970 041E  
                            i2l3868 0B62                              i2l3964 03CA  
                            i2l3966 040C                              i2l3992 04F0  
                            i2l3898 0160                              i2l3998 0532  
                     ??_SleepIfOkay 0036                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 01DA                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 12F2                  timer0_lthread@tptr 00A7  
                       ?i2_recv_msg 0080                        i2_in_low_int 251C  
                       ?i2_send_msg 0080                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 25BE  
 i2c_slave_int_handler@data_written 0093                     _i2c_master_send 19F6  
                            _ic_ptr 00CC                       main@msgbuffer 0110  
                  __end_of_init_i2c 1BA2                              _memcpy 20D2  
                            clear_0 2192                              clear_1 219E  
                            clear_2 21AA                              clear_3 21BA  
                            _uc_ptr 004C                              main@ic 0147  
                            main@uc 012E                    __end_of_recv_msg 15DC  
       start_i2c_slave_reply@length 00AC                           ??_in_main 00AD  
                  __end_of_send_msg 1806                        __pdataCOMRAM 004E  
             timer0_int_handler@val 0095                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 00AA            ?i2_start_i2c_slave_reply 0032  
          ToMainLow_recvmsg@msgtype 00BF                __size_of_in_high_int 0012  
                   parser_lthread@i 010E                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 21D2  
        __end_of_ToMainHigh_recvmsg 2388          __end_of_ToMainHigh_sendmsg 2480  
       __end_of_init_timer1_lthread 264C                 __end_of_SleepIfOkay 227A  
                        _WriteUSART 2614                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 000C                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                   __end_of_ReadUSART 25FE  
         timer0_int_handler@msgtype 0093                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1F64  
       __end_of_InterruptHandlerLow 00B6                           ?i2_memcpy 0032  
                     _ToMainHigh_MQ 0194                 __size_ofi2_recv_msg 0126  
                  _enter_sleep_mode 26A8                 __size_ofi2_send_msg 00F6  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1E66  
                     check_msg@qptr 00A7             ??_block_on_To_msgqueues 00AD  
              __size_of_init_queues 006E                          __pbssBANK0 00CE  
                        __pbssBANK1 0194                          __pbssBANK2 0200  
                        __pbssBANK3 0300                          __pnvCOMRAM 004C  
           __end_of_i2c_int_handler 25E0                        ?i2_check_msg 0032  
           __end_of_i2c_master_send 1AD4            ??_i2c_master_int_handler 003E  
                __size_of_parseUART 00FA                   recv_msg@maxlength 00B3  
                   recv_msg@msgtype 00B4                     recv_msg@tlength 00BB  
             __size_of_handle_start 00C8                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0034                             ?_memcpy 00A7  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0034  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 0642  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 06FC  
   __end_ofi2_start_i2c_slave_reply 14A6        __end_of_i2c_configure_master 222C  
                        ??i1_memcpy 0007                          ??i2_memcpy 0038  
        i2start_i2c_slave_reply@msg 0032                    i1send_msg@length 000D  
                     i2_in_high_int 2694                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 24B6  
                         ?_init_i2c 00A7                         _SleepIfOkay 222C  
                         ?_recv_msg 00B1                          _in_low_int 227A  
                      _handle_start 1BA2                             __Hparam 0000  
                         ?_send_msg 00B1                             __Lparam 0000  
        __end_of_timer0_int_handler 1EEA                         ?_WriteUSART 0001  
                  init_uart_recv@uc 00A7                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 0094                             __pcinit 218C  
                   __size_of_memcpy 005E                          _init_queue 1FEA  
                           __ramtop 0400                    ??_parser_lthread 00C7  
                           __ptext0 0C52                             __ptext1 1C6A  
                           __ptext2 2614                             __ptext3 2628  
                           __ptext4 1118                             __ptext5 0EE6  
                           __ptext6 19F6                             __ptext7 21DC  
                           __ptext8 244A                             __ptext9 1702  
                           _in_main 22C0                 __end_of_WriteTimer0 2694  
               __end_of_WriteTimer1 2670                   __end_of_parseUART 1900  
                    ?i2_in_high_int 0032                      __pintcode_body 1EEA  
      __end_of_FromMainHigh_recvmsg 23CA                end_of_initialization 21D2  
    __size_of_uart_recv_int_handler 005C                             memcpy@d 00AD  
                           memcpy@n 00AB                             memcpy@s 00AF  
     __end_of_uart_recv_int_handler 218C                          ??_init_i2c 00A9  
                     __Lmediumconst 0000                             int_func 1EEA  
                      ??i1_send_msg 0011                       ?_uart_lthread 00A8  
           __size_of_init_uart_recv 002A                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 003C                    ?_i2c_master_send 00A7  
                        ??_recv_msg 00B8                        ??i2_send_msg 003C  
                        ??_send_msg 00B7     __size_of_i2c_master_int_handler 0556  
        __end_of_timer1_int_handler 251C                           _RCSTAbits 000FAB  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 00BD  
     __size_ofi2_ToMainHigh_sendmsg 0036               parser_lthread@Command 010D  
                  _lastMotorCommand 004E                  __end_ofi1_send_msg 1DD4  
                         _TRISCbits 000F94                  __end_ofi2_recv_msg 1702  
                __end_ofi2_send_msg 19F6                 __size_of_WriteUSART 0014  
     FromMainHigh_recvmsg@maxlength 003E            timer1_int_handler@result 001C  
                    ??_uart_lthread 00B0                           _TXSTAbits 000FAC  
                        main@length 0146               parser_lthread@msgtype 00C1  
                       ?_in_low_int 00A9               timer0_lthread@msgtype 00A9  
  __size_ofi2_start_i2c_slave_reply 01B4                _i2c_configure_master 21DC  
             _start_i2c_slave_reply 1118                __size_ofi2_check_msg 0024  
          __end_of_enter_sleep_mode 26AE                        ??_ReadTimer1 0003  
                _ToMainHigh_recvmsg 2346                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 244A                           i1memcpy@n 0005  
                         i1memcpy@s 0009                       __pidataCOMRAM 26AE  
                    _timer0_lthread 2628                         ?_init_queue 00A7  
                         i2memcpy@d 0038                         _WriteTimer0 2682  
                       _WriteTimer1 265E                           i2memcpy@n 0036  
                         i2memcpy@s 003A                      __end_of_memcpy 2130  
                 _enable_interrupts 26A0                __size_of_Delay1KTCYx 0016  
               ?_ToMainHigh_recvmsg 00BF                     ??i2_in_high_int 0034  
               ?_ToMainHigh_sendmsg 00BD                  ?_enable_interrupts 0001  
               start_initialization 218C              _i2c_master_int_handler 06FC  
                     ??_in_high_int 00A9                           _ReadUSART 25E0  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 0040  
               ??_enable_interrupts 00A7      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 2682       __end_of_block_on_To_msgqueues 1FEA  
                         _OpenUSART 1DD4        __end_of_InterruptHandlerHigh 1F6C  
                        init_i2c@ic 00A7                ??_ToMainHigh_recvmsg 00C3  
              ??_ToMainHigh_sendmsg 00C0               ?_i2c_configure_master 0001  
            __end_of_timer0_lthread 263A           __end_of_enable_interrupts 26A8  
                          ??_memcpy 00AD                _FromMainHigh_recvmsg 2388  
      __size_of_init_timer1_lthread 0012                         __pbssCOMRAM 003F  
                        ?_ReadUSART 0001                       ??_init_queues 00AB  
                     __pcstackBANK0 0080                       __pcstackBANK1 0100  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 00A7  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 00A7  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 009E  
    i2c_slave_int_handler@data_read 0098                 __end_of_in_high_int 265E  
                        ?_OpenUSART 00A7                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 00C1                        _ToMainLow_MQ 0266  
               __size_of_init_queue 007A                      _init_uart_recv 254A  
                         _check_msg 2480                           __pnvBANK0 00CC  
            ?_start_i2c_slave_reply 00A7                   __size_of_init_i2c 00CE  
                      recv_msg@data 00B6                        ??_WriteUSART 00A7  
                      recv_msg@qmsg 00BD                        recv_msg@slot 00BA  
                      recv_msg@qptr 00B1          i2ToMainHigh_sendmsg@length 003D  
                 __size_of_recv_msg 0136                           __pintcode 0008  
                 __size_of_send_msg 0104                     ?_timer0_lthread 00A7  
             ?_FromMainHigh_recvmsg 008C                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 00C1                __end_of_uart_lthread 1D2A  
                          ?_in_main 00AB                   WriteTimer0@timer0 0032  
                _timer0_int_handler 1E66                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00BA                 uart_lthread@msgtype 00AA  
    i2c_slave_int_handler@error_buf 0090               ToMainLow_sendmsg@data 0018  
               ?_timer0_int_handler 0001                  __end_of_WriteUSART 2628  
                         _parseUART 1806                    uart_lthread@uptr 00A8  
    i2c_slave_int_handler@msg_ready 0097              __end_of_init_uart_recv 2574  
               __end_of_init_queues 20D2                            _LATCbits 000F8B  
            ??_i2c_configure_master 00A7                     i2check_msg@qptr 0032  
                        ?_check_msg 00A7                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D             i2_start_i2c_slave_reply 12F2  
                     ?i2_in_low_int 0034                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 00BE                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 0090  
             i2c_master_send@length 00AB          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
              parser_lthread@length 00C3                timer0_lthread@length 00AB  
                _timer1_int_handler 24EC                            i1_memcpy 23CA  
              _InterruptHandlerHigh 0008                parser_lthread@msgbuf 00C5  
                       ??_ReadUSART 0001                            i2_memcpy 240A  
              timer0_lthread@msgval 00AF            FromMainHigh_recvmsg@data 008E  
                       _in_high_int 264C                        send_msg@data 00B5  
                      send_msg@qmsg 00BB                        send_msg@slot 00BA  
                      send_msg@qptr 00B1        __end_ofi2_ToMainHigh_sendmsg 24EC  
             uart_lthread@msgbuffer 00AE                 ?_timer1_int_handler 0001  
                        ?_parseUART 0001                     ?_init_uart_recv 00A7  
                          _i2c_mode 00CE                         ??_OpenUSART 00A9  
                   OpenUSART@config 00AC                      ??i2_in_low_int 0036  
             _uart_recv_int_handler 2130                        ??_in_low_int 00AB  
                          __Hrparam 0000                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_recvmsg 003E  
              ??_timer1_int_handler 001B            __size_of_i2c_int_handler 0022  
                ??_enter_sleep_mode 0032            __size_of_i2c_master_send 00DE  
                      ??_init_queue 00A9                        ?_WriteTimer0 0032  
                      ?_WriteTimer1 0001             ToMainLow_sendmsg@length 001A  
           ?_i2c_master_int_handler 0001              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 0128               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 0083  
       ToMainHigh_recvmsg@maxlength 00C3                   i2send_msg@tlength 0086  
           init_timer1_lthread@tptr 00A7                         _init_queues 2064  
                __end_of_in_low_int 22C0                            __ptext10 254A  
                          __ptext11 263A                            __ptext20 2480  
                          __ptext12 2064                            __ptext21 25FE  
                          __ptext13 1FEA                            __ptext30 25E0  
                          __ptext22 2304                            __ptext14 1AD4  
                          __ptext31 24EC                            __ptext23 2346  
                          __ptext15 26A0                            __ptext40 2388  
                          __ptext32 265E                            __ptext24 14A6  
                          __ptext16 1F6C                            __ptext41 15DC  
                          __ptext33 2574                            __ptext25 20D2  
                          __ptext17 22C0                            __ptext50 222C  
                          __ptext42 25BE                            __ptext34 1D2A  
                          __ptext26 1DD4                            __ptext18 227A  
                          __ptext51 251C                            __ptext43 00BA  
                          __ptext35 23CA                            __ptext19 264C  
                          __ptext52 2694                            __ptext44 12F2  
                          __ptext36 2670                            __ptext28 2130  
                          __ptext53 259A                            __ptext45 1BA2  
                          __ptext29 1806                            __ptext54 26A8  
                          __ptext46 06FC                            __ptext38 1E66  
                          __ptext47 24B6                            __ptext39 2682  
                          __ptext48 1900                            __ptext49 240A  
                    i1send_msg@data 000F      i2c_configure_master@slave_addr 00A8  
           __size_of_parser_lthread 0232                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 00AC            timer0_int_handler@length 0091  
         ??i2_start_i2c_slave_reply 0034                            _init_i2c 1AD4  
               _init_timer1_lthread 263A                       __size_of_main 0294  
                     ??i2_check_msg 0034                   main@t1thread_data 012A  
                       ??_check_msg 00A9                  __end_of_init_queue 2064  
              __size_of_SleepIfOkay 004E                            _recv_msg 14A6  
  i2c_slave_int_handler@msg_to_send 0096                            _send_msg 1702  
                    init_queue@qptr 00A7        i2c_master_send@currentLength 00AC  
             __size_of_uart_lthread 00C0                      i2recv_msg@data 0085  
                    i2recv_msg@qmsg 008A                       ??_Delay1KTCYx 00A7  
                    i2recv_msg@slot 0087                      i2recv_msg@qptr 0080  
    __end_of_i2c_master_int_handler 0C52                 _InterruptHandlerLow 0018  
              ?_init_timer1_lthread 00A7                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                      OpenUSART@spbrg 00A7  
                          memcpy@d1 00A7                      _command_length 0043  
                          memcpy@s1 00A9               __end_ofi2_in_high_int 26A0  
                      _motor_length 0047                    i2send_msg@length 0082  
                          intlevel1 0000                            intlevel2 0000  
                       ??_parseUART 001B                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 00A9              ?_uart_recv_int_handler 0001  
                      _uart_lthread 1C6A               _block_on_To_msgqueues 1F6C  
                     ?_handle_start 0001                    ??_timer0_lthread 00AF  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3         i2ToMainHigh_sendmsg@msgtype 008B  
          ToMainHigh_sendmsg@length 00C0                  parser_lthread@data 0109  
               __end_ofi2_check_msg 25BE                i2_ToMainHigh_sendmsg 24B6  
             ??_init_timer1_lthread 00A9                       _command_count 0041  
                       _motor_count 0045              ??_InterruptHandlerHigh 0099  
                 _ToMainLow_recvmsg 2304                   _ToMainLow_sendmsg 2574  
                main@last_reg_recvd 0127                __end_ofi2_in_low_int 254A  
                ?_ToMainLow_recvmsg 00BF                 __end_of_Delay1KTCYx 2614  
                 ??_i2c_int_handler 003F                  ?_ToMainLow_sendmsg 0017  
                     uart_lthread@x 00B1                   ??_i2c_master_send 00A9  
                i2c_master_send@msg 00A7                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                      i2send_msg@data 0084  
             ??_InterruptHandlerLow 0021                 ??_ToMainLow_recvmsg 00C3  
                    i2send_msg@qmsg 0089                      i2send_msg@slot 0088  
                    i2send_msg@qptr 0080                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 0095                      ??_handle_start 0032  
                      _USART_Status 004B  
