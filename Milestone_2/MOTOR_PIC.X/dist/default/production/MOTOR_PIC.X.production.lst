

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Feb 25 03:42:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  002438                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _lastMotorCommand
    81  002438  FF                 	db	255
    82  0000                     _INTCONbits	set	4082
    83  0000                     _IPR1bits	set	3999
    84  0000                     _LATB	set	3978
    85  0000                     _LATCbits	set	3979
    86  0000                     _OSCCON	set	4051
    87  0000                     _OSCCONbits	set	4051
    88  0000                     _OSCTUNEbits	set	3995
    89  0000                     _PIE1bits	set	3997
    90  0000                     _PIR1bits	set	3998
    91  0000                     _RCONbits	set	4048
    92  0000                     _RCREG	set	4014
    93  0000                     _RCSTA	set	4011
    94  0000                     _RCSTAbits	set	4011
    95  0000                     _SPBRG	set	4015
    96  0000                     _SPBRGH	set	4016
    97  0000                     _SSPADD	set	4040
    98  0000                     _SSPBUF	set	4041
    99  0000                     _SSPCON1	set	4038
   100  0000                     _SSPCON1bits	set	4038
   101  0000                     _SSPCON2	set	4037
   102  0000                     _SSPCON2bits	set	4037
   103  0000                     _SSPSTAT	set	4039
   104  0000                     _SSPSTATbits	set	4039
   105  0000                     _TMR0H	set	4055
   106  0000                     _TMR0L	set	4054
   107  0000                     _TMR1H	set	4047
   108  0000                     _TMR1L	set	4046
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TXREG	set	4013
   112  0000                     _TXSTA	set	4012
   113  0000                     _TXSTAbits	set	4012
   114                           
   115                           	psect	nvCOMRAM
   116  00004D                     __pnvCOMRAM:
   117                           	opt stack 0
   118  00004D                     _uc_ptr:
   119                           	opt stack 0
   120  00004D                     	ds	2
   121                           
   122                           	psect	nvBANK0
   123  0000C9                     __pnvBANK0:
   124                           	opt stack 0
   125  0000C9                     _ic_ptr:
   126                           	opt stack 0
   127  0000C9                     	ds	2
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  001F32                     __pcinit:
   133                           	opt stack 0
   134  001F32                     start_initialization:
   135                           	opt stack 0
   136  001F32                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Clear objects allocated to BANK3 (102 bytes)
   140  001F32  EE03  F000         	lfsr	0,__pbssBANK3
   141  001F36  0E66               	movlw	102
   142  001F38                     clear_0:
   143  001F38  6AEE               	clrf	postinc0,c
   144  001F3A  06E8               	decf	wreg,f,c
   145  001F3C  E1FD               	bnz	clear_0
   146                           
   147                           ; Clear objects allocated to BANK2 (204 bytes)
   148  001F3E  EE02  F000         	lfsr	0,__pbssBANK2
   149  001F42  0ECC               	movlw	204
   150  001F44                     clear_1:
   151  001F44  6AEE               	clrf	postinc0,c
   152  001F46  06E8               	decf	wreg,f,c
   153  001F48  E1FD               	bnz	clear_1
   154                           
   155                           ; Clear objects allocated to BANK1 (102 bytes)
   156  001F4A  EE01  F084         	lfsr	0,__pbssBANK1
   157  001F4E  0E66               	movlw	102
   158  001F50                     clear_2:
   159  001F50  6AEE               	clrf	postinc0,c
   160  001F52  06E8               	decf	wreg,f,c
   161  001F54  E1FD               	bnz	clear_2
   162                           
   163                           ; Clear objects allocated to BANK0 (1 bytes)
   164  001F56  0100               	movlb	0
   165  001F58  6BCB               	clrf	__pbssBANK0& (0+255),b
   166                           
   167                           ; Clear objects allocated to COMRAM (13 bytes)
   168  001F5A  EE00  F040         	lfsr	0,__pbssCOMRAM
   169  001F5E  0E0D               	movlw	13
   170  001F60                     clear_3:
   171  001F60  6AEE               	clrf	postinc0,c
   172  001F62  06E8               	decf	wreg,f,c
   173  001F64  E1FD               	bnz	clear_3
   174                           
   175                           ; Initialize objects allocated to BANK0 (1 bytes)
   176                           ; load TBLPTR registers with __pidataBANK0
   177  001F66  0E38               	movlw	low __pidataBANK0
   178  001F68  6EF6               	movwf	tblptrl,c
   179  001F6A  0E24               	movlw	high __pidataBANK0
   180  001F6C  6EF7               	movwf	tblptrh,c
   181  001F6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   182  001F70  6EF8               	movwf	tblptru,c
   183  001F72  0009               	tblrd		*+	;fetch initializer
   184  001F74  CFF5 F0CC          	movff	tablat,__pdataBANK0
   185  001F78                     end_of_initialization:
   186                           	opt stack 0
   187  001F78                     __end_of__initialization:
   188                           	opt stack 0
   189  001F78  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  001F7A  6EF8               	movwf	tblptru,c
   191  001F7C  0100               	movlb	0
   192  001F7E  EF09  F006         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	bssCOMRAM
   201  000040                     __pbssCOMRAM:
   202                           	opt stack 0
   203  000040                     _Send:
   204                           	opt stack 0
   205  000040                     	ds	2
   206  000042                     _command_count:
   207                           	opt stack 0
   208  000042                     	ds	2
   209  000044                     _command_length:
   210                           	opt stack 0
   211  000044                     	ds	2
   212  000046                     _motor_count:
   213                           	opt stack 0
   214  000046                     	ds	2
   215  000048                     _motor_length:
   216                           	opt stack 0
   217  000048                     	ds	2
   218  00004A                     _MQ_Main_Willing_to_block:
   219                           	opt stack 0
   220  00004A                     	ds	1
   221  00004B                     _State:
   222                           	opt stack 0
   223  00004B                     	ds	1
   224  00004C                     _USART_Status:
   225                           	opt stack 0
   226  00004C                     	ds	1
   227                           tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           tblptrl	equ	0xFF6
   230                           tablat	equ	0xFF5
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	bssBANK0
   235  0000CB                     __pbssBANK0:
   236                           	opt stack 0
   237  0000CB                     _i2c_mode:
   238                           	opt stack 0
   239  0000CB                     	ds	1
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           
   247                           	psect	dataBANK0
   248  0000CC                     __pdataBANK0:
   249                           	opt stack 0
   250  0000CC                     _lastMotorCommand:
   251                           	opt stack 0
   252  0000CC                     	ds	1
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	bssBANK1
   261  000184                     __pbssBANK1:
   262                           	opt stack 0
   263  000184                     _ToMainHigh_MQ:
   264                           	opt stack 0
   265  000184                     	ds	102
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	bssBANK2
   274  000200                     __pbssBANK2:
   275                           	opt stack 0
   276  000200                     _FromMainLow_MQ:
   277                           	opt stack 0
   278  000200                     	ds	102
   279  000266                     _ToMainLow_MQ:
   280                           	opt stack 0
   281  000266                     	ds	102
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssBANK3
   290  000300                     __pbssBANK3:
   291                           	opt stack 0
   292  000300                     _FromMainHigh_MQ:
   293                           	opt stack 0
   294  000300                     	ds	102
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           
   302                           	psect	cstackBANK1
   303  000100                     __pcstackBANK1:
   304                           	opt stack 0
   305  000100                     main@msgbuffer:
   306                           	opt stack 0
   307                           
   308                           ; 23 bytes @ 0x0
   309  000100                     	ds	23
   310  000117                     main@last_reg_recvd:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x17
   314  000117                     	ds	1
   315  000118                     main@t0thread_data:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x18
   319  000118                     	ds	2
   320  00011A                     main@t1thread_data:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x1A
   324  00011A                     	ds	2
   325  00011C                     main@uthread_data:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x1C
   329  00011C                     	ds	2
   330  00011E                     main@uc:
   331                           	opt stack 0
   332                           
   333                           ; 23 bytes @ 0x1E
   334  00011E                     	ds	23
   335  000135                     main@length:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x35
   339  000135                     	ds	1
   340  000136                     main@msgtype:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x36
   344  000136                     	ds	1
   345  000137                     main@ic:
   346                           	opt stack 0
   347                           
   348                           ; 77 bytes @ 0x37
   349  000137                     	ds	77
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           
   357                           	psect	cstackBANK0
   358  000080                     __pcstackBANK0:
   359                           	opt stack 0
   360  000080                     i2send_msg@qptr:
   361                           	opt stack 0
   362  000080                     i2recv_msg@qptr:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366  000080                     	ds	2
   367  000082                     i2send_msg@length:
   368                           	opt stack 0
   369  000082                     i2recv_msg@maxlength:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x2
   373  000082                     	ds	1
   374  000083                     i2send_msg@msgtype:
   375                           	opt stack 0
   376  000083                     i2recv_msg@msgtype:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x3
   380  000083                     	ds	1
   381  000084                     i2send_msg@data:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x4
   385  000084                     	ds	1
   386  000085                     i2recv_msg@data:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x5
   390  000085                     	ds	1
   391  000086                     i2send_msg@tlength:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x6
   395  000086                     	ds	1
   396  000087                     i2recv_msg@slot:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x7
   400  000087                     	ds	1
   401  000088                     i2send_msg@slot:
   402                           	opt stack 0
   403  000088                     i2recv_msg@tlength:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x8
   407  000088                     	ds	1
   408  000089                     i2send_msg@qmsg:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x9
   412  000089                     	ds	1
   413  00008A                     i2recv_msg@qmsg:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417  00008A                     	ds	1
   418  00008B                     i2ToMainHigh_sendmsg@length:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xB
   422  00008B                     	ds	1
   423  00008C                     ??_i2c_master_int_handler:
   424  00008C                     ??_i2c_slave_int_handler:
   425  00008C                     FromMainHigh_recvmsg@msgtype:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0xC
   429  00008C                     	ds	2
   430  00008E                     FromMainHigh_recvmsg@data:
   431                           	opt stack 0
   432  00008E                     i2c_slave_int_handler@error_buf:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0xE
   436  00008E                     	ds	2
   437  000090                     ??_timer0_int_handler:
   438                           
   439                           ; 0 bytes @ 0x10
   440  000090                     	ds	1
   441  000091                     i2c_slave_int_handler@data_written:
   442                           	opt stack 0
   443  000091                     timer0_int_handler@length:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x11
   447  000091                     	ds	1
   448  000092                     i2c_slave_int_handler@overrun_error:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x12
   452  000092                     	ds	1
   453  000093                     i2c_slave_int_handler@i2c_data:
   454                           	opt stack 0
   455  000093                     timer0_int_handler@msgtype:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x13
   459  000093                     	ds	1
   460  000094                     i2c_slave_int_handler@msg_to_send:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x14
   464  000094                     	ds	1
   465  000095                     i2c_slave_int_handler@msg_ready:
   466                           	opt stack 0
   467  000095                     timer0_int_handler@val:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x15
   471  000095                     	ds	1
   472  000096                     i2c_slave_int_handler@data_read:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x16
   476  000096                     	ds	1
   477  000097                     ??_InterruptHandlerHigh:
   478                           
   479                           ; 0 bytes @ 0x17
   480  000097                     	ds	14
   481  0000A5                     ??_i2c_configure_slave:
   482  0000A5                     ?_in_high_int:
   483                           	opt stack 0
   484  0000A5                     WriteUSART@data:
   485                           	opt stack 0
   486  0000A5                     Delay1KTCYx@unit:
   487                           	opt stack 0
   488  0000A5                     init_queue@qptr:
   489                           	opt stack 0
   490  0000A5                     check_msg@qptr:
   491                           	opt stack 0
   492  0000A5                     start_i2c_slave_reply@msg:
   493                           	opt stack 0
   494  0000A5                     init_i2c@ic:
   495                           	opt stack 0
   496  0000A5                     init_uart_recv@uc:
   497                           	opt stack 0
   498  0000A5                     timer0_lthread@tptr:
   499                           	opt stack 0
   500  0000A5                     init_timer1_lthread@tptr:
   501                           	opt stack 0
   502  0000A5                     OpenUSART@spbrg:
   503                           	opt stack 0
   504  0000A5                     memcpy@d1:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x25
   508  0000A5                     	ds	1
   509  0000A6                     i2c_configure_slave@addr:
   510                           	opt stack 0
   511  0000A6                     uart_lthread@uptr:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x26
   515  0000A6                     	ds	1
   516  0000A7                     ??_init_uart_recv:
   517  0000A7                     ??_OpenUSART:
   518  0000A7                     ??_start_i2c_slave_reply:
   519  0000A7                     ??_init_queue:
   520  0000A7                     ??_check_msg:
   521  0000A7                     ?_in_low_int:
   522                           	opt stack 0
   523  0000A7                     timer0_lthread@msgtype:
   524                           	opt stack 0
   525  0000A7                     memcpy@s1:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x27
   529  0000A7                     	ds	1
   530  0000A8                     init_queue@i:
   531                           	opt stack 0
   532  0000A8                     uart_lthread@msgtype:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x28
   536  0000A8                     	ds	1
   537  0000A9                     ??_init_queues:
   538  0000A9                     ?_in_main:
   539                           	opt stack 0
   540  0000A9                     timer0_lthread@length:
   541                           	opt stack 0
   542  0000A9                     memcpy@n:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x29
   546  0000A9                     	ds	1
   547  0000AA                     start_i2c_slave_reply@length:
   548                           	opt stack 0
   549  0000AA                     OpenUSART@config:
   550                           	opt stack 0
   551  0000AA                     uart_lthread@length:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x2A
   555  0000AA                     	ds	1
   556  0000AB                     ??_block_on_To_msgqueues:
   557  0000AB                     timer0_lthread@msgbuffer:
   558                           	opt stack 0
   559  0000AB                     memcpy@d:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x2B
   563  0000AB                     	ds	1
   564  0000AC                     uart_lthread@msgbuffer:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x2C
   568  0000AC                     	ds	1
   569  0000AD                     timer0_lthread@msgval:
   570                           	opt stack 0
   571  0000AD                     memcpy@s:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x2D
   575  0000AD                     	ds	1
   576  0000AE                     ??_uart_lthread:
   577                           
   578                           ; 0 bytes @ 0x2E
   579  0000AE                     	ds	1
   580  0000AF                     send_msg@qptr:
   581                           	opt stack 0
   582  0000AF                     recv_msg@qptr:
   583                           	opt stack 0
   584  0000AF                     uart_lthread@x:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x2F
   588  0000AF                     	ds	2
   589  0000B1                     send_msg@length:
   590                           	opt stack 0
   591  0000B1                     recv_msg@maxlength:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x31
   595  0000B1                     	ds	1
   596  0000B2                     send_msg@msgtype:
   597                           	opt stack 0
   598  0000B2                     recv_msg@msgtype:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x32
   602  0000B2                     	ds	1
   603  0000B3                     send_msg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x33
   607  0000B3                     	ds	1
   608  0000B4                     recv_msg@data:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x34
   612  0000B4                     	ds	1
   613  0000B5                     ??_send_msg:
   614                           
   615                           ; 0 bytes @ 0x35
   616  0000B5                     	ds	1
   617  0000B6                     ??_recv_msg:
   618  0000B6                     send_msg@tlength:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x36
   622  0000B6                     	ds	2
   623  0000B8                     send_msg@slot:
   624                           	opt stack 0
   625  0000B8                     recv_msg@slot:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x38
   629  0000B8                     	ds	1
   630  0000B9                     send_msg@qmsg:
   631                           	opt stack 0
   632  0000B9                     recv_msg@tlength:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x39
   636  0000B9                     	ds	2
   637  0000BB                     ToMainHigh_sendmsg@msgtype:
   638                           	opt stack 0
   639  0000BB                     recv_msg@qmsg:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x3B
   643  0000BB                     	ds	1
   644  0000BC                     ToMainHigh_sendmsg@data:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x3C
   648  0000BC                     	ds	1
   649  0000BD                     ToMainLow_recvmsg@msgtype:
   650                           	opt stack 0
   651  0000BD                     ToMainHigh_recvmsg@msgtype:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x3D
   655  0000BD                     	ds	1
   656  0000BE                     ToMainHigh_sendmsg@length:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x3E
   660  0000BE                     	ds	1
   661  0000BF                     ToMainLow_recvmsg@data:
   662                           	opt stack 0
   663  0000BF                     ToMainHigh_recvmsg@data:
   664                           	opt stack 0
   665  0000BF                     motor_lthread@msgtype:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x3F
   669  0000BF                     	ds	2
   670  0000C1                     ToMainLow_recvmsg@maxlength:
   671                           	opt stack 0
   672  0000C1                     ToMainHigh_recvmsg@maxlength:
   673                           	opt stack 0
   674  0000C1                     motor_lthread@length:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x41
   678  0000C1                     	ds	2
   679  0000C3                     motor_lthread@msgbuffer:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x43
   683  0000C3                     	ds	2
   684  0000C5                     ??_motor_lthread:
   685                           
   686                           ; 0 bytes @ 0x45
   687  0000C5                     	ds	2
   688  0000C7                     motor_lthread@message:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x47
   692  0000C7                     	ds	2
   693  0000C9                     tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           
   700                           ; 0 bytes @ 0x49
   701                           
   702                           	psect	cstackCOMRAM
   703  000001                     __pcstackCOMRAM:
   704                           	opt stack 0
   705  000001                     ?_ReadTimer1:
   706                           	opt stack 0
   707  000001                     ReadUSART@data:
   708                           	opt stack 0
   709  000001                     WriteTimer1@timer1:
   710                           	opt stack 0
   711  000001                     i1memcpy@d1:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x0
   715  000001                     	ds	2
   716  000003                     ReadTimer1@timer:
   717                           	opt stack 0
   718  000003                     WriteTimer1@timer:
   719                           	opt stack 0
   720  000003                     i1memcpy@s1:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x2
   724  000003                     	ds	2
   725  000005                     i1memcpy@n:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  000005                     	ds	2
   730  000007                     i1memcpy@d:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x6
   734  000007                     	ds	2
   735  000009                     i1memcpy@s:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x8
   739  000009                     	ds	2
   740  00000B                     i1send_msg@qptr:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0xA
   744  00000B                     	ds	2
   745  00000D                     i1send_msg@length:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0xC
   749  00000D                     	ds	1
   750  00000E                     i1send_msg@msgtype:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0xD
   754  00000E                     	ds	1
   755  00000F                     i1send_msg@data:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0xE
   759  00000F                     	ds	2
   760  000011                     ??i1_send_msg:
   761                           
   762                           ; 0 bytes @ 0x10
   763  000011                     	ds	1
   764  000012                     i1send_msg@tlength:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x11
   768  000012                     	ds	2
   769  000014                     i1send_msg@slot:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x13
   773  000014                     	ds	1
   774  000015                     i1send_msg@qmsg:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x14
   778  000015                     	ds	2
   779  000017                     ToMainLow_sendmsg@msgtype:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x16
   783  000017                     	ds	1
   784  000018                     ToMainLow_sendmsg@data:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x17
   788  000018                     	ds	2
   789  00001A                     ToMainLow_sendmsg@length:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x19
   793  00001A                     	ds	1
   794  00001B                     ??_timer1_int_handler:
   795  00001B                     ??_parseUART:
   796                           
   797                           ; 0 bytes @ 0x1A
   798  00001B                     	ds	1
   799  00001C                     timer1_int_handler@result:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x1B
   803  00001C                     	ds	4
   804  000020                     ??_uart_recv_int_handler:
   805                           
   806                           ; 0 bytes @ 0x1F
   807  000020                     	ds	1
   808  000021                     ??_InterruptHandlerLow:
   809                           
   810                           ; 0 bytes @ 0x20
   811  000021                     	ds	17
   812  000032                     ?i2_in_high_int:
   813                           	opt stack 0
   814  000032                     handle_start@data_read:
   815                           	opt stack 0
   816  000032                     WriteTimer0@timer0:
   817                           	opt stack 0
   818  000032                     i2check_msg@qptr:
   819                           	opt stack 0
   820  000032                     i2start_i2c_slave_reply@msg:
   821                           	opt stack 0
   822  000032                     i2memcpy@d1:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x31
   826  000032                     	ds	2
   827  000034                     ??i2_check_msg:
   828  000034                     ??i2_start_i2c_slave_reply:
   829  000034                     ?i2_in_low_int:
   830                           	opt stack 0
   831  000034                     WriteTimer0@timer:
   832                           	opt stack 0
   833  000034                     i2memcpy@s1:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x33
   837  000034                     	ds	2
   838  000036                     i2memcpy@n:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x35
   842  000036                     	ds	1
   843  000037                     i2start_i2c_slave_reply@length:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x36
   847  000037                     	ds	1
   848  000038                     i2memcpy@d:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x37
   852  000038                     	ds	2
   853  00003A                     i2memcpy@s:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x39
   857  00003A                     	ds	2
   858  00003C                     ??i2_send_msg:
   859  00003C                     ??i2_recv_msg:
   860                           
   861                           ; 0 bytes @ 0x3B
   862  00003C                     	ds	1
   863  00003D                     i2ToMainHigh_sendmsg@msgtype:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x3C
   867  00003D                     	ds	1
   868  00003E                     FromMainHigh_recvmsg@maxlength:
   869                           	opt stack 0
   870  00003E                     i2ToMainHigh_sendmsg@data:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x3D
   874  00003E                     	ds	2
   875  000040                     tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           
   882                           ; 0 bytes @ 0x3F
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 187 in file "source/main.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  ic             77   55[BANK1 ] struct __i2c_comm
   893 ;;  msgbuffer      23    0[BANK1 ] unsigned char [23]
   894 ;;  uc             23   30[BANK1 ] struct __uart_comm
   895 ;;  uthread_data    2   28[BANK1 ] struct __uart_thread_str
   896 ;;  t1thread_dat    2   26[BANK1 ] struct __timer1_thread_s
   897 ;;  t0thread_dat    2   24[BANK1 ] struct __timer0_thread_s
   898 ;;  msgtype         1   54[BANK1 ] unsigned char 
   899 ;;  length          1   53[BANK1 ] char 
   900 ;;  last_reg_rec    1   23[BANK1 ] unsigned char 
   901 ;;  i               1    0        unsigned char 
   902 ;;  c               1    0        unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0     132       0       0
   914 ;;      Temps:          0       0       0       0       0
   915 ;;      Totals:         0       0     132       0       0
   916 ;;Total ram usage:      132 bytes
   917 ;; Hardware stack levels required when called:   16
   918 ;; This function calls:
   919 ;;		_OpenUSART
   920 ;;		_ToMainHigh_recvmsg
   921 ;;		_ToMainLow_recvmsg
   922 ;;		_block_on_To_msgqueues
   923 ;;		_enable_interrupts
   924 ;;		_i2c_configure_slave
   925 ;;		_init_i2c
   926 ;;		_init_queues
   927 ;;		_init_timer1_lthread
   928 ;;		_init_uart_recv
   929 ;;		_motor_lthread
   930 ;;		_start_i2c_slave_reply
   931 ;;		_timer0_lthread
   932 ;;		_uart_lthread
   933 ;; This function is called by:
   934 ;;		Startup code after reset
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text0
   939  000C12                     __ptext0:
   940                           	opt stack 0
   941  000C12                     _main:
   942                           	opt stack 15
   943                           
   944                           ;main.c: 188: char c;
   945                           ;main.c: 189: signed char length;
   946                           ;main.c: 190: unsigned char msgtype;
   947                           ;main.c: 191: unsigned char last_reg_recvd;
   948                           ;main.c: 192: uart_comm uc;
   949                           ;main.c: 193: i2c_comm ic;
   950                           ;main.c: 194: unsigned char msgbuffer[22 + 1];
   951                           ;main.c: 195: unsigned char i;
   952                           ;main.c: 196: uart_thread_struct uthread_data;
   953                           ;main.c: 197: timer1_thread_struct t1thread_data;
   954                           ;main.c: 198: timer0_thread_struct t0thread_data;
   955                           ;main.c: 206: OSCCON = 0x82;
   956                           
   957                           ;incstack = 0
   958  000C12  0E82               	movlw	130
   959  000C14  6ED3               	movwf	4051,c	;volatile
   960                           
   961                           ;main.c: 207: OSCTUNEbits.PLLEN = 1;
   962  000C16  8C9B               	bsf	3995,6,c	;volatile
   963                           
   964                           ;main.c: 225: init_uart_recv(&uc);
   965  000C18  0101               	movlb	1	; () banked
   966  000C1A  0E01               	movlw	high main@uc
   967  000C1C  0100               	movlb	0	; () banked
   968  000C1E  0100               	movlb	0	; () banked
   969  000C20  6FA6               	movwf	(init_uart_recv@uc+1)& (0+255),b
   970  000C22  0101               	movlb	1	; () banked
   971  000C24  0E1E               	movlw	low main@uc
   972  000C26  0100               	movlb	0	; () banked
   973  000C28  0100               	movlb	0	; () banked
   974  000C2A  6FA5               	movwf	init_uart_recv@uc& (0+255),b
   975  000C2C  EC6A  F011         	call	_init_uart_recv	;wreg free
   976                           
   977                           ;main.c: 228: init_i2c(&ic);
   978  000C30  0101               	movlb	1	; () banked
   979  000C32  0E01               	movlw	high main@ic
   980  000C34  0100               	movlb	0	; () banked
   981  000C36  0100               	movlb	0	; () banked
   982  000C38  6FA6               	movwf	(init_i2c@ic+1)& (0+255),b
   983  000C3A  0101               	movlb	1	; () banked
   984  000C3C  0E37               	movlw	low main@ic
   985  000C3E  0100               	movlb	0	; () banked
   986  000C40  0100               	movlb	0	; () banked
   987  000C42  6FA5               	movwf	init_i2c@ic& (0+255),b
   988  000C44  EC43  F00C         	call	_init_i2c	;wreg free
   989                           
   990                           ;main.c: 231: init_timer1_lthread(&t1thread_data);
   991  000C48  0101               	movlb	1	; () banked
   992  000C4A  0E01               	movlw	high main@t1thread_data
   993  000C4C  0100               	movlb	0	; () banked
   994  000C4E  0100               	movlb	0	; () banked
   995  000C50  6FA6               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   996  000C52  0101               	movlb	1	; () banked
   997  000C54  0E1A               	movlw	low main@t1thread_data
   998  000C56  0100               	movlb	0	; () banked
   999  000C58  0100               	movlb	0	; () banked
  1000  000C5A  6FA5               	movwf	init_timer1_lthread@tptr& (0+255),b
  1001  000C5C  ECE2  F011         	call	_init_timer1_lthread	;wreg free
  1002                           
  1003                           ;main.c: 234: init_queues();
  1004  000C60  EC05  F00F         	call	_init_queues	;wreg free
  1005                           
  1006                           ;main.c: 238: TRISB = 0x0;
  1007  000C64  0E00               	movlw	0
  1008  000C66  6E93               	movwf	3987,c	;volatile
  1009                           
  1010                           ;main.c: 239: LATB = 0x0;
  1011  000C68  0E00               	movlw	0
  1012  000C6A  6E8A               	movwf	3978,c	;volatile
  1013                           
  1014                           ;main.c: 268: IPR1bits.TMR1IP = 0;
  1015  000C6C  909F               	bcf	3999,0,c	;volatile
  1016                           
  1017                           ;main.c: 270: IPR1bits.RCIP = 0;
  1018  000C6E  9A9F               	bcf	3999,5,c	;volatile
  1019                           
  1020                           ;main.c: 272: IPR1bits.SSPIP = 1;
  1021  000C70  869F               	bsf	3999,3,c	;volatile
  1022                           
  1023                           ;main.c: 281: i2c_configure_slave(0x9E);
  1024  000C72  0E9E               	movlw	158
  1025  000C74  ECD0  F010         	call	_i2c_configure_slave
  1026                           
  1027                           ;main.c: 296: PIE1bits.SSPIE = 1;
  1028  000C78  869D               	bsf	3997,3,c	;volatile
  1029                           
  1030                           ;main.c: 307: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1031                           ;main.c: 308: 0b11111111 & 0b11101111, 0x26);
  1032  000C7A  0E00               	movlw	0
  1033  000C7C  0100               	movlb	0	; () banked
  1034  000C7E  0100               	movlb	0	; () banked
  1035  000C80  6FA6               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1036  000C82  0E26               	movlw	38
  1037  000C84  0100               	movlb	0	; () banked
  1038  000C86  6FA5               	movwf	OpenUSART@spbrg& (0+255),b
  1039  000C88  0E6C               	movlw	108
  1040  000C8A  ECC3  F00D         	call	_OpenUSART
  1041                           
  1042                           ;main.c: 314: enable_interrupts();
  1043  000C8E  EC15  F012         	call	_enable_interrupts	;wreg free
  1044  000C92                     l2548:
  1045                           
  1046                           ;main.c: 338: block_on_To_msgqueues();
  1047  000C92  EC4D  F00E         	call	_block_on_To_msgqueues	;wreg free
  1048                           
  1049                           ;main.c: 345: length = ToMainHigh_recvmsg(22, &msgtype, (void *) msgbuffer);
  1050  000C96  0101               	movlb	1	; () banked
  1051  000C98  0E01               	movlw	high main@msgtype
  1052  000C9A  0100               	movlb	0	; () banked
  1053  000C9C  0100               	movlb	0	; () banked
  1054  000C9E  6FBE               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1055  000CA0  0101               	movlb	1	; () banked
  1056  000CA2  0E36               	movlw	low main@msgtype
  1057  000CA4  0100               	movlb	0	; () banked
  1058  000CA6  0100               	movlb	0	; () banked
  1059  000CA8  6FBD               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1060  000CAA  0101               	movlb	1	; () banked
  1061  000CAC  0E01               	movlw	high main@msgbuffer
  1062  000CAE  0100               	movlb	0	; () banked
  1063  000CB0  0100               	movlb	0	; () banked
  1064  000CB2  6FC0               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1065  000CB4  0101               	movlb	1	; () banked
  1066  000CB6  0E00               	movlw	low main@msgbuffer
  1067  000CB8  0100               	movlb	0	; () banked
  1068  000CBA  0100               	movlb	0	; () banked
  1069  000CBC  6FBF               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1070  000CBE  0E16               	movlw	22
  1071  000CC0  EC4E  F010         	call	_ToMainHigh_recvmsg
  1072  000CC4  0101               	movlb	1	; () banked
  1073  000CC6  0101               	movlb	1	; () banked
  1074  000CC8  6F35               	movwf	main@length& (0+255),b
  1075                           
  1076                           ; BSR set to: 1
  1077                           ;main.c: 346: if (length < 0) {
  1078  000CCA  0101               	movlb	1	; () banked
  1079  000CCC  0101               	movlb	1	; () banked
  1080  000CCE  BF35               	btfsc	main@length& (0+255),7,b
  1081  000CD0  D09A               	goto	l2568
  1082  000CD2  D084               	goto	l2566
  1083  000CD4                     l2556:
  1084                           
  1085                           ; BSR set to: 1
  1086                           ;main.c: 354: {
  1087                           ;main.c: 355: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1088  000CD4  0101               	movlb	1	; () banked
  1089  000CD6  0E01               	movlw	high main@t0thread_data
  1090  000CD8  0100               	movlb	0	; () banked
  1091  000CDA  0100               	movlb	0	; () banked
  1092  000CDC  6FA6               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1093  000CDE  0101               	movlb	1	; () banked
  1094  000CE0  0E18               	movlw	low main@t0thread_data
  1095  000CE2  0100               	movlb	0	; () banked
  1096  000CE4  0100               	movlb	0	; () banked
  1097  000CE6  6FA5               	movwf	timer0_lthread@tptr& (0+255),b
  1098  000CE8  0101               	movlb	1	; () banked
  1099  000CEA  0100               	movlb	0	; () banked
  1100  000CEC  C136  F0A7         	movff	main@msgtype,timer0_lthread@msgtype
  1101  000CF0  0100               	movlb	0	; () banked
  1102  000CF2  0100               	movlb	0	; () banked
  1103  000CF4  6BA8               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1104  000CF6  0101               	movlb	1	; () banked
  1105  000CF8  0101               	movlb	1	; () banked
  1106  000CFA  5135               	movf	main@length& (0+255),w,b
  1107  000CFC  0100               	movlb	0	; () banked
  1108  000CFE  0100               	movlb	0	; () banked
  1109  000D00  6FA9               	movwf	timer0_lthread@length& (0+255),b
  1110  000D02  0100               	movlb	0	; () banked
  1111  000D04  6BAA               	clrf	(timer0_lthread@length+1)& (0+255),b
  1112  000D06  0100               	movlb	0	; () banked
  1113  000D08  BFA9               	btfsc	timer0_lthread@length& (0+255),7,b
  1114  000D0A  07AA               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1115  000D0C  0101               	movlb	1	; () banked
  1116  000D0E  0E01               	movlw	high main@msgbuffer
  1117  000D10  0100               	movlb	0	; () banked
  1118  000D12  0100               	movlb	0	; () banked
  1119  000D14  6FAC               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1120  000D16  0101               	movlb	1	; () banked
  1121  000D18  0E00               	movlw	low main@msgbuffer
  1122  000D1A  0100               	movlb	0	; () banked
  1123  000D1C  0100               	movlb	0	; () banked
  1124  000D1E  6FAB               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1125  000D20  ECD9  F011         	call	_timer0_lthread	;wreg free
  1126                           
  1127                           ;main.c: 356: break;
  1128  000D24  D070               	goto	l2568
  1129  000D26                     l100:
  1130                           
  1131                           ; BSR set to: 1
  1132                           ;main.c: 363: {
  1133                           ;main.c: 366: last_reg_recvd = msgbuffer[0];
  1134  000D26  C100  F117         	movff	main@msgbuffer,main@last_reg_recvd
  1135                           
  1136                           ;main.c: 367: break;
  1137  000D2A  D06D               	goto	l2568
  1138  000D2C                     l2558:
  1139                           
  1140                           ; BSR set to: 1
  1141                           ;main.c: 370: {
  1142                           ;main.c: 378: start_i2c_slave_reply(length, msgbuffer);
  1143  000D2C  0101               	movlb	1	; () banked
  1144  000D2E  0E01               	movlw	high main@msgbuffer
  1145  000D30  0100               	movlb	0	; () banked
  1146  000D32  0100               	movlb	0	; () banked
  1147  000D34  6FA6               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1148  000D36  0101               	movlb	1	; () banked
  1149  000D38  0E00               	movlw	low main@msgbuffer
  1150  000D3A  0100               	movlb	0	; () banked
  1151  000D3C  0100               	movlb	0	; () banked
  1152  000D3E  6FA5               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1153  000D40  0101               	movlb	1	; () banked
  1154  000D42  0101               	movlb	1	; () banked
  1155  000D44  5135               	movf	main@length& (0+255),w,b
  1156  000D46  EC56  F007         	call	_start_i2c_slave_reply
  1157                           
  1158                           ;main.c: 379: break;
  1159  000D4A  D05D               	goto	l2568
  1160  000D4C                     l2560:
  1161                           
  1162                           ;main.c: 382: {
  1163                           ;main.c: 383: motor_lthread(msgtype,length,msgbuffer);
  1164  000D4C  0101               	movlb	1	; () banked
  1165  000D4E  0100               	movlb	0	; () banked
  1166  000D50  C136  F0BF         	movff	main@msgtype,motor_lthread@msgtype
  1167  000D54  0100               	movlb	0	; () banked
  1168  000D56  0100               	movlb	0	; () banked
  1169  000D58  6BC0               	clrf	(motor_lthread@msgtype+1)& (0+255),b
  1170  000D5A  0101               	movlb	1	; () banked
  1171  000D5C  0101               	movlb	1	; () banked
  1172  000D5E  5135               	movf	main@length& (0+255),w,b
  1173  000D60  0100               	movlb	0	; () banked
  1174  000D62  0100               	movlb	0	; () banked
  1175  000D64  6FC1               	movwf	motor_lthread@length& (0+255),b
  1176  000D66  0100               	movlb	0	; () banked
  1177  000D68  6BC2               	clrf	(motor_lthread@length+1)& (0+255),b
  1178  000D6A  0100               	movlb	0	; () banked
  1179  000D6C  BFC1               	btfsc	motor_lthread@length& (0+255),7,b
  1180  000D6E  07C2               	decf	(motor_lthread@length+1)& (0+255),f,b
  1181  000D70  0101               	movlb	1	; () banked
  1182  000D72  0E01               	movlw	high main@msgbuffer
  1183  000D74  0100               	movlb	0	; () banked
  1184  000D76  0100               	movlb	0	; () banked
  1185  000D78  6FC4               	movwf	(motor_lthread@msgbuffer+1)& (0+255),b
  1186  000D7A  0101               	movlb	1	; () banked
  1187  000D7C  0E00               	movlw	low main@msgbuffer
  1188  000D7E  0100               	movlb	0	; () banked
  1189  000D80  0100               	movlb	0	; () banked
  1190  000D82  6FC3               	movwf	motor_lthread@msgbuffer& (0+255),b
  1191  000D84  EC4B  F00A         	call	_motor_lthread	;wreg free
  1192                           
  1193                           ;main.c: 384: break;
  1194  000D88  D03E               	goto	l2568
  1195  000D8A                     l2562:
  1196                           
  1197                           ;main.c: 387: {
  1198                           ;main.c: 388: uart_lthread(&uthread_data,msgtype,length,msgbuffer);
  1199  000D8A  0101               	movlb	1	; () banked
  1200  000D8C  0E01               	movlw	high main@uthread_data
  1201  000D8E  0100               	movlb	0	; () banked
  1202  000D90  0100               	movlb	0	; () banked
  1203  000D92  6FA7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1204  000D94  0101               	movlb	1	; () banked
  1205  000D96  0E1C               	movlw	low main@uthread_data
  1206  000D98  0100               	movlb	0	; () banked
  1207  000D9A  0100               	movlb	0	; () banked
  1208  000D9C  6FA6               	movwf	uart_lthread@uptr& (0+255),b
  1209  000D9E  0101               	movlb	1	; () banked
  1210  000DA0  0100               	movlb	0	; () banked
  1211  000DA2  C136  F0A8         	movff	main@msgtype,uart_lthread@msgtype
  1212  000DA6  0100               	movlb	0	; () banked
  1213  000DA8  0100               	movlb	0	; () banked
  1214  000DAA  6BA9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1215  000DAC  0101               	movlb	1	; () banked
  1216  000DAE  0101               	movlb	1	; () banked
  1217  000DB0  5135               	movf	main@length& (0+255),w,b
  1218  000DB2  0100               	movlb	0	; () banked
  1219  000DB4  0100               	movlb	0	; () banked
  1220  000DB6  6FAA               	movwf	uart_lthread@length& (0+255),b
  1221  000DB8  0100               	movlb	0	; () banked
  1222  000DBA  6BAB               	clrf	(uart_lthread@length+1)& (0+255),b
  1223  000DBC  0100               	movlb	0	; () banked
  1224  000DBE  BFAA               	btfsc	uart_lthread@length& (0+255),7,b
  1225  000DC0  07AB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1226  000DC2  0101               	movlb	1	; () banked
  1227  000DC4  0E01               	movlw	high main@msgbuffer
  1228  000DC6  0100               	movlb	0	; () banked
  1229  000DC8  0100               	movlb	0	; () banked
  1230  000DCA  6FAD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1231  000DCC  0101               	movlb	1	; () banked
  1232  000DCE  0E00               	movlw	low main@msgbuffer
  1233  000DD0  0100               	movlb	0	; () banked
  1234  000DD2  0100               	movlb	0	; () banked
  1235  000DD4  6FAC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1236  000DD6  EC0E  F00D         	call	_uart_lthread	;wreg free
  1237                           
  1238                           ;main.c: 389: break;
  1239  000DDA  D015               	goto	l2568
  1240  000DDC                     l2566:
  1241  000DDC  0101               	movlb	1	; () banked
  1242  000DDE  0101               	movlb	1	; () banked
  1243  000DE0  5136               	movf	main@msgtype& (0+255),w,b
  1244                           
  1245                           ; Switch size 1, requested type "space"
  1246                           ; Number of cases is 6, Range of values is 10 to 48
  1247                           ; switch strategies available:
  1248                           ; Name         Instructions Cycles
  1249                           ; simple_byte           19    10 (average)
  1250                           ;	Chosen strategy is simple_byte
  1251  000DE2  0A0A               	xorlw	10	; case 10
  1252  000DE4  B4D8               	btfsc	status,2,c
  1253  000DE6  D776               	goto	l2556
  1254  000DE8  0A22               	xorlw	34	; case 40
  1255  000DEA  B4D8               	btfsc	status,2,c
  1256  000DEC  D00C               	goto	l2568
  1257  000DEE  0A01               	xorlw	1	; case 41
  1258  000DF0  B4D8               	btfsc	status,2,c
  1259  000DF2  D799               	goto	l100
  1260  000DF4  0A03               	xorlw	3	; case 42
  1261  000DF6  B4D8               	btfsc	status,2,c
  1262  000DF8  D799               	goto	l2558
  1263  000DFA  0A05               	xorlw	5	; case 47
  1264  000DFC  B4D8               	btfsc	status,2,c
  1265  000DFE  D7C5               	goto	l2562
  1266  000E00  0A1F               	xorlw	31	; case 48
  1267  000E02  B4D8               	btfsc	status,2,c
  1268  000E04  D7A3               	goto	l2560
  1269  000E06                     l2568:
  1270                           
  1271                           ;main.c: 397: }
  1272                           ;main.c: 400: length = ToMainLow_recvmsg(22, &msgtype, (void *) msgbuffer);
  1273  000E06  0101               	movlb	1	; () banked
  1274  000E08  0E01               	movlw	high main@msgtype
  1275  000E0A  0100               	movlb	0	; () banked
  1276  000E0C  0100               	movlb	0	; () banked
  1277  000E0E  6FBE               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1278  000E10  0101               	movlb	1	; () banked
  1279  000E12  0E36               	movlw	low main@msgtype
  1280  000E14  0100               	movlb	0	; () banked
  1281  000E16  0100               	movlb	0	; () banked
  1282  000E18  6FBD               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1283  000E1A  0101               	movlb	1	; () banked
  1284  000E1C  0E01               	movlw	high main@msgbuffer
  1285  000E1E  0100               	movlb	0	; () banked
  1286  000E20  0100               	movlb	0	; () banked
  1287  000E22  6FC0               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1288  000E24  0101               	movlb	1	; () banked
  1289  000E26  0E00               	movlw	low main@msgbuffer
  1290  000E28  0100               	movlb	0	; () banked
  1291  000E2A  0100               	movlb	0	; () banked
  1292  000E2C  6FBF               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1293  000E2E  0E16               	movlw	22
  1294  000E30  EC2D  F010         	call	_ToMainLow_recvmsg
  1295  000E34  0101               	movlb	1	; () banked
  1296  000E36  0101               	movlb	1	; () banked
  1297  000E38  6F35               	movwf	main@length& (0+255),b
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 401: if (length < 0) {
  1301  000E3A  0101               	movlb	1	; () banked
  1302  000E3C  0101               	movlb	1	; () banked
  1303  000E3E  BF35               	btfsc	main@length& (0+255),7,b
  1304  000E40  D728               	goto	l2548
  1305  000E42  D029               	goto	l2578
  1306  000E44                     l2574:
  1307                           
  1308                           ; BSR set to: 1
  1309                           ;main.c: 414: case 31:
  1310                           ;main.c: 415: {
  1311                           ;main.c: 416: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1312  000E44  0101               	movlb	1	; () banked
  1313  000E46  0E01               	movlw	high main@uthread_data
  1314  000E48  0100               	movlb	0	; () banked
  1315  000E4A  0100               	movlb	0	; () banked
  1316  000E4C  6FA7               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1317  000E4E  0101               	movlb	1	; () banked
  1318  000E50  0E1C               	movlw	low main@uthread_data
  1319  000E52  0100               	movlb	0	; () banked
  1320  000E54  0100               	movlb	0	; () banked
  1321  000E56  6FA6               	movwf	uart_lthread@uptr& (0+255),b
  1322  000E58  0101               	movlb	1	; () banked
  1323  000E5A  0100               	movlb	0	; () banked
  1324  000E5C  C136  F0A8         	movff	main@msgtype,uart_lthread@msgtype
  1325  000E60  0100               	movlb	0	; () banked
  1326  000E62  0100               	movlb	0	; () banked
  1327  000E64  6BA9               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1328  000E66  0101               	movlb	1	; () banked
  1329  000E68  0101               	movlb	1	; () banked
  1330  000E6A  5135               	movf	main@length& (0+255),w,b
  1331  000E6C  0100               	movlb	0	; () banked
  1332  000E6E  0100               	movlb	0	; () banked
  1333  000E70  6FAA               	movwf	uart_lthread@length& (0+255),b
  1334  000E72  0100               	movlb	0	; () banked
  1335  000E74  6BAB               	clrf	(uart_lthread@length+1)& (0+255),b
  1336  000E76  0100               	movlb	0	; () banked
  1337  000E78  BFAA               	btfsc	uart_lthread@length& (0+255),7,b
  1338  000E7A  07AB               	decf	(uart_lthread@length+1)& (0+255),f,b
  1339  000E7C  0101               	movlb	1	; () banked
  1340  000E7E  0E01               	movlw	high main@msgbuffer
  1341  000E80  0100               	movlb	0	; () banked
  1342  000E82  0100               	movlb	0	; () banked
  1343  000E84  6FAD               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1344  000E86  0101               	movlb	1	; () banked
  1345  000E88  0E00               	movlw	low main@msgbuffer
  1346  000E8A  0100               	movlb	0	; () banked
  1347  000E8C  0100               	movlb	0	; () banked
  1348  000E8E  6FAC               	movwf	uart_lthread@msgbuffer& (0+255),b
  1349  000E90  EC0E  F00D         	call	_uart_lthread	;wreg free
  1350                           
  1351                           ;main.c: 417: break;
  1352  000E94  D6FE               	goto	l2548
  1353  000E96                     l2578:
  1354  000E96  0101               	movlb	1	; () banked
  1355  000E98  0101               	movlb	1	; () banked
  1356  000E9A  5136               	movf	main@msgtype& (0+255),w,b
  1357                           
  1358                           ; Switch size 1, requested type "space"
  1359                           ; Number of cases is 3, Range of values is 30 to 50
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte           10     6 (average)
  1363                           ;	Chosen strategy is simple_byte
  1364  000E9C  0A1E               	xorlw	30	; case 30
  1365  000E9E  B4D8               	btfsc	status,2,c
  1366  000EA0  D7D1               	goto	l2574
  1367  000EA2  0A01               	xorlw	1	; case 31
  1368  000EA4  B4D8               	btfsc	status,2,c
  1369  000EA6  D7CE               	goto	l2574
  1370  000EA8  0A2D               	xorlw	45	; case 50
  1371  000EAA  D6F3               	goto	l2548
  1372  000EAC                     __end_of_main:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           status	equ	0xFD8
  1381                           
  1382 ;; *************** function _uart_lthread *****************
  1383 ;; Defined at:
  1384 ;;		line 9 in file "source/uart_thread.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  uptr            2   38[BANK0 ] PTR struct __uart_thread
  1387 ;;		 -> main@uthread_data(2), 
  1388 ;;  msgtype         2   40[BANK0 ] int 
  1389 ;;  length          2   42[BANK0 ] int 
  1390 ;;  msgbuffer       2   44[BANK0 ] PTR unsigned char 
  1391 ;;		 -> main@msgbuffer(23), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  x               2   47[BANK0 ] int 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2   38[BANK0 ] int 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1403 ;;      Params:         0       8       0       0       0
  1404 ;;      Locals:         0       2       0       0       0
  1405 ;;      Temps:          0       1       0       0       0
  1406 ;;      Totals:         0      11       0       0       0
  1407 ;;Total ram usage:       11 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:   13
  1410 ;; This function calls:
  1411 ;;		_WriteUSART
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text1
  1418  001A1C                     __ptext1:
  1419                           	opt stack 0
  1420  001A1C                     _uart_lthread:
  1421                           	opt stack 17
  1422                           
  1423                           ;uart_thread.c: 10: if (msgtype == 30) {
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;incstack = 0
  1427  001A1C  0100               	movlb	0	; () banked
  1428  001A1E  0100               	movlb	0	; () banked
  1429  001A20  51A8               	movf	uart_lthread@msgtype& (0+255),w,b
  1430  001A22  0A1E               	xorlw	30
  1431  001A24  11A9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1432  001A26  B4D8               	btfsc	status,2,c
  1433  001A28  0012               	return	
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1437                           
  1438                           ; BSR set to: 0
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;uart_thread.c: 11: }
  1442  001A2A  0100               	movlb	0	; () banked
  1443  001A2C  0100               	movlb	0	; () banked
  1444  001A2E  51A8               	movf	uart_lthread@msgtype& (0+255),w,b
  1445  001A30  0A1F               	xorlw	31
  1446  001A32  11A9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1447  001A34  A4D8               	btfss	status,2,c
  1448  001A36  D011               	goto	l2776
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1452  001A38  0100               	movlb	0	; () banked
  1453  001A3A  0100               	movlb	0	; () banked
  1454  001A3C  51AA               	movf	uart_lthread@length& (0+255),w,b
  1455  001A3E  0100               	movlb	0	; () banked
  1456  001A40  0100               	movlb	0	; () banked
  1457  001A42  25AC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1458  001A44  6ED9               	movwf	fsr2l,c
  1459  001A46  0100               	movlb	0	; () banked
  1460  001A48  0100               	movlb	0	; () banked
  1461  001A4A  51AB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1462  001A4C  0100               	movlb	0	; () banked
  1463  001A4E  0100               	movlb	0	; () banked
  1464  001A50  21AD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1465  001A52  6EDA               	movwf	fsr2h,c
  1466  001A54  0E00               	movlw	0
  1467  001A56  6EDF               	movwf	indf2,c
  1468                           
  1469                           ;uart_thread.c: 18: }
  1470  001A58  0012               	return	
  1471  001A5A                     l2776:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;uart_thread.c: 19: else if(msgtype == 47)
  1475  001A5A  0100               	movlb	0	; () banked
  1476  001A5C  0100               	movlb	0	; () banked
  1477  001A5E  51A8               	movf	uart_lthread@msgtype& (0+255),w,b
  1478  001A60  0A2F               	xorlw	47
  1479  001A62  11A9               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1480  001A64  A4D8               	btfss	status,2,c
  1481  001A66  0012               	return	
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;uart_thread.c: 20: {
  1485                           ;uart_thread.c: 22: int x = 0;
  1486  001A68  0E00               	movlw	0
  1487  001A6A  0100               	movlb	0	; () banked
  1488  001A6C  0100               	movlb	0	; () banked
  1489  001A6E  6FB0               	movwf	(uart_lthread@x+1)& (0+255),b
  1490  001A70  0E00               	movlw	0
  1491  001A72  0100               	movlb	0	; () banked
  1492  001A74  6FAF               	movwf	uart_lthread@x& (0+255),b
  1493                           
  1494                           ;uart_thread.c: 24: for(x = 0; x < length; x++ )
  1495  001A76  0E00               	movlw	0
  1496  001A78  0100               	movlb	0	; () banked
  1497  001A7A  0100               	movlb	0	; () banked
  1498  001A7C  6FB0               	movwf	(uart_lthread@x+1)& (0+255),b
  1499  001A7E  0E00               	movlw	0
  1500  001A80  0100               	movlb	0	; () banked
  1501  001A82  6FAF               	movwf	uart_lthread@x& (0+255),b
  1502  001A84  D017               	goto	l2784
  1503  001A86                     l472:
  1504  001A86  A2AC               	btfss	4012,1,c	;volatile
  1505  001A88  D7FE               	goto	l472
  1506                           
  1507                           ;uart_thread.c: 27: WriteUSART(msgbuffer[x]);
  1508  001A8A  0100               	movlb	0	; () banked
  1509  001A8C  0100               	movlb	0	; () banked
  1510  001A8E  51AF               	movf	uart_lthread@x& (0+255),w,b
  1511  001A90  0100               	movlb	0	; () banked
  1512  001A92  0100               	movlb	0	; () banked
  1513  001A94  25AC               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1514  001A96  6ED9               	movwf	fsr2l,c
  1515  001A98  0100               	movlb	0	; () banked
  1516  001A9A  0100               	movlb	0	; () banked
  1517  001A9C  51B0               	movf	(uart_lthread@x+1)& (0+255),w,b
  1518  001A9E  0100               	movlb	0	; () banked
  1519  001AA0  0100               	movlb	0	; () banked
  1520  001AA2  21AD               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1521  001AA4  6EDA               	movwf	fsr2h,c
  1522  001AA6  50DF               	movf	indf2,w,c
  1523  001AA8  ECCF  F011         	call	_WriteUSART
  1524  001AAC  0100               	movlb	0	; () banked
  1525  001AAE  0100               	movlb	0	; () banked
  1526  001AB0  4BAF               	infsnz	uart_lthread@x& (0+255),f,b
  1527  001AB2  2BB0               	incf	(uart_lthread@x+1)& (0+255),f,b
  1528  001AB4                     l2784:
  1529                           
  1530                           ; BSR set to: 0
  1531  001AB4  0100               	movlb	0	; () banked
  1532  001AB6  0100               	movlb	0	; () banked
  1533  001AB8  51B0               	movf	(uart_lthread@x+1)& (0+255),w,b
  1534  001ABA  0A80               	xorlw	128
  1535  001ABC  0100               	movlb	0	; () banked
  1536  001ABE  6FAE               	movwf	??_uart_lthread& (0+255),b
  1537  001AC0  0100               	movlb	0	; () banked
  1538  001AC2  51AA               	movf	uart_lthread@length& (0+255),w,b
  1539  001AC4  0100               	movlb	0	; () banked
  1540  001AC6  0100               	movlb	0	; () banked
  1541  001AC8  5DAF               	subwf	uart_lthread@x& (0+255),w,b
  1542  001ACA  0100               	movlb	0	; () banked
  1543  001ACC  0100               	movlb	0	; () banked
  1544  001ACE  51AB               	movf	(uart_lthread@length+1)& (0+255),w,b
  1545  001AD0  0A80               	xorlw	128
  1546  001AD2  0100               	movlb	0	; () banked
  1547  001AD4  59AE               	subwfb	??_uart_lthread& (0+255),w,b
  1548  001AD6  B0D8               	btfsc	status,0,c
  1549                           
  1550                           ; BSR set to: 0
  1551                           
  1552                           ; BSR set to: 0
  1553                           
  1554                           ; BSR set to: 0
  1555                           
  1556                           ; BSR set to: 0
  1557                           
  1558                           ; BSR set to: 0
  1559  001AD8  0012               	return	
  1560  001ADA  D7D5               	goto	l472
  1561  001ADC                     __end_of_uart_lthread:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           indf2	equ	0xFDF
  1570                           fsr2h	equ	0xFDA
  1571                           fsr2l	equ	0xFD9
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function _WriteUSART *****************
  1575 ;; Defined at:
  1576 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  data            1    wreg     unsigned char 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  data            1   37[BANK0 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;		None               void
  1583 ;; Registers used:
  1584 ;;		wreg
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1590 ;;      Params:         0       0       0       0       0
  1591 ;;      Locals:         0       1       0       0       0
  1592 ;;      Temps:          0       0       0       0       0
  1593 ;;      Totals:         0       1       0       0       0
  1594 ;;Total ram usage:        1 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:   12
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_uart_lthread
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text2
  1605  00239E                     __ptext2:
  1606                           	opt stack 0
  1607  00239E                     _WriteUSART:
  1608                           	opt stack 17
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;incstack = 0
  1612                           ;WriteUSART@data stored from wreg
  1613  00239E  CFE8 F0A5          	movff	wreg,WriteUSART@data
  1614  0023A2  ACAC               	btfss	4012,6,c	;volatile
  1615  0023A4  D003               	goto	l3270
  1616  0023A6  90AC               	bcf	4012,0,c	;volatile
  1617  0023A8  B24C               	btfsc	_USART_Status,1,c
  1618  0023AA  80AC               	bsf	4012,0,c	;volatile
  1619  0023AC                     l3270:
  1620  0023AC  C0A5  FFAD         	movff	WriteUSART@data,4013	;volatile
  1621  0023B0  0012               	return	
  1622  0023B2                     __end_of_WriteUSART:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           indf2	equ	0xFDF
  1631                           fsr2h	equ	0xFDA
  1632                           fsr2l	equ	0xFD9
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _timer0_lthread *****************
  1636 ;; Defined at:
  1637 ;;		line 9 in file "source/timer0_thread.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  tptr            2   37[BANK0 ] PTR struct __timer0_thre
  1640 ;;		 -> main@t0thread_data(2), 
  1641 ;;  msgtype         2   39[BANK0 ] int 
  1642 ;;  length          2   41[BANK0 ] int 
  1643 ;;  msgbuffer       2   43[BANK0 ] PTR unsigned char 
  1644 ;;		 -> main@msgbuffer(23), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  msgval          2   45[BANK0 ] PTR unsigned int 
  1647 ;;		 -> main@msgbuffer(23), 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   37[BANK0 ] int 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1657 ;;      Params:         0       8       0       0       0
  1658 ;;      Locals:         0       2       0       0       0
  1659 ;;      Temps:          0       0       0       0       0
  1660 ;;      Totals:         0      10       0       0       0
  1661 ;;Total ram usage:       10 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:   12
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text3
  1672  0023B2                     __ptext3:
  1673                           	opt stack 0
  1674  0023B2                     _timer0_lthread:
  1675                           	opt stack 18
  1676                           
  1677                           ;timer0_thread.c: 10: unsigned int *msgval;
  1678                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  1679                           
  1680                           ;incstack = 0
  1681  0023B2  0100               	movlb	0	; () banked
  1682  0023B4  0100               	movlb	0	; () banked
  1683  0023B6  C0AC  F0AE         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1684  0023BA  0100               	movlb	0	; () banked
  1685  0023BC  0100               	movlb	0	; () banked
  1686  0023BE  C0AB  F0AD         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1687                           
  1688                           ; BSR set to: 0
  1689  0023C2  0012               	return	
  1690  0023C4                     __end_of_timer0_lthread:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           indf2	equ	0xFDF
  1699                           fsr2h	equ	0xFDA
  1700                           fsr2l	equ	0xFD9
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _start_i2c_slave_reply *****************
  1704 ;; Defined at:
  1705 ;;		line 122 in file "source/my_i2c.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  length          1    wreg     unsigned char 
  1708 ;;  msg             2   37[BANK0 ] PTR unsigned char 
  1709 ;;		 -> NULL(0), main@msgbuffer(23), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  length          1   42[BANK0 ] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1721 ;;      Params:         0       2       0       0       0
  1722 ;;      Locals:         0       1       0       0       0
  1723 ;;      Temps:          0       3       0       0       0
  1724 ;;      Totals:         0       6       0       0       0
  1725 ;;Total ram usage:        6 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:   12
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text4
  1736  000EAC                     __ptext4:
  1737                           	opt stack 0
  1738  000EAC                     _start_i2c_slave_reply:
  1739                           	opt stack 18
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;incstack = 0
  1743                           ;start_i2c_slave_reply@length stored from wreg
  1744  000EAC  CFE8 F0AA          	movff	wreg,start_i2c_slave_reply@length
  1745                           
  1746                           ;my_i2c.c: 126: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  1747  000EB0  0100               	movlb	0	; () banked
  1748  000EB2  EE20 F032          	lfsr	2,50
  1749  000EB6  0100               	movlb	0	; () banked
  1750  000EB8  51C9               	movf	_ic_ptr& (0+255),w,b
  1751  000EBA  26D9               	addwf	fsr2l,f,c
  1752  000EBC  0100               	movlb	0	; () banked
  1753  000EBE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1754  000EC0  22DA               	addwfc	fsr2h,f,c
  1755  000EC2  0E00               	movlw	0
  1756  000EC4  6EDF               	movwf	indf2,c
  1757  000EC6  D09D               	goto	l2730
  1758  000EC8                     l2718:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;my_i2c.c: 129: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  1762  000EC8  0100               	movlb	0	; () banked
  1763  000ECA  EE20 F032          	lfsr	2,50
  1764  000ECE  0100               	movlb	0	; () banked
  1765  000ED0  51C9               	movf	_ic_ptr& (0+255),w,b
  1766  000ED2  26D9               	addwf	fsr2l,f,c
  1767  000ED4  0100               	movlb	0	; () banked
  1768  000ED6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1769  000ED8  22DA               	addwfc	fsr2h,f,c
  1770  000EDA  50DF               	movf	indf2,w,c
  1771  000EDC  0100               	movlb	0	; () banked
  1772  000EDE  6FA7               	movwf	??_start_i2c_slave_reply& (0+255),b
  1773  000EE0  0100               	movlb	0	; () banked
  1774  000EE2  EE20 F04B          	lfsr	2,75
  1775  000EE6  0100               	movlb	0	; () banked
  1776  000EE8  51C9               	movf	_ic_ptr& (0+255),w,b
  1777  000EEA  26D9               	addwf	fsr2l,f,c
  1778  000EEC  0100               	movlb	0	; () banked
  1779  000EEE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1780  000EF0  22DA               	addwfc	fsr2h,f,c
  1781  000EF2  50DF               	movf	indf2,w,c
  1782  000EF4  0100               	movlb	0	; () banked
  1783  000EF6  5DA7               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1784  000EF8  B0D8               	btfsc	status,0,c
  1785  000EFA  D02C               	goto	l2722
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;my_i2c.c: 130: {
  1789                           ;my_i2c.c: 131: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  1790  000EFC  0100               	movlb	0	; () banked
  1791  000EFE  EE20 F032          	lfsr	2,50
  1792  000F02  0100               	movlb	0	; () banked
  1793  000F04  51C9               	movf	_ic_ptr& (0+255),w,b
  1794  000F06  26D9               	addwf	fsr2l,f,c
  1795  000F08  0100               	movlb	0	; () banked
  1796  000F0A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1797  000F0C  22DA               	addwfc	fsr2h,f,c
  1798  000F0E  50DF               	movf	indf2,w,c
  1799  000F10  0100               	movlb	0	; () banked
  1800  000F12  6FA7               	movwf	??_start_i2c_slave_reply& (0+255),b
  1801  000F14  0100               	movlb	0	; () banked
  1802  000F16  51A7               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1803  000F18  0D01               	mullw	1
  1804  000F1A  0E35               	movlw	53
  1805  000F1C  26F3               	addwf	prodl,f,c
  1806  000F1E  0E00               	movlw	0
  1807  000F20  22F4               	addwfc	prodh,f,c
  1808  000F22  50F3               	movf	prodl,w,c
  1809  000F24  0100               	movlb	0	; () banked
  1810  000F26  0100               	movlb	0	; () banked
  1811  000F28  25C9               	addwf	_ic_ptr& (0+255),w,b
  1812  000F2A  6ED9               	movwf	fsr2l,c
  1813  000F2C  50F4               	movf	prodh,w,c
  1814  000F2E  0100               	movlb	0	; () banked
  1815  000F30  0100               	movlb	0	; () banked
  1816  000F32  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1817  000F34  6EDA               	movwf	fsr2h,c
  1818  000F36  0100               	movlb	0	; () banked
  1819  000F38  EE10 F032          	lfsr	1,50
  1820  000F3C  0100               	movlb	0	; () banked
  1821  000F3E  51C9               	movf	_ic_ptr& (0+255),w,b
  1822  000F40  26E1               	addwf	fsr1l,f,c
  1823  000F42  0100               	movlb	0	; () banked
  1824  000F44  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1825  000F46  22E2               	addwfc	fsr1h,f,c
  1826  000F48  50E7               	movf	indf1,w,c
  1827  000F4A  0100               	movlb	0	; () banked
  1828  000F4C  6FA8               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1829  000F4E  0100               	movlb	0	; () banked
  1830  000F50  51A8               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1831  000F52  D03C               	goto	L3
  1832  000F54                     l2722:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;my_i2c.c: 133: else if(ic_ptr->sendBufLen != 0)
  1836  000F54  0100               	movlb	0	; () banked
  1837  000F56  EE20 F04B          	lfsr	2,75
  1838  000F5A  0100               	movlb	0	; () banked
  1839  000F5C  51C9               	movf	_ic_ptr& (0+255),w,b
  1840  000F5E  26D9               	addwf	fsr2l,f,c
  1841  000F60  0100               	movlb	0	; () banked
  1842  000F62  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1843  000F64  22DA               	addwfc	fsr2h,f,c
  1844  000F66  50DF               	movf	indf2,w,c
  1845  000F68  B4D8               	btfsc	status,2,c
  1846  000F6A  D00B               	goto	l2726
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;my_i2c.c: 134: {
  1850                           ;my_i2c.c: 135: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  1851  000F6C  0100               	movlb	0	; () banked
  1852  000F6E  EE20 F04B          	lfsr	2,75
  1853  000F72  0100               	movlb	0	; () banked
  1854  000F74  51C9               	movf	_ic_ptr& (0+255),w,b
  1855  000F76  26D9               	addwf	fsr2l,f,c
  1856  000F78  0100               	movlb	0	; () banked
  1857  000F7A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1858  000F7C  22DA               	addwfc	fsr2h,f,c
  1859  000F7E  50DF               	movf	indf2,w,c
  1860  000F80  D003               	goto	L2
  1861  000F82                     l2726:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;my_i2c.c: 137: else
  1865                           ;my_i2c.c: 138: {
  1866                           ;my_i2c.c: 139: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  1867  000F82  0100               	movlb	0	; () banked
  1868  000F84  0100               	movlb	0	; () banked
  1869  000F86  51AA               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1870  000F88                     L2:
  1871  000F88  0100               	movlb	0	; () banked
  1872  000F8A  6FA7               	movwf	??_start_i2c_slave_reply& (0+255),b
  1873  000F8C  6BA8               	clrf	(??_start_i2c_slave_reply+1)& (0+255),b
  1874  000F8E  0E34               	movlw	52
  1875  000F90  0100               	movlb	0	; () banked
  1876  000F92  27A7               	addwf	??_start_i2c_slave_reply& (0+255),f,b
  1877  000F94  0E00               	movlw	0
  1878  000F96  23A8               	addwfc	(??_start_i2c_slave_reply+1)& (0+255),f,b
  1879  000F98  0100               	movlb	0	; () banked
  1880  000F9A  51A7               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1881  000F9C  0100               	movlb	0	; () banked
  1882  000F9E  0100               	movlb	0	; () banked
  1883  000FA0  25C9               	addwf	_ic_ptr& (0+255),w,b
  1884  000FA2  6ED9               	movwf	fsr2l,c
  1885  000FA4  0100               	movlb	0	; () banked
  1886  000FA6  51A8               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1887  000FA8  0100               	movlb	0	; () banked
  1888  000FAA  0100               	movlb	0	; () banked
  1889  000FAC  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1890  000FAE  6EDA               	movwf	fsr2h,c
  1891  000FB0  0100               	movlb	0	; () banked
  1892  000FB2  EE10 F032          	lfsr	1,50
  1893  000FB6  0100               	movlb	0	; () banked
  1894  000FB8  51C9               	movf	_ic_ptr& (0+255),w,b
  1895  000FBA  26E1               	addwf	fsr1l,f,c
  1896  000FBC  0100               	movlb	0	; () banked
  1897  000FBE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1898  000FC0  22E2               	addwfc	fsr1h,f,c
  1899  000FC2  50E7               	movf	indf1,w,c
  1900  000FC4  0100               	movlb	0	; () banked
  1901  000FC6  6FA9               	movwf	(??_start_i2c_slave_reply+2)& (0+255),b
  1902  000FC8  0100               	movlb	0	; () banked
  1903  000FCA  51A9               	movf	(??_start_i2c_slave_reply+2)& (0+255),w,b
  1904  000FCC                     L3:
  1905  000FCC  0D01               	mullw	1
  1906  000FCE  0E1C               	movlw	28
  1907  000FD0  26F3               	addwf	prodl,f,c
  1908  000FD2  0E00               	movlw	0
  1909  000FD4  22F4               	addwfc	prodh,f,c
  1910  000FD6  50F3               	movf	prodl,w,c
  1911  000FD8  0100               	movlb	0	; () banked
  1912  000FDA  0100               	movlb	0	; () banked
  1913  000FDC  25C9               	addwf	_ic_ptr& (0+255),w,b
  1914  000FDE  6EE1               	movwf	fsr1l,c
  1915  000FE0  50F4               	movf	prodh,w,c
  1916  000FE2  0100               	movlb	0	; () banked
  1917  000FE4  0100               	movlb	0	; () banked
  1918  000FE6  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1919  000FE8  6EE2               	movwf	fsr1h,c
  1920  000FEA  CFDF FFE7          	movff	indf2,indf1
  1921                           
  1922                           ; BSR set to: 0
  1923                           
  1924                           ; BSR set to: 0
  1925                           
  1926                           ; BSR set to: 0
  1927  000FEE  0100               	movlb	0	; () banked
  1928  000FF0  EE20 F032          	lfsr	2,50
  1929  000FF4  0100               	movlb	0	; () banked
  1930  000FF6  51C9               	movf	_ic_ptr& (0+255),w,b
  1931  000FF8  26D9               	addwf	fsr2l,f,c
  1932  000FFA  0100               	movlb	0	; () banked
  1933  000FFC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1934  000FFE  22DA               	addwfc	fsr2h,f,c
  1935  001000  2ADF               	incf	indf2,f,c
  1936  001002                     l2730:
  1937                           
  1938                           ; BSR set to: 0
  1939  001002  0100               	movlb	0	; () banked
  1940  001004  EE20 F032          	lfsr	2,50
  1941  001008  0100               	movlb	0	; () banked
  1942  00100A  51C9               	movf	_ic_ptr& (0+255),w,b
  1943  00100C  26D9               	addwf	fsr2l,f,c
  1944  00100E  0100               	movlb	0	; () banked
  1945  001010  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1946  001012  22DA               	addwfc	fsr2h,f,c
  1947  001014  50DF               	movf	indf2,w,c
  1948  001016  0100               	movlb	0	; () banked
  1949  001018  6FA7               	movwf	??_start_i2c_slave_reply& (0+255),b
  1950  00101A  0100               	movlb	0	; () banked
  1951  00101C  0100               	movlb	0	; () banked
  1952  00101E  51AA               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1953  001020  0100               	movlb	0	; () banked
  1954  001022  5DA7               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1955  001024  A0D8               	btfss	status,0,c
  1956  001026  D750               	goto	l2718
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;my_i2c.c: 140: }
  1960                           ;my_i2c.c: 142: }
  1961                           ;my_i2c.c: 143: ic_ptr->sendBufLen =0;
  1962                           
  1963                           ; BSR set to: 0
  1964  001028  0100               	movlb	0	; () banked
  1965  00102A  EE20 F04B          	lfsr	2,75
  1966  00102E  0100               	movlb	0	; () banked
  1967  001030  51C9               	movf	_ic_ptr& (0+255),w,b
  1968  001032  26D9               	addwf	fsr2l,f,c
  1969  001034  0100               	movlb	0	; () banked
  1970  001036  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1971  001038  22DA               	addwfc	fsr2h,f,c
  1972  00103A  0E00               	movlw	0
  1973  00103C  6EDF               	movwf	indf2,c
  1974                           
  1975                           ;my_i2c.c: 144: ic_ptr->outbuflen = length;
  1976  00103E  0100               	movlb	0	; () banked
  1977  001040  EE20 F032          	lfsr	2,50
  1978  001044  0100               	movlb	0	; () banked
  1979  001046  51C9               	movf	_ic_ptr& (0+255),w,b
  1980  001048  26D9               	addwf	fsr2l,f,c
  1981  00104A  0100               	movlb	0	; () banked
  1982  00104C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1983  00104E  22DA               	addwfc	fsr2h,f,c
  1984  001050  0100               	movlb	0	; () banked
  1985  001052  C0AA  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1986                           
  1987                           ;my_i2c.c: 145: ic_ptr->outbufind = 1;
  1988  001056  0100               	movlb	0	; () banked
  1989  001058  EE20 F033          	lfsr	2,51
  1990  00105C  0100               	movlb	0	; () banked
  1991  00105E  51C9               	movf	_ic_ptr& (0+255),w,b
  1992  001060  26D9               	addwf	fsr2l,f,c
  1993  001062  0100               	movlb	0	; () banked
  1994  001064  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  1995  001066  22DA               	addwfc	fsr2h,f,c
  1996  001068  0E01               	movlw	1
  1997  00106A  6EDF               	movwf	indf2,c
  1998                           
  1999                           ;my_i2c.c: 148: SSPBUF = ic_ptr->outbuffer[0];
  2000  00106C  0100               	movlb	0	; () banked
  2001  00106E  EE20 F01C          	lfsr	2,28
  2002  001072  0100               	movlb	0	; () banked
  2003  001074  51C9               	movf	_ic_ptr& (0+255),w,b
  2004  001076  26D9               	addwf	fsr2l,f,c
  2005  001078  0100               	movlb	0	; () banked
  2006  00107A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2007  00107C  22DA               	addwfc	fsr2h,f,c
  2008  00107E  50DF               	movf	indf2,w,c
  2009  001080  6EC9               	movwf	4041,c	;volatile
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;my_i2c.c: 151: SSPCON1bits.CKP = 1;
  2013  001082  88C6               	bsf	4038,4,c	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016  001084  0012               	return	
  2017  001086                     __end_of_start_i2c_slave_reply:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           indf1	equ	0xFE7
  2028                           fsr1h	equ	0xFE2
  2029                           fsr1l	equ	0xFE1
  2030                           indf2	equ	0xFDF
  2031                           fsr2h	equ	0xFDA
  2032                           fsr2l	equ	0xFD9
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _motor_lthread *****************
  2036 ;; Defined at:
  2037 ;;		line 13 in file "source/Motor_thread.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  msgtype         2   63[BANK0 ] int 
  2040 ;;  length          2   65[BANK0 ] int 
  2041 ;;  msgbuffer       2   67[BANK0 ] PTR unsigned char 
  2042 ;;		 -> main@msgbuffer(23), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  message         2   71[BANK0 ] unsigned char [2]
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   63[BANK0 ] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2054 ;;      Params:         0       6       0       0       0
  2055 ;;      Locals:         0       2       0       0       0
  2056 ;;      Temps:          0       2       0       0       0
  2057 ;;      Totals:         0      10       0       0       0
  2058 ;;Total ram usage:       10 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:   15
  2061 ;; This function calls:
  2062 ;;		_ToMainHigh_sendmsg
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text5
  2069  001496                     __ptext5:
  2070                           	opt stack 0
  2071  001496                     _motor_lthread:
  2072                           	opt stack 15
  2073                           
  2074                           ;Motor_thread.c: 16: switch (msgtype)
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;incstack = 0
  2078  001496  D075               	goto	l2762
  2079  001498                     l2738:
  2080                           
  2081                           ;Motor_thread.c: 19: {
  2082                           ;Motor_thread.c: 20: char message[2];
  2083                           ;Motor_thread.c: 21: lastMotorCommand = msgbuffer[0];
  2084  001498  C0C3  FFD9         	movff	motor_lthread@msgbuffer,fsr2l
  2085  00149C  C0C4  FFDA         	movff	motor_lthread@msgbuffer+1,fsr2h
  2086  0014A0  50DF               	movf	indf2,w,c
  2087  0014A2  0100               	movlb	0	; () banked
  2088  0014A4  0100               	movlb	0	; () banked
  2089  0014A6  6FCC               	movwf	_lastMotorCommand& (0+255),b
  2090                           
  2091                           ;Motor_thread.c: 22: switch(msgbuffer[0])
  2092  0014A8  D03E               	goto	l2756
  2093  0014AA                     l2742:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;Motor_thread.c: 33: {
  2097                           ;Motor_thread.c: 35: message[0] = 0xDF;
  2098  0014AA  0100               	movlb	0	; () banked
  2099  0014AC  6FC5               	movwf	??_motor_lthread& (0+255),b
  2100  0014AE  0EDF               	movlw	223
  2101  0014B0  D003               	goto	L4
  2102  0014B2                     l2744:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;Motor_thread.c: 40: {
  2106                           ;Motor_thread.c: 42: message[0] = 0xAF;
  2107  0014B2  0100               	movlb	0	; () banked
  2108  0014B4  6FC5               	movwf	??_motor_lthread& (0+255),b
  2109  0014B6  0EAF               	movlw	175
  2110  0014B8                     L4:
  2111  0014B8  0100               	movlb	0	; () banked
  2112  0014BA  0100               	movlb	0	; () banked
  2113  0014BC  6FC7               	movwf	motor_lthread@message& (0+255),b
  2114  0014BE  0100               	movlb	0	; () banked
  2115  0014C0  51C5               	movf	??_motor_lthread& (0+255),w,b
  2116                           
  2117                           ;Motor_thread.c: 43: message[1] = 0x1F;
  2118  0014C2  0100               	movlb	0	; () banked
  2119  0014C4  6FC5               	movwf	??_motor_lthread& (0+255),b
  2120  0014C6  0E1F               	movlw	31
  2121  0014C8  D01C               	goto	L7
  2122  0014CA                     l2746:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;Motor_thread.c: 47: {
  2126                           ;Motor_thread.c: 49: message[0] = 0x00;
  2127  0014CA  0100               	movlb	0	; () banked
  2128  0014CC  6FC5               	movwf	??_motor_lthread& (0+255),b
  2129  0014CE  0E00               	movlw	0
  2130  0014D0  0100               	movlb	0	; () banked
  2131  0014D2  0100               	movlb	0	; () banked
  2132  0014D4  6FC7               	movwf	motor_lthread@message& (0+255),b
  2133  0014D6  0100               	movlb	0	; () banked
  2134  0014D8  51C5               	movf	??_motor_lthread& (0+255),w,b
  2135                           
  2136                           ;Motor_thread.c: 50: message[1] = 0x00;
  2137  0014DA  0100               	movlb	0	; () banked
  2138  0014DC  6FC5               	movwf	??_motor_lthread& (0+255),b
  2139  0014DE  0E00               	movlw	0
  2140  0014E0  D010               	goto	L7
  2141  0014E2                     l2748:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;Motor_thread.c: 54: {
  2145                           ;Motor_thread.c: 56: message[0] = 0xC6;
  2146  0014E2  0100               	movlb	0	; () banked
  2147  0014E4  6FC5               	movwf	??_motor_lthread& (0+255),b
  2148  0014E6  0EC6               	movlw	198
  2149  0014E8  0100               	movlb	0	; () banked
  2150  0014EA  0100               	movlb	0	; () banked
  2151  0014EC  6FC7               	movwf	motor_lthread@message& (0+255),b
  2152  0014EE  0100               	movlb	0	; () banked
  2153  0014F0  51C5               	movf	??_motor_lthread& (0+255),w,b
  2154                           
  2155                           ;Motor_thread.c: 57: message[1] = 0x36;
  2156  0014F2  0100               	movlb	0	; () banked
  2157  0014F4  6FC5               	movwf	??_motor_lthread& (0+255),b
  2158  0014F6  0E36               	movlw	54
  2159  0014F8  D004               	goto	L7
  2160  0014FA                     l2750:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;Motor_thread.c: 61: {
  2164                           ;Motor_thread.c: 63: message[0] = 0x46;
  2165  0014FA  0100               	movlb	0	; () banked
  2166  0014FC  6FC5               	movwf	??_motor_lthread& (0+255),b
  2167  0014FE  0E46               	movlw	70
  2168  001500  D009               	goto	L8
  2169  001502                     L7:
  2170  001502  0100               	movlb	0	; () banked
  2171  001504  0100               	movlb	0	; () banked
  2172  001506  6FC8               	movwf	(motor_lthread@message+1)& (0+255),b
  2173  001508  0100               	movlb	0	; () banked
  2174  00150A  51C5               	movf	??_motor_lthread& (0+255),w,b
  2175                           
  2176                           ;Motor_thread.c: 65: break;
  2177  00150C  D024               	goto	l2758
  2178  00150E                     l2752:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;Motor_thread.c: 68: {
  2182                           ;Motor_thread.c: 70: message[0] = 0x36;
  2183  00150E  0100               	movlb	0	; () banked
  2184  001510  6FC5               	movwf	??_motor_lthread& (0+255),b
  2185  001512  0E36               	movlw	54
  2186  001514                     L8:
  2187  001514  0100               	movlb	0	; () banked
  2188  001516  0100               	movlb	0	; () banked
  2189  001518  6FC7               	movwf	motor_lthread@message& (0+255),b
  2190  00151A  0100               	movlb	0	; () banked
  2191  00151C  51C5               	movf	??_motor_lthread& (0+255),w,b
  2192                           
  2193                           ;Motor_thread.c: 71: message[1] = 0xB6;
  2194  00151E  0100               	movlb	0	; () banked
  2195  001520  6FC5               	movwf	??_motor_lthread& (0+255),b
  2196  001522  0EB6               	movlw	182
  2197  001524  D7EE               	goto	L7
  2198  001526                     l2756:
  2199                           
  2200                           ; BSR set to: 0
  2201  001526  C0C3  FFD9         	movff	motor_lthread@msgbuffer,fsr2l
  2202  00152A  C0C4  FFDA         	movff	motor_lthread@msgbuffer+1,fsr2h
  2203  00152E  50DF               	movf	indf2,w,c
  2204                           
  2205                           ; Switch size 1, requested type "space"
  2206                           ; Number of cases is 6, Range of values is 1 to 6
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte           19    10 (average)
  2210                           ;	Chosen strategy is simple_byte
  2211  001530  0A01               	xorlw	1	; case 1
  2212  001532  B4D8               	btfsc	status,2,c
  2213  001534  D7BA               	goto	l2742
  2214  001536  0A03               	xorlw	3	; case 2
  2215  001538  B4D8               	btfsc	status,2,c
  2216  00153A  D7B7               	goto	l2742
  2217  00153C  0A01               	xorlw	1	; case 3
  2218  00153E  B4D8               	btfsc	status,2,c
  2219  001540  D7B8               	goto	l2744
  2220  001542  0A07               	xorlw	7	; case 4
  2221  001544  B4D8               	btfsc	status,2,c
  2222  001546  D7C1               	goto	l2746
  2223  001548  0A01               	xorlw	1	; case 5
  2224  00154A  B4D8               	btfsc	status,2,c
  2225  00154C  D7CA               	goto	l2748
  2226  00154E  0A03               	xorlw	3	; case 6
  2227  001550  B4D8               	btfsc	status,2,c
  2228  001552  D7D3               	goto	l2750
  2229  001554  D7DC               	goto	l2752
  2230  001556                     l2758:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;Motor_thread.c: 76: ToMainHigh_sendmsg(2,47,&message );
  2234  001556  0100               	movlb	0	; () banked
  2235  001558  6FC5               	movwf	??_motor_lthread& (0+255),b
  2236  00155A  0E2F               	movlw	47
  2237  00155C  0100               	movlb	0	; () banked
  2238  00155E  0100               	movlb	0	; () banked
  2239  001560  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2240  001562  0100               	movlb	0	; () banked
  2241  001564  51C5               	movf	??_motor_lthread& (0+255),w,b
  2242  001566  0100               	movlb	0	; () banked
  2243  001568  0E00               	movlw	high motor_lthread@message
  2244  00156A  0100               	movlb	0	; () banked
  2245  00156C  0100               	movlb	0	; () banked
  2246  00156E  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  2247  001570  0100               	movlb	0	; () banked
  2248  001572  0EC7               	movlw	low motor_lthread@message
  2249  001574  0100               	movlb	0	; () banked
  2250  001576  0100               	movlb	0	; () banked
  2251  001578  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  2252  00157A  0E02               	movlw	2
  2253  00157C  ECEC  F010         	call	_ToMainHigh_sendmsg
  2254                           
  2255                           ;Motor_thread.c: 77: break;
  2256  001580  0012               	return	
  2257  001582                     l2762:
  2258  001582  0100               	movlb	0	; () banked
  2259  001584  C0BF  F0C5         	movff	motor_lthread@msgtype,??_motor_lthread
  2260  001588  0100               	movlb	0	; () banked
  2261  00158A  C0C0  F0C6         	movff	motor_lthread@msgtype+1,??_motor_lthread+1
  2262                           
  2263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2264                           ; Switch size 1, requested type "space"
  2265                           ; Number of cases is 1, Range of values is 0 to 0
  2266                           ; switch strategies available:
  2267                           ; Name         Instructions Cycles
  2268                           ; simple_byte            4     3 (average)
  2269                           ;	Chosen strategy is simple_byte
  2270  00158E  0100               	movlb	0	; () banked
  2271  001590  51C6               	movf	(??_motor_lthread+1)& (0+255),w,b
  2272  001592  0A00               	xorlw	0	; case 0
  2273  001594  A4D8               	btfss	status,2,c
  2274  001596  0012               	return	
  2275                           
  2276                           ; BSR set to: 0
  2277                           ; Switch size 1, requested type "space"
  2278                           ; Number of cases is 1, Range of values is 48 to 48
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte            4     3 (average)
  2282                           ;	Chosen strategy is simple_byte
  2283  001598  0100               	movlb	0	; () banked
  2284  00159A  51C5               	movf	??_motor_lthread& (0+255),w,b
  2285  00159C  0A30               	xorlw	48	; case 48
  2286  00159E  A4D8               	btfss	status,2,c
  2287  0015A0  0012               	return	
  2288  0015A2  D77A               	goto	l2738
  2289  0015A4                     __end_of_motor_lthread:
  2290                           	opt stack 0
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           prodh	equ	0xFF4
  2296                           prodl	equ	0xFF3
  2297                           postinc0	equ	0xFEE
  2298                           wreg	equ	0xFE8
  2299                           indf1	equ	0xFE7
  2300                           fsr1h	equ	0xFE2
  2301                           fsr1l	equ	0xFE1
  2302                           indf2	equ	0xFDF
  2303                           fsr2h	equ	0xFDA
  2304                           fsr2l	equ	0xFD9
  2305                           status	equ	0xFD8
  2306                           
  2307 ;; *************** function _ToMainHigh_sendmsg *****************
  2308 ;; Defined at:
  2309 ;;		line 126 in file "source/messages.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  length          1    wreg     unsigned char 
  2312 ;;  msgtype         1   59[BANK0 ] unsigned char 
  2313 ;;  data            2   60[BANK0 ] PTR void 
  2314 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  2315 ;;		 -> main@ic(77), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  length          1   62[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      char 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2327 ;;      Params:         0       3       0       0       0
  2328 ;;      Locals:         0       1       0       0       0
  2329 ;;      Temps:          0       0       0       0       0
  2330 ;;      Totals:         0       4       0       0       0
  2331 ;;Total ram usage:        4 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:   14
  2334 ;; This function calls:
  2335 ;;		_send_msg
  2336 ;; This function is called by:
  2337 ;;		_motor_lthread
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text6
  2342  0021D8                     __ptext6:
  2343                           	opt stack 0
  2344  0021D8                     _ToMainHigh_sendmsg:
  2345                           	opt stack 15
  2346                           
  2347                           ;incstack = 0
  2348                           ;ToMainHigh_sendmsg@length stored from wreg
  2349  0021D8  CFE8 F0BE          	movff	wreg,ToMainHigh_sendmsg@length
  2350                           
  2351                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  2352                           ;	Return value of _ToMainHigh_sendmsg is never used
  2353  0021DC  0101               	movlb	1	; () banked
  2354  0021DE  0E01               	movlw	high _ToMainHigh_MQ
  2355  0021E0  0100               	movlb	0	; () banked
  2356  0021E2  0100               	movlb	0	; () banked
  2357  0021E4  6FB0               	movwf	(send_msg@qptr+1)& (0+255),b
  2358  0021E6  0101               	movlb	1	; () banked
  2359  0021E8  0E84               	movlw	low _ToMainHigh_MQ
  2360  0021EA  0100               	movlb	0	; () banked
  2361  0021EC  0100               	movlb	0	; () banked
  2362  0021EE  6FAF               	movwf	send_msg@qptr& (0+255),b
  2363  0021F0  C0BE  F0B1         	movff	ToMainHigh_sendmsg@length,send_msg@length
  2364  0021F4  C0BB  F0B2         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  2365  0021F8  0100               	movlb	0	; () banked
  2366  0021FA  0100               	movlb	0	; () banked
  2367  0021FC  C0BD  F0B4         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  2368  002200  0100               	movlb	0	; () banked
  2369  002202  0100               	movlb	0	; () banked
  2370  002204  C0BC  F0B3         	movff	ToMainHigh_sendmsg@data,send_msg@data
  2371  002208  ECD2  F00A         	call	_send_msg	;wreg free
  2372  00220C  0012               	return	
  2373  00220E                     __end_of_ToMainHigh_sendmsg:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           prodh	equ	0xFF4
  2380                           prodl	equ	0xFF3
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           indf1	equ	0xFE7
  2384                           fsr1h	equ	0xFE2
  2385                           fsr1l	equ	0xFE1
  2386                           indf2	equ	0xFDF
  2387                           fsr2h	equ	0xFDA
  2388                           fsr2l	equ	0xFD9
  2389                           status	equ	0xFD8
  2390                           
  2391 ;; *************** function _send_msg *****************
  2392 ;; Defined at:
  2393 ;;		line 24 in file "source/messages.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  qptr            2   47[BANK0 ] PTR struct __msg_queue
  2396 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2397 ;;  length          1   49[BANK0 ] unsigned char 
  2398 ;;  msgtype         1   50[BANK0 ] unsigned char 
  2399 ;;  data            2   51[BANK0 ] PTR void 
  2400 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  2401 ;;		 -> main@ic(77), main@uc(23), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  qmsg            2   57[BANK0 ] PTR struct __msg
  2404 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  2405 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2406 ;;  tlength         2   54[BANK0 ] unsigned int 
  2407 ;;  slot            1   56[BANK0 ] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      char 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2417 ;;      Params:         0       6       0       0       0
  2418 ;;      Locals:         0       5       0       0       0
  2419 ;;      Temps:          0       1       0       0       0
  2420 ;;      Totals:         0      12       0       0       0
  2421 ;;Total ram usage:       12 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:   13
  2424 ;; This function calls:
  2425 ;;		_memcpy
  2426 ;; This function is called by:
  2427 ;;		_ToMainHigh_sendmsg
  2428 ;;		_FromMainLow_sendmsg
  2429 ;;		_FromMainHigh_sendmsg
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text7
  2434  0015A4                     __ptext7:
  2435                           	opt stack 0
  2436  0015A4                     _send_msg:
  2437                           	opt stack 15
  2438                           
  2439                           ;messages.c: 25: unsigned char slot;
  2440                           ;messages.c: 27: msg *qmsg;
  2441                           ;messages.c: 28: size_t tlength = length;
  2442                           
  2443                           ;incstack = 0
  2444  0015A4  0100               	movlb	0	; () banked
  2445  0015A6  0100               	movlb	0	; () banked
  2446  0015A8  C0B1  F0B6         	movff	send_msg@length,send_msg@tlength
  2447  0015AC  0100               	movlb	0	; () banked
  2448  0015AE  0100               	movlb	0	; () banked
  2449  0015B0  6BB7               	clrf	(send_msg@tlength+1)& (0+255),b
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2453  0015B2  0100               	movlb	0	; () banked
  2454  0015B4  EE20 F064          	lfsr	2,100
  2455  0015B8  0100               	movlb	0	; () banked
  2456  0015BA  51AF               	movf	send_msg@qptr& (0+255),w,b
  2457  0015BC  26D9               	addwf	fsr2l,f,c
  2458  0015BE  0100               	movlb	0	; () banked
  2459  0015C0  51B0               	movf	(send_msg@qptr+1)& (0+255),w,b
  2460  0015C2  22DA               	addwfc	fsr2h,f,c
  2461  0015C4  50DF               	movf	indf2,w,c
  2462  0015C6  0100               	movlb	0	; () banked
  2463  0015C8  0100               	movlb	0	; () banked
  2464  0015CA  6FB8               	movwf	send_msg@slot& (0+255),b
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2468  0015CC  0100               	movlb	0	; () banked
  2469  0015CE  0100               	movlb	0	; () banked
  2470  0015D0  51B8               	movf	send_msg@slot& (0+255),w,b
  2471  0015D2  0D19               	mullw	25
  2472  0015D4  50F3               	movf	prodl,w,c
  2473  0015D6  0100               	movlb	0	; () banked
  2474  0015D8  0100               	movlb	0	; () banked
  2475  0015DA  25AF               	addwf	send_msg@qptr& (0+255),w,b
  2476  0015DC  0100               	movlb	0	; () banked
  2477  0015DE  0100               	movlb	0	; () banked
  2478  0015E0  6FB9               	movwf	send_msg@qmsg& (0+255),b
  2479  0015E2  50F4               	movf	prodh,w,c
  2480  0015E4  0100               	movlb	0	; () banked
  2481  0015E6  0100               	movlb	0	; () banked
  2482  0015E8  21B0               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2483  0015EA  0100               	movlb	0	; () banked
  2484  0015EC  6FBA               	movwf	(send_msg@qmsg+1)& (0+255),b
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;messages.c: 41: if (qmsg->full != 0) {
  2488  0015EE  C0B9  FFD9         	movff	send_msg@qmsg,fsr2l
  2489  0015F2  C0BA  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2490  0015F6  50DF               	movf	indf2,w,c
  2491  0015F8  B4D8               	btfsc	status,2,c
  2492  0015FA  D002               	goto	l2816
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;messages.c: 42: return (-1);
  2496  0015FC  0EFF               	movlw	255
  2497  0015FE  0012               	return	
  2498  001600                     l2816:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;messages.c: 43: }
  2502                           ;messages.c: 46: qmsg->length = length;
  2503  001600  0100               	movlb	0	; () banked
  2504  001602  EE20 F001          	lfsr	2,1
  2505  001606  0100               	movlb	0	; () banked
  2506  001608  51B9               	movf	send_msg@qmsg& (0+255),w,b
  2507  00160A  26D9               	addwf	fsr2l,f,c
  2508  00160C  0100               	movlb	0	; () banked
  2509  00160E  51BA               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2510  001610  22DA               	addwfc	fsr2h,f,c
  2511  001612  0100               	movlb	0	; () banked
  2512  001614  C0B1  FFDF         	movff	send_msg@length,indf2
  2513                           
  2514                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2515  001618  0100               	movlb	0	; () banked
  2516  00161A  EE20 F002          	lfsr	2,2
  2517  00161E  0100               	movlb	0	; () banked
  2518  001620  51B9               	movf	send_msg@qmsg& (0+255),w,b
  2519  001622  26D9               	addwf	fsr2l,f,c
  2520  001624  0100               	movlb	0	; () banked
  2521  001626  51BA               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2522  001628  22DA               	addwfc	fsr2h,f,c
  2523  00162A  0100               	movlb	0	; () banked
  2524  00162C  C0B2  FFDF         	movff	send_msg@msgtype,indf2
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2528  001630  0E03               	movlw	3
  2529  001632  0100               	movlb	0	; () banked
  2530  001634  0100               	movlb	0	; () banked
  2531  001636  25B9               	addwf	send_msg@qmsg& (0+255),w,b
  2532  001638  0100               	movlb	0	; () banked
  2533  00163A  0100               	movlb	0	; () banked
  2534  00163C  6FA5               	movwf	memcpy@d1& (0+255),b
  2535  00163E  0E00               	movlw	0
  2536  001640  0100               	movlb	0	; () banked
  2537  001642  0100               	movlb	0	; () banked
  2538  001644  21BA               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2539  001646  0100               	movlb	0	; () banked
  2540  001648  6FA6               	movwf	(memcpy@d1+1)& (0+255),b
  2541  00164A  0100               	movlb	0	; () banked
  2542  00164C  0100               	movlb	0	; () banked
  2543  00164E  C0B4  F0A8         	movff	send_msg@data+1,memcpy@s1+1
  2544  001652  0100               	movlb	0	; () banked
  2545  001654  0100               	movlb	0	; () banked
  2546  001656  C0B3  F0A7         	movff	send_msg@data,memcpy@s1
  2547  00165A  C0B6  F0A9         	movff	send_msg@tlength,memcpy@n
  2548  00165E  C0B7  F0AA         	movff	send_msg@tlength+1,memcpy@n+1
  2549  001662  EC3C  F00F         	call	_memcpy	;wreg free
  2550                           
  2551                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2552  001666  0100               	movlb	0	; () banked
  2553  001668  EE20 F064          	lfsr	2,100
  2554  00166C  0100               	movlb	0	; () banked
  2555  00166E  51AF               	movf	send_msg@qptr& (0+255),w,b
  2556  001670  26D9               	addwf	fsr2l,f,c
  2557  001672  0100               	movlb	0	; () banked
  2558  001674  51B0               	movf	(send_msg@qptr+1)& (0+255),w,b
  2559  001676  22DA               	addwfc	fsr2h,f,c
  2560  001678  0100               	movlb	0	; () banked
  2561  00167A  EE10 F064          	lfsr	1,100
  2562  00167E  0100               	movlb	0	; () banked
  2563  001680  51AF               	movf	send_msg@qptr& (0+255),w,b
  2564  001682  26E1               	addwf	fsr1l,f,c
  2565  001684  0100               	movlb	0	; () banked
  2566  001686  51B0               	movf	(send_msg@qptr+1)& (0+255),w,b
  2567  001688  22E2               	addwfc	fsr1h,f,c
  2568  00168A  50E7               	movf	indf1,w,c
  2569  00168C  0100               	movlb	0	; () banked
  2570  00168E  6FB5               	movwf	??_send_msg& (0+255),b
  2571  001690  0100               	movlb	0	; () banked
  2572  001692  29B5               	incf	??_send_msg& (0+255),w,b
  2573  001694  0B03               	andlw	3
  2574  001696  6EDF               	movwf	indf2,c
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;messages.c: 59: qmsg->full = 1;
  2578  001698  C0B9  FFD9         	movff	send_msg@qmsg,fsr2l
  2579  00169C  C0BA  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2580  0016A0  0E01               	movlw	1
  2581  0016A2  6EDF               	movwf	indf2,c
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;messages.c: 60: return (1);
  2585  0016A4  0E01               	movlw	1
  2586  0016A6  0012               	return	
  2587  0016A8                     __end_of_send_msg:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           postinc0	equ	0xFEE
  2596                           wreg	equ	0xFE8
  2597                           indf1	equ	0xFE7
  2598                           fsr1h	equ	0xFE2
  2599                           fsr1l	equ	0xFE1
  2600                           indf2	equ	0xFDF
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _init_uart_recv *****************
  2606 ;; Defined at:
  2607 ;;		line 51 in file "source/my_uart.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  uc              2   37[BANK0 ] PTR struct __uart_comm
  2610 ;;		 -> main@uc(23), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2622 ;;      Params:         0       2       0       0       0
  2623 ;;      Locals:         0       0       0       0       0
  2624 ;;      Temps:          0       1       0       0       0
  2625 ;;      Totals:         0       3       0       0       0
  2626 ;;Total ram usage:        3 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:   12
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text8
  2637  0022D4                     __ptext8:
  2638                           	opt stack 0
  2639  0022D4                     _init_uart_recv:
  2640                           	opt stack 18
  2641                           
  2642                           ;my_uart.c: 52: uc_ptr = uc;
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;incstack = 0
  2646  0022D4  0100               	movlb	0	; () banked
  2647  0022D6  C0A6  F04E         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2648  0022DA  0100               	movlb	0	; () banked
  2649  0022DC  C0A5  F04D         	movff	init_uart_recv@uc,_uc_ptr
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  2653  0022E0  EE20 F016          	lfsr	2,22
  2654  0022E4  504D               	movf	_uc_ptr,w,c
  2655  0022E6  26D9               	addwf	fsr2l,f,c
  2656  0022E8  504E               	movf	_uc_ptr+1,w,c
  2657  0022EA  22DA               	addwfc	fsr2h,f,c
  2658  0022EC  0E00               	movlw	0
  2659  0022EE  6EDF               	movwf	indf2,c
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;my_uart.c: 54: State = MSGCOUNT;
  2663  0022F0  0100               	movlb	0	; () banked
  2664  0022F2  6FA7               	movwf	??_init_uart_recv& (0+255),b
  2665  0022F4  0E00               	movlw	0
  2666  0022F6  6E4B               	movwf	_State,c
  2667  0022F8  0100               	movlb	0	; () banked
  2668  0022FA  51A7               	movf	??_init_uart_recv& (0+255),w,b
  2669                           
  2670                           ; BSR set to: 0
  2671  0022FC  0012               	return	
  2672  0022FE                     __end_of_init_uart_recv:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           prodh	equ	0xFF4
  2679                           prodl	equ	0xFF3
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           indf1	equ	0xFE7
  2683                           fsr1h	equ	0xFE2
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _init_timer1_lthread *****************
  2691 ;; Defined at:
  2692 ;;		line 6 in file "source/timer1_thread.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  tptr            2   37[BANK0 ] PTR struct __timer1_thre
  2695 ;;		 -> main@t1thread_data(2), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;		None               void
  2700 ;; Registers used:
  2701 ;;		wreg, fsr2l, fsr2h
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2707 ;;      Params:         0       2       0       0       0
  2708 ;;      Locals:         0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         0       2       0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:   12
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text9
  2722  0023C4                     __ptext9:
  2723                           	opt stack 0
  2724  0023C4                     _init_timer1_lthread:
  2725                           	opt stack 18
  2726                           
  2727                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;incstack = 0
  2731  0023C4  C0A5  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2732  0023C8  C0A6  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2733  0023CC  0E00               	movlw	0
  2734  0023CE  6EDE               	movwf	postinc2,c
  2735  0023D0  0E00               	movlw	0
  2736  0023D2  6EDD               	movwf	postdec2,c
  2737  0023D4  0012               	return	
  2738  0023D6                     __end_of_init_timer1_lthread:
  2739                           	opt stack 0
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           prodh	equ	0xFF4
  2745                           prodl	equ	0xFF3
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           indf1	equ	0xFE7
  2749                           fsr1h	equ	0xFE2
  2750                           fsr1l	equ	0xFE1
  2751                           indf2	equ	0xFDF
  2752                           postinc2	equ	0xFDE
  2753                           postdec2	equ	0xFDD
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _init_queues *****************
  2759 ;; Defined at:
  2760 ;;		line 194 in file "source/messages.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0
  2776 ;;      Temps:          0       1       0       0       0
  2777 ;;      Totals:         0       1       0       0       0
  2778 ;;Total ram usage:        1 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:   13
  2781 ;; This function calls:
  2782 ;;		_init_queue
  2783 ;; This function is called by:
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text10
  2789  001E0A                     __ptext10:
  2790                           	opt stack 0
  2791  001E0A                     _init_queues:
  2792                           	opt stack 17
  2793                           
  2794                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2795                           
  2796                           ;incstack = 0
  2797  001E0A  0100               	movlb	0	; () banked
  2798  001E0C  6FA9               	movwf	??_init_queues& (0+255),b
  2799  001E0E  0E00               	movlw	0
  2800  001E10  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  2801  001E12  0100               	movlb	0	; () banked
  2802  001E14  51A9               	movf	??_init_queues& (0+255),w,b
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2806  001E16  0102               	movlb	2	; () banked
  2807  001E18  0E02               	movlw	high _ToMainLow_MQ
  2808  001E1A  0100               	movlb	0	; () banked
  2809  001E1C  0100               	movlb	0	; () banked
  2810  001E1E  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  2811  001E20  0102               	movlb	2	; () banked
  2812  001E22  0E66               	movlw	low _ToMainLow_MQ
  2813  001E24  0100               	movlb	0	; () banked
  2814  001E26  0100               	movlb	0	; () banked
  2815  001E28  6FA5               	movwf	init_queue@qptr& (0+255),b
  2816  001E2A  EC8C  F00E         	call	_init_queue	;wreg free
  2817                           
  2818                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2819  001E2E  0101               	movlb	1	; () banked
  2820  001E30  0E01               	movlw	high _ToMainHigh_MQ
  2821  001E32  0100               	movlb	0	; () banked
  2822  001E34  0100               	movlb	0	; () banked
  2823  001E36  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  2824  001E38  0101               	movlb	1	; () banked
  2825  001E3A  0E84               	movlw	low _ToMainHigh_MQ
  2826  001E3C  0100               	movlb	0	; () banked
  2827  001E3E  0100               	movlb	0	; () banked
  2828  001E40  6FA5               	movwf	init_queue@qptr& (0+255),b
  2829  001E42  EC8C  F00E         	call	_init_queue	;wreg free
  2830                           
  2831                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2832  001E46  0102               	movlb	2	; () banked
  2833  001E48  0E02               	movlw	high _FromMainLow_MQ
  2834  001E4A  0100               	movlb	0	; () banked
  2835  001E4C  0100               	movlb	0	; () banked
  2836  001E4E  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  2837  001E50  0102               	movlb	2	; () banked
  2838  001E52  0E00               	movlw	low _FromMainLow_MQ
  2839  001E54  0100               	movlb	0	; () banked
  2840  001E56  0100               	movlb	0	; () banked
  2841  001E58  6FA5               	movwf	init_queue@qptr& (0+255),b
  2842  001E5A  EC8C  F00E         	call	_init_queue	;wreg free
  2843                           
  2844                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2845  001E5E  0103               	movlb	3	; () banked
  2846  001E60  0E03               	movlw	high _FromMainHigh_MQ
  2847  001E62  0100               	movlb	0	; () banked
  2848  001E64  0100               	movlb	0	; () banked
  2849  001E66  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  2850  001E68  0103               	movlb	3	; () banked
  2851  001E6A  0E00               	movlw	low _FromMainHigh_MQ
  2852  001E6C  0100               	movlb	0	; () banked
  2853  001E6E  0100               	movlb	0	; () banked
  2854  001E70  6FA5               	movwf	init_queue@qptr& (0+255),b
  2855  001E72  EC8C  F00E         	call	_init_queue	;wreg free
  2856  001E76  0012               	return	
  2857  001E78                     __end_of_init_queues:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           indf1	equ	0xFE7
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _init_queue *****************
  2878 ;; Defined at:
  2879 ;;		line 14 in file "source/messages.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  qptr            2   37[BANK0 ] PTR struct __msg_queue
  2882 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  i               1   40[BANK0 ] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2894 ;;      Params:         0       2       0       0       0
  2895 ;;      Locals:         0       1       0       0       0
  2896 ;;      Temps:          0       1       0       0       0
  2897 ;;      Totals:         0       4       0       0       0
  2898 ;;Total ram usage:        4 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:   12
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_init_queues
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text11
  2909  001D18                     __ptext11:
  2910                           	opt stack 0
  2911  001D18                     _init_queue:
  2912                           	opt stack 17
  2913                           
  2914                           ;messages.c: 15: unsigned char i;
  2915                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2916                           
  2917                           ;incstack = 0
  2918  001D18  0100               	movlb	0	; () banked
  2919  001D1A  EE20 F064          	lfsr	2,100
  2920  001D1E  0100               	movlb	0	; () banked
  2921  001D20  51A5               	movf	init_queue@qptr& (0+255),w,b
  2922  001D22  26D9               	addwf	fsr2l,f,c
  2923  001D24  0100               	movlb	0	; () banked
  2924  001D26  51A6               	movf	(init_queue@qptr+1)& (0+255),w,b
  2925  001D28  22DA               	addwfc	fsr2h,f,c
  2926  001D2A  0E00               	movlw	0
  2927  001D2C  6EDF               	movwf	indf2,c
  2928                           
  2929                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2930  001D2E  0100               	movlb	0	; () banked
  2931  001D30  EE20 F065          	lfsr	2,101
  2932  001D34  0100               	movlb	0	; () banked
  2933  001D36  51A5               	movf	init_queue@qptr& (0+255),w,b
  2934  001D38  26D9               	addwf	fsr2l,f,c
  2935  001D3A  0100               	movlb	0	; () banked
  2936  001D3C  51A6               	movf	(init_queue@qptr+1)& (0+255),w,b
  2937  001D3E  22DA               	addwfc	fsr2h,f,c
  2938  001D40  0E00               	movlw	0
  2939  001D42  6EDF               	movwf	indf2,c
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2943  001D44  0100               	movlb	0	; () banked
  2944  001D46  6FA7               	movwf	??_init_queue& (0+255),b
  2945  001D48  0E00               	movlw	0
  2946  001D4A  0100               	movlb	0	; () banked
  2947  001D4C  0100               	movlb	0	; () banked
  2948  001D4E  6FA8               	movwf	init_queue@i& (0+255),b
  2949  001D50  0100               	movlb	0	; () banked
  2950  001D52  51A7               	movf	??_init_queue& (0+255),w,b
  2951                           
  2952                           ; BSR set to: 0
  2953  001D54  0E03               	movlw	3
  2954  001D56  0100               	movlb	0	; () banked
  2955  001D58  0100               	movlb	0	; () banked
  2956  001D5A  65A8               	cpfsgt	init_queue@i& (0+255),b
  2957  001D5C  D001               	goto	l2798
  2958  001D5E  0012               	return	
  2959  001D60                     l2798:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;messages.c: 20: qptr->queue[i].full = 0;
  2963  001D60  0100               	movlb	0	; () banked
  2964  001D62  0100               	movlb	0	; () banked
  2965  001D64  51A8               	movf	init_queue@i& (0+255),w,b
  2966  001D66  0D19               	mullw	25
  2967  001D68  50F3               	movf	prodl,w,c
  2968  001D6A  0100               	movlb	0	; () banked
  2969  001D6C  0100               	movlb	0	; () banked
  2970  001D6E  25A5               	addwf	init_queue@qptr& (0+255),w,b
  2971  001D70  6ED9               	movwf	fsr2l,c
  2972  001D72  50F4               	movf	prodh,w,c
  2973  001D74  0100               	movlb	0	; () banked
  2974  001D76  0100               	movlb	0	; () banked
  2975  001D78  21A6               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2976  001D7A  6EDA               	movwf	fsr2h,c
  2977  001D7C  0E00               	movlw	0
  2978  001D7E  6EDF               	movwf	indf2,c
  2979                           
  2980                           ; BSR set to: 0
  2981  001D80  0100               	movlb	0	; () banked
  2982  001D82  0100               	movlb	0	; () banked
  2983  001D84  2BA8               	incf	init_queue@i& (0+255),f,b
  2984                           
  2985                           ; BSR set to: 0
  2986  001D86  0E03               	movlw	3
  2987  001D88  0100               	movlb	0	; () banked
  2988  001D8A  0100               	movlb	0	; () banked
  2989  001D8C  65A8               	cpfsgt	init_queue@i& (0+255),b
  2990  001D8E  D7E8               	goto	l2798
  2991  001D90  0012               	return	
  2992  001D92                     __end_of_init_queue:
  2993                           	opt stack 0
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           postinc0	equ	0xFEE
  3001                           wreg	equ	0xFE8
  3002                           indf1	equ	0xFE7
  3003                           fsr1h	equ	0xFE2
  3004                           fsr1l	equ	0xFE1
  3005                           indf2	equ	0xFDF
  3006                           postinc2	equ	0xFDE
  3007                           postdec2	equ	0xFDD
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           status	equ	0xFD8
  3011                           
  3012 ;; *************** function _init_i2c *****************
  3013 ;; Defined at:
  3014 ;;		line 371 in file "source/my_i2c.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  ic              2   37[BANK0 ] PTR struct __i2c_comm
  3017 ;;		 -> main@ic(77), 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;		None               void
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3029 ;;      Params:         0       2       0       0       0
  3030 ;;      Locals:         0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0
  3032 ;;      Totals:         0       2       0       0       0
  3033 ;;Total ram usage:        2 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:   12
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text12
  3044  001886                     __ptext12:
  3045                           	opt stack 0
  3046  001886                     _init_i2c:
  3047                           	opt stack 18
  3048                           
  3049                           ;my_i2c.c: 372: ic_ptr = ic;
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;incstack = 0
  3053  001886  0100               	movlb	0	; () banked
  3054  001888  0100               	movlb	0	; () banked
  3055  00188A  C0A6  F0CA         	movff	init_i2c@ic+1,_ic_ptr+1
  3056  00188E  0100               	movlb	0	; () banked
  3057  001890  0100               	movlb	0	; () banked
  3058  001892  C0A5  F0C9         	movff	init_i2c@ic,_ic_ptr
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;my_i2c.c: 373: ic_ptr->buffer[0] = 0;
  3062  001896  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  3063  00189A  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  3064  00189E  0E00               	movlw	0
  3065  0018A0  6EDF               	movwf	indf2,c
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;my_i2c.c: 374: ic_ptr->buffer[1] = 0;
  3069  0018A2  0100               	movlb	0	; () banked
  3070  0018A4  EE20 F001          	lfsr	2,1
  3071  0018A8  0100               	movlb	0	; () banked
  3072  0018AA  51C9               	movf	_ic_ptr& (0+255),w,b
  3073  0018AC  26D9               	addwf	fsr2l,f,c
  3074  0018AE  0100               	movlb	0	; () banked
  3075  0018B0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3076  0018B2  22DA               	addwfc	fsr2h,f,c
  3077  0018B4  0E00               	movlw	0
  3078  0018B6  6EDF               	movwf	indf2,c
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;my_i2c.c: 375: ic_ptr->buffer[2] = 0;
  3082  0018B8  0100               	movlb	0	; () banked
  3083  0018BA  EE20 F002          	lfsr	2,2
  3084  0018BE  0100               	movlb	0	; () banked
  3085  0018C0  51C9               	movf	_ic_ptr& (0+255),w,b
  3086  0018C2  26D9               	addwf	fsr2l,f,c
  3087  0018C4  0100               	movlb	0	; () banked
  3088  0018C6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3089  0018C8  22DA               	addwfc	fsr2h,f,c
  3090  0018CA  0E00               	movlw	0
  3091  0018CC  6EDF               	movwf	indf2,c
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;my_i2c.c: 376: ic_ptr->buflen = 0;
  3095  0018CE  0100               	movlb	0	; () banked
  3096  0018D0  EE20 F016          	lfsr	2,22
  3097  0018D4  0100               	movlb	0	; () banked
  3098  0018D6  51C9               	movf	_ic_ptr& (0+255),w,b
  3099  0018D8  26D9               	addwf	fsr2l,f,c
  3100  0018DA  0100               	movlb	0	; () banked
  3101  0018DC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3102  0018DE  22DA               	addwfc	fsr2h,f,c
  3103  0018E0  0E00               	movlw	0
  3104  0018E2  6EDF               	movwf	indf2,c
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;my_i2c.c: 377: ic_ptr->event_count = 0;
  3108  0018E4  0100               	movlb	0	; () banked
  3109  0018E6  EE20 F018          	lfsr	2,24
  3110  0018EA  0100               	movlb	0	; () banked
  3111  0018EC  51C9               	movf	_ic_ptr& (0+255),w,b
  3112  0018EE  26D9               	addwf	fsr2l,f,c
  3113  0018F0  0100               	movlb	0	; () banked
  3114  0018F2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3115  0018F4  22DA               	addwfc	fsr2h,f,c
  3116  0018F6  0E00               	movlw	0
  3117  0018F8  6EDF               	movwf	indf2,c
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;my_i2c.c: 378: ic_ptr->status = 0x5;
  3121  0018FA  0100               	movlb	0	; () banked
  3122  0018FC  EE20 F019          	lfsr	2,25
  3123  001900  0100               	movlb	0	; () banked
  3124  001902  51C9               	movf	_ic_ptr& (0+255),w,b
  3125  001904  26D9               	addwf	fsr2l,f,c
  3126  001906  0100               	movlb	0	; () banked
  3127  001908  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3128  00190A  22DA               	addwfc	fsr2h,f,c
  3129  00190C  0E05               	movlw	5
  3130  00190E  6EDF               	movwf	indf2,c
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;my_i2c.c: 379: ic_ptr->error_count = 0;
  3134  001910  0100               	movlb	0	; () banked
  3135  001912  EE20 F01B          	lfsr	2,27
  3136  001916  0100               	movlb	0	; () banked
  3137  001918  51C9               	movf	_ic_ptr& (0+255),w,b
  3138  00191A  26D9               	addwf	fsr2l,f,c
  3139  00191C  0100               	movlb	0	; () banked
  3140  00191E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3141  001920  22DA               	addwfc	fsr2h,f,c
  3142  001922  0E00               	movlw	0
  3143  001924  6EDF               	movwf	indf2,c
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;my_i2c.c: 380: ic_ptr->sendBufInd = 0;
  3147  001926  0100               	movlb	0	; () banked
  3148  001928  EE20 F04C          	lfsr	2,76
  3149  00192C  0100               	movlb	0	; () banked
  3150  00192E  51C9               	movf	_ic_ptr& (0+255),w,b
  3151  001930  26D9               	addwf	fsr2l,f,c
  3152  001932  0100               	movlb	0	; () banked
  3153  001934  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3154  001936  22DA               	addwfc	fsr2h,f,c
  3155  001938  0E00               	movlw	0
  3156  00193A  6EDF               	movwf	indf2,c
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;my_i2c.c: 381: ic_ptr->sendBufLen = 0;
  3160  00193C  0100               	movlb	0	; () banked
  3161  00193E  EE20 F04B          	lfsr	2,75
  3162  001942  0100               	movlb	0	; () banked
  3163  001944  51C9               	movf	_ic_ptr& (0+255),w,b
  3164  001946  26D9               	addwf	fsr2l,f,c
  3165  001948  0100               	movlb	0	; () banked
  3166  00194A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3167  00194C  22DA               	addwfc	fsr2h,f,c
  3168  00194E  0E00               	movlw	0
  3169  001950  6EDF               	movwf	indf2,c
  3170                           
  3171                           ; BSR set to: 0
  3172  001952  0012               	return	
  3173  001954                     __end_of_init_i2c:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           postinc0	equ	0xFEE
  3182                           wreg	equ	0xFE8
  3183                           indf1	equ	0xFE7
  3184                           fsr1h	equ	0xFE2
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           postinc2	equ	0xFDE
  3188                           postdec2	equ	0xFDD
  3189                           fsr2h	equ	0xFDA
  3190                           fsr2l	equ	0xFD9
  3191                           status	equ	0xFD8
  3192                           
  3193 ;; *************** function _i2c_configure_slave *****************
  3194 ;; Defined at:
  3195 ;;		line 387 in file "source/my_i2c.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  addr            1    wreg     unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  addr            1   38[BANK0 ] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;		None               void
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         0       1       0       0       0
  3211 ;;      Temps:          0       1       0       0       0
  3212 ;;      Totals:         0       2       0       0       0
  3213 ;;Total ram usage:        2 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:   12
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text13
  3224  0021A0                     __ptext13:
  3225                           	opt stack 0
  3226  0021A0                     _i2c_configure_slave:
  3227                           	opt stack 18
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;incstack = 0
  3231                           ;i2c_configure_slave@addr stored from wreg
  3232  0021A0  CFE8 F0A6          	movff	wreg,i2c_configure_slave@addr
  3233                           
  3234                           ;my_i2c.c: 399: TRISCbits.TRISC3 = 1;
  3235  0021A4  8694               	bsf	3988,3,c	;volatile
  3236                           
  3237                           ;my_i2c.c: 400: TRISCbits.TRISC4 = 1;
  3238  0021A6  8894               	bsf	3988,4,c	;volatile
  3239                           
  3240                           ;my_i2c.c: 405: SSPADD = addr;
  3241  0021A8  C0A6  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3242                           
  3243                           ;my_i2c.c: 407: SSPSTAT = 0x0;
  3244  0021AC  0E00               	movlw	0
  3245  0021AE  6EC7               	movwf	4039,c	;volatile
  3246                           
  3247                           ;my_i2c.c: 408: SSPCON1 = 0x0;
  3248  0021B0  0E00               	movlw	0
  3249  0021B2  6EC6               	movwf	4038,c	;volatile
  3250                           
  3251                           ;my_i2c.c: 409: SSPCON2 = 0x0;
  3252  0021B4  0E00               	movlw	0
  3253  0021B6  6EC5               	movwf	4037,c	;volatile
  3254                           
  3255                           ;my_i2c.c: 410: SSPCON1 |= 0x0E;
  3256  0021B8  0E0E               	movlw	14
  3257  0021BA  12C6               	iorwf	4038,f,c	;volatile
  3258                           
  3259                           ;my_i2c.c: 411: SSPSTAT |= 0b10000000;
  3260  0021BC  8EC7               	bsf	4039,7,c	;volatile
  3261                           
  3262                           ;my_i2c.c: 414: TRISCbits.TRISC3 = 1;
  3263  0021BE  8694               	bsf	3988,3,c	;volatile
  3264                           
  3265                           ;my_i2c.c: 415: TRISCbits.TRISC4 = 1;
  3266  0021C0  8894               	bsf	3988,4,c	;volatile
  3267                           
  3268                           ;my_i2c.c: 434: i2c_mode = 2;
  3269  0021C2  0100               	movlb	0	; () banked
  3270  0021C4  6FA5               	movwf	??_i2c_configure_slave& (0+255),b
  3271  0021C6  0E02               	movlw	2
  3272  0021C8  0100               	movlb	0	; () banked
  3273  0021CA  0100               	movlb	0	; () banked
  3274  0021CC  6FCB               	movwf	_i2c_mode& (0+255),b
  3275  0021CE  0100               	movlb	0	; () banked
  3276  0021D0  51A5               	movf	??_i2c_configure_slave& (0+255),w,b
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;my_i2c.c: 436: SSPCON2bits.SEN = 1;
  3280  0021D2  80C5               	bsf	4037,0,c	;volatile
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;my_i2c.c: 437: SSPCON1 |= 0b00100000;
  3284  0021D4  8AC6               	bsf	4038,5,c	;volatile
  3285                           
  3286                           ; BSR set to: 0
  3287  0021D6  0012               	return	
  3288  0021D8                     __end_of_i2c_configure_slave:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           prodh	equ	0xFF4
  3295                           prodl	equ	0xFF3
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           indf2	equ	0xFDF
  3302                           postinc2	equ	0xFDE
  3303                           postdec2	equ	0xFDD
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function _enable_interrupts *****************
  3309 ;; Defined at:
  3310 ;;		line 14 in file "source/interrupts.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;		None               void
  3317 ;; Registers used:
  3318 ;;		None
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:   12
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text14
  3339  00242A                     __ptext14:
  3340                           	opt stack 0
  3341  00242A                     _enable_interrupts:
  3342                           	opt stack 18
  3343                           
  3344                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;incstack = 0
  3348  00242A  8ED0               	bsf	4048,7,c	;volatile
  3349                           
  3350                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3351  00242C  8EF2               	bsf	intcon,7,c	;volatile
  3352                           
  3353                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3354  00242E  8CF2               	bsf	intcon,6,c	;volatile
  3355  002430  0012               	return	
  3356  002432                     __end_of_enable_interrupts:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           indf1	equ	0xFE7
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           indf2	equ	0xFDF
  3371                           postinc2	equ	0xFDE
  3372                           postdec2	equ	0xFDD
  3373                           fsr2h	equ	0xFDA
  3374                           fsr2l	equ	0xFD9
  3375                           status	equ	0xFD8
  3376                           
  3377 ;; *************** function _block_on_To_msgqueues *****************
  3378 ;; Defined at:
  3379 ;;		line 258 in file "source/messages.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;		None               void
  3386 ;; Registers used:
  3387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          0       1       0       0       0
  3396 ;;      Totals:         0       1       0       0       0
  3397 ;;Total ram usage:        1 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:   15
  3400 ;; This function calls:
  3401 ;;		_Delay1KTCYx
  3402 ;;		_check_msg
  3403 ;;		_in_main
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text15
  3410  001C9A                     __ptext15:
  3411                           	opt stack 0
  3412  001C9A                     _block_on_To_msgqueues:
  3413                           	opt stack 15
  3414                           
  3415                           ;messages.c: 259: if (!in_main()) {
  3416                           
  3417                           ;incstack = 0
  3418  001C9A  EC0B  F010         	call	_in_main	;wreg free
  3419  001C9E  0100               	movlb	0	; () banked
  3420  001CA0  0100               	movlb	0	; () banked
  3421  001CA2  51AA               	movf	(?_in_main+1)& (0+255),w,b
  3422  001CA4  0100               	movlb	0	; () banked
  3423  001CA6  11A9               	iorwf	?_in_main& (0+255),w,b
  3424  001CA8  B4D8               	btfsc	status,2,c
  3425  001CAA  0012               	return	
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;messages.c: 261: }
  3429                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3430                           
  3431                           ; BSR set to: 0
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;messages.c: 260: return;
  3435  001CAC  0100               	movlb	0	; () banked
  3436  001CAE  6FAB               	movwf	??_block_on_To_msgqueues& (0+255),b
  3437  001CB0  0E01               	movlw	1
  3438  001CB2  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3439  001CB4  0100               	movlb	0	; () banked
  3440  001CB6  51AB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3441  001CB8                     l2696:
  3442                           
  3443                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3444  001CB8  0101               	movlb	1	; () banked
  3445  001CBA  0E01               	movlw	high _ToMainHigh_MQ
  3446  001CBC  0100               	movlb	0	; () banked
  3447  001CBE  0100               	movlb	0	; () banked
  3448  001CC0  6FA6               	movwf	(check_msg@qptr+1)& (0+255),b
  3449  001CC2  0101               	movlb	1	; () banked
  3450  001CC4  0E84               	movlw	low _ToMainHigh_MQ
  3451  001CC6  0100               	movlb	0	; () banked
  3452  001CC8  0100               	movlb	0	; () banked
  3453  001CCA  6FA5               	movwf	check_msg@qptr& (0+255),b
  3454  001CCC  EC07  F011         	call	_check_msg	;wreg free
  3455  001CD0  0900               	iorlw	0
  3456  001CD2  B4D8               	btfsc	status,2,c
  3457  001CD4  D007               	goto	l2702
  3458                           
  3459                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3460  001CD6  0100               	movlb	0	; () banked
  3461  001CD8  6FAB               	movwf	??_block_on_To_msgqueues& (0+255),b
  3462  001CDA  0E00               	movlw	0
  3463  001CDC  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3464  001CDE  0100               	movlb	0	; () banked
  3465  001CE0  51AB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3466  001CE2  0012               	return	
  3467  001CE4                     l2702:
  3468                           
  3469                           ;messages.c: 271: }
  3470                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3471  001CE4  0102               	movlb	2	; () banked
  3472  001CE6  0E02               	movlw	high _ToMainLow_MQ
  3473  001CE8  0100               	movlb	0	; () banked
  3474  001CEA  0100               	movlb	0	; () banked
  3475  001CEC  6FA6               	movwf	(check_msg@qptr+1)& (0+255),b
  3476  001CEE  0102               	movlb	2	; () banked
  3477  001CF0  0E66               	movlw	low _ToMainLow_MQ
  3478  001CF2  0100               	movlb	0	; () banked
  3479  001CF4  0100               	movlb	0	; () banked
  3480  001CF6  6FA5               	movwf	check_msg@qptr& (0+255),b
  3481  001CF8  EC07  F011         	call	_check_msg	;wreg free
  3482  001CFC  0900               	iorlw	0
  3483  001CFE  B4D8               	btfsc	status,2,c
  3484  001D00  D007               	goto	l2708
  3485                           
  3486                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3487  001D02  0100               	movlb	0	; () banked
  3488  001D04  6FAB               	movwf	??_block_on_To_msgqueues& (0+255),b
  3489  001D06  0E00               	movlw	0
  3490  001D08  6E4A               	movwf	_MQ_Main_Willing_to_block,c
  3491  001D0A  0100               	movlb	0	; () banked
  3492  001D0C  51AB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3493  001D0E  0012               	return	
  3494  001D10                     l2708:
  3495                           
  3496                           ;messages.c: 278: }
  3497                           ;messages.c: 279: Delay1KTCYx(10);
  3498  001D10  0E0A               	movlw	10
  3499  001D12  ECC4  F011         	call	_Delay1KTCYx
  3500  001D16  D7D0               	goto	l2696
  3501  001D18                     __end_of_block_on_To_msgqueues:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           intcon	equ	0xFF2
  3510                           postinc0	equ	0xFEE
  3511                           wreg	equ	0xFE8
  3512                           indf1	equ	0xFE7
  3513                           fsr1h	equ	0xFE2
  3514                           fsr1l	equ	0xFE1
  3515                           indf2	equ	0xFDF
  3516                           postinc2	equ	0xFDE
  3517                           postdec2	equ	0xFDD
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function _in_main *****************
  3523 ;; Defined at:
  3524 ;;		line 40 in file "source/interrupts.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2   41[BANK0 ] int 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3538 ;;      Params:         0       2       0       0       0
  3539 ;;      Locals:         0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0
  3541 ;;      Totals:         0       2       0       0       0
  3542 ;;Total ram usage:        2 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:   14
  3545 ;; This function calls:
  3546 ;;		_in_high_int
  3547 ;;		_in_low_int
  3548 ;; This function is called by:
  3549 ;;		_block_on_To_msgqueues
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text16
  3554  002016                     __ptext16:
  3555                           	opt stack 0
  3556  002016                     _in_main:
  3557                           	opt stack 15
  3558                           
  3559                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3560                           
  3561                           ;incstack = 0
  3562  002016  ECE8  F00F         	call	_in_low_int	;wreg free
  3563  00201A  0100               	movlb	0	; () banked
  3564  00201C  0100               	movlb	0	; () banked
  3565  00201E  51A8               	movf	(?_in_low_int+1)& (0+255),w,b
  3566  002020  0100               	movlb	0	; () banked
  3567  002022  11A7               	iorwf	?_in_low_int& (0+255),w,b
  3568  002024  A4D8               	btfss	status,2,c
  3569  002026  D011               	goto	l2462
  3570                           
  3571                           ; BSR set to: 0
  3572  002028  ECEB  F011         	call	_in_high_int	;wreg free
  3573  00202C  0100               	movlb	0	; () banked
  3574  00202E  0100               	movlb	0	; () banked
  3575  002030  51A6               	movf	(?_in_high_int+1)& (0+255),w,b
  3576  002032  0100               	movlb	0	; () banked
  3577  002034  11A5               	iorwf	?_in_high_int& (0+255),w,b
  3578  002036  A4D8               	btfss	status,2,c
  3579  002038  D008               	goto	l2462
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;interrupts.c: 42: return (1);
  3583  00203A  0E00               	movlw	0
  3584  00203C  0100               	movlb	0	; () banked
  3585  00203E  0100               	movlb	0	; () banked
  3586  002040  6FAA               	movwf	(?_in_main+1)& (0+255),b
  3587  002042  0E01               	movlw	1
  3588  002044  0100               	movlb	0	; () banked
  3589  002046  6FA9               	movwf	?_in_main& (0+255),b
  3590  002048  0012               	return	
  3591  00204A                     l2462:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;interrupts.c: 44: return (0);
  3595  00204A  0E00               	movlw	0
  3596  00204C  0100               	movlb	0	; () banked
  3597  00204E  0100               	movlb	0	; () banked
  3598  002050  6FAA               	movwf	(?_in_main+1)& (0+255),b
  3599  002052  0E00               	movlw	0
  3600  002054  0100               	movlb	0	; () banked
  3601  002056  6FA9               	movwf	?_in_main& (0+255),b
  3602  002058  0012               	return	
  3603  00205A                     __end_of_in_main:
  3604                           	opt stack 0
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           indf2	equ	0xFDF
  3618                           postinc2	equ	0xFDE
  3619                           postdec2	equ	0xFDD
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _in_low_int *****************
  3625 ;; Defined at:
  3626 ;;		line 30 in file "source/interrupts.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2   39[BANK0 ] int 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3640 ;;      Params:         0       2       0       0       0
  3641 ;;      Locals:         0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0
  3643 ;;      Totals:         0       2       0       0       0
  3644 ;;Total ram usage:        2 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:   13
  3647 ;; This function calls:
  3648 ;;		_in_high_int
  3649 ;; This function is called by:
  3650 ;;		_in_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text17
  3655  001FD0                     __ptext17:
  3656                           	opt stack 0
  3657  001FD0                     _in_low_int:
  3658                           	opt stack 15
  3659                           
  3660                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;incstack = 0
  3664  001FD0  ACF2               	btfss	intcon,6,c	;volatile
  3665  001FD2  D008               	goto	l2440
  3666                           
  3667                           ;interrupts.c: 32: return (0);
  3668  001FD4  0E00               	movlw	0
  3669  001FD6  0100               	movlb	0	; () banked
  3670  001FD8  0100               	movlb	0	; () banked
  3671  001FDA  6FA8               	movwf	(?_in_low_int+1)& (0+255),b
  3672  001FDC  0E00               	movlw	0
  3673  001FDE  0100               	movlb	0	; () banked
  3674  001FE0  6FA7               	movwf	?_in_low_int& (0+255),b
  3675  001FE2  0012               	return	
  3676  001FE4                     l2440:
  3677  001FE4  ECEB  F011         	call	_in_high_int	;wreg free
  3678  001FE8  0100               	movlb	0	; () banked
  3679  001FEA  0100               	movlb	0	; () banked
  3680  001FEC  51A6               	movf	(?_in_high_int+1)& (0+255),w,b
  3681  001FEE  0100               	movlb	0	; () banked
  3682  001FF0  11A5               	iorwf	?_in_high_int& (0+255),w,b
  3683  001FF2  B4D8               	btfsc	status,2,c
  3684  001FF4  D008               	goto	l2448
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;interrupts.c: 34: return (0);
  3688  001FF6  0E00               	movlw	0
  3689  001FF8  0100               	movlb	0	; () banked
  3690  001FFA  0100               	movlb	0	; () banked
  3691  001FFC  6FA8               	movwf	(?_in_low_int+1)& (0+255),b
  3692  001FFE  0E00               	movlw	0
  3693  002000  0100               	movlb	0	; () banked
  3694  002002  6FA7               	movwf	?_in_low_int& (0+255),b
  3695  002004  0012               	return	
  3696  002006                     l2448:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;interrupts.c: 36: return (1);
  3700  002006  0E00               	movlw	0
  3701  002008  0100               	movlb	0	; () banked
  3702  00200A  0100               	movlb	0	; () banked
  3703  00200C  6FA8               	movwf	(?_in_low_int+1)& (0+255),b
  3704  00200E  0E01               	movlw	1
  3705  002010  0100               	movlb	0	; () banked
  3706  002012  6FA7               	movwf	?_in_low_int& (0+255),b
  3707  002014  0012               	return	
  3708  002016                     __end_of_in_low_int:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           postinc2	equ	0xFDE
  3724                           postdec2	equ	0xFDD
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8
  3728                           
  3729 ;; *************** function _in_high_int *****************
  3730 ;; Defined at:
  3731 ;;		line 22 in file "source/interrupts.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  2   37[BANK0 ] int 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3745 ;;      Params:         0       2       0       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0
  3748 ;;      Totals:         0       2       0       0       0
  3749 ;;Total ram usage:        2 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:   12
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_in_low_int
  3756 ;;		_in_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text18
  3761  0023D6                     __ptext18:
  3762                           	opt stack 0
  3763  0023D6                     _in_high_int:
  3764                           	opt stack 15
  3765                           
  3766                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;incstack = 0
  3770  0023D6  0E00               	movlw	0
  3771  0023D8  AEF2               	btfss	intcon,7,c	;volatile
  3772  0023DA  0E01               	movlw	1
  3773  0023DC  0100               	movlb	0	; () banked
  3774  0023DE  0100               	movlb	0	; () banked
  3775  0023E0  6FA5               	movwf	?_in_high_int& (0+255),b
  3776  0023E2  0100               	movlb	0	; () banked
  3777  0023E4  6BA6               	clrf	(?_in_high_int+1)& (0+255),b
  3778  0023E6  0012               	return	
  3779  0023E8                     __end_of_in_high_int:
  3780                           	opt stack 0
  3781                           tblptru	equ	0xFF8
  3782                           tblptrh	equ	0xFF7
  3783                           tblptrl	equ	0xFF6
  3784                           tablat	equ	0xFF5
  3785                           prodh	equ	0xFF4
  3786                           prodl	equ	0xFF3
  3787                           intcon	equ	0xFF2
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           indf1	equ	0xFE7
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           indf2	equ	0xFDF
  3794                           postinc2	equ	0xFDE
  3795                           postdec2	equ	0xFDD
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _check_msg *****************
  3801 ;; Defined at:
  3802 ;;		line 222 in file "source/messages.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  qptr            2   37[BANK0 ] PTR struct __msg_queue
  3805 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      unsigned char 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3817 ;;      Params:         0       2       0       0       0
  3818 ;;      Locals:         0       0       0       0       0
  3819 ;;      Temps:          0       1       0       0       0
  3820 ;;      Totals:         0       3       0       0       0
  3821 ;;Total ram usage:        3 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:   12
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_block_on_To_msgqueues
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text19
  3832  00220E                     __ptext19:
  3833                           	opt stack 0
  3834  00220E                     _check_msg:
  3835                           	opt stack 17
  3836                           
  3837                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;incstack = 0
  3841  00220E  0100               	movlb	0	; () banked
  3842  002210  EE20 F065          	lfsr	2,101
  3843  002214  0100               	movlb	0	; () banked
  3844  002216  51A5               	movf	check_msg@qptr& (0+255),w,b
  3845  002218  26D9               	addwf	fsr2l,f,c
  3846  00221A  0100               	movlb	0	; () banked
  3847  00221C  51A6               	movf	(check_msg@qptr+1)& (0+255),w,b
  3848  00221E  22DA               	addwfc	fsr2h,f,c
  3849  002220  50DF               	movf	indf2,w,c
  3850  002222  0100               	movlb	0	; () banked
  3851  002224  6FA7               	movwf	??_check_msg& (0+255),b
  3852  002226  0100               	movlb	0	; () banked
  3853  002228  51A7               	movf	??_check_msg& (0+255),w,b
  3854  00222A  0D19               	mullw	25
  3855  00222C  50F3               	movf	prodl,w,c
  3856  00222E  0100               	movlb	0	; () banked
  3857  002230  0100               	movlb	0	; () banked
  3858  002232  25A5               	addwf	check_msg@qptr& (0+255),w,b
  3859  002234  6ED9               	movwf	fsr2l,c
  3860  002236  50F4               	movf	prodh,w,c
  3861  002238  0100               	movlb	0	; () banked
  3862  00223A  0100               	movlb	0	; () banked
  3863  00223C  21A6               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3864  00223E  6EDA               	movwf	fsr2h,c
  3865  002240  50DF               	movf	indf2,w,c
  3866  002242  0012               	return	
  3867  002244                     __end_of_check_msg:
  3868                           	opt stack 0
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           prodh	equ	0xFF4
  3874                           prodl	equ	0xFF3
  3875                           intcon	equ	0xFF2
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           indf1	equ	0xFE7
  3879                           fsr1h	equ	0xFE2
  3880                           fsr1l	equ	0xFE1
  3881                           indf2	equ	0xFDF
  3882                           postinc2	equ	0xFDE
  3883                           postdec2	equ	0xFDD
  3884                           fsr2h	equ	0xFDA
  3885                           fsr2l	equ	0xFD9
  3886                           status	equ	0xFD8
  3887                           
  3888 ;; *************** function _Delay1KTCYx *****************
  3889 ;; Defined at:
  3890 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  unit            1    wreg     unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  unit            1   37[BANK0 ] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		wreg
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         0       1       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         0       1       0       0       0
  3908 ;;Total ram usage:        1 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:   12
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_block_on_To_msgqueues
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text20
  3919  002388                     __ptext20:
  3920                           	opt stack 0
  3921  002388                     _Delay1KTCYx:
  3922                           	opt stack 17
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;incstack = 0
  3926                           ;Delay1KTCYx@unit stored from wreg
  3927  002388  CFE8 F0A5          	movff	wreg,Delay1KTCYx@unit
  3928  00238C                     l786:
  3929  00238C  0EFA               	movlw	250
  3930  00238E                     u2757:
  3931  00238E  F000               	nop	
  3932  002390  2EE8               	decfsz	wreg,f,c
  3933  002392  D7FD               	goto	u2757
  3934  002394  0100               	movlb	0	; () banked
  3935  002396  0100               	movlb	0	; () banked
  3936  002398  2FA5               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3937  00239A  D7F8               	goto	l786
  3938  00239C  0012               	return	
  3939  00239E                     __end_of_Delay1KTCYx:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           prodh	equ	0xFF4
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           indf1	equ	0xFE7
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function _ToMainLow_recvmsg *****************
  3961 ;; Defined at:
  3962 ;;		line 112 in file "source/messages.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  maxlength       1    wreg     unsigned char 
  3965 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  3966 ;;		 -> main@msgtype(1), 
  3967 ;;  data            2   63[BANK0 ] PTR void 
  3968 ;;		 -> main@msgbuffer(23), 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  maxlength       1   65[BANK0 ] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      char 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3980 ;;      Params:         0       4       0       0       0
  3981 ;;      Locals:         0       1       0       0       0
  3982 ;;      Temps:          0       0       0       0       0
  3983 ;;      Totals:         0       5       0       0       0
  3984 ;;Total ram usage:        5 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:   14
  3987 ;; This function calls:
  3988 ;;		_recv_msg
  3989 ;; This function is called by:
  3990 ;;		_main
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text21
  3995  00205A                     __ptext21:
  3996                           	opt stack 0
  3997  00205A                     _ToMainLow_recvmsg:
  3998                           	opt stack 16
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;incstack = 0
  4002                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4003  00205A  CFE8 F0C1          	movff	wreg,ToMainLow_recvmsg@maxlength
  4004                           
  4005                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4006  00205E  0102               	movlb	2	; () banked
  4007  002060  0E02               	movlw	high _ToMainLow_MQ
  4008  002062  0100               	movlb	0	; () banked
  4009  002064  0100               	movlb	0	; () banked
  4010  002066  6FB0               	movwf	(recv_msg@qptr+1)& (0+255),b
  4011  002068  0102               	movlb	2	; () banked
  4012  00206A  0E66               	movlw	low _ToMainLow_MQ
  4013  00206C  0100               	movlb	0	; () banked
  4014  00206E  0100               	movlb	0	; () banked
  4015  002070  6FAF               	movwf	recv_msg@qptr& (0+255),b
  4016  002072  C0C1  F0B1         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4017  002076  0100               	movlb	0	; () banked
  4018  002078  0100               	movlb	0	; () banked
  4019  00207A  C0BE  F0B3         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4020  00207E  0100               	movlb	0	; () banked
  4021  002080  0100               	movlb	0	; () banked
  4022  002082  C0BD  F0B2         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4023  002086  0100               	movlb	0	; () banked
  4024  002088  0100               	movlb	0	; () banked
  4025  00208A  C0C0  F0B5         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4026  00208E  0100               	movlb	0	; () banked
  4027  002090  0100               	movlb	0	; () banked
  4028  002092  C0BF  F0B4         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4029  002096  EC1D  F009         	call	_recv_msg	;wreg free
  4030  00209A  0012               	return	
  4031  00209C                     __end_of_ToMainLow_recvmsg:
  4032                           	opt stack 0
  4033                           tblptru	equ	0xFF8
  4034                           tblptrh	equ	0xFF7
  4035                           tblptrl	equ	0xFF6
  4036                           tablat	equ	0xFF5
  4037                           prodh	equ	0xFF4
  4038                           prodl	equ	0xFF3
  4039                           intcon	equ	0xFF2
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           indf1	equ	0xFE7
  4043                           fsr1h	equ	0xFE2
  4044                           fsr1l	equ	0xFE1
  4045                           indf2	equ	0xFDF
  4046                           postinc2	equ	0xFDE
  4047                           postdec2	equ	0xFDD
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _ToMainHigh_recvmsg *****************
  4053 ;; Defined at:
  4054 ;;		line 135 in file "source/messages.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  maxlength       1    wreg     unsigned char 
  4057 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  4058 ;;		 -> main@msgtype(1), 
  4059 ;;  data            2   63[BANK0 ] PTR void 
  4060 ;;		 -> main@msgbuffer(23), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  maxlength       1   65[BANK0 ] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      char 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4072 ;;      Params:         0       4       0       0       0
  4073 ;;      Locals:         0       1       0       0       0
  4074 ;;      Temps:          0       0       0       0       0
  4075 ;;      Totals:         0       5       0       0       0
  4076 ;;Total ram usage:        5 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:   14
  4079 ;; This function calls:
  4080 ;;		_recv_msg
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text22
  4087  00209C                     __ptext22:
  4088                           	opt stack 0
  4089  00209C                     _ToMainHigh_recvmsg:
  4090                           	opt stack 16
  4091                           
  4092                           ;incstack = 0
  4093                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4094  00209C  CFE8 F0C1          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4095                           
  4096                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4097  0020A0  0101               	movlb	1	; () banked
  4098  0020A2  0E01               	movlw	high _ToMainHigh_MQ
  4099  0020A4  0100               	movlb	0	; () banked
  4100  0020A6  0100               	movlb	0	; () banked
  4101  0020A8  6FB0               	movwf	(recv_msg@qptr+1)& (0+255),b
  4102  0020AA  0101               	movlb	1	; () banked
  4103  0020AC  0E84               	movlw	low _ToMainHigh_MQ
  4104  0020AE  0100               	movlb	0	; () banked
  4105  0020B0  0100               	movlb	0	; () banked
  4106  0020B2  6FAF               	movwf	recv_msg@qptr& (0+255),b
  4107  0020B4  C0C1  F0B1         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4108  0020B8  0100               	movlb	0	; () banked
  4109  0020BA  0100               	movlb	0	; () banked
  4110  0020BC  C0BE  F0B3         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4111  0020C0  0100               	movlb	0	; () banked
  4112  0020C2  0100               	movlb	0	; () banked
  4113  0020C4  C0BD  F0B2         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4114  0020C8  0100               	movlb	0	; () banked
  4115  0020CA  0100               	movlb	0	; () banked
  4116  0020CC  C0C0  F0B5         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4117  0020D0  0100               	movlb	0	; () banked
  4118  0020D2  0100               	movlb	0	; () banked
  4119  0020D4  C0BF  F0B4         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4120  0020D8  EC1D  F009         	call	_recv_msg	;wreg free
  4121  0020DC  0012               	return	
  4122  0020DE                     __end_of_ToMainHigh_recvmsg:
  4123                           	opt stack 0
  4124                           tblptru	equ	0xFF8
  4125                           tblptrh	equ	0xFF7
  4126                           tblptrl	equ	0xFF6
  4127                           tablat	equ	0xFF5
  4128                           prodh	equ	0xFF4
  4129                           prodl	equ	0xFF3
  4130                           intcon	equ	0xFF2
  4131                           postinc0	equ	0xFEE
  4132                           wreg	equ	0xFE8
  4133                           indf1	equ	0xFE7
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           postdec2	equ	0xFDD
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           status	equ	0xFD8
  4142                           
  4143 ;; *************** function _recv_msg *****************
  4144 ;; Defined at:
  4145 ;;		line 63 in file "source/messages.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  qptr            2   47[BANK0 ] PTR struct __msg_queue
  4148 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4149 ;;  maxlength       1   49[BANK0 ] unsigned char 
  4150 ;;  msgtype         2   50[BANK0 ] PTR unsigned char 
  4151 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4152 ;;  data            2   52[BANK0 ] PTR void 
  4153 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  qmsg            2   59[BANK0 ] PTR struct __msg
  4156 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4157 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4158 ;;  tlength         2   57[BANK0 ] unsigned int 
  4159 ;;  slot            1   56[BANK0 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      char 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4169 ;;      Params:         0       7       0       0       0
  4170 ;;      Locals:         0       5       0       0       0
  4171 ;;      Temps:          0       2       0       0       0
  4172 ;;      Totals:         0      14       0       0       0
  4173 ;;Total ram usage:       14 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:   13
  4176 ;; This function calls:
  4177 ;;		_memcpy
  4178 ;; This function is called by:
  4179 ;;		_ToMainLow_recvmsg
  4180 ;;		_ToMainHigh_recvmsg
  4181 ;;		_FromMainLow_recvmsg
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text23
  4186  00123A                     __ptext23:
  4187                           	opt stack 0
  4188  00123A                     _recv_msg:
  4189                           	opt stack 16
  4190                           
  4191                           ;messages.c: 64: unsigned char slot;
  4192                           ;messages.c: 68: msg *qmsg;
  4193                           ;messages.c: 69: size_t tlength;
  4194                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4195                           
  4196                           ;incstack = 0
  4197  00123A  0100               	movlb	0	; () banked
  4198  00123C  EE20 F065          	lfsr	2,101
  4199  001240  0100               	movlb	0	; () banked
  4200  001242  51AF               	movf	recv_msg@qptr& (0+255),w,b
  4201  001244  26D9               	addwf	fsr2l,f,c
  4202  001246  0100               	movlb	0	; () banked
  4203  001248  51B0               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4204  00124A  22DA               	addwfc	fsr2h,f,c
  4205  00124C  50DF               	movf	indf2,w,c
  4206  00124E  0100               	movlb	0	; () banked
  4207  001250  0100               	movlb	0	; () banked
  4208  001252  6FB8               	movwf	recv_msg@slot& (0+255),b
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4212  001254  0100               	movlb	0	; () banked
  4213  001256  0100               	movlb	0	; () banked
  4214  001258  51B8               	movf	recv_msg@slot& (0+255),w,b
  4215  00125A  0D19               	mullw	25
  4216  00125C  50F3               	movf	prodl,w,c
  4217  00125E  0100               	movlb	0	; () banked
  4218  001260  0100               	movlb	0	; () banked
  4219  001262  25AF               	addwf	recv_msg@qptr& (0+255),w,b
  4220  001264  0100               	movlb	0	; () banked
  4221  001266  0100               	movlb	0	; () banked
  4222  001268  6FBB               	movwf	recv_msg@qmsg& (0+255),b
  4223  00126A  50F4               	movf	prodh,w,c
  4224  00126C  0100               	movlb	0	; () banked
  4225  00126E  0100               	movlb	0	; () banked
  4226  001270  21B0               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4227  001272  0100               	movlb	0	; () banked
  4228  001274  6FBC               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;messages.c: 74: if (qmsg->full == 1) {
  4232  001276  0E01               	movlw	1
  4233  001278  C0BB  FFD9         	movff	recv_msg@qmsg,fsr2l
  4234  00127C  C0BC  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4235  001280  62DF               	cpfseq	indf2,c
  4236  001282  D074               	goto	l2866
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4240  001284  0100               	movlb	0	; () banked
  4241  001286  EE20 F001          	lfsr	2,1
  4242  00128A  0100               	movlb	0	; () banked
  4243  00128C  51BB               	movf	recv_msg@qmsg& (0+255),w,b
  4244  00128E  26D9               	addwf	fsr2l,f,c
  4245  001290  0100               	movlb	0	; () banked
  4246  001292  51BC               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4247  001294  22DA               	addwfc	fsr2h,f,c
  4248  001296  50DF               	movf	indf2,w,c
  4249  001298  0100               	movlb	0	; () banked
  4250  00129A  0100               	movlb	0	; () banked
  4251  00129C  5DB1               	subwf	recv_msg@maxlength& (0+255),w,b
  4252  00129E  B0D8               	btfsc	status,0,c
  4253  0012A0  D002               	goto	l2850
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;messages.c: 77: return (-3);
  4257  0012A2  0EFD               	movlw	253
  4258  0012A4  0012               	return	
  4259  0012A6                     l2850:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;messages.c: 78: }
  4263                           ;messages.c: 80: tlength = qmsg->length;
  4264  0012A6  0100               	movlb	0	; () banked
  4265  0012A8  EE20 F001          	lfsr	2,1
  4266  0012AC  0100               	movlb	0	; () banked
  4267  0012AE  51BB               	movf	recv_msg@qmsg& (0+255),w,b
  4268  0012B0  26D9               	addwf	fsr2l,f,c
  4269  0012B2  0100               	movlb	0	; () banked
  4270  0012B4  51BC               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4271  0012B6  22DA               	addwfc	fsr2h,f,c
  4272  0012B8  50DF               	movf	indf2,w,c
  4273  0012BA  0100               	movlb	0	; () banked
  4274  0012BC  6FB6               	movwf	??_recv_msg& (0+255),b
  4275  0012BE  0100               	movlb	0	; () banked
  4276  0012C0  51B6               	movf	??_recv_msg& (0+255),w,b
  4277  0012C2  0100               	movlb	0	; () banked
  4278  0012C4  0100               	movlb	0	; () banked
  4279  0012C6  6FB9               	movwf	recv_msg@tlength& (0+255),b
  4280  0012C8  0100               	movlb	0	; () banked
  4281  0012CA  6BBA               	clrf	(recv_msg@tlength+1)& (0+255),b
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4285  0012CC  0100               	movlb	0	; () banked
  4286  0012CE  0100               	movlb	0	; () banked
  4287  0012D0  C0B5  F0A6         	movff	recv_msg@data+1,memcpy@d1+1
  4288  0012D4  0100               	movlb	0	; () banked
  4289  0012D6  0100               	movlb	0	; () banked
  4290  0012D8  C0B4  F0A5         	movff	recv_msg@data,memcpy@d1
  4291  0012DC  0E03               	movlw	3
  4292  0012DE  0100               	movlb	0	; () banked
  4293  0012E0  0100               	movlb	0	; () banked
  4294  0012E2  25BB               	addwf	recv_msg@qmsg& (0+255),w,b
  4295  0012E4  0100               	movlb	0	; () banked
  4296  0012E6  6FB6               	movwf	??_recv_msg& (0+255),b
  4297  0012E8  0E00               	movlw	0
  4298  0012EA  0100               	movlb	0	; () banked
  4299  0012EC  0100               	movlb	0	; () banked
  4300  0012EE  21BC               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4301  0012F0  0100               	movlb	0	; () banked
  4302  0012F2  6FB7               	movwf	(??_recv_msg+1)& (0+255),b
  4303  0012F4  C0B6  F0A7         	movff	??_recv_msg,memcpy@s1
  4304  0012F8  C0B7  F0A8         	movff	??_recv_msg+1,memcpy@s1+1
  4305  0012FC  C0B9  F0A9         	movff	recv_msg@tlength,memcpy@n
  4306  001300  C0BA  F0AA         	movff	recv_msg@tlength+1,memcpy@n+1
  4307  001304  EC3C  F00F         	call	_memcpy	;wreg free
  4308                           
  4309                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4310  001308  0100               	movlb	0	; () banked
  4311  00130A  EE20 F065          	lfsr	2,101
  4312  00130E  0100               	movlb	0	; () banked
  4313  001310  51AF               	movf	recv_msg@qptr& (0+255),w,b
  4314  001312  26D9               	addwf	fsr2l,f,c
  4315  001314  0100               	movlb	0	; () banked
  4316  001316  51B0               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4317  001318  22DA               	addwfc	fsr2h,f,c
  4318  00131A  0100               	movlb	0	; () banked
  4319  00131C  EE10 F065          	lfsr	1,101
  4320  001320  0100               	movlb	0	; () banked
  4321  001322  51AF               	movf	recv_msg@qptr& (0+255),w,b
  4322  001324  26E1               	addwf	fsr1l,f,c
  4323  001326  0100               	movlb	0	; () banked
  4324  001328  51B0               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4325  00132A  22E2               	addwfc	fsr1h,f,c
  4326  00132C  50E7               	movf	indf1,w,c
  4327  00132E  0100               	movlb	0	; () banked
  4328  001330  6FB6               	movwf	??_recv_msg& (0+255),b
  4329  001332  0100               	movlb	0	; () banked
  4330  001334  29B6               	incf	??_recv_msg& (0+255),w,b
  4331  001336  0B03               	andlw	3
  4332  001338  6EDF               	movwf	indf2,c
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4336  00133A  0100               	movlb	0	; () banked
  4337  00133C  EE20 F002          	lfsr	2,2
  4338  001340  0100               	movlb	0	; () banked
  4339  001342  51BB               	movf	recv_msg@qmsg& (0+255),w,b
  4340  001344  26D9               	addwf	fsr2l,f,c
  4341  001346  0100               	movlb	0	; () banked
  4342  001348  51BC               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4343  00134A  22DA               	addwfc	fsr2h,f,c
  4344  00134C  C0B2  FFE1         	movff	recv_msg@msgtype,fsr1l
  4345  001350  C0B3  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4346  001354  CFDF FFE7          	movff	indf2,indf1
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;messages.c: 91: qmsg->full = 0;
  4350  001358  C0BB  FFD9         	movff	recv_msg@qmsg,fsr2l
  4351  00135C  C0BC  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4352  001360  0E00               	movlw	0
  4353  001362  6EDF               	movwf	indf2,c
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;messages.c: 92: return (tlength);
  4357  001364  0100               	movlb	0	; () banked
  4358  001366  0100               	movlb	0	; () banked
  4359  001368  51B9               	movf	recv_msg@tlength& (0+255),w,b
  4360  00136A  0012               	return	
  4361  00136C                     l2866:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;messages.c: 94: return (-4);
  4365  00136C  0EFC               	movlw	252
  4366  00136E  0012               	return	
  4367  001370                     __end_of_recv_msg:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           postinc0	equ	0xFEE
  4377                           wreg	equ	0xFE8
  4378                           indf1	equ	0xFE7
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _memcpy *****************
  4389 ;; Defined at:
  4390 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  d1              2   37[BANK0 ] PTR void 
  4393 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4394 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4395 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4396 ;;  s1              2   39[BANK0 ] PTR const void 
  4397 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4398 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4399 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  4400 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4401 ;;		 -> main@ic(77), main@uc(23), 
  4402 ;;  n               2   41[BANK0 ] unsigned int 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  s               2   45[BANK0 ] PTR const unsigned char 
  4405 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  4406 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  4407 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  4408 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  4409 ;;		 -> main@ic(77), main@uc(23), 
  4410 ;;  d               2   43[BANK0 ] PTR unsigned char 
  4411 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  4412 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  4413 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  2   37[BANK0 ] PTR void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4423 ;;      Params:         0       6       0       0       0
  4424 ;;      Locals:         0       4       0       0       0
  4425 ;;      Temps:          0       0       0       0       0
  4426 ;;      Totals:         0      10       0       0       0
  4427 ;;Total ram usage:       10 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:   12
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_send_msg
  4434 ;;		_recv_msg
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text24
  4439  001E78                     __ptext24:
  4440                           	opt stack 0
  4441  001E78                     _memcpy:
  4442                           	opt stack 15
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;incstack = 0
  4446  001E78  0100               	movlb	0	; () banked
  4447  001E7A  0100               	movlb	0	; () banked
  4448  001E7C  C0A8  F0AE         	movff	memcpy@s1+1,memcpy@s+1
  4449  001E80  0100               	movlb	0	; () banked
  4450  001E82  0100               	movlb	0	; () banked
  4451  001E84  C0A7  F0AD         	movff	memcpy@s1,memcpy@s
  4452  001E88  0100               	movlb	0	; () banked
  4453  001E8A  0100               	movlb	0	; () banked
  4454  001E8C  C0A6  F0AC         	movff	memcpy@d1+1,memcpy@d+1
  4455  001E90  0100               	movlb	0	; () banked
  4456  001E92  0100               	movlb	0	; () banked
  4457  001E94  C0A5  F0AB         	movff	memcpy@d1,memcpy@d
  4458  001E98  D012               	goto	l2836
  4459  001E9A                     l2830:
  4460                           
  4461                           ; BSR set to: 0
  4462  001E9A  C0AD  FFD9         	movff	memcpy@s,fsr2l
  4463  001E9E  C0AE  FFDA         	movff	memcpy@s+1,fsr2h
  4464  001EA2  C0AB  FFE1         	movff	memcpy@d,fsr1l
  4465  001EA6  C0AC  FFE2         	movff	memcpy@d+1,fsr1h
  4466  001EAA  CFDF FFE7          	movff	indf2,indf1
  4467                           
  4468                           ; BSR set to: 0
  4469  001EAE  0100               	movlb	0	; () banked
  4470  001EB0  0100               	movlb	0	; () banked
  4471  001EB2  4BAD               	infsnz	memcpy@s& (0+255),f,b
  4472  001EB4  2BAE               	incf	(memcpy@s+1)& (0+255),f,b
  4473                           
  4474                           ; BSR set to: 0
  4475  001EB6  0100               	movlb	0	; () banked
  4476  001EB8  0100               	movlb	0	; () banked
  4477  001EBA  4BAB               	infsnz	memcpy@d& (0+255),f,b
  4478  001EBC  2BAC               	incf	(memcpy@d+1)& (0+255),f,b
  4479  001EBE                     l2836:
  4480                           
  4481                           ; BSR set to: 0
  4482  001EBE  0100               	movlb	0	; () banked
  4483  001EC0  0100               	movlb	0	; () banked
  4484  001EC2  07A9               	decf	memcpy@n& (0+255),f,b
  4485  001EC4  A0D8               	btfss	status,0,c
  4486  001EC6  07AA               	decf	(memcpy@n+1)& (0+255),f,b
  4487  001EC8  0100               	movlb	0	; () banked
  4488  001ECA  29A9               	incf	memcpy@n& (0+255),w,b
  4489  001ECC  B4D8               	btfsc	status,2,c
  4490  001ECE  29AA               	incf	(memcpy@n+1)& (0+255),w,b
  4491  001ED0  B4D8               	btfsc	status,2,c
  4492                           
  4493                           ; BSR set to: 0
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;	Return value of _memcpy is never used
  4497  001ED2  0012               	return	
  4498  001ED4  D7E2               	goto	l2830
  4499  001ED6                     __end_of_memcpy:
  4500                           	opt stack 0
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           intcon	equ	0xFF2
  4508                           postinc0	equ	0xFEE
  4509                           wreg	equ	0xFE8
  4510                           indf1	equ	0xFE7
  4511                           fsr1h	equ	0xFE2
  4512                           fsr1l	equ	0xFE1
  4513                           indf2	equ	0xFDF
  4514                           postinc2	equ	0xFDE
  4515                           postdec2	equ	0xFDD
  4516                           fsr2h	equ	0xFDA
  4517                           fsr2l	equ	0xFD9
  4518                           status	equ	0xFD8
  4519                           
  4520 ;; *************** function _OpenUSART *****************
  4521 ;; Defined at:
  4522 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  config          1    wreg     unsigned char 
  4525 ;;  spbrg           2   37[BANK0 ] unsigned int 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  config          1   42[BANK0 ] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;		None               void
  4530 ;; Registers used:
  4531 ;;		wreg, status,2
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4537 ;;      Params:         0       2       0       0       0
  4538 ;;      Locals:         0       1       0       0       0
  4539 ;;      Temps:          0       3       0       0       0
  4540 ;;      Totals:         0       6       0       0       0
  4541 ;;Total ram usage:        6 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:   12
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text25
  4552  001B86                     __ptext25:
  4553                           	opt stack 0
  4554  001B86                     _OpenUSART:
  4555                           	opt stack 18
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;incstack = 0
  4559                           ;OpenUSART@config stored from wreg
  4560  001B86  CFE8 F0AA          	movff	wreg,OpenUSART@config
  4561  001B8A  0E00               	movlw	0
  4562  001B8C  6EAC               	movwf	4012,c	;volatile
  4563  001B8E  0E00               	movlw	0
  4564  001B90  6EAB               	movwf	4011,c	;volatile
  4565  001B92  0100               	movlb	0	; () banked
  4566  001B94  0100               	movlb	0	; () banked
  4567  001B96  B1AA               	btfsc	OpenUSART@config& (0+255),0,b
  4568                           
  4569                           ; BSR set to: 0
  4570  001B98  88AC               	bsf	4012,4,c	;volatile
  4571                           
  4572                           ; BSR set to: 0
  4573                           
  4574                           ; BSR set to: 0
  4575  001B9A  0100               	movlb	0	; () banked
  4576  001B9C  0100               	movlb	0	; () banked
  4577  001B9E  A3AA               	btfss	OpenUSART@config& (0+255),1,b
  4578  001BA0  D002               	goto	l2650
  4579                           
  4580                           ; BSR set to: 0
  4581  001BA2  8CAC               	bsf	4012,6,c	;volatile
  4582  001BA4  8CAB               	bsf	4011,6,c	;volatile
  4583  001BA6                     l2650:
  4584                           
  4585                           ; BSR set to: 0
  4586  001BA6  0100               	movlb	0	; () banked
  4587  001BA8  0100               	movlb	0	; () banked
  4588  001BAA  B5AA               	btfsc	OpenUSART@config& (0+255),2,b
  4589                           
  4590                           ; BSR set to: 0
  4591  001BAC  8EAC               	bsf	4012,7,c	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           
  4595                           ; BSR set to: 0
  4596  001BAE  0100               	movlb	0	; () banked
  4597  001BB0  0100               	movlb	0	; () banked
  4598  001BB2  A7AA               	btfss	OpenUSART@config& (0+255),3,b
  4599  001BB4  D002               	goto	l542
  4600                           
  4601                           ; BSR set to: 0
  4602  001BB6  88AB               	bsf	4011,4,c	;volatile
  4603  001BB8  D001               	goto	l2658
  4604  001BBA                     l542:
  4605                           
  4606                           ; BSR set to: 0
  4607  001BBA  8AAB               	bsf	4011,5,c	;volatile
  4608  001BBC                     l2658:
  4609                           
  4610                           ; BSR set to: 0
  4611  001BBC  0100               	movlb	0	; () banked
  4612  001BBE  0100               	movlb	0	; () banked
  4613  001BC0  B9AA               	btfsc	OpenUSART@config& (0+255),4,b
  4614                           
  4615                           ; BSR set to: 0
  4616  001BC2  84AC               	bsf	4012,2,c	;volatile
  4617                           
  4618                           ; BSR set to: 0
  4619  001BC4  989E               	bcf	3998,4,c	;volatile
  4620                           
  4621                           ; BSR set to: 0
  4622  001BC6  0100               	movlb	0	; () banked
  4623  001BC8  0100               	movlb	0	; () banked
  4624  001BCA  BBAA               	btfsc	OpenUSART@config& (0+255),5,b
  4625                           
  4626                           ; BSR set to: 0
  4627  001BCC  86AB               	bsf	4011,3,c	;volatile
  4628                           
  4629                           ; BSR set to: 0
  4630                           
  4631                           ; BSR set to: 0
  4632  001BCE  0100               	movlb	0	; () banked
  4633  001BD0  0100               	movlb	0	; () banked
  4634  001BD2  ADAA               	btfss	OpenUSART@config& (0+255),6,b
  4635  001BD4  D002               	goto	l546
  4636                           
  4637                           ; BSR set to: 0
  4638  001BD6  8A9D               	bsf	3997,5,c	;volatile
  4639  001BD8  D001               	goto	l547
  4640  001BDA                     l546:
  4641                           
  4642                           ; BSR set to: 0
  4643  001BDA  9A9D               	bcf	3997,5,c	;volatile
  4644  001BDC                     l547:
  4645                           
  4646                           ; BSR set to: 0
  4647  001BDC  9A9E               	bcf	3998,5,c	;volatile
  4648                           
  4649                           ; BSR set to: 0
  4650  001BDE  0100               	movlb	0	; () banked
  4651  001BE0  0100               	movlb	0	; () banked
  4652  001BE2  AFAA               	btfss	OpenUSART@config& (0+255),7,b
  4653  001BE4  D002               	goto	l548
  4654                           
  4655                           ; BSR set to: 0
  4656  001BE6  889D               	bsf	3997,4,c	;volatile
  4657  001BE8  D001               	goto	l549
  4658  001BEA                     l548:
  4659                           
  4660                           ; BSR set to: 0
  4661  001BEA  989D               	bcf	3997,4,c	;volatile
  4662  001BEC                     l549:
  4663                           
  4664                           ; BSR set to: 0
  4665  001BEC  C0A5  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4666                           
  4667                           ; BSR set to: 0
  4668  001BF0  0100               	movlb	0	; () banked
  4669  001BF2  C0A6  F0A7         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4670  001BF6  C0A7  F0A8         	movff	??_OpenUSART,??_OpenUSART+1
  4671  001BFA  0100               	movlb	0	; () banked
  4672  001BFC  6BA9               	clrf	(??_OpenUSART+2)& (0+255),b
  4673  001BFE  0100               	movlb	0	; () banked
  4674  001C00  51A8               	movf	(??_OpenUSART+1)& (0+255),w,b
  4675  001C02  6EB0               	movwf	4016,c	;volatile
  4676                           
  4677                           ; BSR set to: 0
  4678  001C04  8AAC               	bsf	4012,5,c	;volatile
  4679                           
  4680                           ; BSR set to: 0
  4681  001C06  8EAB               	bsf	4011,7,c	;volatile
  4682                           
  4683                           ; BSR set to: 0
  4684  001C08  9C94               	bcf	3988,6,c	;volatile
  4685                           
  4686                           ; BSR set to: 0
  4687  001C0A  8E94               	bsf	3988,7,c	;volatile
  4688                           
  4689                           ; BSR set to: 0
  4690  001C0C  A8AC               	btfss	4012,4,c	;volatile
  4691  001C0E  0012               	return	
  4692                           
  4693                           ; BSR set to: 0
  4694  001C10  BEAC               	btfsc	4012,7,c	;volatile
  4695  001C12  0012               	return	
  4696                           
  4697                           ; BSR set to: 0
  4698  001C14  8C94               	bsf	3988,6,c	;volatile
  4699  001C16  0012               	return	
  4700  001C18                     __end_of_OpenUSART:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           indf1	equ	0xFE7
  4712                           fsr1h	equ	0xFE2
  4713                           fsr1l	equ	0xFE1
  4714                           indf2	equ	0xFDF
  4715                           postinc2	equ	0xFDE
  4716                           postdec2	equ	0xFDD
  4717                           fsr2h	equ	0xFDA
  4718                           fsr2l	equ	0xFD9
  4719                           status	equ	0xFD8
  4720                           
  4721 ;; *************** function _InterruptHandlerLow *****************
  4722 ;; Defined at:
  4723 ;;		line 122 in file "source/interrupts.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;		None               void
  4730 ;; Registers used:
  4731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4737 ;;      Params:         0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0
  4739 ;;      Temps:         17       0       0       0       0
  4740 ;;      Totals:        17       0       0       0       0
  4741 ;;Total ram usage:       17 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:   11
  4744 ;; This function calls:
  4745 ;;		_timer1_int_handler
  4746 ;;		_uart_recv_int_handler
  4747 ;; This function is called by:
  4748 ;;		Interrupt level 1
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	intcodelo
  4753  000018                     __pintcodelo:
  4754                           	opt stack 0
  4755  000018                     _InterruptHandlerLow:
  4756                           	opt stack 15
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;incstack = 0
  4760  000018  CFD8 F021          	movff	status,??_InterruptHandlerLow
  4761  00001C  CFE8 F022          	movff	wreg,??_InterruptHandlerLow+1
  4762  000020  CFE0 F023          	movff	bsr,??_InterruptHandlerLow+2
  4763  000024  CFFA F024          	movff	pclath,??_InterruptHandlerLow+3
  4764  000028  CFFB F025          	movff	pclatu,??_InterruptHandlerLow+4
  4765  00002C  CFE9 F026          	movff	fsr0l,??_InterruptHandlerLow+5
  4766  000030  CFEA F027          	movff	fsr0h,??_InterruptHandlerLow+6
  4767  000034  CFE1 F028          	movff	fsr1l,??_InterruptHandlerLow+7
  4768  000038  CFE2 F029          	movff	fsr1h,??_InterruptHandlerLow+8
  4769  00003C  CFD9 F02A          	movff	fsr2l,??_InterruptHandlerLow+9
  4770  000040  CFDA F02B          	movff	fsr2h,??_InterruptHandlerLow+10
  4771  000044  CFF3 F02C          	movff	prodl,??_InterruptHandlerLow+11
  4772  000048  CFF4 F02D          	movff	prodh,??_InterruptHandlerLow+12
  4773  00004C  CFF6 F02E          	movff	tblptrl,??_InterruptHandlerLow+13
  4774  000050  CFF7 F02F          	movff	tblptrh,??_InterruptHandlerLow+14
  4775  000054  CFF8 F030          	movff	tblptru,??_InterruptHandlerLow+15
  4776  000058  CFF5 F031          	movff	tablat,??_InterruptHandlerLow+16
  4777                           
  4778                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4779  00005C  A09E               	btfss	3998,0,c	;volatile
  4780  00005E  D003               	goto	i1l3486
  4781                           
  4782                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4783  000060  909E               	bcf	3998,0,c	;volatile
  4784                           
  4785                           ;interrupts.c: 126: timer1_int_handler();
  4786  000062  EC3B  F011         	call	_timer1_int_handler	;wreg free
  4787  000066                     i1l3486:
  4788                           
  4789                           ;interrupts.c: 127: }
  4790                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4791  000066  AA9E               	btfss	3998,5,c	;volatile
  4792  000068  D003               	goto	i1l47
  4793                           
  4794                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4795  00006A  9A9E               	bcf	3998,5,c	;volatile
  4796                           
  4797                           ;interrupts.c: 132: uart_recv_int_handler();
  4798  00006C  EC6B  F00F         	call	_uart_recv_int_handler	;wreg free
  4799  000070                     i1l47:
  4800  000070  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4801  000074  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4802  000078  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4803  00007C  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4804  000080  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4805  000084  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4806  000088  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4807  00008C  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4808  000090  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4809  000094  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4810  000098  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4811  00009C  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4812  0000A0  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4813  0000A4  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4814  0000A8  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4815  0000AC  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4816  0000B0  C021  FFD8         	movff	??_InterruptHandlerLow,status
  4817  0000B4  0010               	retfie	
  4818  0000B6                     __end_of_InterruptHandlerLow:
  4819                           	opt stack 0
  4820                           pclatu	equ	0xFFB
  4821                           pclath	equ	0xFFA
  4822                           tblptru	equ	0xFF8
  4823                           tblptrh	equ	0xFF7
  4824                           tblptrl	equ	0xFF6
  4825                           tablat	equ	0xFF5
  4826                           prodh	equ	0xFF4
  4827                           prodl	equ	0xFF3
  4828                           intcon	equ	0xFF2
  4829                           postinc0	equ	0xFEE
  4830                           fsr0h	equ	0xFEA
  4831                           fsr0l	equ	0xFE9
  4832                           wreg	equ	0xFE8
  4833                           indf1	equ	0xFE7
  4834                           fsr1h	equ	0xFE2
  4835                           fsr1l	equ	0xFE1
  4836                           bsr	equ	0xFE0
  4837                           indf2	equ	0xFDF
  4838                           postinc2	equ	0xFDE
  4839                           postdec2	equ	0xFDD
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8
  4843                           
  4844 ;; *************** function _uart_recv_int_handler *****************
  4845 ;; Defined at:
  4846 ;;		line 16 in file "source/my_uart.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;		None               void
  4853 ;; Registers used:
  4854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4860 ;;      Params:         0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0
  4862 ;;      Temps:          1       0       0       0       0
  4863 ;;      Totals:         1       0       0       0       0
  4864 ;;Total ram usage:        1 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:   10
  4867 ;; This function calls:
  4868 ;;		_ReadUSART
  4869 ;;		_ToMainLow_sendmsg
  4870 ;;		_parseUART
  4871 ;; This function is called by:
  4872 ;;		_InterruptHandlerLow
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text27
  4877  001ED6                     __ptext27:
  4878                           	opt stack 0
  4879  001ED6                     _uart_recv_int_handler:
  4880                           	opt stack 15
  4881                           
  4882                           ;my_uart.c: 25: if ((PIR1bits.RCIF)) {
  4883                           
  4884                           ;incstack = 0
  4885  001ED6  AA9E               	btfss	3998,5,c	;volatile
  4886  001ED8  D01C               	goto	i1l3474
  4887                           
  4888                           ;my_uart.c: 26: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4889  001EDA  EE20 F016          	lfsr	2,22
  4890  001EDE  504D               	movf	_uc_ptr,w,c
  4891  001EE0  26D9               	addwf	fsr2l,f,c
  4892  001EE2  504E               	movf	_uc_ptr+1,w,c
  4893  001EE4  22DA               	addwfc	fsr2h,f,c
  4894  001EE6  50DF               	movf	indf2,w,c
  4895  001EE8  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  4896  001EEA  5020               	movf	??_uart_recv_int_handler,w,c
  4897  001EEC  0D01               	mullw	1
  4898  001EEE  50F3               	movf	prodl,w,c
  4899  001EF0  244D               	addwf	_uc_ptr,w,c
  4900  001EF2  6ED9               	movwf	fsr2l,c
  4901  001EF4  50F4               	movf	prodh,w,c
  4902  001EF6  204E               	addwfc	_uc_ptr+1,w,c
  4903  001EF8  6EDA               	movwf	fsr2h,c
  4904  001EFA  ECB5  F011         	call	_ReadUSART	;wreg free
  4905  001EFE  6EDF               	movwf	indf2,c
  4906                           
  4907                           ;my_uart.c: 29: uc_ptr->buflen++;
  4908  001F00  EE20 F016          	lfsr	2,22
  4909  001F04  504D               	movf	_uc_ptr,w,c
  4910  001F06  26D9               	addwf	fsr2l,f,c
  4911  001F08  504E               	movf	_uc_ptr+1,w,c
  4912  001F0A  22DA               	addwfc	fsr2h,f,c
  4913  001F0C  2ADF               	incf	indf2,f,c
  4914                           
  4915                           ;my_uart.c: 30: parseUART();
  4916  001F0E  ECCF  F00B         	call	_parseUART	;wreg free
  4917  001F12                     i1l3474:
  4918                           
  4919                           ;my_uart.c: 33: }
  4920                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  4921  001F12  A64C               	btfss	_USART_Status,3,c
  4922  001F14  0012               	return	
  4923                           
  4924                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  4925  001F16  98AB               	bcf	4011,4,c	;volatile
  4926                           
  4927                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  4928  001F18  88AB               	bsf	4011,4,c	;volatile
  4929                           
  4930                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  4931  001F1A  6E20               	movwf	??_uart_recv_int_handler& (0+255),c
  4932  001F1C  0E1E               	movlw	30
  4933  001F1E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4934  001F20  5020               	movf	??_uart_recv_int_handler& (0+255),w,c
  4935  001F22  0E00               	movlw	0
  4936  001F24  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4937  001F26  0E00               	movlw	0
  4938  001F28  6E18               	movwf	ToMainLow_sendmsg@data,c
  4939  001F2A  0E00               	movlw	0
  4940  001F2C  EC7F  F011         	call	_ToMainLow_sendmsg
  4941  001F30  0012               	return	
  4942  001F32                     __end_of_uart_recv_int_handler:
  4943                           	opt stack 0
  4944                           pclatu	equ	0xFFB
  4945                           pclath	equ	0xFFA
  4946                           tblptru	equ	0xFF8
  4947                           tblptrh	equ	0xFF7
  4948                           tblptrl	equ	0xFF6
  4949                           tablat	equ	0xFF5
  4950                           prodh	equ	0xFF4
  4951                           prodl	equ	0xFF3
  4952                           intcon	equ	0xFF2
  4953                           postinc0	equ	0xFEE
  4954                           fsr0h	equ	0xFEA
  4955                           fsr0l	equ	0xFE9
  4956                           wreg	equ	0xFE8
  4957                           indf1	equ	0xFE7
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           bsr	equ	0xFE0
  4961                           indf2	equ	0xFDF
  4962                           postinc2	equ	0xFDE
  4963                           postdec2	equ	0xFDD
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _parseUART *****************
  4969 ;; Defined at:
  4970 ;;		line 56 in file "source/my_uart.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4984 ;;      Params:         0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0
  4986 ;;      Temps:          5       0       0       0       0
  4987 ;;      Totals:         5       0       0       0       0
  4988 ;;Total ram usage:        5 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    9
  4991 ;; This function calls:
  4992 ;;		_ToMainLow_sendmsg
  4993 ;; This function is called by:
  4994 ;;		_uart_recv_int_handler
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text28
  4999  00179E                     __ptext28:
  5000                           	opt stack 0
  5001  00179E                     _parseUART:
  5002                           	opt stack 15
  5003                           
  5004                           ;my_uart.c: 58: switch(State)
  5005                           
  5006                           ;incstack = 0
  5007  00179E  D065               	goto	i1l3464
  5008  0017A0                     i1l3438:
  5009                           
  5010                           ;my_uart.c: 61: {
  5011                           ;my_uart.c: 62: State = MSGID;
  5012  0017A0  6E1B               	movwf	??_parseUART& (0+255),c
  5013  0017A2  0E01               	movlw	1
  5014  0017A4  6E4B               	movwf	_State,c
  5015  0017A6  501B               	movf	??_parseUART& (0+255),w,c
  5016                           
  5017                           ;my_uart.c: 63: command_count = 0;
  5018  0017A8  0E00               	movlw	0
  5019  0017AA  6E43               	movwf	_command_count+1,c
  5020  0017AC  0E00               	movlw	0
  5021  0017AE  6E42               	movwf	_command_count,c
  5022                           
  5023                           ;my_uart.c: 64: command_length = 0;
  5024  0017B0  0E00               	movlw	0
  5025  0017B2  6E45               	movwf	_command_length+1,c
  5026  0017B4  0E00               	movlw	0
  5027  0017B6  6E44               	movwf	_command_length,c
  5028                           
  5029                           ;my_uart.c: 65: motor_count = 0;
  5030  0017B8  0E00               	movlw	0
  5031  0017BA  6E47               	movwf	_motor_count+1,c
  5032  0017BC  0E00               	movlw	0
  5033  0017BE  6E46               	movwf	_motor_count,c
  5034                           
  5035                           ;my_uart.c: 66: break;
  5036  0017C0  0012               	return	
  5037  0017C2                     i1l3446:
  5038                           
  5039                           ;my_uart.c: 69: {
  5040                           ;my_uart.c: 70: command_length = uc_ptr->buffer[uc_ptr->buflen-1] & 0x0f;
  5041  0017C2  0EFF               	movlw	255
  5042  0017C4  6E1B               	movwf	??_parseUART& (0+255),c
  5043  0017C6  0EFF               	movlw	255
  5044  0017C8  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5045  0017CA  EE20 F016          	lfsr	2,22
  5046  0017CE  504D               	movf	_uc_ptr,w,c
  5047  0017D0  26D9               	addwf	fsr2l,f,c
  5048  0017D2  504E               	movf	_uc_ptr+1,w,c
  5049  0017D4  22DA               	addwfc	fsr2h,f,c
  5050  0017D6  50DF               	movf	indf2,w,c
  5051  0017D8  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5052  0017DA  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  5053  0017DC  501B               	movf	??_parseUART,w,c
  5054  0017DE  261D               	addwf	??_parseUART+2,f,c
  5055  0017E0  501C               	movf	??_parseUART+1,w,c
  5056  0017E2  221E               	addwfc	??_parseUART+3,f,c
  5057  0017E4  501D               	movf	??_parseUART+2,w,c
  5058  0017E6  244D               	addwf	_uc_ptr,w,c
  5059  0017E8  6ED9               	movwf	fsr2l,c
  5060  0017EA  501E               	movf	??_parseUART+3,w,c
  5061  0017EC  204E               	addwfc	_uc_ptr+1,w,c
  5062  0017EE  6EDA               	movwf	fsr2h,c
  5063  0017F0  50DF               	movf	indf2,w,c
  5064  0017F2  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  5065  0017F4  0E0F               	movlw	15
  5066  0017F6  161F               	andwf	??_parseUART+4,f,c
  5067  0017F8  501F               	movf	??_parseUART+4,w,c
  5068  0017FA  6E44               	movwf	_command_length,c
  5069  0017FC  6A45               	clrf	_command_length+1,c
  5070                           
  5071                           ;my_uart.c: 71: State = COMMAND;
  5072  0017FE  6E1B               	movwf	??_parseUART& (0+255),c
  5073  001800  0E02               	movlw	2
  5074  001802  6E4B               	movwf	_State,c
  5075  001804  501B               	movf	??_parseUART& (0+255),w,c
  5076                           
  5077                           ;my_uart.c: 72: break;
  5078  001806  0012               	return	
  5079  001808                     i1l3450:
  5080                           
  5081                           ;my_uart.c: 75: {
  5082                           ;my_uart.c: 76: if(command_count+1 < command_length)
  5083  001808  0E01               	movlw	1
  5084  00180A  2442               	addwf	_command_count,w,c
  5085  00180C  6E1B               	movwf	??_parseUART& (0+255),c
  5086  00180E  0E00               	movlw	0
  5087  001810  2043               	addwfc	_command_count+1,w,c
  5088  001812  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5089  001814  501C               	movf	??_parseUART+1,w,c
  5090  001816  0A80               	xorlw	128
  5091  001818  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5092  00181A  5044               	movf	_command_length,w,c
  5093  00181C  5C1B               	subwf	??_parseUART,w,c
  5094  00181E  5045               	movf	_command_length+1,w,c
  5095  001820  0A80               	xorlw	128
  5096  001822  581D               	subwfb	(??_parseUART+2)& (0+255),w,c
  5097  001824  B0D8               	btfsc	status,0,c
  5098  001826  D003               	goto	i1l3454
  5099                           
  5100                           ;my_uart.c: 77: {command_count++;}
  5101  001828  4A42               	infsnz	_command_count,f,c
  5102  00182A  2A43               	incf	_command_count+1,f,c
  5103  00182C  0012               	return	
  5104  00182E                     i1l3454:
  5105                           
  5106                           ;my_uart.c: 78: else
  5107                           ;my_uart.c: 79: {State = CHECKSUM;}
  5108  00182E  6E1B               	movwf	??_parseUART& (0+255),c
  5109  001830  0E03               	movlw	3
  5110  001832  6E4B               	movwf	_State,c
  5111  001834  501B               	movf	??_parseUART& (0+255),w,c
  5112  001836  0012               	return	
  5113  001838                     i1l3456:
  5114                           
  5115                           ;my_uart.c: 83: {
  5116                           ;my_uart.c: 84: ToMainLow_sendmsg(sizeof(unsigned char)*(3 + command_length),50,uc_ptr->
      +                          buffer);
  5117  001838  6E1B               	movwf	??_parseUART& (0+255),c
  5118  00183A  0E32               	movlw	50
  5119  00183C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5120  00183E  501B               	movf	??_parseUART& (0+255),w,c
  5121  001840  C04E  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5122  001844  C04D  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5123  001848  5044               	movf	_command_length,w,c
  5124  00184A  0F03               	addlw	3
  5125  00184C  EC7F  F011         	call	_ToMainLow_sendmsg
  5126                           
  5127                           ;my_uart.c: 85: uc_ptr->buflen = 0;
  5128  001850  EE20 F016          	lfsr	2,22
  5129  001854  504D               	movf	_uc_ptr,w,c
  5130  001856  26D9               	addwf	fsr2l,f,c
  5131  001858  504E               	movf	_uc_ptr+1,w,c
  5132  00185A  22DA               	addwfc	fsr2h,f,c
  5133  00185C  0E00               	movlw	0
  5134  00185E  6EDF               	movwf	indf2,c
  5135                           
  5136                           ;my_uart.c: 86: State = MSGCOUNT;
  5137  001860  6E1B               	movwf	??_parseUART& (0+255),c
  5138  001862  0E00               	movlw	0
  5139  001864  6E4B               	movwf	_State,c
  5140  001866  501B               	movf	??_parseUART& (0+255),w,c
  5141                           
  5142                           ;my_uart.c: 87: break;
  5143  001868  0012               	return	
  5144  00186A                     i1l3464:
  5145  00186A  504B               	movf	_State,w,c
  5146                           
  5147                           ; Switch size 1, requested type "space"
  5148                           ; Number of cases is 4, Range of values is 0 to 3
  5149                           ; switch strategies available:
  5150                           ; Name         Instructions Cycles
  5151                           ; simple_byte           13     7 (average)
  5152                           ;	Chosen strategy is simple_byte
  5153  00186C  0A00               	xorlw	0	; case 0
  5154  00186E  B4D8               	btfsc	status,2,c
  5155  001870  D797               	goto	i1l3438
  5156  001872  0A01               	xorlw	1	; case 1
  5157  001874  B4D8               	btfsc	status,2,c
  5158  001876  D7A5               	goto	i1l3446
  5159  001878  0A03               	xorlw	3	; case 2
  5160  00187A  B4D8               	btfsc	status,2,c
  5161  00187C  D7C5               	goto	i1l3450
  5162  00187E  0A01               	xorlw	1	; case 3
  5163  001880  A4D8               	btfss	status,2,c
  5164  001882  0012               	return	
  5165  001884  D7D9               	goto	i1l3456
  5166  001886                     __end_of_parseUART:
  5167                           	opt stack 0
  5168                           pclatu	equ	0xFFB
  5169                           pclath	equ	0xFFA
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           postinc0	equ	0xFEE
  5178                           fsr0h	equ	0xFEA
  5179                           fsr0l	equ	0xFE9
  5180                           wreg	equ	0xFE8
  5181                           indf1	equ	0xFE7
  5182                           fsr1h	equ	0xFE2
  5183                           fsr1l	equ	0xFE1
  5184                           bsr	equ	0xFE0
  5185                           indf2	equ	0xFDF
  5186                           postinc2	equ	0xFDE
  5187                           postdec2	equ	0xFDD
  5188                           fsr2h	equ	0xFDA
  5189                           fsr2l	equ	0xFD9
  5190                           status	equ	0xFD8
  5191                           
  5192 ;; *************** function _ReadUSART *****************
  5193 ;; Defined at:
  5194 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  data            1    0[COMRAM] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      unsigned char 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5208 ;;      Params:         0       0       0       0       0
  5209 ;;      Locals:         1       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0
  5211 ;;      Totals:         1       0       0       0       0
  5212 ;;Total ram usage:        1 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    6
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_uart_recv_int_handler
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text29
  5223  00236A                     __ptext29:
  5224                           	opt stack 0
  5225  00236A                     _ReadUSART:
  5226                           	opt stack 18
  5227                           
  5228                           ;incstack = 0
  5229  00236A  0EF2               	movlw	242
  5230  00236C  164C               	andwf	_USART_Status,f,c
  5231  00236E  ACAB               	btfss	4011,6,c	;volatile
  5232  002370  D003               	goto	i1l560
  5233  002372  904C               	bcf	_USART_Status,0,c
  5234  002374  B0AB               	btfsc	4011,0,c	;volatile
  5235  002376  804C               	bsf	_USART_Status,0,c
  5236  002378                     i1l560:
  5237  002378  B4AB               	btfsc	4011,2,c	;volatile
  5238  00237A  844C               	bsf	_USART_Status,2,c
  5239  00237C  B2AB               	btfsc	4011,1,c	;volatile
  5240  00237E  864C               	bsf	_USART_Status,3,c
  5241  002380  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5242  002384  5001               	movf	ReadUSART@data,w,c
  5243  002386  0012               	return	
  5244  002388                     __end_of_ReadUSART:
  5245                           	opt stack 0
  5246                           pclatu	equ	0xFFB
  5247                           pclath	equ	0xFFA
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           fsr0h	equ	0xFEA
  5257                           fsr0l	equ	0xFE9
  5258                           wreg	equ	0xFE8
  5259                           indf1	equ	0xFE7
  5260                           fsr1h	equ	0xFE2
  5261                           fsr1l	equ	0xFE1
  5262                           bsr	equ	0xFE0
  5263                           indf2	equ	0xFDF
  5264                           postinc2	equ	0xFDE
  5265                           postdec2	equ	0xFDD
  5266                           fsr2h	equ	0xFDA
  5267                           fsr2l	equ	0xFD9
  5268                           status	equ	0xFD8
  5269                           
  5270 ;; *************** function _timer1_int_handler *****************
  5271 ;; Defined at:
  5272 ;;		line 36 in file "source/user_interrupts.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  result          2   27[COMRAM] unsigned int 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;		None               void
  5279 ;; Registers used:
  5280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5286 ;;      Params:         0       0       0       0       0
  5287 ;;      Locals:         2       0       0       0       0
  5288 ;;      Temps:          1       0       0       0       0
  5289 ;;      Totals:         3       0       0       0       0
  5290 ;;Total ram usage:        3 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    9
  5293 ;; This function calls:
  5294 ;;		_ReadTimer1
  5295 ;;		_ToMainLow_sendmsg
  5296 ;;		_WriteTimer1
  5297 ;; This function is called by:
  5298 ;;		_InterruptHandlerLow
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text30
  5303  002276                     __ptext30:
  5304                           	opt stack 0
  5305  002276                     _timer1_int_handler:
  5306                           	opt stack 16
  5307                           
  5308                           ;user_interrupts.c: 37: unsigned int result;
  5309                           ;user_interrupts.c: 44: result = ReadTimer1();
  5310                           
  5311                           ;incstack = 0
  5312  002276  ECFD  F011         	call	_ReadTimer1	;wreg free
  5313  00227A  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5314  00227E  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5315                           
  5316                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  5317  002282  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5318  002284  0E0B               	movlw	11
  5319  002286  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5320  002288  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5321  00228A  0E00               	movlw	0
  5322  00228C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5323  00228E  0E00               	movlw	0
  5324  002290  6E18               	movwf	ToMainLow_sendmsg@data,c
  5325  002292  0E00               	movlw	0
  5326  002294  EC7F  F011         	call	_ToMainLow_sendmsg
  5327                           
  5328                           ;user_interrupts.c: 48: WriteTimer1(0);
  5329  002298  0E00               	movlw	0
  5330  00229A  6E02               	movwf	WriteTimer1@timer1+1,c
  5331  00229C  0E00               	movlw	0
  5332  00229E  6E01               	movwf	WriteTimer1@timer1,c
  5333  0022A0  ECF4  F011         	call	_WriteTimer1	;wreg free
  5334  0022A4  0012               	return	
  5335  0022A6                     __end_of_timer1_int_handler:
  5336                           	opt stack 0
  5337                           pclatu	equ	0xFFB
  5338                           pclath	equ	0xFFA
  5339                           tblptru	equ	0xFF8
  5340                           tblptrh	equ	0xFF7
  5341                           tblptrl	equ	0xFF6
  5342                           tablat	equ	0xFF5
  5343                           prodh	equ	0xFF4
  5344                           prodl	equ	0xFF3
  5345                           intcon	equ	0xFF2
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           indf1	equ	0xFE7
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           bsr	equ	0xFE0
  5354                           indf2	equ	0xFDF
  5355                           postinc2	equ	0xFDE
  5356                           postdec2	equ	0xFDD
  5357                           fsr2h	equ	0xFDA
  5358                           fsr2l	equ	0xFD9
  5359                           status	equ	0xFD8
  5360                           
  5361 ;; *************** function _WriteTimer1 *****************
  5362 ;; Defined at:
  5363 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  timer1          2    0[COMRAM] unsigned int 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;  timer           2    2[COMRAM] struct Timers
  5368 ;; Return value:  Size  Location     Type
  5369 ;;		None               void
  5370 ;; Registers used:
  5371 ;;		None
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5377 ;;      Params:         2       0       0       0       0
  5378 ;;      Locals:         2       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0
  5380 ;;      Totals:         4       0       0       0       0
  5381 ;;Total ram usage:        4 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    6
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_timer1_int_handler
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text31
  5392  0023E8                     __ptext31:
  5393                           	opt stack 0
  5394  0023E8                     _WriteTimer1:
  5395                           	opt stack 18
  5396                           
  5397                           ;incstack = 0
  5398  0023E8  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5399  0023EC  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5400  0023F0  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5401  0023F4  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5402  0023F8  0012               	return	
  5403  0023FA                     __end_of_WriteTimer1:
  5404                           	opt stack 0
  5405                           pclatu	equ	0xFFB
  5406                           pclath	equ	0xFFA
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           postinc0	equ	0xFEE
  5415                           fsr0h	equ	0xFEA
  5416                           fsr0l	equ	0xFE9
  5417                           wreg	equ	0xFE8
  5418                           indf1	equ	0xFE7
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           bsr	equ	0xFE0
  5422                           indf2	equ	0xFDF
  5423                           postinc2	equ	0xFDE
  5424                           postdec2	equ	0xFDD
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _ToMainLow_sendmsg *****************
  5430 ;; Defined at:
  5431 ;;		line 103 in file "source/messages.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  length          1    wreg     unsigned char 
  5434 ;;  msgtype         1   22[COMRAM] unsigned char 
  5435 ;;  data            2   23[COMRAM] PTR void 
  5436 ;;		 -> NULL(0), main@uc(23), 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  length          1   25[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      char 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5448 ;;      Params:         3       0       0       0       0
  5449 ;;      Locals:         1       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0
  5451 ;;      Totals:         4       0       0       0       0
  5452 ;;Total ram usage:        4 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    8
  5455 ;; This function calls:
  5456 ;;		i1_send_msg
  5457 ;; This function is called by:
  5458 ;;		_uart_recv_int_handler
  5459 ;;		_parseUART
  5460 ;;		_timer1_int_handler
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text32
  5465  0022FE                     __ptext32:
  5466                           	opt stack 0
  5467  0022FE                     _ToMainLow_sendmsg:
  5468                           	opt stack 15
  5469                           
  5470                           ;incstack = 0
  5471                           ;ToMainLow_sendmsg@length stored from wreg
  5472  0022FE  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5473                           
  5474                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5475                           ;	Return value of _ToMainLow_sendmsg is never used
  5476  002302  0102               	movlb	2	; () banked
  5477  002304  0E02               	movlw	high _ToMainLow_MQ
  5478  002306  6E0C               	movwf	i1send_msg@qptr+1,c
  5479  002308  0102               	movlb	2	; () banked
  5480  00230A  0E66               	movlw	low _ToMainLow_MQ
  5481  00230C  6E0B               	movwf	i1send_msg@qptr,c
  5482  00230E  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5483  002312  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5484  002316  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5485  00231A  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5486  00231E  EC6E  F00D         	call	i1_send_msg	;wreg free
  5487  002322  0012               	return	
  5488  002324                     __end_of_ToMainLow_sendmsg:
  5489                           	opt stack 0
  5490                           pclatu	equ	0xFFB
  5491                           pclath	equ	0xFFA
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           prodh	equ	0xFF4
  5497                           prodl	equ	0xFF3
  5498                           intcon	equ	0xFF2
  5499                           postinc0	equ	0xFEE
  5500                           fsr0h	equ	0xFEA
  5501                           fsr0l	equ	0xFE9
  5502                           wreg	equ	0xFE8
  5503                           indf1	equ	0xFE7
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           bsr	equ	0xFE0
  5507                           indf2	equ	0xFDF
  5508                           postinc2	equ	0xFDE
  5509                           postdec2	equ	0xFDD
  5510                           fsr2h	equ	0xFDA
  5511                           fsr2l	equ	0xFD9
  5512                           status	equ	0xFD8
  5513                           
  5514 ;; *************** function i1_send_msg *****************
  5515 ;; Defined at:
  5516 ;;		line 24 in file "source/messages.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5519 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5520 ;;  length          1   12[COMRAM] unsigned char 
  5521 ;;  msgtype         1   13[COMRAM] unsigned char 
  5522 ;;  data            2   14[COMRAM] PTR void 
  5523 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  5524 ;;		 -> main@ic(77), main@uc(23), 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5527 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5528 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5529 ;;  send_msg        2   17[COMRAM] unsigned int 
  5530 ;;  send_msg        1   19[COMRAM] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      char 
  5533 ;; Registers used:
  5534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5540 ;;      Params:         6       0       0       0       0
  5541 ;;      Locals:         5       0       0       0       0
  5542 ;;      Temps:          1       0       0       0       0
  5543 ;;      Totals:        12       0       0       0       0
  5544 ;;Total ram usage:       12 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    7
  5547 ;; This function calls:
  5548 ;;		i1_memcpy
  5549 ;; This function is called by:
  5550 ;;		_ToMainLow_sendmsg
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text33
  5555  001ADC                     __ptext33:
  5556                           	opt stack 0
  5557  001ADC                     i1_send_msg:
  5558                           	opt stack 15
  5559                           
  5560                           ;messages.c: 25: unsigned char slot;
  5561                           ;messages.c: 27: msg *qmsg;
  5562                           ;messages.c: 28: size_t tlength = length;
  5563                           
  5564                           ;incstack = 0
  5565  001ADC  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5566  001AE0  6A13               	clrf	i1send_msg@tlength+1,c
  5567                           
  5568                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5569  001AE2  EE20 F064          	lfsr	2,100
  5570  001AE6  500B               	movf	i1send_msg@qptr,w,c
  5571  001AE8  26D9               	addwf	fsr2l,f,c
  5572  001AEA  500C               	movf	i1send_msg@qptr+1,w,c
  5573  001AEC  22DA               	addwfc	fsr2h,f,c
  5574  001AEE  50DF               	movf	indf2,w,c
  5575  001AF0  6E14               	movwf	i1send_msg@slot,c
  5576                           
  5577                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5578  001AF2  5014               	movf	i1send_msg@slot,w,c
  5579  001AF4  0D19               	mullw	25
  5580  001AF6  50F3               	movf	prodl,w,c
  5581  001AF8  240B               	addwf	i1send_msg@qptr,w,c
  5582  001AFA  6E15               	movwf	i1send_msg@qmsg,c
  5583  001AFC  50F4               	movf	prodh,w,c
  5584  001AFE  200C               	addwfc	i1send_msg@qptr+1,w,c
  5585  001B00  6E16               	movwf	i1send_msg@qmsg+1,c
  5586                           
  5587                           ;messages.c: 41: if (qmsg->full != 0) {
  5588  001B02  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5589  001B06  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5590  001B0A  50DF               	movf	indf2,w,c
  5591  001B0C  B4D8               	btfsc	status,2,c
  5592  001B0E  D002               	goto	i1l3414
  5593                           
  5594                           ;messages.c: 42: return (-1);
  5595  001B10  0EFF               	movlw	255
  5596  001B12  0012               	return	
  5597  001B14                     i1l3414:
  5598                           
  5599                           ;messages.c: 43: }
  5600                           ;messages.c: 46: qmsg->length = length;
  5601  001B14  EE20 F001          	lfsr	2,1
  5602  001B18  5015               	movf	i1send_msg@qmsg,w,c
  5603  001B1A  26D9               	addwf	fsr2l,f,c
  5604  001B1C  5016               	movf	i1send_msg@qmsg+1,w,c
  5605  001B1E  22DA               	addwfc	fsr2h,f,c
  5606  001B20  C00D  FFDF         	movff	i1send_msg@length,indf2
  5607                           
  5608                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5609  001B24  EE20 F002          	lfsr	2,2
  5610  001B28  5015               	movf	i1send_msg@qmsg,w,c
  5611  001B2A  26D9               	addwf	fsr2l,f,c
  5612  001B2C  5016               	movf	i1send_msg@qmsg+1,w,c
  5613  001B2E  22DA               	addwfc	fsr2h,f,c
  5614  001B30  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5615                           
  5616                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5617  001B34  0E03               	movlw	3
  5618  001B36  2415               	addwf	i1send_msg@qmsg,w,c
  5619  001B38  6E01               	movwf	i1memcpy@d1,c
  5620  001B3A  0E00               	movlw	0
  5621  001B3C  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5622  001B3E  6E02               	movwf	i1memcpy@d1+1,c
  5623  001B40  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5624  001B44  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5625  001B48  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5626  001B4C  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5627  001B50  EC90  F010         	call	i1_memcpy	;wreg free
  5628                           
  5629                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5630  001B54  EE20 F064          	lfsr	2,100
  5631  001B58  500B               	movf	i1send_msg@qptr,w,c
  5632  001B5A  26D9               	addwf	fsr2l,f,c
  5633  001B5C  500C               	movf	i1send_msg@qptr+1,w,c
  5634  001B5E  22DA               	addwfc	fsr2h,f,c
  5635  001B60  EE10 F064          	lfsr	1,100
  5636  001B64  500B               	movf	i1send_msg@qptr,w,c
  5637  001B66  26E1               	addwf	fsr1l,f,c
  5638  001B68  500C               	movf	i1send_msg@qptr+1,w,c
  5639  001B6A  22E2               	addwfc	fsr1h,f,c
  5640  001B6C  50E7               	movf	indf1,w,c
  5641  001B6E  6E11               	movwf	??i1_send_msg& (0+255),c
  5642  001B70  2811               	incf	??i1_send_msg,w,c
  5643  001B72  0B03               	andlw	3
  5644  001B74  6EDF               	movwf	indf2,c
  5645                           
  5646                           ;messages.c: 59: qmsg->full = 1;
  5647  001B76  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5648  001B7A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5649  001B7E  0E01               	movlw	1
  5650  001B80  6EDF               	movwf	indf2,c
  5651                           
  5652                           ;messages.c: 60: return (1);
  5653  001B82  0E01               	movlw	1
  5654  001B84  0012               	return	
  5655  001B86                     __end_ofi1_send_msg:
  5656                           	opt stack 0
  5657                           pclatu	equ	0xFFB
  5658                           pclath	equ	0xFFA
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           prodh	equ	0xFF4
  5664                           prodl	equ	0xFF3
  5665                           intcon	equ	0xFF2
  5666                           postinc0	equ	0xFEE
  5667                           fsr0h	equ	0xFEA
  5668                           fsr0l	equ	0xFE9
  5669                           wreg	equ	0xFE8
  5670                           indf1	equ	0xFE7
  5671                           fsr1h	equ	0xFE2
  5672                           fsr1l	equ	0xFE1
  5673                           bsr	equ	0xFE0
  5674                           indf2	equ	0xFDF
  5675                           postinc2	equ	0xFDE
  5676                           postdec2	equ	0xFDD
  5677                           fsr2h	equ	0xFDA
  5678                           fsr2l	equ	0xFD9
  5679                           status	equ	0xFD8
  5680                           
  5681 ;; *************** function i1_memcpy *****************
  5682 ;; Defined at:
  5683 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  d1              2    0[COMRAM] PTR void 
  5686 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5687 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  5688 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  5689 ;;  s1              2    2[COMRAM] PTR const void 
  5690 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5691 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5692 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  5693 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5694 ;;		 -> main@ic(77), main@uc(23), 
  5695 ;;  n               2    4[COMRAM] unsigned int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5698 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  5699 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  5700 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  5701 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  5702 ;;		 -> main@ic(77), main@uc(23), 
  5703 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5704 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  5705 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  5706 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  2    0[COMRAM] PTR void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5716 ;;      Params:         6       0       0       0       0
  5717 ;;      Locals:         4       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0
  5719 ;;      Totals:        10       0       0       0       0
  5720 ;;Total ram usage:       10 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    6
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		i1_send_msg
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text34
  5731  002120                     __ptext34:
  5732                           	opt stack 0
  5733  002120                     i1_memcpy:
  5734                           	opt stack 15
  5735                           
  5736                           ;incstack = 0
  5737  002120  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5738  002124  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5739  002128  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5740  00212C  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5741  002130  D00E               	goto	i1l3390
  5742  002132                     i1l3384:
  5743  002132  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5744  002136  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5745  00213A  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5746  00213E  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5747  002142  CFDF FFE7          	movff	indf2,indf1
  5748  002146  4A09               	infsnz	i1memcpy@s,f,c
  5749  002148  2A0A               	incf	i1memcpy@s+1,f,c
  5750  00214A  4A07               	infsnz	i1memcpy@d,f,c
  5751  00214C  2A08               	incf	i1memcpy@d+1,f,c
  5752  00214E                     i1l3390:
  5753  00214E  0605               	decf	i1memcpy@n,f,c
  5754  002150  A0D8               	btfss	status,0,c
  5755  002152  0606               	decf	i1memcpy@n+1,f,c
  5756  002154  2805               	incf	i1memcpy@n& (0+255),w,c
  5757  002156  B4D8               	btfsc	status,2,c
  5758  002158  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5759  00215A  B4D8               	btfsc	status,2,c
  5760                           
  5761                           ;	Return value of i1_memcpy is never used
  5762  00215C  0012               	return	
  5763  00215E  D7E9               	goto	i1l3384
  5764  002160                     __end_ofi1_memcpy:
  5765                           	opt stack 0
  5766                           pclatu	equ	0xFFB
  5767                           pclath	equ	0xFFA
  5768                           tblptru	equ	0xFF8
  5769                           tblptrh	equ	0xFF7
  5770                           tblptrl	equ	0xFF6
  5771                           tablat	equ	0xFF5
  5772                           prodh	equ	0xFF4
  5773                           prodl	equ	0xFF3
  5774                           intcon	equ	0xFF2
  5775                           postinc0	equ	0xFEE
  5776                           fsr0h	equ	0xFEA
  5777                           fsr0l	equ	0xFE9
  5778                           wreg	equ	0xFE8
  5779                           indf1	equ	0xFE7
  5780                           fsr1h	equ	0xFE2
  5781                           fsr1l	equ	0xFE1
  5782                           bsr	equ	0xFE0
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790 ;; *************** function _ReadTimer1 *****************
  5791 ;; Defined at:
  5792 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  timer           2    2[COMRAM] struct Timers
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  2    0[COMRAM] unsigned int 
  5799 ;; Registers used:
  5800 ;;		None
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5806 ;;      Params:         2       0       0       0       0
  5807 ;;      Locals:         2       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0
  5809 ;;      Totals:         4       0       0       0       0
  5810 ;;Total ram usage:        4 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    6
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_timer1_int_handler
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text35
  5821  0023FA                     __ptext35:
  5822                           	opt stack 0
  5823  0023FA                     _ReadTimer1:
  5824                           	opt stack 18
  5825                           
  5826                           ;incstack = 0
  5827  0023FA  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5828  0023FE  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5829  002402  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5830  002406  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5831  00240A  0012               	return	
  5832  00240C                     __end_of_ReadTimer1:
  5833                           	opt stack 0
  5834                           pclatu	equ	0xFFB
  5835                           pclath	equ	0xFFA
  5836                           tblptru	equ	0xFF8
  5837                           tblptrh	equ	0xFF7
  5838                           tblptrl	equ	0xFF6
  5839                           tablat	equ	0xFF5
  5840                           prodh	equ	0xFF4
  5841                           prodl	equ	0xFF3
  5842                           intcon	equ	0xFF2
  5843                           postinc0	equ	0xFEE
  5844                           fsr0h	equ	0xFEA
  5845                           fsr0l	equ	0xFE9
  5846                           wreg	equ	0xFE8
  5847                           indf1	equ	0xFE7
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           bsr	equ	0xFE0
  5851                           indf2	equ	0xFDF
  5852                           postinc2	equ	0xFDE
  5853                           postdec2	equ	0xFDD
  5854                           fsr2h	equ	0xFDA
  5855                           fsr2l	equ	0xFD9
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function _InterruptHandlerHigh *****************
  5859 ;; Defined at:
  5860 ;;		line 83 in file "source/interrupts.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5874 ;;      Params:         0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0
  5876 ;;      Temps:          0      14       0       0       0
  5877 ;;      Totals:         0      14       0       0       0
  5878 ;;Total ram usage:       14 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    5
  5881 ;; This function calls:
  5882 ;;		_SleepIfOkay
  5883 ;;		_i2c_int_handler
  5884 ;;		_timer0_int_handler
  5885 ;; This function is called by:
  5886 ;;		Interrupt level 2
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	intcode
  5891  000008                     __pintcode:
  5892                           	opt stack 0
  5893  000008                     _InterruptHandlerHigh:
  5894                           	opt stack 15
  5895                           
  5896                           ;incstack = 0
  5897  000008  CFFA F097          	movff	pclath,??_InterruptHandlerHigh
  5898  00000C  CFFB F098          	movff	pclatu,??_InterruptHandlerHigh+1
  5899  000010  EF0C  F00E         	goto	int_func
  5900                           pclatu	equ	0xFFB
  5901                           pclath	equ	0xFFA
  5902                           tblptru	equ	0xFF8
  5903                           tblptrh	equ	0xFF7
  5904                           tblptrl	equ	0xFF6
  5905                           tablat	equ	0xFF5
  5906                           prodh	equ	0xFF4
  5907                           prodl	equ	0xFF3
  5908                           intcon	equ	0xFF2
  5909                           postinc0	equ	0xFEE
  5910                           fsr0h	equ	0xFEA
  5911                           fsr0l	equ	0xFE9
  5912                           wreg	equ	0xFE8
  5913                           indf1	equ	0xFE7
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           bsr	equ	0xFE0
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924                           	psect	intcode_body
  5925  001C18                     __pintcode_body:
  5926                           	opt stack 15
  5927  001C18                     int_func:
  5928                           	opt stack 15
  5929  001C18  CFE9 F099          	movff	fsr0l,??_InterruptHandlerHigh+2
  5930  001C1C  CFEA F09A          	movff	fsr0h,??_InterruptHandlerHigh+3
  5931  001C20  CFE1 F09B          	movff	fsr1l,??_InterruptHandlerHigh+4
  5932  001C24  CFE2 F09C          	movff	fsr1h,??_InterruptHandlerHigh+5
  5933  001C28  CFD9 F09D          	movff	fsr2l,??_InterruptHandlerHigh+6
  5934  001C2C  CFDA F09E          	movff	fsr2h,??_InterruptHandlerHigh+7
  5935  001C30  CFF3 F09F          	movff	prodl,??_InterruptHandlerHigh+8
  5936  001C34  CFF4 F0A0          	movff	prodh,??_InterruptHandlerHigh+9
  5937  001C38  CFF6 F0A1          	movff	tblptrl,??_InterruptHandlerHigh+10
  5938  001C3C  CFF7 F0A2          	movff	tblptrh,??_InterruptHandlerHigh+11
  5939  001C40  CFF8 F0A3          	movff	tblptru,??_InterruptHandlerHigh+12
  5940  001C44  CFF5 F0A4          	movff	tablat,??_InterruptHandlerHigh+13
  5941                           
  5942                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5943  001C48  A69E               	btfss	3998,3,c	;volatile
  5944  001C4A  D003               	goto	i2l3518
  5945                           
  5946                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5947  001C4C  969E               	bcf	3998,3,c	;volatile
  5948                           
  5949                           ;interrupts.c: 92: i2c_int_handler();
  5950  001C4E  ECA4  F011         	call	_i2c_int_handler	;wreg free
  5951  001C52                     i2l3518:
  5952                           
  5953                           ;interrupts.c: 93: }
  5954                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5955  001C52  A4F2               	btfss	intcon,2,c	;volatile
  5956  001C54  D003               	goto	i2l3524
  5957                           
  5958                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5959  001C56  94F2               	bcf	intcon,2,c	;volatile
  5960                           
  5961                           ;interrupts.c: 99: timer0_int_handler();
  5962  001C58  ECC9  F00E         	call	_timer0_int_handler	;wreg free
  5963  001C5C                     i2l3524:
  5964                           
  5965                           ;interrupts.c: 100: }
  5966                           ;interrupts.c: 109: SleepIfOkay();
  5967  001C5C  ECC1  F00F         	call	_SleepIfOkay	;wreg free
  5968  001C60  C0A4  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5969  001C64  C0A3  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5970  001C68  C0A2  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5971  001C6C  C0A1  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5972  001C70  C0A0  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5973  001C74  C09F  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5974  001C78  C09E  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5975  001C7C  C09D  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5976  001C80  C09C  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5977  001C84  C09B  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5978  001C88  C09A  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5979  001C8C  C099  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5980  001C90  C098  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5981  001C94  C097  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5982  001C98  0011               	retfie		f
  5983  001C9A                     __end_of_InterruptHandlerHigh:
  5984                           	opt stack 0
  5985                           pclatu	equ	0xFFB
  5986                           pclath	equ	0xFFA
  5987                           tblptru	equ	0xFF8
  5988                           tblptrh	equ	0xFF7
  5989                           tblptrl	equ	0xFF6
  5990                           tablat	equ	0xFF5
  5991                           prodh	equ	0xFF4
  5992                           prodl	equ	0xFF3
  5993                           intcon	equ	0xFF2
  5994                           postinc0	equ	0xFEE
  5995                           fsr0h	equ	0xFEA
  5996                           fsr0l	equ	0xFE9
  5997                           wreg	equ	0xFE8
  5998                           indf1	equ	0xFE7
  5999                           fsr1h	equ	0xFE2
  6000                           fsr1l	equ	0xFE1
  6001                           bsr	equ	0xFE0
  6002                           indf2	equ	0xFDF
  6003                           postinc2	equ	0xFDE
  6004                           postdec2	equ	0xFDD
  6005                           fsr2h	equ	0xFDA
  6006                           fsr2l	equ	0xFD9
  6007                           status	equ	0xFD8
  6008                           
  6009 ;; *************** function _timer0_int_handler *****************
  6010 ;; Defined at:
  6011 ;;		line 16 in file "source/user_interrupts.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  val             2   21[BANK0 ] unsigned int 
  6016 ;;  msgtype         2   19[BANK0 ] int 
  6017 ;;  length          2   17[BANK0 ] int 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;		None               void
  6020 ;; Registers used:
  6021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6027 ;;      Params:         0       0       0       0       0
  6028 ;;      Locals:         0       6       0       0       0
  6029 ;;      Temps:          0       1       0       0       0
  6030 ;;      Totals:         0       7       0       0       0
  6031 ;;Total ram usage:        7 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    3
  6034 ;; This function calls:
  6035 ;;		_FromMainHigh_recvmsg
  6036 ;;		_WriteTimer0
  6037 ;;		i2_ToMainHigh_sendmsg
  6038 ;; This function is called by:
  6039 ;;		_InterruptHandlerHigh
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text37
  6044  001D92                     __ptext37:
  6045                           	opt stack 0
  6046  001D92                     _timer0_int_handler:
  6047                           	opt stack 16
  6048                           
  6049                           ;user_interrupts.c: 17: unsigned int val;
  6050                           ;user_interrupts.c: 18: int length, msgtype;
  6051                           ;user_interrupts.c: 25: WriteTimer0(0);
  6052                           
  6053                           ;incstack = 0
  6054  001D92  0E00               	movlw	0
  6055  001D94  6E33               	movwf	WriteTimer0@timer0+1,c
  6056  001D96  0E00               	movlw	0
  6057  001D98  6E32               	movwf	WriteTimer0@timer0,c
  6058  001D9A  EC06  F012         	call	_WriteTimer0	;wreg free
  6059                           
  6060                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6061  001D9E  0100               	movlb	0	; () banked
  6062  001DA0  0E00               	movlw	high timer0_int_handler@msgtype
  6063  001DA2  0100               	movlb	0	; () banked
  6064  001DA4  0100               	movlb	0	; () banked
  6065  001DA6  6F8D               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6066  001DA8  0100               	movlb	0	; () banked
  6067  001DAA  0E93               	movlw	low timer0_int_handler@msgtype
  6068  001DAC  0100               	movlb	0	; () banked
  6069  001DAE  0100               	movlb	0	; () banked
  6070  001DB0  6F8C               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6071  001DB2  0100               	movlb	0	; () banked
  6072  001DB4  0E00               	movlw	high timer0_int_handler@val
  6073  001DB6  0100               	movlb	0	; () banked
  6074  001DB8  0100               	movlb	0	; () banked
  6075  001DBA  6F8F               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6076  001DBC  0100               	movlb	0	; () banked
  6077  001DBE  0E95               	movlw	low timer0_int_handler@val
  6078  001DC0  0100               	movlb	0	; () banked
  6079  001DC2  0100               	movlb	0	; () banked
  6080  001DC4  6F8E               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6081  001DC6  0E02               	movlw	2
  6082  001DC8  EC6F  F010         	call	_FromMainHigh_recvmsg
  6083  001DCC  0100               	movlb	0	; () banked
  6084  001DCE  0100               	movlb	0	; () banked
  6085  001DD0  6F91               	movwf	timer0_int_handler@length& (0+255),b
  6086  001DD2  0100               	movlb	0	; () banked
  6087  001DD4  6B92               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6088  001DD6  0100               	movlb	0	; () banked
  6089  001DD8  BF91               	btfsc	timer0_int_handler@length& (0+255),7,b
  6090  001DDA  0792               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  6094  001DDC  0100               	movlb	0	; () banked
  6095  001DDE  0100               	movlb	0	; () banked
  6096  001DE0  5191               	movf	timer0_int_handler@length& (0+255),w,b
  6097  001DE2  0A02               	xorlw	2
  6098  001DE4  1192               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6099  001DE6  A4D8               	btfss	status,2,c
  6100  001DE8  0012               	return	
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6104  001DEA  0100               	movlb	0	; () banked
  6105  001DEC  6F90               	movwf	??_timer0_int_handler& (0+255),b
  6106  001DEE  0E0A               	movlw	10
  6107  001DF0  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  6108  001DF2  0100               	movlb	0	; () banked
  6109  001DF4  5190               	movf	??_timer0_int_handler& (0+255),w,b
  6110  001DF6  0100               	movlb	0	; () banked
  6111  001DF8  0E00               	movlw	high timer0_int_handler@val
  6112  001DFA  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  6113  001DFC  0100               	movlb	0	; () banked
  6114  001DFE  0E95               	movlw	low timer0_int_handler@val
  6115  001E00  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  6116  001E02  0E02               	movlw	2
  6117  001E04  EC22  F011         	call	i2_ToMainHigh_sendmsg
  6118  001E08  0012               	return	
  6119  001E0A                     __end_of_timer0_int_handler:
  6120                           	opt stack 0
  6121                           pclatu	equ	0xFFB
  6122                           pclath	equ	0xFFA
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           intcon	equ	0xFF2
  6130                           postinc0	equ	0xFEE
  6131                           fsr0h	equ	0xFEA
  6132                           fsr0l	equ	0xFE9
  6133                           wreg	equ	0xFE8
  6134                           indf1	equ	0xFE7
  6135                           fsr1h	equ	0xFE2
  6136                           fsr1l	equ	0xFE1
  6137                           bsr	equ	0xFE0
  6138                           indf2	equ	0xFDF
  6139                           postinc2	equ	0xFDE
  6140                           postdec2	equ	0xFDD
  6141                           fsr2h	equ	0xFDA
  6142                           fsr2l	equ	0xFD9
  6143                           status	equ	0xFD8
  6144                           
  6145 ;; *************** function _WriteTimer0 *****************
  6146 ;; Defined at:
  6147 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  timer0          2   49[COMRAM] unsigned int 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  timer           2   51[COMRAM] struct Timers
  6152 ;; Return value:  Size  Location     Type
  6153 ;;		None               void
  6154 ;; Registers used:
  6155 ;;		None
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6161 ;;      Params:         2       0       0       0       0
  6162 ;;      Locals:         2       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0
  6164 ;;      Totals:         4       0       0       0       0
  6165 ;;Total ram usage:        4 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_timer0_int_handler
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text38
  6175  00240C                     __ptext38:
  6176                           	opt stack 0
  6177  00240C                     _WriteTimer0:
  6178                           	opt stack 18
  6179                           
  6180                           ;incstack = 0
  6181  00240C  C032  F034         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6182  002410  C033  F035         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6183  002414  C035  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6184  002418  C034  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6185  00241C  0012               	return	
  6186  00241E                     __end_of_WriteTimer0:
  6187                           	opt stack 0
  6188                           pclatu	equ	0xFFB
  6189                           pclath	equ	0xFFA
  6190                           tblptru	equ	0xFF8
  6191                           tblptrh	equ	0xFF7
  6192                           tblptrl	equ	0xFF6
  6193                           tablat	equ	0xFF5
  6194                           prodh	equ	0xFF4
  6195                           prodl	equ	0xFF3
  6196                           intcon	equ	0xFF2
  6197                           postinc0	equ	0xFEE
  6198                           fsr0h	equ	0xFEA
  6199                           fsr0l	equ	0xFE9
  6200                           wreg	equ	0xFE8
  6201                           indf1	equ	0xFE7
  6202                           fsr1h	equ	0xFE2
  6203                           fsr1l	equ	0xFE1
  6204                           bsr	equ	0xFE0
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           fsr2h	equ	0xFDA
  6209                           fsr2l	equ	0xFD9
  6210                           status	equ	0xFD8
  6211                           
  6212 ;; *************** function _FromMainHigh_recvmsg *****************
  6213 ;; Defined at:
  6214 ;;		line 183 in file "source/messages.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  maxlength       1    wreg     unsigned char 
  6217 ;;  msgtype         2   12[BANK0 ] PTR unsigned char 
  6218 ;;		 -> timer0_int_handler@msgtype(2), 
  6219 ;;  data            2   14[BANK0 ] PTR void 
  6220 ;;		 -> timer0_int_handler@val(2), 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  maxlength       1   61[COMRAM] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      char 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6232 ;;      Params:         0       4       0       0       0
  6233 ;;      Locals:         1       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0
  6235 ;;      Totals:         1       4       0       0       0
  6236 ;;Total ram usage:        5 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    2
  6239 ;; This function calls:
  6240 ;;		i2_recv_msg
  6241 ;; This function is called by:
  6242 ;;		_timer0_int_handler
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text39
  6247  0020DE                     __ptext39:
  6248                           	opt stack 0
  6249  0020DE                     _FromMainHigh_recvmsg:
  6250                           	opt stack 16
  6251                           
  6252                           ;incstack = 0
  6253                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6254  0020DE  CFE8 F03E          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6255                           
  6256                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6257  0020E2  0103               	movlb	3	; () banked
  6258  0020E4  0E03               	movlw	high _FromMainHigh_MQ
  6259  0020E6  0100               	movlb	0	; () banked
  6260  0020E8  0100               	movlb	0	; () banked
  6261  0020EA  6F81               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6262  0020EC  0103               	movlb	3	; () banked
  6263  0020EE  0E00               	movlw	low _FromMainHigh_MQ
  6264  0020F0  0100               	movlb	0	; () banked
  6265  0020F2  0100               	movlb	0	; () banked
  6266  0020F4  6F80               	movwf	i2recv_msg@qptr& (0+255),b
  6267  0020F6  C03E  F082         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6268  0020FA  0100               	movlb	0	; () banked
  6269  0020FC  0100               	movlb	0	; () banked
  6270  0020FE  C08D  F084         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6271  002102  0100               	movlb	0	; () banked
  6272  002104  0100               	movlb	0	; () banked
  6273  002106  C08C  F083         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6274  00210A  0100               	movlb	0	; () banked
  6275  00210C  0100               	movlb	0	; () banked
  6276  00210E  C08F  F086         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6277  002112  0100               	movlb	0	; () banked
  6278  002114  0100               	movlb	0	; () banked
  6279  002116  C08E  F085         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6280  00211A  ECB8  F009         	call	i2_recv_msg	;wreg free
  6281  00211E  0012               	return	
  6282  002120                     __end_of_FromMainHigh_recvmsg:
  6283                           	opt stack 0
  6284                           pclatu	equ	0xFFB
  6285                           pclath	equ	0xFFA
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           postinc0	equ	0xFEE
  6294                           fsr0h	equ	0xFEA
  6295                           fsr0l	equ	0xFE9
  6296                           wreg	equ	0xFE8
  6297                           indf1	equ	0xFE7
  6298                           fsr1h	equ	0xFE2
  6299                           fsr1l	equ	0xFE1
  6300                           bsr	equ	0xFE0
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           fsr2h	equ	0xFDA
  6305                           fsr2l	equ	0xFD9
  6306                           status	equ	0xFD8
  6307                           
  6308 ;; *************** function i2_recv_msg *****************
  6309 ;; Defined at:
  6310 ;;		line 63 in file "source/messages.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  6313 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6314 ;;  maxlength       1    2[BANK0 ] unsigned char 
  6315 ;;  msgtype         2    3[BANK0 ] PTR unsigned char 
  6316 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6317 ;;  data            2    5[BANK0 ] PTR void 
  6318 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(23), 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
  6321 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  6322 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  6323 ;;  recv_msg        2    8[BANK0 ] unsigned int 
  6324 ;;  recv_msg        1    7[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      char 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6334 ;;      Params:         0       7       0       0       0
  6335 ;;      Locals:         0       5       0       0       0
  6336 ;;      Temps:          2       0       0       0       0
  6337 ;;      Totals:         2      12       0       0       0
  6338 ;;Total ram usage:       14 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    1
  6341 ;; This function calls:
  6342 ;;		i2_memcpy
  6343 ;; This function is called by:
  6344 ;;		_FromMainHigh_recvmsg
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text40
  6349  001370                     __ptext40:
  6350                           	opt stack 0
  6351  001370                     i2_recv_msg:
  6352                           	opt stack 16
  6353                           
  6354                           ;messages.c: 64: unsigned char slot;
  6355                           ;messages.c: 68: msg *qmsg;
  6356                           ;messages.c: 69: size_t tlength;
  6357                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6358                           
  6359                           ;incstack = 0
  6360  001370  0100               	movlb	0	; () banked
  6361  001372  EE20 F065          	lfsr	2,101
  6362  001376  0100               	movlb	0	; () banked
  6363  001378  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6364  00137A  26D9               	addwf	fsr2l,f,c
  6365  00137C  0100               	movlb	0	; () banked
  6366  00137E  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6367  001380  22DA               	addwfc	fsr2h,f,c
  6368  001382  50DF               	movf	indf2,w,c
  6369  001384  0100               	movlb	0	; () banked
  6370  001386  0100               	movlb	0	; () banked
  6371  001388  6F87               	movwf	i2recv_msg@slot& (0+255),b
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6375  00138A  0100               	movlb	0	; () banked
  6376  00138C  0100               	movlb	0	; () banked
  6377  00138E  5187               	movf	i2recv_msg@slot& (0+255),w,b
  6378  001390  0D19               	mullw	25
  6379  001392  50F3               	movf	prodl,w,c
  6380  001394  0100               	movlb	0	; () banked
  6381  001396  0100               	movlb	0	; () banked
  6382  001398  2580               	addwf	i2recv_msg@qptr& (0+255),w,b
  6383  00139A  0100               	movlb	0	; () banked
  6384  00139C  0100               	movlb	0	; () banked
  6385  00139E  6F8A               	movwf	i2recv_msg@qmsg& (0+255),b
  6386  0013A0  50F4               	movf	prodh,w,c
  6387  0013A2  0100               	movlb	0	; () banked
  6388  0013A4  0100               	movlb	0	; () banked
  6389  0013A6  2181               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6390  0013A8  0100               	movlb	0	; () banked
  6391  0013AA  6F8B               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;messages.c: 74: if (qmsg->full == 1) {
  6395  0013AC  0E01               	movlw	1
  6396  0013AE  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6397  0013B2  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6398  0013B6  62DF               	cpfseq	indf2,c
  6399  0013B8  D06C               	goto	i2l3844
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6403  0013BA  0100               	movlb	0	; () banked
  6404  0013BC  EE20 F001          	lfsr	2,1
  6405  0013C0  0100               	movlb	0	; () banked
  6406  0013C2  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6407  0013C4  26D9               	addwf	fsr2l,f,c
  6408  0013C6  0100               	movlb	0	; () banked
  6409  0013C8  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6410  0013CA  22DA               	addwfc	fsr2h,f,c
  6411  0013CC  50DF               	movf	indf2,w,c
  6412  0013CE  0100               	movlb	0	; () banked
  6413  0013D0  0100               	movlb	0	; () banked
  6414  0013D2  5D82               	subwf	i2recv_msg@maxlength& (0+255),w,b
  6415  0013D4  B0D8               	btfsc	status,0,c
  6416  0013D6  D002               	goto	i2l3828
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;messages.c: 77: return (-3);
  6420  0013D8  0EFD               	movlw	253
  6421  0013DA  0012               	return	
  6422  0013DC                     i2l3828:
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;messages.c: 78: }
  6426                           ;messages.c: 80: tlength = qmsg->length;
  6427  0013DC  0100               	movlb	0	; () banked
  6428  0013DE  EE20 F001          	lfsr	2,1
  6429  0013E2  0100               	movlb	0	; () banked
  6430  0013E4  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6431  0013E6  26D9               	addwf	fsr2l,f,c
  6432  0013E8  0100               	movlb	0	; () banked
  6433  0013EA  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6434  0013EC  22DA               	addwfc	fsr2h,f,c
  6435  0013EE  50DF               	movf	indf2,w,c
  6436  0013F0  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6437  0013F2  503C               	movf	??i2_recv_msg,w,c
  6438  0013F4  0100               	movlb	0	; () banked
  6439  0013F6  0100               	movlb	0	; () banked
  6440  0013F8  6F88               	movwf	i2recv_msg@tlength& (0+255),b
  6441  0013FA  0100               	movlb	0	; () banked
  6442  0013FC  6B89               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6446  0013FE  0100               	movlb	0	; () banked
  6447  001400  C086  F033         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6448  001404  0100               	movlb	0	; () banked
  6449  001406  C085  F032         	movff	i2recv_msg@data,i2memcpy@d1
  6450  00140A  0E03               	movlw	3
  6451  00140C  0100               	movlb	0	; () banked
  6452  00140E  0100               	movlb	0	; () banked
  6453  001410  258A               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6454  001412  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6455  001414  0E00               	movlw	0
  6456  001416  0100               	movlb	0	; () banked
  6457  001418  0100               	movlb	0	; () banked
  6458  00141A  218B               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6459  00141C  6E3D               	movwf	(??i2_recv_msg+1)& (0+255),c
  6460  00141E  C03C  F034         	movff	??i2_recv_msg,i2memcpy@s1
  6461  001422  C03D  F035         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6462  001426  C088  F036         	movff	i2recv_msg@tlength,i2memcpy@n
  6463  00142A  C089  F037         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6464  00142E  ECB0  F010         	call	i2_memcpy	;wreg free
  6465                           
  6466                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6467  001432  0100               	movlb	0	; () banked
  6468  001434  EE20 F065          	lfsr	2,101
  6469  001438  0100               	movlb	0	; () banked
  6470  00143A  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6471  00143C  26D9               	addwf	fsr2l,f,c
  6472  00143E  0100               	movlb	0	; () banked
  6473  001440  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6474  001442  22DA               	addwfc	fsr2h,f,c
  6475  001444  0100               	movlb	0	; () banked
  6476  001446  EE10 F065          	lfsr	1,101
  6477  00144A  0100               	movlb	0	; () banked
  6478  00144C  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6479  00144E  26E1               	addwf	fsr1l,f,c
  6480  001450  0100               	movlb	0	; () banked
  6481  001452  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6482  001454  22E2               	addwfc	fsr1h,f,c
  6483  001456  50E7               	movf	indf1,w,c
  6484  001458  6E3C               	movwf	??i2_recv_msg& (0+255),c
  6485  00145A  283C               	incf	??i2_recv_msg,w,c
  6486  00145C  0B03               	andlw	3
  6487  00145E  6EDF               	movwf	indf2,c
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6491  001460  0100               	movlb	0	; () banked
  6492  001462  EE20 F002          	lfsr	2,2
  6493  001466  0100               	movlb	0	; () banked
  6494  001468  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6495  00146A  26D9               	addwf	fsr2l,f,c
  6496  00146C  0100               	movlb	0	; () banked
  6497  00146E  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6498  001470  22DA               	addwfc	fsr2h,f,c
  6499  001472  C083  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6500  001476  C084  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6501  00147A  CFDF FFE7          	movff	indf2,indf1
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;messages.c: 91: qmsg->full = 0;
  6505  00147E  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6506  001482  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6507  001486  0E00               	movlw	0
  6508  001488  6EDF               	movwf	indf2,c
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;messages.c: 92: return (tlength);
  6512  00148A  0100               	movlb	0	; () banked
  6513  00148C  0100               	movlb	0	; () banked
  6514  00148E  5188               	movf	i2recv_msg@tlength& (0+255),w,b
  6515  001490  0012               	return	
  6516  001492                     i2l3844:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;messages.c: 94: return (-4);
  6520  001492  0EFC               	movlw	252
  6521  001494  0012               	return	
  6522  001496                     __end_ofi2_recv_msg:
  6523                           	opt stack 0
  6524                           pclatu	equ	0xFFB
  6525                           pclath	equ	0xFFA
  6526                           tblptru	equ	0xFF8
  6527                           tblptrh	equ	0xFF7
  6528                           tblptrl	equ	0xFF6
  6529                           tablat	equ	0xFF5
  6530                           prodh	equ	0xFF4
  6531                           prodl	equ	0xFF3
  6532                           intcon	equ	0xFF2
  6533                           postinc0	equ	0xFEE
  6534                           fsr0h	equ	0xFEA
  6535                           fsr0l	equ	0xFE9
  6536                           wreg	equ	0xFE8
  6537                           indf1	equ	0xFE7
  6538                           fsr1h	equ	0xFE2
  6539                           fsr1l	equ	0xFE1
  6540                           bsr	equ	0xFE0
  6541                           indf2	equ	0xFDF
  6542                           postinc2	equ	0xFDE
  6543                           postdec2	equ	0xFDD
  6544                           fsr2h	equ	0xFDA
  6545                           fsr2l	equ	0xFD9
  6546                           status	equ	0xFD8
  6547                           
  6548 ;; *************** function _i2c_int_handler *****************
  6549 ;; Defined at:
  6550 ;;		line 186 in file "source/my_i2c.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;		None
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;		None               void
  6557 ;; Registers used:
  6558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6564 ;;      Params:         0       0       0       0       0
  6565 ;;      Locals:         0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0
  6567 ;;      Totals:         0       0       0       0       0
  6568 ;;Total ram usage:        0 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    4
  6571 ;; This function calls:
  6572 ;;		_i2c_master_int_handler
  6573 ;;		_i2c_slave_int_handler
  6574 ;; This function is called by:
  6575 ;;		_InterruptHandlerHigh
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text41
  6580  002348                     __ptext41:
  6581                           	opt stack 0
  6582  002348                     _i2c_int_handler:
  6583                           	opt stack 15
  6584                           
  6585                           ;my_i2c.c: 187: switch (i2c_mode){
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;incstack = 0
  6589  002348  D006               	goto	i2l3534
  6590  00234A                     i2l3528:
  6591                           
  6592                           ;my_i2c.c: 189: i2c_master_int_handler();
  6593  00234A  EC74  F003         	call	_i2c_master_int_handler	;wreg free
  6594                           
  6595                           ;my_i2c.c: 190: break;
  6596  00234E  0012               	return	
  6597  002350                     i2l3530:
  6598                           
  6599                           ;my_i2c.c: 193: i2c_slave_int_handler();
  6600  002350  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  6601                           
  6602                           ;my_i2c.c: 194: break;
  6603  002354  0012               	return	
  6604  002356                     i2l3534:
  6605  002356  0100               	movlb	0	; () banked
  6606  002358  0100               	movlb	0	; () banked
  6607  00235A  51CB               	movf	_i2c_mode& (0+255),w,b
  6608                           
  6609                           ; Switch size 1, requested type "space"
  6610                           ; Number of cases is 2, Range of values is 1 to 2
  6611                           ; switch strategies available:
  6612                           ; Name         Instructions Cycles
  6613                           ; simple_byte            7     4 (average)
  6614                           ;	Chosen strategy is simple_byte
  6615  00235C  0A01               	xorlw	1	; case 1
  6616  00235E  B4D8               	btfsc	status,2,c
  6617  002360  D7F4               	goto	i2l3528
  6618  002362  0A03               	xorlw	3	; case 2
  6619  002364  A4D8               	btfss	status,2,c
  6620  002366  0012               	return	
  6621  002368  D7F3               	goto	i2l3530
  6622  00236A                     __end_of_i2c_int_handler:
  6623                           	opt stack 0
  6624                           pclatu	equ	0xFFB
  6625                           pclath	equ	0xFFA
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           postinc0	equ	0xFEE
  6634                           fsr0h	equ	0xFEA
  6635                           fsr0l	equ	0xFE9
  6636                           wreg	equ	0xFE8
  6637                           indf1	equ	0xFE7
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           bsr	equ	0xFE0
  6641                           indf2	equ	0xFDF
  6642                           postinc2	equ	0xFDE
  6643                           postdec2	equ	0xFDD
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function _i2c_slave_int_handler *****************
  6649 ;; Defined at:
  6650 ;;		line 203 in file "source/my_i2c.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  error_buf       3   14[BANK0 ] unsigned char [3]
  6655 ;;  data_read       1   22[BANK0 ] unsigned char 
  6656 ;;  msg_ready       1   21[BANK0 ] unsigned char 
  6657 ;;  msg_to_send     1   20[BANK0 ] unsigned char 
  6658 ;;  i2c_data        1   19[BANK0 ] unsigned char 
  6659 ;;  overrun_erro    1   18[BANK0 ] unsigned char 
  6660 ;;  data_written    1   17[BANK0 ] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;		None               void
  6663 ;; Registers used:
  6664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6670 ;;      Params:         0       0       0       0       0
  6671 ;;      Locals:         0       9       0       0       0
  6672 ;;      Temps:          0       2       0       0       0
  6673 ;;      Totals:         0      11       0       0       0
  6674 ;;Total ram usage:       11 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    3
  6677 ;; This function calls:
  6678 ;;		_handle_start
  6679 ;;		i2_ToMainHigh_sendmsg
  6680 ;;		i2_start_i2c_slave_reply
  6681 ;; This function is called by:
  6682 ;;		_i2c_int_handler
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text42
  6687  0000BA                     __ptext42:
  6688                           	opt stack 0
  6689  0000BA                     _i2c_slave_int_handler:
  6690                           	opt stack 15
  6691                           
  6692                           ;my_i2c.c: 204: unsigned char i2c_data;
  6693                           ;my_i2c.c: 205: unsigned char data_read = 0;
  6694                           
  6695                           ;incstack = 0
  6696  0000BA  0100               	movlb	0	; () banked
  6697  0000BC  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6698  0000BE  0E00               	movlw	0
  6699  0000C0  0100               	movlb	0	; () banked
  6700  0000C2  0100               	movlb	0	; () banked
  6701  0000C4  6F96               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6702  0000C6  0100               	movlb	0	; () banked
  6703  0000C8  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6704                           
  6705                           ;my_i2c.c: 206: unsigned char data_written = 0;
  6706  0000CA  0100               	movlb	0	; () banked
  6707  0000CC  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6708  0000CE  0E00               	movlw	0
  6709  0000D0  0100               	movlb	0	; () banked
  6710  0000D2  0100               	movlb	0	; () banked
  6711  0000D4  6F91               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6712  0000D6  0100               	movlb	0	; () banked
  6713  0000D8  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6714                           
  6715                           ;my_i2c.c: 207: unsigned char msg_ready = 0;
  6716  0000DA  0100               	movlb	0	; () banked
  6717  0000DC  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6718  0000DE  0E00               	movlw	0
  6719  0000E0  0100               	movlb	0	; () banked
  6720  0000E2  0100               	movlb	0	; () banked
  6721  0000E4  6F95               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6722  0000E6  0100               	movlb	0	; () banked
  6723  0000E8  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6724                           
  6725                           ;my_i2c.c: 208: unsigned char msg_to_send = 0;
  6726  0000EA  0100               	movlb	0	; () banked
  6727  0000EC  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6728  0000EE  0E00               	movlw	0
  6729  0000F0  0100               	movlb	0	; () banked
  6730  0000F2  0100               	movlb	0	; () banked
  6731  0000F4  6F94               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6732  0000F6  0100               	movlb	0	; () banked
  6733  0000F8  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6734                           
  6735                           ;my_i2c.c: 209: unsigned char overrun_error = 0;
  6736  0000FA  0100               	movlb	0	; () banked
  6737  0000FC  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6738  0000FE  0E00               	movlw	0
  6739  000100  0100               	movlb	0	; () banked
  6740  000102  0100               	movlb	0	; () banked
  6741  000104  6F92               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6742  000106  0100               	movlb	0	; () banked
  6743  000108  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;my_i2c.c: 210: unsigned char error_buf[3];
  6747                           ;my_i2c.c: 213: if (SSPCON1bits.SSPOV == 1) {
  6748  00010A  ACC6               	btfss	4038,6,c	;volatile
  6749  00010C  D029               	goto	i2l3666
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;my_i2c.c: 214: SSPCON1bits.SSPOV = 0;
  6753  00010E  9CC6               	bcf	4038,6,c	;volatile
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;my_i2c.c: 218: ic_ptr->status = 0x5;
  6757  000110  0100               	movlb	0	; () banked
  6758  000112  EE20 F019          	lfsr	2,25
  6759  000116  0100               	movlb	0	; () banked
  6760  000118  51C9               	movf	_ic_ptr& (0+255),w,b
  6761  00011A  26D9               	addwf	fsr2l,f,c
  6762  00011C  0100               	movlb	0	; () banked
  6763  00011E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6764  000120  22DA               	addwfc	fsr2h,f,c
  6765  000122  0E05               	movlw	5
  6766  000124  6EDF               	movwf	indf2,c
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;my_i2c.c: 219: overrun_error = 1;
  6770  000126  0100               	movlb	0	; () banked
  6771  000128  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6772  00012A  0E01               	movlw	1
  6773  00012C  0100               	movlb	0	; () banked
  6774  00012E  0100               	movlb	0	; () banked
  6775  000130  6F92               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6776  000132  0100               	movlb	0	; () banked
  6777  000134  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;my_i2c.c: 220: ic_ptr->error_count++;
  6781  000136  0100               	movlb	0	; () banked
  6782  000138  EE20 F01B          	lfsr	2,27
  6783  00013C  0100               	movlb	0	; () banked
  6784  00013E  51C9               	movf	_ic_ptr& (0+255),w,b
  6785  000140  26D9               	addwf	fsr2l,f,c
  6786  000142  0100               	movlb	0	; () banked
  6787  000144  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6788  000146  22DA               	addwfc	fsr2h,f,c
  6789  000148  2ADF               	incf	indf2,f,c
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;my_i2c.c: 221: ic_ptr->error_code = 0x4;
  6793  00014A  0100               	movlb	0	; () banked
  6794  00014C  EE20 F01A          	lfsr	2,26
  6795  000150  0100               	movlb	0	; () banked
  6796  000152  51C9               	movf	_ic_ptr& (0+255),w,b
  6797  000154  26D9               	addwf	fsr2l,f,c
  6798  000156  0100               	movlb	0	; () banked
  6799  000158  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6800  00015A  22DA               	addwfc	fsr2h,f,c
  6801  00015C  0E04               	movlw	4
  6802  00015E  6EDF               	movwf	indf2,c
  6803  000160                     i2l3666:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;my_i2c.c: 222: }
  6807                           ;my_i2c.c: 224: if (SSPSTATbits.BF == 1) {
  6808  000160  A0C7               	btfss	4039,0,c	;volatile
  6809  000162  D00A               	goto	i2l3672
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;my_i2c.c: 225: i2c_data = SSPBUF;
  6813  000164  CFC9 F093          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;my_i2c.c: 226: data_read = 1;
  6817  000168  0100               	movlb	0	; () banked
  6818  00016A  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6819  00016C  0E01               	movlw	1
  6820  00016E  0100               	movlb	0	; () banked
  6821  000170  0100               	movlb	0	; () banked
  6822  000172  6F96               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6823  000174  0100               	movlb	0	; () banked
  6824  000176  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6825  000178                     i2l3672:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;my_i2c.c: 227: }
  6829                           ;my_i2c.c: 229: if (!overrun_error) {
  6830  000178  0100               	movlb	0	; () banked
  6831  00017A  0100               	movlb	0	; () banked
  6832  00017C  6792               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  6833  00017E  D1CE               	goto	i2l308
  6834  000180  D1B7               	goto	i2l3758
  6835  000182                     i2l310:
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;my_i2c.c: 232: {
  6839                           ;my_i2c.c: 234: if (SSPSTATbits.S == 1) {
  6840  000182  A6C7               	btfss	4039,3,c	;volatile
  6841  000184  D1CB               	goto	i2l308
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;my_i2c.c: 235: handle_start(data_read);
  6845  000186  0100               	movlb	0	; () banked
  6846  000188  0100               	movlb	0	; () banked
  6847  00018A  5196               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6848  00018C  ECAA  F00C         	call	_handle_start
  6849                           
  6850                           ;my_i2c.c: 237: if (ic_ptr->status == 0x8) {
  6851  000190  0100               	movlb	0	; () banked
  6852  000192  EE20 F019          	lfsr	2,25
  6853  000196  0100               	movlb	0	; () banked
  6854  000198  51C9               	movf	_ic_ptr& (0+255),w,b
  6855  00019A  26D9               	addwf	fsr2l,f,c
  6856  00019C  0100               	movlb	0	; () banked
  6857  00019E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6858  0001A0  22DA               	addwfc	fsr2h,f,c
  6859  0001A2  0E08               	movlw	8
  6860  0001A4  62DF               	cpfseq	indf2,c
  6861  0001A6  D1BA               	goto	i2l308
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;my_i2c.c: 238: data_read = 0;
  6865  0001A8  0100               	movlb	0	; () banked
  6866  0001AA  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6867  0001AC  0E00               	movlw	0
  6868  0001AE  0100               	movlb	0	; () banked
  6869  0001B0  0100               	movlb	0	; () banked
  6870  0001B2  6F96               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6871  0001B4  0100               	movlb	0	; () banked
  6872  0001B6  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6873                           
  6874                           ;my_i2c.c: 239: msg_to_send = 1;
  6875  0001B8  0100               	movlb	0	; () banked
  6876  0001BA  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6877  0001BC  0E01               	movlw	1
  6878  0001BE  0100               	movlb	0	; () banked
  6879  0001C0  0100               	movlb	0	; () banked
  6880  0001C2  6F94               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6881  0001C4  D187               	goto	L14
  6882  0001C6                     i2l314:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;my_i2c.c: 245: {
  6886                           ;my_i2c.c: 247: if (SSPSTATbits.P == 1) {
  6887  0001C6  A8C7               	btfss	4039,4,c	;volatile
  6888  0001C8  D030               	goto	i2l3692
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;my_i2c.c: 250: ic_ptr->event_count++;
  6892  0001CA  0100               	movlb	0	; () banked
  6893  0001CC  EE20 F018          	lfsr	2,24
  6894  0001D0  0100               	movlb	0	; () banked
  6895  0001D2  51C9               	movf	_ic_ptr& (0+255),w,b
  6896  0001D4  26D9               	addwf	fsr2l,f,c
  6897  0001D6  0100               	movlb	0	; () banked
  6898  0001D8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6899  0001DA  22DA               	addwfc	fsr2h,f,c
  6900  0001DC  2ADF               	incf	indf2,f,c
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;my_i2c.c: 251: if (data_read) {
  6904  0001DE  0100               	movlb	0	; () banked
  6905  0001E0  0100               	movlb	0	; () banked
  6906  0001E2  5196               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6907  0001E4  B4D8               	btfsc	status,2,c
  6908  0001E6  D179               	goto	L16
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;my_i2c.c: 252: if (SSPSTATbits.D_A == 0) {
  6912  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  6913  0001EA  D009               	goto	i2l3690
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;my_i2c.c: 253: msg_ready = 1;
  6917  0001EC  0100               	movlb	0	; () banked
  6918  0001EE  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  6919  0001F0  0E01               	movlw	1
  6920  0001F2  0100               	movlb	0	; () banked
  6921  0001F4  0100               	movlb	0	; () banked
  6922  0001F6  6F95               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6923  0001F8  0100               	movlb	0	; () banked
  6924  0001FA  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6925                           
  6926                           ;my_i2c.c: 254: } else {
  6927  0001FC  D16E               	goto	L16
  6928  0001FE                     i2l3690:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;my_i2c.c: 255: ic_ptr->error_count++;
  6932  0001FE  0100               	movlb	0	; () banked
  6933  000200  EE20 F01B          	lfsr	2,27
  6934  000204  0100               	movlb	0	; () banked
  6935  000206  51C9               	movf	_ic_ptr& (0+255),w,b
  6936  000208  26D9               	addwf	fsr2l,f,c
  6937  00020A  0100               	movlb	0	; () banked
  6938  00020C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6939  00020E  22DA               	addwfc	fsr2h,f,c
  6940  000210  2ADF               	incf	indf2,f,c
  6941                           
  6942                           ;my_i2c.c: 256: ic_ptr->error_code = 0x6;
  6943  000212  0100               	movlb	0	; () banked
  6944  000214  EE20 F01A          	lfsr	2,26
  6945  000218  0100               	movlb	0	; () banked
  6946  00021A  51C9               	movf	_ic_ptr& (0+255),w,b
  6947  00021C  26D9               	addwf	fsr2l,f,c
  6948  00021E  0100               	movlb	0	; () banked
  6949  000220  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6950  000222  22DA               	addwfc	fsr2h,f,c
  6951  000224  0E06               	movlw	6
  6952  000226  6EDF               	movwf	indf2,c
  6953                           
  6954                           ; BSR set to: 0
  6955  000228  D158               	goto	L16
  6956  00022A                     i2l3692:
  6957                           
  6958                           ; BSR set to: 0
  6959  00022A  0100               	movlb	0	; () banked
  6960  00022C  0100               	movlb	0	; () banked
  6961  00022E  5196               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6962  000230  B4D8               	btfsc	status,2,c
  6963  000232  D174               	goto	i2l308
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;my_i2c.c: 261: ic_ptr->event_count++;
  6967  000234  0100               	movlb	0	; () banked
  6968  000236  EE20 F018          	lfsr	2,24
  6969  00023A  0100               	movlb	0	; () banked
  6970  00023C  51C9               	movf	_ic_ptr& (0+255),w,b
  6971  00023E  26D9               	addwf	fsr2l,f,c
  6972  000240  0100               	movlb	0	; () banked
  6973  000242  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6974  000244  22DA               	addwfc	fsr2h,f,c
  6975  000246  2ADF               	incf	indf2,f,c
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;my_i2c.c: 262: if (SSPSTATbits.D_A == 0) {
  6979  000248  BAC7               	btfsc	4039,5,c	;volatile
  6980  00024A  D019               	goto	i2l3708
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;my_i2c.c: 263: if (SSPSTATbits.R_W == 0) {
  6984  00024C  B4C7               	btfsc	4039,2,c	;volatile
  6985  00024E  D00B               	goto	i2l3702
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;my_i2c.c: 264: ic_ptr->status = 0x7;
  6989  000250  0100               	movlb	0	; () banked
  6990  000252  EE20 F019          	lfsr	2,25
  6991  000256  0100               	movlb	0	; () banked
  6992  000258  51C9               	movf	_ic_ptr& (0+255),w,b
  6993  00025A  26D9               	addwf	fsr2l,f,c
  6994  00025C  0100               	movlb	0	; () banked
  6995  00025E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  6996  000260  22DA               	addwfc	fsr2h,f,c
  6997  000262  0E07               	movlw	7
  6998  000264  D076               	goto	L13
  6999  000266                     i2l3702:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;my_i2c.c: 266: ic_ptr->status = 0x8;
  7003  000266  0100               	movlb	0	; () banked
  7004  000268  EE20 F019          	lfsr	2,25
  7005  00026C  0100               	movlb	0	; () banked
  7006  00026E  51C9               	movf	_ic_ptr& (0+255),w,b
  7007  000270  26D9               	addwf	fsr2l,f,c
  7008  000272  0100               	movlb	0	; () banked
  7009  000274  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7010  000276  22DA               	addwfc	fsr2h,f,c
  7011  000278  0E08               	movlw	8
  7012  00027A  6EDF               	movwf	indf2,c
  7013  00027C  D11D               	goto	L17
  7014  00027E                     i2l3708:
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;my_i2c.c: 272: ic_ptr->error_count++;
  7018  00027E  0100               	movlb	0	; () banked
  7019  000280  EE20 F01B          	lfsr	2,27
  7020  000284  0100               	movlb	0	; () banked
  7021  000286  51C9               	movf	_ic_ptr& (0+255),w,b
  7022  000288  26D9               	addwf	fsr2l,f,c
  7023  00028A  0100               	movlb	0	; () banked
  7024  00028C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7025  00028E  22DA               	addwfc	fsr2h,f,c
  7026  000290  2ADF               	incf	indf2,f,c
  7027                           
  7028                           ;my_i2c.c: 273: ic_ptr->status = 0x5;
  7029  000292  0100               	movlb	0	; () banked
  7030  000294  EE20 F019          	lfsr	2,25
  7031  000298  0100               	movlb	0	; () banked
  7032  00029A  51C9               	movf	_ic_ptr& (0+255),w,b
  7033  00029C  26D9               	addwf	fsr2l,f,c
  7034  00029E  0100               	movlb	0	; () banked
  7035  0002A0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7036  0002A2  22DA               	addwfc	fsr2h,f,c
  7037  0002A4  0E05               	movlw	5
  7038  0002A6  6EDF               	movwf	indf2,c
  7039                           
  7040                           ;my_i2c.c: 274: ic_ptr->error_code = 0x6;
  7041  0002A8  0100               	movlb	0	; () banked
  7042  0002AA  EE20 F01A          	lfsr	2,26
  7043  0002AE  0100               	movlb	0	; () banked
  7044  0002B0  51C9               	movf	_ic_ptr& (0+255),w,b
  7045  0002B2  26D9               	addwf	fsr2l,f,c
  7046  0002B4  0100               	movlb	0	; () banked
  7047  0002B6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7048  0002B8  22DA               	addwfc	fsr2h,f,c
  7049  0002BA  0E06               	movlw	6
  7050  0002BC  D04A               	goto	L13
  7051  0002BE                     i2l3710:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;my_i2c.c: 280: {
  7055                           ;my_i2c.c: 281: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7056  0002BE  0100               	movlb	0	; () banked
  7057  0002C0  EE20 F033          	lfsr	2,51
  7058  0002C4  0100               	movlb	0	; () banked
  7059  0002C6  51C9               	movf	_ic_ptr& (0+255),w,b
  7060  0002C8  26D9               	addwf	fsr2l,f,c
  7061  0002CA  0100               	movlb	0	; () banked
  7062  0002CC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7063  0002CE  22DA               	addwfc	fsr2h,f,c
  7064  0002D0  50DF               	movf	indf2,w,c
  7065  0002D2  0100               	movlb	0	; () banked
  7066  0002D4  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7067  0002D6  0100               	movlb	0	; () banked
  7068  0002D8  EE20 F032          	lfsr	2,50
  7069  0002DC  0100               	movlb	0	; () banked
  7070  0002DE  51C9               	movf	_ic_ptr& (0+255),w,b
  7071  0002E0  26D9               	addwf	fsr2l,f,c
  7072  0002E2  0100               	movlb	0	; () banked
  7073  0002E4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7074  0002E6  22DA               	addwfc	fsr2h,f,c
  7075  0002E8  50DF               	movf	indf2,w,c
  7076  0002EA  0100               	movlb	0	; () banked
  7077  0002EC  5D8C               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7078  0002EE  B0D8               	btfsc	status,0,c
  7079  0002F0  D0F4               	goto	L16
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;my_i2c.c: 282: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7083  0002F2  0100               	movlb	0	; () banked
  7084  0002F4  EE20 F033          	lfsr	2,51
  7085  0002F8  0100               	movlb	0	; () banked
  7086  0002FA  51C9               	movf	_ic_ptr& (0+255),w,b
  7087  0002FC  26D9               	addwf	fsr2l,f,c
  7088  0002FE  0100               	movlb	0	; () banked
  7089  000300  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7090  000302  22DA               	addwfc	fsr2h,f,c
  7091  000304  50DF               	movf	indf2,w,c
  7092  000306  0100               	movlb	0	; () banked
  7093  000308  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7094  00030A  0100               	movlb	0	; () banked
  7095  00030C  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7096  00030E  0D01               	mullw	1
  7097  000310  0E1C               	movlw	28
  7098  000312  26F3               	addwf	prodl,f,c
  7099  000314  0E00               	movlw	0
  7100  000316  22F4               	addwfc	prodh,f,c
  7101  000318  50F3               	movf	prodl,w,c
  7102  00031A  0100               	movlb	0	; () banked
  7103  00031C  0100               	movlb	0	; () banked
  7104  00031E  25C9               	addwf	_ic_ptr& (0+255),w,b
  7105  000320  6ED9               	movwf	fsr2l,c
  7106  000322  50F4               	movf	prodh,w,c
  7107  000324  0100               	movlb	0	; () banked
  7108  000326  0100               	movlb	0	; () banked
  7109  000328  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7110  00032A  6EDA               	movwf	fsr2h,c
  7111  00032C  50DF               	movf	indf2,w,c
  7112  00032E  6EC9               	movwf	4041,c	;volatile
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;my_i2c.c: 283: ic_ptr->outbufind++;
  7116  000330  0100               	movlb	0	; () banked
  7117  000332  EE20 F033          	lfsr	2,51
  7118  000336  0100               	movlb	0	; () banked
  7119  000338  51C9               	movf	_ic_ptr& (0+255),w,b
  7120  00033A  26D9               	addwf	fsr2l,f,c
  7121  00033C  0100               	movlb	0	; () banked
  7122  00033E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7123  000340  22DA               	addwfc	fsr2h,f,c
  7124  000342  2ADF               	incf	indf2,f,c
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;my_i2c.c: 284: data_written = 1;
  7128  000344  0100               	movlb	0	; () banked
  7129  000346  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7130  000348  0E01               	movlw	1
  7131  00034A  0100               	movlb	0	; () banked
  7132  00034C  0100               	movlb	0	; () banked
  7133  00034E  6F91               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7134  000350  D0C1               	goto	L14
  7135  000352                     L13:
  7136  000352  6EDF               	movwf	indf2,c
  7137  000354  D0E3               	goto	i2l308
  7138  000356                     i2l328:
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;my_i2c.c: 292: {
  7142                           ;my_i2c.c: 294: if (SSPSTATbits.P == 1) {
  7143  000356  A8C7               	btfss	4039,4,c	;volatile
  7144  000358  D062               	goto	i2l3736
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;my_i2c.c: 296: ic_ptr->event_count++;
  7148  00035A  0100               	movlb	0	; () banked
  7149  00035C  EE20 F018          	lfsr	2,24
  7150  000360  0100               	movlb	0	; () banked
  7151  000362  51C9               	movf	_ic_ptr& (0+255),w,b
  7152  000364  26D9               	addwf	fsr2l,f,c
  7153  000366  0100               	movlb	0	; () banked
  7154  000368  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7155  00036A  22DA               	addwfc	fsr2h,f,c
  7156  00036C  2ADF               	incf	indf2,f,c
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;my_i2c.c: 297: if (data_read) {
  7160  00036E  0100               	movlb	0	; () banked
  7161  000370  0100               	movlb	0	; () banked
  7162  000372  5196               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7163  000374  B4D8               	btfsc	status,2,c
  7164  000376  D04A               	goto	i2l3732
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;my_i2c.c: 298: if (SSPSTATbits.D_A == 1) {
  7168  000378  AAC7               	btfss	4039,5,c	;volatile
  7169  00037A  D027               	goto	i2l3730
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 299: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7173  00037C  0100               	movlb	0	; () banked
  7174  00037E  EE20 F016          	lfsr	2,22
  7175  000382  0100               	movlb	0	; () banked
  7176  000384  51C9               	movf	_ic_ptr& (0+255),w,b
  7177  000386  26D9               	addwf	fsr2l,f,c
  7178  000388  0100               	movlb	0	; () banked
  7179  00038A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  00038C  22DA               	addwfc	fsr2h,f,c
  7181  00038E  50DF               	movf	indf2,w,c
  7182  000390  0100               	movlb	0	; () banked
  7183  000392  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7184  000394  0100               	movlb	0	; () banked
  7185  000396  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7186  000398  0D01               	mullw	1
  7187  00039A  50F3               	movf	prodl,w,c
  7188  00039C  0100               	movlb	0	; () banked
  7189  00039E  0100               	movlb	0	; () banked
  7190  0003A0  25C9               	addwf	_ic_ptr& (0+255),w,b
  7191  0003A2  6ED9               	movwf	fsr2l,c
  7192  0003A4  50F4               	movf	prodh,w,c
  7193  0003A6  0100               	movlb	0	; () banked
  7194  0003A8  0100               	movlb	0	; () banked
  7195  0003AA  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7196  0003AC  6EDA               	movwf	fsr2h,c
  7197  0003AE  0100               	movlb	0	; () banked
  7198  0003B0  C093  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;my_i2c.c: 300: ic_ptr->buflen++;
  7202  0003B4  0100               	movlb	0	; () banked
  7203  0003B6  EE20 F016          	lfsr	2,22
  7204  0003BA  0100               	movlb	0	; () banked
  7205  0003BC  51C9               	movf	_ic_ptr& (0+255),w,b
  7206  0003BE  26D9               	addwf	fsr2l,f,c
  7207  0003C0  0100               	movlb	0	; () banked
  7208  0003C2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7209  0003C4  22DA               	addwfc	fsr2h,f,c
  7210  0003C6  2ADF               	incf	indf2,f,c
  7211                           
  7212                           ;my_i2c.c: 301: } else {
  7213  0003C8  D088               	goto	L16
  7214  0003CA                     i2l3730:
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;my_i2c.c: 302: ic_ptr->error_count++;
  7218  0003CA  0100               	movlb	0	; () banked
  7219  0003CC  EE20 F01B          	lfsr	2,27
  7220  0003D0  0100               	movlb	0	; () banked
  7221  0003D2  51C9               	movf	_ic_ptr& (0+255),w,b
  7222  0003D4  26D9               	addwf	fsr2l,f,c
  7223  0003D6  0100               	movlb	0	; () banked
  7224  0003D8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  0003DA  22DA               	addwfc	fsr2h,f,c
  7226  0003DC  2ADF               	incf	indf2,f,c
  7227                           
  7228                           ;my_i2c.c: 303: ic_ptr->error_code = 0x6;
  7229  0003DE  0100               	movlb	0	; () banked
  7230  0003E0  EE20 F01A          	lfsr	2,26
  7231  0003E4  0100               	movlb	0	; () banked
  7232  0003E6  51C9               	movf	_ic_ptr& (0+255),w,b
  7233  0003E8  26D9               	addwf	fsr2l,f,c
  7234  0003EA  0100               	movlb	0	; () banked
  7235  0003EC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  0003EE  22DA               	addwfc	fsr2h,f,c
  7237  0003F0  0E06               	movlw	6
  7238  0003F2  6EDF               	movwf	indf2,c
  7239                           
  7240                           ;my_i2c.c: 304: ic_ptr->status = 0x5;
  7241  0003F4  0100               	movlb	0	; () banked
  7242  0003F6  EE20 F019          	lfsr	2,25
  7243  0003FA  0100               	movlb	0	; () banked
  7244  0003FC  51C9               	movf	_ic_ptr& (0+255),w,b
  7245  0003FE  26D9               	addwf	fsr2l,f,c
  7246  000400  0100               	movlb	0	; () banked
  7247  000402  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7248  000404  22DA               	addwfc	fsr2h,f,c
  7249  000406  0E05               	movlw	5
  7250  000408  6EDF               	movwf	indf2,c
  7251  00040A  D067               	goto	L16
  7252  00040C                     i2l3732:
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;my_i2c.c: 307: msg_ready = 1;
  7256  00040C  0100               	movlb	0	; () banked
  7257  00040E  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7258  000410  0E01               	movlw	1
  7259  000412  0100               	movlb	0	; () banked
  7260  000414  0100               	movlb	0	; () banked
  7261  000416  6F95               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7262  000418  0100               	movlb	0	; () banked
  7263  00041A  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7264                           
  7265                           ; BSR set to: 0
  7266  00041C  D05E               	goto	L16
  7267  00041E                     i2l3736:
  7268                           
  7269                           ; BSR set to: 0
  7270  00041E  0100               	movlb	0	; () banked
  7271  000420  0100               	movlb	0	; () banked
  7272  000422  5196               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7273  000424  B4D8               	btfsc	status,2,c
  7274  000426  D07A               	goto	i2l308
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;my_i2c.c: 311: ic_ptr->event_count++;
  7278  000428  0100               	movlb	0	; () banked
  7279  00042A  EE20 F018          	lfsr	2,24
  7280  00042E  0100               	movlb	0	; () banked
  7281  000430  51C9               	movf	_ic_ptr& (0+255),w,b
  7282  000432  26D9               	addwf	fsr2l,f,c
  7283  000434  0100               	movlb	0	; () banked
  7284  000436  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7285  000438  22DA               	addwfc	fsr2h,f,c
  7286  00043A  2ADF               	incf	indf2,f,c
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;my_i2c.c: 312: if (SSPSTATbits.D_A == 1) {
  7290  00043C  AAC7               	btfss	4039,5,c	;volatile
  7291  00043E  D027               	goto	i2l336
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;my_i2c.c: 313: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7295  000440  0100               	movlb	0	; () banked
  7296  000442  EE20 F016          	lfsr	2,22
  7297  000446  0100               	movlb	0	; () banked
  7298  000448  51C9               	movf	_ic_ptr& (0+255),w,b
  7299  00044A  26D9               	addwf	fsr2l,f,c
  7300  00044C  0100               	movlb	0	; () banked
  7301  00044E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7302  000450  22DA               	addwfc	fsr2h,f,c
  7303  000452  50DF               	movf	indf2,w,c
  7304  000454  0100               	movlb	0	; () banked
  7305  000456  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7306  000458  0100               	movlb	0	; () banked
  7307  00045A  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7308  00045C  0D01               	mullw	1
  7309  00045E  50F3               	movf	prodl,w,c
  7310  000460  0100               	movlb	0	; () banked
  7311  000462  0100               	movlb	0	; () banked
  7312  000464  25C9               	addwf	_ic_ptr& (0+255),w,b
  7313  000466  6ED9               	movwf	fsr2l,c
  7314  000468  50F4               	movf	prodh,w,c
  7315  00046A  0100               	movlb	0	; () banked
  7316  00046C  0100               	movlb	0	; () banked
  7317  00046E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7318  000470  6EDA               	movwf	fsr2h,c
  7319  000472  0100               	movlb	0	; () banked
  7320  000474  C093  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;my_i2c.c: 314: ic_ptr->buflen++;
  7324  000478  0100               	movlb	0	; () banked
  7325  00047A  EE20 F016          	lfsr	2,22
  7326  00047E  0100               	movlb	0	; () banked
  7327  000480  51C9               	movf	_ic_ptr& (0+255),w,b
  7328  000482  26D9               	addwf	fsr2l,f,c
  7329  000484  0100               	movlb	0	; () banked
  7330  000486  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7331  000488  22DA               	addwfc	fsr2h,f,c
  7332  00048A  2ADF               	incf	indf2,f,c
  7333                           
  7334                           ;my_i2c.c: 315: } else {
  7335  00048C  D047               	goto	i2l308
  7336  00048E                     i2l336:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;my_i2c.c: 316: if (SSPSTATbits.R_W == 1) {
  7340  00048E  A4C7               	btfss	4039,2,c	;volatile
  7341  000490  D6B6               	goto	i2l3690
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 317: ic_ptr->status = 0x8;
  7345  000492  0100               	movlb	0	; () banked
  7346  000494  EE20 F019          	lfsr	2,25
  7347  000498  0100               	movlb	0	; () banked
  7348  00049A  51C9               	movf	_ic_ptr& (0+255),w,b
  7349  00049C  26D9               	addwf	fsr2l,f,c
  7350  00049E  0100               	movlb	0	; () banked
  7351  0004A0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7352  0004A2  22DA               	addwfc	fsr2h,f,c
  7353  0004A4  0E08               	movlw	8
  7354  0004A6  6EDF               	movwf	indf2,c
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 318: msg_ready = 1;
  7358  0004A8  0100               	movlb	0	; () banked
  7359  0004AA  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7360  0004AC  0E01               	movlw	1
  7361  0004AE  0100               	movlb	0	; () banked
  7362  0004B0  0100               	movlb	0	; () banked
  7363  0004B2  6F95               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7364  0004B4  0100               	movlb	0	; () banked
  7365  0004B6  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7366  0004B8                     L17:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;my_i2c.c: 319: msg_to_send = 1;
  7370  0004B8  0100               	movlb	0	; () banked
  7371  0004BA  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7372  0004BC  0E01               	movlw	1
  7373  0004BE  0100               	movlb	0	; () banked
  7374  0004C0  0100               	movlb	0	; () banked
  7375  0004C2  6F94               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7376  0004C4  0100               	movlb	0	; () banked
  7377  0004C6  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 321: data_read = 0;
  7381  0004C8  0100               	movlb	0	; () banked
  7382  0004CA  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7383  0004CC  0E00               	movlw	0
  7384  0004CE  0100               	movlb	0	; () banked
  7385  0004D0  0100               	movlb	0	; () banked
  7386  0004D2  6F96               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7387  0004D4                     L14:
  7388  0004D4  0100               	movlb	0	; () banked
  7389  0004D6  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7390                           
  7391                           ;my_i2c.c: 322: } else {
  7392  0004D8  D021               	goto	i2l308
  7393  0004DA                     L16:
  7394                           
  7395                           ;my_i2c.c: 325: ic_ptr->status = 0x5;
  7396  0004DA  0100               	movlb	0	; () banked
  7397  0004DC  EE20 F019          	lfsr	2,25
  7398  0004E0  0100               	movlb	0	; () banked
  7399  0004E2  51C9               	movf	_ic_ptr& (0+255),w,b
  7400  0004E4  26D9               	addwf	fsr2l,f,c
  7401  0004E6  0100               	movlb	0	; () banked
  7402  0004E8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7403  0004EA  22DA               	addwfc	fsr2h,f,c
  7404  0004EC  0E05               	movlw	5
  7405  0004EE  D731               	goto	L13
  7406  0004F0                     i2l3758:
  7407                           
  7408                           ; BSR set to: 0
  7409  0004F0  0100               	movlb	0	; () banked
  7410  0004F2  EE20 F019          	lfsr	2,25
  7411  0004F6  0100               	movlb	0	; () banked
  7412  0004F8  51C9               	movf	_ic_ptr& (0+255),w,b
  7413  0004FA  26D9               	addwf	fsr2l,f,c
  7414  0004FC  0100               	movlb	0	; () banked
  7415  0004FE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  000500  22DA               	addwfc	fsr2h,f,c
  7417  000502  50DF               	movf	indf2,w,c
  7418                           
  7419                           ; Switch size 1, requested type "space"
  7420                           ; Number of cases is 4, Range of values is 5 to 8
  7421                           ; switch strategies available:
  7422                           ; Name         Instructions Cycles
  7423                           ; simple_byte           13     7 (average)
  7424                           ;	Chosen strategy is simple_byte
  7425  000504  0A05               	xorlw	5	; case 5
  7426  000506  B4D8               	btfsc	status,2,c
  7427  000508  D63C               	goto	i2l310
  7428  00050A  0A03               	xorlw	3	; case 6
  7429  00050C  B4D8               	btfsc	status,2,c
  7430  00050E  D65B               	goto	i2l314
  7431  000510  0A01               	xorlw	1	; case 7
  7432  000512  B4D8               	btfsc	status,2,c
  7433  000514  D720               	goto	i2l328
  7434  000516  0A0F               	xorlw	15	; case 8
  7435  000518  B4D8               	btfsc	status,2,c
  7436  00051A  D6D1               	goto	i2l3710
  7437  00051C                     i2l308:
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;my_i2c.c: 332: }
  7441                           ;my_i2c.c: 335: if (data_read || data_written) {
  7442  00051C  0100               	movlb	0	; () banked
  7443  00051E  0100               	movlb	0	; () banked
  7444  000520  6796               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7445  000522  D005               	goto	i2l342
  7446                           
  7447                           ; BSR set to: 0
  7448  000524  0100               	movlb	0	; () banked
  7449  000526  0100               	movlb	0	; () banked
  7450  000528  5191               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7451  00052A  B4D8               	btfsc	status,2,c
  7452  00052C  D002               	goto	i2l3764
  7453  00052E                     i2l342:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;my_i2c.c: 337: if (SSPCON1bits.CKP == 0) {
  7457  00052E  A8C6               	btfss	4038,4,c	;volatile
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;my_i2c.c: 338: SSPCON1bits.CKP = 1;
  7461  000530  88C6               	bsf	4038,4,c	;volatile
  7462  000532                     i2l3764:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 339: }
  7466                           ;my_i2c.c: 340: }
  7467                           ;my_i2c.c: 343: if ((ic_ptr->buflen > 22 - 2) && (!msg_ready)) {
  7468  000532  0100               	movlb	0	; () banked
  7469  000534  EE20 F016          	lfsr	2,22
  7470  000538  0100               	movlb	0	; () banked
  7471  00053A  51C9               	movf	_ic_ptr& (0+255),w,b
  7472  00053C  26D9               	addwf	fsr2l,f,c
  7473  00053E  0100               	movlb	0	; () banked
  7474  000540  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  000542  22DA               	addwfc	fsr2h,f,c
  7476  000544  0E14               	movlw	20
  7477  000546  64DF               	cpfsgt	indf2,c
  7478  000548  D024               	goto	i2l3770
  7479                           
  7480                           ; BSR set to: 0
  7481  00054A  0100               	movlb	0	; () banked
  7482  00054C  0100               	movlb	0	; () banked
  7483  00054E  6795               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7484  000550  D020               	goto	i2l3770
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 344: ic_ptr->status = 0x5;
  7488  000552  0100               	movlb	0	; () banked
  7489  000554  EE20 F019          	lfsr	2,25
  7490  000558  0100               	movlb	0	; () banked
  7491  00055A  51C9               	movf	_ic_ptr& (0+255),w,b
  7492  00055C  26D9               	addwf	fsr2l,f,c
  7493  00055E  0100               	movlb	0	; () banked
  7494  000560  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7495  000562  22DA               	addwfc	fsr2h,f,c
  7496  000564  0E05               	movlw	5
  7497  000566  6EDF               	movwf	indf2,c
  7498                           
  7499                           ;my_i2c.c: 345: ic_ptr->error_count++;
  7500  000568  0100               	movlb	0	; () banked
  7501  00056A  EE20 F01B          	lfsr	2,27
  7502  00056E  0100               	movlb	0	; () banked
  7503  000570  51C9               	movf	_ic_ptr& (0+255),w,b
  7504  000572  26D9               	addwf	fsr2l,f,c
  7505  000574  0100               	movlb	0	; () banked
  7506  000576  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7507  000578  22DA               	addwfc	fsr2h,f,c
  7508  00057A  2ADF               	incf	indf2,f,c
  7509                           
  7510                           ;my_i2c.c: 346: ic_ptr->error_code = 0x7;
  7511  00057C  0100               	movlb	0	; () banked
  7512  00057E  EE20 F01A          	lfsr	2,26
  7513  000582  0100               	movlb	0	; () banked
  7514  000584  51C9               	movf	_ic_ptr& (0+255),w,b
  7515  000586  26D9               	addwf	fsr2l,f,c
  7516  000588  0100               	movlb	0	; () banked
  7517  00058A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7518  00058C  22DA               	addwfc	fsr2h,f,c
  7519  00058E  0E07               	movlw	7
  7520  000590  6EDF               	movwf	indf2,c
  7521  000592                     i2l3770:
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;my_i2c.c: 347: }
  7525                           ;my_i2c.c: 349: if (msg_ready) {
  7526  000592  0100               	movlb	0	; () banked
  7527  000594  0100               	movlb	0	; () banked
  7528  000596  5195               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7529  000598  B4D8               	btfsc	status,2,c
  7530  00059A  D044               	goto	i2l3778
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;my_i2c.c: 350: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7534  00059C  0100               	movlb	0	; () banked
  7535  00059E  EE20 F018          	lfsr	2,24
  7536  0005A2  0100               	movlb	0	; () banked
  7537  0005A4  51C9               	movf	_ic_ptr& (0+255),w,b
  7538  0005A6  26D9               	addwf	fsr2l,f,c
  7539  0005A8  0100               	movlb	0	; () banked
  7540  0005AA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7541  0005AC  22DA               	addwfc	fsr2h,f,c
  7542  0005AE  0100               	movlb	0	; () banked
  7543  0005B0  EE10 F016          	lfsr	1,22
  7544  0005B4  0100               	movlb	0	; () banked
  7545  0005B6  51C9               	movf	_ic_ptr& (0+255),w,b
  7546  0005B8  26E1               	addwf	fsr1l,f,c
  7547  0005BA  0100               	movlb	0	; () banked
  7548  0005BC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7549  0005BE  22E2               	addwfc	fsr1h,f,c
  7550  0005C0  50E7               	movf	indf1,w,c
  7551  0005C2  0100               	movlb	0	; () banked
  7552  0005C4  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7553  0005C6  0100               	movlb	0	; () banked
  7554  0005C8  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7555  0005CA  0D01               	mullw	1
  7556  0005CC  50F3               	movf	prodl,w,c
  7557  0005CE  0100               	movlb	0	; () banked
  7558  0005D0  0100               	movlb	0	; () banked
  7559  0005D2  25C9               	addwf	_ic_ptr& (0+255),w,b
  7560  0005D4  6EE1               	movwf	fsr1l,c
  7561  0005D6  50F4               	movf	prodh,w,c
  7562  0005D8  0100               	movlb	0	; () banked
  7563  0005DA  0100               	movlb	0	; () banked
  7564  0005DC  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7565  0005DE  6EE2               	movwf	fsr1h,c
  7566  0005E0  CFDF FFE7          	movff	indf2,indf1
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;my_i2c.c: 351: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 48, (void *) ic_ptr->buffer);
  7570  0005E4  0100               	movlb	0	; () banked
  7571  0005E6  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7572  0005E8  0E30               	movlw	48
  7573  0005EA  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7574  0005EC  0100               	movlb	0	; () banked
  7575  0005EE  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7576  0005F0  0100               	movlb	0	; () banked
  7577  0005F2  C0CA  F03F         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  7578  0005F6  0100               	movlb	0	; () banked
  7579  0005F8  C0C9  F03E         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  7580  0005FC  0100               	movlb	0	; () banked
  7581  0005FE  EE20 F016          	lfsr	2,22
  7582  000602  0100               	movlb	0	; () banked
  7583  000604  51C9               	movf	_ic_ptr& (0+255),w,b
  7584  000606  26D9               	addwf	fsr2l,f,c
  7585  000608  0100               	movlb	0	; () banked
  7586  00060A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7587  00060C  22DA               	addwfc	fsr2h,f,c
  7588  00060E  50DF               	movf	indf2,w,c
  7589  000610  0100               	movlb	0	; () banked
  7590  000612  6F8D               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7591  000614  0100               	movlb	0	; () banked
  7592  000616  298D               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7593  000618  EC22  F011         	call	i2_ToMainHigh_sendmsg
  7594                           
  7595                           ;my_i2c.c: 352: ic_ptr->buflen = 0;
  7596  00061C  0100               	movlb	0	; () banked
  7597  00061E  EE20 F016          	lfsr	2,22
  7598  000622  D045               	goto	L15
  7599  000624                     i2l3778:
  7600                           
  7601                           ; BSR set to: 0
  7602  000624  0100               	movlb	0	; () banked
  7603  000626  EE20 F01B          	lfsr	2,27
  7604  00062A  0100               	movlb	0	; () banked
  7605  00062C  51C9               	movf	_ic_ptr& (0+255),w,b
  7606  00062E  26D9               	addwf	fsr2l,f,c
  7607  000630  0100               	movlb	0	; () banked
  7608  000632  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7609  000634  22DA               	addwfc	fsr2h,f,c
  7610  000636  50DF               	movf	indf2,w,c
  7611  000638  B4D8               	btfsc	status,2,c
  7612  00063A  D041               	goto	i2l3786
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;my_i2c.c: 354: error_buf[0] = ic_ptr->error_count;
  7616  00063C  0100               	movlb	0	; () banked
  7617  00063E  EE20 F01B          	lfsr	2,27
  7618  000642  0100               	movlb	0	; () banked
  7619  000644  51C9               	movf	_ic_ptr& (0+255),w,b
  7620  000646  26D9               	addwf	fsr2l,f,c
  7621  000648  0100               	movlb	0	; () banked
  7622  00064A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7623  00064C  22DA               	addwfc	fsr2h,f,c
  7624  00064E  50DF               	movf	indf2,w,c
  7625  000650  0100               	movlb	0	; () banked
  7626  000652  0100               	movlb	0	; () banked
  7627  000654  6F8E               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7628                           
  7629                           ;my_i2c.c: 355: error_buf[1] = ic_ptr->error_code;
  7630  000656  0100               	movlb	0	; () banked
  7631  000658  EE20 F01A          	lfsr	2,26
  7632  00065C  0100               	movlb	0	; () banked
  7633  00065E  51C9               	movf	_ic_ptr& (0+255),w,b
  7634  000660  26D9               	addwf	fsr2l,f,c
  7635  000662  0100               	movlb	0	; () banked
  7636  000664  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7637  000666  22DA               	addwfc	fsr2h,f,c
  7638  000668  50DF               	movf	indf2,w,c
  7639  00066A  0100               	movlb	0	; () banked
  7640  00066C  0100               	movlb	0	; () banked
  7641  00066E  6F8F               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7642                           
  7643                           ;my_i2c.c: 356: error_buf[2] = ic_ptr->event_count;
  7644  000670  0100               	movlb	0	; () banked
  7645  000672  EE20 F018          	lfsr	2,24
  7646  000676  0100               	movlb	0	; () banked
  7647  000678  51C9               	movf	_ic_ptr& (0+255),w,b
  7648  00067A  26D9               	addwf	fsr2l,f,c
  7649  00067C  0100               	movlb	0	; () banked
  7650  00067E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7651  000680  22DA               	addwfc	fsr2h,f,c
  7652  000682  50DF               	movf	indf2,w,c
  7653  000684  0100               	movlb	0	; () banked
  7654  000686  0100               	movlb	0	; () banked
  7655  000688  6F90               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;my_i2c.c: 357: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7659  00068A  0100               	movlb	0	; () banked
  7660  00068C  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7661  00068E  0E29               	movlw	41
  7662  000690  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7663  000692  0100               	movlb	0	; () banked
  7664  000694  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7665  000696  0100               	movlb	0	; () banked
  7666  000698  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7667  00069A  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  7668  00069C  0100               	movlb	0	; () banked
  7669  00069E  0E8E               	movlw	low i2c_slave_int_handler@error_buf
  7670  0006A0  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  7671  0006A2  0E03               	movlw	3
  7672  0006A4  EC22  F011         	call	i2_ToMainHigh_sendmsg
  7673                           
  7674                           ;my_i2c.c: 358: ic_ptr->error_count = 0;
  7675  0006A8  0100               	movlb	0	; () banked
  7676  0006AA  EE20 F01B          	lfsr	2,27
  7677  0006AE                     L15:
  7678  0006AE  0100               	movlb	0	; () banked
  7679  0006B0  51C9               	movf	_ic_ptr& (0+255),w,b
  7680  0006B2  26D9               	addwf	fsr2l,f,c
  7681  0006B4  0100               	movlb	0	; () banked
  7682  0006B6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7683  0006B8  22DA               	addwfc	fsr2h,f,c
  7684  0006BA  0E00               	movlw	0
  7685  0006BC  6EDF               	movwf	indf2,c
  7686  0006BE                     i2l3786:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;my_i2c.c: 359: }
  7690                           ;my_i2c.c: 360: if (msg_to_send) {
  7691  0006BE  0100               	movlb	0	; () banked
  7692  0006C0  0100               	movlb	0	; () banked
  7693  0006C2  5194               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7694  0006C4  B4D8               	btfsc	status,2,c
  7695  0006C6  0012               	return	
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;my_i2c.c: 363: start_i2c_slave_reply(22, 0);
  7699  0006C8  0E00               	movlw	0
  7700  0006CA  6E33               	movwf	i2start_i2c_slave_reply@msg+1,c
  7701  0006CC  0E00               	movlw	0
  7702  0006CE  6E32               	movwf	i2start_i2c_slave_reply@msg,c
  7703  0006D0  0E16               	movlw	22
  7704  0006D2  EC43  F008         	call	i2_start_i2c_slave_reply
  7705                           
  7706                           ;my_i2c.c: 364: msg_to_send = 0;
  7707  0006D6  0100               	movlb	0	; () banked
  7708  0006D8  6F8C               	movwf	??_i2c_slave_int_handler& (0+255),b
  7709  0006DA  0E00               	movlw	0
  7710  0006DC  0100               	movlb	0	; () banked
  7711  0006DE  0100               	movlb	0	; () banked
  7712  0006E0  6F94               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7713  0006E2  0100               	movlb	0	; () banked
  7714  0006E4  518C               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7715  0006E6  0012               	return	
  7716  0006E8                     __end_of_i2c_slave_int_handler:
  7717                           	opt stack 0
  7718                           pclatu	equ	0xFFB
  7719                           pclath	equ	0xFFA
  7720                           tblptru	equ	0xFF8
  7721                           tblptrh	equ	0xFF7
  7722                           tblptrl	equ	0xFF6
  7723                           tablat	equ	0xFF5
  7724                           prodh	equ	0xFF4
  7725                           prodl	equ	0xFF3
  7726                           intcon	equ	0xFF2
  7727                           postinc0	equ	0xFEE
  7728                           fsr0h	equ	0xFEA
  7729                           fsr0l	equ	0xFE9
  7730                           wreg	equ	0xFE8
  7731                           indf1	equ	0xFE7
  7732                           fsr1h	equ	0xFE2
  7733                           fsr1l	equ	0xFE1
  7734                           bsr	equ	0xFE0
  7735                           indf2	equ	0xFDF
  7736                           postinc2	equ	0xFDE
  7737                           postdec2	equ	0xFDD
  7738                           fsr2h	equ	0xFDA
  7739                           fsr2l	equ	0xFD9
  7740                           status	equ	0xFD8
  7741                           
  7742 ;; *************** function i2_start_i2c_slave_reply *****************
  7743 ;; Defined at:
  7744 ;;		line 122 in file "source/my_i2c.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  length          1    wreg     unsigned char 
  7747 ;;  msg             2   49[COMRAM] PTR unsigned char 
  7748 ;;		 -> NULL(0), main@msgbuffer(23), 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  length          1   54[COMRAM] unsigned char 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;		None               void
  7753 ;; Registers used:
  7754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7760 ;;      Params:         2       0       0       0       0
  7761 ;;      Locals:         1       0       0       0       0
  7762 ;;      Temps:          3       0       0       0       0
  7763 ;;      Totals:         6       0       0       0       0
  7764 ;;Total ram usage:        6 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_i2c_slave_int_handler
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text43
  7774  001086                     __ptext43:
  7775                           	opt stack 0
  7776  001086                     i2_start_i2c_slave_reply:
  7777                           	opt stack 17
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;incstack = 0
  7781                           ;i2start_i2c_slave_reply@length stored from wreg
  7782  001086  CFE8 F037          	movff	wreg,i2start_i2c_slave_reply@length
  7783                           
  7784                           ;my_i2c.c: 126: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  7785  00108A  0100               	movlb	0	; () banked
  7786  00108C  EE20 F032          	lfsr	2,50
  7787  001090  0100               	movlb	0	; () banked
  7788  001092  51C9               	movf	_ic_ptr& (0+255),w,b
  7789  001094  26D9               	addwf	fsr2l,f,c
  7790  001096  0100               	movlb	0	; () banked
  7791  001098  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7792  00109A  22DA               	addwfc	fsr2h,f,c
  7793  00109C  0E00               	movlw	0
  7794  00109E  6EDF               	movwf	indf2,c
  7795  0010A0  D08F               	goto	i2l3376
  7796  0010A2                     i2l3364:
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;my_i2c.c: 129: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  7800  0010A2  0100               	movlb	0	; () banked
  7801  0010A4  EE20 F032          	lfsr	2,50
  7802  0010A8  0100               	movlb	0	; () banked
  7803  0010AA  51C9               	movf	_ic_ptr& (0+255),w,b
  7804  0010AC  26D9               	addwf	fsr2l,f,c
  7805  0010AE  0100               	movlb	0	; () banked
  7806  0010B0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7807  0010B2  22DA               	addwfc	fsr2h,f,c
  7808  0010B4  50DF               	movf	indf2,w,c
  7809  0010B6  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7810  0010B8  0100               	movlb	0	; () banked
  7811  0010BA  EE20 F04B          	lfsr	2,75
  7812  0010BE  0100               	movlb	0	; () banked
  7813  0010C0  51C9               	movf	_ic_ptr& (0+255),w,b
  7814  0010C2  26D9               	addwf	fsr2l,f,c
  7815  0010C4  0100               	movlb	0	; () banked
  7816  0010C6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7817  0010C8  22DA               	addwfc	fsr2h,f,c
  7818  0010CA  50DF               	movf	indf2,w,c
  7819  0010CC  5C34               	subwf	??i2_start_i2c_slave_reply,w,c
  7820  0010CE  B0D8               	btfsc	status,0,c
  7821  0010D0  D028               	goto	i2l3368
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;my_i2c.c: 130: {
  7825                           ;my_i2c.c: 131: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  7826  0010D2  0100               	movlb	0	; () banked
  7827  0010D4  EE20 F032          	lfsr	2,50
  7828  0010D8  0100               	movlb	0	; () banked
  7829  0010DA  51C9               	movf	_ic_ptr& (0+255),w,b
  7830  0010DC  26D9               	addwf	fsr2l,f,c
  7831  0010DE  0100               	movlb	0	; () banked
  7832  0010E0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7833  0010E2  22DA               	addwfc	fsr2h,f,c
  7834  0010E4  50DF               	movf	indf2,w,c
  7835  0010E6  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7836  0010E8  5034               	movf	??i2_start_i2c_slave_reply,w,c
  7837  0010EA  0D01               	mullw	1
  7838  0010EC  0E35               	movlw	53
  7839  0010EE  26F3               	addwf	prodl,f,c
  7840  0010F0  0E00               	movlw	0
  7841  0010F2  22F4               	addwfc	prodh,f,c
  7842  0010F4  50F3               	movf	prodl,w,c
  7843  0010F6  0100               	movlb	0	; () banked
  7844  0010F8  0100               	movlb	0	; () banked
  7845  0010FA  25C9               	addwf	_ic_ptr& (0+255),w,b
  7846  0010FC  6ED9               	movwf	fsr2l,c
  7847  0010FE  50F4               	movf	prodh,w,c
  7848  001100  0100               	movlb	0	; () banked
  7849  001102  0100               	movlb	0	; () banked
  7850  001104  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7851  001106  6EDA               	movwf	fsr2h,c
  7852  001108  0100               	movlb	0	; () banked
  7853  00110A  EE10 F032          	lfsr	1,50
  7854  00110E  0100               	movlb	0	; () banked
  7855  001110  51C9               	movf	_ic_ptr& (0+255),w,b
  7856  001112  26E1               	addwf	fsr1l,f,c
  7857  001114  0100               	movlb	0	; () banked
  7858  001116  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7859  001118  22E2               	addwfc	fsr1h,f,c
  7860  00111A  50E7               	movf	indf1,w,c
  7861  00111C  6E35               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7862  00111E  5035               	movf	??i2_start_i2c_slave_reply+1,w,c
  7863  001120  D034               	goto	L20
  7864  001122                     i2l3368:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;my_i2c.c: 133: else if(ic_ptr->sendBufLen != 0)
  7868  001122  0100               	movlb	0	; () banked
  7869  001124  EE20 F04B          	lfsr	2,75
  7870  001128  0100               	movlb	0	; () banked
  7871  00112A  51C9               	movf	_ic_ptr& (0+255),w,b
  7872  00112C  26D9               	addwf	fsr2l,f,c
  7873  00112E  0100               	movlb	0	; () banked
  7874  001130  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7875  001132  22DA               	addwfc	fsr2h,f,c
  7876  001134  50DF               	movf	indf2,w,c
  7877  001136  B4D8               	btfsc	status,2,c
  7878  001138  D00B               	goto	i2l3372
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;my_i2c.c: 134: {
  7882                           ;my_i2c.c: 135: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  7883  00113A  0100               	movlb	0	; () banked
  7884  00113C  EE20 F04B          	lfsr	2,75
  7885  001140  0100               	movlb	0	; () banked
  7886  001142  51C9               	movf	_ic_ptr& (0+255),w,b
  7887  001144  26D9               	addwf	fsr2l,f,c
  7888  001146  0100               	movlb	0	; () banked
  7889  001148  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7890  00114A  22DA               	addwfc	fsr2h,f,c
  7891  00114C  50DF               	movf	indf2,w,c
  7892  00114E  D001               	goto	L19
  7893  001150                     i2l3372:
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;my_i2c.c: 137: else
  7897                           ;my_i2c.c: 138: {
  7898                           ;my_i2c.c: 139: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  7899  001150  5037               	movf	i2start_i2c_slave_reply@length,w,c
  7900  001152                     L19:
  7901  001152  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7902  001154  6A35               	clrf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  7903  001156  0E34               	movlw	52
  7904  001158  2634               	addwf	??i2_start_i2c_slave_reply,f,c
  7905  00115A  0E00               	movlw	0
  7906  00115C  2235               	addwfc	??i2_start_i2c_slave_reply+1,f,c
  7907  00115E  5034               	movf	??i2_start_i2c_slave_reply,w,c
  7908  001160  0100               	movlb	0	; () banked
  7909  001162  0100               	movlb	0	; () banked
  7910  001164  25C9               	addwf	_ic_ptr& (0+255),w,b
  7911  001166  6ED9               	movwf	fsr2l,c
  7912  001168  5035               	movf	??i2_start_i2c_slave_reply+1,w,c
  7913  00116A  0100               	movlb	0	; () banked
  7914  00116C  0100               	movlb	0	; () banked
  7915  00116E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7916  001170  6EDA               	movwf	fsr2h,c
  7917  001172  0100               	movlb	0	; () banked
  7918  001174  EE10 F032          	lfsr	1,50
  7919  001178  0100               	movlb	0	; () banked
  7920  00117A  51C9               	movf	_ic_ptr& (0+255),w,b
  7921  00117C  26E1               	addwf	fsr1l,f,c
  7922  00117E  0100               	movlb	0	; () banked
  7923  001180  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7924  001182  22E2               	addwfc	fsr1h,f,c
  7925  001184  50E7               	movf	indf1,w,c
  7926  001186  6E36               	movwf	(??i2_start_i2c_slave_reply+2)& (0+255),c
  7927  001188  5036               	movf	??i2_start_i2c_slave_reply+2,w,c
  7928  00118A                     L20:
  7929  00118A  0D01               	mullw	1
  7930  00118C  0E1C               	movlw	28
  7931  00118E  26F3               	addwf	prodl,f,c
  7932  001190  0E00               	movlw	0
  7933  001192  22F4               	addwfc	prodh,f,c
  7934  001194  50F3               	movf	prodl,w,c
  7935  001196  0100               	movlb	0	; () banked
  7936  001198  0100               	movlb	0	; () banked
  7937  00119A  25C9               	addwf	_ic_ptr& (0+255),w,b
  7938  00119C  6EE1               	movwf	fsr1l,c
  7939  00119E  50F4               	movf	prodh,w,c
  7940  0011A0  0100               	movlb	0	; () banked
  7941  0011A2  0100               	movlb	0	; () banked
  7942  0011A4  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7943  0011A6  6EE2               	movwf	fsr1h,c
  7944  0011A8  CFDF FFE7          	movff	indf2,indf1
  7945                           
  7946                           ; BSR set to: 0
  7947                           
  7948                           ; BSR set to: 0
  7949                           
  7950                           ; BSR set to: 0
  7951  0011AC  0100               	movlb	0	; () banked
  7952  0011AE  EE20 F032          	lfsr	2,50
  7953  0011B2  0100               	movlb	0	; () banked
  7954  0011B4  51C9               	movf	_ic_ptr& (0+255),w,b
  7955  0011B6  26D9               	addwf	fsr2l,f,c
  7956  0011B8  0100               	movlb	0	; () banked
  7957  0011BA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7958  0011BC  22DA               	addwfc	fsr2h,f,c
  7959  0011BE  2ADF               	incf	indf2,f,c
  7960  0011C0                     i2l3376:
  7961                           
  7962                           ; BSR set to: 0
  7963  0011C0  0100               	movlb	0	; () banked
  7964  0011C2  EE20 F032          	lfsr	2,50
  7965  0011C6  0100               	movlb	0	; () banked
  7966  0011C8  51C9               	movf	_ic_ptr& (0+255),w,b
  7967  0011CA  26D9               	addwf	fsr2l,f,c
  7968  0011CC  0100               	movlb	0	; () banked
  7969  0011CE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7970  0011D0  22DA               	addwfc	fsr2h,f,c
  7971  0011D2  50DF               	movf	indf2,w,c
  7972  0011D4  6E34               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7973  0011D6  5037               	movf	i2start_i2c_slave_reply@length,w,c
  7974  0011D8  5C34               	subwf	??i2_start_i2c_slave_reply,w,c
  7975  0011DA  A0D8               	btfss	status,0,c
  7976  0011DC  D762               	goto	i2l3364
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;my_i2c.c: 140: }
  7980                           ;my_i2c.c: 142: }
  7981                           ;my_i2c.c: 143: ic_ptr->sendBufLen =0;
  7982                           
  7983                           ; BSR set to: 0
  7984  0011DE  0100               	movlb	0	; () banked
  7985  0011E0  EE20 F04B          	lfsr	2,75
  7986  0011E4  0100               	movlb	0	; () banked
  7987  0011E6  51C9               	movf	_ic_ptr& (0+255),w,b
  7988  0011E8  26D9               	addwf	fsr2l,f,c
  7989  0011EA  0100               	movlb	0	; () banked
  7990  0011EC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7991  0011EE  22DA               	addwfc	fsr2h,f,c
  7992  0011F0  0E00               	movlw	0
  7993  0011F2  6EDF               	movwf	indf2,c
  7994                           
  7995                           ;my_i2c.c: 144: ic_ptr->outbuflen = length;
  7996  0011F4  0100               	movlb	0	; () banked
  7997  0011F6  EE20 F032          	lfsr	2,50
  7998  0011FA  0100               	movlb	0	; () banked
  7999  0011FC  51C9               	movf	_ic_ptr& (0+255),w,b
  8000  0011FE  26D9               	addwf	fsr2l,f,c
  8001  001200  0100               	movlb	0	; () banked
  8002  001202  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8003  001204  22DA               	addwfc	fsr2h,f,c
  8004  001206  C037  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  8005                           
  8006                           ;my_i2c.c: 145: ic_ptr->outbufind = 1;
  8007  00120A  0100               	movlb	0	; () banked
  8008  00120C  EE20 F033          	lfsr	2,51
  8009  001210  0100               	movlb	0	; () banked
  8010  001212  51C9               	movf	_ic_ptr& (0+255),w,b
  8011  001214  26D9               	addwf	fsr2l,f,c
  8012  001216  0100               	movlb	0	; () banked
  8013  001218  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8014  00121A  22DA               	addwfc	fsr2h,f,c
  8015  00121C  0E01               	movlw	1
  8016  00121E  6EDF               	movwf	indf2,c
  8017                           
  8018                           ;my_i2c.c: 148: SSPBUF = ic_ptr->outbuffer[0];
  8019  001220  0100               	movlb	0	; () banked
  8020  001222  EE20 F01C          	lfsr	2,28
  8021  001226  0100               	movlb	0	; () banked
  8022  001228  51C9               	movf	_ic_ptr& (0+255),w,b
  8023  00122A  26D9               	addwf	fsr2l,f,c
  8024  00122C  0100               	movlb	0	; () banked
  8025  00122E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8026  001230  22DA               	addwfc	fsr2h,f,c
  8027  001232  50DF               	movf	indf2,w,c
  8028  001234  6EC9               	movwf	4041,c	;volatile
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;my_i2c.c: 151: SSPCON1bits.CKP = 1;
  8032  001236  88C6               	bsf	4038,4,c	;volatile
  8033                           
  8034                           ; BSR set to: 0
  8035  001238  0012               	return	
  8036  00123A                     __end_ofi2_start_i2c_slave_reply:
  8037                           	opt stack 0
  8038                           pclatu	equ	0xFFB
  8039                           pclath	equ	0xFFA
  8040                           tblptru	equ	0xFF8
  8041                           tblptrh	equ	0xFF7
  8042                           tblptrl	equ	0xFF6
  8043                           tablat	equ	0xFF5
  8044                           prodh	equ	0xFF4
  8045                           prodl	equ	0xFF3
  8046                           intcon	equ	0xFF2
  8047                           postinc0	equ	0xFEE
  8048                           fsr0h	equ	0xFEA
  8049                           fsr0l	equ	0xFE9
  8050                           wreg	equ	0xFE8
  8051                           indf1	equ	0xFE7
  8052                           fsr1h	equ	0xFE2
  8053                           fsr1l	equ	0xFE1
  8054                           bsr	equ	0xFE0
  8055                           indf2	equ	0xFDF
  8056                           postinc2	equ	0xFDE
  8057                           postdec2	equ	0xFDD
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function _handle_start *****************
  8063 ;; Defined at:
  8064 ;;		line 157 in file "source/my_i2c.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  data_read       1    wreg     unsigned char 
  8067 ;; Auto vars:     Size  Location     Type
  8068 ;;  data_read       1   49[COMRAM] unsigned char 
  8069 ;; Return value:  Size  Location     Type
  8070 ;;		None               void
  8071 ;; Registers used:
  8072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8073 ;; Tracked objects:
  8074 ;;		On entry : 0/0
  8075 ;;		On exit  : 0/0
  8076 ;;		Unchanged: 0/0
  8077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8078 ;;      Params:         0       0       0       0       0
  8079 ;;      Locals:         1       0       0       0       0
  8080 ;;      Temps:          0       0       0       0       0
  8081 ;;      Totals:         1       0       0       0       0
  8082 ;;Total ram usage:        1 bytes
  8083 ;; Hardware stack levels used:    1
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_i2c_slave_int_handler
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text44
  8092  001954                     __ptext44:
  8093                           	opt stack 0
  8094  001954                     _handle_start:
  8095                           	opt stack 17
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;incstack = 0
  8099                           ;handle_start@data_read stored from wreg
  8100  001954  CFE8 F032          	movff	wreg,handle_start@data_read
  8101                           
  8102                           ;my_i2c.c: 158: ic_ptr->event_count = 1;
  8103  001958  0100               	movlb	0	; () banked
  8104  00195A  EE20 F018          	lfsr	2,24
  8105  00195E  0100               	movlb	0	; () banked
  8106  001960  51C9               	movf	_ic_ptr& (0+255),w,b
  8107  001962  26D9               	addwf	fsr2l,f,c
  8108  001964  0100               	movlb	0	; () banked
  8109  001966  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8110  001968  22DA               	addwfc	fsr2h,f,c
  8111  00196A  0E01               	movlw	1
  8112  00196C  6EDF               	movwf	indf2,c
  8113                           
  8114                           ;my_i2c.c: 159: ic_ptr->buflen = 0;
  8115  00196E  0100               	movlb	0	; () banked
  8116  001970  EE20 F016          	lfsr	2,22
  8117  001974  0100               	movlb	0	; () banked
  8118  001976  51C9               	movf	_ic_ptr& (0+255),w,b
  8119  001978  26D9               	addwf	fsr2l,f,c
  8120  00197A  0100               	movlb	0	; () banked
  8121  00197C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8122  00197E  22DA               	addwfc	fsr2h,f,c
  8123  001980  0E00               	movlw	0
  8124  001982  6EDF               	movwf	indf2,c
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;my_i2c.c: 161: if (data_read) {
  8128  001984  5032               	movf	handle_start@data_read,w,c
  8129  001986  B4D8               	btfsc	status,2,c
  8130  001988  D03D               	goto	i2l2972
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 1) {
  8134  00198A  AAC7               	btfss	4039,5,c	;volatile
  8135  00198C  D021               	goto	i2l290
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;my_i2c.c: 165: ic_ptr->status = 0x5;
  8139  00198E  0100               	movlb	0	; () banked
  8140  001990  EE20 F019          	lfsr	2,25
  8141  001994  0100               	movlb	0	; () banked
  8142  001996  51C9               	movf	_ic_ptr& (0+255),w,b
  8143  001998  26D9               	addwf	fsr2l,f,c
  8144  00199A  0100               	movlb	0	; () banked
  8145  00199C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8146  00199E  22DA               	addwfc	fsr2h,f,c
  8147  0019A0  0E05               	movlw	5
  8148  0019A2  6EDF               	movwf	indf2,c
  8149                           
  8150                           ;my_i2c.c: 166: ic_ptr->error_count++;
  8151  0019A4  0100               	movlb	0	; () banked
  8152  0019A6  EE20 F01B          	lfsr	2,27
  8153  0019AA  0100               	movlb	0	; () banked
  8154  0019AC  51C9               	movf	_ic_ptr& (0+255),w,b
  8155  0019AE  26D9               	addwf	fsr2l,f,c
  8156  0019B0  0100               	movlb	0	; () banked
  8157  0019B2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8158  0019B4  22DA               	addwfc	fsr2h,f,c
  8159  0019B6  2ADF               	incf	indf2,f,c
  8160                           
  8161                           ;my_i2c.c: 167: ic_ptr->error_code = 0x5;
  8162  0019B8  0100               	movlb	0	; () banked
  8163  0019BA  EE20 F01A          	lfsr	2,26
  8164  0019BE  0100               	movlb	0	; () banked
  8165  0019C0  51C9               	movf	_ic_ptr& (0+255),w,b
  8166  0019C2  26D9               	addwf	fsr2l,f,c
  8167  0019C4  0100               	movlb	0	; () banked
  8168  0019C6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8169  0019C8  22DA               	addwfc	fsr2h,f,c
  8170  0019CA  0E05               	movlw	5
  8171  0019CC  6EDF               	movwf	indf2,c
  8172                           
  8173                           ;my_i2c.c: 168: } else {
  8174  0019CE  0012               	return	
  8175  0019D0                     i2l290:
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;my_i2c.c: 169: if (SSPSTATbits.R_W == 1) {
  8179  0019D0  A4C7               	btfss	4039,2,c	;volatile
  8180  0019D2  D00C               	goto	i2l2970
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;my_i2c.c: 170: ic_ptr->status = 0x8;
  8184  0019D4  0100               	movlb	0	; () banked
  8185  0019D6  EE20 F019          	lfsr	2,25
  8186  0019DA  0100               	movlb	0	; () banked
  8187  0019DC  51C9               	movf	_ic_ptr& (0+255),w,b
  8188  0019DE  26D9               	addwf	fsr2l,f,c
  8189  0019E0  0100               	movlb	0	; () banked
  8190  0019E2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8191  0019E4  22DA               	addwfc	fsr2h,f,c
  8192  0019E6  0E08               	movlw	8
  8193  0019E8  6EDF               	movwf	indf2,c
  8194                           
  8195                           ;my_i2c.c: 171: } else {
  8196  0019EA  0012               	return	
  8197  0019EC                     i2l2970:
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;my_i2c.c: 172: ic_ptr->status = 0x7;
  8201  0019EC  0100               	movlb	0	; () banked
  8202  0019EE  EE20 F019          	lfsr	2,25
  8203  0019F2  0100               	movlb	0	; () banked
  8204  0019F4  51C9               	movf	_ic_ptr& (0+255),w,b
  8205  0019F6  26D9               	addwf	fsr2l,f,c
  8206  0019F8  0100               	movlb	0	; () banked
  8207  0019FA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8208  0019FC  22DA               	addwfc	fsr2h,f,c
  8209  0019FE  0E07               	movlw	7
  8210  001A00  6EDF               	movwf	indf2,c
  8211  001A02  0012               	return	
  8212  001A04                     i2l2972:
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;my_i2c.c: 176: ic_ptr->status = 0x6;
  8216  001A04  0100               	movlb	0	; () banked
  8217  001A06  EE20 F019          	lfsr	2,25
  8218  001A0A  0100               	movlb	0	; () banked
  8219  001A0C  51C9               	movf	_ic_ptr& (0+255),w,b
  8220  001A0E  26D9               	addwf	fsr2l,f,c
  8221  001A10  0100               	movlb	0	; () banked
  8222  001A12  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8223  001A14  22DA               	addwfc	fsr2h,f,c
  8224  001A16  0E06               	movlw	6
  8225  001A18  6EDF               	movwf	indf2,c
  8226  001A1A  0012               	return	
  8227  001A1C                     __end_of_handle_start:
  8228                           	opt stack 0
  8229                           pclatu	equ	0xFFB
  8230                           pclath	equ	0xFFA
  8231                           tblptru	equ	0xFF8
  8232                           tblptrh	equ	0xFF7
  8233                           tblptrl	equ	0xFF6
  8234                           tablat	equ	0xFF5
  8235                           prodh	equ	0xFF4
  8236                           prodl	equ	0xFF3
  8237                           intcon	equ	0xFF2
  8238                           postinc0	equ	0xFEE
  8239                           fsr0h	equ	0xFEA
  8240                           fsr0l	equ	0xFE9
  8241                           wreg	equ	0xFE8
  8242                           indf1	equ	0xFE7
  8243                           fsr1h	equ	0xFE2
  8244                           fsr1l	equ	0xFE1
  8245                           bsr	equ	0xFE0
  8246                           indf2	equ	0xFDF
  8247                           postinc2	equ	0xFDE
  8248                           postdec2	equ	0xFDD
  8249                           fsr2h	equ	0xFDA
  8250                           fsr2l	equ	0xFD9
  8251                           status	equ	0xFD8
  8252                           
  8253 ;; *************** function _i2c_master_int_handler *****************
  8254 ;; Defined at:
  8255 ;;		line 441 in file "source/my_i2c.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;		None               void
  8262 ;; Registers used:
  8263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8269 ;;      Params:         0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0
  8271 ;;      Temps:          0       1       0       0       0
  8272 ;;      Totals:         0       1       0       0       0
  8273 ;;Total ram usage:        1 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    3
  8276 ;; This function calls:
  8277 ;;		i2_ToMainHigh_sendmsg
  8278 ;; This function is called by:
  8279 ;;		_i2c_int_handler
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text45
  8284  0006E8                     __ptext45:
  8285                           	opt stack 0
  8286  0006E8                     _i2c_master_int_handler:
  8287                           	opt stack 15
  8288                           
  8289                           ;my_i2c.c: 442: switch (ic_ptr->status){
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;incstack = 0
  8293  0006E8  D268               	goto	i2l3650
  8294  0006EA                     i2l3550:
  8295                           
  8296                           ;my_i2c.c: 445: ic_ptr->status = 0x11;
  8297  0006EA  0100               	movlb	0	; () banked
  8298  0006EC  EE20 F019          	lfsr	2,25
  8299  0006F0  0100               	movlb	0	; () banked
  8300  0006F2  51C9               	movf	_ic_ptr& (0+255),w,b
  8301  0006F4  26D9               	addwf	fsr2l,f,c
  8302  0006F6  0100               	movlb	0	; () banked
  8303  0006F8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8304  0006FA  22DA               	addwfc	fsr2h,f,c
  8305  0006FC  0E11               	movlw	17
  8306  0006FE  6EDF               	movwf	indf2,c
  8307                           
  8308                           ;my_i2c.c: 446: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  8309  000700  0100               	movlb	0	; () banked
  8310  000702  EE20 F034          	lfsr	2,52
  8311  000706  0100               	movlb	0	; () banked
  8312  000708  51C9               	movf	_ic_ptr& (0+255),w,b
  8313  00070A  26D9               	addwf	fsr2l,f,c
  8314  00070C  0100               	movlb	0	; () banked
  8315  00070E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8316  000710  22DA               	addwfc	fsr2h,f,c
  8317  000712  50DF               	movf	indf2,w,c
  8318  000714  0100               	movlb	0	; () banked
  8319  000716  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8320  000718  0100               	movlb	0	; () banked
  8321  00071A  90D8               	bcf	status,0,c
  8322  00071C  358C               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  8323  00071E  0BFE               	andlw	254
  8324  000720  6EC9               	movwf	4041,c	;volatile
  8325                           
  8326                           ;my_i2c.c: 447: break;
  8327  000722  0012               	return	
  8328  000724                     i2l361:
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;my_i2c.c: 450: if (SSPCON2bits.ACKSTAT == 0) {
  8332  000724  BCC5               	btfsc	4037,6,c	;volatile
  8333  000726  D074               	goto	i2l3568
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;my_i2c.c: 451: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8337  000728  0100               	movlb	0	; () banked
  8338  00072A  EE20 F033          	lfsr	2,51
  8339  00072E  0100               	movlb	0	; () banked
  8340  000730  51C9               	movf	_ic_ptr& (0+255),w,b
  8341  000732  26D9               	addwf	fsr2l,f,c
  8342  000734  0100               	movlb	0	; () banked
  8343  000736  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8344  000738  22DA               	addwfc	fsr2h,f,c
  8345  00073A  50DF               	movf	indf2,w,c
  8346  00073C  0100               	movlb	0	; () banked
  8347  00073E  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8348  000740  0100               	movlb	0	; () banked
  8349  000742  EE20 F032          	lfsr	2,50
  8350  000746  0100               	movlb	0	; () banked
  8351  000748  51C9               	movf	_ic_ptr& (0+255),w,b
  8352  00074A  26D9               	addwf	fsr2l,f,c
  8353  00074C  0100               	movlb	0	; () banked
  8354  00074E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8355  000750  22DA               	addwfc	fsr2h,f,c
  8356  000752  50DF               	movf	indf2,w,c
  8357  000754  0100               	movlb	0	; () banked
  8358  000756  5D8C               	subwf	??_i2c_master_int_handler& (0+255),w,b
  8359  000758  B0D8               	btfsc	status,0,c
  8360  00075A  D035               	goto	i2l3560
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;my_i2c.c: 452: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8364  00075C  0100               	movlb	0	; () banked
  8365  00075E  EE20 F033          	lfsr	2,51
  8366  000762  0100               	movlb	0	; () banked
  8367  000764  51C9               	movf	_ic_ptr& (0+255),w,b
  8368  000766  26D9               	addwf	fsr2l,f,c
  8369  000768  0100               	movlb	0	; () banked
  8370  00076A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8371  00076C  22DA               	addwfc	fsr2h,f,c
  8372  00076E  50DF               	movf	indf2,w,c
  8373  000770  0100               	movlb	0	; () banked
  8374  000772  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8375  000774  0100               	movlb	0	; () banked
  8376  000776  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8377  000778  0D01               	mullw	1
  8378  00077A  0E1C               	movlw	28
  8379  00077C  26F3               	addwf	prodl,f,c
  8380  00077E  0E00               	movlw	0
  8381  000780  22F4               	addwfc	prodh,f,c
  8382  000782  50F3               	movf	prodl,w,c
  8383  000784  0100               	movlb	0	; () banked
  8384  000786  0100               	movlb	0	; () banked
  8385  000788  25C9               	addwf	_ic_ptr& (0+255),w,b
  8386  00078A  6ED9               	movwf	fsr2l,c
  8387  00078C  50F4               	movf	prodh,w,c
  8388  00078E  0100               	movlb	0	; () banked
  8389  000790  0100               	movlb	0	; () banked
  8390  000792  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8391  000794  6EDA               	movwf	fsr2h,c
  8392  000796  50DF               	movf	indf2,w,c
  8393  000798  6EC9               	movwf	4041,c	;volatile
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;my_i2c.c: 453: ic_ptr->outbufind++;
  8397  00079A  0100               	movlb	0	; () banked
  8398  00079C  EE20 F033          	lfsr	2,51
  8399  0007A0  0100               	movlb	0	; () banked
  8400  0007A2  51C9               	movf	_ic_ptr& (0+255),w,b
  8401  0007A4  26D9               	addwf	fsr2l,f,c
  8402  0007A6  0100               	movlb	0	; () banked
  8403  0007A8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8404  0007AA  22DA               	addwfc	fsr2h,f,c
  8405  0007AC  2ADF               	incf	indf2,f,c
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;my_i2c.c: 454: ic_ptr->status = 0x12;
  8409  0007AE  0100               	movlb	0	; () banked
  8410  0007B0  EE20 F019          	lfsr	2,25
  8411  0007B4  0100               	movlb	0	; () banked
  8412  0007B6  51C9               	movf	_ic_ptr& (0+255),w,b
  8413  0007B8  26D9               	addwf	fsr2l,f,c
  8414  0007BA  0100               	movlb	0	; () banked
  8415  0007BC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8416  0007BE  22DA               	addwfc	fsr2h,f,c
  8417  0007C0  0E12               	movlw	18
  8418  0007C2  6EDF               	movwf	indf2,c
  8419                           
  8420                           ;my_i2c.c: 455: }
  8421  0007C4  0012               	return	
  8422  0007C6                     i2l3560:
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;my_i2c.c: 456: else {
  8426                           ;my_i2c.c: 457: ToMainHigh_sendmsg(0, 43, 0);
  8427  0007C6  0100               	movlb	0	; () banked
  8428  0007C8  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8429  0007CA  0E2B               	movlw	43
  8430  0007CC  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8431  0007CE  0100               	movlb	0	; () banked
  8432  0007D0  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8433  0007D2  0E00               	movlw	0
  8434  0007D4  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8435  0007D6  0E00               	movlw	0
  8436  0007D8  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8437  0007DA  0E00               	movlw	0
  8438  0007DC  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8439                           
  8440                           ;my_i2c.c: 458: ic_ptr->outbuflen = 0;
  8441  0007E0  0100               	movlb	0	; () banked
  8442  0007E2  EE20 F032          	lfsr	2,50
  8443  0007E6  0100               	movlb	0	; () banked
  8444  0007E8  51C9               	movf	_ic_ptr& (0+255),w,b
  8445  0007EA  26D9               	addwf	fsr2l,f,c
  8446  0007EC  0100               	movlb	0	; () banked
  8447  0007EE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8448  0007F0  22DA               	addwfc	fsr2h,f,c
  8449  0007F2  0E00               	movlw	0
  8450  0007F4  6EDF               	movwf	indf2,c
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;my_i2c.c: 459: ic_ptr->status = 0x5;
  8454  0007F6  0100               	movlb	0	; () banked
  8455  0007F8  EE20 F019          	lfsr	2,25
  8456  0007FC  0100               	movlb	0	; () banked
  8457  0007FE  51C9               	movf	_ic_ptr& (0+255),w,b
  8458  000800  26D9               	addwf	fsr2l,f,c
  8459  000802  0100               	movlb	0	; () banked
  8460  000804  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8461  000806  22DA               	addwfc	fsr2h,f,c
  8462  000808  0E05               	movlw	5
  8463  00080A  6EDF               	movwf	indf2,c
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;my_i2c.c: 460: SSPCON2bits.PEN = 1;
  8467  00080C  84C5               	bsf	4037,2,c	;volatile
  8468  00080E  0012               	return	
  8469  000810                     i2l3568:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;my_i2c.c: 463: else {
  8473                           ;my_i2c.c: 464: ToMainHigh_sendmsg(0, 44, 0);
  8474  000810  0100               	movlb	0	; () banked
  8475  000812  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8476  000814  0E2C               	movlw	44
  8477  000816  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8478  000818  0100               	movlb	0	; () banked
  8479  00081A  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8480  00081C  0E00               	movlw	0
  8481  00081E  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8482  000820  0E00               	movlw	0
  8483  000822  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8484  000824  0E00               	movlw	0
  8485  000826  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8486                           
  8487                           ;my_i2c.c: 465: ic_ptr->status = 0x5;
  8488  00082A  0100               	movlb	0	; () banked
  8489  00082C  EE20 F019          	lfsr	2,25
  8490  000830  0100               	movlb	0	; () banked
  8491  000832  51C9               	movf	_ic_ptr& (0+255),w,b
  8492  000834  26D9               	addwf	fsr2l,f,c
  8493  000836  0100               	movlb	0	; () banked
  8494  000838  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8495  00083A  22DA               	addwfc	fsr2h,f,c
  8496  00083C  0E05               	movlw	5
  8497  00083E  6EDF               	movwf	indf2,c
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;my_i2c.c: 466: SSPCON2bits.PEN = 1;
  8501  000840  84C5               	bsf	4037,2,c	;volatile
  8502  000842  0012               	return	
  8503  000844                     i2l366:
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;my_i2c.c: 471: if (SSPCON2bits.ACKSTAT == 1) {
  8507  000844  ACC5               	btfss	4037,6,c	;volatile
  8508  000846  D00D               	goto	i2l3578
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;my_i2c.c: 472: ic_ptr->status = 0x13;
  8512  000848  0100               	movlb	0	; () banked
  8513  00084A  EE20 F019          	lfsr	2,25
  8514  00084E  0100               	movlb	0	; () banked
  8515  000850  51C9               	movf	_ic_ptr& (0+255),w,b
  8516  000852  26D9               	addwf	fsr2l,f,c
  8517  000854  0100               	movlb	0	; () banked
  8518  000856  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8519  000858  22DA               	addwfc	fsr2h,f,c
  8520  00085A  0E13               	movlw	19
  8521  00085C  6EDF               	movwf	indf2,c
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;my_i2c.c: 473: SSPCON2bits.PEN = 1;
  8525  00085E  84C5               	bsf	4037,2,c	;volatile
  8526                           
  8527                           ;my_i2c.c: 474: }
  8528  000860  0012               	return	
  8529  000862                     i2l3578:
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;my_i2c.c: 475: else {
  8533                           ;my_i2c.c: 476: ToMainHigh_sendmsg(0, 44, 0);
  8534  000862  0100               	movlb	0	; () banked
  8535  000864  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8536  000866  0E2C               	movlw	44
  8537  000868  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8538  00086A  0100               	movlb	0	; () banked
  8539  00086C  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8540  00086E  0E00               	movlw	0
  8541  000870  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8542  000872  0E00               	movlw	0
  8543  000874  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8544  000876  0E00               	movlw	0
  8545  000878  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8546                           
  8547                           ;my_i2c.c: 477: ic_ptr->status = 0x5;
  8548  00087C  0100               	movlb	0	; () banked
  8549  00087E  EE20 F019          	lfsr	2,25
  8550  000882  0100               	movlb	0	; () banked
  8551  000884  51C9               	movf	_ic_ptr& (0+255),w,b
  8552  000886  26D9               	addwf	fsr2l,f,c
  8553  000888  0100               	movlb	0	; () banked
  8554  00088A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8555  00088C  22DA               	addwfc	fsr2h,f,c
  8556  00088E  0E05               	movlw	5
  8557  000890  6EDF               	movwf	indf2,c
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;my_i2c.c: 478: SSPCON2bits.PEN = 1;
  8561  000892  84C5               	bsf	4037,2,c	;volatile
  8562  000894  0012               	return	
  8563  000896                     i2l3584:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;my_i2c.c: 483: ToMainHigh_sendmsg(0, 43, 0);
  8567  000896  0100               	movlb	0	; () banked
  8568  000898  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8569  00089A  0E2B               	movlw	43
  8570  00089C  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8571  00089E  0100               	movlb	0	; () banked
  8572  0008A0  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8573  0008A2  0E00               	movlw	0
  8574  0008A4  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8575  0008A6  0E00               	movlw	0
  8576  0008A8  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8577  0008AA  0E00               	movlw	0
  8578  0008AC  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8579                           
  8580                           ;my_i2c.c: 484: ic_ptr->status = 0x5;
  8581  0008B0  0100               	movlb	0	; () banked
  8582  0008B2  EE20 F019          	lfsr	2,25
  8583  0008B6  0100               	movlb	0	; () banked
  8584  0008B8  51C9               	movf	_ic_ptr& (0+255),w,b
  8585  0008BA  26D9               	addwf	fsr2l,f,c
  8586  0008BC  0100               	movlb	0	; () banked
  8587  0008BE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8588  0008C0  22DA               	addwfc	fsr2h,f,c
  8589  0008C2  0E05               	movlw	5
  8590  0008C4  6EDF               	movwf	indf2,c
  8591                           
  8592                           ;my_i2c.c: 485: break;
  8593  0008C6  0012               	return	
  8594  0008C8                     i2l370:
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;my_i2c.c: 537: if (SSPCON2bits.ACKSTAT == 0) {
  8598  0008C8  BCC5               	btfsc	4037,6,c	;volatile
  8599  0008CA  D017               	goto	i2l3590
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;my_i2c.c: 538: ic_ptr->status = 0x14;
  8603  0008CC  0100               	movlb	0	; () banked
  8604  0008CE  EE20 F019          	lfsr	2,25
  8605  0008D2  0100               	movlb	0	; () banked
  8606  0008D4  51C9               	movf	_ic_ptr& (0+255),w,b
  8607  0008D6  26D9               	addwf	fsr2l,f,c
  8608  0008D8  0100               	movlb	0	; () banked
  8609  0008DA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8610  0008DC  22DA               	addwfc	fsr2h,f,c
  8611  0008DE  0E14               	movlw	20
  8612  0008E0  6EDF               	movwf	indf2,c
  8613                           
  8614                           ;my_i2c.c: 539: SSPBUF = ic_ptr->slave_addr;
  8615  0008E2  0100               	movlb	0	; () banked
  8616  0008E4  EE20 F034          	lfsr	2,52
  8617  0008E8  0100               	movlb	0	; () banked
  8618  0008EA  51C9               	movf	_ic_ptr& (0+255),w,b
  8619  0008EC  26D9               	addwf	fsr2l,f,c
  8620  0008EE  0100               	movlb	0	; () banked
  8621  0008F0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8622  0008F2  22DA               	addwfc	fsr2h,f,c
  8623  0008F4  50DF               	movf	indf2,w,c
  8624  0008F6  6EC9               	movwf	4041,c	;volatile
  8625                           
  8626                           ;my_i2c.c: 540: }
  8627  0008F8  0012               	return	
  8628  0008FA                     i2l3590:
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;my_i2c.c: 542: else {
  8632                           ;my_i2c.c: 543: ToMainHigh_sendmsg(0, 46, 0);
  8633  0008FA  0100               	movlb	0	; () banked
  8634  0008FC  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8635  0008FE  0E2E               	movlw	46
  8636  000900  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8637  000902  0100               	movlb	0	; () banked
  8638  000904  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8639  000906  0E00               	movlw	0
  8640  000908  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8641  00090A  0E00               	movlw	0
  8642  00090C  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8643  00090E  0E00               	movlw	0
  8644  000910  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8645                           
  8646                           ;my_i2c.c: 544: ic_ptr->status = 0x5;
  8647  000914  0100               	movlb	0	; () banked
  8648  000916  EE20 F019          	lfsr	2,25
  8649  00091A  0100               	movlb	0	; () banked
  8650  00091C  51C9               	movf	_ic_ptr& (0+255),w,b
  8651  00091E  26D9               	addwf	fsr2l,f,c
  8652  000920  0100               	movlb	0	; () banked
  8653  000922  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8654  000924  22DA               	addwfc	fsr2h,f,c
  8655  000926  0E05               	movlw	5
  8656  000928  6EDF               	movwf	indf2,c
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;my_i2c.c: 545: SSPCON2bits.PEN = 1;
  8660  00092A  84C5               	bsf	4037,2,c	;volatile
  8661  00092C  0012               	return	
  8662  00092E                     i2l373:
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;my_i2c.c: 550: if (SSPCON2bits.ACKSTAT == 0) {
  8666  00092E  BCC5               	btfsc	4037,6,c	;volatile
  8667  000930  D022               	goto	i2l3598
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;my_i2c.c: 551: ic_ptr->status = 0x15;
  8671  000932  0100               	movlb	0	; () banked
  8672  000934  EE20 F019          	lfsr	2,25
  8673  000938  0100               	movlb	0	; () banked
  8674  00093A  51C9               	movf	_ic_ptr& (0+255),w,b
  8675  00093C  26D9               	addwf	fsr2l,f,c
  8676  00093E  0100               	movlb	0	; () banked
  8677  000940  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8678  000942  22DA               	addwfc	fsr2h,f,c
  8679  000944  0E15               	movlw	21
  8680  000946  6EDF               	movwf	indf2,c
  8681                           
  8682                           ;my_i2c.c: 552: ic_ptr->outbuflen = 0;
  8683  000948  0100               	movlb	0	; () banked
  8684  00094A  EE20 F032          	lfsr	2,50
  8685  00094E  0100               	movlb	0	; () banked
  8686  000950  51C9               	movf	_ic_ptr& (0+255),w,b
  8687  000952  26D9               	addwf	fsr2l,f,c
  8688  000954  0100               	movlb	0	; () banked
  8689  000956  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8690  000958  22DA               	addwfc	fsr2h,f,c
  8691  00095A  0E00               	movlw	0
  8692  00095C  6EDF               	movwf	indf2,c
  8693                           
  8694                           ;my_i2c.c: 553: SSPBUF = ic_ptr->outbuffer[0];
  8695  00095E  0100               	movlb	0	; () banked
  8696  000960  EE20 F01C          	lfsr	2,28
  8697  000964  0100               	movlb	0	; () banked
  8698  000966  51C9               	movf	_ic_ptr& (0+255),w,b
  8699  000968  26D9               	addwf	fsr2l,f,c
  8700  00096A  0100               	movlb	0	; () banked
  8701  00096C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8702  00096E  22DA               	addwfc	fsr2h,f,c
  8703  000970  50DF               	movf	indf2,w,c
  8704  000972  6EC9               	movwf	4041,c	;volatile
  8705                           
  8706                           ;my_i2c.c: 554: }
  8707  000974  0012               	return	
  8708  000976                     i2l3598:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;my_i2c.c: 555: else {
  8712                           ;my_i2c.c: 556: ToMainHigh_sendmsg(0, 46, 0);
  8713  000976  0100               	movlb	0	; () banked
  8714  000978  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8715  00097A  0E2E               	movlw	46
  8716  00097C  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8717  00097E  0100               	movlb	0	; () banked
  8718  000980  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8719  000982  0E00               	movlw	0
  8720  000984  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8721  000986  0E00               	movlw	0
  8722  000988  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8723  00098A  0E00               	movlw	0
  8724  00098C  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8725                           
  8726                           ;my_i2c.c: 557: ic_ptr->status = 0x5;
  8727  000990  0100               	movlb	0	; () banked
  8728  000992  EE20 F019          	lfsr	2,25
  8729  000996  0100               	movlb	0	; () banked
  8730  000998  51C9               	movf	_ic_ptr& (0+255),w,b
  8731  00099A  26D9               	addwf	fsr2l,f,c
  8732  00099C  0100               	movlb	0	; () banked
  8733  00099E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8734  0009A0  22DA               	addwfc	fsr2h,f,c
  8735  0009A2  0E05               	movlw	5
  8736  0009A4  6EDF               	movwf	indf2,c
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;my_i2c.c: 558: SSPCON2bits.PEN = 1;
  8740  0009A6  84C5               	bsf	4037,2,c	;volatile
  8741  0009A8  0012               	return	
  8742  0009AA                     i2l376:
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;my_i2c.c: 563: if (SSPCON2bits.ACKSTAT == 0) {
  8746  0009AA  BCC5               	btfsc	4037,6,c	;volatile
  8747  0009AC  D00D               	goto	i2l3608
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;my_i2c.c: 564: ic_ptr->status = 0x20;
  8751  0009AE  0100               	movlb	0	; () banked
  8752  0009B0  EE20 F019          	lfsr	2,25
  8753  0009B4  0100               	movlb	0	; () banked
  8754  0009B6  51C9               	movf	_ic_ptr& (0+255),w,b
  8755  0009B8  26D9               	addwf	fsr2l,f,c
  8756  0009BA  0100               	movlb	0	; () banked
  8757  0009BC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8758  0009BE  22DA               	addwfc	fsr2h,f,c
  8759  0009C0  0E20               	movlw	32
  8760  0009C2  6EDF               	movwf	indf2,c
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;my_i2c.c: 565: SSPCON2bits.RSEN = 1;
  8764  0009C4  82C5               	bsf	4037,1,c	;volatile
  8765                           
  8766                           ;my_i2c.c: 566: }
  8767  0009C6  0012               	return	
  8768  0009C8                     i2l3608:
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;my_i2c.c: 567: else {
  8772                           ;my_i2c.c: 568: ToMainHigh_sendmsg(0, 46, 0);
  8773  0009C8  0100               	movlb	0	; () banked
  8774  0009CA  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8775  0009CC  0E2E               	movlw	46
  8776  0009CE  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8777  0009D0  0100               	movlb	0	; () banked
  8778  0009D2  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8779  0009D4  0E00               	movlw	0
  8780  0009D6  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8781  0009D8  0E00               	movlw	0
  8782  0009DA  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8783  0009DC  0E00               	movlw	0
  8784  0009DE  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8785                           
  8786                           ;my_i2c.c: 569: ic_ptr->status = 0x5;
  8787  0009E2  0100               	movlb	0	; () banked
  8788  0009E4  EE20 F019          	lfsr	2,25
  8789  0009E8  0100               	movlb	0	; () banked
  8790  0009EA  51C9               	movf	_ic_ptr& (0+255),w,b
  8791  0009EC  26D9               	addwf	fsr2l,f,c
  8792  0009EE  0100               	movlb	0	; () banked
  8793  0009F0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8794  0009F2  22DA               	addwfc	fsr2h,f,c
  8795  0009F4  0E05               	movlw	5
  8796  0009F6  6EDF               	movwf	indf2,c
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;my_i2c.c: 570: SSPCON2bits.PEN = 1;
  8800  0009F8  84C5               	bsf	4037,2,c	;volatile
  8801  0009FA  0012               	return	
  8802  0009FC                     i2l3614:
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;my_i2c.c: 575: ic_ptr->status = 0x21;
  8806  0009FC  0100               	movlb	0	; () banked
  8807  0009FE  EE20 F019          	lfsr	2,25
  8808  000A02  0100               	movlb	0	; () banked
  8809  000A04  51C9               	movf	_ic_ptr& (0+255),w,b
  8810  000A06  26D9               	addwf	fsr2l,f,c
  8811  000A08  0100               	movlb	0	; () banked
  8812  000A0A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8813  000A0C  22DA               	addwfc	fsr2h,f,c
  8814  000A0E  0E21               	movlw	33
  8815  000A10  6EDF               	movwf	indf2,c
  8816                           
  8817                           ;my_i2c.c: 576: SSPBUF = ic_ptr->slave_addr | 0x1;
  8818  000A12  0100               	movlb	0	; () banked
  8819  000A14  EE20 F034          	lfsr	2,52
  8820  000A18  0100               	movlb	0	; () banked
  8821  000A1A  51C9               	movf	_ic_ptr& (0+255),w,b
  8822  000A1C  26D9               	addwf	fsr2l,f,c
  8823  000A1E  0100               	movlb	0	; () banked
  8824  000A20  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8825  000A22  22DA               	addwfc	fsr2h,f,c
  8826  000A24  50DF               	movf	indf2,w,c
  8827  000A26  0901               	iorlw	1
  8828  000A28  6EC9               	movwf	4041,c	;volatile
  8829                           
  8830                           ;my_i2c.c: 577: break;
  8831  000A2A  0012               	return	
  8832  000A2C                     i2l380:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;my_i2c.c: 580: if (SSPCON2bits.ACKSTAT == 0) {
  8836  000A2C  BCC5               	btfsc	4037,6,c	;volatile
  8837  000A2E  D00D               	goto	i2l3620
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;my_i2c.c: 581: ic_ptr->status = 0x22;
  8841  000A30  0100               	movlb	0	; () banked
  8842  000A32  EE20 F019          	lfsr	2,25
  8843  000A36  0100               	movlb	0	; () banked
  8844  000A38  51C9               	movf	_ic_ptr& (0+255),w,b
  8845  000A3A  26D9               	addwf	fsr2l,f,c
  8846  000A3C  0100               	movlb	0	; () banked
  8847  000A3E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8848  000A40  22DA               	addwfc	fsr2h,f,c
  8849  000A42  0E22               	movlw	34
  8850  000A44  6EDF               	movwf	indf2,c
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;my_i2c.c: 582: SSPCON2bits.RCEN = 1;
  8854  000A46  86C5               	bsf	4037,3,c	;volatile
  8855                           
  8856                           ;my_i2c.c: 583: }
  8857  000A48  0012               	return	
  8858  000A4A                     i2l3620:
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;my_i2c.c: 584: else {
  8862                           ;my_i2c.c: 585: ToMainHigh_sendmsg(0, 46, 0);
  8863  000A4A  0100               	movlb	0	; () banked
  8864  000A4C  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8865  000A4E  0E2E               	movlw	46
  8866  000A50  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  8867  000A52  0100               	movlb	0	; () banked
  8868  000A54  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8869  000A56  0E00               	movlw	0
  8870  000A58  6E3F               	movwf	i2ToMainHigh_sendmsg@data+1,c
  8871  000A5A  0E00               	movlw	0
  8872  000A5C  6E3E               	movwf	i2ToMainHigh_sendmsg@data,c
  8873  000A5E  0E00               	movlw	0
  8874  000A60  EC22  F011         	call	i2_ToMainHigh_sendmsg
  8875                           
  8876                           ;my_i2c.c: 586: ic_ptr->status = 0x5;
  8877  000A64  0100               	movlb	0	; () banked
  8878  000A66  EE20 F019          	lfsr	2,25
  8879  000A6A  0100               	movlb	0	; () banked
  8880  000A6C  51C9               	movf	_ic_ptr& (0+255),w,b
  8881  000A6E  26D9               	addwf	fsr2l,f,c
  8882  000A70  0100               	movlb	0	; () banked
  8883  000A72  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8884  000A74  22DA               	addwfc	fsr2h,f,c
  8885  000A76  0E05               	movlw	5
  8886  000A78  6EDF               	movwf	indf2,c
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;my_i2c.c: 587: SSPCON2bits.PEN = 1;
  8890  000A7A  84C5               	bsf	4037,2,c	;volatile
  8891  000A7C  0012               	return	
  8892  000A7E                     i2l383:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;my_i2c.c: 592: if (SSPSTATbits.BF == 1) {
  8896  000A7E  A0C7               	btfss	4039,0,c	;volatile
  8897  000A80  0012               	return	
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;my_i2c.c: 593: ic_ptr->status = 0x23;
  8901  000A82  0100               	movlb	0	; () banked
  8902  000A84  EE20 F019          	lfsr	2,25
  8903  000A88  0100               	movlb	0	; () banked
  8904  000A8A  51C9               	movf	_ic_ptr& (0+255),w,b
  8905  000A8C  26D9               	addwf	fsr2l,f,c
  8906  000A8E  0100               	movlb	0	; () banked
  8907  000A90  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8908  000A92  22DA               	addwfc	fsr2h,f,c
  8909  000A94  0E23               	movlw	35
  8910  000A96  6EDF               	movwf	indf2,c
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;my_i2c.c: 594: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  8914  000A98  0100               	movlb	0	; () banked
  8915  000A9A  EE20 F017          	lfsr	2,23
  8916  000A9E  0100               	movlb	0	; () banked
  8917  000AA0  51C9               	movf	_ic_ptr& (0+255),w,b
  8918  000AA2  26D9               	addwf	fsr2l,f,c
  8919  000AA4  0100               	movlb	0	; () banked
  8920  000AA6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8921  000AA8  22DA               	addwfc	fsr2h,f,c
  8922  000AAA  50DF               	movf	indf2,w,c
  8923  000AAC  0100               	movlb	0	; () banked
  8924  000AAE  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8925  000AB0  0100               	movlb	0	; () banked
  8926  000AB2  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  8927  000AB4  0D01               	mullw	1
  8928  000AB6  50F3               	movf	prodl,w,c
  8929  000AB8  0100               	movlb	0	; () banked
  8930  000ABA  0100               	movlb	0	; () banked
  8931  000ABC  25C9               	addwf	_ic_ptr& (0+255),w,b
  8932  000ABE  6ED9               	movwf	fsr2l,c
  8933  000AC0  50F4               	movf	prodh,w,c
  8934  000AC2  0100               	movlb	0	; () banked
  8935  000AC4  0100               	movlb	0	; () banked
  8936  000AC6  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8937  000AC8  6EDA               	movwf	fsr2h,c
  8938  000ACA  CFC9 FFDF          	movff	4041,indf2	;volatile
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;my_i2c.c: 595: ic_ptr->bufind++;
  8942  000ACE  0100               	movlb	0	; () banked
  8943  000AD0  EE20 F017          	lfsr	2,23
  8944  000AD4  0100               	movlb	0	; () banked
  8945  000AD6  51C9               	movf	_ic_ptr& (0+255),w,b
  8946  000AD8  26D9               	addwf	fsr2l,f,c
  8947  000ADA  0100               	movlb	0	; () banked
  8948  000ADC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8949  000ADE  22DA               	addwfc	fsr2h,f,c
  8950  000AE0  2ADF               	incf	indf2,f,c
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;my_i2c.c: 596: if (ic_ptr->bufind < ic_ptr->buflen) {
  8954  000AE2  0100               	movlb	0	; () banked
  8955  000AE4  EE20 F017          	lfsr	2,23
  8956  000AE8  0100               	movlb	0	; () banked
  8957  000AEA  51C9               	movf	_ic_ptr& (0+255),w,b
  8958  000AEC  26D9               	addwf	fsr2l,f,c
  8959  000AEE  0100               	movlb	0	; () banked
  8960  000AF0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8961  000AF2  22DA               	addwfc	fsr2h,f,c
  8962  000AF4  50DF               	movf	indf2,w,c
  8963  000AF6  0100               	movlb	0	; () banked
  8964  000AF8  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  8965  000AFA  0100               	movlb	0	; () banked
  8966  000AFC  EE20 F016          	lfsr	2,22
  8967  000B00  0100               	movlb	0	; () banked
  8968  000B02  51C9               	movf	_ic_ptr& (0+255),w,b
  8969  000B04  26D9               	addwf	fsr2l,f,c
  8970  000B06  0100               	movlb	0	; () banked
  8971  000B08  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8972  000B0A  22DA               	addwfc	fsr2h,f,c
  8973  000B0C  50DF               	movf	indf2,w,c
  8974  000B0E  0100               	movlb	0	; () banked
  8975  000B10  5D8C               	subwf	??_i2c_master_int_handler& (0+255),w,b
  8976  000B12  B0D8               	btfsc	status,0,c
  8977  000B14  D003               	goto	i2l385
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;my_i2c.c: 597: SSPCON2bits.ACKDT = 0;
  8981  000B16  9AC5               	bcf	4037,5,c	;volatile
  8982                           
  8983                           ;my_i2c.c: 598: SSPCON2bits.ACKEN = 1;
  8984  000B18  88C5               	bsf	4037,4,c	;volatile
  8985                           
  8986                           ;my_i2c.c: 599: }
  8987  000B1A  0012               	return	
  8988  000B1C                     i2l385:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;my_i2c.c: 600: else {
  8992                           ;my_i2c.c: 601: SSPCON2bits.ACKDT = 1;
  8993  000B1C  8AC5               	bsf	4037,5,c	;volatile
  8994                           
  8995                           ;my_i2c.c: 602: SSPCON2bits.ACKEN = 1;
  8996  000B1E  88C5               	bsf	4037,4,c	;volatile
  8997  000B20  0012               	return	
  8998  000B22                     i2l3636:
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;my_i2c.c: 608: if (ic_ptr->bufind < ic_ptr->buflen) {
  9002  000B22  0100               	movlb	0	; () banked
  9003  000B24  EE20 F017          	lfsr	2,23
  9004  000B28  0100               	movlb	0	; () banked
  9005  000B2A  51C9               	movf	_ic_ptr& (0+255),w,b
  9006  000B2C  26D9               	addwf	fsr2l,f,c
  9007  000B2E  0100               	movlb	0	; () banked
  9008  000B30  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9009  000B32  22DA               	addwfc	fsr2h,f,c
  9010  000B34  50DF               	movf	indf2,w,c
  9011  000B36  0100               	movlb	0	; () banked
  9012  000B38  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  9013  000B3A  0100               	movlb	0	; () banked
  9014  000B3C  EE20 F016          	lfsr	2,22
  9015  000B40  0100               	movlb	0	; () banked
  9016  000B42  51C9               	movf	_ic_ptr& (0+255),w,b
  9017  000B44  26D9               	addwf	fsr2l,f,c
  9018  000B46  0100               	movlb	0	; () banked
  9019  000B48  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9020  000B4A  22DA               	addwfc	fsr2h,f,c
  9021  000B4C  50DF               	movf	indf2,w,c
  9022  000B4E  0100               	movlb	0	; () banked
  9023  000B50  5D8C               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9024  000B52  B0D8               	btfsc	status,0,c
  9025  000B54  D00D               	goto	i2l3642
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;my_i2c.c: 609: ic_ptr->status = 0x22;
  9029  000B56  0100               	movlb	0	; () banked
  9030  000B58  EE20 F019          	lfsr	2,25
  9031  000B5C  0100               	movlb	0	; () banked
  9032  000B5E  51C9               	movf	_ic_ptr& (0+255),w,b
  9033  000B60  26D9               	addwf	fsr2l,f,c
  9034  000B62  0100               	movlb	0	; () banked
  9035  000B64  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9036  000B66  22DA               	addwfc	fsr2h,f,c
  9037  000B68  0E22               	movlw	34
  9038  000B6A  6EDF               	movwf	indf2,c
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;my_i2c.c: 610: SSPCON2bits.RCEN = 1;
  9042  000B6C  86C5               	bsf	4037,3,c	;volatile
  9043                           
  9044                           ;my_i2c.c: 611: }
  9045  000B6E  0012               	return	
  9046  000B70                     i2l3642:
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;my_i2c.c: 612: else {
  9050                           ;my_i2c.c: 613: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
  9051                           ;my_i2c.c: 614: (void *)(ic_ptr->buffer));
  9052  000B70  0100               	movlb	0	; () banked
  9053  000B72  6F8C               	movwf	??_i2c_master_int_handler& (0+255),b
  9054  000B74  0E2D               	movlw	45
  9055  000B76  6E3D               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  9056  000B78  0100               	movlb	0	; () banked
  9057  000B7A  518C               	movf	??_i2c_master_int_handler& (0+255),w,b
  9058  000B7C  0100               	movlb	0	; () banked
  9059  000B7E  C0CA  F03F         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  9060  000B82  0100               	movlb	0	; () banked
  9061  000B84  C0C9  F03E         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  9062  000B88  0100               	movlb	0	; () banked
  9063  000B8A  EE20 F016          	lfsr	2,22
  9064  000B8E  0100               	movlb	0	; () banked
  9065  000B90  51C9               	movf	_ic_ptr& (0+255),w,b
  9066  000B92  26D9               	addwf	fsr2l,f,c
  9067  000B94  0100               	movlb	0	; () banked
  9068  000B96  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9069  000B98  22DA               	addwfc	fsr2h,f,c
  9070  000B9A  50DF               	movf	indf2,w,c
  9071  000B9C  EC22  F011         	call	i2_ToMainHigh_sendmsg
  9072                           
  9073                           ;my_i2c.c: 615: ic_ptr->status = 0x5;
  9074  000BA0  0100               	movlb	0	; () banked
  9075  000BA2  EE20 F019          	lfsr	2,25
  9076  000BA6  0100               	movlb	0	; () banked
  9077  000BA8  51C9               	movf	_ic_ptr& (0+255),w,b
  9078  000BAA  26D9               	addwf	fsr2l,f,c
  9079  000BAC  0100               	movlb	0	; () banked
  9080  000BAE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9081  000BB0  22DA               	addwfc	fsr2h,f,c
  9082  000BB2  0E05               	movlw	5
  9083  000BB4  6EDF               	movwf	indf2,c
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;my_i2c.c: 616: SSPCON2bits.PEN = 1;
  9087  000BB6  84C5               	bsf	4037,2,c	;volatile
  9088  000BB8  0012               	return	
  9089  000BBA                     i2l3650:
  9090  000BBA  0100               	movlb	0	; () banked
  9091  000BBC  EE20 F019          	lfsr	2,25
  9092  000BC0  0100               	movlb	0	; () banked
  9093  000BC2  51C9               	movf	_ic_ptr& (0+255),w,b
  9094  000BC4  26D9               	addwf	fsr2l,f,c
  9095  000BC6  0100               	movlb	0	; () banked
  9096  000BC8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9097  000BCA  22DA               	addwfc	fsr2h,f,c
  9098  000BCC  50DF               	movf	indf2,w,c
  9099                           
  9100                           ; Switch size 1, requested type "space"
  9101                           ; Number of cases is 11, Range of values is 9 to 35
  9102                           ; switch strategies available:
  9103                           ; Name         Instructions Cycles
  9104                           ; simple_byte           34    18 (average)
  9105                           ;	Chosen strategy is simple_byte
  9106  000BCE  0A09               	xorlw	9	; case 9
  9107  000BD0  B4D8               	btfsc	status,2,c
  9108  000BD2  D58B               	goto	i2l3550
  9109  000BD4  0A19               	xorlw	25	; case 16
  9110  000BD6  B4D8               	btfsc	status,2,c
  9111  000BD8  D677               	goto	i2l370
  9112  000BDA  0A01               	xorlw	1	; case 17
  9113  000BDC  B4D8               	btfsc	status,2,c
  9114  000BDE  D5A2               	goto	i2l361
  9115  000BE0  0A03               	xorlw	3	; case 18
  9116  000BE2  B4D8               	btfsc	status,2,c
  9117  000BE4  D62F               	goto	i2l366
  9118  000BE6  0A01               	xorlw	1	; case 19
  9119  000BE8  B4D8               	btfsc	status,2,c
  9120  000BEA  D655               	goto	i2l3584
  9121  000BEC  0A07               	xorlw	7	; case 20
  9122  000BEE  B4D8               	btfsc	status,2,c
  9123  000BF0  D69E               	goto	i2l373
  9124  000BF2  0A01               	xorlw	1	; case 21
  9125  000BF4  B4D8               	btfsc	status,2,c
  9126  000BF6  D6D9               	goto	i2l376
  9127  000BF8  0A35               	xorlw	53	; case 32
  9128  000BFA  B4D8               	btfsc	status,2,c
  9129  000BFC  D6FF               	goto	i2l3614
  9130  000BFE  0A01               	xorlw	1	; case 33
  9131  000C00  B4D8               	btfsc	status,2,c
  9132  000C02  D714               	goto	i2l380
  9133  000C04  0A03               	xorlw	3	; case 34
  9134  000C06  B4D8               	btfsc	status,2,c
  9135  000C08  D73A               	goto	i2l383
  9136  000C0A  0A01               	xorlw	1	; case 35
  9137  000C0C  A4D8               	btfss	status,2,c
  9138  000C0E  0012               	return	
  9139  000C10  D788               	goto	i2l3636
  9140  000C12                     __end_of_i2c_master_int_handler:
  9141                           	opt stack 0
  9142                           pclatu	equ	0xFFB
  9143                           pclath	equ	0xFFA
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           postinc0	equ	0xFEE
  9152                           fsr0h	equ	0xFEA
  9153                           fsr0l	equ	0xFE9
  9154                           wreg	equ	0xFE8
  9155                           indf1	equ	0xFE7
  9156                           fsr1h	equ	0xFE2
  9157                           fsr1l	equ	0xFE1
  9158                           bsr	equ	0xFE0
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           
  9166 ;; *************** function i2_ToMainHigh_sendmsg *****************
  9167 ;; Defined at:
  9168 ;;		line 126 in file "source/messages.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  length          1    wreg     unsigned char 
  9171 ;;  msgtype         1   60[COMRAM] unsigned char 
  9172 ;;  data            2   61[COMRAM] PTR void 
  9173 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  9174 ;;		 -> main@ic(77), 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  length          1   11[BANK0 ] unsigned char 
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      char 
  9179 ;; Registers used:
  9180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9186 ;;      Params:         3       0       0       0       0
  9187 ;;      Locals:         0       1       0       0       0
  9188 ;;      Temps:          0       0       0       0       0
  9189 ;;      Totals:         3       1       0       0       0
  9190 ;;Total ram usage:        4 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:    2
  9193 ;; This function calls:
  9194 ;;		i2_send_msg
  9195 ;; This function is called by:
  9196 ;;		_i2c_slave_int_handler
  9197 ;;		_i2c_master_int_handler
  9198 ;;		_timer0_int_handler
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text46
  9203  002244                     __ptext46:
  9204                           	opt stack 0
  9205  002244                     i2_ToMainHigh_sendmsg:
  9206                           	opt stack 16
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;incstack = 0
  9210                           ;i2ToMainHigh_sendmsg@length stored from wreg
  9211  002244  CFE8 F08B          	movff	wreg,i2ToMainHigh_sendmsg@length
  9212                           
  9213                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9214                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  9215  002248  0101               	movlb	1	; () banked
  9216  00224A  0E01               	movlw	high _ToMainHigh_MQ
  9217  00224C  0100               	movlb	0	; () banked
  9218  00224E  0100               	movlb	0	; () banked
  9219  002250  6F81               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9220  002252  0101               	movlb	1	; () banked
  9221  002254  0E84               	movlw	low _ToMainHigh_MQ
  9222  002256  0100               	movlb	0	; () banked
  9223  002258  0100               	movlb	0	; () banked
  9224  00225A  6F80               	movwf	i2send_msg@qptr& (0+255),b
  9225  00225C  C08B  F082         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  9226  002260  C03D  F083         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9227  002264  0100               	movlb	0	; () banked
  9228  002266  C03F  F085         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9229  00226A  0100               	movlb	0	; () banked
  9230  00226C  C03E  F084         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  9231  002270  EC54  F00B         	call	i2_send_msg	;wreg free
  9232  002274  0012               	return	
  9233  002276                     __end_ofi2_ToMainHigh_sendmsg:
  9234                           	opt stack 0
  9235                           pclatu	equ	0xFFB
  9236                           pclath	equ	0xFFA
  9237                           tblptru	equ	0xFF8
  9238                           tblptrh	equ	0xFF7
  9239                           tblptrl	equ	0xFF6
  9240                           tablat	equ	0xFF5
  9241                           prodh	equ	0xFF4
  9242                           prodl	equ	0xFF3
  9243                           intcon	equ	0xFF2
  9244                           postinc0	equ	0xFEE
  9245                           fsr0h	equ	0xFEA
  9246                           fsr0l	equ	0xFE9
  9247                           wreg	equ	0xFE8
  9248                           indf1	equ	0xFE7
  9249                           fsr1h	equ	0xFE2
  9250                           fsr1l	equ	0xFE1
  9251                           bsr	equ	0xFE0
  9252                           indf2	equ	0xFDF
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           fsr2h	equ	0xFDA
  9256                           fsr2l	equ	0xFD9
  9257                           status	equ	0xFD8
  9258                           
  9259 ;; *************** function i2_send_msg *****************
  9260 ;; Defined at:
  9261 ;;		line 24 in file "source/messages.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9264 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9265 ;;  length          1    2[BANK0 ] unsigned char 
  9266 ;;  msgtype         1    3[BANK0 ] unsigned char 
  9267 ;;  data            2    4[BANK0 ] PTR void 
  9268 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  9269 ;;		 -> main@ic(77), main@uc(23), 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  9272 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9273 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9274 ;;  send_msg        2    6[BANK0 ] unsigned int 
  9275 ;;  send_msg        1    8[BANK0 ] unsigned char 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      char 
  9278 ;; Registers used:
  9279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9285 ;;      Params:         0       6       0       0       0
  9286 ;;      Locals:         0       5       0       0       0
  9287 ;;      Temps:          1       0       0       0       0
  9288 ;;      Totals:         1      11       0       0       0
  9289 ;;Total ram usage:       12 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    1
  9292 ;; This function calls:
  9293 ;;		i2_memcpy
  9294 ;; This function is called by:
  9295 ;;		i2_ToMainHigh_sendmsg
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text47
  9300  0016A8                     __ptext47:
  9301                           	opt stack 0
  9302  0016A8                     i2_send_msg:
  9303                           	opt stack 16
  9304                           
  9305                           ;messages.c: 25: unsigned char slot;
  9306                           ;messages.c: 27: msg *qmsg;
  9307                           ;messages.c: 28: size_t tlength = length;
  9308                           
  9309                           ;incstack = 0
  9310  0016A8  0100               	movlb	0	; () banked
  9311  0016AA  0100               	movlb	0	; () banked
  9312  0016AC  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  9313  0016B0  0100               	movlb	0	; () banked
  9314  0016B2  0100               	movlb	0	; () banked
  9315  0016B4  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9319  0016B6  0100               	movlb	0	; () banked
  9320  0016B8  EE20 F064          	lfsr	2,100
  9321  0016BC  0100               	movlb	0	; () banked
  9322  0016BE  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9323  0016C0  26D9               	addwf	fsr2l,f,c
  9324  0016C2  0100               	movlb	0	; () banked
  9325  0016C4  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9326  0016C6  22DA               	addwfc	fsr2h,f,c
  9327  0016C8  50DF               	movf	indf2,w,c
  9328  0016CA  0100               	movlb	0	; () banked
  9329  0016CC  0100               	movlb	0	; () banked
  9330  0016CE  6F88               	movwf	i2send_msg@slot& (0+255),b
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9334  0016D0  0100               	movlb	0	; () banked
  9335  0016D2  0100               	movlb	0	; () banked
  9336  0016D4  5188               	movf	i2send_msg@slot& (0+255),w,b
  9337  0016D6  0D19               	mullw	25
  9338  0016D8  50F3               	movf	prodl,w,c
  9339  0016DA  0100               	movlb	0	; () banked
  9340  0016DC  0100               	movlb	0	; () banked
  9341  0016DE  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  9342  0016E0  0100               	movlb	0	; () banked
  9343  0016E2  0100               	movlb	0	; () banked
  9344  0016E4  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  9345  0016E6  50F4               	movf	prodh,w,c
  9346  0016E8  0100               	movlb	0	; () banked
  9347  0016EA  0100               	movlb	0	; () banked
  9348  0016EC  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9349  0016EE  0100               	movlb	0	; () banked
  9350  0016F0  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;messages.c: 41: if (qmsg->full != 0) {
  9354  0016F2  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9355  0016F6  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9356  0016FA  50DF               	movf	indf2,w,c
  9357  0016FC  B4D8               	btfsc	status,2,c
  9358  0016FE  D002               	goto	i2l3804
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;messages.c: 42: return (-1);
  9362  001700  0EFF               	movlw	255
  9363  001702  0012               	return	
  9364  001704                     i2l3804:
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;messages.c: 43: }
  9368                           ;messages.c: 46: qmsg->length = length;
  9369  001704  0100               	movlb	0	; () banked
  9370  001706  EE20 F001          	lfsr	2,1
  9371  00170A  0100               	movlb	0	; () banked
  9372  00170C  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9373  00170E  26D9               	addwf	fsr2l,f,c
  9374  001710  0100               	movlb	0	; () banked
  9375  001712  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9376  001714  22DA               	addwfc	fsr2h,f,c
  9377  001716  0100               	movlb	0	; () banked
  9378  001718  C082  FFDF         	movff	i2send_msg@length,indf2
  9379                           
  9380                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9381  00171C  0100               	movlb	0	; () banked
  9382  00171E  EE20 F002          	lfsr	2,2
  9383  001722  0100               	movlb	0	; () banked
  9384  001724  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  9385  001726  26D9               	addwf	fsr2l,f,c
  9386  001728  0100               	movlb	0	; () banked
  9387  00172A  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9388  00172C  22DA               	addwfc	fsr2h,f,c
  9389  00172E  0100               	movlb	0	; () banked
  9390  001730  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9394  001734  0E03               	movlw	3
  9395  001736  0100               	movlb	0	; () banked
  9396  001738  0100               	movlb	0	; () banked
  9397  00173A  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  9398  00173C  6E32               	movwf	i2memcpy@d1,c
  9399  00173E  0E00               	movlw	0
  9400  001740  0100               	movlb	0	; () banked
  9401  001742  0100               	movlb	0	; () banked
  9402  001744  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9403  001746  6E33               	movwf	i2memcpy@d1+1,c
  9404  001748  0100               	movlb	0	; () banked
  9405  00174A  C085  F035         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9406  00174E  0100               	movlb	0	; () banked
  9407  001750  C084  F034         	movff	i2send_msg@data,i2memcpy@s1
  9408  001754  C086  F036         	movff	i2send_msg@tlength,i2memcpy@n
  9409  001758  C087  F037         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9410  00175C  ECB0  F010         	call	i2_memcpy	;wreg free
  9411                           
  9412                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9413  001760  0100               	movlb	0	; () banked
  9414  001762  EE20 F064          	lfsr	2,100
  9415  001766  0100               	movlb	0	; () banked
  9416  001768  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9417  00176A  26D9               	addwf	fsr2l,f,c
  9418  00176C  0100               	movlb	0	; () banked
  9419  00176E  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9420  001770  22DA               	addwfc	fsr2h,f,c
  9421  001772  0100               	movlb	0	; () banked
  9422  001774  EE10 F064          	lfsr	1,100
  9423  001778  0100               	movlb	0	; () banked
  9424  00177A  5180               	movf	i2send_msg@qptr& (0+255),w,b
  9425  00177C  26E1               	addwf	fsr1l,f,c
  9426  00177E  0100               	movlb	0	; () banked
  9427  001780  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9428  001782  22E2               	addwfc	fsr1h,f,c
  9429  001784  50E7               	movf	indf1,w,c
  9430  001786  6E3C               	movwf	??i2_send_msg& (0+255),c
  9431  001788  283C               	incf	??i2_send_msg,w,c
  9432  00178A  0B03               	andlw	3
  9433  00178C  6EDF               	movwf	indf2,c
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;messages.c: 59: qmsg->full = 1;
  9437  00178E  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9438  001792  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9439  001796  0E01               	movlw	1
  9440  001798  6EDF               	movwf	indf2,c
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;messages.c: 60: return (1);
  9444  00179A  0E01               	movlw	1
  9445  00179C  0012               	return	
  9446  00179E                     __end_ofi2_send_msg:
  9447                           	opt stack 0
  9448                           pclatu	equ	0xFFB
  9449                           pclath	equ	0xFFA
  9450                           tblptru	equ	0xFF8
  9451                           tblptrh	equ	0xFF7
  9452                           tblptrl	equ	0xFF6
  9453                           tablat	equ	0xFF5
  9454                           prodh	equ	0xFF4
  9455                           prodl	equ	0xFF3
  9456                           intcon	equ	0xFF2
  9457                           postinc0	equ	0xFEE
  9458                           fsr0h	equ	0xFEA
  9459                           fsr0l	equ	0xFE9
  9460                           wreg	equ	0xFE8
  9461                           indf1	equ	0xFE7
  9462                           fsr1h	equ	0xFE2
  9463                           fsr1l	equ	0xFE1
  9464                           bsr	equ	0xFE0
  9465                           indf2	equ	0xFDF
  9466                           postinc2	equ	0xFDE
  9467                           postdec2	equ	0xFDD
  9468                           fsr2h	equ	0xFDA
  9469                           fsr2l	equ	0xFD9
  9470                           status	equ	0xFD8
  9471                           
  9472 ;; *************** function i2_memcpy *****************
  9473 ;; Defined at:
  9474 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  d1              2   49[COMRAM] PTR void 
  9477 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9478 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9479 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9480 ;;  s1              2   51[COMRAM] PTR const void 
  9481 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9482 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9483 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  9484 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9485 ;;		 -> main@ic(77), main@uc(23), 
  9486 ;;  n               2   53[COMRAM] unsigned int 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  memcpy          2   57[COMRAM] PTR const unsigned char 
  9489 ;;		 -> ToMainLow_MQ.data(22), ToMainHigh_MQ.data(22), FromMainLow_MQ.data(22), FromMainHigh_MQ.data(22), 
  9490 ;;		 -> ToMainLow_MQ.queue.data(22), ToMainHigh_MQ.queue.data(22), FromMainHigh_MQ.queue.data(22), FromMainLow_MQ.queue.
      +data(22), 
  9491 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_slave_int_handler@error_buf(3), motor_lthread@message(2), 
  9492 ;;		 -> FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9493 ;;		 -> main@ic(77), main@uc(23), 
  9494 ;;  memcpy          2   55[COMRAM] PTR unsigned char 
  9495 ;;		 -> FromMainLow_MQ.queue(100), FromMainHigh_MQ.queue(100), ToMainHigh_MQ.queue(100), ToMainLow_MQ.queue(100), 
  9496 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(102), FromMainLow_MQ(102), ToMainHigh_MQ(102), 
  9497 ;;		 -> ToMainLow_MQ(102), main@msgbuffer(23), 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  2   49[COMRAM] PTR void 
  9500 ;; Registers used:
  9501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9507 ;;      Params:         6       0       0       0       0
  9508 ;;      Locals:         4       0       0       0       0
  9509 ;;      Temps:          0       0       0       0       0
  9510 ;;      Totals:        10       0       0       0       0
  9511 ;;Total ram usage:       10 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		i2_send_msg
  9517 ;;		i2_recv_msg
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text48
  9522  002160                     __ptext48:
  9523                           	opt stack 0
  9524  002160                     i2_memcpy:
  9525                           	opt stack 16
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;incstack = 0
  9529  002160  C035  F03B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9530  002164  C034  F03A         	movff	i2memcpy@s1,i2memcpy@s
  9531  002168  C033  F039         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9532  00216C  C032  F038         	movff	i2memcpy@d1,i2memcpy@d
  9533  002170  D00E               	goto	i2l3860
  9534  002172                     i2l3854:
  9535  002172  C03A  FFD9         	movff	i2memcpy@s,fsr2l
  9536  002176  C03B  FFDA         	movff	i2memcpy@s+1,fsr2h
  9537  00217A  C038  FFE1         	movff	i2memcpy@d,fsr1l
  9538  00217E  C039  FFE2         	movff	i2memcpy@d+1,fsr1h
  9539  002182  CFDF FFE7          	movff	indf2,indf1
  9540  002186  4A3A               	infsnz	i2memcpy@s,f,c
  9541  002188  2A3B               	incf	i2memcpy@s+1,f,c
  9542  00218A  4A38               	infsnz	i2memcpy@d,f,c
  9543  00218C  2A39               	incf	i2memcpy@d+1,f,c
  9544  00218E                     i2l3860:
  9545  00218E  0636               	decf	i2memcpy@n,f,c
  9546  002190  A0D8               	btfss	status,0,c
  9547  002192  0637               	decf	i2memcpy@n+1,f,c
  9548  002194  2836               	incf	i2memcpy@n& (0+255),w,c
  9549  002196  B4D8               	btfsc	status,2,c
  9550  002198  2837               	incf	(i2memcpy@n+1)& (0+255),w,c
  9551  00219A  B4D8               	btfsc	status,2,c
  9552                           
  9553                           ;	Return value of i2_memcpy is never used
  9554  00219C  0012               	return	
  9555  00219E  D7E9               	goto	i2l3854
  9556  0021A0                     __end_ofi2_memcpy:
  9557                           	opt stack 0
  9558                           pclatu	equ	0xFFB
  9559                           pclath	equ	0xFFA
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           intcon	equ	0xFF2
  9567                           postinc0	equ	0xFEE
  9568                           fsr0h	equ	0xFEA
  9569                           fsr0l	equ	0xFE9
  9570                           wreg	equ	0xFE8
  9571                           indf1	equ	0xFE7
  9572                           fsr1h	equ	0xFE2
  9573                           fsr1l	equ	0xFE1
  9574                           bsr	equ	0xFE0
  9575                           indf2	equ	0xFDF
  9576                           postinc2	equ	0xFDE
  9577                           postdec2	equ	0xFDD
  9578                           fsr2h	equ	0xFDA
  9579                           fsr2l	equ	0xFD9
  9580                           status	equ	0xFD8
  9581                           
  9582 ;; *************** function _SleepIfOkay *****************
  9583 ;; Defined at:
  9584 ;;		line 228 in file "source/messages.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;		None               void
  9591 ;; Registers used:
  9592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9598 ;;      Params:         0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    2
  9605 ;; This function calls:
  9606 ;;		_enter_sleep_mode
  9607 ;;		i2_check_msg
  9608 ;;		i2_in_high_int
  9609 ;;		i2_in_low_int
  9610 ;; This function is called by:
  9611 ;;		_InterruptHandlerHigh
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text49
  9616  001F82                     __ptext49:
  9617                           	opt stack 0
  9618  001F82                     _SleepIfOkay:
  9619                           	opt stack 17
  9620                           
  9621                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9622                           
  9623                           ;incstack = 0
  9624  001F82  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  9625  001F84  D001               	goto	i2l2500
  9626  001F86  0012               	return	
  9627  001F88                     i2l2500:
  9628                           
  9629                           ;messages.c: 232: }
  9630                           ;messages.c: 235: if (in_low_int()) {
  9631  001F88  EC53  F011         	call	i2_in_low_int	;wreg free
  9632  001F8C  5035               	movf	?i2_in_low_int+1,w,c
  9633  001F8E  1034               	iorwf	?i2_in_low_int,w,c
  9634  001F90  A4D8               	btfss	status,2,c
  9635  001F92  0012               	return	
  9636                           
  9637                           ;messages.c: 237: }
  9638                           ;messages.c: 240: if (!in_high_int()) {
  9639                           
  9640                           ;messages.c: 236: return;
  9641  001F94  EC0F  F012         	call	i2_in_high_int	;wreg free
  9642  001F98  5033               	movf	?i2_in_high_int+1,w,c
  9643  001F9A  1032               	iorwf	?i2_in_high_int,w,c
  9644  001F9C  B4D8               	btfsc	status,2,c
  9645  001F9E  0012               	return	
  9646                           
  9647                           ;messages.c: 242: }
  9648                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9649                           
  9650                           ;messages.c: 241: return;
  9651  001FA0  0101               	movlb	1	; () banked
  9652  001FA2  0E01               	movlw	high _ToMainHigh_MQ
  9653  001FA4  6E33               	movwf	i2check_msg@qptr+1,c
  9654  001FA6  0101               	movlb	1	; () banked
  9655  001FA8  0E84               	movlw	low _ToMainHigh_MQ
  9656  001FAA  6E32               	movwf	i2check_msg@qptr,c
  9657  001FAC  EC92  F011         	call	i2_check_msg	;wreg free
  9658  001FB0  0900               	iorlw	0
  9659  001FB2  A4D8               	btfss	status,2,c
  9660  001FB4  0012               	return	
  9661                           
  9662                           ;messages.c: 249: }
  9663                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9664                           
  9665                           ;messages.c: 248: return;
  9666  001FB6  0102               	movlb	2	; () banked
  9667  001FB8  0E02               	movlw	high _ToMainLow_MQ
  9668  001FBA  6E33               	movwf	i2check_msg@qptr+1,c
  9669  001FBC  0102               	movlb	2	; () banked
  9670  001FBE  0E66               	movlw	low _ToMainLow_MQ
  9671  001FC0  6E32               	movwf	i2check_msg@qptr,c
  9672  001FC2  EC92  F011         	call	i2_check_msg	;wreg free
  9673  001FC6  0900               	iorlw	0
  9674  001FC8  B4D8               	btfsc	status,2,c
  9675                           
  9676                           ;messages.c: 252: }
  9677                           ;messages.c: 253: enter_sleep_mode();
  9678                           
  9679                           ;messages.c: 251: return;
  9680  001FCA  EC19  F012         	call	_enter_sleep_mode	;wreg free
  9681  001FCE  0012               	return	
  9682  001FD0                     __end_of_SleepIfOkay:
  9683                           	opt stack 0
  9684                           pclatu	equ	0xFFB
  9685                           pclath	equ	0xFFA
  9686                           tblptru	equ	0xFF8
  9687                           tblptrh	equ	0xFF7
  9688                           tblptrl	equ	0xFF6
  9689                           tablat	equ	0xFF5
  9690                           prodh	equ	0xFF4
  9691                           prodl	equ	0xFF3
  9692                           intcon	equ	0xFF2
  9693                           postinc0	equ	0xFEE
  9694                           fsr0h	equ	0xFEA
  9695                           fsr0l	equ	0xFE9
  9696                           wreg	equ	0xFE8
  9697                           indf1	equ	0xFE7
  9698                           fsr1h	equ	0xFE2
  9699                           fsr1l	equ	0xFE1
  9700                           bsr	equ	0xFE0
  9701                           indf2	equ	0xFDF
  9702                           postinc2	equ	0xFDE
  9703                           postdec2	equ	0xFDD
  9704                           fsr2h	equ	0xFDA
  9705                           fsr2l	equ	0xFD9
  9706                           status	equ	0xFD8
  9707                           
  9708 ;; *************** function i2_in_low_int *****************
  9709 ;; Defined at:
  9710 ;;		line 30 in file "source/interrupts.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  2   51[COMRAM] int 
  9717 ;; Registers used:
  9718 ;;		wreg, status,2, status,0, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9724 ;;      Params:         2       0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0
  9727 ;;      Totals:         2       0       0       0       0
  9728 ;;Total ram usage:        2 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    1
  9731 ;; This function calls:
  9732 ;;		i2_in_high_int
  9733 ;; This function is called by:
  9734 ;;		_SleepIfOkay
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text50
  9739  0022A6                     __ptext50:
  9740                           	opt stack 0
  9741  0022A6                     i2_in_low_int:
  9742                           	opt stack 17
  9743                           
  9744                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  9745                           
  9746                           ;incstack = 0
  9747  0022A6  ACF2               	btfss	intcon,6,c	;volatile
  9748  0022A8  D005               	goto	i2l3286
  9749                           
  9750                           ;interrupts.c: 32: return (0);
  9751  0022AA  0E00               	movlw	0
  9752  0022AC  6E35               	movwf	?i2_in_low_int+1,c
  9753  0022AE  0E00               	movlw	0
  9754  0022B0  6E34               	movwf	?i2_in_low_int,c
  9755  0022B2  0012               	return	
  9756  0022B4                     i2l3286:
  9757  0022B4  EC0F  F012         	call	i2_in_high_int	;wreg free
  9758  0022B8  5033               	movf	?i2_in_high_int+1,w,c
  9759  0022BA  1032               	iorwf	?i2_in_high_int,w,c
  9760  0022BC  B4D8               	btfsc	status,2,c
  9761  0022BE  D005               	goto	i2l3294
  9762                           
  9763                           ;interrupts.c: 34: return (0);
  9764  0022C0  0E00               	movlw	0
  9765  0022C2  6E35               	movwf	?i2_in_low_int+1,c
  9766  0022C4  0E00               	movlw	0
  9767  0022C6  6E34               	movwf	?i2_in_low_int,c
  9768  0022C8  0012               	return	
  9769  0022CA                     i2l3294:
  9770                           
  9771                           ;interrupts.c: 36: return (1);
  9772  0022CA  0E00               	movlw	0
  9773  0022CC  6E35               	movwf	?i2_in_low_int+1,c
  9774  0022CE  0E01               	movlw	1
  9775  0022D0  6E34               	movwf	?i2_in_low_int,c
  9776  0022D2  0012               	return	
  9777  0022D4                     __end_ofi2_in_low_int:
  9778                           	opt stack 0
  9779                           pclatu	equ	0xFFB
  9780                           pclath	equ	0xFFA
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           postinc0	equ	0xFEE
  9789                           fsr0h	equ	0xFEA
  9790                           fsr0l	equ	0xFE9
  9791                           wreg	equ	0xFE8
  9792                           indf1	equ	0xFE7
  9793                           fsr1h	equ	0xFE2
  9794                           fsr1l	equ	0xFE1
  9795                           bsr	equ	0xFE0
  9796                           indf2	equ	0xFDF
  9797                           postinc2	equ	0xFDE
  9798                           postdec2	equ	0xFDD
  9799                           fsr2h	equ	0xFDA
  9800                           fsr2l	equ	0xFD9
  9801                           status	equ	0xFD8
  9802                           
  9803 ;; *************** function i2_in_high_int *****************
  9804 ;; Defined at:
  9805 ;;		line 22 in file "source/interrupts.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  2   49[COMRAM] int 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9819 ;;      Params:         2       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0
  9822 ;;      Totals:         2       0       0       0       0
  9823 ;;Total ram usage:        2 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_SleepIfOkay
  9829 ;;		i2_in_low_int
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text51
  9834  00241E                     __ptext51:
  9835                           	opt stack 0
  9836  00241E                     i2_in_high_int:
  9837                           	opt stack 17
  9838                           
  9839                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  9840                           
  9841                           ;incstack = 0
  9842  00241E  0E00               	movlw	0
  9843  002420  AEF2               	btfss	intcon,7,c	;volatile
  9844  002422  0E01               	movlw	1
  9845  002424  6E32               	movwf	?i2_in_high_int,c
  9846  002426  6A33               	clrf	?i2_in_high_int+1,c
  9847  002428  0012               	return	
  9848  00242A                     __end_ofi2_in_high_int:
  9849                           	opt stack 0
  9850                           pclatu	equ	0xFFB
  9851                           pclath	equ	0xFFA
  9852                           tblptru	equ	0xFF8
  9853                           tblptrh	equ	0xFF7
  9854                           tblptrl	equ	0xFF6
  9855                           tablat	equ	0xFF5
  9856                           prodh	equ	0xFF4
  9857                           prodl	equ	0xFF3
  9858                           intcon	equ	0xFF2
  9859                           postinc0	equ	0xFEE
  9860                           fsr0h	equ	0xFEA
  9861                           fsr0l	equ	0xFE9
  9862                           wreg	equ	0xFE8
  9863                           indf1	equ	0xFE7
  9864                           fsr1h	equ	0xFE2
  9865                           fsr1l	equ	0xFE1
  9866                           bsr	equ	0xFE0
  9867                           indf2	equ	0xFDF
  9868                           postinc2	equ	0xFDE
  9869                           postdec2	equ	0xFDD
  9870                           fsr2h	equ	0xFDA
  9871                           fsr2l	equ	0xFD9
  9872                           status	equ	0xFD8
  9873                           
  9874 ;; *************** function i2_check_msg *****************
  9875 ;; Defined at:
  9876 ;;		line 222 in file "source/messages.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  qptr            2   49[COMRAM] PTR struct __msg_queue
  9879 ;;		 -> ToMainHigh_MQ(102), ToMainLow_MQ(102), 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      unsigned char 
  9884 ;; Registers used:
  9885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9891 ;;      Params:         2       0       0       0       0
  9892 ;;      Locals:         0       0       0       0       0
  9893 ;;      Temps:          1       0       0       0       0
  9894 ;;      Totals:         3       0       0       0       0
  9895 ;;Total ram usage:        3 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_SleepIfOkay
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text52
  9905  002324                     __ptext52:
  9906                           	opt stack 0
  9907  002324                     i2_check_msg:
  9908                           	opt stack 18
  9909                           
  9910                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9911                           
  9912                           ;incstack = 0
  9913  002324  EE20 F065          	lfsr	2,101
  9914  002328  5032               	movf	i2check_msg@qptr,w,c
  9915  00232A  26D9               	addwf	fsr2l,f,c
  9916  00232C  5033               	movf	i2check_msg@qptr+1,w,c
  9917  00232E  22DA               	addwfc	fsr2h,f,c
  9918  002330  50DF               	movf	indf2,w,c
  9919  002332  6E34               	movwf	??i2_check_msg& (0+255),c
  9920  002334  5034               	movf	??i2_check_msg,w,c
  9921  002336  0D19               	mullw	25
  9922  002338  50F3               	movf	prodl,w,c
  9923  00233A  2432               	addwf	i2check_msg@qptr,w,c
  9924  00233C  6ED9               	movwf	fsr2l,c
  9925  00233E  50F4               	movf	prodh,w,c
  9926  002340  2033               	addwfc	i2check_msg@qptr+1,w,c
  9927  002342  6EDA               	movwf	fsr2h,c
  9928  002344  50DF               	movf	indf2,w,c
  9929  002346  0012               	return	
  9930  002348                     __end_ofi2_check_msg:
  9931                           	opt stack 0
  9932                           pclatu	equ	0xFFB
  9933                           pclath	equ	0xFFA
  9934                           tblptru	equ	0xFF8
  9935                           tblptrh	equ	0xFF7
  9936                           tblptrl	equ	0xFF6
  9937                           tablat	equ	0xFF5
  9938                           prodh	equ	0xFF4
  9939                           prodl	equ	0xFF3
  9940                           intcon	equ	0xFF2
  9941                           postinc0	equ	0xFEE
  9942                           fsr0h	equ	0xFEA
  9943                           fsr0l	equ	0xFE9
  9944                           wreg	equ	0xFE8
  9945                           indf1	equ	0xFE7
  9946                           fsr1h	equ	0xFE2
  9947                           fsr1l	equ	0xFE1
  9948                           bsr	equ	0xFE0
  9949                           indf2	equ	0xFDF
  9950                           postinc2	equ	0xFDE
  9951                           postdec2	equ	0xFDD
  9952                           fsr2h	equ	0xFDA
  9953                           fsr2l	equ	0xFD9
  9954                           status	equ	0xFD8
  9955                           
  9956 ;; *************** function _enter_sleep_mode *****************
  9957 ;; Defined at:
  9958 ;;		line 202 in file "source/messages.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;		None
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;		None
  9963 ;; Return value:  Size  Location     Type
  9964 ;;		None               void
  9965 ;; Registers used:
  9966 ;;		None
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9972 ;;      Params:         0       0       0       0       0
  9973 ;;      Locals:         0       0       0       0       0
  9974 ;;      Temps:          0       0       0       0       0
  9975 ;;      Totals:         0       0       0       0       0
  9976 ;;Total ram usage:        0 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_SleepIfOkay
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text53
  9986  002432                     __ptext53:
  9987                           	opt stack 0
  9988  002432                     _enter_sleep_mode:
  9989                           	opt stack 18
  9990                           
  9991                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9992                           
  9993                           ;incstack = 0
  9994  002432  8ED3               	bsf	4051,7,c	;volatile
  9995  002434  0003               	sleep		;# 
  9996  002436  0012               	return	
  9997  002438                     __end_of_enter_sleep_mode:
  9998                           	opt stack 0
  9999  0000                     pclatu	equ	0xFFB
 10000                           pclath	equ	0xFFA
 10001                           tblptru	equ	0xFF8
 10002                           tblptrh	equ	0xFF7
 10003                           tblptrl	equ	0xFF6
 10004                           tablat	equ	0xFF5
 10005                           prodh	equ	0xFF4
 10006                           prodl	equ	0xFF3
 10007                           intcon	equ	0xFF2
 10008                           postinc0	equ	0xFEE
 10009                           fsr0h	equ	0xFEA
 10010                           fsr0l	equ	0xFE9
 10011                           wreg	equ	0xFE8
 10012                           indf1	equ	0xFE7
 10013                           fsr1h	equ	0xFE2
 10014                           fsr1l	equ	0xFE1
 10015                           bsr	equ	0xFE0
 10016                           indf2	equ	0xFDF
 10017                           postinc2	equ	0xFDE
 10018                           postdec2	equ	0xFDD
 10019                           fsr2h	equ	0xFDA
 10020                           fsr2l	equ	0xFD9
 10021                           status	equ	0xFD8
 10022                           pclatu	equ	0xFFB
 10023                           pclath	equ	0xFFA
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           postinc0	equ	0xFEE
 10032                           fsr0h	equ	0xFEA
 10033                           fsr0l	equ	0xFE9
 10034                           wreg	equ	0xFE8
 10035                           indf1	equ	0xFE7
 10036                           fsr1h	equ	0xFE2
 10037                           fsr1l	equ	0xFE1
 10038                           bsr	equ	0xFE0
 10039                           indf2	equ	0xFDF
 10040                           postinc2	equ	0xFDE
 10041                           postdec2	equ	0xFDD
 10042                           fsr2h	equ	0xFDA
 10043                           fsr2l	equ	0xFD9
 10044                           status	equ	0xFD8
 10045                           
 10046                           	psect	rparam
 10047  0000                     pclatu	equ	0xFFB
 10048                           pclath	equ	0xFFA
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           postinc0	equ	0xFEE
 10057                           fsr0h	equ	0xFEA
 10058                           fsr0l	equ	0xFE9
 10059                           wreg	equ	0xFE8
 10060                           indf1	equ	0xFE7
 10061                           fsr1h	equ	0xFE2
 10062                           fsr1l	equ	0xFE1
 10063                           bsr	equ	0xFE0
 10064                           indf2	equ	0xFDF
 10065                           postinc2	equ	0xFDE
 10066                           postdec2	equ	0xFDD
 10067                           fsr2h	equ	0xFDA
 10068                           fsr2l	equ	0xFD9
 10069                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         422
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      78
    BANK0           128     73      77
    BANK1           256    132     234
    BANK2           256      0     204
    BANK3           256      0     102

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[23]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@msgbuffer(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@msgbuffer(BANK1[23]), 

    memcpy@s1	PTR const void  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK2[22]), ToMainHigh_MQ.data(BANK1[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK2[22]), ToMainHigh_MQ.queue.data(BANK1[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(BANK0[2]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 102
		 -> ToMainLow_MQ.data(BANK2[22]), ToMainHigh_MQ.data(BANK1[22]), FromMainLow_MQ.data(BANK2[22]), FromMainHigh_MQ.data(BANK3[22]), 
		 -> ToMainLow_MQ.queue.data(BANK2[22]), ToMainHigh_MQ.queue.data(BANK1[22]), FromMainHigh_MQ.queue.data(BANK3[22]), FromMainLow_MQ.queue.data(BANK2[22]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(BANK0[2]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 77
		 -> main@ic(BANK1[77]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 77
		 -> NULL(NULL[0]), main@ic(BANK1[77]), 

    motor_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(BANK0[2]), 
		 -> main@ic(BANK1[77]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 23
		 -> main@msgbuffer(BANK1[23]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[23]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    sp__memcpy	PTR void  size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), 
		 -> ToMainLow_MQ(BANK2[102]), main@msgbuffer(BANK1[23]), 

    send_msg@data	PTR void  size(2) Largest target is 77
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), motor_lthread@message(BANK0[2]), 
		 -> main@ic(BANK1[77]), main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 102
		 -> FromMainLow_MQ.queue(BANK2[100]), FromMainHigh_MQ.queue(BANK3[100]), ToMainHigh_MQ.queue(BANK1[100]), ToMainLow_MQ.queue(BANK2[100]), 
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 102
		 -> FromMainHigh_MQ(BANK3[102]), FromMainLow_MQ(BANK2[102]), ToMainHigh_MQ(BANK1[102]), ToMainLow_MQ(BANK2[102]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->i2_ToMainHigh_sendmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_slave_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_motor_lthread
    _uart_lthread->_WriteUSART
    _motor_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               134   134      0    9315
                                              0 BANK1    132   132      0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                      _motor_lthread
              _start_i2c_slave_reply
                     _timer0_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8     647
                                             38 BANK0     11     3      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             37 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                6     4      2     146
                                             37 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _motor_lthread                                       10     4      6    2762
                                             63 BANK0     10     4      6
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2335
                                             59 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1515
                                             47 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      75
                                             37 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             41 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             37 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     2      0      22
                                             37 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             43 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             41 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             39 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             37 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1709
                                             61 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1709
                                             61 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1537
                                             47 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                             37 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             37 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    7123
                                             32 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    4677
                                             31 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
                          _parseUART
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            5     5      0    2327
                                             26 COMRAM     5     5      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2446
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2327
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (9) i1_send_msg                                          12     6      6    1943
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   17633
                                             23 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  7     7      0    7692
                                             16 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _FromMainHigh_recvmsg                                5     1      4    2970
                                             61 COMRAM     1     1      0
                                             12 BANK0      4     0      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    2747
                                             59 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0    9705
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    5286
                                             12 BANK0     11    11      0
                       _handle_start
               i2_ToMainHigh_sendmsg
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) i2_start_i2c_slave_reply                             6     4      2     264
                                             49 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      22
                                             49 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    4419
                                             12 BANK0      1     1      0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) i2_ToMainHigh_sendmsg                                4     1      3    4419
                                             60 COMRAM     3     0      3
                                             11 BANK0      1     1      0
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2859
                                             59 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                             49 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _motor_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
   _uart_lthread
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _parseUART
       _ToMainLow_sendmsg
         i1_send_msg
           i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _handle_start
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       i2_start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      66      10       39.8%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CC       8       79.7%
BITBANK1           100      0       0       5        0.0%
BANK1              100     84      EA       6       91.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     49      4D       4       60.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B7      11        0.0%
DATA                 0      0     2B7      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Feb 25 03:42:46 2014

                  main@uthread_data 011C            _MQ_Main_Willing_to_block 004A  
             ?i2_ToMainHigh_sendmsg 003D                     ??_motor_lthread 00C5  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 209C  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 2324  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 0083  
                 i2recv_msg@tlength 0088                                 l100 0D26  
                               l542 1BBA                                 l472 1A86  
                               l546 1BDA                                 l547 1BDC  
                               l548 1BEA                                 l549 1BEC  
                               l786 238C                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                      _FromMainLow_MQ 0200  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 00A5                    ??_init_uart_recv 00A7  
                   ReadTimer1@timer 0003                 i2recv_msg@maxlength 0082  
                              l2440 1FE4                                l2462 204A  
                              l2702 1CE4                                l3270 23AC  
                              l2448 2006                                l2560 0D4C  
                              l2650 1BA6                                l2722 0F54  
                              l2730 1002                                l2562 0D8A  
                              l2708 1D10                                l2556 0CD4  
                              l2548 0C92                                l2830 1E9A  
                              l2750 14FA                                l2742 14AA  
                              l2726 0F82                                l2718 0EC8  
                              l2574 0E44                                l2558 0D2C  
                              l2566 0DDC                                l2816 1600  
                              l2752 150E                                l2744 14B2  
                              l2568 0E06                                l2658 1BBC  
                              l2850 12A6                                l2746 14CA  
                              l2738 1498                                l2762 1582  
                              l2578 0E96                                l2836 1EBE  
                              l2748 14E2                                l2756 1526  
                              l2758 1556                                l2696 1CB8  
                              l2784 1AB4                                l2776 1A5A  
                              l2866 136C                                l2798 1D60  
                              _LATB 000F8A                                u2757 238E  
                              i1l47 0070                     _FromMainHigh_MQ 0300  
                              _Send 0040                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 0C12  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 0136                          i1_send_msg 1ADC  
                              pclat 000FFA                         i2_check_msg 2324  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0032                                start 00B6  
                        i2_recv_msg 1370                       __CFG_FOSC2$ON 000000  
                        i2_send_msg 16A8           ToMainHigh_recvmsg@msgtype 00BD  
                    send_msg@length 00B1       i2start_i2c_slave_reply@length 0037  
       __size_of_timer0_int_handler 0078             ??_i2c_slave_int_handler 008C  
                       _Delay1KTCYx 2388                               ?_main 0001  
                        i1memcpy@d1 0001                               i2l310 0182  
                             i1l560 2378                               i2l314 01C6  
                             i2l308 051C                               i2l342 052E  
                             i2l336 048E                               i2l328 0356  
                             i2l361 0724                               i2l370 08C8  
                             i2l290 19D0                               i2l380 0A2C  
                             i2l373 092E                               i2l366 0844  
                             i2l383 0A7E                               i2l376 09AA  
                             i2l385 0B1C                          i1memcpy@s1 0003  
       FromMainHigh_recvmsg@msgtype 008C                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _TRISB 000F93                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0032  
                        i2memcpy@s1 0034                        ?_init_queues 0001  
                             _State 004B           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 205A          ToMainLow_recvmsg@maxlength 00C1  
           timer0_lthread@msgbuffer 00AB             i2c_configure_slave@addr 00A6  
                             tablat 000FF5                               status 000FD8  
          i2ToMainHigh_sendmsg@data 003E                    __end_ofi1_memcpy 2160  
                  __end_ofi2_memcpy 21A0                      WriteUSART@data 00A5  
                   __initialization 1F32              ??i2_ToMainHigh_sendmsg 0040  
                      __end_of_main 0EAC                          _ReadTimer1 23FA  
       __size_of_timer1_int_handler 0030          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026       __size_of_FromMainHigh_recvmsg 0042  
             __size_ofi2_in_low_int 002E                              ??_main 00C9  
                   send_msg@msgtype 00B2                       __activetblptr 000002  
                   send_msg@tlength 00B6                __end_of_handle_start 1A1C  
           ??_uart_recv_int_handler 0020                              i1l3414 1B14  
                            i1l3450 1808                              i1l3390 214E  
                            i1l3454 182E                              i1l3446 17C2  
                            i1l3438 17A0                              i1l3384 2132  
                            i1l3456 1838                              i1l3464 186A  
                            i1l3474 1F12                              i1l3486 0066  
                            i2l2500 1F88                      __CFG_WDTEN$OFF 000000  
                            i2l3530 2350                              i2l3620 0A4A  
                            i2l3372 1150                              i2l3364 10A2  
                            i2l3524 1C5C                              i2l3294 22CA  
                            i2l3286 22B4                              i2l3614 09FC  
                            i2l3550 06EA                              i2l3710 02BE  
                            i2l3702 0266                              i2l3534 2356  
                            i2l3518 1C52                              i2l3608 09C8  
                            i2l3560 07C6                              i2l3368 1122  
                            i2l3376 11C0                              i2l3528 234A  
                            i2l3642 0B70                              i2l3650 0BBA  
                            i2l3730 03CA                              i2l3804 1704  
                            i2l3636 0B22                              i2l3732 040C  
                            i2l3708 027E                              i2l3590 08FA  
                            i2l3584 0896                              i2l3568 0810  
                            i2l3736 041E                              i2l3672 0178  
                            i2l3578 0862                              i2l2970 19EC  
                            i2l3770 0592                              i2l3690 01FE  
                            i2l3666 0160                              i2l3860 218E  
                            i2l2972 1A04                              i2l3764 0532  
                            i2l3692 022A                              i2l3828 13DC  
                            i2l3844 1492                              i2l3854 2172  
                            i2l3598 0976                              i2l3758 04F0  
                            i2l3786 06BE                              i2l3778 0624  
       __end_of_i2c_configure_slave 21D8                       ??_SleepIfOkay 0036  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 01DA  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 1086  
                timer0_lthread@tptr 00A5                         ?i2_recv_msg 0080  
                      i2_in_low_int 22A6                         ?i2_send_msg 0080  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 2348   i2c_slave_int_handler@data_written 0091  
                            _ic_ptr 00C9                       main@msgbuffer 0100  
                  __end_of_init_i2c 1954                              _memcpy 1E78  
                            clear_0 1F38                              clear_1 1F44  
                            clear_2 1F50                              clear_3 1F60  
                            _uc_ptr 004D                              main@ic 0137  
                            main@uc 011E                    __end_of_recv_msg 1370  
       start_i2c_slave_reply@length 00AA                           ??_in_main 00AB  
                  __end_of_send_msg 16A8               timer0_int_handler@val 0095  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00A8  
          ?i2_start_i2c_slave_reply 0032            ToMainLow_recvmsg@msgtype 00BD  
              __size_of_in_high_int 0012                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1F78  
        __end_of_ToMainHigh_recvmsg 20DE          __end_of_ToMainHigh_sendmsg 220E  
       __end_of_init_timer1_lthread 23D6                 __end_of_SleepIfOkay 1FD0  
                        _WriteUSART 239E                      __pcstackCOMRAM 0001  
                      __pidataBANK0 2438              __size_ofi2_in_high_int 000C  
                       ?_ReadTimer1 0001                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 2388           timer0_int_handler@msgtype 0093  
               __size_ofi1_send_msg 00AA                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 1C92         __end_of_InterruptHandlerLow 00B6  
                         ?i2_memcpy 0032                       _ToMainHigh_MQ 0184  
               __size_ofi2_recv_msg 0126                    _enter_sleep_mode 2432  
               __size_ofi2_send_msg 00F6                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1C18                       check_msg@qptr 00A5  
           ??_block_on_To_msgqueues 00AB                __size_of_init_queues 006E  
                        __pbssBANK0 00CB                          __pbssBANK1 0184  
                        __pbssBANK2 0200                          __pbssBANK3 0300  
                        __pnvCOMRAM 004D             __end_of_i2c_int_handler 236A  
                      ?i2_check_msg 0032            ??_i2c_master_int_handler 008C  
                __size_of_parseUART 00E8                   recv_msg@maxlength 00B1  
                   recv_msg@msgtype 00B2                     recv_msg@tlength 00B9  
             __size_of_handle_start 00C8                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0034                             ?_memcpy 00A5  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0034  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 062E  
             __end_of_motor_lthread 15A4             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 06E8     __end_ofi2_start_i2c_slave_reply 123A  
                        ??i1_memcpy 0007                          ??i2_memcpy 0038  
        i2start_i2c_slave_reply@msg 0032                    i1send_msg@length 000D  
                     i2_in_high_int 241E                 motor_lthread@length 00C1  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 2244                           ?_init_i2c 00A5  
                       _SleepIfOkay 1F82                           ?_recv_msg 00AF  
                        _in_low_int 1FD0                        _handle_start 1954  
                           __Hparam 0000                           ?_send_msg 00AF  
                           __Lparam 0000          __end_of_timer0_int_handler 1E0A  
                       ?_WriteUSART 0001                    init_uart_recv@uc 00A5  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 0092  
                           __pcinit 1F32                     __size_of_memcpy 005E  
                        _init_queue 1D18                             __ramtop 0400  
                           __ptext0 0C12                             __ptext1 1A1C  
                           __ptext2 239E                             __ptext3 23B2  
                           __ptext4 0EAC                             __ptext5 1496  
                           __ptext6 21D8                             __ptext7 15A4  
                           __ptext8 22D4                             __ptext9 23C4  
                           _in_main 2016                 __end_of_WriteTimer0 241E  
               __end_of_WriteTimer1 23FA                   __end_of_parseUART 1886  
                    ?i2_in_high_int 0032                      __pintcode_body 1C18  
      __end_of_FromMainHigh_recvmsg 2120                end_of_initialization 1F78  
    __size_of_uart_recv_int_handler 005C                             memcpy@d 00AB  
                           memcpy@n 00A9                             memcpy@s 00AD  
     __end_of_uart_recv_int_handler 1F32                          ??_init_i2c 00A7  
                     __Lmediumconst 0000                             int_func 1C18  
                      ??i1_send_msg 0011                       ?_uart_lthread 00A6  
           __size_of_init_uart_recv 002A                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 003C                          ??_recv_msg 00B6  
                      ??i2_send_msg 003C                          ??_send_msg 00B5  
   __size_of_i2c_master_int_handler 052A          __end_of_timer1_int_handler 22A6  
                         _RCSTAbits 000FAB                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 00BB       __size_ofi2_ToMainHigh_sendmsg 0032  
                  _lastMotorCommand 00CC                  __end_ofi1_send_msg 1B86  
                         _TRISCbits 000F94                  __end_ofi2_recv_msg 1496  
                __end_ofi2_send_msg 179E                 __size_of_WriteUSART 0014  
     FromMainHigh_recvmsg@maxlength 003E            timer1_int_handler@result 001C  
                    ??_uart_lthread 00AE                           _TXSTAbits 000FAC  
                        main@length 0135                         ?_in_low_int 00A7  
             timer0_lthread@msgtype 00A7    __size_ofi2_start_i2c_slave_reply 01B4  
             _start_i2c_slave_reply 0EAC        __size_of_i2c_configure_slave 0038  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 2438  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 209C  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 21D8  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                    _timer0_lthread 23B2                         ?_init_queue 00A5  
                         i2memcpy@d 0038                         _WriteTimer0 240C  
                       _WriteTimer1 23E8                           i2memcpy@n 0036  
                         i2memcpy@s 003A                      __end_of_memcpy 1ED6  
                 _enable_interrupts 242A                __size_of_Delay1KTCYx 0016  
               ?_ToMainHigh_recvmsg 00BD                     ??i2_in_high_int 0034  
               ?_ToMainHigh_sendmsg 00BB                  ?_enable_interrupts 0001  
               start_initialization 1F32              _i2c_master_int_handler 06E8  
                     ??_in_high_int 00A7                           _ReadUSART 236A  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 0040  
               ??_enable_interrupts 00A5      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 240C       __end_of_block_on_To_msgqueues 1D18  
                         _OpenUSART 1B86        __end_of_InterruptHandlerHigh 1C9A  
                        init_i2c@ic 00A5                ??_ToMainHigh_recvmsg 00C1  
              ??_ToMainHigh_sendmsg 00BE              __end_of_timer0_lthread 23C4  
                       __pdataBANK0 00CC           __end_of_enable_interrupts 2432  
                          ??_memcpy 00AB                _FromMainHigh_recvmsg 20DE  
      __size_of_init_timer1_lthread 0012                         __pbssCOMRAM 0040  
                        ?_ReadUSART 0001                       ??_init_queues 00A9  
                     __pcstackBANK0 0080                       __pcstackBANK1 0100  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 00A5  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 00A5  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 009E  
    i2c_slave_int_handler@data_read 0096                 __end_of_in_high_int 23E8  
                        ?_OpenUSART 00A5                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 00BF                        _ToMainLow_MQ 0266  
               __size_of_init_queue 007A                      _init_uart_recv 22D4  
                         _check_msg 220E                           __pnvBANK0 00C9  
            ?_start_i2c_slave_reply 00A5                   __size_of_init_i2c 00CE  
                      recv_msg@data 00B4                        ??_WriteUSART 00A5  
                      recv_msg@qmsg 00BB                        recv_msg@slot 00B8  
                      recv_msg@qptr 00AF          i2ToMainHigh_sendmsg@length 008B  
                 __size_of_recv_msg 0136                           __pintcode 0008  
                 __size_of_send_msg 0104                     ?_timer0_lthread 00A5  
             ?_FromMainHigh_recvmsg 008C                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 00BF                __end_of_uart_lthread 1ADC  
                          ?_in_main 00A9                   WriteTimer0@timer0 0032  
                _timer0_int_handler 1D92                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00BA                 uart_lthread@msgtype 00A8  
    i2c_slave_int_handler@error_buf 008E               ToMainLow_sendmsg@data 0018  
               ?_timer0_int_handler 0001                  __end_of_WriteUSART 23B2  
                         _parseUART 179E                    uart_lthread@uptr 00A6  
    i2c_slave_int_handler@msg_ready 0095              __end_of_init_uart_recv 22FE  
               __end_of_init_queues 1E78                            _LATCbits 000F8B  
            __size_of_motor_lthread 010E                     i2check_msg@qptr 0032  
                        ?_check_msg 00A5                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D             i2_start_i2c_slave_reply 1086  
                     ?i2_in_low_int 0034                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 00BC                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 0090  
        __size_of_enable_interrupts 0008                motor_lthread@message 00C7  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
              motor_lthread@msgtype 00BF                timer0_lthread@length 00A9  
                _timer1_int_handler 2276                            i1_memcpy 2120  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 2160                timer0_lthread@msgval 00AD  
          FromMainHigh_recvmsg@data 008E                         _in_high_int 23D6  
                      send_msg@data 00B3                 _i2c_configure_slave 21A0  
                      send_msg@qmsg 00B9                        send_msg@slot 00B8  
                      send_msg@qptr 00AF        __end_ofi2_ToMainHigh_sendmsg 2276  
             uart_lthread@msgbuffer 00AC                 ?_timer1_int_handler 0001  
                        ?_parseUART 0001                     ?_init_uart_recv 00A5  
                          _i2c_mode 00CB                         ??_OpenUSART 00A7  
                   OpenUSART@config 00AA                      ??i2_in_low_int 0036  
             _uart_recv_int_handler 1ED6                        ??_in_low_int 00A9  
                          __Hrparam 0000                ?_i2c_configure_slave 0001  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 003E                ??_timer1_int_handler 001B  
          __size_of_i2c_int_handler 0022                  ??_enter_sleep_mode 0032  
                      ??_init_queue 00A7                        ?_WriteTimer0 0032  
                      ?_WriteTimer1 0001             ToMainLow_sendmsg@length 001A  
           ?_i2c_master_int_handler 0001                       _motor_lthread 1496  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 0118  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0083         ToMainHigh_recvmsg@maxlength 00C1  
                 i2send_msg@tlength 0086             init_timer1_lthread@tptr 00A5  
                       _init_queues 1E0A                  __end_of_in_low_int 2016  
                          __ptext10 1E0A                            __ptext11 1D18  
                          __ptext20 2388                            __ptext12 1886  
                          __ptext21 205A                            __ptext13 21A0  
                          __ptext30 2276                            __ptext22 209C  
                          __ptext14 242A                            __ptext31 23E8  
                          __ptext23 123A                            __ptext15 1C9A  
                          __ptext40 1370                            __ptext32 22FE  
                          __ptext24 1E78                            __ptext16 2016  
                          __ptext41 2348                            __ptext33 1ADC  
                          __ptext25 1B86                            __ptext17 1FD0  
                          __ptext50 22A6                            __ptext42 00BA  
                          __ptext34 2120                            __ptext18 23D6  
                          __ptext51 241E                            __ptext43 1086  
                          __ptext35 23FA                            __ptext27 1ED6  
                          __ptext19 220E                            __ptext52 2324  
                          __ptext44 1954                            __ptext28 179E  
                          __ptext53 2432                            __ptext45 06E8  
                          __ptext37 1D92                            __ptext29 236A  
                          __ptext46 2244                            __ptext38 240C  
                          __ptext47 16A8                            __ptext39 20DE  
                          __ptext48 2160                            __ptext49 1F82  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 00AA            timer0_int_handler@length 0091  
         ??i2_start_i2c_slave_reply 0034                            _init_i2c 1886  
               _init_timer1_lthread 23C4                       __size_of_main 029A  
                     ??i2_check_msg 0034                   main@t1thread_data 011A  
                       ??_check_msg 00A7                  __end_of_init_queue 1D92  
              __size_of_SleepIfOkay 004E                            _recv_msg 123A  
  i2c_slave_int_handler@msg_to_send 0094               ??_i2c_configure_slave 00A5  
                          _send_msg 15A4                      init_queue@qptr 00A5  
             __size_of_uart_lthread 00C0                      i2recv_msg@data 0085  
                    i2recv_msg@qmsg 008A                       ??_Delay1KTCYx 00A5  
                    i2recv_msg@slot 0087                      i2recv_msg@qptr 0080  
    __end_of_i2c_master_int_handler 0C12                 _InterruptHandlerLow 0018  
                    ?_motor_lthread 00BF                ?_init_timer1_lthread 00A5  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 00A5                            memcpy@d1 00A5  
                    _command_length 0044                            memcpy@s1 00A7  
             __end_ofi2_in_high_int 242A                        _motor_length 0048  
                  i2send_msg@length 0082                            intlevel1 0000  
                          intlevel2 0000                         ??_parseUART 001B  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 00A7  
            ?_uart_recv_int_handler 0001                        _uart_lthread 1A1C  
             _block_on_To_msgqueues 1C9A                       ?_handle_start 0001  
                  ??_timer0_lthread 00AD         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
       i2ToMainHigh_sendmsg@msgtype 003D            ToMainHigh_sendmsg@length 00BE  
               __end_ofi2_check_msg 2348                i2_ToMainHigh_sendmsg 2244  
             ??_init_timer1_lthread 00A7                       _command_count 0042  
                       _motor_count 0046              ??_InterruptHandlerHigh 0097  
                 _ToMainLow_recvmsg 205A                   _ToMainLow_sendmsg 22FE  
                main@last_reg_recvd 0117                __end_ofi2_in_low_int 22D4  
                ?_ToMainLow_recvmsg 00BD                 __end_of_Delay1KTCYx 239E  
                 ??_i2c_int_handler 0040                  ?_ToMainLow_sendmsg 0017  
                     uart_lthread@x 00AF                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                      i2send_msg@data 0084  
             ??_InterruptHandlerLow 0021                 ??_ToMainLow_recvmsg 00C1  
                    i2send_msg@qmsg 0089                      i2send_msg@slot 0088  
                    i2send_msg@qptr 0080                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 0093                      ??_handle_start 0032  
                      _USART_Status 004C              motor_lthread@msgbuffer 00C3  
