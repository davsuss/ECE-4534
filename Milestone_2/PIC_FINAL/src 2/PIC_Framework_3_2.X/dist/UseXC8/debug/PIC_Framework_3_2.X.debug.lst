

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Feb 23 14:32:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  000D7A                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _j
    59  000D7A  0064               	dw	100
    60  0000                     _ADCON0	set	4034
    61  0000                     _ADCON0bits	set	4034
    62  0000                     _ADCON1	set	4033
    63  0000                     _ADCON2	set	4032
    64  0000                     _ADRESH	set	4036
    65  0000                     _ADRESL	set	4035
    66  0000                     _INTCONbits	set	4082
    67  0000                     _IPR1bits	set	3999
    68  0000                     _LATB	set	3978
    69  0000                     _LATBbits	set	3978
    70  0000                     _LATCbits	set	3979
    71  0000                     _OSCCON	set	4051
    72  0000                     _OSCCONbits	set	4051
    73  0000                     _OSCTUNEbits	set	3995
    74  0000                     _PIE1bits	set	3997
    75  0000                     _PIR1bits	set	3998
    76  0000                     _RCONbits	set	4048
    77  0000                     _RCREG	set	4014
    78  0000                     _RCSTAbits	set	4011
    79  0000                     _SSPADD	set	4040
    80  0000                     _SSPBUF	set	4041
    81  0000                     _SSPCON1	set	4038
    82  0000                     _SSPCON1bits	set	4038
    83  0000                     _SSPCON2	set	4037
    84  0000                     _SSPCON2bits	set	4037
    85  0000                     _SSPSTAT	set	4039
    86  0000                     _SSPSTATbits	set	4039
    87  0000                     _T0CON	set	4053
    88  0000                     _T0CONbits	set	4053
    89  0000                     _TMR0H	set	4055
    90  0000                     _TMR0L	set	4054
    91  0000                     _TMR1H	set	4047
    92  0000                     _TMR1L	set	4046
    93  0000                     _TRISB	set	3987
    94  0000                     _TRISCbits	set	3988
    95                           
    96                           	psect	nvCOMRAM
    97  00004C                     __pnvCOMRAM:
    98                           	opt stack 0
    99  00004C                     _ic_ptr:
   100                           	opt stack 0
   101  00004C                     	ds	2
   102  00004E                     _uc_ptr:
   103                           	opt stack 0
   104  00004E                     	ds	2
   105                           
   106                           ; #config settings
   107  0000                     
   108                           	psect	cinit
   109  000A6A                     __pcinit:
   110                           	opt stack 0
   111  000A6A                     start_initialization:
   112                           	opt stack 0
   113  000A6A                     __initialization:
   114                           	opt stack 0
   115                           
   116                           ; Clear objects allocated to BANK1 (162 bytes)
   117  000A6A  EE01  F000         	lfsr	0,__pbssBANK1
   118  000A6E  0EA2               	movlw	162
   119  000A70                     clear_0:
   120  000A70  6AEE               	clrf	postinc0,c
   121  000A72  06E8               	decf	wreg,f,c
   122  000A74  E1FD               	bnz	clear_0
   123                           
   124                           ; Clear objects allocated to BANK0 (54 bytes)
   125  000A76  EE00  F080         	lfsr	0,__pbssBANK0
   126  000A7A  0E36               	movlw	54
   127  000A7C                     clear_1:
   128  000A7C  6AEE               	clrf	postinc0,c
   129  000A7E  06E8               	decf	wreg,f,c
   130  000A80  E1FD               	bnz	clear_1
   131                           
   132                           ; Clear objects allocated to COMRAM (12 bytes)
   133  000A82  EE00  F040         	lfsr	0,__pbssCOMRAM
   134  000A86  0E0C               	movlw	12
   135  000A88                     clear_2:
   136  000A88  6AEE               	clrf	postinc0,c
   137  000A8A  06E8               	decf	wreg,f,c
   138  000A8C  E1FD               	bnz	clear_2
   139                           
   140                           ; Initialize objects allocated to COMRAM (2 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142  000A8E  0E7A               	movlw	low __pidataCOMRAM
   143  000A90  6EF6               	movwf	tblptrl,c
   144  000A92  0E0D               	movlw	high __pidataCOMRAM
   145  000A94  6EF7               	movwf	tblptrh,c
   146  000A96  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147  000A98  6EF8               	movwf	tblptru,c
   148  000A9A  0009               	tblrd		*+	;fetch initializer
   149  000A9C  CFF5 F050          	movff	tablat,__pdataCOMRAM
   150  000AA0  0009               	tblrd		*+	;fetch initializer
   151  000AA2  CFF5 F051          	movff	tablat,__pdataCOMRAM+1
   152  000AA6                     end_of_initialization:
   153                           	opt stack 0
   154  000AA6                     __end_of__initialization:
   155                           	opt stack 0
   156  000AA6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  000AA8  6EF8               	movwf	tblptru,c
   158  000AAA  0100               	movlb	0
   159  000AAC  EF3F  F003         	goto	_main	;jump to C main() function
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  000040                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000040                     _Send:
   171                           	opt stack 0
   172  000040                     	ds	2
   173  000042                     _i:
   174                           	opt stack 0
   175  000042                     	ds	2
   176  000044                     _length:
   177                           	opt stack 0
   178  000044                     	ds	2
   179  000046                     _swit:
   180                           	opt stack 0
   181  000046                     	ds	2
   182  000048                     _x:
   183                           	opt stack 0
   184  000048                     	ds	2
   185  00004A                     _MQ_Main_Willing_to_block:
   186                           	opt stack 0
   187  00004A                     	ds	1
   188  00004B                     _USART_Status:
   189                           	opt stack 0
   190  00004B                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	dataCOMRAM
   199  000050                     __pdataCOMRAM:
   200                           	opt stack 0
   201  000050                     _j:
   202                           	opt stack 0
   203  000050                     	ds	2
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	bssBANK0
   212  000080                     __pbssBANK0:
   213                           	opt stack 0
   214  000080                     _ToMainLow_MQ:
   215                           	opt stack 0
   216  000080                     	ds	54
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           	psect	bssBANK1
   225  000100                     __pbssBANK1:
   226                           	opt stack 0
   227  000100                     _FromMainHigh_MQ:
   228                           	opt stack 0
   229  000100                     	ds	54
   230  000136                     _FromMainLow_MQ:
   231                           	opt stack 0
   232  000136                     	ds	54
   233  00016C                     _ToMainHigh_MQ:
   234                           	opt stack 0
   235  00016C                     	ds	54
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	cstackBANK1
   244  0001A2                     __pcstackBANK1:
   245                           	opt stack 0
   246  0001A2                     main@data:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x0
   250  0001A2                     	ds	2
   251  0001A4                     main@uc:
   252                           	opt stack 0
   253                           
   254                           ; 5 bytes @ 0x2
   255  0001A4                     	ds	5
   256  0001A9                     main@ic:
   257                           	opt stack 0
   258                           
   259                           ; 41 bytes @ 0x7
   260  0001A9                     	ds	41
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	cstackBANK0
   269  0000B6                     __pcstackBANK0:
   270                           	opt stack 0
   271  0000B6                     i2send_msg@tlength:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x0
   275  0000B6                     	ds	2
   276  0000B8                     i2send_msg@slot:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x2
   280  0000B8                     	ds	1
   281  0000B9                     i2send_msg@qmsg:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x3
   285  0000B9                     	ds	2
   286  0000BB                     ToMainHigh_sendmsg@msgtype:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x5
   290  0000BB                     	ds	1
   291  0000BC                     ToMainHigh_sendmsg@data:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x6
   295  0000BC                     	ds	2
   296  0000BE                     ToMainHigh_sendmsg@length:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x8
   300  0000BE                     	ds	1
   301  0000BF                     ??_i2c_master_int_handler:
   302                           
   303                           ; 0 bytes @ 0x9
   304  0000BF                     	ds	2
   305  0000C1                     ??_InterruptHandlerHigh:
   306                           
   307                           ; 0 bytes @ 0xB
   308  0000C1                     	ds	15
   309  0000D0                     i2c_configure_master@slave_addr:
   310                           	opt stack 0
   311  0000D0                     i2c_master_recv@length:
   312                           	opt stack 0
   313  0000D0                     OpenADC@config2:
   314                           	opt stack 0
   315  0000D0                     OpenTimer0@config:
   316                           	opt stack 0
   317  0000D0                     init_queue@qptr:
   318                           	opt stack 0
   319  0000D0                     init_i2c@ic:
   320                           	opt stack 0
   321  0000D0                     init_uart_recv@uc:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x1A
   325  0000D0                     	ds	1
   326  0000D1                     OpenADC@portconfig:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x1B
   330  0000D1                     	ds	1
   331  0000D2                     ??_OpenADC:
   332  0000D2                     ??_init_queue:
   333                           
   334                           ; 0 bytes @ 0x1C
   335  0000D2                     	ds	1
   336  0000D3                     init_queue@i:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x1D
   340  0000D3                     	ds	1
   341  0000D4                     ??_init_queues:
   342  0000D4                     OpenADC@config:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x1E
   346  0000D4                     	ds	1
   347  0000D5                     ??_main:
   348                           
   349                           ; 0 bytes @ 0x1F
   350  0000D5                     	ds	2
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358                           	psect	cstackCOMRAM
   359  000001                     __pcstackCOMRAM:
   360                           	opt stack 0
   361  000001                     ?_ReadTimer1:
   362                           	opt stack 0
   363  000001                     ReadUSART@data:
   364                           	opt stack 0
   365  000001                     WriteTimer1@timer1:
   366                           	opt stack 0
   367  000001                     memcpy@d1:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x0
   371  000001                     	ds	2
   372  000003                     ReadTimer1@timer:
   373                           	opt stack 0
   374  000003                     WriteTimer1@timer:
   375                           	opt stack 0
   376  000003                     memcpy@s1:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380  000003                     	ds	2
   381  000005                     memcpy@n:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x4
   385  000005                     	ds	2
   386  000007                     memcpy@d:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390  000007                     	ds	2
   391  000009                     memcpy@s:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x8
   395  000009                     	ds	2
   396  00000B                     send_msg@qptr:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0xA
   400  00000B                     	ds	2
   401  00000D                     send_msg@length:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0xC
   405  00000D                     	ds	1
   406  00000E                     send_msg@msgtype:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0xD
   410  00000E                     	ds	1
   411  00000F                     send_msg@data:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xE
   415  00000F                     	ds	2
   416  000011                     ??_send_msg:
   417                           
   418                           ; 0 bytes @ 0x10
   419  000011                     	ds	1
   420  000012                     send_msg@tlength:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x11
   424  000012                     	ds	2
   425  000014                     send_msg@slot:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x13
   429  000014                     	ds	1
   430  000015                     send_msg@qmsg:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x14
   434  000015                     	ds	2
   435  000017                     ToMainLow_sendmsg@msgtype:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x16
   439  000017                     	ds	1
   440  000018                     ToMainLow_sendmsg@data:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x17
   444  000018                     	ds	2
   445  00001A                     ToMainLow_sendmsg@length:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x19
   449  00001A                     	ds	1
   450  00001B                     ??_timer1_int_handler:
   451  00001B                     ??_uart_recv_int_handler:
   452                           
   453                           ; 0 bytes @ 0x1A
   454  00001B                     	ds	1
   455  00001C                     timer1_int_handler@result:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1B
   459  00001C                     	ds	2
   460  00001E                     ??_InterruptHandlerLow:
   461                           
   462                           ; 0 bytes @ 0x1D
   463  00001E                     	ds	17
   464  00002F                     ?_ReadADC:
   465                           	opt stack 0
   466  00002F                     ?_in_high_int:
   467                           	opt stack 0
   468  00002F                     check_msg@qptr:
   469                           	opt stack 0
   470  00002F                     Handle_i2c_data_save@msg:
   471                           	opt stack 0
   472  00002F                     WriteTimer0@timer0:
   473                           	opt stack 0
   474  00002F                     i2memcpy@d1:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x2E
   478  00002F                     	ds	2
   479  000031                     ??_check_msg:
   480  000031                     ??_Handle_i2c_data_save:
   481  000031                     ?_in_low_int:
   482                           	opt stack 0
   483  000031                     WriteTimer0@timer:
   484                           	opt stack 0
   485  000031                     i2memcpy@s1:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x30
   489  000031                     	ds	1
   490  000032                     ??_adc_int_handler:
   491                           
   492                           ; 0 bytes @ 0x31
   493  000032                     	ds	1
   494  000033                     i2memcpy@n:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x32
   498  000033                     	ds	1
   499  000034                     adc_int_handler@result:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x33
   503  000034                     	ds	1
   504  000035                     i2memcpy@d:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x34
   508  000035                     	ds	2
   509  000037                     i2memcpy@s:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x36
   513  000037                     	ds	2
   514  000039                     i2send_msg@qptr:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x38
   518  000039                     	ds	2
   519  00003B                     i2send_msg@length:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x3A
   523  00003B                     	ds	1
   524  00003C                     i2send_msg@msgtype:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x3B
   528  00003C                     	ds	1
   529  00003D                     i2send_msg@data:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x3C
   533  00003D                     	ds	2
   534  00003F                     ??i2_send_msg:
   535                           
   536                           ; 0 bytes @ 0x3E
   537  00003F                     	ds	1
   538  000040                     tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           
   545                           ; 0 bytes @ 0x3F
   546 ;;
   547 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   548 ;;
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 187 in file "../src/main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  ic             41    7[BANK1 ] struct __i2c_comm
   556 ;;  msgbuffer      11    0        unsigned char [11]
   557 ;;  uc              5    2[BANK1 ] struct __uart_comm
   558 ;;  data            2    0[BANK1 ] PTR int 
   559 ;;		 -> RAM(1023), 
   560 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   561 ;;  uthread_data    2    0        struct __uart_thread_str
   562 ;;  i               1    0        unsigned char 
   563 ;;  last_reg_rec    1    0        unsigned char 
   564 ;;  msgtype         1    0        unsigned char 
   565 ;;  length          1    0        char 
   566 ;;  c               1    0        unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;		None               void
   569 ;; Registers used:
   570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0      48       0       0
   578 ;;      Temps:          0       2       0       0       0
   579 ;;      Totals:         0       2      48       0       0
   580 ;;Total ram usage:       50 bytes
   581 ;; Hardware stack levels required when called:   12
   582 ;; This function calls:
   583 ;;		_OpenADC
   584 ;;		_OpenTimer0
   585 ;;		_enable_interrupts
   586 ;;		_i2c_configure_master
   587 ;;		_i2c_master_recv
   588 ;;		_init_i2c
   589 ;;		_init_queues
   590 ;;		_init_uart_recv
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597  00067E                     __ptext0:
   598                           	opt stack 0
   599  00067E                     _main:
   600                           	opt stack 18
   601                           
   602                           ;main.c: 188: char c;
   603                           ;main.c: 189: signed char length;
   604                           ;main.c: 190: unsigned char msgtype;
   605                           ;main.c: 191: unsigned char last_reg_recvd;
   606                           ;main.c: 192: uart_comm uc;
   607                           ;main.c: 193: i2c_comm ic;
   608                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
   609                           ;main.c: 195: unsigned char i;
   610                           ;main.c: 196: uart_thread_struct uthread_data;
   611                           ;main.c: 198: timer0_thread_struct t0thread_data;
   612                           ;main.c: 206: OSCCON = 0x82;
   613                           
   614                           ;incstack = 0
   615  00067E  0E82               	movlw	130
   616  000680  6ED3               	movwf	4051,c	;volatile
   617                           
   618                           ;main.c: 207: OSCTUNEbits.PLLEN = 0;
   619  000682  9C9B               	bcf	3995,6,c	;volatile
   620                           
   621                           ;main.c: 225: init_uart_recv(&uc);
   622  000684  0101               	movlb	1	; () banked
   623  000686  0E01               	movlw	high main@uc
   624  000688  0100               	movlb	0	; () banked
   625  00068A  0100               	movlb	0	; () banked
   626  00068C  6FD1               	movwf	(init_uart_recv@uc+1)& (0+255),b
   627  00068E  0101               	movlb	1	; () banked
   628  000690  0EA4               	movlw	low main@uc
   629  000692  0100               	movlb	0	; () banked
   630  000694  0100               	movlb	0	; () banked
   631  000696  6FD0               	movwf	init_uart_recv@uc& (0+255),b
   632  000698  EC67  F006         	call	_init_uart_recv	;wreg free
   633                           
   634                           ;main.c: 228: init_i2c(&ic);
   635  00069C  0101               	movlb	1	; () banked
   636  00069E  0E01               	movlw	high main@ic
   637  0006A0  0100               	movlb	0	; () banked
   638  0006A2  0100               	movlb	0	; () banked
   639  0006A4  6FD1               	movwf	(init_i2c@ic+1)& (0+255),b
   640  0006A6  0101               	movlb	1	; () banked
   641  0006A8  0EA9               	movlw	low main@ic
   642  0006AA  0100               	movlb	0	; () banked
   643  0006AC  0100               	movlb	0	; () banked
   644  0006AE  6FD0               	movwf	init_i2c@ic& (0+255),b
   645  0006B0  ECDD  F003         	call	_init_i2c	;wreg free
   646                           
   647                           ;main.c: 234: init_queues();
   648  0006B4  ECA9  F004         	call	_init_queues	;wreg free
   649                           
   650                           ;main.c: 238: TRISB = 0x0;
   651  0006B8  0E00               	movlw	0
   652  0006BA  6E93               	movwf	3987,c	;volatile
   653                           
   654                           ;main.c: 239: LATB = 0x0;
   655  0006BC  0E00               	movlw	0
   656  0006BE  6E8A               	movwf	3978,c	;volatile
   657                           
   658                           ;main.c: 252: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110001);
   659  0006C0  0ED1               	movlw	209
   660  0006C2  EC18  F006         	call	_OpenTimer0
   661                           
   662                           ;main.c: 253: OpenADC(0b11011111 & 0b11111111 & 0b11111011, 0b10000111 & 0b11111111 & 0b
      +                          11111110 & 0b11111101, 0b11111111);
   663  0006C6  0100               	movlb	0	; () banked
   664  0006C8  6FD5               	movwf	??_main& (0+255),b
   665  0006CA  0E84               	movlw	132
   666  0006CC  0100               	movlb	0	; () banked
   667  0006CE  0100               	movlb	0	; () banked
   668  0006D0  6FD0               	movwf	OpenADC@config2& (0+255),b
   669  0006D2  0100               	movlb	0	; () banked
   670  0006D4  51D5               	movf	??_main& (0+255),w,b
   671  0006D6  0100               	movlb	0	; () banked
   672  0006D8  6FD6               	movwf	(??_main+1)& (0+255),b
   673  0006DA  0EFF               	movlw	255
   674  0006DC  0100               	movlb	0	; () banked
   675  0006DE  0100               	movlb	0	; () banked
   676  0006E0  6FD1               	movwf	OpenADC@portconfig& (0+255),b
   677  0006E2  0100               	movlb	0	; () banked
   678  0006E4  51D6               	movf	(??_main+1)& (0+255),w,b
   679  0006E6  0EDB               	movlw	219
   680  0006E8  EC2A  F004         	call	_OpenADC
   681                           
   682                           ;main.c: 254: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
   683  0006EC  9C9E               	bcf	3998,6,c	;volatile
   684  0006EE  8CF2               	bsf	intcon,6,c	;volatile
   685  0006F0  8C9D               	bsf	3997,6,c	;volatile
   686                           
   687                           ;main.c: 270: IPR1bits.TMR1IP = 0;
   688  0006F2  909F               	bcf	3999,0,c	;volatile
   689                           
   690                           ;main.c: 272: IPR1bits.RCIP = 0;
   691  0006F4  9A9F               	bcf	3999,5,c	;volatile
   692                           
   693                           ;main.c: 274: IPR1bits.SSPIP = 1;
   694  0006F6  869F               	bsf	3999,3,c	;volatile
   695                           
   696                           ;main.c: 298: PIE1bits.SSPIE = 1;
   697  0006F8  869D               	bsf	3997,3,c	;volatile
   698                           
   699                           ;main.c: 316: enable_interrupts();
   700  0006FA  ECB4  F006         	call	_enable_interrupts	;wreg free
   701                           
   702                           ;main.c: 414: int *data = 0x01;
   703  0006FE  0E00               	movlw	0
   704  000700  0101               	movlb	1	; () banked
   705  000702  0101               	movlb	1	; () banked
   706  000704  6FA3               	movwf	(main@data+1)& (0+255),b
   707  000706  0E01               	movlw	1
   708  000708  0101               	movlb	1	; () banked
   709  00070A  0101               	movlb	1	; () banked
   710  00070C  6FA2               	movwf	main@data& (0+255),b
   711                           
   712                           ; BSR set to: 1
   713                           ;main.c: 415: i2c_configure_master(0x01);
   714  00070E  0E01               	movlw	1
   715  000710  EC98  F005         	call	_i2c_configure_master
   716                           
   717                           ;main.c: 417: i2c_master_recv(1);
   718  000714  0E01               	movlw	1
   719  000716  ECD1  F005         	call	_i2c_master_recv
   720  00071A  EF5B  F000         	goto	start
   721  00071E                     __end_of_main:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           intcon	equ	0xFF2
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           
   731 ;; *************** function _init_uart_recv *****************
   732 ;; Defined at:
   733 ;;		line 49 in file "../src/my_uart.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  uc              2   26[BANK0 ] PTR struct __uart_comm
   736 ;;		 -> main@uc(5), 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;		None               void
   741 ;; Registers used:
   742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   748 ;;      Params:         0       2       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0
   751 ;;      Totals:         0       2       0       0       0
   752 ;;Total ram usage:        2 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:   10
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text1
   763  000CCE                     __ptext1:
   764                           	opt stack 0
   765  000CCE                     _init_uart_recv:
   766                           	opt stack 19
   767                           
   768                           ;my_uart.c: 50: uc_ptr = uc;
   769                           
   770                           ;incstack = 0
   771  000CCE  0100               	movlb	0	; () banked
   772  000CD0  C0D1  F04F         	movff	init_uart_recv@uc+1,_uc_ptr+1
   773  000CD4  0100               	movlb	0	; () banked
   774  000CD6  C0D0  F04E         	movff	init_uart_recv@uc,_uc_ptr
   775                           
   776                           ; BSR set to: 0
   777                           ;my_uart.c: 51: uc_ptr->buflen = 0;
   778  000CDA  EE20 F004          	lfsr	2,4
   779  000CDE  504E               	movf	_uc_ptr,w,c
   780  000CE0  26D9               	addwf	fsr2l,f,c
   781  000CE2  504F               	movf	_uc_ptr+1,w,c
   782  000CE4  22DA               	addwfc	fsr2h,f,c
   783  000CE6  0E00               	movlw	0
   784  000CE8  6EDF               	movwf	indf2,c
   785                           
   786                           ; BSR set to: 0
   787  000CEA  0012               	return	
   788  000CEC                     __end_of_init_uart_recv:
   789                           	opt stack 0
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           intcon	equ	0xFF2
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           indf2	equ	0xFDF
   798                           fsr2h	equ	0xFDA
   799                           fsr2l	equ	0xFD9
   800                           
   801 ;; *************** function _init_queues *****************
   802 ;; Defined at:
   803 ;;		line 194 in file "../src/messages.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       1       0       0       0
   820 ;;      Totals:         0       1       0       0       0
   821 ;;Total ram usage:        1 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:   11
   824 ;; This function calls:
   825 ;;		_init_queue
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text2
   832  000952                     __ptext2:
   833                           	opt stack 0
   834  000952                     _init_queues:
   835                           	opt stack 18
   836                           
   837                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
   838                           
   839                           ; BSR set to: 0
   840                           ;incstack = 0
   841  000952  0100               	movlb	0	; () banked
   842  000954  6FD4               	movwf	??_init_queues& (0+255),b
   843  000956  0E00               	movlw	0
   844  000958  6E4A               	movwf	_MQ_Main_Willing_to_block,c
   845  00095A  0100               	movlb	0	; () banked
   846  00095C  51D4               	movf	??_init_queues& (0+255),w,b
   847                           
   848                           ; BSR set to: 0
   849                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
   850  00095E  0100               	movlb	0	; () banked
   851  000960  0E00               	movlw	high _ToMainLow_MQ
   852  000962  0100               	movlb	0	; () banked
   853  000964  0100               	movlb	0	; () banked
   854  000966  6FD1               	movwf	(init_queue@qptr+1)& (0+255),b
   855  000968  0100               	movlb	0	; () banked
   856  00096A  0E80               	movlw	low _ToMainLow_MQ
   857  00096C  0100               	movlb	0	; () banked
   858  00096E  0100               	movlb	0	; () banked
   859  000970  6FD0               	movwf	init_queue@qptr& (0+255),b
   860  000972  EC6C  F004         	call	_init_queue	;wreg free
   861                           
   862                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
   863  000976  0101               	movlb	1	; () banked
   864  000978  0E01               	movlw	high _ToMainHigh_MQ
   865  00097A  0100               	movlb	0	; () banked
   866  00097C  0100               	movlb	0	; () banked
   867  00097E  6FD1               	movwf	(init_queue@qptr+1)& (0+255),b
   868  000980  0101               	movlb	1	; () banked
   869  000982  0E6C               	movlw	low _ToMainHigh_MQ
   870  000984  0100               	movlb	0	; () banked
   871  000986  0100               	movlb	0	; () banked
   872  000988  6FD0               	movwf	init_queue@qptr& (0+255),b
   873  00098A  EC6C  F004         	call	_init_queue	;wreg free
   874                           
   875                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
   876  00098E  0101               	movlb	1	; () banked
   877  000990  0E01               	movlw	high _FromMainLow_MQ
   878  000992  0100               	movlb	0	; () banked
   879  000994  0100               	movlb	0	; () banked
   880  000996  6FD1               	movwf	(init_queue@qptr+1)& (0+255),b
   881  000998  0101               	movlb	1	; () banked
   882  00099A  0E36               	movlw	low _FromMainLow_MQ
   883  00099C  0100               	movlb	0	; () banked
   884  00099E  0100               	movlb	0	; () banked
   885  0009A0  6FD0               	movwf	init_queue@qptr& (0+255),b
   886  0009A2  EC6C  F004         	call	_init_queue	;wreg free
   887                           
   888                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
   889  0009A6  0101               	movlb	1	; () banked
   890  0009A8  0E01               	movlw	high _FromMainHigh_MQ
   891  0009AA  0100               	movlb	0	; () banked
   892  0009AC  0100               	movlb	0	; () banked
   893  0009AE  6FD1               	movwf	(init_queue@qptr+1)& (0+255),b
   894  0009B0  0101               	movlb	1	; () banked
   895  0009B2  0E00               	movlw	low _FromMainHigh_MQ
   896  0009B4  0100               	movlb	0	; () banked
   897  0009B6  0100               	movlb	0	; () banked
   898  0009B8  6FD0               	movwf	init_queue@qptr& (0+255),b
   899  0009BA  EC6C  F004         	call	_init_queue	;wreg free
   900  0009BE  0012               	return	
   901  0009C0                     __end_of_init_queues:
   902                           	opt stack 0
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           intcon	equ	0xFF2
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           indf2	equ	0xFDF
   911                           fsr2h	equ	0xFDA
   912                           fsr2l	equ	0xFD9
   913                           
   914 ;; *************** function _init_queue *****************
   915 ;; Defined at:
   916 ;;		line 14 in file "../src/messages.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  qptr            2   26[BANK0 ] PTR struct __msg_queue
   919 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  i               1   29[BANK0 ] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;		None               void
   924 ;; Registers used:
   925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   931 ;;      Params:         0       2       0       0       0
   932 ;;      Locals:         0       1       0       0       0
   933 ;;      Temps:          0       1       0       0       0
   934 ;;      Totals:         0       4       0       0       0
   935 ;;Total ram usage:        4 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:   10
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_init_queues
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text3
   946  0008D8                     __ptext3:
   947                           	opt stack 0
   948  0008D8                     _init_queue:
   949                           	opt stack 18
   950                           
   951                           ;messages.c: 15: unsigned char i;
   952                           ;messages.c: 17: qptr->cur_write_ind = 0;
   953                           
   954                           ;incstack = 0
   955  0008D8  0100               	movlb	0	; () banked
   956  0008DA  EE20 F034          	lfsr	2,52
   957  0008DE  0100               	movlb	0	; () banked
   958  0008E0  51D0               	movf	init_queue@qptr& (0+255),w,b
   959  0008E2  26D9               	addwf	fsr2l,f,c
   960  0008E4  0100               	movlb	0	; () banked
   961  0008E6  51D1               	movf	(init_queue@qptr+1)& (0+255),w,b
   962  0008E8  22DA               	addwfc	fsr2h,f,c
   963  0008EA  0E00               	movlw	0
   964  0008EC  6EDF               	movwf	indf2,c
   965                           
   966                           ;messages.c: 18: qptr->cur_read_ind = 0;
   967  0008EE  0100               	movlb	0	; () banked
   968  0008F0  EE20 F035          	lfsr	2,53
   969  0008F4  0100               	movlb	0	; () banked
   970  0008F6  51D0               	movf	init_queue@qptr& (0+255),w,b
   971  0008F8  26D9               	addwf	fsr2l,f,c
   972  0008FA  0100               	movlb	0	; () banked
   973  0008FC  51D1               	movf	(init_queue@qptr+1)& (0+255),w,b
   974  0008FE  22DA               	addwfc	fsr2h,f,c
   975  000900  0E00               	movlw	0
   976  000902  6EDF               	movwf	indf2,c
   977                           
   978                           ; BSR set to: 0
   979                           ;messages.c: 19: for (i = 0; i < 4; i++) {
   980  000904  0100               	movlb	0	; () banked
   981  000906  6FD2               	movwf	??_init_queue& (0+255),b
   982  000908  0E00               	movlw	0
   983  00090A  0100               	movlb	0	; () banked
   984  00090C  0100               	movlb	0	; () banked
   985  00090E  6FD3               	movwf	init_queue@i& (0+255),b
   986  000910  0100               	movlb	0	; () banked
   987  000912  51D2               	movf	??_init_queue& (0+255),w,b
   988                           
   989                           ; BSR set to: 0
   990  000914  0E03               	movlw	3
   991  000916  0100               	movlb	0	; () banked
   992  000918  0100               	movlb	0	; () banked
   993  00091A  65D3               	cpfsgt	init_queue@i& (0+255),b
   994  00091C  D001               	goto	l2905
   995  00091E  0012               	return	
   996  000920                     l2905:
   997                           
   998                           ; BSR set to: 0
   999                           ;messages.c: 20: qptr->queue[i].full = 0;
  1000  000920  0100               	movlb	0	; () banked
  1001  000922  0100               	movlb	0	; () banked
  1002  000924  51D3               	movf	init_queue@i& (0+255),w,b
  1003  000926  0D0D               	mullw	13
  1004  000928  50F3               	movf	prodl,w,c
  1005  00092A  0100               	movlb	0	; () banked
  1006  00092C  0100               	movlb	0	; () banked
  1007  00092E  25D0               	addwf	init_queue@qptr& (0+255),w,b
  1008  000930  6ED9               	movwf	fsr2l,c
  1009  000932  50F4               	movf	prodh,w,c
  1010  000934  0100               	movlb	0	; () banked
  1011  000936  0100               	movlb	0	; () banked
  1012  000938  21D1               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1013  00093A  6EDA               	movwf	fsr2h,c
  1014  00093C  0E00               	movlw	0
  1015  00093E  6EDF               	movwf	indf2,c
  1016                           
  1017                           ; BSR set to: 0
  1018  000940  0100               	movlb	0	; () banked
  1019  000942  0100               	movlb	0	; () banked
  1020  000944  2BD3               	incf	init_queue@i& (0+255),f,b
  1021                           
  1022                           ; BSR set to: 0
  1023  000946  0E03               	movlw	3
  1024  000948  0100               	movlb	0	; () banked
  1025  00094A  0100               	movlb	0	; () banked
  1026  00094C  65D3               	cpfsgt	init_queue@i& (0+255),b
  1027  00094E  D7E8               	goto	l2905
  1028  000950  0012               	return	
  1029  000952                     __end_of_init_queue:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           prodh	equ	0xFF4
  1036                           prodl	equ	0xFF3
  1037                           intcon	equ	0xFF2
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           indf2	equ	0xFDF
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           
  1044 ;; *************** function _init_i2c *****************
  1045 ;; Defined at:
  1046 ;;		line 350 in file "../src/my_i2c.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  ic              2   26[BANK0 ] PTR struct __i2c_comm
  1049 ;;		 -> main@ic(41), 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;		None               void
  1054 ;; Registers used:
  1055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1061 ;;      Params:         0       2       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         0       2       0       0       0
  1065 ;;Total ram usage:        2 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:   10
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076  0007BA                     __ptext4:
  1077                           	opt stack 0
  1078  0007BA                     _init_i2c:
  1079                           	opt stack 19
  1080                           
  1081                           ;my_i2c.c: 351: ic_ptr = ic;
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;incstack = 0
  1085  0007BA  0100               	movlb	0	; () banked
  1086  0007BC  C0D1  F04D         	movff	init_i2c@ic+1,_ic_ptr+1
  1087  0007C0  0100               	movlb	0	; () banked
  1088  0007C2  C0D0  F04C         	movff	init_i2c@ic,_ic_ptr
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;my_i2c.c: 352: ic_ptr->buffer[0] = 0;
  1092  0007C6  C04C  FFD9         	movff	_ic_ptr,fsr2l
  1093  0007CA  C04D  FFDA         	movff	_ic_ptr+1,fsr2h
  1094  0007CE  0E00               	movlw	0
  1095  0007D0  6EDF               	movwf	indf2,c
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;my_i2c.c: 353: ic_ptr->buffer[1] = 0;
  1099  0007D2  EE20 F001          	lfsr	2,1
  1100  0007D6  504C               	movf	_ic_ptr,w,c
  1101  0007D8  26D9               	addwf	fsr2l,f,c
  1102  0007DA  504D               	movf	_ic_ptr+1,w,c
  1103  0007DC  22DA               	addwfc	fsr2h,f,c
  1104  0007DE  0E00               	movlw	0
  1105  0007E0  6EDF               	movwf	indf2,c
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;my_i2c.c: 354: ic_ptr->buffer[2] = 0;
  1109  0007E2  EE20 F002          	lfsr	2,2
  1110  0007E6  504C               	movf	_ic_ptr,w,c
  1111  0007E8  26D9               	addwf	fsr2l,f,c
  1112  0007EA  504D               	movf	_ic_ptr+1,w,c
  1113  0007EC  22DA               	addwfc	fsr2h,f,c
  1114  0007EE  0E00               	movlw	0
  1115  0007F0  6EDF               	movwf	indf2,c
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;my_i2c.c: 355: ic_ptr->buflen = 0;
  1119  0007F2  EE20 F00A          	lfsr	2,10
  1120  0007F6  504C               	movf	_ic_ptr,w,c
  1121  0007F8  26D9               	addwf	fsr2l,f,c
  1122  0007FA  504D               	movf	_ic_ptr+1,w,c
  1123  0007FC  22DA               	addwfc	fsr2h,f,c
  1124  0007FE  0E00               	movlw	0
  1125  000800  6EDF               	movwf	indf2,c
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;my_i2c.c: 356: ic_ptr->event_count = 0;
  1129  000802  EE20 F00C          	lfsr	2,12
  1130  000806  504C               	movf	_ic_ptr,w,c
  1131  000808  26D9               	addwf	fsr2l,f,c
  1132  00080A  504D               	movf	_ic_ptr+1,w,c
  1133  00080C  22DA               	addwfc	fsr2h,f,c
  1134  00080E  0E00               	movlw	0
  1135  000810  6EDF               	movwf	indf2,c
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;my_i2c.c: 357: ic_ptr->status = 0x5;
  1139  000812  EE20 F00D          	lfsr	2,13
  1140  000816  504C               	movf	_ic_ptr,w,c
  1141  000818  26D9               	addwf	fsr2l,f,c
  1142  00081A  504D               	movf	_ic_ptr+1,w,c
  1143  00081C  22DA               	addwfc	fsr2h,f,c
  1144  00081E  0E05               	movlw	5
  1145  000820  6EDF               	movwf	indf2,c
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;my_i2c.c: 358: ic_ptr->error_count = 0;
  1149  000822  EE20 F00F          	lfsr	2,15
  1150  000826  504C               	movf	_ic_ptr,w,c
  1151  000828  26D9               	addwf	fsr2l,f,c
  1152  00082A  504D               	movf	_ic_ptr+1,w,c
  1153  00082C  22DA               	addwfc	fsr2h,f,c
  1154  00082E  0E00               	movlw	0
  1155  000830  6EDF               	movwf	indf2,c
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;my_i2c.c: 359: ic_ptr->sendBufInd = 0;
  1159  000832  EE20 F028          	lfsr	2,40
  1160  000836  504C               	movf	_ic_ptr,w,c
  1161  000838  26D9               	addwf	fsr2l,f,c
  1162  00083A  504D               	movf	_ic_ptr+1,w,c
  1163  00083C  22DA               	addwfc	fsr2h,f,c
  1164  00083E  0E00               	movlw	0
  1165  000840  6EDF               	movwf	indf2,c
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;my_i2c.c: 360: ic_ptr->sendBufLen = 0;
  1169  000842  EE20 F027          	lfsr	2,39
  1170  000846  504C               	movf	_ic_ptr,w,c
  1171  000848  26D9               	addwf	fsr2l,f,c
  1172  00084A  504D               	movf	_ic_ptr+1,w,c
  1173  00084C  22DA               	addwfc	fsr2h,f,c
  1174  00084E  0E00               	movlw	0
  1175  000850  6EDF               	movwf	indf2,c
  1176                           
  1177                           ; BSR set to: 0
  1178  000852  0012               	return	
  1179  000854                     __end_of_init_i2c:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           prodh	equ	0xFF4
  1186                           prodl	equ	0xFF3
  1187                           intcon	equ	0xFF2
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           indf2	equ	0xFDF
  1191                           fsr2h	equ	0xFDA
  1192                           fsr2l	equ	0xFD9
  1193                           
  1194 ;; *************** function _i2c_master_recv *****************
  1195 ;; Defined at:
  1196 ;;		line 93 in file "../src/my_i2c.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  length          1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  length          1   26[BANK0 ] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      unsigned char 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       1       0       0       0
  1212 ;;      Temps:          0       0       0       0       0
  1213 ;;      Totals:         0       1       0       0       0
  1214 ;;Total ram usage:        1 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:   10
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text5
  1225  000BA2                     __ptext5:
  1226                           	opt stack 0
  1227  000BA2                     _i2c_master_recv:
  1228                           	opt stack 19
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;incstack = 0
  1232                           ;i2c_master_recv@length stored from wreg
  1233  000BA2  CFE8 F0D0          	movff	wreg,i2c_master_recv@length
  1234                           
  1235                           ;my_i2c.c: 95: if (SSPSTATbits.READ_WRITE == 1){
  1236  000BA6  B4C7               	btfsc	4039,2,c	;volatile
  1237  000BA8  0012               	return	
  1238                           
  1239                           ;my_i2c.c: 97: }
  1240                           ;my_i2c.c: 99: ic_ptr->buflen = length;
  1241                           
  1242                           ;my_i2c.c: 96: return -1;
  1243                           ;	Return value of _i2c_master_recv is never used
  1244  000BAA  EE20 F00A          	lfsr	2,10
  1245  000BAE  504C               	movf	_ic_ptr,w,c
  1246  000BB0  26D9               	addwf	fsr2l,f,c
  1247  000BB2  504D               	movf	_ic_ptr+1,w,c
  1248  000BB4  22DA               	addwfc	fsr2h,f,c
  1249  000BB6  0100               	movlb	0	; () banked
  1250  000BB8  C0D0  FFDF         	movff	i2c_master_recv@length,indf2
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;my_i2c.c: 100: SSPCON2bits.RCEN = 1;
  1254  000BBC  86C5               	bsf	4037,3,c	;volatile
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;my_i2c.c: 101: SSPCON2bits.SEN = 1;
  1258  000BBE  80C5               	bsf	4037,0,c	;volatile
  1259                           
  1260                           ;my_i2c.c: 103: ic_ptr->status = 0x10;
  1261  000BC0  EE20 F00D          	lfsr	2,13
  1262  000BC4  504C               	movf	_ic_ptr,w,c
  1263  000BC6  26D9               	addwf	fsr2l,f,c
  1264  000BC8  504D               	movf	_ic_ptr+1,w,c
  1265  000BCA  22DA               	addwfc	fsr2h,f,c
  1266  000BCC  0E10               	movlw	16
  1267  000BCE  6EDF               	movwf	indf2,c
  1268  000BD0  0012               	return	
  1269  000BD2                     __end_of_i2c_master_recv:
  1270                           	opt stack 0
  1271                           tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           prodh	equ	0xFF4
  1276                           prodl	equ	0xFF3
  1277                           intcon	equ	0xFF2
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           indf2	equ	0xFDF
  1281                           fsr2h	equ	0xFDA
  1282                           fsr2l	equ	0xFD9
  1283                           
  1284 ;; *************** function _i2c_configure_master *****************
  1285 ;; Defined at:
  1286 ;;		line 18 in file "../src/my_i2c.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  slave_addr      1    wreg     unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  slave_addr      1   26[BANK0 ] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;		None               void
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       1       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       1       0       0       0
  1304 ;;Total ram usage:        1 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:   10
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text6
  1315  000B30                     __ptext6:
  1316                           	opt stack 0
  1317  000B30                     _i2c_configure_master:
  1318                           	opt stack 19
  1319                           
  1320                           ;incstack = 0
  1321                           ;i2c_configure_master@slave_addr stored from wreg
  1322  000B30  CFE8 F0D0          	movff	wreg,i2c_configure_master@slave_addr
  1323                           
  1324                           ;my_i2c.c: 20: ic_ptr->slave_addr = slave_addr;
  1325  000B34  EE20 F01C          	lfsr	2,28
  1326  000B38  504C               	movf	_ic_ptr,w,c
  1327  000B3A  26D9               	addwf	fsr2l,f,c
  1328  000B3C  504D               	movf	_ic_ptr+1,w,c
  1329  000B3E  22DA               	addwfc	fsr2h,f,c
  1330  000B40  0100               	movlb	0	; () banked
  1331  000B42  C0D0  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;my_i2c.c: 23: SSPCON1 = 0x0;
  1335  000B46  0E00               	movlw	0
  1336  000B48  6EC6               	movwf	4038,c	;volatile
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;my_i2c.c: 24: SSPCON2 = 0x0;
  1340  000B4A  0E00               	movlw	0
  1341  000B4C  6EC5               	movwf	4037,c	;volatile
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;my_i2c.c: 25: SSPSTAT = 0x0;
  1345  000B4E  0E00               	movlw	0
  1346  000B50  6EC7               	movwf	4039,c	;volatile
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;my_i2c.c: 28: SSPADD = 0x0A;
  1350  000B52  0E0A               	movlw	10
  1351  000B54  6EC8               	movwf	4040,c	;volatile
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;my_i2c.c: 31: SSPCON1bits.SSPM = 0x08;
  1355  000B56  50C6               	movf	4038,w,c	;volatile
  1356  000B58  0BF0               	andlw	-16
  1357  000B5A  0908               	iorlw	8
  1358  000B5C  6EC6               	movwf	4038,c	;volatile
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;my_i2c.c: 32: SSPCON1bits.SSPEN = 1;
  1362  000B5E  8AC6               	bsf	4038,5,c	;volatile
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;my_i2c.c: 35: SSPSTAT = 0b10000000;
  1366  000B60  0E80               	movlw	128
  1367  000B62  6EC7               	movwf	4039,c	;volatile
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;my_i2c.c: 38: LATCbits.LATC3 = 1;
  1371  000B64  868B               	bsf	3979,3,c	;volatile
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;my_i2c.c: 39: LATCbits.LATC4 = 1;
  1375  000B66  888B               	bsf	3979,4,c	;volatile
  1376                           
  1377                           ; BSR set to: 0
  1378  000B68  0012               	return	
  1379  000B6A                     __end_of_i2c_configure_master:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           intcon	equ	0xFF2
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           indf2	equ	0xFDF
  1391                           fsr2h	equ	0xFDA
  1392                           fsr2l	equ	0xFD9
  1393                           
  1394 ;; *************** function _enable_interrupts *****************
  1395 ;; Defined at:
  1396 ;;		line 14 in file "../src/interrupts.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;		None               void
  1403 ;; Registers used:
  1404 ;;		None
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0
  1413 ;;      Totals:         0       0       0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:   10
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text7
  1425  000D68                     __ptext7:
  1426                           	opt stack 0
  1427  000D68                     _enable_interrupts:
  1428                           	opt stack 19
  1429                           
  1430                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;incstack = 0
  1434  000D68  8ED0               	bsf	4048,7,c	;volatile
  1435                           
  1436                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  1437  000D6A  8EF2               	bsf	intcon,7,c	;volatile
  1438                           
  1439                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  1440  000D6C  8CF2               	bsf	intcon,6,c	;volatile
  1441  000D6E  0012               	return	
  1442  000D70                     __end_of_enable_interrupts:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           tblptrh	equ	0xFF7
  1446                           tblptrl	equ	0xFF6
  1447                           tablat	equ	0xFF5
  1448                           prodh	equ	0xFF4
  1449                           prodl	equ	0xFF3
  1450                           intcon	equ	0xFF2
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           indf2	equ	0xFDF
  1454                           fsr2h	equ	0xFDA
  1455                           fsr2l	equ	0xFD9
  1456                           
  1457 ;; *************** function _OpenTimer0 *****************
  1458 ;; Defined at:
  1459 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  config          1    wreg     unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  config          1   26[BANK0 ] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;		None               void
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       1       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         0       1       0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:   10
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text8
  1488  000C30                     __ptext8:
  1489                           	opt stack 0
  1490  000C30                     _OpenTimer0:
  1491                           	opt stack 19
  1492                           
  1493                           ;incstack = 0
  1494                           ;OpenTimer0@config stored from wreg
  1495  000C30  CFE8 F0D0          	movff	wreg,OpenTimer0@config
  1496  000C34  0100               	movlb	0	; () banked
  1497  000C36  0100               	movlb	0	; () banked
  1498  000C38  51D0               	movf	OpenTimer0@config& (0+255),w,b
  1499  000C3A  0B7F               	andlw	127
  1500  000C3C  6ED5               	movwf	4053,c	;volatile
  1501                           
  1502                           ; BSR set to: 0
  1503  000C3E  0E00               	movlw	0
  1504  000C40  6ED7               	movwf	4055,c	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507  000C42  0E00               	movlw	0
  1508  000C44  6ED6               	movwf	4054,c	;volatile
  1509                           
  1510                           ; BSR set to: 0
  1511  000C46  94F2               	bcf	intcon,2,c	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514  000C48  0100               	movlb	0	; () banked
  1515  000C4A  0100               	movlb	0	; () banked
  1516  000C4C  AFD0               	btfss	OpenTimer0@config& (0+255),7,b
  1517  000C4E  D002               	goto	l438
  1518                           
  1519                           ; BSR set to: 0
  1520  000C50  8AF2               	bsf	intcon,5,c	;volatile
  1521  000C52  D001               	goto	l439
  1522  000C54                     l438:
  1523                           
  1524                           ; BSR set to: 0
  1525  000C54  9AF2               	bcf	intcon,5,c	;volatile
  1526  000C56                     l439:
  1527                           
  1528                           ; BSR set to: 0
  1529  000C56  8ED5               	bsf	4053,7,c	;volatile
  1530                           
  1531                           ; BSR set to: 0
  1532  000C58  0012               	return	
  1533  000C5A                     __end_of_OpenTimer0:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           prodh	equ	0xFF4
  1540                           prodl	equ	0xFF3
  1541                           intcon	equ	0xFF2
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           indf2	equ	0xFDF
  1545                           fsr2h	equ	0xFDA
  1546                           fsr2l	equ	0xFD9
  1547                           
  1548 ;; *************** function _OpenADC *****************
  1549 ;; Defined at:
  1550 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  config          1    wreg     unsigned char 
  1553 ;;  config2         1   26[BANK0 ] unsigned char 
  1554 ;;  portconfig      1   27[BANK0 ] unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  config          1   30[BANK0 ] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;		None               void
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1566 ;;      Params:         0       2       0       0       0
  1567 ;;      Locals:         0       1       0       0       0
  1568 ;;      Temps:          0       2       0       0       0
  1569 ;;      Totals:         0       5       0       0       0
  1570 ;;Total ram usage:        5 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:   10
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text9
  1581  000854                     __ptext9:
  1582                           	opt stack 0
  1583  000854                     _OpenADC:
  1584                           	opt stack 19
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;incstack = 0
  1588                           ;OpenADC@config stored from wreg
  1589  000854  CFE8 F0D4          	movff	wreg,OpenADC@config
  1590  000858  0E00               	movlw	0
  1591  00085A  6EC2               	movwf	4034,c	;volatile
  1592  00085C  0E00               	movlw	0
  1593  00085E  6EC0               	movwf	4032,c	;volatile
  1594  000860  0100               	movlb	0	; () banked
  1595  000862  0100               	movlb	0	; () banked
  1596  000864  90D8               	bcf	status,0,c
  1597  000866  31D0               	rrcf	OpenADC@config2& (0+255),w,b
  1598  000868  0B3C               	andlw	60
  1599  00086A  6EC2               	movwf	4034,c	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602  00086C  C0D0  F0D2         	movff	OpenADC@config2,??_OpenADC
  1603  000870  0100               	movlb	0	; () banked
  1604  000872  3BD2               	swapf	??_OpenADC& (0+255),f,b
  1605  000874  0EF0               	movlw	240
  1606  000876  17D2               	andwf	??_OpenADC& (0+255),f,b
  1607  000878  0E30               	movlw	48
  1608  00087A  0100               	movlb	0	; () banked
  1609  00087C  17D2               	andwf	??_OpenADC& (0+255),f,b
  1610  00087E  0100               	movlb	0	; () banked
  1611  000880  0100               	movlb	0	; () banked
  1612  000882  51D1               	movf	OpenADC@portconfig& (0+255),w,b
  1613  000884  0B0F               	andlw	15
  1614  000886  0100               	movlb	0	; () banked
  1615  000888  11D2               	iorwf	??_OpenADC& (0+255),w,b
  1616  00088A  6EC1               	movwf	4033,c	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619  00088C  C0D4  F0D2         	movff	OpenADC@config,??_OpenADC
  1620  000890  0100               	movlb	0	; () banked
  1621  000892  90D8               	bcf	status,0,c
  1622  000894  37D2               	rlcf	??_OpenADC& (0+255),f,b
  1623  000896  0100               	movlb	0	; () banked
  1624  000898  90D8               	bcf	status,0,c
  1625  00089A  37D2               	rlcf	??_OpenADC& (0+255),f,b
  1626  00089C  0E38               	movlw	56
  1627  00089E  0100               	movlb	0	; () banked
  1628  0008A0  17D2               	andwf	??_OpenADC& (0+255),f,b
  1629  0008A2  C0D4  F0D3         	movff	OpenADC@config,??_OpenADC+1
  1630  0008A6  0100               	movlb	0	; () banked
  1631  0008A8  3BD3               	swapf	(??_OpenADC+1)& (0+255),f,b
  1632  0008AA  0E0F               	movlw	15
  1633  0008AC  17D3               	andwf	(??_OpenADC+1)& (0+255),f,b
  1634  0008AE  0E07               	movlw	7
  1635  0008B0  0100               	movlb	0	; () banked
  1636  0008B2  17D3               	andwf	(??_OpenADC+1)& (0+255),f,b
  1637  0008B4  0100               	movlb	0	; () banked
  1638  0008B6  0100               	movlb	0	; () banked
  1639  0008B8  51D4               	movf	OpenADC@config& (0+255),w,b
  1640  0008BA  0B80               	andlw	128
  1641  0008BC  0100               	movlb	0	; () banked
  1642  0008BE  11D3               	iorwf	(??_OpenADC+1)& (0+255),w,b
  1643  0008C0  0100               	movlb	0	; () banked
  1644  0008C2  11D2               	iorwf	??_OpenADC& (0+255),w,b
  1645  0008C4  6EC0               	movwf	4032,c	;volatile
  1646                           
  1647                           ; BSR set to: 0
  1648  0008C6  0100               	movlb	0	; () banked
  1649  0008C8  0100               	movlb	0	; () banked
  1650  0008CA  AFD0               	btfss	OpenADC@config2& (0+255),7,b
  1651  0008CC  D003               	goto	l417
  1652                           
  1653                           ; BSR set to: 0
  1654  0008CE  9C9E               	bcf	3998,6,c	;volatile
  1655  0008D0  8C9D               	bsf	3997,6,c	;volatile
  1656  0008D2  8CF2               	bsf	intcon,6,c	;volatile
  1657  0008D4                     l417:
  1658                           
  1659                           ; BSR set to: 0
  1660  0008D4  80C2               	bsf	4034,0,c	;volatile
  1661                           
  1662                           ; BSR set to: 0
  1663  0008D6  0012               	return	
  1664  0008D8                     __end_of_OpenADC:
  1665                           	opt stack 0
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           prodh	equ	0xFF4
  1671                           prodl	equ	0xFF3
  1672                           intcon	equ	0xFF2
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           indf2	equ	0xFDF
  1676                           fsr2h	equ	0xFDA
  1677                           fsr2l	equ	0xFD9
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _InterruptHandlerLow *****************
  1681 ;; Defined at:
  1682 ;;		line 131 in file "../src/interrupts.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0
  1698 ;;      Temps:         17       0       0       0       0
  1699 ;;      Totals:        17       0       0       0       0
  1700 ;;Total ram usage:       17 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    9
  1703 ;; This function calls:
  1704 ;;		_timer1_int_handler
  1705 ;;		_uart_recv_int_handler
  1706 ;; This function is called by:
  1707 ;;		Interrupt level 1
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	intcodelo
  1712  000018                     __pintcodelo:
  1713                           	opt stack 0
  1714  000018                     _InterruptHandlerLow:
  1715                           	opt stack 18
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;incstack = 0
  1719  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  1720  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  1721  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  1722  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  1723  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  1724  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  1725  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  1726  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  1727  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  1728  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  1729  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  1730  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  1731  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  1732  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  1733  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  1734  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  1735  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  1736                           
  1737                           ;interrupts.c: 133: if (PIR1bits.TMR1IF) {
  1738  00005C  A09E               	btfss	3998,0,c	;volatile
  1739  00005E  D003               	goto	i1l3309
  1740                           
  1741                           ;interrupts.c: 134: PIR1bits.TMR1IF = 0;
  1742  000060  909E               	bcf	3998,0,c	;volatile
  1743                           
  1744                           ;interrupts.c: 135: timer1_int_handler();
  1745  000062  ECE9  F005         	call	_timer1_int_handler	;wreg free
  1746  000066                     i1l3309:
  1747                           
  1748                           ;interrupts.c: 136: }
  1749                           ;interrupts.c: 139: if (PIR1bits.RCIF) {
  1750  000066  AA9E               	btfss	3998,5,c	;volatile
  1751  000068  D003               	goto	i1l52
  1752                           
  1753                           ;interrupts.c: 140: PIR1bits.RCIF = 0;
  1754  00006A  9A9E               	bcf	3998,5,c	;volatile
  1755                           
  1756                           ;interrupts.c: 141: uart_recv_int_handler();
  1757  00006C  EC8F  F003         	call	_uart_recv_int_handler	;wreg free
  1758  000070                     i1l52:
  1759  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  1760  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  1761  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  1762  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  1763  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  1764  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  1765  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  1766  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  1767  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  1768  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  1769  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  1770  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  1771  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  1772  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  1773  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  1774  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  1775  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  1776  0000B4  0010               	retfie	
  1777  0000B6                     __end_of_InterruptHandlerLow:
  1778                           	opt stack 0
  1779                           pclatu	equ	0xFFB
  1780                           pclath	equ	0xFFA
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           postinc0	equ	0xFEE
  1789                           fsr0h	equ	0xFEA
  1790                           fsr0l	equ	0xFE9
  1791                           wreg	equ	0xFE8
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           bsr	equ	0xFE0
  1795                           indf2	equ	0xFDF
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _uart_recv_int_handler *****************
  1801 ;; Defined at:
  1802 ;;		line 11 in file "../src/my_uart.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0
  1818 ;;      Temps:          1       0       0       0       0
  1819 ;;      Totals:         1       0       0       0       0
  1820 ;;Total ram usage:        1 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    8
  1823 ;; This function calls:
  1824 ;;		_ReadUSART
  1825 ;;		_ToMainLow_sendmsg
  1826 ;; This function is called by:
  1827 ;;		_InterruptHandlerLow
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text11
  1832  00071E                     __ptext11:
  1833                           	opt stack 0
  1834  00071E                     _uart_recv_int_handler:
  1835                           	opt stack 18
  1836                           
  1837                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  1838                           
  1839                           ;incstack = 0
  1840  00071E  AA9E               	btfss	3998,5,c	;volatile
  1841  000720  D03C               	goto	i1l3297
  1842                           
  1843                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  1844  000722  EE20 F004          	lfsr	2,4
  1845  000726  504E               	movf	_uc_ptr,w,c
  1846  000728  26D9               	addwf	fsr2l,f,c
  1847  00072A  504F               	movf	_uc_ptr+1,w,c
  1848  00072C  22DA               	addwfc	fsr2h,f,c
  1849  00072E  50DF               	movf	indf2,w,c
  1850  000730  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  1851  000732  501B               	movf	??_uart_recv_int_handler,w,c
  1852  000734  0D01               	mullw	1
  1853  000736  50F3               	movf	prodl,w,c
  1854  000738  244E               	addwf	_uc_ptr,w,c
  1855  00073A  6ED9               	movwf	fsr2l,c
  1856  00073C  50F4               	movf	prodh,w,c
  1857  00073E  204F               	addwfc	_uc_ptr+1,w,c
  1858  000740  6EDA               	movwf	fsr2h,c
  1859  000742  EC76  F006         	call	_ReadUSART	;wreg free
  1860  000746  6EDF               	movwf	indf2,c
  1861                           
  1862                           ;my_uart.c: 25: uc_ptr->buflen++;
  1863  000748  EE20 F004          	lfsr	2,4
  1864  00074C  504E               	movf	_uc_ptr,w,c
  1865  00074E  26D9               	addwf	fsr2l,f,c
  1866  000750  504F               	movf	_uc_ptr+1,w,c
  1867  000752  22DA               	addwfc	fsr2h,f,c
  1868  000754  2ADF               	incf	indf2,f,c
  1869                           
  1870                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  1871  000756  EE20 F004          	lfsr	2,4
  1872  00075A  504E               	movf	_uc_ptr,w,c
  1873  00075C  26D9               	addwf	fsr2l,f,c
  1874  00075E  504F               	movf	_uc_ptr+1,w,c
  1875  000760  22DA               	addwfc	fsr2h,f,c
  1876  000762  0E04               	movlw	4
  1877  000764  62DF               	cpfseq	indf2,c
  1878  000766  D019               	goto	i1l3297
  1879                           
  1880                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  1881  000768  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  1882  00076A  0E1F               	movlw	31
  1883  00076C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  1884  00076E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  1885  000770  C04F  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  1886  000774  C04E  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  1887  000778  EE20 F004          	lfsr	2,4
  1888  00077C  504E               	movf	_uc_ptr,w,c
  1889  00077E  26D9               	addwf	fsr2l,f,c
  1890  000780  504F               	movf	_uc_ptr+1,w,c
  1891  000782  22DA               	addwfc	fsr2h,f,c
  1892  000784  50DF               	movf	indf2,w,c
  1893  000786  EC42  F006         	call	_ToMainLow_sendmsg
  1894                           
  1895                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  1896  00078A  EE20 F004          	lfsr	2,4
  1897  00078E  504E               	movf	_uc_ptr,w,c
  1898  000790  26D9               	addwf	fsr2l,f,c
  1899  000792  504F               	movf	_uc_ptr+1,w,c
  1900  000794  22DA               	addwfc	fsr2h,f,c
  1901  000796  0E00               	movlw	0
  1902  000798  6EDF               	movwf	indf2,c
  1903  00079A                     i1l3297:
  1904                           
  1905                           ;my_uart.c: 30: }
  1906                           ;my_uart.c: 31: }
  1907                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  1908  00079A  A64B               	btfss	_USART_Status,3,c
  1909  00079C  0012               	return	
  1910                           
  1911                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  1912  00079E  98AB               	bcf	4011,4,c	;volatile
  1913                           
  1914                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  1915  0007A0  88AB               	bsf	4011,4,c	;volatile
  1916                           
  1917                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  1918  0007A2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  1919  0007A4  0E1E               	movlw	30
  1920  0007A6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  1921  0007A8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  1922  0007AA  0E00               	movlw	0
  1923  0007AC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  1924  0007AE  0E00               	movlw	0
  1925  0007B0  6E18               	movwf	ToMainLow_sendmsg@data,c
  1926  0007B2  0E00               	movlw	0
  1927  0007B4  EC42  F006         	call	_ToMainLow_sendmsg
  1928  0007B8  0012               	return	
  1929  0007BA                     __end_of_uart_recv_int_handler:
  1930                           	opt stack 0
  1931                           pclatu	equ	0xFFB
  1932                           pclath	equ	0xFFA
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           prodh	equ	0xFF4
  1938                           prodl	equ	0xFF3
  1939                           intcon	equ	0xFF2
  1940                           postinc0	equ	0xFEE
  1941                           fsr0h	equ	0xFEA
  1942                           fsr0l	equ	0xFE9
  1943                           wreg	equ	0xFE8
  1944                           fsr1h	equ	0xFE2
  1945                           fsr1l	equ	0xFE1
  1946                           bsr	equ	0xFE0
  1947                           indf2	equ	0xFDF
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _ReadUSART *****************
  1953 ;; Defined at:
  1954 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  data            1    0[COMRAM] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      unsigned char 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         1       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0
  1971 ;;      Totals:         1       0       0       0       0
  1972 ;;Total ram usage:        1 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    5
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_uart_recv_int_handler
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text12
  1983  000CEC                     __ptext12:
  1984                           	opt stack 0
  1985  000CEC                     _ReadUSART:
  1986                           	opt stack 20
  1987                           
  1988                           ;incstack = 0
  1989  000CEC  0EF2               	movlw	242
  1990  000CEE  164B               	andwf	_USART_Status,f,c
  1991  000CF0  ACAB               	btfss	4011,6,c	;volatile
  1992  000CF2  D003               	goto	i1l472
  1993  000CF4  904B               	bcf	_USART_Status,0,c
  1994  000CF6  B0AB               	btfsc	4011,0,c	;volatile
  1995  000CF8  804B               	bsf	_USART_Status,0,c
  1996  000CFA                     i1l472:
  1997  000CFA  B4AB               	btfsc	4011,2,c	;volatile
  1998  000CFC  844B               	bsf	_USART_Status,2,c
  1999  000CFE  B2AB               	btfsc	4011,1,c	;volatile
  2000  000D00  864B               	bsf	_USART_Status,3,c
  2001  000D02  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  2002  000D06  5001               	movf	ReadUSART@data,w,c
  2003  000D08  0012               	return	
  2004  000D0A                     __end_of_ReadUSART:
  2005                           	opt stack 0
  2006                           pclatu	equ	0xFFB
  2007                           pclath	equ	0xFFA
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           prodh	equ	0xFF4
  2013                           prodl	equ	0xFF3
  2014                           intcon	equ	0xFF2
  2015                           postinc0	equ	0xFEE
  2016                           fsr0h	equ	0xFEA
  2017                           fsr0l	equ	0xFE9
  2018                           wreg	equ	0xFE8
  2019                           fsr1h	equ	0xFE2
  2020                           fsr1l	equ	0xFE1
  2021                           bsr	equ	0xFE0
  2022                           indf2	equ	0xFDF
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _timer1_int_handler *****************
  2028 ;; Defined at:
  2029 ;;		line 42 in file "../src/user_interrupts.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  result          2   27[COMRAM] unsigned int 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         2       0       0       0       0
  2045 ;;      Temps:          1       0       0       0       0
  2046 ;;      Totals:         3       0       0       0       0
  2047 ;;Total ram usage:        3 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    8
  2050 ;; This function calls:
  2051 ;;		_ReadTimer1
  2052 ;;		_ToMainLow_sendmsg
  2053 ;;		_WriteTimer1
  2054 ;; This function is called by:
  2055 ;;		_InterruptHandlerLow
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text13
  2060  000BD2                     __ptext13:
  2061                           	opt stack 0
  2062  000BD2                     _timer1_int_handler:
  2063                           	opt stack 18
  2064                           
  2065                           ;user_interrupts.c: 43: unsigned int result;
  2066                           ;user_interrupts.c: 50: result = ReadTimer1();
  2067                           
  2068                           ;incstack = 0
  2069  000BD2  EC8E  F006         	call	_ReadTimer1	;wreg free
  2070  000BD6  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  2071  000BDA  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  2072                           
  2073                           ;user_interrupts.c: 51: ToMainLow_sendmsg(0, 11, (void *) 0);
  2074  000BDE  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  2075  000BE0  0E0B               	movlw	11
  2076  000BE2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2077  000BE4  501B               	movf	??_timer1_int_handler& (0+255),w,c
  2078  000BE6  0E00               	movlw	0
  2079  000BE8  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  2080  000BEA  0E00               	movlw	0
  2081  000BEC  6E18               	movwf	ToMainLow_sendmsg@data,c
  2082  000BEE  0E00               	movlw	0
  2083  000BF0  EC42  F006         	call	_ToMainLow_sendmsg
  2084                           
  2085                           ;user_interrupts.c: 54: WriteTimer1(0);
  2086  000BF4  0E00               	movlw	0
  2087  000BF6  6E02               	movwf	WriteTimer1@timer1+1,c
  2088  000BF8  0E00               	movlw	0
  2089  000BFA  6E01               	movwf	WriteTimer1@timer1,c
  2090  000BFC  EC85  F006         	call	_WriteTimer1	;wreg free
  2091  000C00  0012               	return	
  2092  000C02                     __end_of_timer1_int_handler:
  2093                           	opt stack 0
  2094                           pclatu	equ	0xFFB
  2095                           pclath	equ	0xFFA
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           prodh	equ	0xFF4
  2101                           prodl	equ	0xFF3
  2102                           intcon	equ	0xFF2
  2103                           postinc0	equ	0xFEE
  2104                           fsr0h	equ	0xFEA
  2105                           fsr0l	equ	0xFE9
  2106                           wreg	equ	0xFE8
  2107                           fsr1h	equ	0xFE2
  2108                           fsr1l	equ	0xFE1
  2109                           bsr	equ	0xFE0
  2110                           indf2	equ	0xFDF
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _WriteTimer1 *****************
  2116 ;; Defined at:
  2117 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  timer1          2    0[COMRAM] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  timer           2    2[COMRAM] struct Timers
  2122 ;; Return value:  Size  Location     Type
  2123 ;;		None               void
  2124 ;; Registers used:
  2125 ;;		None
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2131 ;;      Params:         2       0       0       0       0
  2132 ;;      Locals:         2       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         4       0       0       0       0
  2135 ;;Total ram usage:        4 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    5
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_timer1_int_handler
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text14
  2146  000D0A                     __ptext14:
  2147                           	opt stack 0
  2148  000D0A                     _WriteTimer1:
  2149                           	opt stack 20
  2150                           
  2151                           ;incstack = 0
  2152  000D0A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2153  000D0E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2154  000D12  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2155  000D16  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2156  000D1A  0012               	return	
  2157  000D1C                     __end_of_WriteTimer1:
  2158                           	opt stack 0
  2159                           pclatu	equ	0xFFB
  2160                           pclath	equ	0xFFA
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           intcon	equ	0xFF2
  2168                           postinc0	equ	0xFEE
  2169                           fsr0h	equ	0xFEA
  2170                           fsr0l	equ	0xFE9
  2171                           wreg	equ	0xFE8
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           bsr	equ	0xFE0
  2175                           indf2	equ	0xFDF
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _ToMainLow_sendmsg *****************
  2181 ;; Defined at:
  2182 ;;		line 103 in file "../src/messages.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  length          1    wreg     unsigned char 
  2185 ;;  msgtype         1   22[COMRAM] unsigned char 
  2186 ;;  data            2   23[COMRAM] PTR void 
  2187 ;;		 -> timer0_lthread@val(2), NULL(0), main@uc(5), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  length          1   25[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      char 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2199 ;;      Params:         3       0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         4       0       0       0       0
  2203 ;;Total ram usage:        4 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    7
  2206 ;; This function calls:
  2207 ;;		_send_msg
  2208 ;; This function is called by:
  2209 ;;		_uart_recv_int_handler
  2210 ;;		_timer1_int_handler
  2211 ;;		_timer0_lthread
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text15
  2216  000C84                     __ptext15:
  2217                           	opt stack 0
  2218  000C84                     _ToMainLow_sendmsg:
  2219                           	opt stack 18
  2220                           
  2221                           ;incstack = 0
  2222                           ;ToMainLow_sendmsg@length stored from wreg
  2223  000C84  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  2224                           
  2225                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2226                           ;	Return value of _ToMainLow_sendmsg is never used
  2227  000C88  0100               	movlb	0	; () banked
  2228  000C8A  0E00               	movlw	high _ToMainLow_MQ
  2229  000C8C  6E0C               	movwf	send_msg@qptr+1,c
  2230  000C8E  0100               	movlb	0	; () banked
  2231  000C90  0E80               	movlw	low _ToMainLow_MQ
  2232  000C92  6E0B               	movwf	send_msg@qptr,c
  2233  000C94  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  2234  000C98  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2235  000C9C  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2236  000CA0  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  2237  000CA4  ECEA  F002         	call	_send_msg	;wreg free
  2238  000CA8  0012               	return	
  2239  000CAA                     __end_of_ToMainLow_sendmsg:
  2240                           	opt stack 0
  2241                           pclatu	equ	0xFFB
  2242                           pclath	equ	0xFFA
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon	equ	0xFF2
  2250                           postinc0	equ	0xFEE
  2251                           fsr0h	equ	0xFEA
  2252                           fsr0l	equ	0xFE9
  2253                           wreg	equ	0xFE8
  2254                           fsr1h	equ	0xFE2
  2255                           fsr1l	equ	0xFE1
  2256                           bsr	equ	0xFE0
  2257                           indf2	equ	0xFDF
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _send_msg *****************
  2263 ;; Defined at:
  2264 ;;		line 24 in file "../src/messages.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  2267 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2268 ;;  length          1   12[COMRAM] unsigned char 
  2269 ;;  msgtype         1   13[COMRAM] unsigned char 
  2270 ;;  data            2   14[COMRAM] PTR void 
  2271 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(41), 
  2272 ;;		 -> main@uc(5), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  2275 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2276 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2277 ;;  tlength         2   17[COMRAM] unsigned int 
  2278 ;;  slot            1   19[COMRAM] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      char 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2288 ;;      Params:         6       0       0       0       0
  2289 ;;      Locals:         5       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0
  2291 ;;      Totals:        12       0       0       0       0
  2292 ;;Total ram usage:       12 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    6
  2295 ;; This function calls:
  2296 ;;		_memcpy
  2297 ;; This function is called by:
  2298 ;;		_ToMainLow_sendmsg
  2299 ;;		_FromMainLow_sendmsg
  2300 ;;		_FromMainHigh_sendmsg
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text16
  2305  0005D4                     __ptext16:
  2306                           	opt stack 0
  2307  0005D4                     _send_msg:
  2308                           	opt stack 18
  2309                           
  2310                           ;messages.c: 25: unsigned char slot;
  2311                           ;messages.c: 27: msg *qmsg;
  2312                           ;messages.c: 28: size_t tlength = length;
  2313                           
  2314                           ;incstack = 0
  2315  0005D4  C00D  F012         	movff	send_msg@length,send_msg@tlength
  2316  0005D8  6A13               	clrf	send_msg@tlength+1,c
  2317                           
  2318                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2319  0005DA  EE20 F034          	lfsr	2,52
  2320  0005DE  500B               	movf	send_msg@qptr,w,c
  2321  0005E0  26D9               	addwf	fsr2l,f,c
  2322  0005E2  500C               	movf	send_msg@qptr+1,w,c
  2323  0005E4  22DA               	addwfc	fsr2h,f,c
  2324  0005E6  50DF               	movf	indf2,w,c
  2325  0005E8  6E14               	movwf	send_msg@slot,c
  2326                           
  2327                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2328  0005EA  5014               	movf	send_msg@slot,w,c
  2329  0005EC  0D0D               	mullw	13
  2330  0005EE  50F3               	movf	prodl,w,c
  2331  0005F0  240B               	addwf	send_msg@qptr,w,c
  2332  0005F2  6E15               	movwf	send_msg@qmsg,c
  2333  0005F4  50F4               	movf	prodh,w,c
  2334  0005F6  200C               	addwfc	send_msg@qptr+1,w,c
  2335  0005F8  6E16               	movwf	send_msg@qmsg+1,c
  2336                           
  2337                           ;messages.c: 41: if (qmsg->full != 0) {
  2338  0005FA  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  2339  0005FE  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2340  000602  50DF               	movf	indf2,w,c
  2341  000604  B4D8               	btfsc	status,2,c
  2342  000606  D002               	goto	i1l3263
  2343                           
  2344                           ;messages.c: 42: return (-1);
  2345  000608  0EFF               	movlw	255
  2346  00060A  0012               	return	
  2347  00060C                     i1l3263:
  2348                           
  2349                           ;messages.c: 43: }
  2350                           ;messages.c: 46: qmsg->length = length;
  2351  00060C  EE20 F001          	lfsr	2,1
  2352  000610  5015               	movf	send_msg@qmsg,w,c
  2353  000612  26D9               	addwf	fsr2l,f,c
  2354  000614  5016               	movf	send_msg@qmsg+1,w,c
  2355  000616  22DA               	addwfc	fsr2h,f,c
  2356  000618  C00D  FFDF         	movff	send_msg@length,indf2
  2357                           
  2358                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2359  00061C  EE20 F002          	lfsr	2,2
  2360  000620  5015               	movf	send_msg@qmsg,w,c
  2361  000622  26D9               	addwf	fsr2l,f,c
  2362  000624  5016               	movf	send_msg@qmsg+1,w,c
  2363  000626  22DA               	addwfc	fsr2h,f,c
  2364  000628  C00E  FFDF         	movff	send_msg@msgtype,indf2
  2365                           
  2366                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2367  00062C  0E03               	movlw	3
  2368  00062E  2415               	addwf	send_msg@qmsg,w,c
  2369  000630  6E01               	movwf	memcpy@d1,c
  2370  000632  0E00               	movlw	0
  2371  000634  2016               	addwfc	send_msg@qmsg+1,w,c
  2372  000636  6E02               	movwf	memcpy@d1+1,c
  2373  000638  C010  F004         	movff	send_msg@data+1,memcpy@s1+1
  2374  00063C  C00F  F003         	movff	send_msg@data,memcpy@s1
  2375  000640  C012  F005         	movff	send_msg@tlength,memcpy@n
  2376  000644  C013  F006         	movff	send_msg@tlength+1,memcpy@n+1
  2377  000648  EC58  F005         	call	_memcpy	;wreg free
  2378                           
  2379                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2380  00064C  EE20 F034          	lfsr	2,52
  2381  000650  500B               	movf	send_msg@qptr,w,c
  2382  000652  26D9               	addwf	fsr2l,f,c
  2383  000654  500C               	movf	send_msg@qptr+1,w,c
  2384  000656  22DA               	addwfc	fsr2h,f,c
  2385  000658  EE10 F034          	lfsr	1,52
  2386  00065C  500B               	movf	send_msg@qptr,w,c
  2387  00065E  26E1               	addwf	fsr1l,f,c
  2388  000660  500C               	movf	send_msg@qptr+1,w,c
  2389  000662  22E2               	addwfc	fsr1h,f,c
  2390  000664  50E7               	movf	indf1,w,c
  2391  000666  6E11               	movwf	??_send_msg& (0+255),c
  2392  000668  2811               	incf	??_send_msg,w,c
  2393  00066A  0B03               	andlw	3
  2394  00066C  6EDF               	movwf	indf2,c
  2395                           
  2396                           ;messages.c: 59: qmsg->full = 1;
  2397  00066E  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  2398  000672  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2399  000676  0E01               	movlw	1
  2400  000678  6EDF               	movwf	indf2,c
  2401                           
  2402                           ;messages.c: 60: return (1);
  2403  00067A  0E01               	movlw	1
  2404  00067C  0012               	return	
  2405  00067E                     __end_of_send_msg:
  2406                           	opt stack 0
  2407                           pclatu	equ	0xFFB
  2408                           pclath	equ	0xFFA
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           prodh	equ	0xFF4
  2414                           prodl	equ	0xFF3
  2415                           intcon	equ	0xFF2
  2416                           postinc0	equ	0xFEE
  2417                           fsr0h	equ	0xFEA
  2418                           fsr0l	equ	0xFE9
  2419                           wreg	equ	0xFE8
  2420                           indf1	equ	0xFE7
  2421                           fsr1h	equ	0xFE2
  2422                           fsr1l	equ	0xFE1
  2423                           bsr	equ	0xFE0
  2424                           indf2	equ	0xFDF
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _memcpy *****************
  2430 ;; Defined at:
  2431 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  d1              2    0[COMRAM] PTR void 
  2434 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2435 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2436 ;;  s1              2    2[COMRAM] PTR const void 
  2437 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2438 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2439 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  2440 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(41), 
  2441 ;;		 -> main@uc(5), 
  2442 ;;  n               2    4[COMRAM] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2445 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  2446 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  2447 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  2448 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(41), 
  2449 ;;		 -> main@uc(5), 
  2450 ;;  d               2    6[COMRAM] PTR unsigned char 
  2451 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2452 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  2    0[COMRAM] PTR void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2462 ;;      Params:         6       0       0       0       0
  2463 ;;      Locals:         4       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:        10       0       0       0       0
  2466 ;;Total ram usage:       10 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    5
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_send_msg
  2473 ;;		_recv_msg
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text17
  2478  000AB0                     __ptext17:
  2479                           	opt stack 0
  2480  000AB0                     _memcpy:
  2481                           	opt stack 18
  2482                           
  2483                           ;incstack = 0
  2484  000AB0  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  2485  000AB4  C003  F009         	movff	memcpy@s1,memcpy@s
  2486  000AB8  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  2487  000ABC  C001  F007         	movff	memcpy@d1,memcpy@d
  2488  000AC0  D00E               	goto	i1l2919
  2489  000AC2                     i1l2913:
  2490  000AC2  C009  FFD9         	movff	memcpy@s,fsr2l
  2491  000AC6  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  2492  000ACA  C007  FFE1         	movff	memcpy@d,fsr1l
  2493  000ACE  C008  FFE2         	movff	memcpy@d+1,fsr1h
  2494  000AD2  CFDF FFE7          	movff	indf2,indf1
  2495  000AD6  4A09               	infsnz	memcpy@s,f,c
  2496  000AD8  2A0A               	incf	memcpy@s+1,f,c
  2497  000ADA  4A07               	infsnz	memcpy@d,f,c
  2498  000ADC  2A08               	incf	memcpy@d+1,f,c
  2499  000ADE                     i1l2919:
  2500  000ADE  0605               	decf	memcpy@n,f,c
  2501  000AE0  A0D8               	btfss	status,0,c
  2502  000AE2  0606               	decf	memcpy@n+1,f,c
  2503  000AE4  2805               	incf	memcpy@n& (0+255),w,c
  2504  000AE6  B4D8               	btfsc	status,2,c
  2505  000AE8  2806               	incf	(memcpy@n+1)& (0+255),w,c
  2506  000AEA  B4D8               	btfsc	status,2,c
  2507                           
  2508                           ;	Return value of _memcpy is never used
  2509  000AEC  0012               	return	
  2510  000AEE  D7E9               	goto	i1l2913
  2511  000AF0                     __end_of_memcpy:
  2512                           	opt stack 0
  2513                           pclatu	equ	0xFFB
  2514                           pclath	equ	0xFFA
  2515                           tblptru	equ	0xFF8
  2516                           tblptrh	equ	0xFF7
  2517                           tblptrl	equ	0xFF6
  2518                           tablat	equ	0xFF5
  2519                           prodh	equ	0xFF4
  2520                           prodl	equ	0xFF3
  2521                           intcon	equ	0xFF2
  2522                           postinc0	equ	0xFEE
  2523                           fsr0h	equ	0xFEA
  2524                           fsr0l	equ	0xFE9
  2525                           wreg	equ	0xFE8
  2526                           indf1	equ	0xFE7
  2527                           fsr1h	equ	0xFE2
  2528                           fsr1l	equ	0xFE1
  2529                           bsr	equ	0xFE0
  2530                           indf2	equ	0xFDF
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function _ReadTimer1 *****************
  2536 ;; Defined at:
  2537 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  timer           2    2[COMRAM] struct Timers
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2    0[COMRAM] unsigned int 
  2544 ;; Registers used:
  2545 ;;		None
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2551 ;;      Params:         2       0       0       0       0
  2552 ;;      Locals:         2       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         4       0       0       0       0
  2555 ;;Total ram usage:        4 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    5
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_timer1_int_handler
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text18
  2566  000D1C                     __ptext18:
  2567                           	opt stack 0
  2568  000D1C                     _ReadTimer1:
  2569                           	opt stack 20
  2570                           
  2571                           ;incstack = 0
  2572  000D1C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  2573  000D20  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  2574  000D24  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  2575  000D28  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  2576  000D2C  0012               	return	
  2577  000D2E                     __end_of_ReadTimer1:
  2578                           	opt stack 0
  2579                           pclatu	equ	0xFFB
  2580                           pclath	equ	0xFFA
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           prodh	equ	0xFF4
  2586                           prodl	equ	0xFF3
  2587                           intcon	equ	0xFF2
  2588                           postinc0	equ	0xFEE
  2589                           fsr0h	equ	0xFEA
  2590                           fsr0l	equ	0xFE9
  2591                           wreg	equ	0xFE8
  2592                           indf1	equ	0xFE7
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           bsr	equ	0xFE0
  2596                           indf2	equ	0xFDF
  2597                           fsr2h	equ	0xFDA
  2598                           fsr2l	equ	0xFD9
  2599                           status	equ	0xFD8
  2600                           
  2601 ;; *************** function _InterruptHandlerHigh *****************
  2602 ;; Defined at:
  2603 ;;		line 84 in file "../src/interrupts.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2617 ;;      Params:         0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          0      15       0       0       0
  2620 ;;      Totals:         0      15       0       0       0
  2621 ;;Total ram usage:       15 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    4
  2624 ;; This function calls:
  2625 ;;		_SleepIfOkay
  2626 ;;		_adc_int_handler
  2627 ;;		_i2c_master_int_handler
  2628 ;;		_timer0_int_handler
  2629 ;; This function is called by:
  2630 ;;		Interrupt level 2
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	intcode
  2635  000008                     __pintcode:
  2636                           	opt stack 0
  2637  000008                     _InterruptHandlerHigh:
  2638                           	opt stack 18
  2639                           
  2640                           ;incstack = 0
  2641  000008  CFFA F0C2          	movff	pclath,??_InterruptHandlerHigh+1
  2642  00000C  CFFB F0C3          	movff	pclatu,??_InterruptHandlerHigh+2
  2643  000010  EF88  F002         	goto	int_func
  2644                           pclatu	equ	0xFFB
  2645                           pclath	equ	0xFFA
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           intcon	equ	0xFF2
  2653                           postinc0	equ	0xFEE
  2654                           fsr0h	equ	0xFEA
  2655                           fsr0l	equ	0xFE9
  2656                           wreg	equ	0xFE8
  2657                           indf1	equ	0xFE7
  2658                           fsr1h	equ	0xFE2
  2659                           fsr1l	equ	0xFE1
  2660                           bsr	equ	0xFE0
  2661                           indf2	equ	0xFDF
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666                           	psect	intcode_body
  2667  000510                     __pintcode_body:
  2668                           	opt stack 18
  2669  000510                     int_func:
  2670                           	opt stack 18
  2671  000510  CFE9 F0C4          	movff	fsr0l,??_InterruptHandlerHigh+3
  2672  000514  CFEA F0C5          	movff	fsr0h,??_InterruptHandlerHigh+4
  2673  000518  CFE1 F0C6          	movff	fsr1l,??_InterruptHandlerHigh+5
  2674  00051C  CFE2 F0C7          	movff	fsr1h,??_InterruptHandlerHigh+6
  2675  000520  CFD9 F0C8          	movff	fsr2l,??_InterruptHandlerHigh+7
  2676  000524  CFDA F0C9          	movff	fsr2h,??_InterruptHandlerHigh+8
  2677  000528  CFF3 F0CA          	movff	prodl,??_InterruptHandlerHigh+9
  2678  00052C  CFF4 F0CB          	movff	prodh,??_InterruptHandlerHigh+10
  2679  000530  CFF6 F0CC          	movff	tblptrl,??_InterruptHandlerHigh+11
  2680  000534  CFF7 F0CD          	movff	tblptrh,??_InterruptHandlerHigh+12
  2681  000538  CFF8 F0CE          	movff	tblptru,??_InterruptHandlerHigh+13
  2682  00053C  CFF5 F0CF          	movff	tablat,??_InterruptHandlerHigh+14
  2683                           
  2684                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  2685  000540  A69E               	btfss	3998,3,c	;volatile
  2686  000542  D003               	goto	i2l2669
  2687                           
  2688                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  2689  000544  969E               	bcf	3998,3,c	;volatile
  2690                           
  2691                           ;interrupts.c: 94: i2c_master_int_handler();
  2692  000546  EC5D  F000         	call	_i2c_master_int_handler	;wreg free
  2693  00054A                     i2l2669:
  2694                           
  2695                           ;interrupts.c: 95: }
  2696                           ;interrupts.c: 96: if(PIR1bits.ADIF)
  2697  00054A  AC9E               	btfss	3998,6,c	;volatile
  2698  00054C  D012               	goto	i2l2677
  2699                           
  2700                           ;interrupts.c: 97: {
  2701                           ;interrupts.c: 98: LATBbits.LATB1 = !LATBbits.LATB1;
  2702  00054E  B28A               	btfsc	3978,1,c	;volatile
  2703  000550  D002               	goto	i2u161_40
  2704  000552  0E01               	movlw	1
  2705  000554  D001               	goto	i2u161_46
  2706  000556                     i2u161_40:
  2707  000556  0E00               	movlw	0
  2708  000558                     i2u161_46:
  2709  000558  0100               	movlb	0	; () banked
  2710  00055A  6FC1               	movwf	??_InterruptHandlerHigh& (0+255),b
  2711  00055C  0100               	movlb	0	; () banked
  2712  00055E  47C1               	rlncf	??_InterruptHandlerHigh& (0+255),f,b
  2713  000560  508A               	movf	3978,w,c	;volatile
  2714  000562  0100               	movlb	0	; () banked
  2715  000564  19C1               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  2716  000566  0BFD               	andlw	-3
  2717  000568  19C1               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  2718  00056A  6E8A               	movwf	3978,c	;volatile
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;interrupts.c: 100: PIR1bits.ADIF = 0;
  2722  00056C  9C9E               	bcf	3998,6,c	;volatile
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;interrupts.c: 101: adc_int_handler();
  2726  00056E  ECB5  F005         	call	_adc_int_handler	;wreg free
  2727  000572                     i2l2677:
  2728                           
  2729                           ;interrupts.c: 102: }
  2730                           ;interrupts.c: 104: if (INTCONbits.TMR0IF) {
  2731  000572  A4F2               	btfss	intcon,2,c	;volatile
  2732  000574  D010               	goto	i2l2685
  2733                           
  2734                           ;interrupts.c: 105: LATBbits.LATB0 = !LATBbits.LATB0;
  2735  000576  B08A               	btfsc	3978,0,c	;volatile
  2736  000578  D002               	goto	i2u163_40
  2737  00057A  0E01               	movlw	1
  2738  00057C  D001               	goto	i2u163_46
  2739  00057E                     i2u163_40:
  2740  00057E  0E00               	movlw	0
  2741  000580                     i2u163_46:
  2742  000580  0100               	movlb	0	; () banked
  2743  000582  6FC1               	movwf	??_InterruptHandlerHigh& (0+255),b
  2744  000584  508A               	movf	3978,w,c	;volatile
  2745  000586  0100               	movlb	0	; () banked
  2746  000588  19C1               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  2747  00058A  0BFE               	andlw	-2
  2748  00058C  19C1               	xorwf	??_InterruptHandlerHigh& (0+255),w,b
  2749  00058E  6E8A               	movwf	3978,c	;volatile
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;interrupts.c: 106: INTCONbits.TMR0IF = 0;
  2753  000590  94F2               	bcf	intcon,2,c	;volatile
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;interrupts.c: 108: timer0_int_handler();
  2757  000592  EC97  F006         	call	_timer0_int_handler	;wreg free
  2758  000596                     i2l2685:
  2759                           
  2760                           ;interrupts.c: 109: }
  2761                           ;interrupts.c: 118: SleepIfOkay();
  2762  000596  EC0E  F005         	call	_SleepIfOkay	;wreg free
  2763  00059A  C0CF  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  2764  00059E  C0CE  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  2765  0005A2  C0CD  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  2766  0005A6  C0CC  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  2767  0005AA  C0CB  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  2768  0005AE  C0CA  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  2769  0005B2  C0C9  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  2770  0005B6  C0C8  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  2771  0005BA  C0C7  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  2772  0005BE  C0C6  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  2773  0005C2  C0C5  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  2774  0005C6  C0C4  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  2775  0005CA  C0C3  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  2776  0005CE  C0C2  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  2777  0005D2  0011               	retfie		f
  2778  0005D4                     __end_of_InterruptHandlerHigh:
  2779                           	opt stack 0
  2780                           pclatu	equ	0xFFB
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           postinc0	equ	0xFEE
  2790                           fsr0h	equ	0xFEA
  2791                           fsr0l	equ	0xFE9
  2792                           wreg	equ	0xFE8
  2793                           indf1	equ	0xFE7
  2794                           fsr1h	equ	0xFE2
  2795                           fsr1l	equ	0xFE1
  2796                           bsr	equ	0xFE0
  2797                           indf2	equ	0xFDF
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _timer0_int_handler *****************
  2803 ;; Defined at:
  2804 ;;		line 18 in file "../src/user_interrupts.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  msgtype         2    0        int 
  2809 ;;  length          2    0        int 
  2810 ;;  val             2    0        unsigned int 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;		None               void
  2813 ;; Registers used:
  2814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2820 ;;      Params:         0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    1
  2827 ;; This function calls:
  2828 ;;		_ConvertADC
  2829 ;;		_WriteTimer0
  2830 ;; This function is called by:
  2831 ;;		_InterruptHandlerHigh
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text20
  2836  000D2E                     __ptext20:
  2837                           	opt stack 0
  2838  000D2E                     _timer0_int_handler:
  2839                           	opt stack 20
  2840                           
  2841                           ;user_interrupts.c: 19: unsigned int val;
  2842                           ;user_interrupts.c: 20: int length, msgtype;
  2843                           ;user_interrupts.c: 27: WriteTimer0(0);
  2844                           
  2845                           ;incstack = 0
  2846  000D2E  0E00               	movlw	0
  2847  000D30  6E30               	movwf	WriteTimer0@timer0+1,c
  2848  000D32  0E00               	movlw	0
  2849  000D34  6E2F               	movwf	WriteTimer0@timer0,c
  2850  000D36  ECA0  F006         	call	_WriteTimer0	;wreg free
  2851                           
  2852                           ;user_interrupts.c: 33: ConvertADC();
  2853  000D3A  ECBB  F006         	call	_ConvertADC	;wreg free
  2854  000D3E  0012               	return	
  2855  000D40                     __end_of_timer0_int_handler:
  2856                           	opt stack 0
  2857                           pclatu	equ	0xFFB
  2858                           pclath	equ	0xFFA
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           postinc0	equ	0xFEE
  2867                           fsr0h	equ	0xFEA
  2868                           fsr0l	equ	0xFE9
  2869                           wreg	equ	0xFE8
  2870                           indf1	equ	0xFE7
  2871                           fsr1h	equ	0xFE2
  2872                           fsr1l	equ	0xFE1
  2873                           bsr	equ	0xFE0
  2874                           indf2	equ	0xFDF
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _WriteTimer0 *****************
  2880 ;; Defined at:
  2881 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  timer0          2   46[COMRAM] unsigned int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  timer           2   48[COMRAM] struct Timers
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2895 ;;      Params:         2       0       0       0       0
  2896 ;;      Locals:         2       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0
  2898 ;;      Totals:         4       0       0       0       0
  2899 ;;Total ram usage:        4 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_timer0_int_handler
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text21
  2909  000D40                     __ptext21:
  2910                           	opt stack 0
  2911  000D40                     _WriteTimer0:
  2912                           	opt stack 20
  2913                           
  2914                           ;incstack = 0
  2915  000D40  C02F  F031         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2916  000D44  C030  F032         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2917  000D48  C032  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2918  000D4C  C031  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2919  000D50  0012               	return	
  2920  000D52                     __end_of_WriteTimer0:
  2921                           	opt stack 0
  2922                           pclatu	equ	0xFFB
  2923                           pclath	equ	0xFFA
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           prodh	equ	0xFF4
  2929                           prodl	equ	0xFF3
  2930                           intcon	equ	0xFF2
  2931                           postinc0	equ	0xFEE
  2932                           fsr0h	equ	0xFEA
  2933                           fsr0l	equ	0xFE9
  2934                           wreg	equ	0xFE8
  2935                           indf1	equ	0xFE7
  2936                           fsr1h	equ	0xFE2
  2937                           fsr1l	equ	0xFE1
  2938                           bsr	equ	0xFE0
  2939                           indf2	equ	0xFDF
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function _ConvertADC *****************
  2945 ;; Defined at:
  2946 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;		None               void
  2953 ;; Registers used:
  2954 ;;		None
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2960 ;;      Params:         0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_timer0_int_handler
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text22
  2974  000D76                     __ptext22:
  2975                           	opt stack 0
  2976  000D76                     _ConvertADC:
  2977                           	opt stack 20
  2978                           
  2979                           ;incstack = 0
  2980  000D76  82C2               	bsf	4034,1,c	;volatile
  2981  000D78  0012               	return	
  2982  000D7A                     __end_of_ConvertADC:
  2983                           	opt stack 0
  2984                           pclatu	equ	0xFFB
  2985                           pclath	equ	0xFFA
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           prodh	equ	0xFF4
  2991                           prodl	equ	0xFF3
  2992                           intcon	equ	0xFF2
  2993                           postinc0	equ	0xFEE
  2994                           fsr0h	equ	0xFEA
  2995                           fsr0l	equ	0xFE9
  2996                           wreg	equ	0xFE8
  2997                           indf1	equ	0xFE7
  2998                           fsr1h	equ	0xFE2
  2999                           fsr1l	equ	0xFE1
  3000                           bsr	equ	0xFE0
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _i2c_master_int_handler *****************
  3007 ;; Defined at:
  3008 ;;		line 420 in file "../src/my_i2c.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;		None               void
  3015 ;; Registers used:
  3016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3022 ;;      Params:         0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       2       0       0       0
  3025 ;;      Totals:         0       2       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    3
  3029 ;; This function calls:
  3030 ;;		_ToMainHigh_sendmsg
  3031 ;; This function is called by:
  3032 ;;		_InterruptHandlerHigh
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text23
  3037  0000BA                     __ptext23:
  3038                           	opt stack 0
  3039  0000BA                     _i2c_master_int_handler:
  3040                           	opt stack 18
  3041                           
  3042                           ;my_i2c.c: 421: switch (ic_ptr->status){
  3043                           
  3044                           ;incstack = 0
  3045  0000BA  D19B               	goto	i2l2759
  3046  0000BC                     i2l2689:
  3047                           
  3048                           ;my_i2c.c: 424: ic_ptr->status = 0x11;
  3049  0000BC  EE20 F00D          	lfsr	2,13
  3050  0000C0  504C               	movf	_ic_ptr,w,c
  3051  0000C2  26D9               	addwf	fsr2l,f,c
  3052  0000C4  504D               	movf	_ic_ptr+1,w,c
  3053  0000C6  22DA               	addwfc	fsr2h,f,c
  3054  0000C8  0E11               	movlw	17
  3055  0000CA  6EDF               	movwf	indf2,c
  3056                           
  3057                           ;my_i2c.c: 425: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  3058  0000CC  EE20 F01C          	lfsr	2,28
  3059  0000D0  504C               	movf	_ic_ptr,w,c
  3060  0000D2  26D9               	addwf	fsr2l,f,c
  3061  0000D4  504D               	movf	_ic_ptr+1,w,c
  3062  0000D6  22DA               	addwfc	fsr2h,f,c
  3063  0000D8  50DF               	movf	indf2,w,c
  3064  0000DA  0100               	movlb	0	; () banked
  3065  0000DC  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3066  0000DE  0100               	movlb	0	; () banked
  3067  0000E0  90D8               	bcf	status,0,c
  3068  0000E2  35BF               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  3069  0000E4  0BFE               	andlw	254
  3070  0000E6  6EC9               	movwf	4041,c	;volatile
  3071                           
  3072                           ;my_i2c.c: 426: break;
  3073  0000E8  0012               	return	
  3074  0000EA                     i2l298:
  3075                           
  3076                           ;my_i2c.c: 429: if (SSPCON2bits.ACKSTAT == 0) {
  3077  0000EA  BCC5               	btfsc	4037,6,c	;volatile
  3078  0000EC  D061               	goto	i2l2707
  3079                           
  3080                           ;my_i2c.c: 430: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  3081  0000EE  EE20 F01B          	lfsr	2,27
  3082  0000F2  504C               	movf	_ic_ptr,w,c
  3083  0000F4  26D9               	addwf	fsr2l,f,c
  3084  0000F6  504D               	movf	_ic_ptr+1,w,c
  3085  0000F8  22DA               	addwfc	fsr2h,f,c
  3086  0000FA  50DF               	movf	indf2,w,c
  3087  0000FC  0100               	movlb	0	; () banked
  3088  0000FE  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3089  000100  EE20 F01A          	lfsr	2,26
  3090  000104  504C               	movf	_ic_ptr,w,c
  3091  000106  26D9               	addwf	fsr2l,f,c
  3092  000108  504D               	movf	_ic_ptr+1,w,c
  3093  00010A  22DA               	addwfc	fsr2h,f,c
  3094  00010C  50DF               	movf	indf2,w,c
  3095  00010E  0100               	movlb	0	; () banked
  3096  000110  5DBF               	subwf	??_i2c_master_int_handler& (0+255),w,b
  3097  000112  B0D8               	btfsc	status,0,c
  3098  000114  D028               	goto	i2l2699
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;my_i2c.c: 431: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  3102  000116  EE20 F01B          	lfsr	2,27
  3103  00011A  504C               	movf	_ic_ptr,w,c
  3104  00011C  26D9               	addwf	fsr2l,f,c
  3105  00011E  504D               	movf	_ic_ptr+1,w,c
  3106  000120  22DA               	addwfc	fsr2h,f,c
  3107  000122  50DF               	movf	indf2,w,c
  3108  000124  0100               	movlb	0	; () banked
  3109  000126  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3110  000128  0100               	movlb	0	; () banked
  3111  00012A  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3112  00012C  0D01               	mullw	1
  3113  00012E  0E10               	movlw	16
  3114  000130  26F3               	addwf	prodl,f,c
  3115  000132  0E00               	movlw	0
  3116  000134  22F4               	addwfc	prodh,f,c
  3117  000136  50F3               	movf	prodl,w,c
  3118  000138  244C               	addwf	_ic_ptr,w,c
  3119  00013A  6ED9               	movwf	fsr2l,c
  3120  00013C  50F4               	movf	prodh,w,c
  3121  00013E  204D               	addwfc	_ic_ptr+1,w,c
  3122  000140  6EDA               	movwf	fsr2h,c
  3123  000142  50DF               	movf	indf2,w,c
  3124  000144  6EC9               	movwf	4041,c	;volatile
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;my_i2c.c: 432: ic_ptr->outbufind++;
  3128  000146  EE20 F01B          	lfsr	2,27
  3129  00014A  504C               	movf	_ic_ptr,w,c
  3130  00014C  26D9               	addwf	fsr2l,f,c
  3131  00014E  504D               	movf	_ic_ptr+1,w,c
  3132  000150  22DA               	addwfc	fsr2h,f,c
  3133  000152  2ADF               	incf	indf2,f,c
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;my_i2c.c: 433: ic_ptr->status = 0x12;
  3137  000154  EE20 F00D          	lfsr	2,13
  3138  000158  504C               	movf	_ic_ptr,w,c
  3139  00015A  26D9               	addwf	fsr2l,f,c
  3140  00015C  504D               	movf	_ic_ptr+1,w,c
  3141  00015E  22DA               	addwfc	fsr2h,f,c
  3142  000160  0E12               	movlw	18
  3143  000162  6EDF               	movwf	indf2,c
  3144                           
  3145                           ;my_i2c.c: 434: }
  3146  000164  0012               	return	
  3147  000166                     i2l2699:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;my_i2c.c: 435: else {
  3151                           ;my_i2c.c: 436: ToMainHigh_sendmsg(0, 43, 0);
  3152  000166  0100               	movlb	0	; () banked
  3153  000168  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3154  00016A  0E2B               	movlw	43
  3155  00016C  0100               	movlb	0	; () banked
  3156  00016E  0100               	movlb	0	; () banked
  3157  000170  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3158  000172  0100               	movlb	0	; () banked
  3159  000174  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3160  000176  0E00               	movlw	0
  3161  000178  0100               	movlb	0	; () banked
  3162  00017A  0100               	movlb	0	; () banked
  3163  00017C  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3164  00017E  0E00               	movlw	0
  3165  000180  0100               	movlb	0	; () banked
  3166  000182  0100               	movlb	0	; () banked
  3167  000184  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3168  000186  0E00               	movlw	0
  3169  000188  EC2D  F006         	call	_ToMainHigh_sendmsg
  3170                           
  3171                           ;my_i2c.c: 437: ic_ptr->outbuflen = 0;
  3172  00018C  EE20 F01A          	lfsr	2,26
  3173  000190  504C               	movf	_ic_ptr,w,c
  3174  000192  26D9               	addwf	fsr2l,f,c
  3175  000194  504D               	movf	_ic_ptr+1,w,c
  3176  000196  22DA               	addwfc	fsr2h,f,c
  3177  000198  0E00               	movlw	0
  3178  00019A  6EDF               	movwf	indf2,c
  3179                           
  3180                           ;my_i2c.c: 438: ic_ptr->status = 0x5;
  3181  00019C  EE20 F00D          	lfsr	2,13
  3182  0001A0  504C               	movf	_ic_ptr,w,c
  3183  0001A2  26D9               	addwf	fsr2l,f,c
  3184  0001A4  504D               	movf	_ic_ptr+1,w,c
  3185  0001A6  22DA               	addwfc	fsr2h,f,c
  3186  0001A8  0E05               	movlw	5
  3187  0001AA  6EDF               	movwf	indf2,c
  3188                           
  3189                           ;my_i2c.c: 439: SSPCON2bits.PEN = 1;
  3190  0001AC  84C5               	bsf	4037,2,c	;volatile
  3191  0001AE  0012               	return	
  3192  0001B0                     i2l2707:
  3193                           
  3194                           ;my_i2c.c: 442: else {
  3195                           ;my_i2c.c: 443: ToMainHigh_sendmsg(0, 44, 0);
  3196  0001B0  0100               	movlb	0	; () banked
  3197  0001B2  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3198  0001B4  0E2C               	movlw	44
  3199  0001B6  0100               	movlb	0	; () banked
  3200  0001B8  0100               	movlb	0	; () banked
  3201  0001BA  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3202  0001BC  0100               	movlb	0	; () banked
  3203  0001BE  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3204  0001C0  0E00               	movlw	0
  3205  0001C2  0100               	movlb	0	; () banked
  3206  0001C4  0100               	movlb	0	; () banked
  3207  0001C6  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3208  0001C8  0E00               	movlw	0
  3209  0001CA  0100               	movlb	0	; () banked
  3210  0001CC  0100               	movlb	0	; () banked
  3211  0001CE  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3212  0001D0  0E00               	movlw	0
  3213  0001D2  EC2D  F006         	call	_ToMainHigh_sendmsg
  3214                           
  3215                           ;my_i2c.c: 444: ic_ptr->status = 0x5;
  3216  0001D6  EE20 F00D          	lfsr	2,13
  3217  0001DA  504C               	movf	_ic_ptr,w,c
  3218  0001DC  26D9               	addwf	fsr2l,f,c
  3219  0001DE  504D               	movf	_ic_ptr+1,w,c
  3220  0001E0  22DA               	addwfc	fsr2h,f,c
  3221  0001E2  0E05               	movlw	5
  3222  0001E4  6EDF               	movwf	indf2,c
  3223                           
  3224                           ;my_i2c.c: 445: SSPCON2bits.PEN = 1;
  3225  0001E6  84C5               	bsf	4037,2,c	;volatile
  3226  0001E8  0012               	return	
  3227  0001EA                     i2l303:
  3228                           
  3229                           ;my_i2c.c: 450: if (SSPCON2bits.ACKSTAT == 0) {
  3230  0001EA  BCC5               	btfsc	4037,6,c	;volatile
  3231  0001EC  D00A               	goto	i2l2717
  3232                           
  3233                           ;my_i2c.c: 451: ic_ptr->status = 0x13;
  3234  0001EE  EE20 F00D          	lfsr	2,13
  3235  0001F2  504C               	movf	_ic_ptr,w,c
  3236  0001F4  26D9               	addwf	fsr2l,f,c
  3237  0001F6  504D               	movf	_ic_ptr+1,w,c
  3238  0001F8  22DA               	addwfc	fsr2h,f,c
  3239  0001FA  0E13               	movlw	19
  3240  0001FC  6EDF               	movwf	indf2,c
  3241                           
  3242                           ;my_i2c.c: 452: SSPCON2bits.PEN = 1;
  3243  0001FE  84C5               	bsf	4037,2,c	;volatile
  3244                           
  3245                           ;my_i2c.c: 453: }
  3246  000200  0012               	return	
  3247  000202                     i2l2717:
  3248                           
  3249                           ;my_i2c.c: 454: else {
  3250                           ;my_i2c.c: 455: ToMainHigh_sendmsg(0, 44, 0);
  3251  000202  0100               	movlb	0	; () banked
  3252  000204  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3253  000206  0E2C               	movlw	44
  3254  000208  0100               	movlb	0	; () banked
  3255  00020A  0100               	movlb	0	; () banked
  3256  00020C  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3257  00020E  0100               	movlb	0	; () banked
  3258  000210  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3259  000212  0E00               	movlw	0
  3260  000214  0100               	movlb	0	; () banked
  3261  000216  0100               	movlb	0	; () banked
  3262  000218  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3263  00021A  0E00               	movlw	0
  3264  00021C  0100               	movlb	0	; () banked
  3265  00021E  0100               	movlb	0	; () banked
  3266  000220  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3267  000222  0E00               	movlw	0
  3268  000224  EC2D  F006         	call	_ToMainHigh_sendmsg
  3269                           
  3270                           ;my_i2c.c: 456: ic_ptr->status = 0x5;
  3271  000228  EE20 F00D          	lfsr	2,13
  3272  00022C  504C               	movf	_ic_ptr,w,c
  3273  00022E  26D9               	addwf	fsr2l,f,c
  3274  000230  504D               	movf	_ic_ptr+1,w,c
  3275  000232  22DA               	addwfc	fsr2h,f,c
  3276  000234  0E05               	movlw	5
  3277  000236  6EDF               	movwf	indf2,c
  3278                           
  3279                           ;my_i2c.c: 457: SSPCON2bits.PEN = 1;
  3280  000238  84C5               	bsf	4037,2,c	;volatile
  3281  00023A  0012               	return	
  3282  00023C                     i2l2723:
  3283                           
  3284                           ;my_i2c.c: 462: ToMainHigh_sendmsg(0, 43, 0);
  3285  00023C  0100               	movlb	0	; () banked
  3286  00023E  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3287  000240  0E2B               	movlw	43
  3288  000242  0100               	movlb	0	; () banked
  3289  000244  0100               	movlb	0	; () banked
  3290  000246  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3291  000248  0100               	movlb	0	; () banked
  3292  00024A  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3293  00024C  0E00               	movlw	0
  3294  00024E  0100               	movlb	0	; () banked
  3295  000250  0100               	movlb	0	; () banked
  3296  000252  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3297  000254  0E00               	movlw	0
  3298  000256  0100               	movlb	0	; () banked
  3299  000258  0100               	movlb	0	; () banked
  3300  00025A  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3301  00025C  0E00               	movlw	0
  3302  00025E  EC2D  F006         	call	_ToMainHigh_sendmsg
  3303                           
  3304                           ;my_i2c.c: 463: ic_ptr->status = 0x5;
  3305  000262  EE20 F00D          	lfsr	2,13
  3306  000266  504C               	movf	_ic_ptr,w,c
  3307  000268  26D9               	addwf	fsr2l,f,c
  3308  00026A  504D               	movf	_ic_ptr+1,w,c
  3309  00026C  22DA               	addwfc	fsr2h,f,c
  3310  00026E  0E05               	movlw	5
  3311  000270  6EDF               	movwf	indf2,c
  3312                           
  3313                           ;my_i2c.c: 464: break;
  3314  000272  0012               	return	
  3315  000274                     i2l2727:
  3316                           
  3317                           ;my_i2c.c: 468: ic_ptr->status = 0x14;
  3318  000274  EE20 F00D          	lfsr	2,13
  3319  000278  504C               	movf	_ic_ptr,w,c
  3320  00027A  26D9               	addwf	fsr2l,f,c
  3321  00027C  504D               	movf	_ic_ptr+1,w,c
  3322  00027E  22DA               	addwfc	fsr2h,f,c
  3323  000280  0E14               	movlw	20
  3324  000282  6EDF               	movwf	indf2,c
  3325                           
  3326                           ;my_i2c.c: 469: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFF);
  3327  000284  EE20 F01C          	lfsr	2,28
  3328  000288  504C               	movf	_ic_ptr,w,c
  3329  00028A  26D9               	addwf	fsr2l,f,c
  3330  00028C  504D               	movf	_ic_ptr+1,w,c
  3331  00028E  22DA               	addwfc	fsr2h,f,c
  3332  000290  50DF               	movf	indf2,w,c
  3333  000292  0100               	movlb	0	; () banked
  3334  000294  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3335  000296  0100               	movlb	0	; () banked
  3336  000298  90D8               	bcf	status,0,c
  3337  00029A  35BF               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  3338  00029C  6EC9               	movwf	4041,c	;volatile
  3339                           
  3340                           ;my_i2c.c: 470: break;
  3341  00029E  0012               	return	
  3342  0002A0                     i2l308:
  3343                           
  3344                           ;my_i2c.c: 473: if (SSPCON2bits.ACKSTAT == 0) {
  3345  0002A0  BCC5               	btfsc	4037,6,c	;volatile
  3346  0002A2  D00A               	goto	i2l2733
  3347                           
  3348                           ;my_i2c.c: 474: SSPCON2bits.RCEN = 1;
  3349  0002A4  86C5               	bsf	4037,3,c	;volatile
  3350                           
  3351                           ;my_i2c.c: 475: ic_ptr->status = 0x15;
  3352  0002A6  EE20 F00D          	lfsr	2,13
  3353  0002AA  504C               	movf	_ic_ptr,w,c
  3354  0002AC  26D9               	addwf	fsr2l,f,c
  3355  0002AE  504D               	movf	_ic_ptr+1,w,c
  3356  0002B0  22DA               	addwfc	fsr2h,f,c
  3357  0002B2  0E15               	movlw	21
  3358  0002B4  6EDF               	movwf	indf2,c
  3359                           
  3360                           ;my_i2c.c: 476: }
  3361  0002B6  0012               	return	
  3362  0002B8                     i2l2733:
  3363                           
  3364                           ;my_i2c.c: 478: else {
  3365                           ;my_i2c.c: 479: ToMainHigh_sendmsg(0, 46, 0);
  3366  0002B8  0100               	movlb	0	; () banked
  3367  0002BA  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3368  0002BC  0E2E               	movlw	46
  3369  0002BE  0100               	movlb	0	; () banked
  3370  0002C0  0100               	movlb	0	; () banked
  3371  0002C2  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3372  0002C4  0100               	movlb	0	; () banked
  3373  0002C6  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3374  0002C8  0E00               	movlw	0
  3375  0002CA  0100               	movlb	0	; () banked
  3376  0002CC  0100               	movlb	0	; () banked
  3377  0002CE  6FBD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3378  0002D0  0E00               	movlw	0
  3379  0002D2  0100               	movlb	0	; () banked
  3380  0002D4  0100               	movlb	0	; () banked
  3381  0002D6  6FBC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3382  0002D8  0E00               	movlw	0
  3383  0002DA  EC2D  F006         	call	_ToMainHigh_sendmsg
  3384                           
  3385                           ;my_i2c.c: 480: ic_ptr->status = 0x5;
  3386  0002DE  EE20 F00D          	lfsr	2,13
  3387  0002E2  504C               	movf	_ic_ptr,w,c
  3388  0002E4  26D9               	addwf	fsr2l,f,c
  3389  0002E6  504D               	movf	_ic_ptr+1,w,c
  3390  0002E8  22DA               	addwfc	fsr2h,f,c
  3391  0002EA  0E05               	movlw	5
  3392  0002EC  6EDF               	movwf	indf2,c
  3393                           
  3394                           ;my_i2c.c: 481: SSPCON2bits.PEN = 1;
  3395  0002EE  84C5               	bsf	4037,2,c	;volatile
  3396  0002F0  0012               	return	
  3397  0002F2                     i2l2739:
  3398                           
  3399                           ;my_i2c.c: 486: ic_ptr->outbuffer[ic_ptr->outbuflen + 1] = SSPBUF;
  3400  0002F2  EE20 F01A          	lfsr	2,26
  3401  0002F6  504C               	movf	_ic_ptr,w,c
  3402  0002F8  26D9               	addwf	fsr2l,f,c
  3403  0002FA  504D               	movf	_ic_ptr+1,w,c
  3404  0002FC  22DA               	addwfc	fsr2h,f,c
  3405  0002FE  50DF               	movf	indf2,w,c
  3406  000300  0100               	movlb	0	; () banked
  3407  000302  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3408  000304  6BC0               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  3409  000306  0E11               	movlw	17
  3410  000308  0100               	movlb	0	; () banked
  3411  00030A  27BF               	addwf	??_i2c_master_int_handler& (0+255),f,b
  3412  00030C  0E00               	movlw	0
  3413  00030E  23C0               	addwfc	(??_i2c_master_int_handler+1)& (0+255),f,b
  3414  000310  0100               	movlb	0	; () banked
  3415  000312  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3416  000314  244C               	addwf	_ic_ptr,w,c
  3417  000316  6ED9               	movwf	fsr2l,c
  3418  000318  0100               	movlb	0	; () banked
  3419  00031A  51C0               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  3420  00031C  204D               	addwfc	_ic_ptr+1,w,c
  3421  00031E  6EDA               	movwf	fsr2h,c
  3422  000320  CFC9 FFDF          	movff	4041,indf2	;volatile
  3423                           
  3424                           ;my_i2c.c: 487: ic_ptr->outbuflen++;
  3425  000324  EE20 F01A          	lfsr	2,26
  3426  000328  504C               	movf	_ic_ptr,w,c
  3427  00032A  26D9               	addwf	fsr2l,f,c
  3428  00032C  504D               	movf	_ic_ptr+1,w,c
  3429  00032E  22DA               	addwfc	fsr2h,f,c
  3430  000330  2ADF               	incf	indf2,f,c
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;my_i2c.c: 488: SSPCON2bits.ACKDT = 0;
  3434  000332  9AC5               	bcf	4037,5,c	;volatile
  3435                           
  3436                           ;my_i2c.c: 489: ic_ptr->status = 0x16;
  3437  000334  EE20 F00D          	lfsr	2,13
  3438  000338  504C               	movf	_ic_ptr,w,c
  3439  00033A  26D9               	addwf	fsr2l,f,c
  3440  00033C  504D               	movf	_ic_ptr+1,w,c
  3441  00033E  22DA               	addwfc	fsr2h,f,c
  3442  000340  0E16               	movlw	22
  3443  000342  6EDF               	movwf	indf2,c
  3444                           
  3445                           ;my_i2c.c: 490: break;
  3446  000344  0012               	return	
  3447  000346                     i2l312:
  3448                           
  3449                           ;my_i2c.c: 493: SSPCON2bits.RCEN = 1;
  3450  000346  86C5               	bsf	4037,3,c	;volatile
  3451                           
  3452                           ;my_i2c.c: 494: ic_ptr->status = 0x17;
  3453  000348  EE20 F00D          	lfsr	2,13
  3454  00034C  504C               	movf	_ic_ptr,w,c
  3455  00034E  26D9               	addwf	fsr2l,f,c
  3456  000350  504D               	movf	_ic_ptr+1,w,c
  3457  000352  22DA               	addwfc	fsr2h,f,c
  3458  000354  0E17               	movlw	23
  3459  000356  6EDF               	movwf	indf2,c
  3460                           
  3461                           ;my_i2c.c: 495: break;
  3462  000358  0012               	return	
  3463  00035A                     i2l2745:
  3464                           
  3465                           ;my_i2c.c: 498: ic_ptr->outbuffer[ic_ptr->outbuflen + 1] = SSPBUF;
  3466  00035A  EE20 F01A          	lfsr	2,26
  3467  00035E  504C               	movf	_ic_ptr,w,c
  3468  000360  26D9               	addwf	fsr2l,f,c
  3469  000362  504D               	movf	_ic_ptr+1,w,c
  3470  000364  22DA               	addwfc	fsr2h,f,c
  3471  000366  50DF               	movf	indf2,w,c
  3472  000368  0100               	movlb	0	; () banked
  3473  00036A  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3474  00036C  6BC0               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  3475  00036E  0E11               	movlw	17
  3476  000370  0100               	movlb	0	; () banked
  3477  000372  27BF               	addwf	??_i2c_master_int_handler& (0+255),f,b
  3478  000374  0E00               	movlw	0
  3479  000376  23C0               	addwfc	(??_i2c_master_int_handler+1)& (0+255),f,b
  3480  000378  0100               	movlb	0	; () banked
  3481  00037A  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3482  00037C  244C               	addwf	_ic_ptr,w,c
  3483  00037E  6ED9               	movwf	fsr2l,c
  3484  000380  0100               	movlb	0	; () banked
  3485  000382  51C0               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  3486  000384  204D               	addwfc	_ic_ptr+1,w,c
  3487  000386  6EDA               	movwf	fsr2h,c
  3488  000388  CFC9 FFDF          	movff	4041,indf2	;volatile
  3489                           
  3490                           ;my_i2c.c: 499: ic_ptr->outbuflen++;
  3491  00038C  EE20 F01A          	lfsr	2,26
  3492  000390  504C               	movf	_ic_ptr,w,c
  3493  000392  26D9               	addwf	fsr2l,f,c
  3494  000394  504D               	movf	_ic_ptr+1,w,c
  3495  000396  22DA               	addwfc	fsr2h,f,c
  3496  000398  2ADF               	incf	indf2,f,c
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;my_i2c.c: 500: SSPCON2bits.ACKEN = 1;
  3500  00039A  88C5               	bsf	4037,4,c	;volatile
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;my_i2c.c: 501: SSPCON2bits.ACKDT = 1;
  3504  00039C  8AC5               	bsf	4037,5,c	;volatile
  3505                           
  3506                           ;my_i2c.c: 502: ic_ptr->status = 0x16;
  3507  00039E  EE20 F00D          	lfsr	2,13
  3508  0003A2  504C               	movf	_ic_ptr,w,c
  3509  0003A4  26D9               	addwf	fsr2l,f,c
  3510  0003A6  504D               	movf	_ic_ptr+1,w,c
  3511  0003A8  22DA               	addwfc	fsr2h,f,c
  3512  0003AA  0E16               	movlw	22
  3513  0003AC  6EDF               	movwf	indf2,c
  3514                           
  3515                           ;my_i2c.c: 503: break;
  3516  0003AE  0012               	return	
  3517  0003B0                     i2l2751:
  3518                           
  3519                           ;my_i2c.c: 506: ToMainHigh_sendmsg(ic_ptr->buflen, 45, (void *)(ic_ptr->buffer));
  3520  0003B0  0100               	movlb	0	; () banked
  3521  0003B2  6FBF               	movwf	??_i2c_master_int_handler& (0+255),b
  3522  0003B4  0E2D               	movlw	45
  3523  0003B6  0100               	movlb	0	; () banked
  3524  0003B8  0100               	movlb	0	; () banked
  3525  0003BA  6FBB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3526  0003BC  0100               	movlb	0	; () banked
  3527  0003BE  51BF               	movf	??_i2c_master_int_handler& (0+255),w,b
  3528  0003C0  0100               	movlb	0	; () banked
  3529  0003C2  C04D  F0BD         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  3530  0003C6  0100               	movlb	0	; () banked
  3531  0003C8  C04C  F0BC         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  3532  0003CC  EE20 F00A          	lfsr	2,10
  3533  0003D0  504C               	movf	_ic_ptr,w,c
  3534  0003D2  26D9               	addwf	fsr2l,f,c
  3535  0003D4  504D               	movf	_ic_ptr+1,w,c
  3536  0003D6  22DA               	addwfc	fsr2h,f,c
  3537  0003D8  50DF               	movf	indf2,w,c
  3538  0003DA  EC2D  F006         	call	_ToMainHigh_sendmsg
  3539                           
  3540                           ;my_i2c.c: 507: SSPCON2bits.PEN = 1;
  3541  0003DE  84C5               	bsf	4037,2,c	;volatile
  3542                           
  3543                           ;my_i2c.c: 508: ic_ptr->status = 0x5;
  3544  0003E0  EE20 F00D          	lfsr	2,13
  3545  0003E4  504C               	movf	_ic_ptr,w,c
  3546  0003E6  26D9               	addwf	fsr2l,f,c
  3547  0003E8  504D               	movf	_ic_ptr+1,w,c
  3548  0003EA  22DA               	addwfc	fsr2h,f,c
  3549  0003EC  0E05               	movlw	5
  3550  0003EE  6EDF               	movwf	indf2,c
  3551                           
  3552                           ;my_i2c.c: 509: break;
  3553  0003F0  0012               	return	
  3554  0003F2                     i2l2759:
  3555  0003F2  EE20 F00D          	lfsr	2,13
  3556  0003F6  504C               	movf	_ic_ptr,w,c
  3557  0003F8  26D9               	addwf	fsr2l,f,c
  3558  0003FA  504D               	movf	_ic_ptr+1,w,c
  3559  0003FC  22DA               	addwfc	fsr2h,f,c
  3560  0003FE  50DF               	movf	indf2,w,c
  3561                           
  3562                           ; Switch size 1, requested type "space"
  3563                           ; Number of cases is 10, Range of values is 9 to 24
  3564                           ; switch strategies available:
  3565                           ; Name         Instructions Cycles
  3566                           ; simple_byte           31    16 (average)
  3567                           ;	Chosen strategy is simple_byte
  3568  000400  0A09               	xorlw	9	; case 9
  3569  000402  B4D8               	btfsc	status,2,c
  3570  000404  D65B               	goto	i2l2689
  3571  000406  0A19               	xorlw	25	; case 16
  3572  000408  B4D8               	btfsc	status,2,c
  3573  00040A  D734               	goto	i2l2727
  3574  00040C  0A01               	xorlw	1	; case 17
  3575  00040E  B4D8               	btfsc	status,2,c
  3576  000410  D66C               	goto	i2l298
  3577  000412  0A03               	xorlw	3	; case 18
  3578  000414  B4D8               	btfsc	status,2,c
  3579  000416  D6E9               	goto	i2l303
  3580  000418  0A01               	xorlw	1	; case 19
  3581  00041A  B4D8               	btfsc	status,2,c
  3582  00041C  D70F               	goto	i2l2723
  3583  00041E  0A07               	xorlw	7	; case 20
  3584  000420  B4D8               	btfsc	status,2,c
  3585  000422  D73E               	goto	i2l308
  3586  000424  0A01               	xorlw	1	; case 21
  3587  000426  B4D8               	btfsc	status,2,c
  3588  000428  D764               	goto	i2l2739
  3589  00042A  0A03               	xorlw	3	; case 22
  3590  00042C  B4D8               	btfsc	status,2,c
  3591  00042E  D78B               	goto	i2l312
  3592  000430  0A01               	xorlw	1	; case 23
  3593  000432  B4D8               	btfsc	status,2,c
  3594  000434  D792               	goto	i2l2745
  3595  000436  0A0F               	xorlw	15	; case 24
  3596  000438  A4D8               	btfss	status,2,c
  3597  00043A  0012               	return	
  3598  00043C  D7B9               	goto	i2l2751
  3599  00043E                     __end_of_i2c_master_int_handler:
  3600                           	opt stack 0
  3601                           pclatu	equ	0xFFB
  3602                           pclath	equ	0xFFA
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           fsr0h	equ	0xFEA
  3612                           fsr0l	equ	0xFE9
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           bsr	equ	0xFE0
  3618                           indf2	equ	0xFDF
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function _ToMainHigh_sendmsg *****************
  3624 ;; Defined at:
  3625 ;;		line 126 in file "../src/messages.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  length          1    wreg     unsigned char 
  3628 ;;  msgtype         1    5[BANK0 ] unsigned char 
  3629 ;;  data            2    6[BANK0 ] PTR void 
  3630 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(41), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  length          1    8[BANK0 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      char 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3642 ;;      Params:         0       3       0       0       0
  3643 ;;      Locals:         0       1       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       4       0       0       0
  3646 ;;Total ram usage:        4 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    2
  3649 ;; This function calls:
  3650 ;;		i2_send_msg
  3651 ;; This function is called by:
  3652 ;;		_i2c_master_int_handler
  3653 ;;		_i2c_int_handler
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text24
  3658  000C5A                     __ptext24:
  3659                           	opt stack 0
  3660  000C5A                     _ToMainHigh_sendmsg:
  3661                           	opt stack 18
  3662                           
  3663                           ;incstack = 0
  3664                           ;ToMainHigh_sendmsg@length stored from wreg
  3665  000C5A  CFE8 F0BE          	movff	wreg,ToMainHigh_sendmsg@length
  3666                           
  3667                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3668                           ;	Return value of _ToMainHigh_sendmsg is never used
  3669  000C5E  0101               	movlb	1	; () banked
  3670  000C60  0E01               	movlw	high _ToMainHigh_MQ
  3671  000C62  6E3A               	movwf	i2send_msg@qptr+1,c
  3672  000C64  0101               	movlb	1	; () banked
  3673  000C66  0E6C               	movlw	low _ToMainHigh_MQ
  3674  000C68  6E39               	movwf	i2send_msg@qptr,c
  3675  000C6A  C0BE  F03B         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  3676  000C6E  C0BB  F03C         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  3677  000C72  0100               	movlb	0	; () banked
  3678  000C74  C0BD  F03E         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  3679  000C78  0100               	movlb	0	; () banked
  3680  000C7A  C0BC  F03D         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  3681  000C7E  EC1F  F002         	call	i2_send_msg	;wreg free
  3682  000C82  0012               	return	
  3683  000C84                     __end_of_ToMainHigh_sendmsg:
  3684                           	opt stack 0
  3685                           pclatu	equ	0xFFB
  3686                           pclath	equ	0xFFA
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           prodh	equ	0xFF4
  3692                           prodl	equ	0xFF3
  3693                           intcon	equ	0xFF2
  3694                           postinc0	equ	0xFEE
  3695                           fsr0h	equ	0xFEA
  3696                           fsr0l	equ	0xFE9
  3697                           wreg	equ	0xFE8
  3698                           indf1	equ	0xFE7
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           bsr	equ	0xFE0
  3702                           indf2	equ	0xFDF
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function i2_send_msg *****************
  3708 ;; Defined at:
  3709 ;;		line 24 in file "../src/messages.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  qptr            2   56[COMRAM] PTR struct __msg_queue
  3712 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3713 ;;  length          1   58[COMRAM] unsigned char 
  3714 ;;  msgtype         1   59[COMRAM] unsigned char 
  3715 ;;  data            2   60[COMRAM] PTR void 
  3716 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(41), 
  3717 ;;		 -> main@uc(5), 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  3720 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3721 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3722 ;;  send_msg        2    0[BANK0 ] unsigned int 
  3723 ;;  send_msg        1    2[BANK0 ] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      char 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3733 ;;      Params:         6       0       0       0       0
  3734 ;;      Locals:         0       5       0       0       0
  3735 ;;      Temps:          1       0       0       0       0
  3736 ;;      Totals:         7       5       0       0       0
  3737 ;;Total ram usage:       12 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		i2_memcpy
  3742 ;; This function is called by:
  3743 ;;		_ToMainHigh_sendmsg
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text25
  3748  00043E                     __ptext25:
  3749                           	opt stack 0
  3750  00043E                     i2_send_msg:
  3751                           	opt stack 18
  3752                           
  3753                           ;messages.c: 25: unsigned char slot;
  3754                           ;messages.c: 27: msg *qmsg;
  3755                           ;messages.c: 28: size_t tlength = length;
  3756                           
  3757                           ;incstack = 0
  3758  00043E  0100               	movlb	0	; () banked
  3759  000440  C03B  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  3760  000444  0100               	movlb	0	; () banked
  3761  000446  0100               	movlb	0	; () banked
  3762  000448  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3766  00044A  EE20 F034          	lfsr	2,52
  3767  00044E  5039               	movf	i2send_msg@qptr,w,c
  3768  000450  26D9               	addwf	fsr2l,f,c
  3769  000452  503A               	movf	i2send_msg@qptr+1,w,c
  3770  000454  22DA               	addwfc	fsr2h,f,c
  3771  000456  50DF               	movf	indf2,w,c
  3772  000458  0100               	movlb	0	; () banked
  3773  00045A  0100               	movlb	0	; () banked
  3774  00045C  6FB8               	movwf	i2send_msg@slot& (0+255),b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3778  00045E  0100               	movlb	0	; () banked
  3779  000460  0100               	movlb	0	; () banked
  3780  000462  51B8               	movf	i2send_msg@slot& (0+255),w,b
  3781  000464  0D0D               	mullw	13
  3782  000466  50F3               	movf	prodl,w,c
  3783  000468  2439               	addwf	i2send_msg@qptr,w,c
  3784  00046A  0100               	movlb	0	; () banked
  3785  00046C  0100               	movlb	0	; () banked
  3786  00046E  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  3787  000470  50F4               	movf	prodh,w,c
  3788  000472  203A               	addwfc	i2send_msg@qptr+1,w,c
  3789  000474  0100               	movlb	0	; () banked
  3790  000476  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;messages.c: 41: if (qmsg->full != 0) {
  3794  000478  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  3795  00047C  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  3796  000480  50DF               	movf	indf2,w,c
  3797  000482  B4D8               	btfsc	status,2,c
  3798  000484  D002               	goto	i2l3229
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;messages.c: 42: return (-1);
  3802  000486  0EFF               	movlw	255
  3803  000488  0012               	return	
  3804  00048A                     i2l3229:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;messages.c: 43: }
  3808                           ;messages.c: 46: qmsg->length = length;
  3809  00048A  0100               	movlb	0	; () banked
  3810  00048C  EE20 F001          	lfsr	2,1
  3811  000490  0100               	movlb	0	; () banked
  3812  000492  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  3813  000494  26D9               	addwf	fsr2l,f,c
  3814  000496  0100               	movlb	0	; () banked
  3815  000498  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  3816  00049A  22DA               	addwfc	fsr2h,f,c
  3817  00049C  C03B  FFDF         	movff	i2send_msg@length,indf2
  3818                           
  3819                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3820  0004A0  0100               	movlb	0	; () banked
  3821  0004A2  EE20 F002          	lfsr	2,2
  3822  0004A6  0100               	movlb	0	; () banked
  3823  0004A8  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  3824  0004AA  26D9               	addwf	fsr2l,f,c
  3825  0004AC  0100               	movlb	0	; () banked
  3826  0004AE  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  3827  0004B0  22DA               	addwfc	fsr2h,f,c
  3828  0004B2  C03C  FFDF         	movff	i2send_msg@msgtype,indf2
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3832  0004B6  0E03               	movlw	3
  3833  0004B8  0100               	movlb	0	; () banked
  3834  0004BA  0100               	movlb	0	; () banked
  3835  0004BC  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  3836  0004BE  6E2F               	movwf	i2memcpy@d1,c
  3837  0004C0  0E00               	movlw	0
  3838  0004C2  0100               	movlb	0	; () banked
  3839  0004C4  0100               	movlb	0	; () banked
  3840  0004C6  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  3841  0004C8  6E30               	movwf	i2memcpy@d1+1,c
  3842  0004CA  C03E  F032         	movff	i2send_msg@data+1,i2memcpy@s1+1
  3843  0004CE  C03D  F031         	movff	i2send_msg@data,i2memcpy@s1
  3844  0004D2  C0B6  F033         	movff	i2send_msg@tlength,i2memcpy@n
  3845  0004D6  C0B7  F034         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  3846  0004DA  EC78  F005         	call	i2_memcpy	;wreg free
  3847                           
  3848                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3849  0004DE  EE20 F034          	lfsr	2,52
  3850  0004E2  5039               	movf	i2send_msg@qptr,w,c
  3851  0004E4  26D9               	addwf	fsr2l,f,c
  3852  0004E6  503A               	movf	i2send_msg@qptr+1,w,c
  3853  0004E8  22DA               	addwfc	fsr2h,f,c
  3854  0004EA  EE10 F034          	lfsr	1,52
  3855  0004EE  5039               	movf	i2send_msg@qptr,w,c
  3856  0004F0  26E1               	addwf	fsr1l,f,c
  3857  0004F2  503A               	movf	i2send_msg@qptr+1,w,c
  3858  0004F4  22E2               	addwfc	fsr1h,f,c
  3859  0004F6  50E7               	movf	indf1,w,c
  3860  0004F8  6E3F               	movwf	??i2_send_msg& (0+255),c
  3861  0004FA  283F               	incf	??i2_send_msg,w,c
  3862  0004FC  0B03               	andlw	3
  3863  0004FE  6EDF               	movwf	indf2,c
  3864                           
  3865                           ;messages.c: 59: qmsg->full = 1;
  3866  000500  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  3867  000504  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  3868  000508  0E01               	movlw	1
  3869  00050A  6EDF               	movwf	indf2,c
  3870                           
  3871                           ;messages.c: 60: return (1);
  3872  00050C  0E01               	movlw	1
  3873  00050E  0012               	return	
  3874  000510                     __end_ofi2_send_msg:
  3875                           	opt stack 0
  3876                           pclatu	equ	0xFFB
  3877                           pclath	equ	0xFFA
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           intcon	equ	0xFF2
  3885                           postinc0	equ	0xFEE
  3886                           fsr0h	equ	0xFEA
  3887                           fsr0l	equ	0xFE9
  3888                           wreg	equ	0xFE8
  3889                           indf1	equ	0xFE7
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           bsr	equ	0xFE0
  3893                           indf2	equ	0xFDF
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function i2_memcpy *****************
  3899 ;; Defined at:
  3900 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  d1              2   46[COMRAM] PTR void 
  3903 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3904 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3905 ;;  s1              2   48[COMRAM] PTR const void 
  3906 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3907 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3908 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3909 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(41), 
  3910 ;;		 -> main@uc(5), 
  3911 ;;  n               2   50[COMRAM] unsigned int 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  memcpy          2   54[COMRAM] PTR const unsigned char 
  3914 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3915 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3916 ;;		 -> timer0_lthread@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3917 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(41), 
  3918 ;;		 -> main@uc(5), 
  3919 ;;  memcpy          2   52[COMRAM] PTR unsigned char 
  3920 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3921 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2   46[COMRAM] PTR void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3931 ;;      Params:         6       0       0       0       0
  3932 ;;      Locals:         4       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:        10       0       0       0       0
  3935 ;;Total ram usage:       10 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		i2_send_msg
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text26
  3945  000AF0                     __ptext26:
  3946                           	opt stack 0
  3947  000AF0                     i2_memcpy:
  3948                           	opt stack 18
  3949                           
  3950                           ;incstack = 0
  3951  000AF0  C032  F038         	movff	i2memcpy@s1+1,i2memcpy@s+1
  3952  000AF4  C031  F037         	movff	i2memcpy@s1,i2memcpy@s
  3953  000AF8  C030  F036         	movff	i2memcpy@d1+1,i2memcpy@d+1
  3954  000AFC  C02F  F035         	movff	i2memcpy@d1,i2memcpy@d
  3955  000B00  D00E               	goto	i2l3249
  3956  000B02                     i2l3243:
  3957  000B02  C037  FFD9         	movff	i2memcpy@s,fsr2l
  3958  000B06  C038  FFDA         	movff	i2memcpy@s+1,fsr2h
  3959  000B0A  C035  FFE1         	movff	i2memcpy@d,fsr1l
  3960  000B0E  C036  FFE2         	movff	i2memcpy@d+1,fsr1h
  3961  000B12  CFDF FFE7          	movff	indf2,indf1
  3962  000B16  4A37               	infsnz	i2memcpy@s,f,c
  3963  000B18  2A38               	incf	i2memcpy@s+1,f,c
  3964  000B1A  4A35               	infsnz	i2memcpy@d,f,c
  3965  000B1C  2A36               	incf	i2memcpy@d+1,f,c
  3966  000B1E                     i2l3249:
  3967  000B1E  0633               	decf	i2memcpy@n,f,c
  3968  000B20  A0D8               	btfss	status,0,c
  3969  000B22  0634               	decf	i2memcpy@n+1,f,c
  3970  000B24  2833               	incf	i2memcpy@n& (0+255),w,c
  3971  000B26  B4D8               	btfsc	status,2,c
  3972  000B28  2834               	incf	(i2memcpy@n+1)& (0+255),w,c
  3973  000B2A  B4D8               	btfsc	status,2,c
  3974                           
  3975                           ;	Return value of i2_memcpy is never used
  3976  000B2C  0012               	return	
  3977  000B2E  D7E9               	goto	i2l3243
  3978  000B30                     __end_ofi2_memcpy:
  3979                           	opt stack 0
  3980                           pclatu	equ	0xFFB
  3981                           pclath	equ	0xFFA
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           prodh	equ	0xFF4
  3987                           prodl	equ	0xFF3
  3988                           intcon	equ	0xFF2
  3989                           postinc0	equ	0xFEE
  3990                           fsr0h	equ	0xFEA
  3991                           fsr0l	equ	0xFE9
  3992                           wreg	equ	0xFE8
  3993                           indf1	equ	0xFE7
  3994                           fsr1h	equ	0xFE2
  3995                           fsr1l	equ	0xFE1
  3996                           bsr	equ	0xFE0
  3997                           indf2	equ	0xFDF
  3998                           fsr2h	equ	0xFDA
  3999                           fsr2l	equ	0xFD9
  4000                           status	equ	0xFD8
  4001                           
  4002 ;; *************** function _adc_int_handler *****************
  4003 ;; Defined at:
  4004 ;;		line 56 in file "../src/user_interrupts.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  result          2   51[COMRAM] unsigned int 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;		None               void
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4018 ;;      Params:         0       0       0       0       0
  4019 ;;      Locals:         2       0       0       0       0
  4020 ;;      Temps:          2       0       0       0       0
  4021 ;;      Totals:         4       0       0       0       0
  4022 ;;Total ram usage:        4 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    1
  4025 ;; This function calls:
  4026 ;;		_Handle_i2c_data_save
  4027 ;;		_ReadADC
  4028 ;; This function is called by:
  4029 ;;		_InterruptHandlerHigh
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text27
  4034  000B6A                     __ptext27:
  4035                           	opt stack 0
  4036  000B6A                     _adc_int_handler:
  4037                           	opt stack 20
  4038                           
  4039                           ;user_interrupts.c: 58: unsigned int result;
  4040                           ;user_interrupts.c: 59: result = ReadADC();
  4041                           
  4042                           ;incstack = 0
  4043  000B6A  ECAF  F006         	call	_ReadADC	;wreg free
  4044  000B6E  C02F  F034         	movff	?_ReadADC,adc_int_handler@result
  4045  000B72  C030  F035         	movff	?_ReadADC+1,adc_int_handler@result+1
  4046                           
  4047                           ;user_interrupts.c: 60: result = result /4;
  4048  000B76  C034  F032         	movff	adc_int_handler@result,??_adc_int_handler
  4049  000B7A  C035  F033         	movff	adc_int_handler@result+1,??_adc_int_handler+1
  4050  000B7E  90D8               	bcf	status,0,c
  4051  000B80  3233               	rrcf	??_adc_int_handler+1,f,c
  4052  000B82  3232               	rrcf	??_adc_int_handler,f,c
  4053  000B84  90D8               	bcf	status,0,c
  4054  000B86  3233               	rrcf	??_adc_int_handler+1,f,c
  4055  000B88  3232               	rrcf	??_adc_int_handler,f,c
  4056  000B8A  C032  F034         	movff	??_adc_int_handler,adc_int_handler@result
  4057  000B8E  C033  F035         	movff	??_adc_int_handler+1,adc_int_handler@result+1
  4058                           
  4059                           ;user_interrupts.c: 61: Handle_i2c_data_save(1,&result);
  4060  000B92  0E00               	movlw	high adc_int_handler@result
  4061  000B94  6E30               	movwf	Handle_i2c_data_save@msg+1,c
  4062  000B96  0E34               	movlw	low adc_int_handler@result
  4063  000B98  6E2F               	movwf	Handle_i2c_data_save@msg,c
  4064  000B9A  0E01               	movlw	1
  4065  000B9C  ECE0  F004         	call	_Handle_i2c_data_save
  4066  000BA0  0012               	return	
  4067  000BA2                     __end_of_adc_int_handler:
  4068                           	opt stack 0
  4069                           pclatu	equ	0xFFB
  4070                           pclath	equ	0xFFA
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           intcon	equ	0xFF2
  4078                           postinc0	equ	0xFEE
  4079                           fsr0h	equ	0xFEA
  4080                           fsr0l	equ	0xFE9
  4081                           wreg	equ	0xFE8
  4082                           indf1	equ	0xFE7
  4083                           fsr1h	equ	0xFE2
  4084                           fsr1l	equ	0xFE1
  4085                           bsr	equ	0xFE0
  4086                           indf2	equ	0xFDF
  4087                           fsr2h	equ	0xFDA
  4088                           fsr2l	equ	0xFD9
  4089                           status	equ	0xFD8
  4090                           
  4091 ;; *************** function _ReadADC *****************
  4092 ;; Defined at:
  4093 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2   46[COMRAM] int 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4107 ;;      Params:         2       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0
  4110 ;;      Totals:         2       0       0       0       0
  4111 ;;Total ram usage:        2 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_adc_int_handler
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text28
  4121  000D5E                     __ptext28:
  4122                           	opt stack 0
  4123  000D5E                     _ReadADC:
  4124                           	opt stack 20
  4125                           
  4126                           ;incstack = 0
  4127  000D5E  50C4               	movf	4036,w,c	;volatile
  4128  000D60  6E30               	movwf	?_ReadADC+1,c
  4129  000D62  50C3               	movf	4035,w,c	;volatile
  4130  000D64  6E2F               	movwf	?_ReadADC,c
  4131  000D66  0012               	return	
  4132  000D68                     __end_of_ReadADC:
  4133                           	opt stack 0
  4134                           pclatu	equ	0xFFB
  4135                           pclath	equ	0xFFA
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           fsr0h	equ	0xFEA
  4145                           fsr0l	equ	0xFE9
  4146                           wreg	equ	0xFE8
  4147                           indf1	equ	0xFE7
  4148                           fsr1h	equ	0xFE2
  4149                           fsr1l	equ	0xFE1
  4150                           bsr	equ	0xFE0
  4151                           indf2	equ	0xFDF
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _Handle_i2c_data_save *****************
  4157 ;; Defined at:
  4158 ;;		line 108 in file "../src/my_i2c.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  length          1    wreg     unsigned char 
  4161 ;;  msg             2   46[COMRAM] PTR unsigned char 
  4162 ;;		 -> adc_int_handler@result(2), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  length          1    0[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4174 ;;      Params:         2       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0
  4176 ;;      Temps:          1       0       0       0       0
  4177 ;;      Totals:         3       0       0       0       0
  4178 ;;Total ram usage:        3 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_adc_int_handler
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text29
  4188  0009C0                     __ptext29:
  4189                           	opt stack 0
  4190  0009C0                     _Handle_i2c_data_save:
  4191                           	opt stack 20
  4192                           
  4193                           ;my_i2c.c: 110: if(ic_ptr->sendBufLen < 13)
  4194                           
  4195                           ;incstack = 0
  4196  0009C0  EE20 F027          	lfsr	2,39
  4197  0009C4  504C               	movf	_ic_ptr,w,c
  4198  0009C6  26D9               	addwf	fsr2l,f,c
  4199  0009C8  504D               	movf	_ic_ptr+1,w,c
  4200  0009CA  22DA               	addwfc	fsr2h,f,c
  4201  0009CC  50DF               	movf	indf2,w,c
  4202  0009CE  6E31               	movwf	??_Handle_i2c_data_save& (0+255),c
  4203  0009D0  0E0D               	movlw	13
  4204  0009D2  5C31               	subwf	??_Handle_i2c_data_save,w,c
  4205  0009D4  B0D8               	btfsc	status,0,c
  4206  0009D6  0012               	return	
  4207                           
  4208                           ;my_i2c.c: 111: {
  4209                           ;my_i2c.c: 112: ic_ptr->sendBuf[ic_ptr->sendBufLen] = *msg;
  4210  0009D8  C02F  FFD9         	movff	Handle_i2c_data_save@msg,fsr2l
  4211  0009DC  C030  FFDA         	movff	Handle_i2c_data_save@msg+1,fsr2h
  4212  0009E0  EE10 F027          	lfsr	1,39
  4213  0009E4  504C               	movf	_ic_ptr,w,c
  4214  0009E6  26E1               	addwf	fsr1l,f,c
  4215  0009E8  504D               	movf	_ic_ptr+1,w,c
  4216  0009EA  22E2               	addwfc	fsr1h,f,c
  4217  0009EC  50E7               	movf	indf1,w,c
  4218  0009EE  6E31               	movwf	??_Handle_i2c_data_save& (0+255),c
  4219  0009F0  5031               	movf	??_Handle_i2c_data_save,w,c
  4220  0009F2  0D01               	mullw	1
  4221  0009F4  0E1D               	movlw	29
  4222  0009F6  26F3               	addwf	prodl,f,c
  4223  0009F8  0E00               	movlw	0
  4224  0009FA  22F4               	addwfc	prodh,f,c
  4225  0009FC  50F3               	movf	prodl,w,c
  4226  0009FE  244C               	addwf	_ic_ptr,w,c
  4227  000A00  6EE1               	movwf	fsr1l,c
  4228  000A02  50F4               	movf	prodh,w,c
  4229  000A04  204D               	addwfc	_ic_ptr+1,w,c
  4230  000A06  6EE2               	movwf	fsr1h,c
  4231  000A08  CFDF FFE7          	movff	indf2,indf1
  4232                           
  4233                           ;my_i2c.c: 113: ic_ptr->sendBufLen++;
  4234  000A0C  EE20 F027          	lfsr	2,39
  4235  000A10  504C               	movf	_ic_ptr,w,c
  4236  000A12  26D9               	addwf	fsr2l,f,c
  4237  000A14  504D               	movf	_ic_ptr+1,w,c
  4238  000A16  22DA               	addwfc	fsr2h,f,c
  4239  000A18  2ADF               	incf	indf2,f,c
  4240  000A1A  0012               	return	
  4241  000A1C                     __end_of_Handle_i2c_data_save:
  4242                           	opt stack 0
  4243                           pclatu	equ	0xFFB
  4244                           pclath	equ	0xFFA
  4245                           tblptru	equ	0xFF8
  4246                           tblptrh	equ	0xFF7
  4247                           tblptrl	equ	0xFF6
  4248                           tablat	equ	0xFF5
  4249                           prodh	equ	0xFF4
  4250                           prodl	equ	0xFF3
  4251                           intcon	equ	0xFF2
  4252                           postinc0	equ	0xFEE
  4253                           fsr0h	equ	0xFEA
  4254                           fsr0l	equ	0xFE9
  4255                           wreg	equ	0xFE8
  4256                           indf1	equ	0xFE7
  4257                           fsr1h	equ	0xFE2
  4258                           fsr1l	equ	0xFE1
  4259                           bsr	equ	0xFE0
  4260                           indf2	equ	0xFDF
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8
  4264                           
  4265 ;; *************** function _SleepIfOkay *****************
  4266 ;; Defined at:
  4267 ;;		line 228 in file "../src/messages.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4281 ;;      Params:         0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0
  4284 ;;      Totals:         0       0       0       0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    2
  4288 ;; This function calls:
  4289 ;;		_check_msg
  4290 ;;		_enter_sleep_mode
  4291 ;;		_in_high_int
  4292 ;;		_in_low_int
  4293 ;; This function is called by:
  4294 ;;		_InterruptHandlerHigh
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text30
  4299  000A1C                     __ptext30:
  4300                           	opt stack 0
  4301  000A1C                     _SleepIfOkay:
  4302                           	opt stack 19
  4303                           
  4304                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  4305                           
  4306                           ;incstack = 0
  4307  000A1C  664A               	tstfsz	_MQ_Main_Willing_to_block,c
  4308  000A1E  D001               	goto	i2l2063
  4309  000A20  0012               	return	
  4310  000A22                     i2l2063:
  4311                           
  4312                           ;messages.c: 232: }
  4313                           ;messages.c: 235: if (in_low_int()) {
  4314  000A22  EC01  F006         	call	_in_low_int	;wreg free
  4315  000A26  5032               	movf	?_in_low_int+1,w,c
  4316  000A28  1031               	iorwf	?_in_low_int,w,c
  4317  000A2A  A4D8               	btfss	status,2,c
  4318  000A2C  0012               	return	
  4319                           
  4320                           ;messages.c: 237: }
  4321                           ;messages.c: 240: if (!in_high_int()) {
  4322                           
  4323                           ;messages.c: 236: return;
  4324  000A2E  ECA9  F006         	call	_in_high_int	;wreg free
  4325  000A32  5030               	movf	?_in_high_int+1,w,c
  4326  000A34  102F               	iorwf	?_in_high_int,w,c
  4327  000A36  B4D8               	btfsc	status,2,c
  4328  000A38  0012               	return	
  4329                           
  4330                           ;messages.c: 242: }
  4331                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  4332                           
  4333                           ;messages.c: 241: return;
  4334  000A3A  0101               	movlb	1	; () banked
  4335  000A3C  0E01               	movlw	high _ToMainHigh_MQ
  4336  000A3E  6E30               	movwf	check_msg@qptr+1,c
  4337  000A40  0101               	movlb	1	; () banked
  4338  000A42  0E6C               	movlw	low _ToMainHigh_MQ
  4339  000A44  6E2F               	movwf	check_msg@qptr,c
  4340  000A46  EC55  F006         	call	_check_msg	;wreg free
  4341  000A4A  0900               	iorlw	0
  4342  000A4C  A4D8               	btfss	status,2,c
  4343  000A4E  0012               	return	
  4344                           
  4345                           ;messages.c: 249: }
  4346                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  4347                           
  4348                           ;messages.c: 248: return;
  4349  000A50  0100               	movlb	0	; () banked
  4350  000A52  0E00               	movlw	high _ToMainLow_MQ
  4351  000A54  6E30               	movwf	check_msg@qptr+1,c
  4352  000A56  0100               	movlb	0	; () banked
  4353  000A58  0E80               	movlw	low _ToMainLow_MQ
  4354  000A5A  6E2F               	movwf	check_msg@qptr,c
  4355  000A5C  EC55  F006         	call	_check_msg	;wreg free
  4356  000A60  0900               	iorlw	0
  4357  000A62  B4D8               	btfsc	status,2,c
  4358                           
  4359                           ;messages.c: 252: }
  4360                           ;messages.c: 253: enter_sleep_mode();
  4361                           
  4362                           ;messages.c: 251: return;
  4363  000A64  ECB8  F006         	call	_enter_sleep_mode	;wreg free
  4364  000A68  0012               	return	
  4365  000A6A                     __end_of_SleepIfOkay:
  4366                           	opt stack 0
  4367                           pclatu	equ	0xFFB
  4368                           pclath	equ	0xFFA
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           postinc0	equ	0xFEE
  4377                           fsr0h	equ	0xFEA
  4378                           fsr0l	equ	0xFE9
  4379                           wreg	equ	0xFE8
  4380                           indf1	equ	0xFE7
  4381                           fsr1h	equ	0xFE2
  4382                           fsr1l	equ	0xFE1
  4383                           bsr	equ	0xFE0
  4384                           indf2	equ	0xFDF
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _in_low_int *****************
  4390 ;; Defined at:
  4391 ;;		line 30 in file "../src/interrupts.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  2   48[COMRAM] int 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4405 ;;      Params:         2       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0
  4408 ;;      Totals:         2       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    1
  4412 ;; This function calls:
  4413 ;;		_in_high_int
  4414 ;; This function is called by:
  4415 ;;		_SleepIfOkay
  4416 ;;		_in_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text31
  4421  000C02                     __ptext31:
  4422                           	opt stack 0
  4423  000C02                     _in_low_int:
  4424                           	opt stack 19
  4425                           
  4426                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4427                           
  4428                           ;incstack = 0
  4429  000C02  ACF2               	btfss	intcon,6,c	;volatile
  4430  000C04  D005               	goto	i2l1929
  4431                           
  4432                           ;interrupts.c: 32: return (0);
  4433  000C06  0E00               	movlw	0
  4434  000C08  6E32               	movwf	?_in_low_int+1,c
  4435  000C0A  0E00               	movlw	0
  4436  000C0C  6E31               	movwf	?_in_low_int,c
  4437  000C0E  0012               	return	
  4438  000C10                     i2l1929:
  4439  000C10  ECA9  F006         	call	_in_high_int	;wreg free
  4440  000C14  5030               	movf	?_in_high_int+1,w,c
  4441  000C16  102F               	iorwf	?_in_high_int,w,c
  4442  000C18  B4D8               	btfsc	status,2,c
  4443  000C1A  D005               	goto	i2l1937
  4444                           
  4445                           ;interrupts.c: 34: return (0);
  4446  000C1C  0E00               	movlw	0
  4447  000C1E  6E32               	movwf	?_in_low_int+1,c
  4448  000C20  0E00               	movlw	0
  4449  000C22  6E31               	movwf	?_in_low_int,c
  4450  000C24  0012               	return	
  4451  000C26                     i2l1937:
  4452                           
  4453                           ;interrupts.c: 36: return (1);
  4454  000C26  0E00               	movlw	0
  4455  000C28  6E32               	movwf	?_in_low_int+1,c
  4456  000C2A  0E01               	movlw	1
  4457  000C2C  6E31               	movwf	?_in_low_int,c
  4458  000C2E  0012               	return	
  4459  000C30                     __end_of_in_low_int:
  4460                           	opt stack 0
  4461                           pclatu	equ	0xFFB
  4462                           pclath	equ	0xFFA
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           postinc0	equ	0xFEE
  4471                           fsr0h	equ	0xFEA
  4472                           fsr0l	equ	0xFE9
  4473                           wreg	equ	0xFE8
  4474                           indf1	equ	0xFE7
  4475                           fsr1h	equ	0xFE2
  4476                           fsr1l	equ	0xFE1
  4477                           bsr	equ	0xFE0
  4478                           indf2	equ	0xFDF
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _in_high_int *****************
  4484 ;; Defined at:
  4485 ;;		line 22 in file "../src/interrupts.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2   46[COMRAM] int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4499 ;;      Params:         2       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0
  4502 ;;      Totals:         2       0       0       0       0
  4503 ;;Total ram usage:        2 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_in_low_int
  4509 ;;		_SleepIfOkay
  4510 ;;		_in_main
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text32
  4515  000D52                     __ptext32:
  4516                           	opt stack 0
  4517  000D52                     _in_high_int:
  4518                           	opt stack 19
  4519                           
  4520                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4521                           
  4522                           ;incstack = 0
  4523  000D52  0E00               	movlw	0
  4524  000D54  AEF2               	btfss	intcon,7,c	;volatile
  4525  000D56  0E01               	movlw	1
  4526  000D58  6E2F               	movwf	?_in_high_int,c
  4527  000D5A  6A30               	clrf	?_in_high_int+1,c
  4528  000D5C  0012               	return	
  4529  000D5E                     __end_of_in_high_int:
  4530                           	opt stack 0
  4531                           pclatu	equ	0xFFB
  4532                           pclath	equ	0xFFA
  4533                           tblptru	equ	0xFF8
  4534                           tblptrh	equ	0xFF7
  4535                           tblptrl	equ	0xFF6
  4536                           tablat	equ	0xFF5
  4537                           prodh	equ	0xFF4
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           postinc0	equ	0xFEE
  4541                           fsr0h	equ	0xFEA
  4542                           fsr0l	equ	0xFE9
  4543                           wreg	equ	0xFE8
  4544                           indf1	equ	0xFE7
  4545                           fsr1h	equ	0xFE2
  4546                           fsr1l	equ	0xFE1
  4547                           bsr	equ	0xFE0
  4548                           indf2	equ	0xFDF
  4549                           fsr2h	equ	0xFDA
  4550                           fsr2l	equ	0xFD9
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function _enter_sleep_mode *****************
  4554 ;; Defined at:
  4555 ;;		line 202 in file "../src/messages.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		None
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4569 ;;      Params:         0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0
  4572 ;;      Totals:         0       0       0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_SleepIfOkay
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text33
  4583  000D70                     __ptext33:
  4584                           	opt stack 0
  4585  000D70                     _enter_sleep_mode:
  4586                           	opt stack 20
  4587                           
  4588                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  4589                           
  4590                           ;incstack = 0
  4591  000D70  8ED3               	bsf	4051,7,c	;volatile
  4592  000D72  0003               	sleep		;# 
  4593  000D74  0012               	return	
  4594  000D76                     __end_of_enter_sleep_mode:
  4595                           	opt stack 0
  4596                           pclatu	equ	0xFFB
  4597                           pclath	equ	0xFFA
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           prodh	equ	0xFF4
  4603                           prodl	equ	0xFF3
  4604                           intcon	equ	0xFF2
  4605                           postinc0	equ	0xFEE
  4606                           fsr0h	equ	0xFEA
  4607                           fsr0l	equ	0xFE9
  4608                           wreg	equ	0xFE8
  4609                           indf1	equ	0xFE7
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           bsr	equ	0xFE0
  4613                           indf2	equ	0xFDF
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _check_msg *****************
  4619 ;; Defined at:
  4620 ;;		line 222 in file "../src/messages.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  qptr            2   46[COMRAM] PTR struct __msg_queue
  4623 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      unsigned char 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4635 ;;      Params:         2       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0
  4637 ;;      Temps:          1       0       0       0       0
  4638 ;;      Totals:         3       0       0       0       0
  4639 ;;Total ram usage:        3 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_SleepIfOkay
  4645 ;;		_block_on_To_msgqueues
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text34
  4650  000CAA                     __ptext34:
  4651                           	opt stack 0
  4652  000CAA                     _check_msg:
  4653                           	opt stack 20
  4654                           
  4655                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4656                           
  4657                           ;incstack = 0
  4658  000CAA  EE20 F035          	lfsr	2,53
  4659  000CAE  502F               	movf	check_msg@qptr,w,c
  4660  000CB0  26D9               	addwf	fsr2l,f,c
  4661  000CB2  5030               	movf	check_msg@qptr+1,w,c
  4662  000CB4  22DA               	addwfc	fsr2h,f,c
  4663  000CB6  50DF               	movf	indf2,w,c
  4664  000CB8  6E31               	movwf	??_check_msg& (0+255),c
  4665  000CBA  5031               	movf	??_check_msg,w,c
  4666  000CBC  0D0D               	mullw	13
  4667  000CBE  50F3               	movf	prodl,w,c
  4668  000CC0  242F               	addwf	check_msg@qptr,w,c
  4669  000CC2  6ED9               	movwf	fsr2l,c
  4670  000CC4  50F4               	movf	prodh,w,c
  4671  000CC6  2030               	addwfc	check_msg@qptr+1,w,c
  4672  000CC8  6EDA               	movwf	fsr2h,c
  4673  000CCA  50DF               	movf	indf2,w,c
  4674  000CCC  0012               	return	
  4675  000CCE                     __end_of_check_msg:
  4676                           	opt stack 0
  4677  0000                     pclatu	equ	0xFFB
  4678                           pclath	equ	0xFFA
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           postinc0	equ	0xFEE
  4687                           fsr0h	equ	0xFEA
  4688                           fsr0l	equ	0xFE9
  4689                           wreg	equ	0xFE8
  4690                           indf1	equ	0xFE7
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           bsr	equ	0xFE0
  4694                           indf2	equ	0xFDF
  4695                           fsr2h	equ	0xFDA
  4696                           fsr2l	equ	0xFD9
  4697                           status	equ	0xFD8
  4698                           pclatu	equ	0xFFB
  4699                           pclath	equ	0xFFA
  4700                           tblptru	equ	0xFF8
  4701                           tblptrh	equ	0xFF7
  4702                           tblptrl	equ	0xFF6
  4703                           tablat	equ	0xFF5
  4704                           prodh	equ	0xFF4
  4705                           prodl	equ	0xFF3
  4706                           intcon	equ	0xFF2
  4707                           postinc0	equ	0xFEE
  4708                           fsr0h	equ	0xFEA
  4709                           fsr0l	equ	0xFE9
  4710                           wreg	equ	0xFE8
  4711                           indf1	equ	0xFE7
  4712                           fsr1h	equ	0xFE2
  4713                           fsr1l	equ	0xFE1
  4714                           bsr	equ	0xFE0
  4715                           indf2	equ	0xFDF
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720                           	psect	rparam
  4721  0000                     pclatu	equ	0xFFB
  4722                           pclath	equ	0xFFA
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           prodh	equ	0xFF4
  4728                           prodl	equ	0xFF3
  4729                           intcon	equ	0xFF2
  4730                           postinc0	equ	0xFEE
  4731                           fsr0h	equ	0xFEA
  4732                           fsr0l	equ	0xFE9
  4733                           wreg	equ	0xFE8
  4734                           indf1	equ	0xFE7
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           bsr	equ	0xFE0
  4738                           indf2	equ	0xFDF
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         228
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     63      81
    BANK0           128     33      87
    BANK1           256     48     210
    BANK2           256      0       0
    BANK3           244      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@ic(BANK1[41]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@ic(BANK1[41]), 
		 -> main@uc(BANK1[5]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 41
		 -> main@ic(BANK1[41]), 

    Handle_i2c_data_save@msg	PTR unsigned char  size(2) Largest target is 2
		 -> adc_int_handler@result(COMRAM[2]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 41
		 -> NULL(NULL[0]), main@ic(BANK1[41]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 41
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[41]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@data	PTR void  size(2) Largest target is 41
		 -> timer0_lthread@val(COMRAM[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[41]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    main@data	PTR int  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _adc_int_handler->_Handle_i2c_data_save
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy

Critical Paths under _main in BANK0

    _main->_OpenADC
    _main->_init_queues
    _init_queues->_init_queue

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0    1970
                                             31 BANK0      2     2      0
                                              0 BANK1     48    48      0
                            _OpenADC
                         _OpenTimer0
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_recv
                           _init_i2c
                        _init_queues
                     _init_uart_recv
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     500
                                             30 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     500
                                             26 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_recv                                      1     1      0      31
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 1     1      0      31
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     371
                                             26 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptHandlerLow                                 17    17      0    5987
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (4) _uart_recv_int_handler                                1     1      0    2945
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (5) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _timer1_int_handler                                   3     3      0    3042
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (5) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _ToMainLow_sendmsg                                    4     1      3    2911
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (6) _send_msg                                            12     6      6    2202
                                             10 COMRAM    12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6     636
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                15    15      0    4249
                                             11 BANK0     15    15      0
                        _SleepIfOkay
                    _adc_int_handler
             _i2c_master_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   6     6      0      98
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2      98
                                             46 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _i2c_master_int_handler                               2     2      0    3672
                                              9 BANK0      2     2      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     1      3    3672
                                              5 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (11) i2_send_msg                                         12     6      6    2347
                                             56 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     796
                                             46 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) _adc_int_handler                                      4     4      0     179
                                             49 COMRAM     4     4      0
               _Handle_i2c_data_save
                            _ReadADC
 ---------------------------------------------------------------------------------
 (10) _ReadADC                                             2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _Handle_i2c_data_save                                4     2      2     108
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     300
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (10) _in_low_int                                          2     0      2       0
                                             48 COMRAM     2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (11) _in_high_int                                         2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _check_msg                                           3     1      2     300
                                             46 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_recv
   _init_i2c
   _init_queues
     _init_queue
   _init_uart_recv

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _adc_int_handler
     _Handle_i2c_data_save
     _ReadADC
   _i2c_master_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F3      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     30      D2       6       82.0%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     21      57       4       68.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3F      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17A      11        0.0%
DATA                 0      0     17A      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Feb 23 14:32:17 2014

                              _i 0042                                _j 0050  
                              _x 0048         _MQ_Main_Willing_to_block 004A  
                    _SSPSTATbits 000FC7                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 0CAA                     __CFG_CP0$OFF 000000  
                            l417 08D4                              l438 0C54  
                            l439 0C56             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                   _FromMainLow_MQ 0136  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 002F                 ??_init_uart_recv 00D2  
                ReadTimer1@timer 0003                             l2905 0920  
                           _LATB 000F8A                             i1l52 0070  
                _FromMainHigh_MQ 0100                             _Send 0040  
                  __CFG_FCMEN$ON 000000                             _main 067E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           _swit 0046                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                           start 00B6                    __CFG_FOSC2$ON 000000  
               ?_adc_int_handler 0001                       i2_send_msg 043E  
  __size_of_i2c_configure_master 003A                  __end_of_ReadADC 0D68  
                 send_msg@length 000D                  __end_of_OpenADC 08D8  
    __size_of_timer0_int_handler 0012                            ?_main 0001  
                          _T0CON 000FD5                            i2l303 01EA  
                          i2l312 0346                            i1l472 0CFA  
                          i2l308 02A0                            i2l298 00EA  
                          _RCREG 000FAE                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _TRISB 000F93  
                     i2memcpy@d1 002F                       i2memcpy@s1 0031  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                     _ConvertADC 0D76                            tablat 000FF5  
                          status 000FD8                 __end_ofi2_memcpy 0B30  
                __initialization 0A6A                     __end_of_main 071E  
                     _ReadTimer1 0D1C      __size_of_timer1_int_handler 0030  
     __size_of_ToMainLow_sendmsg 0026    __size_of_Handle_i2c_data_save 005C  
                         ??_main 00D5                  send_msg@msgtype 000E  
                  __activetblptr 000002                  send_msg@tlength 0012  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
                         _ADRESL 000FC3          ??_uart_recv_int_handler 001B  
                         i1l3309 0066                           i1l3263 060C  
                         i1l2913 0AC2                           i1l3297 079A  
                         i2l2063 0A22                           i1l2919 0ADE  
                     _OpenTimer0 0C30                           i2l3243 0B02  
                         i2l3229 048A                   __CFG_WDTEN$OFF 000000  
                         i2l3249 0B1E                           i2l2723 023C  
                         i2l2707 01B0                           i2l2733 02B8  
                         i2l2717 0202                           i2l2751 03B0  
                         i2l2727 0274                           i2l1937 0C26  
                         i2l1929 0C10                           i2l2745 035A  
                         i2l2739 02F2                           i2l2685 0596  
                         i2l2677 0572                           i2l2669 054A  
                         i2l2759 03F2                           i2l2689 00BC  
                         i2l2699 0166                    ??_SleepIfOkay 0033  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
                      ??_ReadADC 0031                        ??_OpenADC 00D2  
                    ?i2_send_msg 0039                   __CFG_XINST$OFF 000000  
                _i2c_master_recv 0BA2                 OpenTimer0@config 00D0  
                         _ic_ptr 004C                 __end_of_init_i2c 0854  
                         _length 0044                           _memcpy 0AB0  
                         clear_0 0A70                           clear_1 0A7C  
                         clear_2 0A88                           _uc_ptr 004E  
                         main@ic 01A9                           main@uc 01A4  
               __end_of_send_msg 067E                     __pdataCOMRAM 0050  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 00D3  
           __size_of_in_high_int 000C                      ?_ConvertADC 0001  
                __CFG_FOSC$HSPLL 000000                       __accesstop 0080  
        __end_of__initialization 0AA6       __end_of_ToMainHigh_sendmsg 0C84  
            __end_of_SleepIfOkay 0A6A                   __pcstackCOMRAM 0001  
                    ?_ReadTimer1 0001               __size_of_check_msg 0024  
              __end_of_ReadUSART 0D0A    __size_of_InterruptHandlerHigh 05CC  
    __end_of_InterruptHandlerLow 00B6                        ?i2_memcpy 002F  
                  _ToMainHigh_MQ 016C                 _enter_sleep_mode 0D70  
            __size_ofi2_send_msg 00D2                    ReadUSART@data 0001  
                  check_msg@qptr 002F             __size_of_init_queues 006E  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                       __pnvCOMRAM 004C  
        __end_of_i2c_master_recv 0BD2         ??_i2c_master_int_handler 00BF  
               WriteTimer0@timer 0031                          ?_memcpy 0001  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0031  
                  ??_WriteTimer1 0003              __size_of_ConvertADC 0004  
   __end_of_i2c_configure_master 0B6A                       ??i2_memcpy 0035  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7              __size_of_ReadTimer1 0012  
              __end_of_check_msg 0CCE                        ?_init_i2c 00D0  
                    _SleepIfOkay 0A1C                          _ReadADC 0D5E  
                        _OpenADC 0854                       _in_low_int 0C02  
                        __Hparam 0000                        ?_send_msg 000B  
                        __Lparam 0000       __end_of_timer0_int_handler 0D40  
               init_uart_recv@uc 00D0          Handle_i2c_data_save@msg 002F  
                __CFG_STVREN$OFF 000000                          __pcinit 0A6A  
                __size_of_memcpy 0040         __size_of_adc_int_handler 0038  
                     _init_queue 08D8                          __ramtop 0400  
            __size_of_OpenTimer0 002A                          __ptext0 067E  
                        __ptext1 0CCE                          __ptext2 0952  
                        __ptext3 08D8                          __ptext4 07BA  
                        __ptext5 0BA2                          __ptext6 0B30  
                        __ptext7 0D68                          __ptext8 0C30  
                        __ptext9 0854                        _T0CONbits 000FD5  
            __end_of_WriteTimer0 0D52              __end_of_WriteTimer1 0D1C  
                 OpenADC@config2 00D0                   __pintcode_body 0510  
           end_of_initialization 0AA6     __end_of_Handle_i2c_data_save 0A1C  
 __size_of_uart_recv_int_handler 009C                          memcpy@d 0007  
                        memcpy@n 0005                          memcpy@s 0009  
  __end_of_uart_recv_int_handler 07BA                       ??_init_i2c 00D2  
                  __Lmediumconst 0000                          int_func 0510  
        __size_of_init_uart_recv 001E                 ?_i2c_master_recv 0001  
                   ??i2_send_msg 003F                       ??_send_msg 0011  
__size_of_i2c_master_int_handler 0384       __end_of_timer1_int_handler 0C02  
                      _RCSTAbits 000FAB                          postinc0 000FEE  
      ToMainHigh_sendmsg@msgtype 00BB       Handle_i2c_data_save@length 0001  
                      _TRISCbits 000F94               __end_ofi2_send_msg 0510  
                   ??_ConvertADC 002F         timer1_int_handler@result 001C  
                    ?_in_low_int 0031             _i2c_configure_master 0B30  
       __end_of_enter_sleep_mode 0D76                     ??_ReadTimer1 0003  
             _ToMainHigh_sendmsg 0C5A                    __pidataCOMRAM 0D7A  
                    ?_init_queue 00D0                        i2memcpy@d 0035  
                    _WriteTimer0 0D40                      _WriteTimer1 0D0A  
                      i2memcpy@n 0033                        i2memcpy@s 0037  
             __end_of_ConvertADC 0D7A                   __end_of_memcpy 0AF0  
              _enable_interrupts 0D68              ?_ToMainHigh_sendmsg 00BB  
             ?_enable_interrupts 0001              start_initialization 0A6A  
         _i2c_master_int_handler 00BA                    ??_in_high_int 0031  
                      _ReadUSART 0CEC                ??_adc_int_handler 0032  
              __size_ofi2_memcpy 0040              ??_enable_interrupts 00D0  
                   ??_OpenTimer0 00D0               __end_of_ReadTimer1 0D2E  
   __end_of_InterruptHandlerHigh 05D4                       init_i2c@ic 00D0  
           ??_ToMainHigh_sendmsg 0040            ?_i2c_configure_master 0001  
      __end_of_enable_interrupts 0D70                         ??_memcpy 0007  
           _Handle_i2c_data_save 09C0               __end_of_OpenTimer0 0C5A  
                    __pbssCOMRAM 0040                       ?_ReadUSART 0001  
                  ??_init_queues 00D4                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2              __size_of_in_low_int 002E  
            __CFG_CCP2MX$DEFAULT 000000         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 009E              __end_of_in_high_int 0D5E  
                   ?_SleepIfOkay 0001                     _ToMainLow_MQ 0080  
            __size_of_init_queue 007A                   _init_uart_recv 0CCE  
                       ?_ReadADC 002F                        _check_msg 0CAA  
              __size_of_init_i2c 009A                OpenADC@portconfig 00D1  
                       ?_OpenADC 00D0                        __pintcode 0008  
              __size_of_send_msg 00AA            ?_Handle_i2c_data_save 002F  
                    __pintcodelo 0018                WriteTimer0@timer0 002F  
             _timer0_int_handler 0D2E                WriteTimer1@timer1 0001  
          ToMainLow_sendmsg@data 0018              ?_timer0_int_handler 0001  
         __end_of_init_uart_recv 0CEC              __end_of_init_queues 09C0  
          i2c_master_recv@length 00D0                    OpenADC@config 00D4  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
         ??_i2c_configure_master 00D0                       ?_check_msg 002F  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       i2u161_40 0556                         i2u161_46 0558  
                       i2u163_40 057E                         i2u163_46 0580  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 00BC  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
           ??_timer0_int_handler 0033       __size_of_enable_interrupts 0008  
                     _ADCON0bits 000FC2               _timer1_int_handler 0BD2  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 0AF0                      _in_high_int 0D52  
                   send_msg@data 000F                     send_msg@qmsg 0015  
                   send_msg@slot 0014                     send_msg@qptr 000B  
            ?_timer1_int_handler 0001                  ?_init_uart_recv 00D0  
          _uart_recv_int_handler 071E                     ??_in_low_int 0033  
               __size_of_ReadADC 000A                         __Hrparam 0000  
               __size_of_OpenADC 0084                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_Handle_i2c_data_save 0031  
           ??_timer1_int_handler 001B                  _adc_int_handler 0B6A  
             ??_enter_sleep_mode 002F         __size_of_i2c_master_recv 0030  
                   ??_init_queue 00D2                     ?_WriteTimer0 002F  
                   ?_WriteTimer1 0001          ToMainLow_sendmsg@length 001A  
        ?_i2c_master_int_handler 0001            ?_InterruptHandlerHigh 0001  
              i2send_msg@msgtype 003C                i2send_msg@tlength 00B6  
                    _init_queues 0952               __end_of_in_low_int 0C30  
                       __ptext11 071E                         __ptext20 0D2E  
                       __ptext12 0CEC                         __ptext21 0D40  
                       __ptext13 0BD2                         __ptext30 0A1C  
                       __ptext22 0D76                         __ptext14 0D0A  
                       __ptext31 0C02                         __ptext23 00BA  
                       __ptext15 0C84                         __ptext32 0D52  
                       __ptext24 0C5A                         __ptext16 05D4  
                       __ptext33 0D70                         __ptext25 043E  
                       __ptext17 0AB0                         __ptext34 0CAA  
                       __ptext26 0AF0                         __ptext18 0D1C  
                       __ptext27 0B6A                         __ptext28 0D5E  
                       __ptext29 09C0   i2c_configure_master@slave_addr 00D0  
                       _init_i2c 07BA                    __size_of_main 00A0  
                    ??_check_msg 0031               __end_of_init_queue 0952  
           __size_of_SleepIfOkay 004E                         _send_msg 05D4  
                 init_queue@qptr 00D0   __end_of_i2c_master_int_handler 043E  
                       main@data 01A2              _InterruptHandlerLow 0018  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 0001                         memcpy@s1 0003  
               i2send_msg@length 003B                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
         ?_uart_recv_int_handler 0001          __end_of_adc_int_handler 0BA2  
    __size_of_ToMainHigh_sendmsg 002A                       _OSCCONbits 000FD3  
          adc_int_handler@result 0034         ToMainHigh_sendmsg@length 00BE  
         ??_InterruptHandlerHigh 00C1                _ToMainLow_sendmsg 0C84  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 00D0  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 003D            ??_InterruptHandlerLow 001E  
                 i2send_msg@qmsg 00B9                   i2send_msg@slot 00B8  
                 i2send_msg@qptr 0039              ??_ToMainLow_sendmsg 001A  
                   _USART_Status 004B  
