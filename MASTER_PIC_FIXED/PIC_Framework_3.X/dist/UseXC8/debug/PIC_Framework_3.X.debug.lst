

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Apr 15 11:47:39 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001BD4                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _I2C_Buffer_Size
    80  001BD4  0017               	dw	23
    81  0000                     _INTCONbits	set	4082
    82  0000                     _IPR1bits	set	3999
    83  0000                     _LATB	set	3978
    84  0000                     _LATCbits	set	3979
    85  0000                     _OSCCON	set	4051
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _OSCTUNEbits	set	3995
    88  0000                     _PIE1bits	set	3997
    89  0000                     _PIR1bits	set	3998
    90  0000                     _RCONbits	set	4048
    91  0000                     _RCREG	set	4014
    92  0000                     _RCSTA	set	4011
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _SSPADD	set	4040
    97  0000                     _SSPBUF	set	4041
    98  0000                     _SSPCON1	set	4038
    99  0000                     _SSPCON1bits	set	4038
   100  0000                     _SSPCON2	set	4037
   101  0000                     _SSPCON2bits	set	4037
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _SSPSTATbits	set	4039
   104  0000                     _T0CON	set	4053
   105  0000                     _T0CONbits	set	4053
   106  0000                     _T1CON	set	4045
   107  0000                     _T1CONbits	set	4045
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TXREG	set	4013
   115  0000                     _TXSTA	set	4012
   116  0000                     _TXSTAbits	set	4012
   117                           
   118                           	psect	nvCOMRAM
   119  00004E                     __pnvCOMRAM:
   120                           	opt stack 0
   121  00004E                     _ic_ptr:
   122                           	opt stack 0
   123  00004E                     	ds	2
   124  000050                     _uc_ptr:
   125                           	opt stack 0
   126  000050                     	ds	2
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  00164C                     __pcinit:
   132                           	opt stack 0
   133  00164C                     start_initialization:
   134                           	opt stack 0
   135  00164C                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to BANK1 (162 bytes)
   139  00164C  EE01  F000         	lfsr	0,__pbssBANK1
   140  001650  0EA2               	movlw	162
   141  001652                     clear_0:
   142  001652  6AEE               	clrf	postinc0,c
   143  001654  06E8               	decf	wreg,f,c
   144  001656  E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to BANK0 (54 bytes)
   147  001658  EE00  F080         	lfsr	0,__pbssBANK0
   148  00165C  0E36               	movlw	54
   149  00165E                     clear_1:
   150  00165E  6AEE               	clrf	postinc0,c
   151  001660  06E8               	decf	wreg,f,c
   152  001662  E1FD               	bnz	clear_1
   153                           
   154                           ; Clear objects allocated to COMRAM (7 bytes)
   155  001664  EE00  F047         	lfsr	0,__pbssCOMRAM
   156  001668  0E07               	movlw	7
   157  00166A                     clear_2:
   158  00166A  6AEE               	clrf	postinc0,c
   159  00166C  06E8               	decf	wreg,f,c
   160  00166E  E1FD               	bnz	clear_2
   161                           
   162                           ; Initialize objects allocated to COMRAM (2 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  001670  0ED4               	movlw	low __pidataCOMRAM
   165  001672  6EF6               	movwf	tblptrl,c
   166  001674  0E1B               	movlw	high __pidataCOMRAM
   167  001676  6EF7               	movwf	tblptrh,c
   168  001678  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  00167A  6EF8               	movwf	tblptru,c
   170  00167C  0009               	tblrd		*+	;fetch initializer
   171  00167E  CFF5 F052          	movff	tablat,__pdataCOMRAM
   172  001682  0009               	tblrd		*+	;fetch initializer
   173  001684  CFF5 F053          	movff	tablat,__pdataCOMRAM+1
   174  001688                     end_of_initialization:
   175                           	opt stack 0
   176  001688                     __end_of__initialization:
   177                           	opt stack 0
   178  001688  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  00168A  6EF8               	movwf	tblptru,c
   180  00168C  0100               	movlb	0
   181  00168E  EF58  F004         	goto	_main	;jump to C main() function
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           
   189                           	psect	bssCOMRAM
   190  000047                     __pbssCOMRAM:
   191                           	opt stack 0
   192  000047                     _Send:
   193                           	opt stack 0
   194  000047                     	ds	2
   195  000049                     _x:
   196                           	opt stack 0
   197  000049                     	ds	2
   198  00004B                     _MQ_Main_Willing_to_block:
   199                           	opt stack 0
   200  00004B                     	ds	1
   201  00004C                     _USART_Status:
   202                           	opt stack 0
   203  00004C                     	ds	1
   204  00004D                     _i2c_mode:
   205                           	opt stack 0
   206  00004D                     	ds	1
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	dataCOMRAM
   215  000052                     __pdataCOMRAM:
   216                           	opt stack 0
   217  000052                     _I2C_Buffer_Size:
   218                           	opt stack 0
   219  000052                     	ds	2
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           	psect	bssBANK0
   228  000080                     __pbssBANK0:
   229                           	opt stack 0
   230  000080                     _ToMainLow_MQ:
   231                           	opt stack 0
   232  000080                     	ds	54
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	bssBANK1
   241  000100                     __pbssBANK1:
   242                           	opt stack 0
   243  000100                     _FromMainHigh_MQ:
   244                           	opt stack 0
   245  000100                     	ds	54
   246  000136                     _FromMainLow_MQ:
   247                           	opt stack 0
   248  000136                     	ds	54
   249  00016C                     _ToMainHigh_MQ:
   250                           	opt stack 0
   251  00016C                     	ds	54
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	cstackBANK1
   260  0001A2                     __pcstackBANK1:
   261                           	opt stack 0
   262  0001A2                     FromMainHigh_sendmsg@msgtype:
   263                           	opt stack 0
   264  0001A2                     ToMainLow_recvmsg@msgtype:
   265                           	opt stack 0
   266  0001A2                     ToMainHigh_recvmsg@msgtype:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x0
   270  0001A2                     	ds	1
   271  0001A3                     FromMainHigh_sendmsg@data:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x1
   275  0001A3                     	ds	1
   276  0001A4                     ToMainLow_recvmsg@data:
   277                           	opt stack 0
   278  0001A4                     ToMainHigh_recvmsg@data:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x2
   282  0001A4                     	ds	1
   283  0001A5                     timer1_lthread@tptr:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x3
   287  0001A5                     	ds	1
   288  0001A6                     ToMainLow_recvmsg@maxlength:
   289                           	opt stack 0
   290  0001A6                     ToMainHigh_recvmsg@maxlength:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  0001A6                     	ds	1
   295  0001A7                     timer1_lthread@msgtype:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x5
   299  0001A7                     	ds	2
   300  0001A9                     timer1_lthread@length:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x7
   304  0001A9                     	ds	2
   305  0001AB                     timer1_lthread@msgbuffer:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x9
   309  0001AB                     	ds	2
   310  0001AD                     timer1_lthread@retval:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0xB
   314  0001AD                     	ds	1
   315  0001AE                     main@msgbuffer:
   316                           	opt stack 0
   317                           
   318                           ; 11 bytes @ 0xC
   319  0001AE                     	ds	11
   320  0001B9                     main@uthread_data:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x17
   324  0001B9                     	ds	2
   325  0001BB                     main@t0thread_data:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x19
   329  0001BB                     	ds	2
   330  0001BD                     main@t1thread_data:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x1B
   334  0001BD                     	ds	2
   335  0001BF                     main@uc:
   336                           	opt stack 0
   337                           
   338                           ; 5 bytes @ 0x1D
   339  0001BF                     	ds	5
   340  0001C4                     main@msgtype:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x22
   344  0001C4                     	ds	1
   345  0001C5                     main@length:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x23
   349  0001C5                     	ds	1
   350  0001C6                     main@ic:
   351                           	opt stack 0
   352                           
   353                           ; 53 bytes @ 0x24
   354  0001C6                     	ds	53
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           
   362                           	psect	cstackBANK0
   363  0000B6                     __pcstackBANK0:
   364                           	opt stack 0
   365  0000B6                     ??_i2c_master_int_handler:
   366  0000B6                     ??_i2c_slave_int_handler:
   367                           
   368                           ; 0 bytes @ 0x0
   369  0000B6                     	ds	2
   370  0000B8                     i2c_slave_int_handler@error_buf:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x2
   374  0000B8                     	ds	3
   375  0000BB                     i2c_slave_int_handler@data_written:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379  0000BB                     	ds	1
   380  0000BC                     i2c_slave_int_handler@overrun_error:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x6
   384  0000BC                     	ds	1
   385  0000BD                     i2c_slave_int_handler@i2c_data:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x7
   389  0000BD                     	ds	1
   390  0000BE                     i2c_slave_int_handler@msg_to_send:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x8
   394  0000BE                     	ds	1
   395  0000BF                     i2c_slave_int_handler@msg_ready:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x9
   399  0000BF                     	ds	1
   400  0000C0                     i2c_slave_int_handler@data_read:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0xA
   404  0000C0                     	ds	1
   405  0000C1                     ??_InterruptHandlerHigh:
   406                           
   407                           ; 0 bytes @ 0xB
   408  0000C1                     	ds	14
   409  0000CF                     ??_i2c_configure_slave:
   410  0000CF                     ?_in_high_int:
   411                           	opt stack 0
   412  0000CF                     ?___lwmod:
   413                           	opt stack 0
   414  0000CF                     OpenTimer0@config:
   415                           	opt stack 0
   416  0000CF                     OpenTimer1@config:
   417                           	opt stack 0
   418  0000CF                     WriteUSART@data:
   419                           	opt stack 0
   420  0000CF                     Delay1KTCYx@unit:
   421                           	opt stack 0
   422  0000CF                     init_queue@qptr:
   423                           	opt stack 0
   424  0000CF                     check_msg@qptr:
   425                           	opt stack 0
   426  0000CF                     init_i2c@ic:
   427                           	opt stack 0
   428  0000CF                     init_uart_recv@uc:
   429                           	opt stack 0
   430  0000CF                     timer0_lthread@tptr:
   431                           	opt stack 0
   432  0000CF                     init_timer1_lthread@tptr:
   433                           	opt stack 0
   434  0000CF                     uart_lthread@uptr:
   435                           	opt stack 0
   436  0000CF                     OpenUSART@spbrg:
   437                           	opt stack 0
   438  0000CF                     ___lwmod@dividend:
   439                           	opt stack 0
   440  0000CF                     memcpy@d1:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x19
   444  0000CF                     	ds	1
   445  0000D0                     i2c_configure_slave@addr:
   446                           	opt stack 0
   447  0000D0                     uart_write@msg:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1A
   451  0000D0                     	ds	1
   452  0000D1                     ??_OpenUSART:
   453  0000D1                     ??_init_queue:
   454  0000D1                     ??_check_msg:
   455  0000D1                     ?_in_low_int:
   456                           	opt stack 0
   457  0000D1                     timer0_lthread@msgtype:
   458                           	opt stack 0
   459  0000D1                     uart_lthread@msgtype:
   460                           	opt stack 0
   461  0000D1                     ___lwmod@divisor:
   462                           	opt stack 0
   463  0000D1                     memcpy@s1:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x1B
   467  0000D1                     	ds	1
   468  0000D2                     ??_uart_write:
   469  0000D2                     init_queue@i:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x1C
   473  0000D2                     	ds	1
   474  0000D3                     ??_init_queues:
   475  0000D3                     ??___lwmod:
   476  0000D3                     ?_in_main:
   477                           	opt stack 0
   478  0000D3                     uart_write@length:
   479                           	opt stack 0
   480  0000D3                     timer0_lthread@length:
   481                           	opt stack 0
   482  0000D3                     uart_lthread@length:
   483                           	opt stack 0
   484  0000D3                     memcpy@n:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1D
   488  0000D3                     	ds	1
   489  0000D4                     uart_write@i:
   490                           	opt stack 0
   491  0000D4                     OpenUSART@config:
   492                           	opt stack 0
   493  0000D4                     ___lwmod@counter:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1E
   497  0000D4                     	ds	1
   498  0000D5                     ??_block_on_To_msgqueues:
   499  0000D5                     timer0_lthread@msgbuffer:
   500                           	opt stack 0
   501  0000D5                     uart_lthread@msgbuffer:
   502                           	opt stack 0
   503  0000D5                     memcpy@d:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x1F
   507  0000D5                     	ds	2
   508  0000D7                     timer0_lthread@msgval:
   509                           	opt stack 0
   510  0000D7                     memcpy@s:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x21
   514  0000D7                     	ds	2
   515  0000D9                     send_msg@qptr:
   516                           	opt stack 0
   517  0000D9                     recv_msg@qptr:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x23
   521  0000D9                     	ds	2
   522  0000DB                     send_msg@length:
   523                           	opt stack 0
   524  0000DB                     recv_msg@maxlength:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x25
   528  0000DB                     	ds	1
   529  0000DC                     send_msg@msgtype:
   530                           	opt stack 0
   531  0000DC                     recv_msg@msgtype:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x26
   535  0000DC                     	ds	1
   536  0000DD                     send_msg@data:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x27
   540  0000DD                     	ds	1
   541  0000DE                     recv_msg@data:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x28
   545  0000DE                     	ds	1
   546  0000DF                     ??_send_msg:
   547                           
   548                           ; 0 bytes @ 0x29
   549  0000DF                     	ds	1
   550  0000E0                     ??_recv_msg:
   551  0000E0                     send_msg@tlength:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x2A
   555  0000E0                     	ds	2
   556  0000E2                     send_msg@slot:
   557                           	opt stack 0
   558  0000E2                     recv_msg@slot:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x2C
   562  0000E2                     	ds	1
   563  0000E3                     send_msg@qmsg:
   564                           	opt stack 0
   565  0000E3                     recv_msg@tlength:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2D
   569  0000E3                     	ds	2
   570  0000E5                     FromMainHigh_sendmsg@length:
   571                           	opt stack 0
   572  0000E5                     recv_msg@qmsg:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x2F
   576  0000E5                     	ds	1
   577  0000E6                     ??_timer1_lthread:
   578                           
   579                           ; 0 bytes @ 0x30
   580  0000E6                     	ds	1
   581  0000E7                     tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           
   588                           ; 0 bytes @ 0x31
   589                           
   590                           	psect	cstackCOMRAM
   591  000001                     __pcstackCOMRAM:
   592                           	opt stack 0
   593  000001                     ?_ReadTimer1:
   594                           	opt stack 0
   595  000001                     ReadUSART@data:
   596                           	opt stack 0
   597  000001                     WriteTimer1@timer1:
   598                           	opt stack 0
   599  000001                     i1memcpy@d1:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x0
   603  000001                     	ds	2
   604  000003                     ReadTimer1@timer:
   605                           	opt stack 0
   606  000003                     WriteTimer1@timer:
   607                           	opt stack 0
   608  000003                     i1memcpy@s1:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x2
   612  000003                     	ds	2
   613  000005                     timer1_int_handler@result:
   614                           	opt stack 0
   615  000005                     i1memcpy@n:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x4
   619  000005                     	ds	2
   620  000007                     i1memcpy@d:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x6
   624  000007                     	ds	2
   625  000009                     i1memcpy@s:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x8
   629  000009                     	ds	2
   630  00000B                     i1send_msg@qptr:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0xA
   634  00000B                     	ds	2
   635  00000D                     i1send_msg@length:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0xC
   639  00000D                     	ds	1
   640  00000E                     i1send_msg@msgtype:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0xD
   644  00000E                     	ds	1
   645  00000F                     i1send_msg@data:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xE
   649  00000F                     	ds	2
   650  000011                     ??i1_send_msg:
   651                           
   652                           ; 0 bytes @ 0x10
   653  000011                     	ds	1
   654  000012                     i1send_msg@tlength:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x11
   658  000012                     	ds	2
   659  000014                     i1send_msg@slot:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x13
   663  000014                     	ds	1
   664  000015                     i1send_msg@qmsg:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x14
   668  000015                     	ds	2
   669  000017                     ToMainLow_sendmsg@msgtype:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x16
   673  000017                     	ds	1
   674  000018                     ToMainLow_sendmsg@data:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x17
   678  000018                     	ds	2
   679  00001A                     ToMainLow_sendmsg@length:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x19
   683  00001A                     	ds	1
   684  00001B                     ??_uart_recv_int_handler:
   685                           
   686                           ; 0 bytes @ 0x1A
   687  00001B                     	ds	1
   688  00001C                     ??_InterruptHandlerLow:
   689                           
   690                           ; 0 bytes @ 0x1B
   691  00001C                     	ds	17
   692  00002D                     ??_i2c_configure_master:
   693  00002D                     ?i2_in_high_int:
   694                           	opt stack 0
   695  00002D                     i2c_master_recv@length:
   696                           	opt stack 0
   697  00002D                     handle_start@data_read:
   698                           	opt stack 0
   699  00002D                     start_i2c_slave_reply@msg:
   700                           	opt stack 0
   701  00002D                     WriteTimer0@timer0:
   702                           	opt stack 0
   703  00002D                     i2check_msg@qptr:
   704                           	opt stack 0
   705  00002D                     i2memcpy@d1:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x2C
   709  00002D                     	ds	1
   710  00002E                     i2c_configure_master@slave_addr:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x2D
   714  00002E                     	ds	1
   715  00002F                     ??_start_i2c_slave_reply:
   716  00002F                     ??i2_check_msg:
   717  00002F                     ?i2_in_low_int:
   718                           	opt stack 0
   719  00002F                     WriteTimer0@timer:
   720                           	opt stack 0
   721  00002F                     i2memcpy@s1:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x2E
   725  00002F                     	ds	2
   726  000031                     ??_timer0_int_handler:
   727  000031                     i2memcpy@n:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x30
   731  000031                     	ds	1
   732  000032                     start_i2c_slave_reply@length:
   733                           	opt stack 0
   734  000032                     timer0_int_handler@val:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x31
   738  000032                     	ds	1
   739  000033                     i2memcpy@d:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x32
   743  000033                     	ds	2
   744  000035                     i2memcpy@s:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x34
   748  000035                     	ds	2
   749  000037                     i2send_msg@qptr:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x36
   753  000037                     	ds	2
   754  000039                     i2send_msg@length:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x38
   758  000039                     	ds	1
   759  00003A                     i2send_msg@msgtype:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x39
   763  00003A                     	ds	1
   764  00003B                     i2send_msg@data:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x3A
   768  00003B                     	ds	2
   769  00003D                     ??i2_send_msg:
   770                           
   771                           ; 0 bytes @ 0x3C
   772  00003D                     	ds	1
   773  00003E                     i2send_msg@tlength:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x3D
   777  00003E                     	ds	2
   778  000040                     i2send_msg@slot:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x3F
   782  000040                     	ds	1
   783  000041                     i2send_msg@qmsg:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x40
   787  000041                     	ds	2
   788  000043                     ToMainHigh_sendmsg@msgtype:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x42
   792  000043                     	ds	1
   793  000044                     ToMainHigh_sendmsg@data:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x43
   797  000044                     	ds	2
   798  000046                     ToMainHigh_sendmsg@length:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x45
   802  000046                     	ds	1
   803  000047                     tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           
   810                           ; 0 bytes @ 0x46
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 186 in file "../src/main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  ic             53   36[BANK1 ] struct __i2c_comm
   821 ;;  msgbuffer      11   12[BANK1 ] unsigned char [11]
   822 ;;  uc              5   29[BANK1 ] struct __uart_comm
   823 ;;  t1thread_dat    2   27[BANK1 ] struct __timer1_thread_s
   824 ;;  t0thread_dat    2   25[BANK1 ] struct __timer0_thread_s
   825 ;;  uthread_data    2   23[BANK1 ] struct __uart_thread_str
   826 ;;  length          1   35[BANK1 ] char 
   827 ;;  msgtype         1   34[BANK1 ] unsigned char 
   828 ;;  i               1    0        unsigned char 
   829 ;;  last_reg_rec    1    0        unsigned char 
   830 ;;  c               1    0        unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0      77       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         0       0      77       0       0
   844 ;;Total ram usage:       77 bytes
   845 ;; Hardware stack levels required when called:   15
   846 ;; This function calls:
   847 ;;		_OpenTimer0
   848 ;;		_OpenTimer1
   849 ;;		_OpenUSART
   850 ;;		_ToMainHigh_recvmsg
   851 ;;		_ToMainLow_recvmsg
   852 ;;		_block_on_To_msgqueues
   853 ;;		_enable_interrupts
   854 ;;		_i2c_configure_slave
   855 ;;		_init_i2c
   856 ;;		_init_queues
   857 ;;		_init_timer1_lthread
   858 ;;		_init_uart_recv
   859 ;;		_timer0_lthread
   860 ;;		_timer1_lthread
   861 ;;		_uart_lthread
   862 ;;		_uart_write
   863 ;; This function is called by:
   864 ;;		Startup code after reset
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text0
   869  0008B0                     __ptext0:
   870                           	opt stack 0
   871  0008B0                     _main:
   872                           	opt stack 15
   873                           
   874                           ;main.c: 187: char c;
   875                           ;main.c: 188: signed char length;
   876                           ;main.c: 189: unsigned char msgtype;
   877                           ;main.c: 190: unsigned char last_reg_recvd;
   878                           ;main.c: 191: uart_comm uc;
   879                           ;main.c: 192: i2c_comm ic;
   880                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   881                           ;main.c: 194: unsigned char i;
   882                           ;main.c: 195: uart_thread_struct uthread_data;
   883                           ;main.c: 196: timer1_thread_struct t1thread_data;
   884                           ;main.c: 197: timer0_thread_struct t0thread_data;
   885                           ;main.c: 205: OSCCON = 0x82;
   886                           
   887                           ;incstack = 0
   888  0008B0  0E82               	movlw	130
   889  0008B2  6ED3               	movwf	4051,c	;volatile
   890                           
   891                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
   892  0008B4  8C9B               	bsf	3995,6,c	;volatile
   893                           
   894                           ;main.c: 224: init_uart_recv(&uc);
   895  0008B6  0101               	movlb	1	; () banked
   896  0008B8  0E01               	movlw	high main@uc
   897  0008BA  0100               	movlb	0	; () banked
   898  0008BC  0100               	movlb	0	; () banked
   899  0008BE  6FD0               	movwf	(init_uart_recv@uc+1)& (0+255),b
   900  0008C0  0101               	movlb	1	; () banked
   901  0008C2  0EBF               	movlw	low main@uc
   902  0008C4  0100               	movlb	0	; () banked
   903  0008C6  0100               	movlb	0	; () banked
   904  0008C8  6FCF               	movwf	init_uart_recv@uc& (0+255),b
   905  0008CA  EC58  F00D         	call	_init_uart_recv	;wreg free
   906                           
   907                           ;main.c: 227: init_i2c(&ic);
   908  0008CE  0101               	movlb	1	; () banked
   909  0008D0  0E01               	movlw	high main@ic
   910  0008D2  0100               	movlb	0	; () banked
   911  0008D4  0100               	movlb	0	; () banked
   912  0008D6  6FD0               	movwf	(init_i2c@ic+1)& (0+255),b
   913  0008D8  0101               	movlb	1	; () banked
   914  0008DA  0EC6               	movlw	low main@ic
   915  0008DC  0100               	movlb	0	; () banked
   916  0008DE  0100               	movlb	0	; () banked
   917  0008E0  6FCF               	movwf	init_i2c@ic& (0+255),b
   918  0008E2  EC4A  F008         	call	_init_i2c	;wreg free
   919                           
   920                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   921  0008E6  0101               	movlb	1	; () banked
   922  0008E8  0E01               	movlw	high main@t1thread_data
   923  0008EA  0100               	movlb	0	; () banked
   924  0008EC  0100               	movlb	0	; () banked
   925  0008EE  6FD0               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   926  0008F0  0101               	movlb	1	; () banked
   927  0008F2  0EBD               	movlw	low main@t1thread_data
   928  0008F4  0100               	movlb	0	; () banked
   929  0008F6  0100               	movlb	0	; () banked
   930  0008F8  6FCF               	movwf	init_timer1_lthread@tptr& (0+255),b
   931  0008FA  ECB0  F00D         	call	_init_timer1_lthread	;wreg free
   932                           
   933                           ;main.c: 233: init_queues();
   934  0008FE  EC67  F00A         	call	_init_queues	;wreg free
   935                           
   936                           ;main.c: 237: TRISB = 0x0;
   937  000902  0E00               	movlw	0
   938  000904  6E93               	movwf	3987,c	;volatile
   939                           
   940                           ;main.c: 238: LATB = 0x0;
   941  000906  0E00               	movlw	0
   942  000908  6E8A               	movwf	3978,c	;volatile
   943                           
   944                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110111);
   945  00090A  0E97               	movlw	151
   946  00090C  EC0B  F00D         	call	_OpenTimer0
   947                           
   948                           ;main.c: 260: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   949  000910  0EF5               	movlw	245
   950  000912  EC6F  F00C         	call	_OpenTimer1
   951                           
   952                           ;main.c: 267: IPR1bits.TMR1IP = 0;
   953  000916  909F               	bcf	3999,0,c	;volatile
   954                           
   955                           ;main.c: 269: IPR1bits.RCIP = 0;
   956  000918  9A9F               	bcf	3999,5,c	;volatile
   957                           
   958                           ;main.c: 271: IPR1bits.SSPIP = 1;
   959  00091A  869F               	bsf	3999,3,c	;volatile
   960                           
   961                           ;main.c: 280: i2c_configure_slave(0x9E);
   962  00091C  0E9E               	movlw	158
   963  00091E  ECC1  F00C         	call	_i2c_configure_slave
   964                           
   965                           ;main.c: 295: PIE1bits.SSPIE = 1;
   966  000922  869D               	bsf	3997,3,c	;volatile
   967                           
   968                           ;main.c: 306: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   969                           ;main.c: 307: 0b11111111 & 0b11101111, 0x26);
   970  000924  0E00               	movlw	0
   971  000926  0100               	movlb	0	; () banked
   972  000928  0100               	movlb	0	; () banked
   973  00092A  6FD0               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   974  00092C  0E26               	movlw	38
   975  00092E  0100               	movlb	0	; () banked
   976  000930  6FCF               	movwf	OpenUSART@spbrg& (0+255),b
   977  000932  0E6C               	movlw	108
   978  000934  ECE3  F008         	call	_OpenUSART
   979                           
   980                           ;main.c: 313: enable_interrupts();
   981  000938  ECE3  F00D         	call	_enable_interrupts	;wreg free
   982  00093C                     l3328:
   983                           
   984                           ;main.c: 339: block_on_To_msgqueues();
   985  00093C  ECB2  F009         	call	_block_on_To_msgqueues	;wreg free
   986                           
   987                           ;main.c: 346: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   988  000940  0101               	movlb	1	; () banked
   989  000942  0E01               	movlw	high main@msgtype
   990  000944  0101               	movlb	1	; () banked
   991  000946  0101               	movlb	1	; () banked
   992  000948  6FA3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   993  00094A  0101               	movlb	1	; () banked
   994  00094C  0EC4               	movlw	low main@msgtype
   995  00094E  0101               	movlb	1	; () banked
   996  000950  0101               	movlb	1	; () banked
   997  000952  6FA2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   998  000954  0101               	movlb	1	; () banked
   999  000956  0E01               	movlw	high main@msgbuffer
  1000  000958  0101               	movlb	1	; () banked
  1001  00095A  0101               	movlb	1	; () banked
  1002  00095C  6FA5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1003  00095E  0101               	movlb	1	; () banked
  1004  000960  0EAE               	movlw	low main@msgbuffer
  1005  000962  0101               	movlb	1	; () banked
  1006  000964  0101               	movlb	1	; () banked
  1007  000966  6FA4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1008  000968  0E0A               	movlw	10
  1009  00096A  ECD1  F00B         	call	_ToMainHigh_recvmsg
  1010  00096E  0101               	movlb	1	; () banked
  1011  000970  0101               	movlb	1	; () banked
  1012  000972  6FC5               	movwf	main@length& (0+255),b
  1013                           
  1014                           ; BSR set to: 1
  1015                           ;main.c: 347: if (length < 0) {
  1016  000974  0101               	movlb	1	; () banked
  1017  000976  0101               	movlb	1	; () banked
  1018  000978  BFC5               	btfsc	main@length& (0+255),7,b
  1019  00097A  D055               	goto	l3344
  1020  00097C  D048               	goto	l3342
  1021  00097E                     l3336:
  1022                           
  1023                           ; BSR set to: 1
  1024                           ;main.c: 355: {
  1025                           ;main.c: 356: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1026  00097E  0101               	movlb	1	; () banked
  1027  000980  0E01               	movlw	high main@t0thread_data
  1028  000982  0100               	movlb	0	; () banked
  1029  000984  0100               	movlb	0	; () banked
  1030  000986  6FD0               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1031  000988  0101               	movlb	1	; () banked
  1032  00098A  0EBB               	movlw	low main@t0thread_data
  1033  00098C  0100               	movlb	0	; () banked
  1034  00098E  0100               	movlb	0	; () banked
  1035  000990  6FCF               	movwf	timer0_lthread@tptr& (0+255),b
  1036  000992  0101               	movlb	1	; () banked
  1037  000994  0100               	movlb	0	; () banked
  1038  000996  C1C4  F0D1         	movff	main@msgtype,timer0_lthread@msgtype
  1039  00099A  0100               	movlb	0	; () banked
  1040  00099C  0100               	movlb	0	; () banked
  1041  00099E  6BD2               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1042  0009A0  0101               	movlb	1	; () banked
  1043  0009A2  0101               	movlb	1	; () banked
  1044  0009A4  51C5               	movf	main@length& (0+255),w,b
  1045  0009A6  0100               	movlb	0	; () banked
  1046  0009A8  0100               	movlb	0	; () banked
  1047  0009AA  6FD3               	movwf	timer0_lthread@length& (0+255),b
  1048  0009AC  0100               	movlb	0	; () banked
  1049  0009AE  6BD4               	clrf	(timer0_lthread@length+1)& (0+255),b
  1050  0009B0  0100               	movlb	0	; () banked
  1051  0009B2  BFD3               	btfsc	timer0_lthread@length& (0+255),7,b
  1052  0009B4  07D4               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1053  0009B6  0101               	movlb	1	; () banked
  1054  0009B8  0E01               	movlw	high main@msgbuffer
  1055  0009BA  0100               	movlb	0	; () banked
  1056  0009BC  0100               	movlb	0	; () banked
  1057  0009BE  6FD6               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1058  0009C0  0101               	movlb	1	; () banked
  1059  0009C2  0EAE               	movlw	low main@msgbuffer
  1060  0009C4  0100               	movlb	0	; () banked
  1061  0009C6  0100               	movlb	0	; () banked
  1062  0009C8  6FD5               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1063  0009CA  ECA7  F00D         	call	_timer0_lthread	;wreg free
  1064                           
  1065                           ;main.c: 357: break;
  1066  0009CE  D02B               	goto	l3344
  1067  0009D0                     l3338:
  1068                           
  1069                           ;main.c: 360: {
  1070                           ;main.c: 361: uart_write(length,msgbuffer);
  1071  0009D0  0101               	movlb	1	; () banked
  1072  0009D2  0E01               	movlw	high main@msgbuffer
  1073  0009D4  0100               	movlb	0	; () banked
  1074  0009D6  0100               	movlb	0	; () banked
  1075  0009D8  6FD1               	movwf	(uart_write@msg+1)& (0+255),b
  1076  0009DA  0101               	movlb	1	; () banked
  1077  0009DC  0EAE               	movlw	low main@msgbuffer
  1078  0009DE  0100               	movlb	0	; () banked
  1079  0009E0  0100               	movlb	0	; () banked
  1080  0009E2  6FD0               	movwf	uart_write@msg& (0+255),b
  1081  0009E4  0101               	movlb	1	; () banked
  1082  0009E6  0101               	movlb	1	; () banked
  1083  0009E8  51C5               	movf	main@length& (0+255),w,b
  1084  0009EA  EC9E  F00A         	call	_uart_write
  1085  0009EE                     l106:
  1086                           
  1087                           ;main.c: 364: {
  1088                           ;main.c: 365: uart_write(length,msgbuffer);
  1089  0009EE  0101               	movlb	1	; () banked
  1090  0009F0  0E01               	movlw	high main@msgbuffer
  1091  0009F2  0100               	movlb	0	; () banked
  1092  0009F4  0100               	movlb	0	; () banked
  1093  0009F6  6FD1               	movwf	(uart_write@msg+1)& (0+255),b
  1094  0009F8  0101               	movlb	1	; () banked
  1095  0009FA  0EAE               	movlw	low main@msgbuffer
  1096  0009FC  0100               	movlb	0	; () banked
  1097  0009FE  0100               	movlb	0	; () banked
  1098  000A00  6FD0               	movwf	uart_write@msg& (0+255),b
  1099  000A02  0101               	movlb	1	; () banked
  1100  000A04  0101               	movlb	1	; () banked
  1101  000A06  51C5               	movf	main@length& (0+255),w,b
  1102  000A08  EC9E  F00A         	call	_uart_write
  1103  000A0C  D00C               	goto	l3344
  1104  000A0E                     l3342:
  1105  000A0E  0101               	movlb	1	; () banked
  1106  000A10  0101               	movlb	1	; () banked
  1107  000A12  51C4               	movf	main@msgtype& (0+255),w,b
  1108                           
  1109                           ; Switch size 1, requested type "space"
  1110                           ; Number of cases is 3, Range of values is 10 to 47
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte           10     6 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  000A14  0A0A               	xorlw	10	; case 10
  1116  000A16  B4D8               	btfsc	status,2,c
  1117  000A18  D7B2               	goto	l3336
  1118  000A1A  0A27               	xorlw	39	; case 45
  1119  000A1C  B4D8               	btfsc	status,2,c
  1120  000A1E  D7D8               	goto	l3338
  1121  000A20  0A02               	xorlw	2	; case 47
  1122  000A22  B4D8               	btfsc	status,2,c
  1123  000A24  D7E4               	goto	l106
  1124  000A26                     l3344:
  1125                           
  1126                           ;main.c: 373: }
  1127                           ;main.c: 376: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1128  000A26  0101               	movlb	1	; () banked
  1129  000A28  0E01               	movlw	high main@msgtype
  1130  000A2A  0101               	movlb	1	; () banked
  1131  000A2C  0101               	movlb	1	; () banked
  1132  000A2E  6FA3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1133  000A30  0101               	movlb	1	; () banked
  1134  000A32  0EC4               	movlw	low main@msgtype
  1135  000A34  0101               	movlb	1	; () banked
  1136  000A36  0101               	movlb	1	; () banked
  1137  000A38  6FA2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1138  000A3A  0101               	movlb	1	; () banked
  1139  000A3C  0E01               	movlw	high main@msgbuffer
  1140  000A3E  0101               	movlb	1	; () banked
  1141  000A40  0101               	movlb	1	; () banked
  1142  000A42  6FA5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1143  000A44  0101               	movlb	1	; () banked
  1144  000A46  0EAE               	movlw	low main@msgbuffer
  1145  000A48  0101               	movlb	1	; () banked
  1146  000A4A  0101               	movlb	1	; () banked
  1147  000A4C  6FA4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1148  000A4E  0E0A               	movlw	10
  1149  000A50  ECB0  F00B         	call	_ToMainLow_recvmsg
  1150  000A54  0101               	movlb	1	; () banked
  1151  000A56  0101               	movlb	1	; () banked
  1152  000A58  6FC5               	movwf	main@length& (0+255),b
  1153                           
  1154                           ; BSR set to: 1
  1155                           ;main.c: 377: if (length < 0) {
  1156  000A5A  0101               	movlb	1	; () banked
  1157  000A5C  0101               	movlb	1	; () banked
  1158  000A5E  BFC5               	btfsc	main@length& (0+255),7,b
  1159  000A60  D76D               	goto	l3328
  1160  000A62  D052               	goto	l3356
  1161  000A64                     l3350:
  1162                           
  1163                           ; BSR set to: 1
  1164                           ;main.c: 385: {
  1165                           ;main.c: 386: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1166  000A64  0101               	movlb	1	; () banked
  1167  000A66  0E01               	movlw	high main@t1thread_data
  1168  000A68  0101               	movlb	1	; () banked
  1169  000A6A  0101               	movlb	1	; () banked
  1170  000A6C  6FA6               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1171  000A6E  0101               	movlb	1	; () banked
  1172  000A70  0EBD               	movlw	low main@t1thread_data
  1173  000A72  0101               	movlb	1	; () banked
  1174  000A74  0101               	movlb	1	; () banked
  1175  000A76  6FA5               	movwf	timer1_lthread@tptr& (0+255),b
  1176  000A78  0101               	movlb	1	; () banked
  1177  000A7A  0101               	movlb	1	; () banked
  1178  000A7C  C1C4  F1A7         	movff	main@msgtype,timer1_lthread@msgtype
  1179  000A80  0101               	movlb	1	; () banked
  1180  000A82  0101               	movlb	1	; () banked
  1181  000A84  6BA8               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1182  000A86  0101               	movlb	1	; () banked
  1183  000A88  0101               	movlb	1	; () banked
  1184  000A8A  51C5               	movf	main@length& (0+255),w,b
  1185  000A8C  0101               	movlb	1	; () banked
  1186  000A8E  0101               	movlb	1	; () banked
  1187  000A90  6FA9               	movwf	timer1_lthread@length& (0+255),b
  1188  000A92  0101               	movlb	1	; () banked
  1189  000A94  6BAA               	clrf	(timer1_lthread@length+1)& (0+255),b
  1190  000A96  0101               	movlb	1	; () banked
  1191  000A98  BFA9               	btfsc	timer1_lthread@length& (0+255),7,b
  1192  000A9A  07AA               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1193  000A9C  0101               	movlb	1	; () banked
  1194  000A9E  0E01               	movlw	high main@msgbuffer
  1195  000AA0  0101               	movlb	1	; () banked
  1196  000AA2  0101               	movlb	1	; () banked
  1197  000AA4  6FAC               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1198  000AA6  0101               	movlb	1	; () banked
  1199  000AA8  0EAE               	movlw	low main@msgbuffer
  1200  000AAA  0101               	movlb	1	; () banked
  1201  000AAC  0101               	movlb	1	; () banked
  1202  000AAE  6FAB               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1203  000AB0  EC2E  F00A         	call	_timer1_lthread	;wreg free
  1204                           
  1205                           ;main.c: 387: break;
  1206  000AB4  D743               	goto	l3328
  1207  000AB6                     l3352:
  1208                           
  1209                           ;main.c: 394: {
  1210                           ;main.c: 395: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1211  000AB6  0101               	movlb	1	; () banked
  1212  000AB8  0E01               	movlw	high main@uthread_data
  1213  000ABA  0100               	movlb	0	; () banked
  1214  000ABC  0100               	movlb	0	; () banked
  1215  000ABE  6FD0               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1216  000AC0  0101               	movlb	1	; () banked
  1217  000AC2  0EB9               	movlw	low main@uthread_data
  1218  000AC4  0100               	movlb	0	; () banked
  1219  000AC6  0100               	movlb	0	; () banked
  1220  000AC8  6FCF               	movwf	uart_lthread@uptr& (0+255),b
  1221  000ACA  0101               	movlb	1	; () banked
  1222  000ACC  0100               	movlb	0	; () banked
  1223  000ACE  C1C4  F0D1         	movff	main@msgtype,uart_lthread@msgtype
  1224  000AD2  0100               	movlb	0	; () banked
  1225  000AD4  0100               	movlb	0	; () banked
  1226  000AD6  6BD2               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1227  000AD8  0101               	movlb	1	; () banked
  1228  000ADA  0101               	movlb	1	; () banked
  1229  000ADC  51C5               	movf	main@length& (0+255),w,b
  1230  000ADE  0100               	movlb	0	; () banked
  1231  000AE0  0100               	movlb	0	; () banked
  1232  000AE2  6FD3               	movwf	uart_lthread@length& (0+255),b
  1233  000AE4  0100               	movlb	0	; () banked
  1234  000AE6  6BD4               	clrf	(uart_lthread@length+1)& (0+255),b
  1235  000AE8  0100               	movlb	0	; () banked
  1236  000AEA  BFD3               	btfsc	uart_lthread@length& (0+255),7,b
  1237  000AEC  07D4               	decf	(uart_lthread@length+1)& (0+255),f,b
  1238  000AEE  0101               	movlb	1	; () banked
  1239  000AF0  0E01               	movlw	high main@msgbuffer
  1240  000AF2  0100               	movlb	0	; () banked
  1241  000AF4  0100               	movlb	0	; () banked
  1242  000AF6  6FD6               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1243  000AF8  0101               	movlb	1	; () banked
  1244  000AFA  0EAE               	movlw	low main@msgbuffer
  1245  000AFC  0100               	movlb	0	; () banked
  1246  000AFE  0100               	movlb	0	; () banked
  1247  000B00  6FD5               	movwf	uart_lthread@msgbuffer& (0+255),b
  1248  000B02  EC32  F00C         	call	_uart_lthread	;wreg free
  1249                           
  1250                           ;main.c: 396: break;
  1251  000B06  D71A               	goto	l3328
  1252  000B08                     l3356:
  1253  000B08  0101               	movlb	1	; () banked
  1254  000B0A  0101               	movlb	1	; () banked
  1255  000B0C  51C4               	movf	main@msgtype& (0+255),w,b
  1256                           
  1257                           ; Switch size 1, requested type "space"
  1258                           ; Number of cases is 3, Range of values is 11 to 31
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte           10     6 (average)
  1262                           ;	Chosen strategy is simple_byte
  1263  000B0E  0A0B               	xorlw	11	; case 11
  1264  000B10  B4D8               	btfsc	status,2,c
  1265  000B12  D7A8               	goto	l3350
  1266  000B14  0A15               	xorlw	21	; case 30
  1267  000B16  B4D8               	btfsc	status,2,c
  1268  000B18  D7CE               	goto	l3352
  1269  000B1A  0A01               	xorlw	1	; case 31
  1270  000B1C  B4D8               	btfsc	status,2,c
  1271  000B1E  D7CB               	goto	l3352
  1272  000B20  D70D               	goto	l3328
  1273  000B22                     __end_of_main:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _uart_write *****************
  1284 ;; Defined at:
  1285 ;;		line 55 in file "../src/my_uart.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  length          1    wreg     unsigned char 
  1288 ;;  msg             2   26[BANK0 ] PTR unsigned char 
  1289 ;;		 -> main@msgbuffer(11), 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  length          1   29[BANK0 ] unsigned char 
  1292 ;;  i               1   30[BANK0 ] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;		None               void
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1302 ;;      Params:         0       2       0       0       0
  1303 ;;      Locals:         0       2       0       0       0
  1304 ;;      Temps:          0       1       0       0       0
  1305 ;;      Totals:         0       5       0       0       0
  1306 ;;Total ram usage:        5 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:   12
  1309 ;; This function calls:
  1310 ;;		_WriteUSART
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text1
  1317  00153C                     __ptext1:
  1318                           	opt stack 0
  1319  00153C                     _uart_write:
  1320                           	opt stack 17
  1321                           
  1322                           ; BSR set to: 1
  1323                           ;incstack = 0
  1324                           ;uart_write@length stored from wreg
  1325  00153C  CFE8 F0D3          	movff	wreg,uart_write@length
  1326                           
  1327                           ;my_uart.c: 60: unsigned char i = 0;
  1328  001540  0100               	movlb	0	; () banked
  1329  001542  6FD2               	movwf	??_uart_write& (0+255),b
  1330  001544  0E00               	movlw	0
  1331  001546  0100               	movlb	0	; () banked
  1332  001548  0100               	movlb	0	; () banked
  1333  00154A  6FD4               	movwf	uart_write@i& (0+255),b
  1334  00154C  0100               	movlb	0	; () banked
  1335  00154E  51D2               	movf	??_uart_write& (0+255),w,b
  1336                           
  1337                           ;my_uart.c: 61: for(i = 0; i < length; i++){
  1338  001550  0100               	movlb	0	; () banked
  1339  001552  6FD2               	movwf	??_uart_write& (0+255),b
  1340  001554  0E00               	movlw	0
  1341  001556  0100               	movlb	0	; () banked
  1342  001558  0100               	movlb	0	; () banked
  1343  00155A  6FD4               	movwf	uart_write@i& (0+255),b
  1344  00155C  0100               	movlb	0	; () banked
  1345  00155E  51D2               	movf	??_uart_write& (0+255),w,b
  1346  001560  D016               	goto	l2606
  1347  001562                     l392:
  1348  001562  A2AC               	btfss	4012,1,c	;volatile
  1349  001564  D7FE               	goto	l392
  1350                           
  1351                           ;my_uart.c: 72: WriteUSART(msg[i]);
  1352  001566  0100               	movlb	0	; () banked
  1353  001568  0100               	movlb	0	; () banked
  1354  00156A  51D4               	movf	uart_write@i& (0+255),w,b
  1355  00156C  0D01               	mullw	1
  1356  00156E  50F3               	movf	prodl,w,c
  1357  001570  0100               	movlb	0	; () banked
  1358  001572  0100               	movlb	0	; () banked
  1359  001574  25D0               	addwf	uart_write@msg& (0+255),w,b
  1360  001576  6ED9               	movwf	fsr2l,c
  1361  001578  50F4               	movf	prodh,w,c
  1362  00157A  0100               	movlb	0	; () banked
  1363  00157C  0100               	movlb	0	; () banked
  1364  00157E  21D1               	addwfc	(uart_write@msg+1)& (0+255),w,b
  1365  001580  6EDA               	movwf	fsr2h,c
  1366  001582  50DF               	movf	indf2,w,c
  1367  001584  EC9D  F00D         	call	_WriteUSART
  1368  001588  0100               	movlb	0	; () banked
  1369  00158A  0100               	movlb	0	; () banked
  1370  00158C  2BD4               	incf	uart_write@i& (0+255),f,b
  1371  00158E                     l2606:
  1372                           
  1373                           ; BSR set to: 0
  1374  00158E  0100               	movlb	0	; () banked
  1375  001590  0100               	movlb	0	; () banked
  1376  001592  51D3               	movf	uart_write@length& (0+255),w,b
  1377  001594  0100               	movlb	0	; () banked
  1378  001596  0100               	movlb	0	; () banked
  1379  001598  5DD4               	subwf	uart_write@i& (0+255),w,b
  1380  00159A  B0D8               	btfsc	status,0,c
  1381                           
  1382                           ; BSR set to: 0
  1383                           
  1384                           ; BSR set to: 0
  1385  00159C  0012               	return	
  1386  00159E  D7E1               	goto	l392
  1387  0015A0                     __end_of_uart_write:
  1388                           	opt stack 0
  1389                           tblptru	equ	0xFF8
  1390                           tblptrh	equ	0xFF7
  1391                           tblptrl	equ	0xFF6
  1392                           tablat	equ	0xFF5
  1393                           prodh	equ	0xFF4
  1394                           prodl	equ	0xFF3
  1395                           postinc0	equ	0xFEE
  1396                           wreg	equ	0xFE8
  1397                           indf2	equ	0xFDF
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _WriteUSART *****************
  1403 ;; Defined at:
  1404 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  data            1    wreg     unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  data            1   25[BANK0 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;		None               void
  1411 ;; Registers used:
  1412 ;;		wreg
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       1       0       0       0
  1420 ;;      Temps:          0       0       0       0       0
  1421 ;;      Totals:         0       1       0       0       0
  1422 ;;Total ram usage:        1 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:   11
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_uart_write
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text2
  1433  001B3A                     __ptext2:
  1434                           	opt stack 0
  1435  001B3A                     _WriteUSART:
  1436                           	opt stack 17
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;incstack = 0
  1440                           ;WriteUSART@data stored from wreg
  1441  001B3A  CFE8 F0CF          	movff	wreg,WriteUSART@data
  1442  001B3E  ACAC               	btfss	4012,6,c	;volatile
  1443  001B40  D003               	goto	l3070
  1444  001B42  90AC               	bcf	4012,0,c	;volatile
  1445  001B44  B24C               	btfsc	_USART_Status,1,c
  1446  001B46  80AC               	bsf	4012,0,c	;volatile
  1447  001B48                     l3070:
  1448  001B48  C0CF  FFAD         	movff	WriteUSART@data,4013	;volatile
  1449  001B4C  0012               	return	
  1450  001B4E                     __end_of_WriteUSART:
  1451                           	opt stack 0
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           prodh	equ	0xFF4
  1457                           prodl	equ	0xFF3
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           indf2	equ	0xFDF
  1461                           fsr2h	equ	0xFDA
  1462                           fsr2l	equ	0xFD9
  1463                           status	equ	0xFD8
  1464                           
  1465 ;; *************** function _uart_lthread *****************
  1466 ;; Defined at:
  1467 ;;		line 9 in file "../src/uart_thread.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  uptr            2   25[BANK0 ] PTR struct __uart_thread
  1470 ;;		 -> main@uthread_data(2), 
  1471 ;;  msgtype         2   27[BANK0 ] int 
  1472 ;;  length          2   29[BANK0 ] int 
  1473 ;;  msgbuffer       2   31[BANK0 ] PTR unsigned char 
  1474 ;;		 -> main@msgbuffer(11), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2   25[BANK0 ] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1486 ;;      Params:         0       8       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         0       8       0       0       0
  1490 ;;Total ram usage:        8 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:   11
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text3
  1501  001864                     __ptext3:
  1502                           	opt stack 0
  1503  001864                     _uart_lthread:
  1504                           	opt stack 18
  1505                           
  1506                           ;uart_thread.c: 10: if (msgtype == 30) {
  1507                           
  1508                           ;incstack = 0
  1509  001864  0100               	movlb	0	; () banked
  1510  001866  0100               	movlb	0	; () banked
  1511  001868  51D1               	movf	uart_lthread@msgtype& (0+255),w,b
  1512  00186A  0A1E               	xorlw	30
  1513  00186C  11D2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1514  00186E  B4D8               	btfsc	status,2,c
  1515  001870  0012               	return	
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1519                           
  1520                           ; BSR set to: 0
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;uart_thread.c: 11: }
  1524  001872  0100               	movlb	0	; () banked
  1525  001874  0100               	movlb	0	; () banked
  1526  001876  51D1               	movf	uart_lthread@msgtype& (0+255),w,b
  1527  001878  0A1F               	xorlw	31
  1528  00187A  11D2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1529  00187C  A4D8               	btfss	status,2,c
  1530  00187E  0012               	return	
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1534  001880  0100               	movlb	0	; () banked
  1535  001882  0100               	movlb	0	; () banked
  1536  001884  51D3               	movf	uart_lthread@length& (0+255),w,b
  1537  001886  0100               	movlb	0	; () banked
  1538  001888  0100               	movlb	0	; () banked
  1539  00188A  25D5               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1540  00188C  6ED9               	movwf	fsr2l,c
  1541  00188E  0100               	movlb	0	; () banked
  1542  001890  0100               	movlb	0	; () banked
  1543  001892  51D4               	movf	(uart_lthread@length+1)& (0+255),w,b
  1544  001894  0100               	movlb	0	; () banked
  1545  001896  0100               	movlb	0	; () banked
  1546  001898  21D6               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1547  00189A  6EDA               	movwf	fsr2h,c
  1548  00189C  0E00               	movlw	0
  1549  00189E  6EDF               	movwf	indf2,c
  1550  0018A0  0012               	return	
  1551  0018A2                     __end_of_uart_lthread:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           indf2	equ	0xFDF
  1562                           fsr2h	equ	0xFDA
  1563                           fsr2l	equ	0xFD9
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _timer1_lthread *****************
  1567 ;; Defined at:
  1568 ;;		line 14 in file "../src/timer1_thread.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  tptr            2    3[BANK1 ] PTR struct __timer1_thre
  1571 ;;		 -> main@t1thread_data(2), 
  1572 ;;  msgtype         2    5[BANK1 ] int 
  1573 ;;  length          2    7[BANK1 ] int 
  1574 ;;  msgbuffer       2    9[BANK1 ] PTR unsigned char 
  1575 ;;		 -> main@msgbuffer(11), 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  retval          1   11[BANK1 ] char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  2    3[BANK1 ] int 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1587 ;;      Params:         0       0       8       0       0
  1588 ;;      Locals:         0       0       1       0       0
  1589 ;;      Temps:          0       1       0       0       0
  1590 ;;      Totals:         0       1       9       0       0
  1591 ;;Total ram usage:       10 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:   14
  1594 ;; This function calls:
  1595 ;;		_FromMainHigh_sendmsg
  1596 ;;		___lwmod
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text4
  1603  00145C                     __ptext4:
  1604                           	opt stack 0
  1605  00145C                     _timer1_lthread:
  1606                           	opt stack 15
  1607                           
  1608                           ;timer1_thread.c: 15: signed char retval;
  1609                           ;timer1_thread.c: 17: tptr->msgcount++;
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;incstack = 0
  1613  00145C  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1614  001460  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1615  001464  2ADE               	incf	postinc2,f,c
  1616  001466  0E00               	movlw	0
  1617  001468  22DD               	addwfc	postdec2,f,c
  1618                           
  1619                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1620  00146A  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1621  00146E  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1622  001472  0100               	movlb	0	; () banked
  1623  001474  CFDE F0CF          	movff	postinc2,___lwmod@dividend
  1624  001478  0100               	movlb	0	; () banked
  1625  00147A  CFDD F0D0          	movff	postdec2,___lwmod@dividend+1
  1626  00147E  0E00               	movlw	0
  1627  001480  0100               	movlb	0	; () banked
  1628  001482  0100               	movlb	0	; () banked
  1629  001484  6FD2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1630  001486  0E0A               	movlw	10
  1631  001488  0100               	movlb	0	; () banked
  1632  00148A  6FD1               	movwf	___lwmod@divisor& (0+255),b
  1633  00148C  EC2C  F009         	call	___lwmod	;wreg free
  1634  001490  0100               	movlb	0	; () banked
  1635  001492  0100               	movlb	0	; () banked
  1636  001494  51CF               	movf	?___lwmod& (0+255),w,b
  1637  001496  0A09               	xorlw	9
  1638  001498  0100               	movlb	0	; () banked
  1639  00149A  11D0               	iorwf	(?___lwmod+1)& (0+255),w,b
  1640  00149C  A4D8               	btfss	status,2,c
  1641  00149E  0012               	return	
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1645  0014A0  0100               	movlb	0	; () banked
  1646  0014A2  6FE6               	movwf	??_timer1_lthread& (0+255),b
  1647  0014A4  0E14               	movlw	20
  1648  0014A6  0101               	movlb	1	; () banked
  1649  0014A8  0101               	movlb	1	; () banked
  1650  0014AA  6FA2               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1651  0014AC  0100               	movlb	0	; () banked
  1652  0014AE  51E6               	movf	??_timer1_lthread& (0+255),w,b
  1653  0014B0  0101               	movlb	1	; () banked
  1654  0014B2  0101               	movlb	1	; () banked
  1655  0014B4  C1A6  F1A4         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1656  0014B8  0101               	movlb	1	; () banked
  1657  0014BA  0101               	movlb	1	; () banked
  1658  0014BC  C1A5  F1A3         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1659  0014C0  0E02               	movlw	2
  1660  0014C2  EC8B  F00C         	call	_FromMainHigh_sendmsg
  1661  0014C6  0101               	movlb	1	; () banked
  1662  0014C8  0101               	movlb	1	; () banked
  1663  0014CA  6FAD               	movwf	timer1_lthread@retval& (0+255),b
  1664  0014CC  0012               	return	
  1665  0014CE                     __end_of_timer1_lthread:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           prodh	equ	0xFF4
  1672                           prodl	equ	0xFF3
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           indf2	equ	0xFDF
  1676                           postinc2	equ	0xFDE
  1677                           postdec2	equ	0xFDD
  1678                           fsr2h	equ	0xFDA
  1679                           fsr2l	equ	0xFD9
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function ___lwmod *****************
  1683 ;; Defined at:
  1684 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  dividend        2   25[BANK0 ] unsigned int 
  1687 ;;  divisor         2   27[BANK0 ] unsigned int 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  counter         1   30[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   25[BANK0 ] unsigned int 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1699 ;;      Params:         0       4       0       0       0
  1700 ;;      Locals:         0       1       0       0       0
  1701 ;;      Temps:          0       1       0       0       0
  1702 ;;      Totals:         0       6       0       0       0
  1703 ;;Total ram usage:        6 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:   11
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_timer1_lthread
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text5
  1714  001258                     __ptext5:
  1715                           	opt stack 0
  1716  001258                     ___lwmod:
  1717                           	opt stack 17
  1718                           
  1719                           ;incstack = 0
  1720  001258  0100               	movlb	0	; () banked
  1721  00125A  0100               	movlb	0	; () banked
  1722  00125C  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1723  00125E  11D1               	iorwf	___lwmod@divisor& (0+255),w,b
  1724  001260  B4D8               	btfsc	status,2,c
  1725  001262  D03A               	goto	l1098
  1726                           
  1727                           ; BSR set to: 0
  1728  001264  0100               	movlb	0	; () banked
  1729  001266  6FD3               	movwf	??___lwmod& (0+255),b
  1730  001268  0E01               	movlw	1
  1731  00126A  0100               	movlb	0	; () banked
  1732  00126C  0100               	movlb	0	; () banked
  1733  00126E  6FD4               	movwf	___lwmod@counter& (0+255),b
  1734  001270  0100               	movlb	0	; () banked
  1735  001272  51D3               	movf	??___lwmod& (0+255),w,b
  1736  001274  D009               	goto	l3714
  1737  001276                     l3712:
  1738                           
  1739                           ; BSR set to: 0
  1740  001276  0100               	movlb	0	; () banked
  1741  001278  0100               	movlb	0	; () banked
  1742  00127A  0100               	movlb	0	; () banked
  1743  00127C  90D8               	bcf	status,0,c
  1744  00127E  37D1               	rlcf	___lwmod@divisor& (0+255),f,b
  1745  001280  37D2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1746  001282  0100               	movlb	0	; () banked
  1747  001284  0100               	movlb	0	; () banked
  1748  001286  2BD4               	incf	___lwmod@counter& (0+255),f,b
  1749  001288                     l3714:
  1750                           
  1751                           ; BSR set to: 0
  1752  001288  0100               	movlb	0	; () banked
  1753  00128A  0100               	movlb	0	; () banked
  1754  00128C  AFD2               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1755  00128E  D7F3               	goto	l3712
  1756  001290                     l3716:
  1757                           
  1758                           ; BSR set to: 0
  1759  001290  0100               	movlb	0	; () banked
  1760  001292  0100               	movlb	0	; () banked
  1761  001294  51D1               	movf	___lwmod@divisor& (0+255),w,b
  1762  001296  0100               	movlb	0	; () banked
  1763  001298  0100               	movlb	0	; () banked
  1764  00129A  5DCF               	subwf	___lwmod@dividend& (0+255),w,b
  1765  00129C  0100               	movlb	0	; () banked
  1766  00129E  0100               	movlb	0	; () banked
  1767  0012A0  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1768  0012A2  0100               	movlb	0	; () banked
  1769  0012A4  0100               	movlb	0	; () banked
  1770  0012A6  59D0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1771  0012A8  A0D8               	btfss	status,0,c
  1772  0012AA  D00C               	goto	l3720
  1773                           
  1774                           ; BSR set to: 0
  1775  0012AC  0100               	movlb	0	; () banked
  1776  0012AE  0100               	movlb	0	; () banked
  1777  0012B0  51D1               	movf	___lwmod@divisor& (0+255),w,b
  1778  0012B2  0100               	movlb	0	; () banked
  1779  0012B4  0100               	movlb	0	; () banked
  1780  0012B6  5FCF               	subwf	___lwmod@dividend& (0+255),f,b
  1781  0012B8  0100               	movlb	0	; () banked
  1782  0012BA  0100               	movlb	0	; () banked
  1783  0012BC  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1784  0012BE  0100               	movlb	0	; () banked
  1785  0012C0  0100               	movlb	0	; () banked
  1786  0012C2  5BD0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1787  0012C4                     l3720:
  1788                           
  1789                           ; BSR set to: 0
  1790  0012C4  0100               	movlb	0	; () banked
  1791  0012C6  0100               	movlb	0	; () banked
  1792  0012C8  0100               	movlb	0	; () banked
  1793  0012CA  90D8               	bcf	status,0,c
  1794  0012CC  33D2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1795  0012CE  33D1               	rrcf	___lwmod@divisor& (0+255),f,b
  1796                           
  1797                           ; BSR set to: 0
  1798  0012D0  0100               	movlb	0	; () banked
  1799  0012D2  0100               	movlb	0	; () banked
  1800  0012D4  2FD4               	decfsz	___lwmod@counter& (0+255),f,b
  1801  0012D6  D7DC               	goto	l3716
  1802  0012D8                     l1098:
  1803                           
  1804                           ; BSR set to: 0
  1805  0012D8  C0CF  F0CF         	movff	___lwmod@dividend,?___lwmod
  1806  0012DC  C0D0  F0D0         	movff	___lwmod@dividend+1,?___lwmod+1
  1807                           
  1808                           ; BSR set to: 0
  1809  0012E0  0012               	return	
  1810  0012E2                     __end_of___lwmod:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _FromMainHigh_sendmsg *****************
  1828 ;; Defined at:
  1829 ;;		line 174 in file "../src/messages.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  length          1    wreg     unsigned char 
  1832 ;;  msgtype         1    0[BANK1 ] unsigned char 
  1833 ;;  data            2    1[BANK1 ] PTR void 
  1834 ;;		 -> main@t1thread_data(2), 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  length          1   47[BANK0 ] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      char 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1846 ;;      Params:         0       0       3       0       0
  1847 ;;      Locals:         0       1       0       0       0
  1848 ;;      Temps:          0       0       0       0       0
  1849 ;;      Totals:         0       1       3       0       0
  1850 ;;Total ram usage:        4 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:   13
  1853 ;; This function calls:
  1854 ;;		_send_msg
  1855 ;; This function is called by:
  1856 ;;		_timer1_lthread
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text6
  1861  001916                     __ptext6:
  1862                           	opt stack 0
  1863  001916                     _FromMainHigh_sendmsg:
  1864                           	opt stack 15
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;incstack = 0
  1868                           ;FromMainHigh_sendmsg@length stored from wreg
  1869  001916  CFE8 F0E5          	movff	wreg,FromMainHigh_sendmsg@length
  1870                           
  1871                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1872  00191A  0101               	movlb	1	; () banked
  1873  00191C  0E01               	movlw	high _FromMainHigh_MQ
  1874  00191E  0100               	movlb	0	; () banked
  1875  001920  0100               	movlb	0	; () banked
  1876  001922  6FDA               	movwf	(send_msg@qptr+1)& (0+255),b
  1877  001924  0101               	movlb	1	; () banked
  1878  001926  0E00               	movlw	low _FromMainHigh_MQ
  1879  001928  0100               	movlb	0	; () banked
  1880  00192A  0100               	movlb	0	; () banked
  1881  00192C  6FD9               	movwf	send_msg@qptr& (0+255),b
  1882  00192E  C0E5  F0DB         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1883  001932  C1A2  F0DC         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1884  001936  0101               	movlb	1	; () banked
  1885  001938  0100               	movlb	0	; () banked
  1886  00193A  C1A4  F0DE         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1887  00193E  0101               	movlb	1	; () banked
  1888  001940  0100               	movlb	0	; () banked
  1889  001942  C1A3  F0DD         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1890  001946  ECD0  F006         	call	_send_msg	;wreg free
  1891  00194A  0012               	return	
  1892  00194C                     __end_of_FromMainHigh_sendmsg:
  1893                           	opt stack 0
  1894                           tblptru	equ	0xFF8
  1895                           tblptrh	equ	0xFF7
  1896                           tblptrl	equ	0xFF6
  1897                           tablat	equ	0xFF5
  1898                           prodh	equ	0xFF4
  1899                           prodl	equ	0xFF3
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           indf2	equ	0xFDF
  1903                           postinc2	equ	0xFDE
  1904                           postdec2	equ	0xFDD
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _send_msg *****************
  1910 ;; Defined at:
  1911 ;;		line 24 in file "../src/messages.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  qptr            2   35[BANK0 ] PTR struct __msg_queue
  1914 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1915 ;;  length          1   37[BANK0 ] unsigned char 
  1916 ;;  msgtype         1   38[BANK0 ] unsigned char 
  1917 ;;  data            2   39[BANK0 ] PTR void 
  1918 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(53), 
  1919 ;;		 -> main@uc(5), 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  1922 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1923 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1924 ;;  tlength         2   42[BANK0 ] unsigned int 
  1925 ;;  slot            1   44[BANK0 ] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      char 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1935 ;;      Params:         0       6       0       0       0
  1936 ;;      Locals:         0       5       0       0       0
  1937 ;;      Temps:          0       1       0       0       0
  1938 ;;      Totals:         0      12       0       0       0
  1939 ;;Total ram usage:       12 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:   12
  1942 ;; This function calls:
  1943 ;;		_memcpy
  1944 ;; This function is called by:
  1945 ;;		_FromMainHigh_sendmsg
  1946 ;;		_FromMainLow_sendmsg
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text7
  1951  000DA0                     __ptext7:
  1952                           	opt stack 0
  1953  000DA0                     _send_msg:
  1954                           	opt stack 15
  1955                           
  1956                           ;messages.c: 25: unsigned char slot;
  1957                           ;messages.c: 27: msg *qmsg;
  1958                           ;messages.c: 28: size_t tlength = length;
  1959                           
  1960                           ;incstack = 0
  1961  000DA0  0100               	movlb	0	; () banked
  1962  000DA2  0100               	movlb	0	; () banked
  1963  000DA4  C0DB  F0E0         	movff	send_msg@length,send_msg@tlength
  1964  000DA8  0100               	movlb	0	; () banked
  1965  000DAA  0100               	movlb	0	; () banked
  1966  000DAC  6BE1               	clrf	(send_msg@tlength+1)& (0+255),b
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1970  000DAE  0100               	movlb	0	; () banked
  1971  000DB0  EE20 F034          	lfsr	2,52
  1972  000DB4  0100               	movlb	0	; () banked
  1973  000DB6  51D9               	movf	send_msg@qptr& (0+255),w,b
  1974  000DB8  26D9               	addwf	fsr2l,f,c
  1975  000DBA  0100               	movlb	0	; () banked
  1976  000DBC  51DA               	movf	(send_msg@qptr+1)& (0+255),w,b
  1977  000DBE  22DA               	addwfc	fsr2h,f,c
  1978  000DC0  50DF               	movf	indf2,w,c
  1979  000DC2  0100               	movlb	0	; () banked
  1980  000DC4  0100               	movlb	0	; () banked
  1981  000DC6  6FE2               	movwf	send_msg@slot& (0+255),b
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1985  000DC8  0100               	movlb	0	; () banked
  1986  000DCA  0100               	movlb	0	; () banked
  1987  000DCC  51E2               	movf	send_msg@slot& (0+255),w,b
  1988  000DCE  0D0D               	mullw	13
  1989  000DD0  50F3               	movf	prodl,w,c
  1990  000DD2  0100               	movlb	0	; () banked
  1991  000DD4  0100               	movlb	0	; () banked
  1992  000DD6  25D9               	addwf	send_msg@qptr& (0+255),w,b
  1993  000DD8  0100               	movlb	0	; () banked
  1994  000DDA  0100               	movlb	0	; () banked
  1995  000DDC  6FE3               	movwf	send_msg@qmsg& (0+255),b
  1996  000DDE  50F4               	movf	prodh,w,c
  1997  000DE0  0100               	movlb	0	; () banked
  1998  000DE2  0100               	movlb	0	; () banked
  1999  000DE4  21DA               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2000  000DE6  0100               	movlb	0	; () banked
  2001  000DE8  6FE4               	movwf	(send_msg@qmsg+1)& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;messages.c: 41: if (qmsg->full != 0) {
  2005  000DEA  C0E3  FFD9         	movff	send_msg@qmsg,fsr2l
  2006  000DEE  C0E4  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2007  000DF2  50DF               	movf	indf2,w,c
  2008  000DF4  B4D8               	btfsc	status,2,c
  2009  000DF6  D002               	goto	l3386
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;messages.c: 42: return (-1);
  2013  000DF8  0EFF               	movlw	255
  2014  000DFA  0012               	return	
  2015  000DFC                     l3386:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;messages.c: 43: }
  2019                           ;messages.c: 46: qmsg->length = length;
  2020  000DFC  0100               	movlb	0	; () banked
  2021  000DFE  EE20 F001          	lfsr	2,1
  2022  000E02  0100               	movlb	0	; () banked
  2023  000E04  51E3               	movf	send_msg@qmsg& (0+255),w,b
  2024  000E06  26D9               	addwf	fsr2l,f,c
  2025  000E08  0100               	movlb	0	; () banked
  2026  000E0A  51E4               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2027  000E0C  22DA               	addwfc	fsr2h,f,c
  2028  000E0E  0100               	movlb	0	; () banked
  2029  000E10  C0DB  FFDF         	movff	send_msg@length,indf2
  2030                           
  2031                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2032  000E14  0100               	movlb	0	; () banked
  2033  000E16  EE20 F002          	lfsr	2,2
  2034  000E1A  0100               	movlb	0	; () banked
  2035  000E1C  51E3               	movf	send_msg@qmsg& (0+255),w,b
  2036  000E1E  26D9               	addwf	fsr2l,f,c
  2037  000E20  0100               	movlb	0	; () banked
  2038  000E22  51E4               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2039  000E24  22DA               	addwfc	fsr2h,f,c
  2040  000E26  0100               	movlb	0	; () banked
  2041  000E28  C0DC  FFDF         	movff	send_msg@msgtype,indf2
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2045  000E2C  0E03               	movlw	3
  2046  000E2E  0100               	movlb	0	; () banked
  2047  000E30  0100               	movlb	0	; () banked
  2048  000E32  25E3               	addwf	send_msg@qmsg& (0+255),w,b
  2049  000E34  0100               	movlb	0	; () banked
  2050  000E36  0100               	movlb	0	; () banked
  2051  000E38  6FCF               	movwf	memcpy@d1& (0+255),b
  2052  000E3A  0E00               	movlw	0
  2053  000E3C  0100               	movlb	0	; () banked
  2054  000E3E  0100               	movlb	0	; () banked
  2055  000E40  21E4               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2056  000E42  0100               	movlb	0	; () banked
  2057  000E44  6FD0               	movwf	(memcpy@d1+1)& (0+255),b
  2058  000E46  0100               	movlb	0	; () banked
  2059  000E48  0100               	movlb	0	; () banked
  2060  000E4A  C0DE  F0D2         	movff	send_msg@data+1,memcpy@s1+1
  2061  000E4E  0100               	movlb	0	; () banked
  2062  000E50  0100               	movlb	0	; () banked
  2063  000E52  C0DD  F0D1         	movff	send_msg@data,memcpy@s1
  2064  000E56  C0E0  F0D3         	movff	send_msg@tlength,memcpy@n
  2065  000E5A  C0E1  F0D4         	movff	send_msg@tlength+1,memcpy@n+1
  2066  000E5E  ECD0  F00A         	call	_memcpy	;wreg free
  2067                           
  2068                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2069  000E62  0100               	movlb	0	; () banked
  2070  000E64  EE20 F034          	lfsr	2,52
  2071  000E68  0100               	movlb	0	; () banked
  2072  000E6A  51D9               	movf	send_msg@qptr& (0+255),w,b
  2073  000E6C  26D9               	addwf	fsr2l,f,c
  2074  000E6E  0100               	movlb	0	; () banked
  2075  000E70  51DA               	movf	(send_msg@qptr+1)& (0+255),w,b
  2076  000E72  22DA               	addwfc	fsr2h,f,c
  2077  000E74  0100               	movlb	0	; () banked
  2078  000E76  EE10 F034          	lfsr	1,52
  2079  000E7A  0100               	movlb	0	; () banked
  2080  000E7C  51D9               	movf	send_msg@qptr& (0+255),w,b
  2081  000E7E  26E1               	addwf	fsr1l,f,c
  2082  000E80  0100               	movlb	0	; () banked
  2083  000E82  51DA               	movf	(send_msg@qptr+1)& (0+255),w,b
  2084  000E84  22E2               	addwfc	fsr1h,f,c
  2085  000E86  50E7               	movf	indf1,w,c
  2086  000E88  0100               	movlb	0	; () banked
  2087  000E8A  6FDF               	movwf	??_send_msg& (0+255),b
  2088  000E8C  0100               	movlb	0	; () banked
  2089  000E8E  29DF               	incf	??_send_msg& (0+255),w,b
  2090  000E90  0B03               	andlw	3
  2091  000E92  6EDF               	movwf	indf2,c
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;messages.c: 59: qmsg->full = 1;
  2095  000E94  C0E3  FFD9         	movff	send_msg@qmsg,fsr2l
  2096  000E98  C0E4  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2097  000E9C  0E01               	movlw	1
  2098  000E9E  6EDF               	movwf	indf2,c
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;messages.c: 60: return (1);
  2102  000EA0  0E01               	movlw	1
  2103  000EA2  0012               	return	
  2104  000EA4                     __end_of_send_msg:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           postinc0	equ	0xFEE
  2113                           wreg	equ	0xFE8
  2114                           indf1	equ	0xFE7
  2115                           fsr1h	equ	0xFE2
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           postinc2	equ	0xFDE
  2119                           postdec2	equ	0xFDD
  2120                           fsr2h	equ	0xFDA
  2121                           fsr2l	equ	0xFD9
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _timer0_lthread *****************
  2125 ;; Defined at:
  2126 ;;		line 9 in file "../src/timer0_thread.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  tptr            2   25[BANK0 ] PTR struct __timer0_thre
  2129 ;;		 -> main@t0thread_data(2), 
  2130 ;;  msgtype         2   27[BANK0 ] int 
  2131 ;;  length          2   29[BANK0 ] int 
  2132 ;;  msgbuffer       2   31[BANK0 ] PTR unsigned char 
  2133 ;;		 -> main@msgbuffer(11), 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2136 ;;		 -> main@msgbuffer(11), 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  2   25[BANK0 ] int 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2146 ;;      Params:         0       8       0       0       0
  2147 ;;      Locals:         0       2       0       0       0
  2148 ;;      Temps:          0       0       0       0       0
  2149 ;;      Totals:         0      10       0       0       0
  2150 ;;Total ram usage:       10 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:   11
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text8
  2161  001B4E                     __ptext8:
  2162                           	opt stack 0
  2163  001B4E                     _timer0_lthread:
  2164                           	opt stack 18
  2165                           
  2166                           ;timer0_thread.c: 10: unsigned int *msgval;
  2167                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;incstack = 0
  2171  001B4E  0100               	movlb	0	; () banked
  2172  001B50  0100               	movlb	0	; () banked
  2173  001B52  C0D6  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2174  001B56  0100               	movlb	0	; () banked
  2175  001B58  0100               	movlb	0	; () banked
  2176  001B5A  C0D5  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2177                           
  2178                           ; BSR set to: 0
  2179  001B5E  0012               	return	
  2180  001B60                     __end_of_timer0_lthread:
  2181                           	opt stack 0
  2182                           tblptru	equ	0xFF8
  2183                           tblptrh	equ	0xFF7
  2184                           tblptrl	equ	0xFF6
  2185                           tablat	equ	0xFF5
  2186                           prodh	equ	0xFF4
  2187                           prodl	equ	0xFF3
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           indf1	equ	0xFE7
  2191                           fsr1h	equ	0xFE2
  2192                           fsr1l	equ	0xFE1
  2193                           indf2	equ	0xFDF
  2194                           postinc2	equ	0xFDE
  2195                           postdec2	equ	0xFDD
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _init_uart_recv *****************
  2201 ;; Defined at:
  2202 ;;		line 49 in file "../src/my_uart.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  uc              2   25[BANK0 ] PTR struct __uart_comm
  2205 ;;		 -> main@uc(5), 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2217 ;;      Params:         0       2       0       0       0
  2218 ;;      Locals:         0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0
  2220 ;;      Totals:         0       2       0       0       0
  2221 ;;Total ram usage:        2 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:   11
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text9
  2232  001AB0                     __ptext9:
  2233                           	opt stack 0
  2234  001AB0                     _init_uart_recv:
  2235                           	opt stack 18
  2236                           
  2237                           ;my_uart.c: 50: uc_ptr = uc;
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;incstack = 0
  2241  001AB0  0100               	movlb	0	; () banked
  2242  001AB2  C0D0  F051         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2243  001AB6  0100               	movlb	0	; () banked
  2244  001AB8  C0CF  F050         	movff	init_uart_recv@uc,_uc_ptr
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2248  001ABC  EE20 F004          	lfsr	2,4
  2249  001AC0  5050               	movf	_uc_ptr,w,c
  2250  001AC2  26D9               	addwf	fsr2l,f,c
  2251  001AC4  5051               	movf	_uc_ptr+1,w,c
  2252  001AC6  22DA               	addwfc	fsr2h,f,c
  2253  001AC8  0E00               	movlw	0
  2254  001ACA  6EDF               	movwf	indf2,c
  2255                           
  2256                           ; BSR set to: 0
  2257  001ACC  0012               	return	
  2258  001ACE                     __end_of_init_uart_recv:
  2259                           	opt stack 0
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           indf1	equ	0xFE7
  2269                           fsr1h	equ	0xFE2
  2270                           fsr1l	equ	0xFE1
  2271                           indf2	equ	0xFDF
  2272                           postinc2	equ	0xFDE
  2273                           postdec2	equ	0xFDD
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _init_timer1_lthread *****************
  2279 ;; Defined at:
  2280 ;;		line 6 in file "../src/timer1_thread.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  tptr            2   25[BANK0 ] PTR struct __timer1_thre
  2283 ;;		 -> main@t1thread_data(2), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;		None               void
  2288 ;; Registers used:
  2289 ;;		wreg, fsr2l, fsr2h
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2295 ;;      Params:         0       2       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       2       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:   11
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text10
  2310  001B60                     __ptext10:
  2311                           	opt stack 0
  2312  001B60                     _init_timer1_lthread:
  2313                           	opt stack 18
  2314                           
  2315                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;incstack = 0
  2319  001B60  C0CF  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2320  001B64  C0D0  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2321  001B68  0E00               	movlw	0
  2322  001B6A  6EDE               	movwf	postinc2,c
  2323  001B6C  0E00               	movlw	0
  2324  001B6E  6EDD               	movwf	postdec2,c
  2325  001B70  0012               	return	
  2326  001B72                     __end_of_init_timer1_lthread:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           prodh	equ	0xFF4
  2333                           prodl	equ	0xFF3
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           indf1	equ	0xFE7
  2337                           fsr1h	equ	0xFE2
  2338                           fsr1l	equ	0xFE1
  2339                           indf2	equ	0xFDF
  2340                           postinc2	equ	0xFDE
  2341                           postdec2	equ	0xFDD
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _init_queues *****************
  2347 ;; Defined at:
  2348 ;;		line 194 in file "../src/messages.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       1       0       0       0
  2365 ;;      Totals:         0       1       0       0       0
  2366 ;;Total ram usage:        1 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:   12
  2369 ;; This function calls:
  2370 ;;		_init_queue
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text11
  2377  0014CE                     __ptext11:
  2378                           	opt stack 0
  2379  0014CE                     _init_queues:
  2380                           	opt stack 17
  2381                           
  2382                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2383                           
  2384                           ;incstack = 0
  2385  0014CE  0100               	movlb	0	; () banked
  2386  0014D0  6FD3               	movwf	??_init_queues& (0+255),b
  2387  0014D2  0E00               	movlw	0
  2388  0014D4  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2389  0014D6  0100               	movlb	0	; () banked
  2390  0014D8  51D3               	movf	??_init_queues& (0+255),w,b
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2394  0014DA  0100               	movlb	0	; () banked
  2395  0014DC  0E00               	movlw	high _ToMainLow_MQ
  2396  0014DE  0100               	movlb	0	; () banked
  2397  0014E0  0100               	movlb	0	; () banked
  2398  0014E2  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2399  0014E4  0100               	movlb	0	; () banked
  2400  0014E6  0E80               	movlw	low _ToMainLow_MQ
  2401  0014E8  0100               	movlb	0	; () banked
  2402  0014EA  0100               	movlb	0	; () banked
  2403  0014EC  6FCF               	movwf	init_queue@qptr& (0+255),b
  2404  0014EE  ECF1  F009         	call	_init_queue	;wreg free
  2405                           
  2406                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2407  0014F2  0101               	movlb	1	; () banked
  2408  0014F4  0E01               	movlw	high _ToMainHigh_MQ
  2409  0014F6  0100               	movlb	0	; () banked
  2410  0014F8  0100               	movlb	0	; () banked
  2411  0014FA  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2412  0014FC  0101               	movlb	1	; () banked
  2413  0014FE  0E6C               	movlw	low _ToMainHigh_MQ
  2414  001500  0100               	movlb	0	; () banked
  2415  001502  0100               	movlb	0	; () banked
  2416  001504  6FCF               	movwf	init_queue@qptr& (0+255),b
  2417  001506  ECF1  F009         	call	_init_queue	;wreg free
  2418                           
  2419                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2420  00150A  0101               	movlb	1	; () banked
  2421  00150C  0E01               	movlw	high _FromMainLow_MQ
  2422  00150E  0100               	movlb	0	; () banked
  2423  001510  0100               	movlb	0	; () banked
  2424  001512  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2425  001514  0101               	movlb	1	; () banked
  2426  001516  0E36               	movlw	low _FromMainLow_MQ
  2427  001518  0100               	movlb	0	; () banked
  2428  00151A  0100               	movlb	0	; () banked
  2429  00151C  6FCF               	movwf	init_queue@qptr& (0+255),b
  2430  00151E  ECF1  F009         	call	_init_queue	;wreg free
  2431                           
  2432                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2433  001522  0101               	movlb	1	; () banked
  2434  001524  0E01               	movlw	high _FromMainHigh_MQ
  2435  001526  0100               	movlb	0	; () banked
  2436  001528  0100               	movlb	0	; () banked
  2437  00152A  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2438  00152C  0101               	movlb	1	; () banked
  2439  00152E  0E00               	movlw	low _FromMainHigh_MQ
  2440  001530  0100               	movlb	0	; () banked
  2441  001532  0100               	movlb	0	; () banked
  2442  001534  6FCF               	movwf	init_queue@qptr& (0+255),b
  2443  001536  ECF1  F009         	call	_init_queue	;wreg free
  2444  00153A  0012               	return	
  2445  00153C                     __end_of_init_queues:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           indf1	equ	0xFE7
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _init_queue *****************
  2466 ;; Defined at:
  2467 ;;		line 14 in file "../src/messages.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  qptr            2   25[BANK0 ] PTR struct __msg_queue
  2470 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  i               1   28[BANK0 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;		None               void
  2475 ;; Registers used:
  2476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2482 ;;      Params:         0       2       0       0       0
  2483 ;;      Locals:         0       1       0       0       0
  2484 ;;      Temps:          0       1       0       0       0
  2485 ;;      Totals:         0       4       0       0       0
  2486 ;;Total ram usage:        4 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:   11
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_init_queues
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text12
  2497  0013E2                     __ptext12:
  2498                           	opt stack 0
  2499  0013E2                     _init_queue:
  2500                           	opt stack 17
  2501                           
  2502                           ;messages.c: 15: unsigned char i;
  2503                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2504                           
  2505                           ;incstack = 0
  2506  0013E2  0100               	movlb	0	; () banked
  2507  0013E4  EE20 F034          	lfsr	2,52
  2508  0013E8  0100               	movlb	0	; () banked
  2509  0013EA  51CF               	movf	init_queue@qptr& (0+255),w,b
  2510  0013EC  26D9               	addwf	fsr2l,f,c
  2511  0013EE  0100               	movlb	0	; () banked
  2512  0013F0  51D0               	movf	(init_queue@qptr+1)& (0+255),w,b
  2513  0013F2  22DA               	addwfc	fsr2h,f,c
  2514  0013F4  0E00               	movlw	0
  2515  0013F6  6EDF               	movwf	indf2,c
  2516                           
  2517                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2518  0013F8  0100               	movlb	0	; () banked
  2519  0013FA  EE20 F035          	lfsr	2,53
  2520  0013FE  0100               	movlb	0	; () banked
  2521  001400  51CF               	movf	init_queue@qptr& (0+255),w,b
  2522  001402  26D9               	addwf	fsr2l,f,c
  2523  001404  0100               	movlb	0	; () banked
  2524  001406  51D0               	movf	(init_queue@qptr+1)& (0+255),w,b
  2525  001408  22DA               	addwfc	fsr2h,f,c
  2526  00140A  0E00               	movlw	0
  2527  00140C  6EDF               	movwf	indf2,c
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2531  00140E  0100               	movlb	0	; () banked
  2532  001410  6FD1               	movwf	??_init_queue& (0+255),b
  2533  001412  0E00               	movlw	0
  2534  001414  0100               	movlb	0	; () banked
  2535  001416  0100               	movlb	0	; () banked
  2536  001418  6FD2               	movwf	init_queue@i& (0+255),b
  2537  00141A  0100               	movlb	0	; () banked
  2538  00141C  51D1               	movf	??_init_queue& (0+255),w,b
  2539                           
  2540                           ; BSR set to: 0
  2541  00141E  0E03               	movlw	3
  2542  001420  0100               	movlb	0	; () banked
  2543  001422  0100               	movlb	0	; () banked
  2544  001424  65D2               	cpfsgt	init_queue@i& (0+255),b
  2545  001426  D001               	goto	l2636
  2546  001428  0012               	return	
  2547  00142A                     l2636:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;messages.c: 20: qptr->queue[i].full = 0;
  2551  00142A  0100               	movlb	0	; () banked
  2552  00142C  0100               	movlb	0	; () banked
  2553  00142E  51D2               	movf	init_queue@i& (0+255),w,b
  2554  001430  0D0D               	mullw	13
  2555  001432  50F3               	movf	prodl,w,c
  2556  001434  0100               	movlb	0	; () banked
  2557  001436  0100               	movlb	0	; () banked
  2558  001438  25CF               	addwf	init_queue@qptr& (0+255),w,b
  2559  00143A  6ED9               	movwf	fsr2l,c
  2560  00143C  50F4               	movf	prodh,w,c
  2561  00143E  0100               	movlb	0	; () banked
  2562  001440  0100               	movlb	0	; () banked
  2563  001442  21D0               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2564  001444  6EDA               	movwf	fsr2h,c
  2565  001446  0E00               	movlw	0
  2566  001448  6EDF               	movwf	indf2,c
  2567                           
  2568                           ; BSR set to: 0
  2569  00144A  0100               	movlb	0	; () banked
  2570  00144C  0100               	movlb	0	; () banked
  2571  00144E  2BD2               	incf	init_queue@i& (0+255),f,b
  2572                           
  2573                           ; BSR set to: 0
  2574  001450  0E03               	movlw	3
  2575  001452  0100               	movlb	0	; () banked
  2576  001454  0100               	movlb	0	; () banked
  2577  001456  65D2               	cpfsgt	init_queue@i& (0+255),b
  2578  001458  D7E8               	goto	l2636
  2579  00145A  0012               	return	
  2580  00145C                     __end_of_init_queue:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           prodh	equ	0xFF4
  2587                           prodl	equ	0xFF3
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           indf1	equ	0xFE7
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           indf2	equ	0xFDF
  2594                           postinc2	equ	0xFDE
  2595                           postdec2	equ	0xFDD
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _init_i2c *****************
  2601 ;; Defined at:
  2602 ;;		line 382 in file "../src/my_i2c.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  ic              2   25[BANK0 ] PTR struct __i2c_comm
  2605 ;;		 -> main@ic(53), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2617 ;;      Params:         0       2       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         0       2       0       0       0
  2621 ;;Total ram usage:        2 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:   11
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text13
  2632  001094                     __ptext13:
  2633                           	opt stack 0
  2634  001094                     _init_i2c:
  2635                           	opt stack 18
  2636                           
  2637                           ;my_i2c.c: 383: ic_ptr = ic;
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;incstack = 0
  2641  001094  0100               	movlb	0	; () banked
  2642  001096  C0D0  F04F         	movff	init_i2c@ic+1,_ic_ptr+1
  2643  00109A  0100               	movlb	0	; () banked
  2644  00109C  C0CF  F04E         	movff	init_i2c@ic,_ic_ptr
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;my_i2c.c: 384: ic_ptr->buffer[0] = 0;
  2648  0010A0  C04E  FFD9         	movff	_ic_ptr,fsr2l
  2649  0010A4  C04F  FFDA         	movff	_ic_ptr+1,fsr2h
  2650  0010A8  0E00               	movlw	0
  2651  0010AA  6EDF               	movwf	indf2,c
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;my_i2c.c: 385: ic_ptr->buffer[1] = 0;
  2655  0010AC  EE20 F001          	lfsr	2,1
  2656  0010B0  504E               	movf	_ic_ptr,w,c
  2657  0010B2  26D9               	addwf	fsr2l,f,c
  2658  0010B4  504F               	movf	_ic_ptr+1,w,c
  2659  0010B6  22DA               	addwfc	fsr2h,f,c
  2660  0010B8  0E00               	movlw	0
  2661  0010BA  6EDF               	movwf	indf2,c
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;my_i2c.c: 386: ic_ptr->buffer[2] = 0;
  2665  0010BC  EE20 F002          	lfsr	2,2
  2666  0010C0  504E               	movf	_ic_ptr,w,c
  2667  0010C2  26D9               	addwf	fsr2l,f,c
  2668  0010C4  504F               	movf	_ic_ptr+1,w,c
  2669  0010C6  22DA               	addwfc	fsr2h,f,c
  2670  0010C8  0E00               	movlw	0
  2671  0010CA  6EDF               	movwf	indf2,c
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;my_i2c.c: 387: ic_ptr->buflen = 0;
  2675  0010CC  EE20 F00A          	lfsr	2,10
  2676  0010D0  504E               	movf	_ic_ptr,w,c
  2677  0010D2  26D9               	addwf	fsr2l,f,c
  2678  0010D4  504F               	movf	_ic_ptr+1,w,c
  2679  0010D6  22DA               	addwfc	fsr2h,f,c
  2680  0010D8  0E00               	movlw	0
  2681  0010DA  6EDF               	movwf	indf2,c
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;my_i2c.c: 388: ic_ptr->event_count = 0;
  2685  0010DC  EE20 F00C          	lfsr	2,12
  2686  0010E0  504E               	movf	_ic_ptr,w,c
  2687  0010E2  26D9               	addwf	fsr2l,f,c
  2688  0010E4  504F               	movf	_ic_ptr+1,w,c
  2689  0010E6  22DA               	addwfc	fsr2h,f,c
  2690  0010E8  0E00               	movlw	0
  2691  0010EA  6EDF               	movwf	indf2,c
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;my_i2c.c: 389: ic_ptr->status = 0x5;
  2695  0010EC  EE20 F00D          	lfsr	2,13
  2696  0010F0  504E               	movf	_ic_ptr,w,c
  2697  0010F2  26D9               	addwf	fsr2l,f,c
  2698  0010F4  504F               	movf	_ic_ptr+1,w,c
  2699  0010F6  22DA               	addwfc	fsr2h,f,c
  2700  0010F8  0E05               	movlw	5
  2701  0010FA  6EDF               	movwf	indf2,c
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;my_i2c.c: 390: ic_ptr->error_count = 0;
  2705  0010FC  EE20 F00F          	lfsr	2,15
  2706  001100  504E               	movf	_ic_ptr,w,c
  2707  001102  26D9               	addwf	fsr2l,f,c
  2708  001104  504F               	movf	_ic_ptr+1,w,c
  2709  001106  22DA               	addwfc	fsr2h,f,c
  2710  001108  0E00               	movlw	0
  2711  00110A  6EDF               	movwf	indf2,c
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;my_i2c.c: 391: ic_ptr->sendBufInd = 0;
  2715  00110C  EE20 F028          	lfsr	2,40
  2716  001110  504E               	movf	_ic_ptr,w,c
  2717  001112  26D9               	addwf	fsr2l,f,c
  2718  001114  504F               	movf	_ic_ptr+1,w,c
  2719  001116  22DA               	addwfc	fsr2h,f,c
  2720  001118  0E00               	movlw	0
  2721  00111A  6EDF               	movwf	indf2,c
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;my_i2c.c: 392: ic_ptr->sendBufLen = 0;
  2725  00111C  EE20 F027          	lfsr	2,39
  2726  001120  504E               	movf	_ic_ptr,w,c
  2727  001122  26D9               	addwf	fsr2l,f,c
  2728  001124  504F               	movf	_ic_ptr+1,w,c
  2729  001126  22DA               	addwfc	fsr2h,f,c
  2730  001128  0E00               	movlw	0
  2731  00112A  6EDF               	movwf	indf2,c
  2732                           
  2733                           ; BSR set to: 0
  2734  00112C  0012               	return	
  2735  00112E                     __end_of_init_i2c:
  2736                           	opt stack 0
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           prodh	equ	0xFF4
  2742                           prodl	equ	0xFF3
  2743                           postinc0	equ	0xFEE
  2744                           wreg	equ	0xFE8
  2745                           indf1	equ	0xFE7
  2746                           fsr1h	equ	0xFE2
  2747                           fsr1l	equ	0xFE1
  2748                           indf2	equ	0xFDF
  2749                           postinc2	equ	0xFDE
  2750                           postdec2	equ	0xFDD
  2751                           fsr2h	equ	0xFDA
  2752                           fsr2l	equ	0xFD9
  2753                           status	equ	0xFD8
  2754                           
  2755 ;; *************** function _i2c_configure_slave *****************
  2756 ;; Defined at:
  2757 ;;		line 398 in file "../src/my_i2c.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  addr            1    wreg     unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  addr            1   26[BANK0 ] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;		None               void
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2771 ;;      Params:         0       0       0       0       0
  2772 ;;      Locals:         0       1       0       0       0
  2773 ;;      Temps:          0       1       0       0       0
  2774 ;;      Totals:         0       2       0       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:   11
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text14
  2786  001982                     __ptext14:
  2787                           	opt stack 0
  2788  001982                     _i2c_configure_slave:
  2789                           	opt stack 18
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;incstack = 0
  2793                           ;i2c_configure_slave@addr stored from wreg
  2794  001982  CFE8 F0D0          	movff	wreg,i2c_configure_slave@addr
  2795                           
  2796                           ;my_i2c.c: 410: TRISCbits.TRISC3 = 1;
  2797  001986  8694               	bsf	3988,3,c	;volatile
  2798                           
  2799                           ;my_i2c.c: 411: TRISCbits.TRISC4 = 1;
  2800  001988  8894               	bsf	3988,4,c	;volatile
  2801                           
  2802                           ;my_i2c.c: 416: SSPADD = addr;
  2803  00198A  C0D0  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2804                           
  2805                           ;my_i2c.c: 418: SSPSTAT = 0x0;
  2806  00198E  0E00               	movlw	0
  2807  001990  6EC7               	movwf	4039,c	;volatile
  2808                           
  2809                           ;my_i2c.c: 419: SSPCON1 = 0x0;
  2810  001992  0E00               	movlw	0
  2811  001994  6EC6               	movwf	4038,c	;volatile
  2812                           
  2813                           ;my_i2c.c: 420: SSPCON2 = 0x0;
  2814  001996  0E00               	movlw	0
  2815  001998  6EC5               	movwf	4037,c	;volatile
  2816                           
  2817                           ;my_i2c.c: 421: SSPCON1 |= 0x0E;
  2818  00199A  0E0E               	movlw	14
  2819  00199C  12C6               	iorwf	4038,f,c	;volatile
  2820                           
  2821                           ;my_i2c.c: 422: SSPSTAT |= 0b10000000;
  2822  00199E  8EC7               	bsf	4039,7,c	;volatile
  2823                           
  2824                           ;my_i2c.c: 425: TRISCbits.TRISC3 = 1;
  2825  0019A0  8694               	bsf	3988,3,c	;volatile
  2826                           
  2827                           ;my_i2c.c: 426: TRISCbits.TRISC4 = 1;
  2828  0019A2  8894               	bsf	3988,4,c	;volatile
  2829                           
  2830                           ;my_i2c.c: 445: i2c_mode = 2;
  2831  0019A4  0100               	movlb	0	; () banked
  2832  0019A6  6FCF               	movwf	??_i2c_configure_slave& (0+255),b
  2833  0019A8  0E02               	movlw	2
  2834  0019AA  6E4D               	movwf	_i2c_mode,c
  2835  0019AC  0100               	movlb	0	; () banked
  2836  0019AE  51CF               	movf	??_i2c_configure_slave& (0+255),w,b
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;my_i2c.c: 447: SSPCON2bits.SEN = 1;
  2840  0019B0  80C5               	bsf	4037,0,c	;volatile
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;my_i2c.c: 448: SSPCON1 |= 0b00100000;
  2844  0019B2  8AC6               	bsf	4038,5,c	;volatile
  2845                           
  2846                           ; BSR set to: 0
  2847  0019B4  0012               	return	
  2848  0019B6                     __end_of_i2c_configure_slave:
  2849                           	opt stack 0
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           prodh	equ	0xFF4
  2855                           prodl	equ	0xFF3
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           indf1	equ	0xFE7
  2859                           fsr1h	equ	0xFE2
  2860                           fsr1l	equ	0xFE1
  2861                           indf2	equ	0xFDF
  2862                           postinc2	equ	0xFDE
  2863                           postdec2	equ	0xFDD
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _enable_interrupts *****************
  2869 ;; Defined at:
  2870 ;;		line 14 in file "../src/interrupts.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		None
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:   11
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text15
  2899  001BC6                     __ptext15:
  2900                           	opt stack 0
  2901  001BC6                     _enable_interrupts:
  2902                           	opt stack 18
  2903                           
  2904                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;incstack = 0
  2908  001BC6  8ED0               	bsf	4048,7,c	;volatile
  2909                           
  2910                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2911  001BC8  8EF2               	bsf	intcon,7,c	;volatile
  2912                           
  2913                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2914  001BCA  8CF2               	bsf	intcon,6,c	;volatile
  2915  001BCC  0012               	return	
  2916  001BCE                     __end_of_enable_interrupts:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           indf1	equ	0xFE7
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           indf2	equ	0xFDF
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _block_on_To_msgqueues *****************
  2938 ;; Defined at:
  2939 ;;		line 258 in file "../src/messages.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;		None               void
  2946 ;; Registers used:
  2947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0
  2955 ;;      Temps:          0       1       0       0       0
  2956 ;;      Totals:         0       1       0       0       0
  2957 ;;Total ram usage:        1 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:   14
  2960 ;; This function calls:
  2961 ;;		_Delay1KTCYx
  2962 ;;		_check_msg
  2963 ;;		_in_main
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text16
  2970  001364                     __ptext16:
  2971                           	opt stack 0
  2972  001364                     _block_on_To_msgqueues:
  2973                           	opt stack 15
  2974                           
  2975                           ;messages.c: 259: if (!in_main()) {
  2976                           
  2977                           ;incstack = 0
  2978  001364  EC6C  F00B         	call	_in_main	;wreg free
  2979  001368  0100               	movlb	0	; () banked
  2980  00136A  0100               	movlb	0	; () banked
  2981  00136C  51D4               	movf	(?_in_main+1)& (0+255),w,b
  2982  00136E  0100               	movlb	0	; () banked
  2983  001370  11D3               	iorwf	?_in_main& (0+255),w,b
  2984  001372  B4D8               	btfsc	status,2,c
  2985  001374  0012               	return	
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;messages.c: 261: }
  2989                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2990                           
  2991                           ; BSR set to: 0
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;messages.c: 260: return;
  2995  001376  0100               	movlb	0	; () banked
  2996  001378  6FD5               	movwf	??_block_on_To_msgqueues& (0+255),b
  2997  00137A  0E01               	movlw	1
  2998  00137C  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2999  00137E  0100               	movlb	0	; () banked
  3000  001380  51D5               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3001  001382                     l2580:
  3002                           
  3003                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3004  001382  0101               	movlb	1	; () banked
  3005  001384  0E01               	movlw	high _ToMainHigh_MQ
  3006  001386  0100               	movlb	0	; () banked
  3007  001388  0100               	movlb	0	; () banked
  3008  00138A  6FD0               	movwf	(check_msg@qptr+1)& (0+255),b
  3009  00138C  0101               	movlb	1	; () banked
  3010  00138E  0E6C               	movlw	low _ToMainHigh_MQ
  3011  001390  0100               	movlb	0	; () banked
  3012  001392  0100               	movlb	0	; () banked
  3013  001394  6FCF               	movwf	check_msg@qptr& (0+255),b
  3014  001396  ECA6  F00C         	call	_check_msg	;wreg free
  3015  00139A  0900               	iorlw	0
  3016  00139C  B4D8               	btfsc	status,2,c
  3017  00139E  D007               	goto	l2586
  3018                           
  3019                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3020  0013A0  0100               	movlb	0	; () banked
  3021  0013A2  6FD5               	movwf	??_block_on_To_msgqueues& (0+255),b
  3022  0013A4  0E00               	movlw	0
  3023  0013A6  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3024  0013A8  0100               	movlb	0	; () banked
  3025  0013AA  51D5               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3026  0013AC  0012               	return	
  3027  0013AE                     l2586:
  3028                           
  3029                           ;messages.c: 271: }
  3030                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3031  0013AE  0100               	movlb	0	; () banked
  3032  0013B0  0E00               	movlw	high _ToMainLow_MQ
  3033  0013B2  0100               	movlb	0	; () banked
  3034  0013B4  0100               	movlb	0	; () banked
  3035  0013B6  6FD0               	movwf	(check_msg@qptr+1)& (0+255),b
  3036  0013B8  0100               	movlb	0	; () banked
  3037  0013BA  0E80               	movlw	low _ToMainLow_MQ
  3038  0013BC  0100               	movlb	0	; () banked
  3039  0013BE  0100               	movlb	0	; () banked
  3040  0013C0  6FCF               	movwf	check_msg@qptr& (0+255),b
  3041  0013C2  ECA6  F00C         	call	_check_msg	;wreg free
  3042  0013C6  0900               	iorlw	0
  3043  0013C8  B4D8               	btfsc	status,2,c
  3044  0013CA  D007               	goto	l2592
  3045                           
  3046                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3047  0013CC  0100               	movlb	0	; () banked
  3048  0013CE  6FD5               	movwf	??_block_on_To_msgqueues& (0+255),b
  3049  0013D0  0E00               	movlw	0
  3050  0013D2  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3051  0013D4  0100               	movlb	0	; () banked
  3052  0013D6  51D5               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3053  0013D8  0012               	return	
  3054  0013DA                     l2592:
  3055                           
  3056                           ;messages.c: 278: }
  3057                           ;messages.c: 279: Delay1KTCYx(10);
  3058  0013DA  0E0A               	movlw	10
  3059  0013DC  EC92  F00D         	call	_Delay1KTCYx
  3060  0013E0  D7D0               	goto	l2580
  3061  0013E2                     __end_of_block_on_To_msgqueues:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf1	equ	0xFE7
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           postinc2	equ	0xFDE
  3077                           postdec2	equ	0xFDD
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _in_main *****************
  3083 ;; Defined at:
  3084 ;;		line 40 in file "../src/interrupts.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2   29[BANK0 ] int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3098 ;;      Params:         0       2       0       0       0
  3099 ;;      Locals:         0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0
  3101 ;;      Totals:         0       2       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:   13
  3105 ;; This function calls:
  3106 ;;		_in_high_int
  3107 ;;		_in_low_int
  3108 ;; This function is called by:
  3109 ;;		_block_on_To_msgqueues
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text17
  3114  0016D8                     __ptext17:
  3115                           	opt stack 0
  3116  0016D8                     _in_main:
  3117                           	opt stack 15
  3118                           
  3119                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3120                           
  3121                           ;incstack = 0
  3122  0016D8  EC49  F00B         	call	_in_low_int	;wreg free
  3123  0016DC  0100               	movlb	0	; () banked
  3124  0016DE  0100               	movlb	0	; () banked
  3125  0016E0  51D2               	movf	(?_in_low_int+1)& (0+255),w,b
  3126  0016E2  0100               	movlb	0	; () banked
  3127  0016E4  11D1               	iorwf	?_in_low_int& (0+255),w,b
  3128  0016E6  A4D8               	btfss	status,2,c
  3129  0016E8  D011               	goto	l2316
  3130                           
  3131                           ; BSR set to: 0
  3132  0016EA  ECB9  F00D         	call	_in_high_int	;wreg free
  3133  0016EE  0100               	movlb	0	; () banked
  3134  0016F0  0100               	movlb	0	; () banked
  3135  0016F2  51D0               	movf	(?_in_high_int+1)& (0+255),w,b
  3136  0016F4  0100               	movlb	0	; () banked
  3137  0016F6  11CF               	iorwf	?_in_high_int& (0+255),w,b
  3138  0016F8  A4D8               	btfss	status,2,c
  3139  0016FA  D008               	goto	l2316
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;interrupts.c: 42: return (1);
  3143  0016FC  0E00               	movlw	0
  3144  0016FE  0100               	movlb	0	; () banked
  3145  001700  0100               	movlb	0	; () banked
  3146  001702  6FD4               	movwf	(?_in_main+1)& (0+255),b
  3147  001704  0E01               	movlw	1
  3148  001706  0100               	movlb	0	; () banked
  3149  001708  6FD3               	movwf	?_in_main& (0+255),b
  3150  00170A  0012               	return	
  3151  00170C                     l2316:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;interrupts.c: 44: return (0);
  3155  00170C  0E00               	movlw	0
  3156  00170E  0100               	movlb	0	; () banked
  3157  001710  0100               	movlb	0	; () banked
  3158  001712  6FD4               	movwf	(?_in_main+1)& (0+255),b
  3159  001714  0E00               	movlw	0
  3160  001716  0100               	movlb	0	; () banked
  3161  001718  6FD3               	movwf	?_in_main& (0+255),b
  3162  00171A  0012               	return	
  3163  00171C                     __end_of_in_main:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           indf1	equ	0xFE7
  3175                           fsr1h	equ	0xFE2
  3176                           fsr1l	equ	0xFE1
  3177                           indf2	equ	0xFDF
  3178                           postinc2	equ	0xFDE
  3179                           postdec2	equ	0xFDD
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _in_low_int *****************
  3185 ;; Defined at:
  3186 ;;		line 30 in file "../src/interrupts.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2   27[BANK0 ] int 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3200 ;;      Params:         0       2       0       0       0
  3201 ;;      Locals:         0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0
  3203 ;;      Totals:         0       2       0       0       0
  3204 ;;Total ram usage:        2 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:   12
  3207 ;; This function calls:
  3208 ;;		_in_high_int
  3209 ;; This function is called by:
  3210 ;;		_in_main
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text18
  3215  001692                     __ptext18:
  3216                           	opt stack 0
  3217  001692                     _in_low_int:
  3218                           	opt stack 15
  3219                           
  3220                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;incstack = 0
  3224  001692  ACF2               	btfss	intcon,6,c	;volatile
  3225  001694  D008               	goto	l2294
  3226                           
  3227                           ;interrupts.c: 32: return (0);
  3228  001696  0E00               	movlw	0
  3229  001698  0100               	movlb	0	; () banked
  3230  00169A  0100               	movlb	0	; () banked
  3231  00169C  6FD2               	movwf	(?_in_low_int+1)& (0+255),b
  3232  00169E  0E00               	movlw	0
  3233  0016A0  0100               	movlb	0	; () banked
  3234  0016A2  6FD1               	movwf	?_in_low_int& (0+255),b
  3235  0016A4  0012               	return	
  3236  0016A6                     l2294:
  3237  0016A6  ECB9  F00D         	call	_in_high_int	;wreg free
  3238  0016AA  0100               	movlb	0	; () banked
  3239  0016AC  0100               	movlb	0	; () banked
  3240  0016AE  51D0               	movf	(?_in_high_int+1)& (0+255),w,b
  3241  0016B0  0100               	movlb	0	; () banked
  3242  0016B2  11CF               	iorwf	?_in_high_int& (0+255),w,b
  3243  0016B4  B4D8               	btfsc	status,2,c
  3244  0016B6  D008               	goto	l2302
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;interrupts.c: 34: return (0);
  3248  0016B8  0E00               	movlw	0
  3249  0016BA  0100               	movlb	0	; () banked
  3250  0016BC  0100               	movlb	0	; () banked
  3251  0016BE  6FD2               	movwf	(?_in_low_int+1)& (0+255),b
  3252  0016C0  0E00               	movlw	0
  3253  0016C2  0100               	movlb	0	; () banked
  3254  0016C4  6FD1               	movwf	?_in_low_int& (0+255),b
  3255  0016C6  0012               	return	
  3256  0016C8                     l2302:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;interrupts.c: 36: return (1);
  3260  0016C8  0E00               	movlw	0
  3261  0016CA  0100               	movlb	0	; () banked
  3262  0016CC  0100               	movlb	0	; () banked
  3263  0016CE  6FD2               	movwf	(?_in_low_int+1)& (0+255),b
  3264  0016D0  0E01               	movlw	1
  3265  0016D2  0100               	movlb	0	; () banked
  3266  0016D4  6FD1               	movwf	?_in_low_int& (0+255),b
  3267  0016D6  0012               	return	
  3268  0016D8                     __end_of_in_low_int:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           intcon	equ	0xFF2
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           indf1	equ	0xFE7
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           indf2	equ	0xFDF
  3283                           postinc2	equ	0xFDE
  3284                           postdec2	equ	0xFDD
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _in_high_int *****************
  3290 ;; Defined at:
  3291 ;;		line 22 in file "../src/interrupts.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  2   25[BANK0 ] int 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3305 ;;      Params:         0       2       0       0       0
  3306 ;;      Locals:         0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       2       0       0       0
  3309 ;;Total ram usage:        2 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:   11
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_in_low_int
  3316 ;;		_in_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text19
  3321  001B72                     __ptext19:
  3322                           	opt stack 0
  3323  001B72                     _in_high_int:
  3324                           	opt stack 15
  3325                           
  3326                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;incstack = 0
  3330  001B72  0E00               	movlw	0
  3331  001B74  AEF2               	btfss	intcon,7,c	;volatile
  3332  001B76  0E01               	movlw	1
  3333  001B78  0100               	movlb	0	; () banked
  3334  001B7A  0100               	movlb	0	; () banked
  3335  001B7C  6FCF               	movwf	?_in_high_int& (0+255),b
  3336  001B7E  0100               	movlb	0	; () banked
  3337  001B80  6BD0               	clrf	(?_in_high_int+1)& (0+255),b
  3338  001B82  0012               	return	
  3339  001B84                     __end_of_in_high_int:
  3340                           	opt stack 0
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           prodh	equ	0xFF4
  3346                           prodl	equ	0xFF3
  3347                           intcon	equ	0xFF2
  3348                           postinc0	equ	0xFEE
  3349                           wreg	equ	0xFE8
  3350                           indf1	equ	0xFE7
  3351                           fsr1h	equ	0xFE2
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           postinc2	equ	0xFDE
  3355                           postdec2	equ	0xFDD
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function _check_msg *****************
  3361 ;; Defined at:
  3362 ;;		line 222 in file "../src/messages.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  qptr            2   25[BANK0 ] PTR struct __msg_queue
  3365 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      unsigned char 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3377 ;;      Params:         0       2       0       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       1       0       0       0
  3380 ;;      Totals:         0       3       0       0       0
  3381 ;;Total ram usage:        3 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:   11
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_block_on_To_msgqueues
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text20
  3392  00194C                     __ptext20:
  3393                           	opt stack 0
  3394  00194C                     _check_msg:
  3395                           	opt stack 17
  3396                           
  3397                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;incstack = 0
  3401  00194C  0100               	movlb	0	; () banked
  3402  00194E  EE20 F035          	lfsr	2,53
  3403  001952  0100               	movlb	0	; () banked
  3404  001954  51CF               	movf	check_msg@qptr& (0+255),w,b
  3405  001956  26D9               	addwf	fsr2l,f,c
  3406  001958  0100               	movlb	0	; () banked
  3407  00195A  51D0               	movf	(check_msg@qptr+1)& (0+255),w,b
  3408  00195C  22DA               	addwfc	fsr2h,f,c
  3409  00195E  50DF               	movf	indf2,w,c
  3410  001960  0100               	movlb	0	; () banked
  3411  001962  6FD1               	movwf	??_check_msg& (0+255),b
  3412  001964  0100               	movlb	0	; () banked
  3413  001966  51D1               	movf	??_check_msg& (0+255),w,b
  3414  001968  0D0D               	mullw	13
  3415  00196A  50F3               	movf	prodl,w,c
  3416  00196C  0100               	movlb	0	; () banked
  3417  00196E  0100               	movlb	0	; () banked
  3418  001970  25CF               	addwf	check_msg@qptr& (0+255),w,b
  3419  001972  6ED9               	movwf	fsr2l,c
  3420  001974  50F4               	movf	prodh,w,c
  3421  001976  0100               	movlb	0	; () banked
  3422  001978  0100               	movlb	0	; () banked
  3423  00197A  21D0               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3424  00197C  6EDA               	movwf	fsr2h,c
  3425  00197E  50DF               	movf	indf2,w,c
  3426  001980  0012               	return	
  3427  001982                     __end_of_check_msg:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           postinc0	equ	0xFEE
  3437                           wreg	equ	0xFE8
  3438                           indf1	equ	0xFE7
  3439                           fsr1h	equ	0xFE2
  3440                           fsr1l	equ	0xFE1
  3441                           indf2	equ	0xFDF
  3442                           postinc2	equ	0xFDE
  3443                           postdec2	equ	0xFDD
  3444                           fsr2h	equ	0xFDA
  3445                           fsr2l	equ	0xFD9
  3446                           status	equ	0xFD8
  3447                           
  3448 ;; *************** function _Delay1KTCYx *****************
  3449 ;; Defined at:
  3450 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  unit            1    wreg     unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  unit            1   25[BANK0 ] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		wreg
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3464 ;;      Params:         0       0       0       0       0
  3465 ;;      Locals:         0       1       0       0       0
  3466 ;;      Temps:          0       0       0       0       0
  3467 ;;      Totals:         0       1       0       0       0
  3468 ;;Total ram usage:        1 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:   11
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_block_on_To_msgqueues
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text21
  3479  001B24                     __ptext21:
  3480                           	opt stack 0
  3481  001B24                     _Delay1KTCYx:
  3482                           	opt stack 17
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;incstack = 0
  3486                           ;Delay1KTCYx@unit stored from wreg
  3487  001B24  CFE8 F0CF          	movff	wreg,Delay1KTCYx@unit
  3488  001B28                     l786:
  3489  001B28  0EFA               	movlw	250
  3490  001B2A                     u2857:
  3491  001B2A  F000               	nop	
  3492  001B2C  2EE8               	decfsz	wreg,f,c
  3493  001B2E  D7FD               	goto	u2857
  3494  001B30  0100               	movlb	0	; () banked
  3495  001B32  0100               	movlb	0	; () banked
  3496  001B34  2FCF               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3497  001B36  D7F8               	goto	l786
  3498  001B38  0012               	return	
  3499  001B3A                     __end_of_Delay1KTCYx:
  3500                           	opt stack 0
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           prodh	equ	0xFF4
  3506                           prodl	equ	0xFF3
  3507                           intcon	equ	0xFF2
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           indf1	equ	0xFE7
  3511                           fsr1h	equ	0xFE2
  3512                           fsr1l	equ	0xFE1
  3513                           indf2	equ	0xFDF
  3514                           postinc2	equ	0xFDE
  3515                           postdec2	equ	0xFDD
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           
  3520 ;; *************** function _ToMainLow_recvmsg *****************
  3521 ;; Defined at:
  3522 ;;		line 112 in file "../src/messages.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  maxlength       1    wreg     unsigned char 
  3525 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  3526 ;;		 -> main@msgtype(1), 
  3527 ;;  data            2    2[BANK1 ] PTR void 
  3528 ;;		 -> main@msgbuffer(11), 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  maxlength       1    4[BANK1 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      char 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3540 ;;      Params:         0       0       4       0       0
  3541 ;;      Locals:         0       0       1       0       0
  3542 ;;      Temps:          0       0       0       0       0
  3543 ;;      Totals:         0       0       5       0       0
  3544 ;;Total ram usage:        5 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:   13
  3547 ;; This function calls:
  3548 ;;		_recv_msg
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text22
  3555  001760                     __ptext22:
  3556                           	opt stack 0
  3557  001760                     _ToMainLow_recvmsg:
  3558                           	opt stack 16
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;incstack = 0
  3562                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3563  001760  CFE8 F1A6          	movff	wreg,ToMainLow_recvmsg@maxlength
  3564                           
  3565                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3566  001764  0100               	movlb	0	; () banked
  3567  001766  0E00               	movlw	high _ToMainLow_MQ
  3568  001768  0100               	movlb	0	; () banked
  3569  00176A  0100               	movlb	0	; () banked
  3570  00176C  6FDA               	movwf	(recv_msg@qptr+1)& (0+255),b
  3571  00176E  0100               	movlb	0	; () banked
  3572  001770  0E80               	movlw	low _ToMainLow_MQ
  3573  001772  0100               	movlb	0	; () banked
  3574  001774  0100               	movlb	0	; () banked
  3575  001776  6FD9               	movwf	recv_msg@qptr& (0+255),b
  3576  001778  C1A6  F0DB         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3577  00177C  0101               	movlb	1	; () banked
  3578  00177E  0100               	movlb	0	; () banked
  3579  001780  C1A3  F0DD         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3580  001784  0101               	movlb	1	; () banked
  3581  001786  0100               	movlb	0	; () banked
  3582  001788  C1A2  F0DC         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3583  00178C  0101               	movlb	1	; () banked
  3584  00178E  0100               	movlb	0	; () banked
  3585  001790  C1A5  F0DF         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3586  001794  0101               	movlb	1	; () banked
  3587  001796  0100               	movlb	0	; () banked
  3588  001798  C1A4  F0DE         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3589  00179C  EC35  F006         	call	_recv_msg	;wreg free
  3590  0017A0  0012               	return	
  3591  0017A2                     __end_of_ToMainLow_recvmsg:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           tblptrh	equ	0xFF7
  3595                           tblptrl	equ	0xFF6
  3596                           tablat	equ	0xFF5
  3597                           prodh	equ	0xFF4
  3598                           prodl	equ	0xFF3
  3599                           intcon	equ	0xFF2
  3600                           postinc0	equ	0xFEE
  3601                           wreg	equ	0xFE8
  3602                           indf1	equ	0xFE7
  3603                           fsr1h	equ	0xFE2
  3604                           fsr1l	equ	0xFE1
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _ToMainHigh_recvmsg *****************
  3613 ;; Defined at:
  3614 ;;		line 135 in file "../src/messages.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  maxlength       1    wreg     unsigned char 
  3617 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  3618 ;;		 -> main@msgtype(1), 
  3619 ;;  data            2    2[BANK1 ] PTR void 
  3620 ;;		 -> main@msgbuffer(11), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  maxlength       1    4[BANK1 ] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      char 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3632 ;;      Params:         0       0       4       0       0
  3633 ;;      Locals:         0       0       1       0       0
  3634 ;;      Temps:          0       0       0       0       0
  3635 ;;      Totals:         0       0       5       0       0
  3636 ;;Total ram usage:        5 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:   13
  3639 ;; This function calls:
  3640 ;;		_recv_msg
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text23
  3647  0017A2                     __ptext23:
  3648                           	opt stack 0
  3649  0017A2                     _ToMainHigh_recvmsg:
  3650                           	opt stack 16
  3651                           
  3652                           ;incstack = 0
  3653                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3654  0017A2  CFE8 F1A6          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3655                           
  3656                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3657  0017A6  0101               	movlb	1	; () banked
  3658  0017A8  0E01               	movlw	high _ToMainHigh_MQ
  3659  0017AA  0100               	movlb	0	; () banked
  3660  0017AC  0100               	movlb	0	; () banked
  3661  0017AE  6FDA               	movwf	(recv_msg@qptr+1)& (0+255),b
  3662  0017B0  0101               	movlb	1	; () banked
  3663  0017B2  0E6C               	movlw	low _ToMainHigh_MQ
  3664  0017B4  0100               	movlb	0	; () banked
  3665  0017B6  0100               	movlb	0	; () banked
  3666  0017B8  6FD9               	movwf	recv_msg@qptr& (0+255),b
  3667  0017BA  C1A6  F0DB         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3668  0017BE  0101               	movlb	1	; () banked
  3669  0017C0  0100               	movlb	0	; () banked
  3670  0017C2  C1A3  F0DD         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3671  0017C6  0101               	movlb	1	; () banked
  3672  0017C8  0100               	movlb	0	; () banked
  3673  0017CA  C1A2  F0DC         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3674  0017CE  0101               	movlb	1	; () banked
  3675  0017D0  0100               	movlb	0	; () banked
  3676  0017D2  C1A5  F0DF         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3677  0017D6  0101               	movlb	1	; () banked
  3678  0017D8  0100               	movlb	0	; () banked
  3679  0017DA  C1A4  F0DE         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3680  0017DE  EC35  F006         	call	_recv_msg	;wreg free
  3681  0017E2  0012               	return	
  3682  0017E4                     __end_of_ToMainHigh_recvmsg:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           indf1	equ	0xFE7
  3694                           fsr1h	equ	0xFE2
  3695                           fsr1l	equ	0xFE1
  3696                           indf2	equ	0xFDF
  3697                           postinc2	equ	0xFDE
  3698                           postdec2	equ	0xFDD
  3699                           fsr2h	equ	0xFDA
  3700                           fsr2l	equ	0xFD9
  3701                           status	equ	0xFD8
  3702                           
  3703 ;; *************** function _recv_msg *****************
  3704 ;; Defined at:
  3705 ;;		line 63 in file "../src/messages.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  qptr            2   35[BANK0 ] PTR struct __msg_queue
  3708 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3709 ;;  maxlength       1   37[BANK0 ] unsigned char 
  3710 ;;  msgtype         2   38[BANK0 ] PTR unsigned char 
  3711 ;;		 -> main@msgtype(1), 
  3712 ;;  data            2   40[BANK0 ] PTR void 
  3713 ;;		 -> main@msgbuffer(11), 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  qmsg            2   47[BANK0 ] PTR struct __msg
  3716 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3717 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3718 ;;  tlength         2   45[BANK0 ] unsigned int 
  3719 ;;  slot            1   44[BANK0 ] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      char 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3729 ;;      Params:         0       7       0       0       0
  3730 ;;      Locals:         0       5       0       0       0
  3731 ;;      Temps:          0       2       0       0       0
  3732 ;;      Totals:         0      14       0       0       0
  3733 ;;Total ram usage:       14 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:   12
  3736 ;; This function calls:
  3737 ;;		_memcpy
  3738 ;; This function is called by:
  3739 ;;		_ToMainLow_recvmsg
  3740 ;;		_ToMainHigh_recvmsg
  3741 ;;		_FromMainLow_recvmsg
  3742 ;;		_FromMainHigh_recvmsg
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text24
  3747  000C6A                     __ptext24:
  3748                           	opt stack 0
  3749  000C6A                     _recv_msg:
  3750                           	opt stack 16
  3751                           
  3752                           ;messages.c: 64: unsigned char slot;
  3753                           ;messages.c: 68: msg *qmsg;
  3754                           ;messages.c: 69: size_t tlength;
  3755                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3756                           
  3757                           ;incstack = 0
  3758  000C6A  0100               	movlb	0	; () banked
  3759  000C6C  EE20 F035          	lfsr	2,53
  3760  000C70  0100               	movlb	0	; () banked
  3761  000C72  51D9               	movf	recv_msg@qptr& (0+255),w,b
  3762  000C74  26D9               	addwf	fsr2l,f,c
  3763  000C76  0100               	movlb	0	; () banked
  3764  000C78  51DA               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3765  000C7A  22DA               	addwfc	fsr2h,f,c
  3766  000C7C  50DF               	movf	indf2,w,c
  3767  000C7E  0100               	movlb	0	; () banked
  3768  000C80  0100               	movlb	0	; () banked
  3769  000C82  6FE2               	movwf	recv_msg@slot& (0+255),b
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3773  000C84  0100               	movlb	0	; () banked
  3774  000C86  0100               	movlb	0	; () banked
  3775  000C88  51E2               	movf	recv_msg@slot& (0+255),w,b
  3776  000C8A  0D0D               	mullw	13
  3777  000C8C  50F3               	movf	prodl,w,c
  3778  000C8E  0100               	movlb	0	; () banked
  3779  000C90  0100               	movlb	0	; () banked
  3780  000C92  25D9               	addwf	recv_msg@qptr& (0+255),w,b
  3781  000C94  0100               	movlb	0	; () banked
  3782  000C96  0100               	movlb	0	; () banked
  3783  000C98  6FE5               	movwf	recv_msg@qmsg& (0+255),b
  3784  000C9A  50F4               	movf	prodh,w,c
  3785  000C9C  0100               	movlb	0	; () banked
  3786  000C9E  0100               	movlb	0	; () banked
  3787  000CA0  21DA               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3788  000CA2  0100               	movlb	0	; () banked
  3789  000CA4  6FE6               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;messages.c: 74: if (qmsg->full == 1) {
  3793  000CA6  0E01               	movlw	1
  3794  000CA8  C0E5  FFD9         	movff	recv_msg@qmsg,fsr2l
  3795  000CAC  C0E6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3796  000CB0  62DF               	cpfseq	indf2,c
  3797  000CB2  D074               	goto	l3436
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3801  000CB4  0100               	movlb	0	; () banked
  3802  000CB6  EE20 F001          	lfsr	2,1
  3803  000CBA  0100               	movlb	0	; () banked
  3804  000CBC  51E5               	movf	recv_msg@qmsg& (0+255),w,b
  3805  000CBE  26D9               	addwf	fsr2l,f,c
  3806  000CC0  0100               	movlb	0	; () banked
  3807  000CC2  51E6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3808  000CC4  22DA               	addwfc	fsr2h,f,c
  3809  000CC6  50DF               	movf	indf2,w,c
  3810  000CC8  0100               	movlb	0	; () banked
  3811  000CCA  0100               	movlb	0	; () banked
  3812  000CCC  5DDB               	subwf	recv_msg@maxlength& (0+255),w,b
  3813  000CCE  B0D8               	btfsc	status,0,c
  3814  000CD0  D002               	goto	l3420
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;messages.c: 77: return (-3);
  3818  000CD2  0EFD               	movlw	253
  3819  000CD4  0012               	return	
  3820  000CD6                     l3420:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;messages.c: 78: }
  3824                           ;messages.c: 80: tlength = qmsg->length;
  3825  000CD6  0100               	movlb	0	; () banked
  3826  000CD8  EE20 F001          	lfsr	2,1
  3827  000CDC  0100               	movlb	0	; () banked
  3828  000CDE  51E5               	movf	recv_msg@qmsg& (0+255),w,b
  3829  000CE0  26D9               	addwf	fsr2l,f,c
  3830  000CE2  0100               	movlb	0	; () banked
  3831  000CE4  51E6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3832  000CE6  22DA               	addwfc	fsr2h,f,c
  3833  000CE8  50DF               	movf	indf2,w,c
  3834  000CEA  0100               	movlb	0	; () banked
  3835  000CEC  6FE0               	movwf	??_recv_msg& (0+255),b
  3836  000CEE  0100               	movlb	0	; () banked
  3837  000CF0  51E0               	movf	??_recv_msg& (0+255),w,b
  3838  000CF2  0100               	movlb	0	; () banked
  3839  000CF4  0100               	movlb	0	; () banked
  3840  000CF6  6FE3               	movwf	recv_msg@tlength& (0+255),b
  3841  000CF8  0100               	movlb	0	; () banked
  3842  000CFA  6BE4               	clrf	(recv_msg@tlength+1)& (0+255),b
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3846  000CFC  0100               	movlb	0	; () banked
  3847  000CFE  0100               	movlb	0	; () banked
  3848  000D00  C0DF  F0D0         	movff	recv_msg@data+1,memcpy@d1+1
  3849  000D04  0100               	movlb	0	; () banked
  3850  000D06  0100               	movlb	0	; () banked
  3851  000D08  C0DE  F0CF         	movff	recv_msg@data,memcpy@d1
  3852  000D0C  0E03               	movlw	3
  3853  000D0E  0100               	movlb	0	; () banked
  3854  000D10  0100               	movlb	0	; () banked
  3855  000D12  25E5               	addwf	recv_msg@qmsg& (0+255),w,b
  3856  000D14  0100               	movlb	0	; () banked
  3857  000D16  6FE0               	movwf	??_recv_msg& (0+255),b
  3858  000D18  0E00               	movlw	0
  3859  000D1A  0100               	movlb	0	; () banked
  3860  000D1C  0100               	movlb	0	; () banked
  3861  000D1E  21E6               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3862  000D20  0100               	movlb	0	; () banked
  3863  000D22  6FE1               	movwf	(??_recv_msg+1)& (0+255),b
  3864  000D24  C0E0  F0D1         	movff	??_recv_msg,memcpy@s1
  3865  000D28  C0E1  F0D2         	movff	??_recv_msg+1,memcpy@s1+1
  3866  000D2C  C0E3  F0D3         	movff	recv_msg@tlength,memcpy@n
  3867  000D30  C0E4  F0D4         	movff	recv_msg@tlength+1,memcpy@n+1
  3868  000D34  ECD0  F00A         	call	_memcpy	;wreg free
  3869                           
  3870                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3871  000D38  0100               	movlb	0	; () banked
  3872  000D3A  EE20 F035          	lfsr	2,53
  3873  000D3E  0100               	movlb	0	; () banked
  3874  000D40  51D9               	movf	recv_msg@qptr& (0+255),w,b
  3875  000D42  26D9               	addwf	fsr2l,f,c
  3876  000D44  0100               	movlb	0	; () banked
  3877  000D46  51DA               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3878  000D48  22DA               	addwfc	fsr2h,f,c
  3879  000D4A  0100               	movlb	0	; () banked
  3880  000D4C  EE10 F035          	lfsr	1,53
  3881  000D50  0100               	movlb	0	; () banked
  3882  000D52  51D9               	movf	recv_msg@qptr& (0+255),w,b
  3883  000D54  26E1               	addwf	fsr1l,f,c
  3884  000D56  0100               	movlb	0	; () banked
  3885  000D58  51DA               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3886  000D5A  22E2               	addwfc	fsr1h,f,c
  3887  000D5C  50E7               	movf	indf1,w,c
  3888  000D5E  0100               	movlb	0	; () banked
  3889  000D60  6FE0               	movwf	??_recv_msg& (0+255),b
  3890  000D62  0100               	movlb	0	; () banked
  3891  000D64  29E0               	incf	??_recv_msg& (0+255),w,b
  3892  000D66  0B03               	andlw	3
  3893  000D68  6EDF               	movwf	indf2,c
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3897  000D6A  0100               	movlb	0	; () banked
  3898  000D6C  EE20 F002          	lfsr	2,2
  3899  000D70  0100               	movlb	0	; () banked
  3900  000D72  51E5               	movf	recv_msg@qmsg& (0+255),w,b
  3901  000D74  26D9               	addwf	fsr2l,f,c
  3902  000D76  0100               	movlb	0	; () banked
  3903  000D78  51E6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3904  000D7A  22DA               	addwfc	fsr2h,f,c
  3905  000D7C  C0DC  FFE1         	movff	recv_msg@msgtype,fsr1l
  3906  000D80  C0DD  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3907  000D84  CFDF FFE7          	movff	indf2,indf1
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;messages.c: 91: qmsg->full = 0;
  3911  000D88  C0E5  FFD9         	movff	recv_msg@qmsg,fsr2l
  3912  000D8C  C0E6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3913  000D90  0E00               	movlw	0
  3914  000D92  6EDF               	movwf	indf2,c
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;messages.c: 92: return (tlength);
  3918  000D94  0100               	movlb	0	; () banked
  3919  000D96  0100               	movlb	0	; () banked
  3920  000D98  51E3               	movf	recv_msg@tlength& (0+255),w,b
  3921  000D9A  0012               	return	
  3922  000D9C                     l3436:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;messages.c: 94: return (-4);
  3926  000D9C  0EFC               	movlw	252
  3927  000D9E  0012               	return	
  3928  000DA0                     __end_of_recv_msg:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf1	equ	0xFE7
  3940                           fsr1h	equ	0xFE2
  3941                           fsr1l	equ	0xFE1
  3942                           indf2	equ	0xFDF
  3943                           postinc2	equ	0xFDE
  3944                           postdec2	equ	0xFDD
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function _memcpy *****************
  3950 ;; Defined at:
  3951 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  d1              2   25[BANK0 ] PTR void 
  3954 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3955 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3956 ;;		 -> main@msgbuffer(11), 
  3957 ;;  s1              2   27[BANK0 ] PTR const void 
  3958 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3959 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3960 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3961 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  3962 ;;		 -> main@uc(5), 
  3963 ;;  n               2   29[BANK0 ] unsigned int 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  s               2   33[BANK0 ] PTR const unsigned char 
  3966 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3967 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3968 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3969 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  3970 ;;		 -> main@uc(5), 
  3971 ;;  d               2   31[BANK0 ] PTR unsigned char 
  3972 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3973 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3974 ;;		 -> main@msgbuffer(11), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  2   25[BANK0 ] PTR void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3984 ;;      Params:         0       6       0       0       0
  3985 ;;      Locals:         0       4       0       0       0
  3986 ;;      Temps:          0       0       0       0       0
  3987 ;;      Totals:         0      10       0       0       0
  3988 ;;Total ram usage:       10 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:   11
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_send_msg
  3995 ;;		_recv_msg
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text25
  4000  0015A0                     __ptext25:
  4001                           	opt stack 0
  4002  0015A0                     _memcpy:
  4003                           	opt stack 15
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;incstack = 0
  4007  0015A0  0100               	movlb	0	; () banked
  4008  0015A2  0100               	movlb	0	; () banked
  4009  0015A4  C0D2  F0D8         	movff	memcpy@s1+1,memcpy@s+1
  4010  0015A8  0100               	movlb	0	; () banked
  4011  0015AA  0100               	movlb	0	; () banked
  4012  0015AC  C0D1  F0D7         	movff	memcpy@s1,memcpy@s
  4013  0015B0  0100               	movlb	0	; () banked
  4014  0015B2  0100               	movlb	0	; () banked
  4015  0015B4  C0D0  F0D6         	movff	memcpy@d1+1,memcpy@d+1
  4016  0015B8  0100               	movlb	0	; () banked
  4017  0015BA  0100               	movlb	0	; () banked
  4018  0015BC  C0CF  F0D5         	movff	memcpy@d1,memcpy@d
  4019  0015C0  D012               	goto	l3406
  4020  0015C2                     l3400:
  4021                           
  4022                           ; BSR set to: 0
  4023  0015C2  C0D7  FFD9         	movff	memcpy@s,fsr2l
  4024  0015C6  C0D8  FFDA         	movff	memcpy@s+1,fsr2h
  4025  0015CA  C0D5  FFE1         	movff	memcpy@d,fsr1l
  4026  0015CE  C0D6  FFE2         	movff	memcpy@d+1,fsr1h
  4027  0015D2  CFDF FFE7          	movff	indf2,indf1
  4028                           
  4029                           ; BSR set to: 0
  4030  0015D6  0100               	movlb	0	; () banked
  4031  0015D8  0100               	movlb	0	; () banked
  4032  0015DA  4BD7               	infsnz	memcpy@s& (0+255),f,b
  4033  0015DC  2BD8               	incf	(memcpy@s+1)& (0+255),f,b
  4034                           
  4035                           ; BSR set to: 0
  4036  0015DE  0100               	movlb	0	; () banked
  4037  0015E0  0100               	movlb	0	; () banked
  4038  0015E2  4BD5               	infsnz	memcpy@d& (0+255),f,b
  4039  0015E4  2BD6               	incf	(memcpy@d+1)& (0+255),f,b
  4040  0015E6                     l3406:
  4041                           
  4042                           ; BSR set to: 0
  4043  0015E6  0100               	movlb	0	; () banked
  4044  0015E8  0100               	movlb	0	; () banked
  4045  0015EA  07D3               	decf	memcpy@n& (0+255),f,b
  4046  0015EC  A0D8               	btfss	status,0,c
  4047  0015EE  07D4               	decf	(memcpy@n+1)& (0+255),f,b
  4048  0015F0  0100               	movlb	0	; () banked
  4049  0015F2  29D3               	incf	memcpy@n& (0+255),w,b
  4050  0015F4  B4D8               	btfsc	status,2,c
  4051  0015F6  29D4               	incf	(memcpy@n+1)& (0+255),w,b
  4052  0015F8  B4D8               	btfsc	status,2,c
  4053                           
  4054                           ; BSR set to: 0
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;	Return value of _memcpy is never used
  4058  0015FA  0012               	return	
  4059  0015FC  D7E2               	goto	l3400
  4060  0015FE                     __end_of_memcpy:
  4061                           	opt stack 0
  4062                           tblptru	equ	0xFF8
  4063                           tblptrh	equ	0xFF7
  4064                           tblptrl	equ	0xFF6
  4065                           tablat	equ	0xFF5
  4066                           prodh	equ	0xFF4
  4067                           prodl	equ	0xFF3
  4068                           intcon	equ	0xFF2
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           indf1	equ	0xFE7
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           indf2	equ	0xFDF
  4075                           postinc2	equ	0xFDE
  4076                           postdec2	equ	0xFDD
  4077                           fsr2h	equ	0xFDA
  4078                           fsr2l	equ	0xFD9
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function _OpenUSART *****************
  4082 ;; Defined at:
  4083 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  config          1    wreg     unsigned char 
  4086 ;;  spbrg           2   25[BANK0 ] unsigned int 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  config          1   30[BANK0 ] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;		None               void
  4091 ;; Registers used:
  4092 ;;		wreg, status,2
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4098 ;;      Params:         0       2       0       0       0
  4099 ;;      Locals:         0       1       0       0       0
  4100 ;;      Temps:          0       3       0       0       0
  4101 ;;      Totals:         0       6       0       0       0
  4102 ;;Total ram usage:        6 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:   11
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text26
  4113  0011C6                     __ptext26:
  4114                           	opt stack 0
  4115  0011C6                     _OpenUSART:
  4116                           	opt stack 18
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120                           ;OpenUSART@config stored from wreg
  4121  0011C6  CFE8 F0D4          	movff	wreg,OpenUSART@config
  4122  0011CA  0E00               	movlw	0
  4123  0011CC  6EAC               	movwf	4012,c	;volatile
  4124  0011CE  0E00               	movlw	0
  4125  0011D0  6EAB               	movwf	4011,c	;volatile
  4126  0011D2  0100               	movlb	0	; () banked
  4127  0011D4  0100               	movlb	0	; () banked
  4128  0011D6  B1D4               	btfsc	OpenUSART@config& (0+255),0,b
  4129                           
  4130                           ; BSR set to: 0
  4131  0011D8  88AC               	bsf	4012,4,c	;volatile
  4132                           
  4133                           ; BSR set to: 0
  4134                           
  4135                           ; BSR set to: 0
  4136  0011DA  0100               	movlb	0	; () banked
  4137  0011DC  0100               	movlb	0	; () banked
  4138  0011DE  A3D4               	btfss	OpenUSART@config& (0+255),1,b
  4139  0011E0  D002               	goto	l2534
  4140                           
  4141                           ; BSR set to: 0
  4142  0011E2  8CAC               	bsf	4012,6,c	;volatile
  4143  0011E4  8CAB               	bsf	4011,6,c	;volatile
  4144  0011E6                     l2534:
  4145                           
  4146                           ; BSR set to: 0
  4147  0011E6  0100               	movlb	0	; () banked
  4148  0011E8  0100               	movlb	0	; () banked
  4149  0011EA  B5D4               	btfsc	OpenUSART@config& (0+255),2,b
  4150                           
  4151                           ; BSR set to: 0
  4152  0011EC  8EAC               	bsf	4012,7,c	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155                           
  4156                           ; BSR set to: 0
  4157  0011EE  0100               	movlb	0	; () banked
  4158  0011F0  0100               	movlb	0	; () banked
  4159  0011F2  A7D4               	btfss	OpenUSART@config& (0+255),3,b
  4160  0011F4  D002               	goto	l542
  4161                           
  4162                           ; BSR set to: 0
  4163  0011F6  88AB               	bsf	4011,4,c	;volatile
  4164  0011F8  D001               	goto	l2542
  4165  0011FA                     l542:
  4166                           
  4167                           ; BSR set to: 0
  4168  0011FA  8AAB               	bsf	4011,5,c	;volatile
  4169  0011FC                     l2542:
  4170                           
  4171                           ; BSR set to: 0
  4172  0011FC  0100               	movlb	0	; () banked
  4173  0011FE  0100               	movlb	0	; () banked
  4174  001200  B9D4               	btfsc	OpenUSART@config& (0+255),4,b
  4175                           
  4176                           ; BSR set to: 0
  4177  001202  84AC               	bsf	4012,2,c	;volatile
  4178                           
  4179                           ; BSR set to: 0
  4180  001204  989E               	bcf	3998,4,c	;volatile
  4181                           
  4182                           ; BSR set to: 0
  4183  001206  0100               	movlb	0	; () banked
  4184  001208  0100               	movlb	0	; () banked
  4185  00120A  BBD4               	btfsc	OpenUSART@config& (0+255),5,b
  4186                           
  4187                           ; BSR set to: 0
  4188  00120C  86AB               	bsf	4011,3,c	;volatile
  4189                           
  4190                           ; BSR set to: 0
  4191                           
  4192                           ; BSR set to: 0
  4193  00120E  0100               	movlb	0	; () banked
  4194  001210  0100               	movlb	0	; () banked
  4195  001212  ADD4               	btfss	OpenUSART@config& (0+255),6,b
  4196  001214  D002               	goto	l546
  4197                           
  4198                           ; BSR set to: 0
  4199  001216  8A9D               	bsf	3997,5,c	;volatile
  4200  001218  D001               	goto	l547
  4201  00121A                     l546:
  4202                           
  4203                           ; BSR set to: 0
  4204  00121A  9A9D               	bcf	3997,5,c	;volatile
  4205  00121C                     l547:
  4206                           
  4207                           ; BSR set to: 0
  4208  00121C  9A9E               	bcf	3998,5,c	;volatile
  4209                           
  4210                           ; BSR set to: 0
  4211  00121E  0100               	movlb	0	; () banked
  4212  001220  0100               	movlb	0	; () banked
  4213  001222  AFD4               	btfss	OpenUSART@config& (0+255),7,b
  4214  001224  D002               	goto	l548
  4215                           
  4216                           ; BSR set to: 0
  4217  001226  889D               	bsf	3997,4,c	;volatile
  4218  001228  D001               	goto	l549
  4219  00122A                     l548:
  4220                           
  4221                           ; BSR set to: 0
  4222  00122A  989D               	bcf	3997,4,c	;volatile
  4223  00122C                     l549:
  4224                           
  4225                           ; BSR set to: 0
  4226  00122C  C0CF  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4227                           
  4228                           ; BSR set to: 0
  4229  001230  0100               	movlb	0	; () banked
  4230  001232  C0D0  F0D1         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4231  001236  C0D1  F0D2         	movff	??_OpenUSART,??_OpenUSART+1
  4232  00123A  0100               	movlb	0	; () banked
  4233  00123C  6BD3               	clrf	(??_OpenUSART+2)& (0+255),b
  4234  00123E  0100               	movlb	0	; () banked
  4235  001240  51D2               	movf	(??_OpenUSART+1)& (0+255),w,b
  4236  001242  6EB0               	movwf	4016,c	;volatile
  4237                           
  4238                           ; BSR set to: 0
  4239  001244  8AAC               	bsf	4012,5,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242  001246  8EAB               	bsf	4011,7,c	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245  001248  9C94               	bcf	3988,6,c	;volatile
  4246                           
  4247                           ; BSR set to: 0
  4248  00124A  8E94               	bsf	3988,7,c	;volatile
  4249                           
  4250                           ; BSR set to: 0
  4251  00124C  A8AC               	btfss	4012,4,c	;volatile
  4252  00124E  0012               	return	
  4253                           
  4254                           ; BSR set to: 0
  4255  001250  BEAC               	btfsc	4012,7,c	;volatile
  4256  001252  0012               	return	
  4257                           
  4258                           ; BSR set to: 0
  4259  001254  8C94               	bsf	3988,6,c	;volatile
  4260  001256  0012               	return	
  4261  001258                     __end_of_OpenUSART:
  4262                           	opt stack 0
  4263                           tblptru	equ	0xFF8
  4264                           tblptrh	equ	0xFF7
  4265                           tblptrl	equ	0xFF6
  4266                           tablat	equ	0xFF5
  4267                           prodh	equ	0xFF4
  4268                           prodl	equ	0xFF3
  4269                           intcon	equ	0xFF2
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           indf1	equ	0xFE7
  4273                           fsr1h	equ	0xFE2
  4274                           fsr1l	equ	0xFE1
  4275                           indf2	equ	0xFDF
  4276                           postinc2	equ	0xFDE
  4277                           postdec2	equ	0xFDD
  4278                           fsr2h	equ	0xFDA
  4279                           fsr2l	equ	0xFD9
  4280                           status	equ	0xFD8
  4281                           
  4282 ;; *************** function _OpenTimer1 *****************
  4283 ;; Defined at:
  4284 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  config          1    wreg     unsigned char 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  config          1   25[BANK0 ] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;		None               void
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4298 ;;      Params:         0       0       0       0       0
  4299 ;;      Locals:         0       1       0       0       0
  4300 ;;      Temps:          0       0       0       0       0
  4301 ;;      Totals:         0       1       0       0       0
  4302 ;;Total ram usage:        1 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:   11
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_main
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text27
  4313  0018DE                     __ptext27:
  4314                           	opt stack 0
  4315  0018DE                     _OpenTimer1:
  4316                           	opt stack 18
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;incstack = 0
  4320                           ;OpenTimer1@config stored from wreg
  4321  0018DE  CFE8 F0CF          	movff	wreg,OpenTimer1@config
  4322  0018E2  0100               	movlb	0	; () banked
  4323  0018E4  0100               	movlb	0	; () banked
  4324  0018E6  51CF               	movf	OpenTimer1@config& (0+255),w,b
  4325  0018E8  0B7E               	andlw	126
  4326  0018EA  6ECD               	movwf	4045,c	;volatile
  4327                           
  4328                           ; BSR set to: 0
  4329  0018EC  0100               	movlb	0	; () banked
  4330  0018EE  0100               	movlb	0	; () banked
  4331  0018F0  ADCF               	btfss	OpenTimer1@config& (0+255),6,b
  4332  0018F2  D002               	goto	l498
  4333                           
  4334                           ; BSR set to: 0
  4335  0018F4  8ECD               	bsf	4045,7,c	;volatile
  4336  0018F6  D001               	goto	l2494
  4337  0018F8                     l498:
  4338                           
  4339                           ; BSR set to: 0
  4340  0018F8  9ECD               	bcf	4045,7,c	;volatile
  4341  0018FA                     l2494:
  4342                           
  4343                           ; BSR set to: 0
  4344  0018FA  0E00               	movlw	0
  4345  0018FC  6ECF               	movwf	4047,c	;volatile
  4346  0018FE  0E00               	movlw	0
  4347  001900  6ECE               	movwf	4046,c	;volatile
  4348                           
  4349                           ; BSR set to: 0
  4350  001902  909E               	bcf	3998,0,c	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353  001904  0100               	movlb	0	; () banked
  4354  001906  0100               	movlb	0	; () banked
  4355  001908  AFCF               	btfss	OpenTimer1@config& (0+255),7,b
  4356  00190A  D002               	goto	l500
  4357                           
  4358                           ; BSR set to: 0
  4359  00190C  809D               	bsf	3997,0,c	;volatile
  4360  00190E  D001               	goto	l501
  4361  001910                     l500:
  4362                           
  4363                           ; BSR set to: 0
  4364  001910  909D               	bcf	3997,0,c	;volatile
  4365  001912                     l501:
  4366                           
  4367                           ; BSR set to: 0
  4368  001912  80CD               	bsf	4045,0,c	;volatile
  4369                           
  4370                           ; BSR set to: 0
  4371  001914  0012               	return	
  4372  001916                     __end_of_OpenTimer1:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           indf1	equ	0xFE7
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function _OpenTimer0 *****************
  4394 ;; Defined at:
  4395 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  config          1    wreg     unsigned char 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  config          1   25[BANK0 ] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;		None               void
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4409 ;;      Params:         0       0       0       0       0
  4410 ;;      Locals:         0       1       0       0       0
  4411 ;;      Temps:          0       0       0       0       0
  4412 ;;      Totals:         0       1       0       0       0
  4413 ;;Total ram usage:        1 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:   11
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text28
  4424  001A16                     __ptext28:
  4425                           	opt stack 0
  4426  001A16                     _OpenTimer0:
  4427                           	opt stack 18
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;incstack = 0
  4431                           ;OpenTimer0@config stored from wreg
  4432  001A16  CFE8 F0CF          	movff	wreg,OpenTimer0@config
  4433  001A1A  0100               	movlb	0	; () banked
  4434  001A1C  0100               	movlb	0	; () banked
  4435  001A1E  51CF               	movf	OpenTimer0@config& (0+255),w,b
  4436  001A20  0B7F               	andlw	127
  4437  001A22  6ED5               	movwf	4053,c	;volatile
  4438                           
  4439                           ; BSR set to: 0
  4440  001A24  0E00               	movlw	0
  4441  001A26  6ED7               	movwf	4055,c	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444  001A28  0E00               	movlw	0
  4445  001A2A  6ED6               	movwf	4054,c	;volatile
  4446                           
  4447                           ; BSR set to: 0
  4448  001A2C  94F2               	bcf	intcon,2,c	;volatile
  4449                           
  4450                           ; BSR set to: 0
  4451  001A2E  0100               	movlb	0	; () banked
  4452  001A30  0100               	movlb	0	; () banked
  4453  001A32  AFCF               	btfss	OpenTimer0@config& (0+255),7,b
  4454  001A34  D002               	goto	l474
  4455                           
  4456                           ; BSR set to: 0
  4457  001A36  8AF2               	bsf	intcon,5,c	;volatile
  4458  001A38  D001               	goto	l475
  4459  001A3A                     l474:
  4460                           
  4461                           ; BSR set to: 0
  4462  001A3A  9AF2               	bcf	intcon,5,c	;volatile
  4463  001A3C                     l475:
  4464                           
  4465                           ; BSR set to: 0
  4466  001A3C  8ED5               	bsf	4053,7,c	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469  001A3E  0012               	return	
  4470  001A40                     __end_of_OpenTimer0:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           prodh	equ	0xFF4
  4477                           prodl	equ	0xFF3
  4478                           intcon	equ	0xFF2
  4479                           postinc0	equ	0xFEE
  4480                           wreg	equ	0xFE8
  4481                           indf1	equ	0xFE7
  4482                           fsr1h	equ	0xFE2
  4483                           fsr1l	equ	0xFE1
  4484                           indf2	equ	0xFDF
  4485                           postinc2	equ	0xFDE
  4486                           postdec2	equ	0xFDD
  4487                           fsr2h	equ	0xFDA
  4488                           fsr2l	equ	0xFD9
  4489                           status	equ	0xFD8
  4490                           
  4491 ;; *************** function _InterruptHandlerLow *****************
  4492 ;; Defined at:
  4493 ;;		line 122 in file "../src/interrupts.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;		None               void
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4507 ;;      Params:         0       0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0
  4509 ;;      Temps:         17       0       0       0       0
  4510 ;;      Totals:        17       0       0       0       0
  4511 ;;Total ram usage:       17 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:   10
  4514 ;; This function calls:
  4515 ;;		_timer1_int_handler
  4516 ;;		_uart_recv_int_handler
  4517 ;; This function is called by:
  4518 ;;		Interrupt level 1
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	intcodelo
  4523  000018                     __pintcodelo:
  4524                           	opt stack 0
  4525  000018                     _InterruptHandlerLow:
  4526                           	opt stack 15
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;incstack = 0
  4530  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4531  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4532  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4533  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4534  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4535  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4536  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4537  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4538  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4539  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4540  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4541  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4542  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4543  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4544  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4545  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4546  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4547                           
  4548                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4549  00005C  A09E               	btfss	3998,0,c	;volatile
  4550  00005E  D003               	goto	i1l3820
  4551                           
  4552                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4553  000060  909E               	bcf	3998,0,c	;volatile
  4554                           
  4555                           ;interrupts.c: 126: timer1_int_handler();
  4556  000062  EC85  F00D         	call	_timer1_int_handler	;wreg free
  4557  000066                     i1l3820:
  4558                           
  4559                           ;interrupts.c: 127: }
  4560                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4561  000066  AA9E               	btfss	3998,5,c	;volatile
  4562  000068  D003               	goto	i1l49
  4563                           
  4564                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4565  00006A  9A9E               	bcf	3998,5,c	;volatile
  4566                           
  4567                           ;interrupts.c: 132: uart_recv_int_handler();
  4568  00006C  ECFC  F007         	call	_uart_recv_int_handler	;wreg free
  4569  000070                     i1l49:
  4570  000070  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4571  000074  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4572  000078  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4573  00007C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4574  000080  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4575  000084  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4576  000088  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4577  00008C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4578  000090  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4579  000094  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4580  000098  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4581  00009C  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4582  0000A0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4583  0000A4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4584  0000A8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4585  0000AC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4586  0000B0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  4587  0000B4  0010               	retfie	
  4588  0000B6                     __end_of_InterruptHandlerLow:
  4589                           	opt stack 0
  4590                           pclatu	equ	0xFFB
  4591                           pclath	equ	0xFFA
  4592                           tblptru	equ	0xFF8
  4593                           tblptrh	equ	0xFF7
  4594                           tblptrl	equ	0xFF6
  4595                           tablat	equ	0xFF5
  4596                           prodh	equ	0xFF4
  4597                           prodl	equ	0xFF3
  4598                           intcon	equ	0xFF2
  4599                           postinc0	equ	0xFEE
  4600                           fsr0h	equ	0xFEA
  4601                           fsr0l	equ	0xFE9
  4602                           wreg	equ	0xFE8
  4603                           indf1	equ	0xFE7
  4604                           fsr1h	equ	0xFE2
  4605                           fsr1l	equ	0xFE1
  4606                           bsr	equ	0xFE0
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _uart_recv_int_handler *****************
  4615 ;; Defined at:
  4616 ;;		line 11 in file "../src/my_uart.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0
  4632 ;;      Temps:          1       0       0       0       0
  4633 ;;      Totals:         1       0       0       0       0
  4634 ;;Total ram usage:        1 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    9
  4637 ;; This function calls:
  4638 ;;		_ReadUSART
  4639 ;;		_ToMainLow_sendmsg
  4640 ;; This function is called by:
  4641 ;;		_InterruptHandlerLow
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text30
  4646  000FF8                     __ptext30:
  4647                           	opt stack 0
  4648  000FF8                     _uart_recv_int_handler:
  4649                           	opt stack 15
  4650                           
  4651                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4652                           
  4653                           ;incstack = 0
  4654  000FF8  AA9E               	btfss	3998,5,c	;volatile
  4655  000FFA  D03C               	goto	i1l3808
  4656                           
  4657                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4658  000FFC  EE20 F004          	lfsr	2,4
  4659  001000  5050               	movf	_uc_ptr,w,c
  4660  001002  26D9               	addwf	fsr2l,f,c
  4661  001004  5051               	movf	_uc_ptr+1,w,c
  4662  001006  22DA               	addwfc	fsr2h,f,c
  4663  001008  50DF               	movf	indf2,w,c
  4664  00100A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4665  00100C  501B               	movf	??_uart_recv_int_handler,w,c
  4666  00100E  0D01               	mullw	1
  4667  001010  50F3               	movf	prodl,w,c
  4668  001012  2450               	addwf	_uc_ptr,w,c
  4669  001014  6ED9               	movwf	fsr2l,c
  4670  001016  50F4               	movf	prodh,w,c
  4671  001018  2051               	addwfc	_uc_ptr+1,w,c
  4672  00101A  6EDA               	movwf	fsr2h,c
  4673  00101C  EC67  F00D         	call	_ReadUSART	;wreg free
  4674  001020  6EDF               	movwf	indf2,c
  4675                           
  4676                           ;my_uart.c: 25: uc_ptr->buflen++;
  4677  001022  EE20 F004          	lfsr	2,4
  4678  001026  5050               	movf	_uc_ptr,w,c
  4679  001028  26D9               	addwf	fsr2l,f,c
  4680  00102A  5051               	movf	_uc_ptr+1,w,c
  4681  00102C  22DA               	addwfc	fsr2h,f,c
  4682  00102E  2ADF               	incf	indf2,f,c
  4683                           
  4684                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  4685  001030  EE20 F004          	lfsr	2,4
  4686  001034  5050               	movf	_uc_ptr,w,c
  4687  001036  26D9               	addwf	fsr2l,f,c
  4688  001038  5051               	movf	_uc_ptr+1,w,c
  4689  00103A  22DA               	addwfc	fsr2h,f,c
  4690  00103C  0E04               	movlw	4
  4691  00103E  62DF               	cpfseq	indf2,c
  4692  001040  D019               	goto	i1l3808
  4693                           
  4694                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4695  001042  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4696  001044  0E1F               	movlw	31
  4697  001046  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4698  001048  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4699  00104A  C051  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4700  00104E  C050  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4701  001052  EE20 F004          	lfsr	2,4
  4702  001056  5050               	movf	_uc_ptr,w,c
  4703  001058  26D9               	addwf	fsr2l,f,c
  4704  00105A  5051               	movf	_uc_ptr+1,w,c
  4705  00105C  22DA               	addwfc	fsr2h,f,c
  4706  00105E  50DF               	movf	indf2,w,c
  4707  001060  EC20  F00D         	call	_ToMainLow_sendmsg
  4708                           
  4709                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  4710  001064  EE20 F004          	lfsr	2,4
  4711  001068  5050               	movf	_uc_ptr,w,c
  4712  00106A  26D9               	addwf	fsr2l,f,c
  4713  00106C  5051               	movf	_uc_ptr+1,w,c
  4714  00106E  22DA               	addwfc	fsr2h,f,c
  4715  001070  0E00               	movlw	0
  4716  001072  6EDF               	movwf	indf2,c
  4717  001074                     i1l3808:
  4718                           
  4719                           ;my_uart.c: 30: }
  4720                           ;my_uart.c: 31: }
  4721                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  4722  001074  A64C               	btfss	_USART_Status,3,c
  4723  001076  0012               	return	
  4724                           
  4725                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  4726  001078  98AB               	bcf	4011,4,c	;volatile
  4727                           
  4728                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  4729  00107A  88AB               	bsf	4011,4,c	;volatile
  4730                           
  4731                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  4732  00107C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4733  00107E  0E1E               	movlw	30
  4734  001080  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4735  001082  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4736  001084  0E00               	movlw	0
  4737  001086  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4738  001088  0E00               	movlw	0
  4739  00108A  6E18               	movwf	ToMainLow_sendmsg@data,c
  4740  00108C  0E00               	movlw	0
  4741  00108E  EC20  F00D         	call	_ToMainLow_sendmsg
  4742  001092  0012               	return	
  4743  001094                     __end_of_uart_recv_int_handler:
  4744                           	opt stack 0
  4745                           pclatu	equ	0xFFB
  4746                           pclath	equ	0xFFA
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           prodh	equ	0xFF4
  4752                           prodl	equ	0xFF3
  4753                           intcon	equ	0xFF2
  4754                           postinc0	equ	0xFEE
  4755                           fsr0h	equ	0xFEA
  4756                           fsr0l	equ	0xFE9
  4757                           wreg	equ	0xFE8
  4758                           indf1	equ	0xFE7
  4759                           fsr1h	equ	0xFE2
  4760                           fsr1l	equ	0xFE1
  4761                           bsr	equ	0xFE0
  4762                           indf2	equ	0xFDF
  4763                           postinc2	equ	0xFDE
  4764                           postdec2	equ	0xFDD
  4765                           fsr2h	equ	0xFDA
  4766                           fsr2l	equ	0xFD9
  4767                           status	equ	0xFD8
  4768                           
  4769 ;; *************** function _ToMainLow_sendmsg *****************
  4770 ;; Defined at:
  4771 ;;		line 103 in file "../src/messages.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  length          1    wreg     unsigned char 
  4774 ;;  msgtype         1   22[COMRAM] unsigned char 
  4775 ;;  data            2   23[COMRAM] PTR void 
  4776 ;;		 -> NULL(0), main@uc(5), 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  length          1   25[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      char 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4788 ;;      Params:         3       0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0
  4791 ;;      Totals:         4       0       0       0       0
  4792 ;;Total ram usage:        4 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    8
  4795 ;; This function calls:
  4796 ;;		i1_send_msg
  4797 ;; This function is called by:
  4798 ;;		_uart_recv_int_handler
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text31
  4803  001A40                     __ptext31:
  4804                           	opt stack 0
  4805  001A40                     _ToMainLow_sendmsg:
  4806                           	opt stack 15
  4807                           
  4808                           ;incstack = 0
  4809                           ;ToMainLow_sendmsg@length stored from wreg
  4810  001A40  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  4811                           
  4812                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4813                           ;	Return value of _ToMainLow_sendmsg is never used
  4814  001A44  0100               	movlb	0	; () banked
  4815  001A46  0E00               	movlw	high _ToMainLow_MQ
  4816  001A48  6E0C               	movwf	i1send_msg@qptr+1,c
  4817  001A4A  0100               	movlb	0	; () banked
  4818  001A4C  0E80               	movlw	low _ToMainLow_MQ
  4819  001A4E  6E0B               	movwf	i1send_msg@qptr,c
  4820  001A50  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4821  001A54  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4822  001A58  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  4823  001A5C  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4824  001A60  EC52  F007         	call	i1_send_msg	;wreg free
  4825  001A64  0012               	return	
  4826  001A66                     __end_of_ToMainLow_sendmsg:
  4827                           	opt stack 0
  4828                           pclatu	equ	0xFFB
  4829                           pclath	equ	0xFFA
  4830                           tblptru	equ	0xFF8
  4831                           tblptrh	equ	0xFF7
  4832                           tblptrl	equ	0xFF6
  4833                           tablat	equ	0xFF5
  4834                           prodh	equ	0xFF4
  4835                           prodl	equ	0xFF3
  4836                           intcon	equ	0xFF2
  4837                           postinc0	equ	0xFEE
  4838                           fsr0h	equ	0xFEA
  4839                           fsr0l	equ	0xFE9
  4840                           wreg	equ	0xFE8
  4841                           indf1	equ	0xFE7
  4842                           fsr1h	equ	0xFE2
  4843                           fsr1l	equ	0xFE1
  4844                           bsr	equ	0xFE0
  4845                           indf2	equ	0xFDF
  4846                           postinc2	equ	0xFDE
  4847                           postdec2	equ	0xFDD
  4848                           fsr2h	equ	0xFDA
  4849                           fsr2l	equ	0xFD9
  4850                           status	equ	0xFD8
  4851                           
  4852 ;; *************** function i1_send_msg *****************
  4853 ;; Defined at:
  4854 ;;		line 24 in file "../src/messages.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4857 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4858 ;;  length          1   12[COMRAM] unsigned char 
  4859 ;;  msgtype         1   13[COMRAM] unsigned char 
  4860 ;;  data            2   14[COMRAM] PTR void 
  4861 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(53), 
  4862 ;;		 -> main@uc(5), 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4865 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4866 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4867 ;;  send_msg        2   17[COMRAM] unsigned int 
  4868 ;;  send_msg        1   19[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      char 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4878 ;;      Params:         6       0       0       0       0
  4879 ;;      Locals:         5       0       0       0       0
  4880 ;;      Temps:          1       0       0       0       0
  4881 ;;      Totals:        12       0       0       0       0
  4882 ;;Total ram usage:       12 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    7
  4885 ;; This function calls:
  4886 ;;		i1_memcpy
  4887 ;; This function is called by:
  4888 ;;		_ToMainLow_sendmsg
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text32
  4893  000EA4                     __ptext32:
  4894                           	opt stack 0
  4895  000EA4                     i1_send_msg:
  4896                           	opt stack 15
  4897                           
  4898                           ;messages.c: 25: unsigned char slot;
  4899                           ;messages.c: 27: msg *qmsg;
  4900                           ;messages.c: 28: size_t tlength = length;
  4901                           
  4902                           ;incstack = 0
  4903  000EA4  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4904  000EA8  6A13               	clrf	i1send_msg@tlength+1,c
  4905                           
  4906                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4907  000EAA  EE20 F034          	lfsr	2,52
  4908  000EAE  500B               	movf	i1send_msg@qptr,w,c
  4909  000EB0  26D9               	addwf	fsr2l,f,c
  4910  000EB2  500C               	movf	i1send_msg@qptr+1,w,c
  4911  000EB4  22DA               	addwfc	fsr2h,f,c
  4912  000EB6  50DF               	movf	indf2,w,c
  4913  000EB8  6E14               	movwf	i1send_msg@slot,c
  4914                           
  4915                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4916  000EBA  5014               	movf	i1send_msg@slot,w,c
  4917  000EBC  0D0D               	mullw	13
  4918  000EBE  50F3               	movf	prodl,w,c
  4919  000EC0  240B               	addwf	i1send_msg@qptr,w,c
  4920  000EC2  6E15               	movwf	i1send_msg@qmsg,c
  4921  000EC4  50F4               	movf	prodh,w,c
  4922  000EC6  200C               	addwfc	i1send_msg@qptr+1,w,c
  4923  000EC8  6E16               	movwf	i1send_msg@qmsg+1,c
  4924                           
  4925                           ;messages.c: 41: if (qmsg->full != 0) {
  4926  000ECA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4927  000ECE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4928  000ED2  50DF               	movf	indf2,w,c
  4929  000ED4  B4D8               	btfsc	status,2,c
  4930  000ED6  D002               	goto	i1l3780
  4931                           
  4932                           ;messages.c: 42: return (-1);
  4933  000ED8  0EFF               	movlw	255
  4934  000EDA  0012               	return	
  4935  000EDC                     i1l3780:
  4936                           
  4937                           ;messages.c: 43: }
  4938                           ;messages.c: 46: qmsg->length = length;
  4939  000EDC  EE20 F001          	lfsr	2,1
  4940  000EE0  5015               	movf	i1send_msg@qmsg,w,c
  4941  000EE2  26D9               	addwf	fsr2l,f,c
  4942  000EE4  5016               	movf	i1send_msg@qmsg+1,w,c
  4943  000EE6  22DA               	addwfc	fsr2h,f,c
  4944  000EE8  C00D  FFDF         	movff	i1send_msg@length,indf2
  4945                           
  4946                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4947  000EEC  EE20 F002          	lfsr	2,2
  4948  000EF0  5015               	movf	i1send_msg@qmsg,w,c
  4949  000EF2  26D9               	addwf	fsr2l,f,c
  4950  000EF4  5016               	movf	i1send_msg@qmsg+1,w,c
  4951  000EF6  22DA               	addwfc	fsr2h,f,c
  4952  000EF8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4953                           
  4954                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4955  000EFC  0E03               	movlw	3
  4956  000EFE  2415               	addwf	i1send_msg@qmsg,w,c
  4957  000F00  6E01               	movwf	i1memcpy@d1,c
  4958  000F02  0E00               	movlw	0
  4959  000F04  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4960  000F06  6E02               	movwf	i1memcpy@d1+1,c
  4961  000F08  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  4962  000F0C  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  4963  000F10  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  4964  000F14  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  4965  000F18  ECF2  F00B         	call	i1_memcpy	;wreg free
  4966                           
  4967                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4968  000F1C  EE20 F034          	lfsr	2,52
  4969  000F20  500B               	movf	i1send_msg@qptr,w,c
  4970  000F22  26D9               	addwf	fsr2l,f,c
  4971  000F24  500C               	movf	i1send_msg@qptr+1,w,c
  4972  000F26  22DA               	addwfc	fsr2h,f,c
  4973  000F28  EE10 F034          	lfsr	1,52
  4974  000F2C  500B               	movf	i1send_msg@qptr,w,c
  4975  000F2E  26E1               	addwf	fsr1l,f,c
  4976  000F30  500C               	movf	i1send_msg@qptr+1,w,c
  4977  000F32  22E2               	addwfc	fsr1h,f,c
  4978  000F34  50E7               	movf	indf1,w,c
  4979  000F36  6E11               	movwf	??i1_send_msg& (0+255),c
  4980  000F38  2811               	incf	??i1_send_msg,w,c
  4981  000F3A  0B03               	andlw	3
  4982  000F3C  6EDF               	movwf	indf2,c
  4983                           
  4984                           ;messages.c: 59: qmsg->full = 1;
  4985  000F3E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4986  000F42  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4987  000F46  0E01               	movlw	1
  4988  000F48  6EDF               	movwf	indf2,c
  4989                           
  4990                           ;messages.c: 60: return (1);
  4991  000F4A  0E01               	movlw	1
  4992  000F4C  0012               	return	
  4993  000F4E                     __end_ofi1_send_msg:
  4994                           	opt stack 0
  4995                           pclatu	equ	0xFFB
  4996                           pclath	equ	0xFFA
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           postinc0	equ	0xFEE
  5005                           fsr0h	equ	0xFEA
  5006                           fsr0l	equ	0xFE9
  5007                           wreg	equ	0xFE8
  5008                           indf1	equ	0xFE7
  5009                           fsr1h	equ	0xFE2
  5010                           fsr1l	equ	0xFE1
  5011                           bsr	equ	0xFE0
  5012                           indf2	equ	0xFDF
  5013                           postinc2	equ	0xFDE
  5014                           postdec2	equ	0xFDD
  5015                           fsr2h	equ	0xFDA
  5016                           fsr2l	equ	0xFD9
  5017                           status	equ	0xFD8
  5018                           
  5019 ;; *************** function i1_memcpy *****************
  5020 ;; Defined at:
  5021 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  d1              2    0[COMRAM] PTR void 
  5024 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5025 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5026 ;;		 -> main@msgbuffer(11), 
  5027 ;;  s1              2    2[COMRAM] PTR const void 
  5028 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5029 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5030 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5031 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  5032 ;;		 -> main@uc(5), 
  5033 ;;  n               2    4[COMRAM] unsigned int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5036 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5037 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5038 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5039 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  5040 ;;		 -> main@uc(5), 
  5041 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5042 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5043 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5044 ;;		 -> main@msgbuffer(11), 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2    0[COMRAM] PTR void 
  5047 ;; Registers used:
  5048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5054 ;;      Params:         6       0       0       0       0
  5055 ;;      Locals:         4       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0
  5057 ;;      Totals:        10       0       0       0       0
  5058 ;;Total ram usage:       10 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    6
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		i1_send_msg
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text33
  5069  0017E4                     __ptext33:
  5070                           	opt stack 0
  5071  0017E4                     i1_memcpy:
  5072                           	opt stack 15
  5073                           
  5074                           ;incstack = 0
  5075  0017E4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5076  0017E8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5077  0017EC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5078  0017F0  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5079  0017F4  D00E               	goto	i1l3756
  5080  0017F6                     i1l3750:
  5081  0017F6  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5082  0017FA  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5083  0017FE  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5084  001802  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5085  001806  CFDF FFE7          	movff	indf2,indf1
  5086  00180A  4A09               	infsnz	i1memcpy@s,f,c
  5087  00180C  2A0A               	incf	i1memcpy@s+1,f,c
  5088  00180E  4A07               	infsnz	i1memcpy@d,f,c
  5089  001810  2A08               	incf	i1memcpy@d+1,f,c
  5090  001812                     i1l3756:
  5091  001812  0605               	decf	i1memcpy@n,f,c
  5092  001814  A0D8               	btfss	status,0,c
  5093  001816  0606               	decf	i1memcpy@n+1,f,c
  5094  001818  2805               	incf	i1memcpy@n& (0+255),w,c
  5095  00181A  B4D8               	btfsc	status,2,c
  5096  00181C  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5097  00181E  B4D8               	btfsc	status,2,c
  5098                           
  5099                           ;	Return value of i1_memcpy is never used
  5100  001820  0012               	return	
  5101  001822  D7E9               	goto	i1l3750
  5102  001824                     __end_ofi1_memcpy:
  5103                           	opt stack 0
  5104                           pclatu	equ	0xFFB
  5105                           pclath	equ	0xFFA
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           postinc0	equ	0xFEE
  5114                           fsr0h	equ	0xFEA
  5115                           fsr0l	equ	0xFE9
  5116                           wreg	equ	0xFE8
  5117                           indf1	equ	0xFE7
  5118                           fsr1h	equ	0xFE2
  5119                           fsr1l	equ	0xFE1
  5120                           bsr	equ	0xFE0
  5121                           indf2	equ	0xFDF
  5122                           postinc2	equ	0xFDE
  5123                           postdec2	equ	0xFDD
  5124                           fsr2h	equ	0xFDA
  5125                           fsr2l	equ	0xFD9
  5126                           status	equ	0xFD8
  5127                           
  5128 ;; *************** function _ReadUSART *****************
  5129 ;; Defined at:
  5130 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  data            1    0[COMRAM] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      unsigned char 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5144 ;;      Params:         0       0       0       0       0
  5145 ;;      Locals:         1       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0
  5147 ;;      Totals:         1       0       0       0       0
  5148 ;;Total ram usage:        1 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    6
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_uart_recv_int_handler
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text34
  5159  001ACE                     __ptext34:
  5160                           	opt stack 0
  5161  001ACE                     _ReadUSART:
  5162                           	opt stack 17
  5163                           
  5164                           ;incstack = 0
  5165  001ACE  0EF2               	movlw	242
  5166  001AD0  164C               	andwf	_USART_Status,f,c
  5167  001AD2  ACAB               	btfss	4011,6,c	;volatile
  5168  001AD4  D003               	goto	i1l560
  5169  001AD6  904C               	bcf	_USART_Status,0,c
  5170  001AD8  B0AB               	btfsc	4011,0,c	;volatile
  5171  001ADA  804C               	bsf	_USART_Status,0,c
  5172  001ADC                     i1l560:
  5173  001ADC  B4AB               	btfsc	4011,2,c	;volatile
  5174  001ADE  844C               	bsf	_USART_Status,2,c
  5175  001AE0  B2AB               	btfsc	4011,1,c	;volatile
  5176  001AE2  864C               	bsf	_USART_Status,3,c
  5177  001AE4  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5178  001AE8  5001               	movf	ReadUSART@data,w,c
  5179  001AEA  0012               	return	
  5180  001AEC                     __end_of_ReadUSART:
  5181                           	opt stack 0
  5182                           pclatu	equ	0xFFB
  5183                           pclath	equ	0xFFA
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           fsr0h	equ	0xFEA
  5193                           fsr0l	equ	0xFE9
  5194                           wreg	equ	0xFE8
  5195                           indf1	equ	0xFE7
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           bsr	equ	0xFE0
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           postdec2	equ	0xFDD
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _timer1_int_handler *****************
  5207 ;; Defined at:
  5208 ;;		line 34 in file "../src/user_interrupts.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  result          2    4[COMRAM] unsigned int 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5222 ;;      Params:         0       0       0       0       0
  5223 ;;      Locals:         2       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0
  5225 ;;      Totals:         2       0       0       0       0
  5226 ;;Total ram usage:        2 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    7
  5229 ;; This function calls:
  5230 ;;		_ReadTimer1
  5231 ;;		_WriteTimer1
  5232 ;; This function is called by:
  5233 ;;		_InterruptHandlerLow
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text35
  5238  001B0A                     __ptext35:
  5239                           	opt stack 0
  5240  001B0A                     _timer1_int_handler:
  5241                           	opt stack 17
  5242                           
  5243                           ;user_interrupts.c: 35: unsigned int result;
  5244                           ;user_interrupts.c: 37: result = ReadTimer1();
  5245                           
  5246                           ;incstack = 0
  5247  001B0A  ECCB  F00D         	call	_ReadTimer1	;wreg free
  5248  001B0E  C001  F005         	movff	?_ReadTimer1,timer1_int_handler@result
  5249  001B12  C002  F006         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5250                           
  5251                           ;user_interrupts.c: 42: WriteTimer1(0);
  5252  001B16  0E00               	movlw	0
  5253  001B18  6E02               	movwf	WriteTimer1@timer1+1,c
  5254  001B1A  0E00               	movlw	0
  5255  001B1C  6E01               	movwf	WriteTimer1@timer1,c
  5256  001B1E  ECC2  F00D         	call	_WriteTimer1	;wreg free
  5257  001B22  0012               	return	
  5258  001B24                     __end_of_timer1_int_handler:
  5259                           	opt stack 0
  5260                           pclatu	equ	0xFFB
  5261                           pclath	equ	0xFFA
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           prodh	equ	0xFF4
  5267                           prodl	equ	0xFF3
  5268                           intcon	equ	0xFF2
  5269                           postinc0	equ	0xFEE
  5270                           fsr0h	equ	0xFEA
  5271                           fsr0l	equ	0xFE9
  5272                           wreg	equ	0xFE8
  5273                           indf1	equ	0xFE7
  5274                           fsr1h	equ	0xFE2
  5275                           fsr1l	equ	0xFE1
  5276                           bsr	equ	0xFE0
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _WriteTimer1 *****************
  5285 ;; Defined at:
  5286 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  timer1          2    0[COMRAM] unsigned int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  timer           2    2[COMRAM] struct Timers
  5291 ;; Return value:  Size  Location     Type
  5292 ;;		None               void
  5293 ;; Registers used:
  5294 ;;		None
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5300 ;;      Params:         2       0       0       0       0
  5301 ;;      Locals:         2       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:         4       0       0       0       0
  5304 ;;Total ram usage:        4 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    6
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_timer1_int_handler
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text36
  5315  001B84                     __ptext36:
  5316                           	opt stack 0
  5317  001B84                     _WriteTimer1:
  5318                           	opt stack 17
  5319                           
  5320                           ;incstack = 0
  5321  001B84  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5322  001B88  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5323  001B8C  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5324  001B90  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5325  001B94  0012               	return	
  5326  001B96                     __end_of_WriteTimer1:
  5327                           	opt stack 0
  5328                           pclatu	equ	0xFFB
  5329                           pclath	equ	0xFFA
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           fsr0h	equ	0xFEA
  5339                           fsr0l	equ	0xFE9
  5340                           wreg	equ	0xFE8
  5341                           indf1	equ	0xFE7
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           bsr	equ	0xFE0
  5345                           indf2	equ	0xFDF
  5346                           postinc2	equ	0xFDE
  5347                           postdec2	equ	0xFDD
  5348                           fsr2h	equ	0xFDA
  5349                           fsr2l	equ	0xFD9
  5350                           status	equ	0xFD8
  5351                           
  5352 ;; *************** function _ReadTimer1 *****************
  5353 ;; Defined at:
  5354 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  timer           2    2[COMRAM] struct Timers
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  2    0[COMRAM] unsigned int 
  5361 ;; Registers used:
  5362 ;;		None
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5368 ;;      Params:         2       0       0       0       0
  5369 ;;      Locals:         2       0       0       0       0
  5370 ;;      Temps:          0       0       0       0       0
  5371 ;;      Totals:         4       0       0       0       0
  5372 ;;Total ram usage:        4 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    6
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_timer1_int_handler
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text37
  5383  001B96                     __ptext37:
  5384                           	opt stack 0
  5385  001B96                     _ReadTimer1:
  5386                           	opt stack 17
  5387                           
  5388                           ;incstack = 0
  5389  001B96  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5390  001B9A  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5391  001B9E  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5392  001BA2  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5393  001BA6  0012               	return	
  5394  001BA8                     __end_of_ReadTimer1:
  5395                           	opt stack 0
  5396                           pclatu	equ	0xFFB
  5397                           pclath	equ	0xFFA
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           intcon	equ	0xFF2
  5405                           postinc0	equ	0xFEE
  5406                           fsr0h	equ	0xFEA
  5407                           fsr0l	equ	0xFE9
  5408                           wreg	equ	0xFE8
  5409                           indf1	equ	0xFE7
  5410                           fsr1h	equ	0xFE2
  5411                           fsr1l	equ	0xFE1
  5412                           bsr	equ	0xFE0
  5413                           indf2	equ	0xFDF
  5414                           postinc2	equ	0xFDE
  5415                           postdec2	equ	0xFDD
  5416                           fsr2h	equ	0xFDA
  5417                           fsr2l	equ	0xFD9
  5418                           status	equ	0xFD8
  5419                           
  5420 ;; *************** function _InterruptHandlerHigh *****************
  5421 ;; Defined at:
  5422 ;;		line 83 in file "../src/interrupts.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;		None               void
  5429 ;; Registers used:
  5430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5436 ;;      Params:         0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0
  5438 ;;      Temps:          0      14       0       0       0
  5439 ;;      Totals:         0      14       0       0       0
  5440 ;;Total ram usage:       14 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    5
  5443 ;; This function calls:
  5444 ;;		_SleepIfOkay
  5445 ;;		_i2c_int_handler
  5446 ;;		_timer0_int_handler
  5447 ;; This function is called by:
  5448 ;;		Interrupt level 2
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	intcode
  5453  000008                     __pintcode:
  5454                           	opt stack 0
  5455  000008                     _InterruptHandlerHigh:
  5456                           	opt stack 15
  5457                           
  5458                           ;incstack = 0
  5459  000008  CFFA F0C1          	movff	pclath,??_InterruptHandlerHigh
  5460  00000C  CFFB F0C2          	movff	pclatu,??_InterruptHandlerHigh+1
  5461  000010  EF71  F009         	goto	int_func
  5462                           pclatu	equ	0xFFB
  5463                           pclath	equ	0xFFA
  5464                           tblptru	equ	0xFF8
  5465                           tblptrh	equ	0xFF7
  5466                           tblptrl	equ	0xFF6
  5467                           tablat	equ	0xFF5
  5468                           prodh	equ	0xFF4
  5469                           prodl	equ	0xFF3
  5470                           intcon	equ	0xFF2
  5471                           postinc0	equ	0xFEE
  5472                           fsr0h	equ	0xFEA
  5473                           fsr0l	equ	0xFE9
  5474                           wreg	equ	0xFE8
  5475                           indf1	equ	0xFE7
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           bsr	equ	0xFE0
  5479                           indf2	equ	0xFDF
  5480                           postinc2	equ	0xFDE
  5481                           postdec2	equ	0xFDD
  5482                           fsr2h	equ	0xFDA
  5483                           fsr2l	equ	0xFD9
  5484                           status	equ	0xFD8
  5485                           
  5486                           	psect	intcode_body
  5487  0012E2                     __pintcode_body:
  5488                           	opt stack 15
  5489  0012E2                     int_func:
  5490                           	opt stack 15
  5491  0012E2  CFE9 F0C3          	movff	fsr0l,??_InterruptHandlerHigh+2
  5492  0012E6  CFEA F0C4          	movff	fsr0h,??_InterruptHandlerHigh+3
  5493  0012EA  CFE1 F0C5          	movff	fsr1l,??_InterruptHandlerHigh+4
  5494  0012EE  CFE2 F0C6          	movff	fsr1h,??_InterruptHandlerHigh+5
  5495  0012F2  CFD9 F0C7          	movff	fsr2l,??_InterruptHandlerHigh+6
  5496  0012F6  CFDA F0C8          	movff	fsr2h,??_InterruptHandlerHigh+7
  5497  0012FA  CFF3 F0C9          	movff	prodl,??_InterruptHandlerHigh+8
  5498  0012FE  CFF4 F0CA          	movff	prodh,??_InterruptHandlerHigh+9
  5499  001302  CFF6 F0CB          	movff	tblptrl,??_InterruptHandlerHigh+10
  5500  001306  CFF7 F0CC          	movff	tblptrh,??_InterruptHandlerHigh+11
  5501  00130A  CFF8 F0CD          	movff	tblptru,??_InterruptHandlerHigh+12
  5502  00130E  CFF5 F0CE          	movff	tablat,??_InterruptHandlerHigh+13
  5503                           
  5504                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5505  001312  A69E               	btfss	3998,3,c	;volatile
  5506  001314  D003               	goto	i2l3276
  5507                           
  5508                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5509  001316  969E               	bcf	3998,3,c	;volatile
  5510                           
  5511                           ;interrupts.c: 92: i2c_int_handler();
  5512  001318  EC76  F00D         	call	_i2c_int_handler	;wreg free
  5513  00131C                     i2l3276:
  5514                           
  5515                           ;interrupts.c: 93: }
  5516                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5517  00131C  A4F2               	btfss	intcon,2,c	;volatile
  5518  00131E  D003               	goto	i2l3282
  5519                           
  5520                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5521  001320  94F2               	bcf	intcon,2,c	;volatile
  5522                           
  5523                           ;interrupts.c: 99: timer0_int_handler();
  5524  001322  ECDB  F00C         	call	_timer0_int_handler	;wreg free
  5525  001326                     i2l3282:
  5526                           
  5527                           ;interrupts.c: 100: }
  5528                           ;interrupts.c: 109: SleepIfOkay();
  5529  001326  ECFF  F00A         	call	_SleepIfOkay	;wreg free
  5530  00132A  C0CE  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5531  00132E  C0CD  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5532  001332  C0CC  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5533  001336  C0CB  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5534  00133A  C0CA  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5535  00133E  C0C9  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5536  001342  C0C8  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5537  001346  C0C7  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5538  00134A  C0C6  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5539  00134E  C0C5  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5540  001352  C0C4  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5541  001356  C0C3  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5542  00135A  C0C2  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5543  00135E  C0C1  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5544  001362  0011               	retfie		f
  5545  001364                     __end_of_InterruptHandlerHigh:
  5546                           	opt stack 0
  5547                           pclatu	equ	0xFFB
  5548                           pclath	equ	0xFFA
  5549                           tblptru	equ	0xFF8
  5550                           tblptrh	equ	0xFF7
  5551                           tblptrl	equ	0xFF6
  5552                           tablat	equ	0xFF5
  5553                           prodh	equ	0xFF4
  5554                           prodl	equ	0xFF3
  5555                           intcon	equ	0xFF2
  5556                           postinc0	equ	0xFEE
  5557                           fsr0h	equ	0xFEA
  5558                           fsr0l	equ	0xFE9
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           fsr1h	equ	0xFE2
  5562                           fsr1l	equ	0xFE1
  5563                           bsr	equ	0xFE0
  5564                           indf2	equ	0xFDF
  5565                           postinc2	equ	0xFDE
  5566                           postdec2	equ	0xFDD
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _timer0_int_handler *****************
  5572 ;; Defined at:
  5573 ;;		line 16 in file "../src/user_interrupts.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;		None
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  msgtype         2    0        int 
  5578 ;;  length          2    0        int 
  5579 ;;  val             1   49[COMRAM] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;		None               void
  5582 ;; Registers used:
  5583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5589 ;;      Params:         0       0       0       0       0
  5590 ;;      Locals:         1       0       0       0       0
  5591 ;;      Temps:          1       0       0       0       0
  5592 ;;      Totals:         2       0       0       0       0
  5593 ;;Total ram usage:        2 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    1
  5596 ;; This function calls:
  5597 ;;		_WriteTimer0
  5598 ;;		_i2c_configure_master
  5599 ;;		_i2c_master_recv
  5600 ;; This function is called by:
  5601 ;;		_InterruptHandlerHigh
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text39
  5606  0019B6                     __ptext39:
  5607                           	opt stack 0
  5608  0019B6                     _timer0_int_handler:
  5609                           	opt stack 18
  5610                           
  5611                           ;user_interrupts.c: 17: unsigned char val = 0x32;
  5612                           
  5613                           ;incstack = 0
  5614  0019B6  6E31               	movwf	??_timer0_int_handler& (0+255),c
  5615  0019B8  0E32               	movlw	50
  5616  0019BA  6E32               	movwf	timer0_int_handler@val,c
  5617  0019BC  5031               	movf	??_timer0_int_handler& (0+255),w,c
  5618                           
  5619                           ;user_interrupts.c: 18: int length, msgtype;
  5620                           ;user_interrupts.c: 21: WriteTimer0(0);
  5621  0019BE  0E00               	movlw	0
  5622  0019C0  6E2E               	movwf	WriteTimer0@timer0+1,c
  5623  0019C2  0E00               	movlw	0
  5624  0019C4  6E2D               	movwf	WriteTimer0@timer0,c
  5625  0019C6  ECD4  F00D         	call	_WriteTimer0	;wreg free
  5626                           
  5627                           ;user_interrupts.c: 22: if(x == 0)
  5628  0019CA  504A               	movf	_x+1,w,c
  5629  0019CC  1049               	iorwf	_x,w,c
  5630  0019CE  A4D8               	btfss	status,2,c
  5631  0019D0  0012               	return	
  5632                           
  5633                           ;user_interrupts.c: 23: {
  5634                           ;user_interrupts.c: 24: x= 1;
  5635  0019D2  0E00               	movlw	0
  5636  0019D4  6E4A               	movwf	_x+1,c
  5637  0019D6  0E01               	movlw	1
  5638  0019D8  6E49               	movwf	_x,c
  5639                           
  5640                           ;user_interrupts.c: 25: i2c_configure_master(0x4D);
  5641  0019DA  0E4D               	movlw	77
  5642  0019DC  EC8E  F00B         	call	_i2c_configure_master
  5643                           
  5644                           ;user_interrupts.c: 26: i2c_master_recv(0x6);
  5645  0019E0  0E06               	movlw	6
  5646  0019E2  EC51  F00C         	call	_i2c_master_recv
  5647  0019E6  0012               	return	
  5648  0019E8                     __end_of_timer0_int_handler:
  5649                           	opt stack 0
  5650                           pclatu	equ	0xFFB
  5651                           pclath	equ	0xFFA
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           prodh	equ	0xFF4
  5657                           prodl	equ	0xFF3
  5658                           intcon	equ	0xFF2
  5659                           postinc0	equ	0xFEE
  5660                           fsr0h	equ	0xFEA
  5661                           fsr0l	equ	0xFE9
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           fsr1h	equ	0xFE2
  5665                           fsr1l	equ	0xFE1
  5666                           bsr	equ	0xFE0
  5667                           indf2	equ	0xFDF
  5668                           postinc2	equ	0xFDE
  5669                           postdec2	equ	0xFDD
  5670                           fsr2h	equ	0xFDA
  5671                           fsr2l	equ	0xFD9
  5672                           status	equ	0xFD8
  5673                           
  5674 ;; *************** function _i2c_master_recv *****************
  5675 ;; Defined at:
  5676 ;;		line 106 in file "../src/my_i2c.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  length          1    wreg     unsigned char 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  length          1   44[COMRAM] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      unsigned char 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5690 ;;      Params:         0       0       0       0       0
  5691 ;;      Locals:         1       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0
  5693 ;;      Totals:         1       0       0       0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_timer0_int_handler
  5700 ;;		_parser_lthread
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text40
  5705  0018A2                     __ptext40:
  5706                           	opt stack 0
  5707  0018A2                     _i2c_master_recv:
  5708                           	opt stack 18
  5709                           
  5710                           ;incstack = 0
  5711                           ;i2c_master_recv@length stored from wreg
  5712  0018A2  CFE8 F02D          	movff	wreg,i2c_master_recv@length
  5713                           
  5714                           ;my_i2c.c: 108: if (SSPSTATbits.READ_WRITE == 1){
  5715  0018A6  B4C7               	btfsc	4039,2,c	;volatile
  5716  0018A8  0012               	return	
  5717                           
  5718                           ;my_i2c.c: 110: }
  5719                           ;my_i2c.c: 112: ic_ptr->buflen = length;
  5720                           
  5721                           ;my_i2c.c: 109: return -1;
  5722                           ;	Return value of _i2c_master_recv is never used
  5723  0018AA  EE20 F00A          	lfsr	2,10
  5724  0018AE  504E               	movf	_ic_ptr,w,c
  5725  0018B0  26D9               	addwf	fsr2l,f,c
  5726  0018B2  504F               	movf	_ic_ptr+1,w,c
  5727  0018B4  22DA               	addwfc	fsr2h,f,c
  5728  0018B6  C02D  FFDF         	movff	i2c_master_recv@length,indf2
  5729                           
  5730                           ;my_i2c.c: 113: ic_ptr->bufind = 0;
  5731  0018BA  EE20 F00B          	lfsr	2,11
  5732  0018BE  504E               	movf	_ic_ptr,w,c
  5733  0018C0  26D9               	addwf	fsr2l,f,c
  5734  0018C2  504F               	movf	_ic_ptr+1,w,c
  5735  0018C4  22DA               	addwfc	fsr2h,f,c
  5736  0018C6  0E00               	movlw	0
  5737  0018C8  6EDF               	movwf	indf2,c
  5738                           
  5739                           ;my_i2c.c: 116: SSPCON2bits.SEN = 1;
  5740  0018CA  80C5               	bsf	4037,0,c	;volatile
  5741                           
  5742                           ;my_i2c.c: 118: ic_ptr->status = 0x10;
  5743  0018CC  EE20 F00D          	lfsr	2,13
  5744  0018D0  504E               	movf	_ic_ptr,w,c
  5745  0018D2  26D9               	addwf	fsr2l,f,c
  5746  0018D4  504F               	movf	_ic_ptr+1,w,c
  5747  0018D6  22DA               	addwfc	fsr2h,f,c
  5748  0018D8  0E10               	movlw	16
  5749  0018DA  6EDF               	movwf	indf2,c
  5750  0018DC  0012               	return	
  5751  0018DE                     __end_of_i2c_master_recv:
  5752                           	opt stack 0
  5753                           pclatu	equ	0xFFB
  5754                           pclath	equ	0xFFA
  5755                           tblptru	equ	0xFF8
  5756                           tblptrh	equ	0xFF7
  5757                           tblptrl	equ	0xFF6
  5758                           tablat	equ	0xFF5
  5759                           prodh	equ	0xFF4
  5760                           prodl	equ	0xFF3
  5761                           intcon	equ	0xFF2
  5762                           postinc0	equ	0xFEE
  5763                           fsr0h	equ	0xFEA
  5764                           fsr0l	equ	0xFE9
  5765                           wreg	equ	0xFE8
  5766                           indf1	equ	0xFE7
  5767                           fsr1h	equ	0xFE2
  5768                           fsr1l	equ	0xFE1
  5769                           bsr	equ	0xFE0
  5770                           indf2	equ	0xFDF
  5771                           postinc2	equ	0xFDE
  5772                           postdec2	equ	0xFDD
  5773                           fsr2h	equ	0xFDA
  5774                           fsr2l	equ	0xFD9
  5775                           status	equ	0xFD8
  5776                           
  5777 ;; *************** function _i2c_configure_master *****************
  5778 ;; Defined at:
  5779 ;;		line 24 in file "../src/my_i2c.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  slave_addr      1    wreg     unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  slave_addr      1   45[COMRAM] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;		None               void
  5786 ;; Registers used:
  5787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5793 ;;      Params:         0       0       0       0       0
  5794 ;;      Locals:         1       0       0       0       0
  5795 ;;      Temps:          1       0       0       0       0
  5796 ;;      Totals:         2       0       0       0       0
  5797 ;;Total ram usage:        2 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_timer0_int_handler
  5803 ;;		_parser_lthread
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text41
  5808  00171C                     __ptext41:
  5809                           	opt stack 0
  5810  00171C                     _i2c_configure_master:
  5811                           	opt stack 18
  5812                           
  5813                           ;incstack = 0
  5814                           ;i2c_configure_master@slave_addr stored from wreg
  5815  00171C  CFE8 F02E          	movff	wreg,i2c_configure_master@slave_addr
  5816                           
  5817                           ;my_i2c.c: 25: i2c_mode = 1;
  5818  001720  6E2D               	movwf	??_i2c_configure_master& (0+255),c
  5819  001722  0E01               	movlw	1
  5820  001724  6E4D               	movwf	_i2c_mode,c
  5821  001726  502D               	movf	??_i2c_configure_master& (0+255),w,c
  5822                           
  5823                           ;my_i2c.c: 27: ic_ptr->slave_addr = slave_addr;
  5824  001728  EE20 F01C          	lfsr	2,28
  5825  00172C  504E               	movf	_ic_ptr,w,c
  5826  00172E  26D9               	addwf	fsr2l,f,c
  5827  001730  504F               	movf	_ic_ptr+1,w,c
  5828  001732  22DA               	addwfc	fsr2h,f,c
  5829  001734  C02E  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  5830                           
  5831                           ;my_i2c.c: 30: SSPCON1 = 0x0;
  5832  001738  0E00               	movlw	0
  5833  00173A  6EC6               	movwf	4038,c	;volatile
  5834                           
  5835                           ;my_i2c.c: 31: SSPCON2 = 0x0;
  5836  00173C  0E00               	movlw	0
  5837  00173E  6EC5               	movwf	4037,c	;volatile
  5838                           
  5839                           ;my_i2c.c: 32: SSPSTAT = 0x0;
  5840  001740  0E00               	movlw	0
  5841  001742  6EC7               	movwf	4039,c	;volatile
  5842                           
  5843                           ;my_i2c.c: 35: SSPADD = 0x63;
  5844  001744  0E63               	movlw	99
  5845  001746  6EC8               	movwf	4040,c	;volatile
  5846                           
  5847                           ;my_i2c.c: 38: SSPCON1bits.SSPM = 0x08;
  5848  001748  50C6               	movf	4038,w,c	;volatile
  5849  00174A  0BF0               	andlw	-16
  5850  00174C  0908               	iorlw	8
  5851  00174E  6EC6               	movwf	4038,c	;volatile
  5852                           
  5853                           ;my_i2c.c: 39: SSPCON1bits.SSPEN = 1;
  5854  001750  8AC6               	bsf	4038,5,c	;volatile
  5855                           
  5856                           ;my_i2c.c: 42: SSPSTAT = 0b10000000;
  5857  001752  0E80               	movlw	128
  5858  001754  6EC7               	movwf	4039,c	;volatile
  5859                           
  5860                           ;my_i2c.c: 45: LATCbits.LATC3 = 1;
  5861  001756  868B               	bsf	3979,3,c	;volatile
  5862                           
  5863                           ;my_i2c.c: 46: LATCbits.LATC4 = 1;
  5864  001758  888B               	bsf	3979,4,c	;volatile
  5865                           
  5866                           ;my_i2c.c: 47: TRISCbits.TRISC3 = 1;
  5867  00175A  8694               	bsf	3988,3,c	;volatile
  5868                           
  5869                           ;my_i2c.c: 48: TRISCbits.TRISC4 = 1;
  5870  00175C  8894               	bsf	3988,4,c	;volatile
  5871  00175E  0012               	return	
  5872  001760                     __end_of_i2c_configure_master:
  5873                           	opt stack 0
  5874                           pclatu	equ	0xFFB
  5875                           pclath	equ	0xFFA
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           fsr0h	equ	0xFEA
  5885                           fsr0l	equ	0xFE9
  5886                           wreg	equ	0xFE8
  5887                           indf1	equ	0xFE7
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           bsr	equ	0xFE0
  5891                           indf2	equ	0xFDF
  5892                           postinc2	equ	0xFDE
  5893                           postdec2	equ	0xFDD
  5894                           fsr2h	equ	0xFDA
  5895                           fsr2l	equ	0xFD9
  5896                           status	equ	0xFD8
  5897                           
  5898 ;; *************** function _WriteTimer0 *****************
  5899 ;; Defined at:
  5900 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  timer0          2   44[COMRAM] unsigned int 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  timer           2   46[COMRAM] struct Timers
  5905 ;; Return value:  Size  Location     Type
  5906 ;;		None               void
  5907 ;; Registers used:
  5908 ;;		None
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5914 ;;      Params:         2       0       0       0       0
  5915 ;;      Locals:         2       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0
  5917 ;;      Totals:         4       0       0       0       0
  5918 ;;Total ram usage:        4 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_timer0_int_handler
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text42
  5928  001BA8                     __ptext42:
  5929                           	opt stack 0
  5930  001BA8                     _WriteTimer0:
  5931                           	opt stack 18
  5932                           
  5933                           ;incstack = 0
  5934  001BA8  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5935  001BAC  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5936  001BB0  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5937  001BB4  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5938  001BB8  0012               	return	
  5939  001BBA                     __end_of_WriteTimer0:
  5940                           	opt stack 0
  5941                           pclatu	equ	0xFFB
  5942                           pclath	equ	0xFFA
  5943                           tblptru	equ	0xFF8
  5944                           tblptrh	equ	0xFF7
  5945                           tblptrl	equ	0xFF6
  5946                           tablat	equ	0xFF5
  5947                           prodh	equ	0xFF4
  5948                           prodl	equ	0xFF3
  5949                           intcon	equ	0xFF2
  5950                           postinc0	equ	0xFEE
  5951                           fsr0h	equ	0xFEA
  5952                           fsr0l	equ	0xFE9
  5953                           wreg	equ	0xFE8
  5954                           indf1	equ	0xFE7
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           bsr	equ	0xFE0
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _i2c_int_handler *****************
  5966 ;; Defined at:
  5967 ;;		line 196 in file "../src/my_i2c.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5981 ;;      Params:         0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    4
  5988 ;; This function calls:
  5989 ;;		_i2c_master_int_handler
  5990 ;;		_i2c_slave_int_handler
  5991 ;; This function is called by:
  5992 ;;		_InterruptHandlerHigh
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text43
  5997  001AEC                     __ptext43:
  5998                           	opt stack 0
  5999  001AEC                     _i2c_int_handler:
  6000                           	opt stack 15
  6001                           
  6002                           ;my_i2c.c: 197: switch (i2c_mode){
  6003                           
  6004                           ;incstack = 0
  6005  001AEC  D006               	goto	i2l3292
  6006  001AEE                     i2l3286:
  6007                           
  6008                           ;my_i2c.c: 199: i2c_master_int_handler();
  6009  001AEE  ECE6  F002         	call	_i2c_master_int_handler	;wreg free
  6010                           
  6011                           ;my_i2c.c: 200: break;
  6012  001AF2  0012               	return	
  6013  001AF4                     i2l3288:
  6014                           
  6015                           ;my_i2c.c: 203: i2c_slave_int_handler();
  6016  001AF4  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  6017                           
  6018                           ;my_i2c.c: 204: break;
  6019  001AF8  0012               	return	
  6020  001AFA                     i2l3292:
  6021  001AFA  504D               	movf	_i2c_mode,w,c
  6022                           
  6023                           ; Switch size 1, requested type "space"
  6024                           ; Number of cases is 2, Range of values is 1 to 2
  6025                           ; switch strategies available:
  6026                           ; Name         Instructions Cycles
  6027                           ; simple_byte            7     4 (average)
  6028                           ;	Chosen strategy is simple_byte
  6029  001AFC  0A01               	xorlw	1	; case 1
  6030  001AFE  B4D8               	btfsc	status,2,c
  6031  001B00  D7F6               	goto	i2l3286
  6032  001B02  0A03               	xorlw	3	; case 2
  6033  001B04  A4D8               	btfss	status,2,c
  6034  001B06  0012               	return	
  6035  001B08  D7F5               	goto	i2l3288
  6036  001B0A                     __end_of_i2c_int_handler:
  6037                           	opt stack 0
  6038                           pclatu	equ	0xFFB
  6039                           pclath	equ	0xFFA
  6040                           tblptru	equ	0xFF8
  6041                           tblptrh	equ	0xFF7
  6042                           tblptrl	equ	0xFF6
  6043                           tablat	equ	0xFF5
  6044                           prodh	equ	0xFF4
  6045                           prodl	equ	0xFF3
  6046                           intcon	equ	0xFF2
  6047                           postinc0	equ	0xFEE
  6048                           fsr0h	equ	0xFEA
  6049                           fsr0l	equ	0xFE9
  6050                           wreg	equ	0xFE8
  6051                           indf1	equ	0xFE7
  6052                           fsr1h	equ	0xFE2
  6053                           fsr1l	equ	0xFE1
  6054                           bsr	equ	0xFE0
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           postdec2	equ	0xFDD
  6058                           fsr2h	equ	0xFDA
  6059                           fsr2l	equ	0xFD9
  6060                           status	equ	0xFD8
  6061                           
  6062 ;; *************** function _i2c_slave_int_handler *****************
  6063 ;; Defined at:
  6064 ;;		line 213 in file "../src/my_i2c.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  error_buf       3    2[BANK0 ] unsigned char [3]
  6069 ;;  data_read       1   10[BANK0 ] unsigned char 
  6070 ;;  msg_ready       1    9[BANK0 ] unsigned char 
  6071 ;;  msg_to_send     1    8[BANK0 ] unsigned char 
  6072 ;;  i2c_data        1    7[BANK0 ] unsigned char 
  6073 ;;  overrun_erro    1    6[BANK0 ] unsigned char 
  6074 ;;  data_written    1    5[BANK0 ] unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;		None               void
  6077 ;; Registers used:
  6078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6084 ;;      Params:         0       0       0       0       0
  6085 ;;      Locals:         0       9       0       0       0
  6086 ;;      Temps:          0       2       0       0       0
  6087 ;;      Totals:         0      11       0       0       0
  6088 ;;Total ram usage:       11 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    3
  6091 ;; This function calls:
  6092 ;;		_ToMainHigh_sendmsg
  6093 ;;		_handle_start
  6094 ;;		_start_i2c_slave_reply
  6095 ;; This function is called by:
  6096 ;;		_i2c_int_handler
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text44
  6101  0000BA                     __ptext44:
  6102                           	opt stack 0
  6103  0000BA                     _i2c_slave_int_handler:
  6104                           	opt stack 15
  6105                           
  6106                           ;my_i2c.c: 214: unsigned char i2c_data;
  6107                           ;my_i2c.c: 215: unsigned char data_read = 0;
  6108                           
  6109                           ;incstack = 0
  6110  0000BA  0100               	movlb	0	; () banked
  6111  0000BC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6112  0000BE  0E00               	movlw	0
  6113  0000C0  0100               	movlb	0	; () banked
  6114  0000C2  0100               	movlb	0	; () banked
  6115  0000C4  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6116  0000C6  0100               	movlb	0	; () banked
  6117  0000C8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6118                           
  6119                           ;my_i2c.c: 216: unsigned char data_written = 0;
  6120  0000CA  0100               	movlb	0	; () banked
  6121  0000CC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6122  0000CE  0E00               	movlw	0
  6123  0000D0  0100               	movlb	0	; () banked
  6124  0000D2  0100               	movlb	0	; () banked
  6125  0000D4  6FBB               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6126  0000D6  0100               	movlb	0	; () banked
  6127  0000D8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6128                           
  6129                           ;my_i2c.c: 217: unsigned char msg_ready = 0;
  6130  0000DA  0100               	movlb	0	; () banked
  6131  0000DC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6132  0000DE  0E00               	movlw	0
  6133  0000E0  0100               	movlb	0	; () banked
  6134  0000E2  0100               	movlb	0	; () banked
  6135  0000E4  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6136  0000E6  0100               	movlb	0	; () banked
  6137  0000E8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6138                           
  6139                           ;my_i2c.c: 218: unsigned char msg_to_send = 0;
  6140  0000EA  0100               	movlb	0	; () banked
  6141  0000EC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6142  0000EE  0E00               	movlw	0
  6143  0000F0  0100               	movlb	0	; () banked
  6144  0000F2  0100               	movlb	0	; () banked
  6145  0000F4  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6146  0000F6  0100               	movlb	0	; () banked
  6147  0000F8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6148                           
  6149                           ;my_i2c.c: 219: unsigned char overrun_error = 0;
  6150  0000FA  0100               	movlb	0	; () banked
  6151  0000FC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6152  0000FE  0E00               	movlw	0
  6153  000100  0100               	movlb	0	; () banked
  6154  000102  0100               	movlb	0	; () banked
  6155  000104  6FBC               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6156  000106  0100               	movlb	0	; () banked
  6157  000108  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;my_i2c.c: 220: unsigned char error_buf[3];
  6161                           ;my_i2c.c: 223: if (SSPCON1bits.SSPOV == 1) {
  6162  00010A  ACC6               	btfss	4038,6,c	;volatile
  6163  00010C  D020               	goto	i2l3580
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;my_i2c.c: 224: SSPCON1bits.SSPOV = 0;
  6167  00010E  9CC6               	bcf	4038,6,c	;volatile
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
  6171  000110  EE20 F00D          	lfsr	2,13
  6172  000114  504E               	movf	_ic_ptr,w,c
  6173  000116  26D9               	addwf	fsr2l,f,c
  6174  000118  504F               	movf	_ic_ptr+1,w,c
  6175  00011A  22DA               	addwfc	fsr2h,f,c
  6176  00011C  0E05               	movlw	5
  6177  00011E  6EDF               	movwf	indf2,c
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;my_i2c.c: 229: overrun_error = 1;
  6181  000120  0100               	movlb	0	; () banked
  6182  000122  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6183  000124  0E01               	movlw	1
  6184  000126  0100               	movlb	0	; () banked
  6185  000128  0100               	movlb	0	; () banked
  6186  00012A  6FBC               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6187  00012C  0100               	movlb	0	; () banked
  6188  00012E  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;my_i2c.c: 230: ic_ptr->error_count++;
  6192  000130  EE20 F00F          	lfsr	2,15
  6193  000134  504E               	movf	_ic_ptr,w,c
  6194  000136  26D9               	addwf	fsr2l,f,c
  6195  000138  504F               	movf	_ic_ptr+1,w,c
  6196  00013A  22DA               	addwfc	fsr2h,f,c
  6197  00013C  2ADF               	incf	indf2,f,c
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;my_i2c.c: 231: ic_ptr->error_code = 0x4;
  6201  00013E  EE20 F00E          	lfsr	2,14
  6202  000142  504E               	movf	_ic_ptr,w,c
  6203  000144  26D9               	addwf	fsr2l,f,c
  6204  000146  504F               	movf	_ic_ptr+1,w,c
  6205  000148  22DA               	addwfc	fsr2h,f,c
  6206  00014A  0E04               	movlw	4
  6207  00014C  6EDF               	movwf	indf2,c
  6208  00014E                     i2l3580:
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;my_i2c.c: 232: }
  6212                           ;my_i2c.c: 234: if (SSPSTATbits.BF == 1) {
  6213  00014E  A0C7               	btfss	4039,0,c	;volatile
  6214  000150  D00A               	goto	i2l3586
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;my_i2c.c: 235: i2c_data = SSPBUF;
  6218  000152  CFC9 F0BD          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;my_i2c.c: 236: data_read = 1;
  6222  000156  0100               	movlb	0	; () banked
  6223  000158  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6224  00015A  0E01               	movlw	1
  6225  00015C  0100               	movlb	0	; () banked
  6226  00015E  0100               	movlb	0	; () banked
  6227  000160  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6228  000162  0100               	movlb	0	; () banked
  6229  000164  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6230  000166                     i2l3586:
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;my_i2c.c: 237: }
  6234                           ;my_i2c.c: 239: if (!overrun_error) {
  6235  000166  0100               	movlb	0	; () banked
  6236  000168  0100               	movlb	0	; () banked
  6237  00016A  67BC               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  6238  00016C  D174               	goto	i2l293
  6239  00016E  D160               	goto	i2l3674
  6240  000170                     i2l295:
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;my_i2c.c: 242: {
  6244                           ;my_i2c.c: 244: if (SSPSTATbits.S == 1) {
  6245  000170  A6C7               	btfss	4039,3,c	;volatile
  6246  000172  D171               	goto	i2l293
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;my_i2c.c: 245: handle_start(data_read);
  6250  000174  0100               	movlb	0	; () banked
  6251  000176  0100               	movlb	0	; () banked
  6252  000178  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6253  00017A  EC97  F008         	call	_handle_start
  6254                           
  6255                           ;my_i2c.c: 247: if (ic_ptr->status == 0x8) {
  6256  00017E  EE20 F00D          	lfsr	2,13
  6257  000182  504E               	movf	_ic_ptr,w,c
  6258  000184  26D9               	addwf	fsr2l,f,c
  6259  000186  504F               	movf	_ic_ptr+1,w,c
  6260  000188  22DA               	addwfc	fsr2h,f,c
  6261  00018A  0E08               	movlw	8
  6262  00018C  62DF               	cpfseq	indf2,c
  6263  00018E  D163               	goto	i2l293
  6264                           
  6265                           ;my_i2c.c: 248: data_read = 0;
  6266  000190  0100               	movlb	0	; () banked
  6267  000192  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6268  000194  0E00               	movlw	0
  6269  000196  0100               	movlb	0	; () banked
  6270  000198  0100               	movlb	0	; () banked
  6271  00019A  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6272  00019C  0100               	movlb	0	; () banked
  6273  00019E  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6274                           
  6275                           ;my_i2c.c: 249: msg_to_send = 1;
  6276  0001A0  0100               	movlb	0	; () banked
  6277  0001A2  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6278  0001A4  0E01               	movlw	1
  6279  0001A6  0100               	movlb	0	; () banked
  6280  0001A8  0100               	movlb	0	; () banked
  6281  0001AA  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6282  0001AC  D136               	goto	L6
  6283  0001AE                     i2l299:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;my_i2c.c: 255: {
  6287                           ;my_i2c.c: 257: if (SSPSTATbits.P == 1) {
  6288  0001AE  A8C7               	btfss	4039,4,c	;volatile
  6289  0001B0  D027               	goto	i2l3606
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;my_i2c.c: 260: ic_ptr->event_count++;
  6293  0001B2  EE20 F00C          	lfsr	2,12
  6294  0001B6  504E               	movf	_ic_ptr,w,c
  6295  0001B8  26D9               	addwf	fsr2l,f,c
  6296  0001BA  504F               	movf	_ic_ptr+1,w,c
  6297  0001BC  22DA               	addwfc	fsr2h,f,c
  6298  0001BE  2ADF               	incf	indf2,f,c
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;my_i2c.c: 261: if (data_read) {
  6302  0001C0  0100               	movlb	0	; () banked
  6303  0001C2  0100               	movlb	0	; () banked
  6304  0001C4  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6305  0001C6  B4D8               	btfsc	status,2,c
  6306  0001C8  D12B               	goto	L8
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;my_i2c.c: 262: if (SSPSTATbits.D_A == 0) {
  6310  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6311  0001CC  D009               	goto	i2l3604
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;my_i2c.c: 263: msg_ready = 1;
  6315  0001CE  0100               	movlb	0	; () banked
  6316  0001D0  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6317  0001D2  0E01               	movlw	1
  6318  0001D4  0100               	movlb	0	; () banked
  6319  0001D6  0100               	movlb	0	; () banked
  6320  0001D8  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6321  0001DA  0100               	movlb	0	; () banked
  6322  0001DC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6323                           
  6324                           ;my_i2c.c: 264: } else {
  6325  0001DE  D120               	goto	L8
  6326  0001E0                     i2l3604:
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;my_i2c.c: 265: ic_ptr->error_count++;
  6330  0001E0  EE20 F00F          	lfsr	2,15
  6331  0001E4  504E               	movf	_ic_ptr,w,c
  6332  0001E6  26D9               	addwf	fsr2l,f,c
  6333  0001E8  504F               	movf	_ic_ptr+1,w,c
  6334  0001EA  22DA               	addwfc	fsr2h,f,c
  6335  0001EC  2ADF               	incf	indf2,f,c
  6336                           
  6337                           ;my_i2c.c: 266: ic_ptr->error_code = 0x6;
  6338  0001EE  EE20 F00E          	lfsr	2,14
  6339  0001F2  504E               	movf	_ic_ptr,w,c
  6340  0001F4  26D9               	addwf	fsr2l,f,c
  6341  0001F6  504F               	movf	_ic_ptr+1,w,c
  6342  0001F8  22DA               	addwfc	fsr2h,f,c
  6343  0001FA  0E06               	movlw	6
  6344  0001FC  6EDF               	movwf	indf2,c
  6345                           
  6346                           ; BSR set to: 0
  6347  0001FE  D110               	goto	L8
  6348  000200                     i2l3606:
  6349                           
  6350                           ; BSR set to: 0
  6351  000200  0100               	movlb	0	; () banked
  6352  000202  0100               	movlb	0	; () banked
  6353  000204  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6354  000206  B4D8               	btfsc	status,2,c
  6355  000208  D126               	goto	i2l293
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;my_i2c.c: 271: ic_ptr->event_count++;
  6359  00020A  EE20 F00C          	lfsr	2,12
  6360  00020E  504E               	movf	_ic_ptr,w,c
  6361  000210  26D9               	addwf	fsr2l,f,c
  6362  000212  504F               	movf	_ic_ptr+1,w,c
  6363  000214  22DA               	addwfc	fsr2h,f,c
  6364  000216  2ADF               	incf	indf2,f,c
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;my_i2c.c: 272: if (SSPSTATbits.D_A == 0) {
  6368  000218  BAC7               	btfsc	4039,5,c	;volatile
  6369  00021A  D013               	goto	i2l3622
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;my_i2c.c: 273: if (SSPSTATbits.R_W == 0) {
  6373  00021C  B4C7               	btfsc	4039,2,c	;volatile
  6374  00021E  D008               	goto	i2l3616
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;my_i2c.c: 274: ic_ptr->status = 0x7;
  6378  000220  EE20 F00D          	lfsr	2,13
  6379  000224  504E               	movf	_ic_ptr,w,c
  6380  000226  26D9               	addwf	fsr2l,f,c
  6381  000228  504F               	movf	_ic_ptr+1,w,c
  6382  00022A  22DA               	addwfc	fsr2h,f,c
  6383  00022C  0E07               	movlw	7
  6384  00022E  D05A               	goto	L5
  6385  000230                     i2l3616:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;my_i2c.c: 276: ic_ptr->status = 0x8;
  6389  000230  EE20 F00D          	lfsr	2,13
  6390  000234  504E               	movf	_ic_ptr,w,c
  6391  000236  26D9               	addwf	fsr2l,f,c
  6392  000238  504F               	movf	_ic_ptr+1,w,c
  6393  00023A  22DA               	addwfc	fsr2h,f,c
  6394  00023C  0E08               	movlw	8
  6395  00023E  6EDF               	movwf	indf2,c
  6396  000240  D0DE               	goto	L9
  6397  000242                     i2l3622:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;my_i2c.c: 282: ic_ptr->error_count++;
  6401  000242  EE20 F00F          	lfsr	2,15
  6402  000246  504E               	movf	_ic_ptr,w,c
  6403  000248  26D9               	addwf	fsr2l,f,c
  6404  00024A  504F               	movf	_ic_ptr+1,w,c
  6405  00024C  22DA               	addwfc	fsr2h,f,c
  6406  00024E  2ADF               	incf	indf2,f,c
  6407                           
  6408                           ;my_i2c.c: 283: ic_ptr->status = 0x5;
  6409  000250  EE20 F00D          	lfsr	2,13
  6410  000254  504E               	movf	_ic_ptr,w,c
  6411  000256  26D9               	addwf	fsr2l,f,c
  6412  000258  504F               	movf	_ic_ptr+1,w,c
  6413  00025A  22DA               	addwfc	fsr2h,f,c
  6414  00025C  0E05               	movlw	5
  6415  00025E  6EDF               	movwf	indf2,c
  6416                           
  6417                           ;my_i2c.c: 284: ic_ptr->error_code = 0x6;
  6418  000260  EE20 F00E          	lfsr	2,14
  6419  000264  504E               	movf	_ic_ptr,w,c
  6420  000266  26D9               	addwf	fsr2l,f,c
  6421  000268  504F               	movf	_ic_ptr+1,w,c
  6422  00026A  22DA               	addwfc	fsr2h,f,c
  6423  00026C  0E06               	movlw	6
  6424  00026E  D03A               	goto	L5
  6425  000270                     i2l3624:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;my_i2c.c: 290: {
  6429                           ;my_i2c.c: 291: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6430  000270  EE20 F01B          	lfsr	2,27
  6431  000274  504E               	movf	_ic_ptr,w,c
  6432  000276  26D9               	addwf	fsr2l,f,c
  6433  000278  504F               	movf	_ic_ptr+1,w,c
  6434  00027A  22DA               	addwfc	fsr2h,f,c
  6435  00027C  50DF               	movf	indf2,w,c
  6436  00027E  0100               	movlb	0	; () banked
  6437  000280  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6438  000282  EE20 F01A          	lfsr	2,26
  6439  000286  504E               	movf	_ic_ptr,w,c
  6440  000288  26D9               	addwf	fsr2l,f,c
  6441  00028A  504F               	movf	_ic_ptr+1,w,c
  6442  00028C  22DA               	addwfc	fsr2h,f,c
  6443  00028E  50DF               	movf	indf2,w,c
  6444  000290  0100               	movlb	0	; () banked
  6445  000292  5DB6               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  6446  000294  B0D8               	btfsc	status,0,c
  6447  000296  D0C4               	goto	L8
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;my_i2c.c: 292: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6451  000298  EE20 F01B          	lfsr	2,27
  6452  00029C  504E               	movf	_ic_ptr,w,c
  6453  00029E  26D9               	addwf	fsr2l,f,c
  6454  0002A0  504F               	movf	_ic_ptr+1,w,c
  6455  0002A2  22DA               	addwfc	fsr2h,f,c
  6456  0002A4  50DF               	movf	indf2,w,c
  6457  0002A6  0100               	movlb	0	; () banked
  6458  0002A8  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6459  0002AA  0100               	movlb	0	; () banked
  6460  0002AC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6461  0002AE  0D01               	mullw	1
  6462  0002B0  0E10               	movlw	16
  6463  0002B2  26F3               	addwf	prodl,f,c
  6464  0002B4  0E00               	movlw	0
  6465  0002B6  22F4               	addwfc	prodh,f,c
  6466  0002B8  50F3               	movf	prodl,w,c
  6467  0002BA  244E               	addwf	_ic_ptr,w,c
  6468  0002BC  6ED9               	movwf	fsr2l,c
  6469  0002BE  50F4               	movf	prodh,w,c
  6470  0002C0  204F               	addwfc	_ic_ptr+1,w,c
  6471  0002C2  6EDA               	movwf	fsr2h,c
  6472  0002C4  50DF               	movf	indf2,w,c
  6473  0002C6  6EC9               	movwf	4041,c	;volatile
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;my_i2c.c: 293: ic_ptr->outbufind++;
  6477  0002C8  EE20 F01B          	lfsr	2,27
  6478  0002CC  504E               	movf	_ic_ptr,w,c
  6479  0002CE  26D9               	addwf	fsr2l,f,c
  6480  0002D0  504F               	movf	_ic_ptr+1,w,c
  6481  0002D2  22DA               	addwfc	fsr2h,f,c
  6482  0002D4  2ADF               	incf	indf2,f,c
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;my_i2c.c: 294: data_written = 1;
  6486  0002D6  0100               	movlb	0	; () banked
  6487  0002D8  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6488  0002DA  0E01               	movlw	1
  6489  0002DC  0100               	movlb	0	; () banked
  6490  0002DE  0100               	movlb	0	; () banked
  6491  0002E0  6FBB               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6492  0002E2  D09B               	goto	L6
  6493  0002E4                     L5:
  6494  0002E4  6EDF               	movwf	indf2,c
  6495  0002E6  D0B7               	goto	i2l293
  6496  0002E8                     i2l313:
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;my_i2c.c: 302: {
  6500                           ;my_i2c.c: 304: if (SSPSTATbits.P == 1) {
  6501  0002E8  A8C7               	btfss	4039,4,c	;volatile
  6502  0002EA  D04C               	goto	i2l3652
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;my_i2c.c: 306: ic_ptr->event_count++;
  6506  0002EC  EE20 F00C          	lfsr	2,12
  6507  0002F0  504E               	movf	_ic_ptr,w,c
  6508  0002F2  26D9               	addwf	fsr2l,f,c
  6509  0002F4  504F               	movf	_ic_ptr+1,w,c
  6510  0002F6  22DA               	addwfc	fsr2h,f,c
  6511  0002F8  2ADF               	incf	indf2,f,c
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;my_i2c.c: 307: if (data_read) {
  6515  0002FA  0100               	movlb	0	; () banked
  6516  0002FC  0100               	movlb	0	; () banked
  6517  0002FE  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6518  000300  B4D8               	btfsc	status,2,c
  6519  000302  D037               	goto	i2l3648
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;my_i2c.c: 308: if (SSPSTATbits.D_A == 1) {
  6523  000304  AAC7               	btfss	4039,5,c	;volatile
  6524  000306  D01D               	goto	i2l3646
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;my_i2c.c: 309: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6528  000308  EE20 F00A          	lfsr	2,10
  6529  00030C  504E               	movf	_ic_ptr,w,c
  6530  00030E  26D9               	addwf	fsr2l,f,c
  6531  000310  504F               	movf	_ic_ptr+1,w,c
  6532  000312  22DA               	addwfc	fsr2h,f,c
  6533  000314  50DF               	movf	indf2,w,c
  6534  000316  0100               	movlb	0	; () banked
  6535  000318  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6536  00031A  0100               	movlb	0	; () banked
  6537  00031C  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6538  00031E  0D01               	mullw	1
  6539  000320  50F3               	movf	prodl,w,c
  6540  000322  244E               	addwf	_ic_ptr,w,c
  6541  000324  6ED9               	movwf	fsr2l,c
  6542  000326  50F4               	movf	prodh,w,c
  6543  000328  204F               	addwfc	_ic_ptr+1,w,c
  6544  00032A  6EDA               	movwf	fsr2h,c
  6545  00032C  0100               	movlb	0	; () banked
  6546  00032E  C0BD  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;my_i2c.c: 310: ic_ptr->buflen++;
  6550  000332  EE20 F00A          	lfsr	2,10
  6551  000336  504E               	movf	_ic_ptr,w,c
  6552  000338  26D9               	addwf	fsr2l,f,c
  6553  00033A  504F               	movf	_ic_ptr+1,w,c
  6554  00033C  22DA               	addwfc	fsr2h,f,c
  6555  00033E  2ADF               	incf	indf2,f,c
  6556  000340  D018               	goto	i2l3648
  6557  000342                     i2l3646:
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;my_i2c.c: 313: ic_ptr->error_count++;
  6561  000342  EE20 F00F          	lfsr	2,15
  6562  000346  504E               	movf	_ic_ptr,w,c
  6563  000348  26D9               	addwf	fsr2l,f,c
  6564  00034A  504F               	movf	_ic_ptr+1,w,c
  6565  00034C  22DA               	addwfc	fsr2h,f,c
  6566  00034E  2ADF               	incf	indf2,f,c
  6567                           
  6568                           ;my_i2c.c: 314: ic_ptr->error_code = 0x6;
  6569  000350  EE20 F00E          	lfsr	2,14
  6570  000354  504E               	movf	_ic_ptr,w,c
  6571  000356  26D9               	addwf	fsr2l,f,c
  6572  000358  504F               	movf	_ic_ptr+1,w,c
  6573  00035A  22DA               	addwfc	fsr2h,f,c
  6574  00035C  0E06               	movlw	6
  6575  00035E  6EDF               	movwf	indf2,c
  6576                           
  6577                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  6578  000360  EE20 F00D          	lfsr	2,13
  6579  000364  504E               	movf	_ic_ptr,w,c
  6580  000366  26D9               	addwf	fsr2l,f,c
  6581  000368  504F               	movf	_ic_ptr+1,w,c
  6582  00036A  22DA               	addwfc	fsr2h,f,c
  6583  00036C  0E05               	movlw	5
  6584  00036E  6EDF               	movwf	indf2,c
  6585  000370  D057               	goto	L8
  6586  000372                     i2l3648:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;my_i2c.c: 318: msg_ready = 1;
  6590  000372  0100               	movlb	0	; () banked
  6591  000374  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6592  000376  0E01               	movlw	1
  6593  000378  0100               	movlb	0	; () banked
  6594  00037A  0100               	movlb	0	; () banked
  6595  00037C  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6596  00037E  0100               	movlb	0	; () banked
  6597  000380  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6598                           
  6599                           ; BSR set to: 0
  6600  000382  D04E               	goto	L8
  6601  000384                     i2l3652:
  6602                           
  6603                           ; BSR set to: 0
  6604  000384  0100               	movlb	0	; () banked
  6605  000386  0100               	movlb	0	; () banked
  6606  000388  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6607  00038A  B4D8               	btfsc	status,2,c
  6608  00038C  D064               	goto	i2l293
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;my_i2c.c: 322: ic_ptr->event_count++;
  6612  00038E  EE20 F00C          	lfsr	2,12
  6613  000392  504E               	movf	_ic_ptr,w,c
  6614  000394  26D9               	addwf	fsr2l,f,c
  6615  000396  504F               	movf	_ic_ptr+1,w,c
  6616  000398  22DA               	addwfc	fsr2h,f,c
  6617  00039A  2ADF               	incf	indf2,f,c
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;my_i2c.c: 323: if (SSPSTATbits.D_A == 1) {
  6621  00039C  AAC7               	btfss	4039,5,c	;volatile
  6622  00039E  D01D               	goto	i2l321
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;my_i2c.c: 324: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6626  0003A0  EE20 F00A          	lfsr	2,10
  6627  0003A4  504E               	movf	_ic_ptr,w,c
  6628  0003A6  26D9               	addwf	fsr2l,f,c
  6629  0003A8  504F               	movf	_ic_ptr+1,w,c
  6630  0003AA  22DA               	addwfc	fsr2h,f,c
  6631  0003AC  50DF               	movf	indf2,w,c
  6632  0003AE  0100               	movlb	0	; () banked
  6633  0003B0  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6634  0003B2  0100               	movlb	0	; () banked
  6635  0003B4  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6636  0003B6  0D01               	mullw	1
  6637  0003B8  50F3               	movf	prodl,w,c
  6638  0003BA  244E               	addwf	_ic_ptr,w,c
  6639  0003BC  6ED9               	movwf	fsr2l,c
  6640  0003BE  50F4               	movf	prodh,w,c
  6641  0003C0  204F               	addwfc	_ic_ptr+1,w,c
  6642  0003C2  6EDA               	movwf	fsr2h,c
  6643  0003C4  0100               	movlb	0	; () banked
  6644  0003C6  C0BD  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;my_i2c.c: 325: ic_ptr->buflen++;
  6648  0003CA  EE20 F00A          	lfsr	2,10
  6649  0003CE  504E               	movf	_ic_ptr,w,c
  6650  0003D0  26D9               	addwf	fsr2l,f,c
  6651  0003D2  504F               	movf	_ic_ptr+1,w,c
  6652  0003D4  22DA               	addwfc	fsr2h,f,c
  6653  0003D6  2ADF               	incf	indf2,f,c
  6654                           
  6655                           ;my_i2c.c: 326: } else {
  6656  0003D8  D03E               	goto	i2l293
  6657  0003DA                     i2l321:
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;my_i2c.c: 327: if (SSPSTATbits.R_W == 1) {
  6661  0003DA  A4C7               	btfss	4039,2,c	;volatile
  6662  0003DC  D701               	goto	i2l3604
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;my_i2c.c: 328: ic_ptr->status = 0x8;
  6666  0003DE  EE20 F00D          	lfsr	2,13
  6667  0003E2  504E               	movf	_ic_ptr,w,c
  6668  0003E4  26D9               	addwf	fsr2l,f,c
  6669  0003E6  504F               	movf	_ic_ptr+1,w,c
  6670  0003E8  22DA               	addwfc	fsr2h,f,c
  6671  0003EA  0E08               	movlw	8
  6672  0003EC  6EDF               	movwf	indf2,c
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;my_i2c.c: 329: msg_ready = 1;
  6676  0003EE  0100               	movlb	0	; () banked
  6677  0003F0  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6678  0003F2  0E01               	movlw	1
  6679  0003F4  0100               	movlb	0	; () banked
  6680  0003F6  0100               	movlb	0	; () banked
  6681  0003F8  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6682  0003FA  0100               	movlb	0	; () banked
  6683  0003FC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6684  0003FE                     L9:
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;my_i2c.c: 330: msg_to_send = 1;
  6688  0003FE  0100               	movlb	0	; () banked
  6689  000400  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6690  000402  0E01               	movlw	1
  6691  000404  0100               	movlb	0	; () banked
  6692  000406  0100               	movlb	0	; () banked
  6693  000408  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6694  00040A  0100               	movlb	0	; () banked
  6695  00040C  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;my_i2c.c: 332: data_read = 0;
  6699  00040E  0100               	movlb	0	; () banked
  6700  000410  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6701  000412  0E00               	movlw	0
  6702  000414  0100               	movlb	0	; () banked
  6703  000416  0100               	movlb	0	; () banked
  6704  000418  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6705  00041A                     L6:
  6706  00041A  0100               	movlb	0	; () banked
  6707  00041C  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6708                           
  6709                           ;my_i2c.c: 333: } else {
  6710  00041E  D01B               	goto	i2l293
  6711  000420                     L8:
  6712                           
  6713                           ;my_i2c.c: 336: ic_ptr->status = 0x5;
  6714  000420  EE20 F00D          	lfsr	2,13
  6715  000424  504E               	movf	_ic_ptr,w,c
  6716  000426  26D9               	addwf	fsr2l,f,c
  6717  000428  504F               	movf	_ic_ptr+1,w,c
  6718  00042A  22DA               	addwfc	fsr2h,f,c
  6719  00042C  0E05               	movlw	5
  6720  00042E  D75A               	goto	L5
  6721  000430                     i2l3674:
  6722                           
  6723                           ; BSR set to: 0
  6724  000430  EE20 F00D          	lfsr	2,13
  6725  000434  504E               	movf	_ic_ptr,w,c
  6726  000436  26D9               	addwf	fsr2l,f,c
  6727  000438  504F               	movf	_ic_ptr+1,w,c
  6728  00043A  22DA               	addwfc	fsr2h,f,c
  6729  00043C  50DF               	movf	indf2,w,c
  6730                           
  6731                           ; Switch size 1, requested type "space"
  6732                           ; Number of cases is 4, Range of values is 5 to 8
  6733                           ; switch strategies available:
  6734                           ; Name         Instructions Cycles
  6735                           ; simple_byte           13     7 (average)
  6736                           ;	Chosen strategy is simple_byte
  6737  00043E  0A05               	xorlw	5	; case 5
  6738  000440  B4D8               	btfsc	status,2,c
  6739  000442  D696               	goto	i2l295
  6740  000444  0A03               	xorlw	3	; case 6
  6741  000446  B4D8               	btfsc	status,2,c
  6742  000448  D6B2               	goto	i2l299
  6743  00044A  0A01               	xorlw	1	; case 7
  6744  00044C  B4D8               	btfsc	status,2,c
  6745  00044E  D74C               	goto	i2l313
  6746  000450  0A0F               	xorlw	15	; case 8
  6747  000452  B4D8               	btfsc	status,2,c
  6748  000454  D70D               	goto	i2l3624
  6749  000456                     i2l293:
  6750                           
  6751                           ;my_i2c.c: 343: }
  6752                           ;my_i2c.c: 346: if (data_read || data_written) {
  6753  000456  0100               	movlb	0	; () banked
  6754  000458  0100               	movlb	0	; () banked
  6755  00045A  67C0               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  6756  00045C  D005               	goto	i2l327
  6757                           
  6758                           ; BSR set to: 0
  6759  00045E  0100               	movlb	0	; () banked
  6760  000460  0100               	movlb	0	; () banked
  6761  000462  51BB               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  6762  000464  B4D8               	btfsc	status,2,c
  6763  000466  D002               	goto	i2l3680
  6764  000468                     i2l327:
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;my_i2c.c: 348: if (SSPCON1bits.CKP == 0) {
  6768  000468  A8C6               	btfss	4038,4,c	;volatile
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;my_i2c.c: 349: SSPCON1bits.CKP = 1;
  6772  00046A  88C6               	bsf	4038,4,c	;volatile
  6773  00046C                     i2l3680:
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;my_i2c.c: 350: }
  6777                           ;my_i2c.c: 351: }
  6778                           ;my_i2c.c: 354: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6779  00046C  EE20 F00A          	lfsr	2,10
  6780  000470  504E               	movf	_ic_ptr,w,c
  6781  000472  26D9               	addwf	fsr2l,f,c
  6782  000474  504F               	movf	_ic_ptr+1,w,c
  6783  000476  22DA               	addwfc	fsr2h,f,c
  6784  000478  0E08               	movlw	8
  6785  00047A  64DF               	cpfsgt	indf2,c
  6786  00047C  D01B               	goto	i2l3686
  6787                           
  6788                           ; BSR set to: 0
  6789  00047E  0100               	movlb	0	; () banked
  6790  000480  0100               	movlb	0	; () banked
  6791  000482  67BF               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  6792  000484  D017               	goto	i2l3686
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;my_i2c.c: 355: ic_ptr->status = 0x5;
  6796  000486  EE20 F00D          	lfsr	2,13
  6797  00048A  504E               	movf	_ic_ptr,w,c
  6798  00048C  26D9               	addwf	fsr2l,f,c
  6799  00048E  504F               	movf	_ic_ptr+1,w,c
  6800  000490  22DA               	addwfc	fsr2h,f,c
  6801  000492  0E05               	movlw	5
  6802  000494  6EDF               	movwf	indf2,c
  6803                           
  6804                           ;my_i2c.c: 356: ic_ptr->error_count++;
  6805  000496  EE20 F00F          	lfsr	2,15
  6806  00049A  504E               	movf	_ic_ptr,w,c
  6807  00049C  26D9               	addwf	fsr2l,f,c
  6808  00049E  504F               	movf	_ic_ptr+1,w,c
  6809  0004A0  22DA               	addwfc	fsr2h,f,c
  6810  0004A2  2ADF               	incf	indf2,f,c
  6811                           
  6812                           ;my_i2c.c: 357: ic_ptr->error_code = 0x7;
  6813  0004A4  EE20 F00E          	lfsr	2,14
  6814  0004A8  504E               	movf	_ic_ptr,w,c
  6815  0004AA  26D9               	addwf	fsr2l,f,c
  6816  0004AC  504F               	movf	_ic_ptr+1,w,c
  6817  0004AE  22DA               	addwfc	fsr2h,f,c
  6818  0004B0  0E07               	movlw	7
  6819  0004B2  6EDF               	movwf	indf2,c
  6820  0004B4                     i2l3686:
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;my_i2c.c: 358: }
  6824                           ;my_i2c.c: 360: if (msg_ready) {
  6825  0004B4  0100               	movlb	0	; () banked
  6826  0004B6  0100               	movlb	0	; () banked
  6827  0004B8  51BF               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  6828  0004BA  B4D8               	btfsc	status,2,c
  6829  0004BC  D034               	goto	i2l3694
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;my_i2c.c: 361: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6833  0004BE  EE20 F00C          	lfsr	2,12
  6834  0004C2  504E               	movf	_ic_ptr,w,c
  6835  0004C4  26D9               	addwf	fsr2l,f,c
  6836  0004C6  504F               	movf	_ic_ptr+1,w,c
  6837  0004C8  22DA               	addwfc	fsr2h,f,c
  6838  0004CA  EE10 F00A          	lfsr	1,10
  6839  0004CE  504E               	movf	_ic_ptr,w,c
  6840  0004D0  26E1               	addwf	fsr1l,f,c
  6841  0004D2  504F               	movf	_ic_ptr+1,w,c
  6842  0004D4  22E2               	addwfc	fsr1h,f,c
  6843  0004D6  50E7               	movf	indf1,w,c
  6844  0004D8  0100               	movlb	0	; () banked
  6845  0004DA  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6846  0004DC  0100               	movlb	0	; () banked
  6847  0004DE  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6848  0004E0  0D01               	mullw	1
  6849  0004E2  50F3               	movf	prodl,w,c
  6850  0004E4  244E               	addwf	_ic_ptr,w,c
  6851  0004E6  6EE1               	movwf	fsr1l,c
  6852  0004E8  50F4               	movf	prodh,w,c
  6853  0004EA  204F               	addwfc	_ic_ptr+1,w,c
  6854  0004EC  6EE2               	movwf	fsr1h,c
  6855  0004EE  CFDF FFE7          	movff	indf2,indf1
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;my_i2c.c: 362: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6859  0004F2  0100               	movlb	0	; () banked
  6860  0004F4  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6861  0004F6  0E28               	movlw	40
  6862  0004F8  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6863  0004FA  0100               	movlb	0	; () banked
  6864  0004FC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6865  0004FE  C04F  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6866  000502  C04E  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6867  000506  EE20 F00A          	lfsr	2,10
  6868  00050A  504E               	movf	_ic_ptr,w,c
  6869  00050C  26D9               	addwf	fsr2l,f,c
  6870  00050E  504F               	movf	_ic_ptr+1,w,c
  6871  000510  22DA               	addwfc	fsr2h,f,c
  6872  000512  50DF               	movf	indf2,w,c
  6873  000514  0100               	movlb	0	; () banked
  6874  000516  6FB7               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  6875  000518  0100               	movlb	0	; () banked
  6876  00051A  29B7               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  6877  00051C  EC33  F00D         	call	_ToMainHigh_sendmsg
  6878                           
  6879                           ;my_i2c.c: 363: ic_ptr->buflen = 0;
  6880  000520  EE20 F00A          	lfsr	2,10
  6881  000524  D038               	goto	L7
  6882  000526                     i2l3694:
  6883  000526  EE20 F00F          	lfsr	2,15
  6884  00052A  504E               	movf	_ic_ptr,w,c
  6885  00052C  26D9               	addwf	fsr2l,f,c
  6886  00052E  504F               	movf	_ic_ptr+1,w,c
  6887  000530  22DA               	addwfc	fsr2h,f,c
  6888  000532  50DF               	movf	indf2,w,c
  6889  000534  B4D8               	btfsc	status,2,c
  6890  000536  D035               	goto	i2l3702
  6891                           
  6892                           ;my_i2c.c: 365: error_buf[0] = ic_ptr->error_count;
  6893  000538  EE20 F00F          	lfsr	2,15
  6894  00053C  504E               	movf	_ic_ptr,w,c
  6895  00053E  26D9               	addwf	fsr2l,f,c
  6896  000540  504F               	movf	_ic_ptr+1,w,c
  6897  000542  22DA               	addwfc	fsr2h,f,c
  6898  000544  50DF               	movf	indf2,w,c
  6899  000546  0100               	movlb	0	; () banked
  6900  000548  0100               	movlb	0	; () banked
  6901  00054A  6FB8               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  6902                           
  6903                           ;my_i2c.c: 366: error_buf[1] = ic_ptr->error_code;
  6904  00054C  EE20 F00E          	lfsr	2,14
  6905  000550  504E               	movf	_ic_ptr,w,c
  6906  000552  26D9               	addwf	fsr2l,f,c
  6907  000554  504F               	movf	_ic_ptr+1,w,c
  6908  000556  22DA               	addwfc	fsr2h,f,c
  6909  000558  50DF               	movf	indf2,w,c
  6910  00055A  0100               	movlb	0	; () banked
  6911  00055C  0100               	movlb	0	; () banked
  6912  00055E  6FB9               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  6913                           
  6914                           ;my_i2c.c: 367: error_buf[2] = ic_ptr->event_count;
  6915  000560  EE20 F00C          	lfsr	2,12
  6916  000564  504E               	movf	_ic_ptr,w,c
  6917  000566  26D9               	addwf	fsr2l,f,c
  6918  000568  504F               	movf	_ic_ptr+1,w,c
  6919  00056A  22DA               	addwfc	fsr2h,f,c
  6920  00056C  50DF               	movf	indf2,w,c
  6921  00056E  0100               	movlb	0	; () banked
  6922  000570  0100               	movlb	0	; () banked
  6923  000572  6FBA               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 368: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6927  000574  0100               	movlb	0	; () banked
  6928  000576  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6929  000578  0E29               	movlw	41
  6930  00057A  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6931  00057C  0100               	movlb	0	; () banked
  6932  00057E  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6933  000580  0100               	movlb	0	; () banked
  6934  000582  0E00               	movlw	high i2c_slave_int_handler@error_buf
  6935  000584  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  6936  000586  0100               	movlb	0	; () banked
  6937  000588  0EB8               	movlw	low i2c_slave_int_handler@error_buf
  6938  00058A  6E44               	movwf	ToMainHigh_sendmsg@data,c
  6939  00058C  0E03               	movlw	3
  6940  00058E  EC33  F00D         	call	_ToMainHigh_sendmsg
  6941                           
  6942                           ;my_i2c.c: 369: ic_ptr->error_count = 0;
  6943  000592  EE20 F00F          	lfsr	2,15
  6944  000596                     L7:
  6945  000596  504E               	movf	_ic_ptr,w,c
  6946  000598  26D9               	addwf	fsr2l,f,c
  6947  00059A  504F               	movf	_ic_ptr+1,w,c
  6948  00059C  22DA               	addwfc	fsr2h,f,c
  6949  00059E  0E00               	movlw	0
  6950  0005A0  6EDF               	movwf	indf2,c
  6951  0005A2                     i2l3702:
  6952                           
  6953                           ;my_i2c.c: 370: }
  6954                           ;my_i2c.c: 371: if (msg_to_send) {
  6955  0005A2  0100               	movlb	0	; () banked
  6956  0005A4  0100               	movlb	0	; () banked
  6957  0005A6  51BE               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  6958  0005A8  B4D8               	btfsc	status,2,c
  6959  0005AA  0012               	return	
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;my_i2c.c: 374: start_i2c_slave_reply(I2C_Buffer_Size, 0);
  6963  0005AC  0E00               	movlw	0
  6964  0005AE  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  6965  0005B0  0E00               	movlw	0
  6966  0005B2  6E2D               	movwf	start_i2c_slave_reply@msg,c
  6967  0005B4  5052               	movf	_I2C_Buffer_Size,w,c
  6968  0005B6  EC91  F005         	call	_start_i2c_slave_reply
  6969                           
  6970                           ;my_i2c.c: 375: msg_to_send = 0;
  6971  0005BA  0100               	movlb	0	; () banked
  6972  0005BC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6973  0005BE  0E00               	movlw	0
  6974  0005C0  0100               	movlb	0	; () banked
  6975  0005C2  0100               	movlb	0	; () banked
  6976  0005C4  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6977  0005C6  0100               	movlb	0	; () banked
  6978  0005C8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6979  0005CA  0012               	return	
  6980  0005CC                     __end_of_i2c_slave_int_handler:
  6981                           	opt stack 0
  6982                           pclatu	equ	0xFFB
  6983                           pclath	equ	0xFFA
  6984                           tblptru	equ	0xFF8
  6985                           tblptrh	equ	0xFF7
  6986                           tblptrl	equ	0xFF6
  6987                           tablat	equ	0xFF5
  6988                           prodh	equ	0xFF4
  6989                           prodl	equ	0xFF3
  6990                           intcon	equ	0xFF2
  6991                           postinc0	equ	0xFEE
  6992                           fsr0h	equ	0xFEA
  6993                           fsr0l	equ	0xFE9
  6994                           wreg	equ	0xFE8
  6995                           indf1	equ	0xFE7
  6996                           fsr1h	equ	0xFE2
  6997                           fsr1l	equ	0xFE1
  6998                           bsr	equ	0xFE0
  6999                           indf2	equ	0xFDF
  7000                           postinc2	equ	0xFDE
  7001                           postdec2	equ	0xFDD
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           
  7006 ;; *************** function _start_i2c_slave_reply *****************
  7007 ;; Defined at:
  7008 ;;		line 132 in file "../src/my_i2c.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  length          1    wreg     unsigned char 
  7011 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7012 ;;		 -> NULL(0), 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  length          1   49[COMRAM] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;		None               void
  7017 ;; Registers used:
  7018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7024 ;;      Params:         2       0       0       0       0
  7025 ;;      Locals:         1       0       0       0       0
  7026 ;;      Temps:          3       0       0       0       0
  7027 ;;      Totals:         6       0       0       0       0
  7028 ;;Total ram usage:        6 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_i2c_slave_int_handler
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text45
  7038  000B22                     __ptext45:
  7039                           	opt stack 0
  7040  000B22                     _start_i2c_slave_reply:
  7041                           	opt stack 17
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;incstack = 0
  7045                           ;start_i2c_slave_reply@length stored from wreg
  7046  000B22  CFE8 F032          	movff	wreg,start_i2c_slave_reply@length
  7047                           
  7048                           ;my_i2c.c: 136: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  7049  000B26  EE20 F01A          	lfsr	2,26
  7050  000B2A  504E               	movf	_ic_ptr,w,c
  7051  000B2C  26D9               	addwf	fsr2l,f,c
  7052  000B2E  504F               	movf	_ic_ptr+1,w,c
  7053  000B30  22DA               	addwfc	fsr2h,f,c
  7054  000B32  0E00               	movlw	0
  7055  000B34  6EDF               	movwf	indf2,c
  7056  000B36  D06B               	goto	i2l3474
  7057  000B38                     i2l3462:
  7058                           
  7059                           ;my_i2c.c: 139: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  7060  000B38  EE20 F01A          	lfsr	2,26
  7061  000B3C  504E               	movf	_ic_ptr,w,c
  7062  000B3E  26D9               	addwf	fsr2l,f,c
  7063  000B40  504F               	movf	_ic_ptr+1,w,c
  7064  000B42  22DA               	addwfc	fsr2h,f,c
  7065  000B44  50DF               	movf	indf2,w,c
  7066  000B46  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7067  000B48  EE20 F027          	lfsr	2,39
  7068  000B4C  504E               	movf	_ic_ptr,w,c
  7069  000B4E  26D9               	addwf	fsr2l,f,c
  7070  000B50  504F               	movf	_ic_ptr+1,w,c
  7071  000B52  22DA               	addwfc	fsr2h,f,c
  7072  000B54  50DF               	movf	indf2,w,c
  7073  000B56  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  7074  000B58  B0D8               	btfsc	status,0,c
  7075  000B5A  D01E               	goto	i2l3466
  7076                           
  7077                           ;my_i2c.c: 140: {
  7078                           ;my_i2c.c: 141: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  7079  000B5C  EE20 F01A          	lfsr	2,26
  7080  000B60  504E               	movf	_ic_ptr,w,c
  7081  000B62  26D9               	addwf	fsr2l,f,c
  7082  000B64  504F               	movf	_ic_ptr+1,w,c
  7083  000B66  22DA               	addwfc	fsr2h,f,c
  7084  000B68  50DF               	movf	indf2,w,c
  7085  000B6A  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7086  000B6C  502F               	movf	??_start_i2c_slave_reply,w,c
  7087  000B6E  0D01               	mullw	1
  7088  000B70  0E1D               	movlw	29
  7089  000B72  26F3               	addwf	prodl,f,c
  7090  000B74  0E00               	movlw	0
  7091  000B76  22F4               	addwfc	prodh,f,c
  7092  000B78  50F3               	movf	prodl,w,c
  7093  000B7A  244E               	addwf	_ic_ptr,w,c
  7094  000B7C  6ED9               	movwf	fsr2l,c
  7095  000B7E  50F4               	movf	prodh,w,c
  7096  000B80  204F               	addwfc	_ic_ptr+1,w,c
  7097  000B82  6EDA               	movwf	fsr2h,c
  7098  000B84  EE10 F01A          	lfsr	1,26
  7099  000B88  504E               	movf	_ic_ptr,w,c
  7100  000B8A  26E1               	addwf	fsr1l,f,c
  7101  000B8C  504F               	movf	_ic_ptr+1,w,c
  7102  000B8E  22E2               	addwfc	fsr1h,f,c
  7103  000B90  50E7               	movf	indf1,w,c
  7104  000B92  6E30               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  7105  000B94  5030               	movf	??_start_i2c_slave_reply+1,w,c
  7106  000B96  D027               	goto	L12
  7107  000B98                     i2l3466:
  7108                           
  7109                           ;my_i2c.c: 143: else if(ic_ptr->sendBufLen != 0)
  7110  000B98  EE20 F027          	lfsr	2,39
  7111  000B9C  504E               	movf	_ic_ptr,w,c
  7112  000B9E  26D9               	addwf	fsr2l,f,c
  7113  000BA0  504F               	movf	_ic_ptr+1,w,c
  7114  000BA2  22DA               	addwfc	fsr2h,f,c
  7115  000BA4  50DF               	movf	indf2,w,c
  7116  000BA6  B4D8               	btfsc	status,2,c
  7117  000BA8  D008               	goto	i2l3470
  7118                           
  7119                           ;my_i2c.c: 144: {
  7120                           ;my_i2c.c: 145: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  7121  000BAA  EE20 F027          	lfsr	2,39
  7122  000BAE  504E               	movf	_ic_ptr,w,c
  7123  000BB0  26D9               	addwf	fsr2l,f,c
  7124  000BB2  504F               	movf	_ic_ptr+1,w,c
  7125  000BB4  22DA               	addwfc	fsr2h,f,c
  7126  000BB6  50DF               	movf	indf2,w,c
  7127  000BB8  D001               	goto	L11
  7128  000BBA                     i2l3470:
  7129                           
  7130                           ;my_i2c.c: 147: else
  7131                           ;my_i2c.c: 148: {
  7132                           ;my_i2c.c: 149: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  7133  000BBA  5032               	movf	start_i2c_slave_reply@length,w,c
  7134  000BBC                     L11:
  7135  000BBC  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7136  000BBE  6A30               	clrf	(??_start_i2c_slave_reply+1)& (0+255),c
  7137  000BC0  0E1C               	movlw	28
  7138  000BC2  262F               	addwf	??_start_i2c_slave_reply,f,c
  7139  000BC4  0E00               	movlw	0
  7140  000BC6  2230               	addwfc	??_start_i2c_slave_reply+1,f,c
  7141  000BC8  502F               	movf	??_start_i2c_slave_reply,w,c
  7142  000BCA  244E               	addwf	_ic_ptr,w,c
  7143  000BCC  6ED9               	movwf	fsr2l,c
  7144  000BCE  5030               	movf	??_start_i2c_slave_reply+1,w,c
  7145  000BD0  204F               	addwfc	_ic_ptr+1,w,c
  7146  000BD2  6EDA               	movwf	fsr2h,c
  7147  000BD4  EE10 F01A          	lfsr	1,26
  7148  000BD8  504E               	movf	_ic_ptr,w,c
  7149  000BDA  26E1               	addwf	fsr1l,f,c
  7150  000BDC  504F               	movf	_ic_ptr+1,w,c
  7151  000BDE  22E2               	addwfc	fsr1h,f,c
  7152  000BE0  50E7               	movf	indf1,w,c
  7153  000BE2  6E31               	movwf	(??_start_i2c_slave_reply+2)& (0+255),c
  7154  000BE4  5031               	movf	??_start_i2c_slave_reply+2,w,c
  7155  000BE6                     L12:
  7156  000BE6  0D01               	mullw	1
  7157  000BE8  0E10               	movlw	16
  7158  000BEA  26F3               	addwf	prodl,f,c
  7159  000BEC  0E00               	movlw	0
  7160  000BEE  22F4               	addwfc	prodh,f,c
  7161  000BF0  50F3               	movf	prodl,w,c
  7162  000BF2  244E               	addwf	_ic_ptr,w,c
  7163  000BF4  6EE1               	movwf	fsr1l,c
  7164  000BF6  50F4               	movf	prodh,w,c
  7165  000BF8  204F               	addwfc	_ic_ptr+1,w,c
  7166  000BFA  6EE2               	movwf	fsr1h,c
  7167  000BFC  CFDF FFE7          	movff	indf2,indf1
  7168  000C00  EE20 F01A          	lfsr	2,26
  7169  000C04  504E               	movf	_ic_ptr,w,c
  7170  000C06  26D9               	addwf	fsr2l,f,c
  7171  000C08  504F               	movf	_ic_ptr+1,w,c
  7172  000C0A  22DA               	addwfc	fsr2h,f,c
  7173  000C0C  2ADF               	incf	indf2,f,c
  7174  000C0E                     i2l3474:
  7175  000C0E  EE20 F01A          	lfsr	2,26
  7176  000C12  504E               	movf	_ic_ptr,w,c
  7177  000C14  26D9               	addwf	fsr2l,f,c
  7178  000C16  504F               	movf	_ic_ptr+1,w,c
  7179  000C18  22DA               	addwfc	fsr2h,f,c
  7180  000C1A  50DF               	movf	indf2,w,c
  7181  000C1C  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7182  000C1E  5032               	movf	start_i2c_slave_reply@length,w,c
  7183  000C20  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  7184  000C22  A0D8               	btfss	status,0,c
  7185  000C24  D789               	goto	i2l3462
  7186                           
  7187                           ;my_i2c.c: 150: }
  7188                           ;my_i2c.c: 152: }
  7189                           ;my_i2c.c: 153: ic_ptr->sendBufLen =0;
  7190  000C26  EE20 F027          	lfsr	2,39
  7191  000C2A  504E               	movf	_ic_ptr,w,c
  7192  000C2C  26D9               	addwf	fsr2l,f,c
  7193  000C2E  504F               	movf	_ic_ptr+1,w,c
  7194  000C30  22DA               	addwfc	fsr2h,f,c
  7195  000C32  0E00               	movlw	0
  7196  000C34  6EDF               	movwf	indf2,c
  7197                           
  7198                           ;my_i2c.c: 154: ic_ptr->outbuflen = length;
  7199  000C36  EE20 F01A          	lfsr	2,26
  7200  000C3A  504E               	movf	_ic_ptr,w,c
  7201  000C3C  26D9               	addwf	fsr2l,f,c
  7202  000C3E  504F               	movf	_ic_ptr+1,w,c
  7203  000C40  22DA               	addwfc	fsr2h,f,c
  7204  000C42  C032  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7205                           
  7206                           ;my_i2c.c: 155: ic_ptr->outbufind = 1;
  7207  000C46  EE20 F01B          	lfsr	2,27
  7208  000C4A  504E               	movf	_ic_ptr,w,c
  7209  000C4C  26D9               	addwf	fsr2l,f,c
  7210  000C4E  504F               	movf	_ic_ptr+1,w,c
  7211  000C50  22DA               	addwfc	fsr2h,f,c
  7212  000C52  0E01               	movlw	1
  7213  000C54  6EDF               	movwf	indf2,c
  7214                           
  7215                           ;my_i2c.c: 158: SSPBUF = ic_ptr->outbuffer[0];
  7216  000C56  EE20 F010          	lfsr	2,16
  7217  000C5A  504E               	movf	_ic_ptr,w,c
  7218  000C5C  26D9               	addwf	fsr2l,f,c
  7219  000C5E  504F               	movf	_ic_ptr+1,w,c
  7220  000C60  22DA               	addwfc	fsr2h,f,c
  7221  000C62  50DF               	movf	indf2,w,c
  7222  000C64  6EC9               	movwf	4041,c	;volatile
  7223                           
  7224                           ;my_i2c.c: 161: SSPCON1bits.CKP = 1;
  7225  000C66  88C6               	bsf	4038,4,c	;volatile
  7226  000C68  0012               	return	
  7227  000C6A                     __end_of_start_i2c_slave_reply:
  7228                           	opt stack 0
  7229                           pclatu	equ	0xFFB
  7230                           pclath	equ	0xFFA
  7231                           tblptru	equ	0xFF8
  7232                           tblptrh	equ	0xFF7
  7233                           tblptrl	equ	0xFF6
  7234                           tablat	equ	0xFF5
  7235                           prodh	equ	0xFF4
  7236                           prodl	equ	0xFF3
  7237                           intcon	equ	0xFF2
  7238                           postinc0	equ	0xFEE
  7239                           fsr0h	equ	0xFEA
  7240                           fsr0l	equ	0xFE9
  7241                           wreg	equ	0xFE8
  7242                           indf1	equ	0xFE7
  7243                           fsr1h	equ	0xFE2
  7244                           fsr1l	equ	0xFE1
  7245                           bsr	equ	0xFE0
  7246                           indf2	equ	0xFDF
  7247                           postinc2	equ	0xFDE
  7248                           postdec2	equ	0xFDD
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8
  7252                           
  7253 ;; *************** function _handle_start *****************
  7254 ;; Defined at:
  7255 ;;		line 167 in file "../src/my_i2c.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  data_read       1    wreg     unsigned char 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  data_read       1   44[COMRAM] unsigned char 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;		None               void
  7262 ;; Registers used:
  7263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7269 ;;      Params:         0       0       0       0       0
  7270 ;;      Locals:         1       0       0       0       0
  7271 ;;      Temps:          0       0       0       0       0
  7272 ;;      Totals:         1       0       0       0       0
  7273 ;;Total ram usage:        1 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_i2c_slave_int_handler
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text46
  7283  00112E                     __ptext46:
  7284                           	opt stack 0
  7285  00112E                     _handle_start:
  7286                           	opt stack 17
  7287                           
  7288                           ;incstack = 0
  7289                           ;handle_start@data_read stored from wreg
  7290  00112E  CFE8 F02D          	movff	wreg,handle_start@data_read
  7291                           
  7292                           ;my_i2c.c: 168: ic_ptr->event_count = 1;
  7293  001132  EE20 F00C          	lfsr	2,12
  7294  001136  504E               	movf	_ic_ptr,w,c
  7295  001138  26D9               	addwf	fsr2l,f,c
  7296  00113A  504F               	movf	_ic_ptr+1,w,c
  7297  00113C  22DA               	addwfc	fsr2h,f,c
  7298  00113E  0E01               	movlw	1
  7299  001140  6EDF               	movwf	indf2,c
  7300                           
  7301                           ;my_i2c.c: 169: ic_ptr->buflen = 0;
  7302  001142  EE20 F00A          	lfsr	2,10
  7303  001146  504E               	movf	_ic_ptr,w,c
  7304  001148  26D9               	addwf	fsr2l,f,c
  7305  00114A  504F               	movf	_ic_ptr+1,w,c
  7306  00114C  22DA               	addwfc	fsr2h,f,c
  7307  00114E  0E00               	movlw	0
  7308  001150  6EDF               	movwf	indf2,c
  7309                           
  7310                           ;my_i2c.c: 171: if (data_read) {
  7311  001152  502D               	movf	handle_start@data_read,w,c
  7312  001154  B4D8               	btfsc	status,2,c
  7313  001156  D02E               	goto	i2l3492
  7314                           
  7315                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 1) {
  7316  001158  AAC7               	btfss	4039,5,c	;volatile
  7317  00115A  D018               	goto	i2l275
  7318                           
  7319                           ;my_i2c.c: 175: ic_ptr->status = 0x5;
  7320  00115C  EE20 F00D          	lfsr	2,13
  7321  001160  504E               	movf	_ic_ptr,w,c
  7322  001162  26D9               	addwf	fsr2l,f,c
  7323  001164  504F               	movf	_ic_ptr+1,w,c
  7324  001166  22DA               	addwfc	fsr2h,f,c
  7325  001168  0E05               	movlw	5
  7326  00116A  6EDF               	movwf	indf2,c
  7327                           
  7328                           ;my_i2c.c: 176: ic_ptr->error_count++;
  7329  00116C  EE20 F00F          	lfsr	2,15
  7330  001170  504E               	movf	_ic_ptr,w,c
  7331  001172  26D9               	addwf	fsr2l,f,c
  7332  001174  504F               	movf	_ic_ptr+1,w,c
  7333  001176  22DA               	addwfc	fsr2h,f,c
  7334  001178  2ADF               	incf	indf2,f,c
  7335                           
  7336                           ;my_i2c.c: 177: ic_ptr->error_code = 0x5;
  7337  00117A  EE20 F00E          	lfsr	2,14
  7338  00117E  504E               	movf	_ic_ptr,w,c
  7339  001180  26D9               	addwf	fsr2l,f,c
  7340  001182  504F               	movf	_ic_ptr+1,w,c
  7341  001184  22DA               	addwfc	fsr2h,f,c
  7342  001186  0E05               	movlw	5
  7343  001188  6EDF               	movwf	indf2,c
  7344                           
  7345                           ;my_i2c.c: 178: } else {
  7346  00118A  0012               	return	
  7347  00118C                     i2l275:
  7348                           
  7349                           ;my_i2c.c: 179: if (SSPSTATbits.R_W == 1) {
  7350  00118C  A4C7               	btfss	4039,2,c	;volatile
  7351  00118E  D009               	goto	i2l3490
  7352                           
  7353                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  7354  001190  EE20 F00D          	lfsr	2,13
  7355  001194  504E               	movf	_ic_ptr,w,c
  7356  001196  26D9               	addwf	fsr2l,f,c
  7357  001198  504F               	movf	_ic_ptr+1,w,c
  7358  00119A  22DA               	addwfc	fsr2h,f,c
  7359  00119C  0E08               	movlw	8
  7360  00119E  6EDF               	movwf	indf2,c
  7361                           
  7362                           ;my_i2c.c: 181: } else {
  7363  0011A0  0012               	return	
  7364  0011A2                     i2l3490:
  7365                           
  7366                           ;my_i2c.c: 182: ic_ptr->status = 0x7;
  7367  0011A2  EE20 F00D          	lfsr	2,13
  7368  0011A6  504E               	movf	_ic_ptr,w,c
  7369  0011A8  26D9               	addwf	fsr2l,f,c
  7370  0011AA  504F               	movf	_ic_ptr+1,w,c
  7371  0011AC  22DA               	addwfc	fsr2h,f,c
  7372  0011AE  0E07               	movlw	7
  7373  0011B0  6EDF               	movwf	indf2,c
  7374  0011B2  0012               	return	
  7375  0011B4                     i2l3492:
  7376                           
  7377                           ;my_i2c.c: 186: ic_ptr->status = 0x6;
  7378  0011B4  EE20 F00D          	lfsr	2,13
  7379  0011B8  504E               	movf	_ic_ptr,w,c
  7380  0011BA  26D9               	addwf	fsr2l,f,c
  7381  0011BC  504F               	movf	_ic_ptr+1,w,c
  7382  0011BE  22DA               	addwfc	fsr2h,f,c
  7383  0011C0  0E06               	movlw	6
  7384  0011C2  6EDF               	movwf	indf2,c
  7385  0011C4  0012               	return	
  7386  0011C6                     __end_of_handle_start:
  7387                           	opt stack 0
  7388                           pclatu	equ	0xFFB
  7389                           pclath	equ	0xFFA
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           postinc0	equ	0xFEE
  7398                           fsr0h	equ	0xFEA
  7399                           fsr0l	equ	0xFE9
  7400                           wreg	equ	0xFE8
  7401                           indf1	equ	0xFE7
  7402                           fsr1h	equ	0xFE2
  7403                           fsr1l	equ	0xFE1
  7404                           bsr	equ	0xFE0
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function _i2c_master_int_handler *****************
  7413 ;; Defined at:
  7414 ;;		line 452 in file "../src/my_i2c.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;		None               void
  7421 ;; Registers used:
  7422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7428 ;;      Params:         0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0
  7430 ;;      Temps:          0       1       0       0       0
  7431 ;;      Totals:         0       1       0       0       0
  7432 ;;Total ram usage:        1 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    3
  7435 ;; This function calls:
  7436 ;;		_ToMainHigh_sendmsg
  7437 ;; This function is called by:
  7438 ;;		_i2c_int_handler
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text47
  7443  0005CC                     __ptext47:
  7444                           	opt stack 0
  7445  0005CC                     _i2c_master_int_handler:
  7446                           	opt stack 15
  7447                           
  7448                           ;my_i2c.c: 453: switch (ic_ptr->status){
  7449                           
  7450                           ;incstack = 0
  7451  0005CC  D154               	goto	i2l3564
  7452  0005CE                     i2l3496:
  7453                           
  7454                           ;my_i2c.c: 456: ic_ptr->status = 0x24;
  7455  0005CE  EE20 F00D          	lfsr	2,13
  7456  0005D2  504E               	movf	_ic_ptr,w,c
  7457  0005D4  26D9               	addwf	fsr2l,f,c
  7458  0005D6  504F               	movf	_ic_ptr+1,w,c
  7459  0005D8  22DA               	addwfc	fsr2h,f,c
  7460  0005DA  0E24               	movlw	36
  7461  0005DC  6EDF               	movwf	indf2,c
  7462                           
  7463                           ;my_i2c.c: 457: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  7464  0005DE  EE20 F01C          	lfsr	2,28
  7465  0005E2  504E               	movf	_ic_ptr,w,c
  7466  0005E4  26D9               	addwf	fsr2l,f,c
  7467  0005E6  504F               	movf	_ic_ptr+1,w,c
  7468  0005E8  22DA               	addwfc	fsr2h,f,c
  7469  0005EA  50DF               	movf	indf2,w,c
  7470  0005EC  0100               	movlb	0	; () banked
  7471  0005EE  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7472  0005F0  0100               	movlb	0	; () banked
  7473  0005F2  90D8               	bcf	status,0,c
  7474  0005F4  35B6               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  7475  0005F6  0BFE               	andlw	254
  7476  0005F8  6EC9               	movwf	4041,c	;volatile
  7477                           
  7478                           ;my_i2c.c: 458: break;
  7479  0005FA  0012               	return	
  7480  0005FC                     i2l346:
  7481                           
  7482                           ;my_i2c.c: 461: if (SSPCON2bits.ACKSTAT == 0) {
  7483  0005FC  BCC5               	btfsc	4037,6,c	;volatile
  7484  0005FE  D05B               	goto	i2l3514
  7485                           
  7486                           ;my_i2c.c: 462: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7487  000600  EE20 F01B          	lfsr	2,27
  7488  000604  504E               	movf	_ic_ptr,w,c
  7489  000606  26D9               	addwf	fsr2l,f,c
  7490  000608  504F               	movf	_ic_ptr+1,w,c
  7491  00060A  22DA               	addwfc	fsr2h,f,c
  7492  00060C  50DF               	movf	indf2,w,c
  7493  00060E  0100               	movlb	0	; () banked
  7494  000610  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7495  000612  EE20 F01A          	lfsr	2,26
  7496  000616  504E               	movf	_ic_ptr,w,c
  7497  000618  26D9               	addwf	fsr2l,f,c
  7498  00061A  504F               	movf	_ic_ptr+1,w,c
  7499  00061C  22DA               	addwfc	fsr2h,f,c
  7500  00061E  50DF               	movf	indf2,w,c
  7501  000620  0100               	movlb	0	; () banked
  7502  000622  5DB6               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7503  000624  B0D8               	btfsc	status,0,c
  7504  000626  D028               	goto	i2l3506
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;my_i2c.c: 463: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7508  000628  EE20 F01B          	lfsr	2,27
  7509  00062C  504E               	movf	_ic_ptr,w,c
  7510  00062E  26D9               	addwf	fsr2l,f,c
  7511  000630  504F               	movf	_ic_ptr+1,w,c
  7512  000632  22DA               	addwfc	fsr2h,f,c
  7513  000634  50DF               	movf	indf2,w,c
  7514  000636  0100               	movlb	0	; () banked
  7515  000638  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7516  00063A  0100               	movlb	0	; () banked
  7517  00063C  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7518  00063E  0D01               	mullw	1
  7519  000640  0E10               	movlw	16
  7520  000642  26F3               	addwf	prodl,f,c
  7521  000644  0E00               	movlw	0
  7522  000646  22F4               	addwfc	prodh,f,c
  7523  000648  50F3               	movf	prodl,w,c
  7524  00064A  244E               	addwf	_ic_ptr,w,c
  7525  00064C  6ED9               	movwf	fsr2l,c
  7526  00064E  50F4               	movf	prodh,w,c
  7527  000650  204F               	addwfc	_ic_ptr+1,w,c
  7528  000652  6EDA               	movwf	fsr2h,c
  7529  000654  50DF               	movf	indf2,w,c
  7530  000656  6EC9               	movwf	4041,c	;volatile
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;my_i2c.c: 464: ic_ptr->outbufind++;
  7534  000658  EE20 F01B          	lfsr	2,27
  7535  00065C  504E               	movf	_ic_ptr,w,c
  7536  00065E  26D9               	addwf	fsr2l,f,c
  7537  000660  504F               	movf	_ic_ptr+1,w,c
  7538  000662  22DA               	addwfc	fsr2h,f,c
  7539  000664  2ADF               	incf	indf2,f,c
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;my_i2c.c: 465: ic_ptr->status = 0x24;
  7543  000666  EE20 F00D          	lfsr	2,13
  7544  00066A  504E               	movf	_ic_ptr,w,c
  7545  00066C  26D9               	addwf	fsr2l,f,c
  7546  00066E  504F               	movf	_ic_ptr+1,w,c
  7547  000670  22DA               	addwfc	fsr2h,f,c
  7548  000672  0E24               	movlw	36
  7549  000674  6EDF               	movwf	indf2,c
  7550                           
  7551                           ;my_i2c.c: 466: }
  7552  000676  0012               	return	
  7553  000678                     i2l3506:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;my_i2c.c: 467: else {
  7557                           ;my_i2c.c: 468: ToMainHigh_sendmsg(0, 43, 0);
  7558  000678  0100               	movlb	0	; () banked
  7559  00067A  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7560  00067C  0E2B               	movlw	43
  7561  00067E  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7562  000680  0100               	movlb	0	; () banked
  7563  000682  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7564  000684  0E00               	movlw	0
  7565  000686  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7566  000688  0E00               	movlw	0
  7567  00068A  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7568  00068C  0E00               	movlw	0
  7569  00068E  EC33  F00D         	call	_ToMainHigh_sendmsg
  7570                           
  7571                           ;my_i2c.c: 469: ic_ptr->outbuflen = 0;
  7572  000692  EE20 F01A          	lfsr	2,26
  7573  000696  504E               	movf	_ic_ptr,w,c
  7574  000698  26D9               	addwf	fsr2l,f,c
  7575  00069A  504F               	movf	_ic_ptr+1,w,c
  7576  00069C  22DA               	addwfc	fsr2h,f,c
  7577  00069E  0E00               	movlw	0
  7578  0006A0  6EDF               	movwf	indf2,c
  7579                           
  7580                           ;my_i2c.c: 470: ic_ptr->status = 0x5;
  7581  0006A2  EE20 F00D          	lfsr	2,13
  7582  0006A6  504E               	movf	_ic_ptr,w,c
  7583  0006A8  26D9               	addwf	fsr2l,f,c
  7584  0006AA  504F               	movf	_ic_ptr+1,w,c
  7585  0006AC  22DA               	addwfc	fsr2h,f,c
  7586  0006AE  0E05               	movlw	5
  7587  0006B0  6EDF               	movwf	indf2,c
  7588                           
  7589                           ;my_i2c.c: 471: SSPCON2bits.PEN = 1;
  7590  0006B2  84C5               	bsf	4037,2,c	;volatile
  7591  0006B4  0012               	return	
  7592  0006B6                     i2l3514:
  7593                           
  7594                           ;my_i2c.c: 474: else {
  7595                           ;my_i2c.c: 475: ToMainHigh_sendmsg(0, 44, 0);
  7596  0006B6  0100               	movlb	0	; () banked
  7597  0006B8  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7598  0006BA  0E2C               	movlw	44
  7599  0006BC  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7600  0006BE  0100               	movlb	0	; () banked
  7601  0006C0  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7602  0006C2  0E00               	movlw	0
  7603  0006C4  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7604  0006C6  0E00               	movlw	0
  7605  0006C8  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7606  0006CA  0E00               	movlw	0
  7607  0006CC  EC33  F00D         	call	_ToMainHigh_sendmsg
  7608                           
  7609                           ;my_i2c.c: 476: ic_ptr->status = 0x5;
  7610  0006D0  EE20 F00D          	lfsr	2,13
  7611  0006D4  504E               	movf	_ic_ptr,w,c
  7612  0006D6  26D9               	addwf	fsr2l,f,c
  7613  0006D8  504F               	movf	_ic_ptr+1,w,c
  7614  0006DA  22DA               	addwfc	fsr2h,f,c
  7615  0006DC  0E05               	movlw	5
  7616  0006DE  6EDF               	movwf	indf2,c
  7617                           
  7618                           ;my_i2c.c: 477: SSPCON2bits.PEN = 1;
  7619  0006E0  84C5               	bsf	4037,2,c	;volatile
  7620  0006E2  0012               	return	
  7621  0006E4                     i2l3520:
  7622                           
  7623                           ;my_i2c.c: 482: ToMainHigh_sendmsg(0, 43, 0);
  7624  0006E4  0100               	movlb	0	; () banked
  7625  0006E6  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7626  0006E8  0E2B               	movlw	43
  7627  0006EA  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7628  0006EC  0100               	movlb	0	; () banked
  7629  0006EE  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7630  0006F0  0E00               	movlw	0
  7631  0006F2  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7632  0006F4  0E00               	movlw	0
  7633  0006F6  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7634  0006F8  0E00               	movlw	0
  7635  0006FA  EC33  F00D         	call	_ToMainHigh_sendmsg
  7636                           
  7637                           ;my_i2c.c: 483: ic_ptr->status = 0x5;
  7638  0006FE  EE20 F00D          	lfsr	2,13
  7639  000702  504E               	movf	_ic_ptr,w,c
  7640  000704  26D9               	addwf	fsr2l,f,c
  7641  000706  504F               	movf	_ic_ptr+1,w,c
  7642  000708  22DA               	addwfc	fsr2h,f,c
  7643  00070A  0E05               	movlw	5
  7644  00070C  6EDF               	movwf	indf2,c
  7645                           
  7646                           ;my_i2c.c: 484: break;
  7647  00070E  0012               	return	
  7648  000710                     i2l3524:
  7649                           
  7650                           ;my_i2c.c: 491: ic_ptr->status = 0x27;
  7651  000710  EE20 F00D          	lfsr	2,13
  7652  000714  504E               	movf	_ic_ptr,w,c
  7653  000716  26D9               	addwf	fsr2l,f,c
  7654  000718  504F               	movf	_ic_ptr+1,w,c
  7655  00071A  22DA               	addwfc	fsr2h,f,c
  7656  00071C  0E27               	movlw	39
  7657  00071E  6EDF               	movwf	indf2,c
  7658                           
  7659                           ;my_i2c.c: 492: SSPBUF = ((ic_ptr->slave_addr << 1) | 0x01) & 0xFF;
  7660  000720  EE20 F01C          	lfsr	2,28
  7661  000724  504E               	movf	_ic_ptr,w,c
  7662  000726  26D9               	addwf	fsr2l,f,c
  7663  000728  504F               	movf	_ic_ptr+1,w,c
  7664  00072A  22DA               	addwfc	fsr2h,f,c
  7665  00072C  50DF               	movf	indf2,w,c
  7666  00072E  0100               	movlb	0	; () banked
  7667  000730  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7668  000732  0100               	movlb	0	; () banked
  7669  000734  80D8               	bsf	status,0,c
  7670  000736  35B6               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  7671  000738  6EC9               	movwf	4041,c	;volatile
  7672                           
  7673                           ;my_i2c.c: 493: break;
  7674  00073A  0012               	return	
  7675  00073C                     i2l353:
  7676                           
  7677                           ;my_i2c.c: 496: if (SSPCON2bits.ACKSTAT == 0) {
  7678  00073C  BCC5               	btfsc	4037,6,c	;volatile
  7679  00073E  D00A               	goto	i2l3530
  7680                           
  7681                           ;my_i2c.c: 498: ic_ptr->status = 0x15;
  7682  000740  EE20 F00D          	lfsr	2,13
  7683  000744  504E               	movf	_ic_ptr,w,c
  7684  000746  26D9               	addwf	fsr2l,f,c
  7685  000748  504F               	movf	_ic_ptr+1,w,c
  7686  00074A  22DA               	addwfc	fsr2h,f,c
  7687  00074C  0E15               	movlw	21
  7688  00074E  6EDF               	movwf	indf2,c
  7689                           
  7690                           ;my_i2c.c: 499: SSPCON2bits.RCEN = 1;
  7691  000750  86C5               	bsf	4037,3,c	;volatile
  7692                           
  7693                           ;my_i2c.c: 500: }
  7694  000752  0012               	return	
  7695  000754                     i2l3530:
  7696                           
  7697                           ;my_i2c.c: 501: else {
  7698                           ;my_i2c.c: 502: ToMainHigh_sendmsg(0, 46, 0);
  7699  000754  0100               	movlb	0	; () banked
  7700  000756  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7701  000758  0E2E               	movlw	46
  7702  00075A  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7703  00075C  0100               	movlb	0	; () banked
  7704  00075E  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7705  000760  0E00               	movlw	0
  7706  000762  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7707  000764  0E00               	movlw	0
  7708  000766  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7709  000768  0E00               	movlw	0
  7710  00076A  EC33  F00D         	call	_ToMainHigh_sendmsg
  7711                           
  7712                           ;my_i2c.c: 503: ic_ptr->status = 0x5;
  7713  00076E  EE20 F00D          	lfsr	2,13
  7714  000772  504E               	movf	_ic_ptr,w,c
  7715  000774  26D9               	addwf	fsr2l,f,c
  7716  000776  504F               	movf	_ic_ptr+1,w,c
  7717  000778  22DA               	addwfc	fsr2h,f,c
  7718  00077A  0E05               	movlw	5
  7719  00077C  6EDF               	movwf	indf2,c
  7720                           
  7721                           ;my_i2c.c: 504: SSPCON2bits.PEN = 1;
  7722  00077E  84C5               	bsf	4037,2,c	;volatile
  7723  000780  0012               	return	
  7724  000782                     i2l3536:
  7725                           
  7726                           ;my_i2c.c: 511: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7727  000782  EE20 F00B          	lfsr	2,11
  7728  000786  504E               	movf	_ic_ptr,w,c
  7729  000788  26D9               	addwf	fsr2l,f,c
  7730  00078A  504F               	movf	_ic_ptr+1,w,c
  7731  00078C  22DA               	addwfc	fsr2h,f,c
  7732  00078E  50DF               	movf	indf2,w,c
  7733  000790  0100               	movlb	0	; () banked
  7734  000792  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7735  000794  0100               	movlb	0	; () banked
  7736  000796  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7737  000798  0D01               	mullw	1
  7738  00079A  50F3               	movf	prodl,w,c
  7739  00079C  244E               	addwf	_ic_ptr,w,c
  7740  00079E  6ED9               	movwf	fsr2l,c
  7741  0007A0  50F4               	movf	prodh,w,c
  7742  0007A2  204F               	addwfc	_ic_ptr+1,w,c
  7743  0007A4  6EDA               	movwf	fsr2h,c
  7744  0007A6  CFC9 FFDF          	movff	4041,indf2	;volatile
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;my_i2c.c: 512: ic_ptr->bufind++;
  7748  0007AA  EE20 F00B          	lfsr	2,11
  7749  0007AE  504E               	movf	_ic_ptr,w,c
  7750  0007B0  26D9               	addwf	fsr2l,f,c
  7751  0007B2  504F               	movf	_ic_ptr+1,w,c
  7752  0007B4  22DA               	addwfc	fsr2h,f,c
  7753  0007B6  2ADF               	incf	indf2,f,c
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;my_i2c.c: 513: ic_ptr->status = 0x14;
  7757  0007B8  EE20 F00D          	lfsr	2,13
  7758  0007BC  504E               	movf	_ic_ptr,w,c
  7759  0007BE  26D9               	addwf	fsr2l,f,c
  7760  0007C0  504F               	movf	_ic_ptr+1,w,c
  7761  0007C2  22DA               	addwfc	fsr2h,f,c
  7762  0007C4  0E14               	movlw	20
  7763  0007C6  6EDF               	movwf	indf2,c
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;my_i2c.c: 515: if (ic_ptr->bufind < ic_ptr->buflen) {
  7767  0007C8  EE20 F00B          	lfsr	2,11
  7768  0007CC  504E               	movf	_ic_ptr,w,c
  7769  0007CE  26D9               	addwf	fsr2l,f,c
  7770  0007D0  504F               	movf	_ic_ptr+1,w,c
  7771  0007D2  22DA               	addwfc	fsr2h,f,c
  7772  0007D4  50DF               	movf	indf2,w,c
  7773  0007D6  0100               	movlb	0	; () banked
  7774  0007D8  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7775  0007DA  EE20 F00A          	lfsr	2,10
  7776  0007DE  504E               	movf	_ic_ptr,w,c
  7777  0007E0  26D9               	addwf	fsr2l,f,c
  7778  0007E2  504F               	movf	_ic_ptr+1,w,c
  7779  0007E4  22DA               	addwfc	fsr2h,f,c
  7780  0007E6  50DF               	movf	indf2,w,c
  7781  0007E8  0100               	movlb	0	; () banked
  7782  0007EA  5DB6               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7783  0007EC  B0D8               	btfsc	status,0,c
  7784  0007EE  D003               	goto	i2l357
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;my_i2c.c: 516: SSPCON2bits.ACKDT = 0;
  7788  0007F0  9AC5               	bcf	4037,5,c	;volatile
  7789                           
  7790                           ;my_i2c.c: 517: SSPCON2bits.ACKEN = 1;
  7791  0007F2  88C5               	bsf	4037,4,c	;volatile
  7792                           
  7793                           ;my_i2c.c: 518: }
  7794  0007F4  0012               	return	
  7795  0007F6                     i2l357:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;my_i2c.c: 519: else {
  7799                           ;my_i2c.c: 520: SSPCON2bits.ACKDT = 1;
  7800  0007F6  8AC5               	bsf	4037,5,c	;volatile
  7801                           
  7802                           ;my_i2c.c: 521: SSPCON2bits.ACKEN = 1;
  7803  0007F8  88C5               	bsf	4037,4,c	;volatile
  7804  0007FA  0012               	return	
  7805  0007FC                     i2l3546:
  7806                           
  7807                           ;my_i2c.c: 526: if (ic_ptr->bufind < ic_ptr->buflen) {
  7808  0007FC  EE20 F00B          	lfsr	2,11
  7809  000800  504E               	movf	_ic_ptr,w,c
  7810  000802  26D9               	addwf	fsr2l,f,c
  7811  000804  504F               	movf	_ic_ptr+1,w,c
  7812  000806  22DA               	addwfc	fsr2h,f,c
  7813  000808  50DF               	movf	indf2,w,c
  7814  00080A  0100               	movlb	0	; () banked
  7815  00080C  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7816  00080E  EE20 F00A          	lfsr	2,10
  7817  000812  504E               	movf	_ic_ptr,w,c
  7818  000814  26D9               	addwf	fsr2l,f,c
  7819  000816  504F               	movf	_ic_ptr+1,w,c
  7820  000818  22DA               	addwfc	fsr2h,f,c
  7821  00081A  50DF               	movf	indf2,w,c
  7822  00081C  0100               	movlb	0	; () banked
  7823  00081E  5DB6               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7824  000820  B0D8               	btfsc	status,0,c
  7825  000822  D00A               	goto	i2l3552
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;my_i2c.c: 527: ic_ptr->status = 0x15;
  7829  000824  EE20 F00D          	lfsr	2,13
  7830  000828  504E               	movf	_ic_ptr,w,c
  7831  00082A  26D9               	addwf	fsr2l,f,c
  7832  00082C  504F               	movf	_ic_ptr+1,w,c
  7833  00082E  22DA               	addwfc	fsr2h,f,c
  7834  000830  0E15               	movlw	21
  7835  000832  6EDF               	movwf	indf2,c
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;my_i2c.c: 528: SSPCON2bits.RCEN = 1;
  7839  000834  86C5               	bsf	4037,3,c	;volatile
  7840                           
  7841                           ;my_i2c.c: 529: }
  7842  000836  0012               	return	
  7843  000838                     i2l3552:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;my_i2c.c: 530: else {
  7847                           ;my_i2c.c: 531: ToMainHigh_sendmsg(ic_ptr->buflen, 45, (void *)(ic_ptr->buffer));
  7848  000838  0100               	movlb	0	; () banked
  7849  00083A  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7850  00083C  0E2D               	movlw	45
  7851  00083E  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7852  000840  0100               	movlb	0	; () banked
  7853  000842  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7854  000844  C04F  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7855  000848  C04E  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7856  00084C  EE20 F00A          	lfsr	2,10
  7857  000850  504E               	movf	_ic_ptr,w,c
  7858  000852  26D9               	addwf	fsr2l,f,c
  7859  000854  504F               	movf	_ic_ptr+1,w,c
  7860  000856  22DA               	addwfc	fsr2h,f,c
  7861  000858  50DF               	movf	indf2,w,c
  7862  00085A  EC33  F00D         	call	_ToMainHigh_sendmsg
  7863                           
  7864                           ;my_i2c.c: 532: ic_ptr->status = 0x5;
  7865  00085E  EE20 F00D          	lfsr	2,13
  7866  000862  504E               	movf	_ic_ptr,w,c
  7867  000864  26D9               	addwf	fsr2l,f,c
  7868  000866  504F               	movf	_ic_ptr+1,w,c
  7869  000868  22DA               	addwfc	fsr2h,f,c
  7870  00086A  0E05               	movlw	5
  7871  00086C  6EDF               	movwf	indf2,c
  7872                           
  7873                           ;my_i2c.c: 533: SSPCON2bits.PEN = 1;
  7874  00086E  84C5               	bsf	4037,2,c	;volatile
  7875                           
  7876                           ;my_i2c.c: 534: SSPCON2bits.ACKDT = 0;
  7877  000870  9AC5               	bcf	4037,5,c	;volatile
  7878                           
  7879                           ;my_i2c.c: 535: SSPCON2bits.ACKEN = 1;
  7880  000872  88C5               	bsf	4037,4,c	;volatile
  7881  000874  0012               	return	
  7882  000876                     i2l3564:
  7883  000876  EE20 F00D          	lfsr	2,13
  7884  00087A  504E               	movf	_ic_ptr,w,c
  7885  00087C  26D9               	addwf	fsr2l,f,c
  7886  00087E  504F               	movf	_ic_ptr+1,w,c
  7887  000880  22DA               	addwfc	fsr2h,f,c
  7888  000882  50DF               	movf	indf2,w,c
  7889                           
  7890                           ; Switch size 1, requested type "space"
  7891                           ; Number of cases is 7, Range of values is 9 to 39
  7892                           ; switch strategies available:
  7893                           ; Name         Instructions Cycles
  7894                           ; simple_byte           22    12 (average)
  7895                           ;	Chosen strategy is simple_byte
  7896  000884  0A09               	xorlw	9	; case 9
  7897  000886  B4D8               	btfsc	status,2,c
  7898  000888  D6A2               	goto	i2l3496
  7899  00088A  0A19               	xorlw	25	; case 16
  7900  00088C  B4D8               	btfsc	status,2,c
  7901  00088E  D740               	goto	i2l3524
  7902  000890  0A03               	xorlw	3	; case 19
  7903  000892  B4D8               	btfsc	status,2,c
  7904  000894  D727               	goto	i2l3520
  7905  000896  0A07               	xorlw	7	; case 20
  7906  000898  B4D8               	btfsc	status,2,c
  7907  00089A  D7B0               	goto	i2l3546
  7908  00089C  0A01               	xorlw	1	; case 21
  7909  00089E  B4D8               	btfsc	status,2,c
  7910  0008A0  D770               	goto	i2l3536
  7911  0008A2  0A31               	xorlw	49	; case 36
  7912  0008A4  B4D8               	btfsc	status,2,c
  7913  0008A6  D6AA               	goto	i2l346
  7914  0008A8  0A03               	xorlw	3	; case 39
  7915  0008AA  A4D8               	btfss	status,2,c
  7916  0008AC  0012               	return	
  7917  0008AE  D746               	goto	i2l353
  7918  0008B0                     __end_of_i2c_master_int_handler:
  7919                           	opt stack 0
  7920                           pclatu	equ	0xFFB
  7921                           pclath	equ	0xFFA
  7922                           tblptru	equ	0xFF8
  7923                           tblptrh	equ	0xFF7
  7924                           tblptrl	equ	0xFF6
  7925                           tablat	equ	0xFF5
  7926                           prodh	equ	0xFF4
  7927                           prodl	equ	0xFF3
  7928                           intcon	equ	0xFF2
  7929                           postinc0	equ	0xFEE
  7930                           fsr0h	equ	0xFEA
  7931                           fsr0l	equ	0xFE9
  7932                           wreg	equ	0xFE8
  7933                           indf1	equ	0xFE7
  7934                           fsr1h	equ	0xFE2
  7935                           fsr1l	equ	0xFE1
  7936                           bsr	equ	0xFE0
  7937                           indf2	equ	0xFDF
  7938                           postinc2	equ	0xFDE
  7939                           postdec2	equ	0xFDD
  7940                           fsr2h	equ	0xFDA
  7941                           fsr2l	equ	0xFD9
  7942                           status	equ	0xFD8
  7943                           
  7944 ;; *************** function _ToMainHigh_sendmsg *****************
  7945 ;; Defined at:
  7946 ;;		line 126 in file "../src/messages.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  length          1    wreg     unsigned char 
  7949 ;;  msgtype         1   66[COMRAM] unsigned char 
  7950 ;;  data            2   67[COMRAM] PTR void 
  7951 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  length          1   69[COMRAM] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      char 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7963 ;;      Params:         3       0       0       0       0
  7964 ;;      Locals:         1       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0
  7966 ;;      Totals:         4       0       0       0       0
  7967 ;;Total ram usage:        4 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    2
  7970 ;; This function calls:
  7971 ;;		i2_send_msg
  7972 ;; This function is called by:
  7973 ;;		_i2c_slave_int_handler
  7974 ;;		_i2c_master_int_handler
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text48
  7979  001A66                     __ptext48:
  7980                           	opt stack 0
  7981  001A66                     _ToMainHigh_sendmsg:
  7982                           	opt stack 15
  7983                           
  7984                           ;incstack = 0
  7985                           ;ToMainHigh_sendmsg@length stored from wreg
  7986  001A66  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  7987                           
  7988                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7989                           ;	Return value of _ToMainHigh_sendmsg is never used
  7990  001A6A  0101               	movlb	1	; () banked
  7991  001A6C  0E01               	movlw	high _ToMainHigh_MQ
  7992  001A6E  6E38               	movwf	i2send_msg@qptr+1,c
  7993  001A70  0101               	movlb	1	; () banked
  7994  001A72  0E6C               	movlw	low _ToMainHigh_MQ
  7995  001A74  6E37               	movwf	i2send_msg@qptr,c
  7996  001A76  C046  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7997  001A7A  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7998  001A7E  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7999  001A82  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8000  001A86  ECA7  F007         	call	i2_send_msg	;wreg free
  8001  001A8A  0012               	return	
  8002  001A8C                     __end_of_ToMainHigh_sendmsg:
  8003                           	opt stack 0
  8004                           pclatu	equ	0xFFB
  8005                           pclath	equ	0xFFA
  8006                           tblptru	equ	0xFF8
  8007                           tblptrh	equ	0xFF7
  8008                           tblptrl	equ	0xFF6
  8009                           tablat	equ	0xFF5
  8010                           prodh	equ	0xFF4
  8011                           prodl	equ	0xFF3
  8012                           intcon	equ	0xFF2
  8013                           postinc0	equ	0xFEE
  8014                           fsr0h	equ	0xFEA
  8015                           fsr0l	equ	0xFE9
  8016                           wreg	equ	0xFE8
  8017                           indf1	equ	0xFE7
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           bsr	equ	0xFE0
  8021                           indf2	equ	0xFDF
  8022                           postinc2	equ	0xFDE
  8023                           postdec2	equ	0xFDD
  8024                           fsr2h	equ	0xFDA
  8025                           fsr2l	equ	0xFD9
  8026                           status	equ	0xFD8
  8027                           
  8028 ;; *************** function i2_send_msg *****************
  8029 ;; Defined at:
  8030 ;;		line 24 in file "../src/messages.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  8033 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8034 ;;  length          1   56[COMRAM] unsigned char 
  8035 ;;  msgtype         1   57[COMRAM] unsigned char 
  8036 ;;  data            2   58[COMRAM] PTR void 
  8037 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(53), 
  8038 ;;		 -> main@uc(5), 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  8041 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8042 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8043 ;;  send_msg        2   61[COMRAM] unsigned int 
  8044 ;;  send_msg        1   63[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      char 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8054 ;;      Params:         6       0       0       0       0
  8055 ;;      Locals:         5       0       0       0       0
  8056 ;;      Temps:          1       0       0       0       0
  8057 ;;      Totals:        12       0       0       0       0
  8058 ;;Total ram usage:       12 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    1
  8061 ;; This function calls:
  8062 ;;		i2_memcpy
  8063 ;; This function is called by:
  8064 ;;		_ToMainHigh_sendmsg
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text49
  8069  000F4E                     __ptext49:
  8070                           	opt stack 0
  8071  000F4E                     i2_send_msg:
  8072                           	opt stack 15
  8073                           
  8074                           ;messages.c: 25: unsigned char slot;
  8075                           ;messages.c: 27: msg *qmsg;
  8076                           ;messages.c: 28: size_t tlength = length;
  8077                           
  8078                           ;incstack = 0
  8079  000F4E  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  8080  000F52  6A3F               	clrf	i2send_msg@tlength+1,c
  8081                           
  8082                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8083  000F54  EE20 F034          	lfsr	2,52
  8084  000F58  5037               	movf	i2send_msg@qptr,w,c
  8085  000F5A  26D9               	addwf	fsr2l,f,c
  8086  000F5C  5038               	movf	i2send_msg@qptr+1,w,c
  8087  000F5E  22DA               	addwfc	fsr2h,f,c
  8088  000F60  50DF               	movf	indf2,w,c
  8089  000F62  6E40               	movwf	i2send_msg@slot,c
  8090                           
  8091                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8092  000F64  5040               	movf	i2send_msg@slot,w,c
  8093  000F66  0D0D               	mullw	13
  8094  000F68  50F3               	movf	prodl,w,c
  8095  000F6A  2437               	addwf	i2send_msg@qptr,w,c
  8096  000F6C  6E41               	movwf	i2send_msg@qmsg,c
  8097  000F6E  50F4               	movf	prodh,w,c
  8098  000F70  2038               	addwfc	i2send_msg@qptr+1,w,c
  8099  000F72  6E42               	movwf	i2send_msg@qmsg+1,c
  8100                           
  8101                           ;messages.c: 41: if (qmsg->full != 0) {
  8102  000F74  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8103  000F78  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8104  000F7C  50DF               	movf	indf2,w,c
  8105  000F7E  B4D8               	btfsc	status,2,c
  8106  000F80  D002               	goto	i2l3736
  8107                           
  8108                           ;messages.c: 42: return (-1);
  8109  000F82  0EFF               	movlw	255
  8110  000F84  0012               	return	
  8111  000F86                     i2l3736:
  8112                           
  8113                           ;messages.c: 43: }
  8114                           ;messages.c: 46: qmsg->length = length;
  8115  000F86  EE20 F001          	lfsr	2,1
  8116  000F8A  5041               	movf	i2send_msg@qmsg,w,c
  8117  000F8C  26D9               	addwf	fsr2l,f,c
  8118  000F8E  5042               	movf	i2send_msg@qmsg+1,w,c
  8119  000F90  22DA               	addwfc	fsr2h,f,c
  8120  000F92  C039  FFDF         	movff	i2send_msg@length,indf2
  8121                           
  8122                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8123  000F96  EE20 F002          	lfsr	2,2
  8124  000F9A  5041               	movf	i2send_msg@qmsg,w,c
  8125  000F9C  26D9               	addwf	fsr2l,f,c
  8126  000F9E  5042               	movf	i2send_msg@qmsg+1,w,c
  8127  000FA0  22DA               	addwfc	fsr2h,f,c
  8128  000FA2  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  8129                           
  8130                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8131  000FA6  0E03               	movlw	3
  8132  000FA8  2441               	addwf	i2send_msg@qmsg,w,c
  8133  000FAA  6E2D               	movwf	i2memcpy@d1,c
  8134  000FAC  0E00               	movlw	0
  8135  000FAE  2042               	addwfc	i2send_msg@qmsg+1,w,c
  8136  000FB0  6E2E               	movwf	i2memcpy@d1+1,c
  8137  000FB2  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8138  000FB6  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  8139  000FBA  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  8140  000FBE  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8141  000FC2  EC12  F00C         	call	i2_memcpy	;wreg free
  8142                           
  8143                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8144  000FC6  EE20 F034          	lfsr	2,52
  8145  000FCA  5037               	movf	i2send_msg@qptr,w,c
  8146  000FCC  26D9               	addwf	fsr2l,f,c
  8147  000FCE  5038               	movf	i2send_msg@qptr+1,w,c
  8148  000FD0  22DA               	addwfc	fsr2h,f,c
  8149  000FD2  EE10 F034          	lfsr	1,52
  8150  000FD6  5037               	movf	i2send_msg@qptr,w,c
  8151  000FD8  26E1               	addwf	fsr1l,f,c
  8152  000FDA  5038               	movf	i2send_msg@qptr+1,w,c
  8153  000FDC  22E2               	addwfc	fsr1h,f,c
  8154  000FDE  50E7               	movf	indf1,w,c
  8155  000FE0  6E3D               	movwf	??i2_send_msg& (0+255),c
  8156  000FE2  283D               	incf	??i2_send_msg,w,c
  8157  000FE4  0B03               	andlw	3
  8158  000FE6  6EDF               	movwf	indf2,c
  8159                           
  8160                           ;messages.c: 59: qmsg->full = 1;
  8161  000FE8  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8162  000FEC  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8163  000FF0  0E01               	movlw	1
  8164  000FF2  6EDF               	movwf	indf2,c
  8165                           
  8166                           ;messages.c: 60: return (1);
  8167  000FF4  0E01               	movlw	1
  8168  000FF6  0012               	return	
  8169  000FF8                     __end_ofi2_send_msg:
  8170                           	opt stack 0
  8171                           pclatu	equ	0xFFB
  8172                           pclath	equ	0xFFA
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           postinc0	equ	0xFEE
  8181                           fsr0h	equ	0xFEA
  8182                           fsr0l	equ	0xFE9
  8183                           wreg	equ	0xFE8
  8184                           indf1	equ	0xFE7
  8185                           fsr1h	equ	0xFE2
  8186                           fsr1l	equ	0xFE1
  8187                           bsr	equ	0xFE0
  8188                           indf2	equ	0xFDF
  8189                           postinc2	equ	0xFDE
  8190                           postdec2	equ	0xFDD
  8191                           fsr2h	equ	0xFDA
  8192                           fsr2l	equ	0xFD9
  8193                           status	equ	0xFD8
  8194                           
  8195 ;; *************** function i2_memcpy *****************
  8196 ;; Defined at:
  8197 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  d1              2   44[COMRAM] PTR void 
  8200 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8201 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8202 ;;		 -> main@msgbuffer(11), 
  8203 ;;  s1              2   46[COMRAM] PTR const void 
  8204 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8205 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8206 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8207 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  8208 ;;		 -> main@uc(5), 
  8209 ;;  n               2   48[COMRAM] unsigned int 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  8212 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8213 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8214 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8215 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  8216 ;;		 -> main@uc(5), 
  8217 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  8218 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8219 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8220 ;;		 -> main@msgbuffer(11), 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  2   44[COMRAM] PTR void 
  8223 ;; Registers used:
  8224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8230 ;;      Params:         6       0       0       0       0
  8231 ;;      Locals:         4       0       0       0       0
  8232 ;;      Temps:          0       0       0       0       0
  8233 ;;      Totals:        10       0       0       0       0
  8234 ;;Total ram usage:       10 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		i2_send_msg
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text50
  8244  001824                     __ptext50:
  8245                           	opt stack 0
  8246  001824                     i2_memcpy:
  8247                           	opt stack 15
  8248                           
  8249                           ;incstack = 0
  8250  001824  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8251  001828  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  8252  00182C  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8253  001830  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  8254  001834  D00E               	goto	i2l3766
  8255  001836                     i2l3760:
  8256  001836  C035  FFD9         	movff	i2memcpy@s,fsr2l
  8257  00183A  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  8258  00183E  C033  FFE1         	movff	i2memcpy@d,fsr1l
  8259  001842  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  8260  001846  CFDF FFE7          	movff	indf2,indf1
  8261  00184A  4A35               	infsnz	i2memcpy@s,f,c
  8262  00184C  2A36               	incf	i2memcpy@s+1,f,c
  8263  00184E  4A33               	infsnz	i2memcpy@d,f,c
  8264  001850  2A34               	incf	i2memcpy@d+1,f,c
  8265  001852                     i2l3766:
  8266  001852  0631               	decf	i2memcpy@n,f,c
  8267  001854  A0D8               	btfss	status,0,c
  8268  001856  0632               	decf	i2memcpy@n+1,f,c
  8269  001858  2831               	incf	i2memcpy@n& (0+255),w,c
  8270  00185A  B4D8               	btfsc	status,2,c
  8271  00185C  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  8272  00185E  B4D8               	btfsc	status,2,c
  8273                           
  8274                           ;	Return value of i2_memcpy is never used
  8275  001860  0012               	return	
  8276  001862  D7E9               	goto	i2l3760
  8277  001864                     __end_ofi2_memcpy:
  8278                           	opt stack 0
  8279                           pclatu	equ	0xFFB
  8280                           pclath	equ	0xFFA
  8281                           tblptru	equ	0xFF8
  8282                           tblptrh	equ	0xFF7
  8283                           tblptrl	equ	0xFF6
  8284                           tablat	equ	0xFF5
  8285                           prodh	equ	0xFF4
  8286                           prodl	equ	0xFF3
  8287                           intcon	equ	0xFF2
  8288                           postinc0	equ	0xFEE
  8289                           fsr0h	equ	0xFEA
  8290                           fsr0l	equ	0xFE9
  8291                           wreg	equ	0xFE8
  8292                           indf1	equ	0xFE7
  8293                           fsr1h	equ	0xFE2
  8294                           fsr1l	equ	0xFE1
  8295                           bsr	equ	0xFE0
  8296                           indf2	equ	0xFDF
  8297                           postinc2	equ	0xFDE
  8298                           postdec2	equ	0xFDD
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303 ;; *************** function _SleepIfOkay *****************
  8304 ;; Defined at:
  8305 ;;		line 228 in file "../src/messages.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;		None               void
  8312 ;; Registers used:
  8313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8319 ;;      Params:         0       0       0       0       0
  8320 ;;      Locals:         0       0       0       0       0
  8321 ;;      Temps:          0       0       0       0       0
  8322 ;;      Totals:         0       0       0       0       0
  8323 ;;Total ram usage:        0 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    2
  8326 ;; This function calls:
  8327 ;;		_enter_sleep_mode
  8328 ;;		i2_check_msg
  8329 ;;		i2_in_high_int
  8330 ;;		i2_in_low_int
  8331 ;; This function is called by:
  8332 ;;		_InterruptHandlerHigh
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text51
  8337  0015FE                     __ptext51:
  8338                           	opt stack 0
  8339  0015FE                     _SleepIfOkay:
  8340                           	opt stack 17
  8341                           
  8342                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8343                           
  8344                           ;incstack = 0
  8345  0015FE  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8346  001600  D001               	goto	i2l2358
  8347  001602  0012               	return	
  8348  001604                     i2l2358:
  8349                           
  8350                           ;messages.c: 232: }
  8351                           ;messages.c: 235: if (in_low_int()) {
  8352  001604  ECF4  F00C         	call	i2_in_low_int	;wreg free
  8353  001608  5030               	movf	?i2_in_low_int+1,w,c
  8354  00160A  102F               	iorwf	?i2_in_low_int,w,c
  8355  00160C  A4D8               	btfss	status,2,c
  8356  00160E  0012               	return	
  8357                           
  8358                           ;messages.c: 237: }
  8359                           ;messages.c: 240: if (!in_high_int()) {
  8360                           
  8361                           ;messages.c: 236: return;
  8362  001610  ECDD  F00D         	call	i2_in_high_int	;wreg free
  8363  001614  502E               	movf	?i2_in_high_int+1,w,c
  8364  001616  102D               	iorwf	?i2_in_high_int,w,c
  8365  001618  B4D8               	btfsc	status,2,c
  8366  00161A  0012               	return	
  8367                           
  8368                           ;messages.c: 242: }
  8369                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8370                           
  8371                           ;messages.c: 241: return;
  8372  00161C  0101               	movlb	1	; () banked
  8373  00161E  0E01               	movlw	high _ToMainHigh_MQ
  8374  001620  6E2E               	movwf	i2check_msg@qptr+1,c
  8375  001622  0101               	movlb	1	; () banked
  8376  001624  0E6C               	movlw	low _ToMainHigh_MQ
  8377  001626  6E2D               	movwf	i2check_msg@qptr,c
  8378  001628  EC46  F00D         	call	i2_check_msg	;wreg free
  8379  00162C  0900               	iorlw	0
  8380  00162E  A4D8               	btfss	status,2,c
  8381  001630  0012               	return	
  8382                           
  8383                           ;messages.c: 249: }
  8384                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8385                           
  8386                           ;messages.c: 248: return;
  8387  001632  0100               	movlb	0	; () banked
  8388  001634  0E00               	movlw	high _ToMainLow_MQ
  8389  001636  6E2E               	movwf	i2check_msg@qptr+1,c
  8390  001638  0100               	movlb	0	; () banked
  8391  00163A  0E80               	movlw	low _ToMainLow_MQ
  8392  00163C  6E2D               	movwf	i2check_msg@qptr,c
  8393  00163E  EC46  F00D         	call	i2_check_msg	;wreg free
  8394  001642  0900               	iorlw	0
  8395  001644  B4D8               	btfsc	status,2,c
  8396                           
  8397                           ;messages.c: 252: }
  8398                           ;messages.c: 253: enter_sleep_mode();
  8399                           
  8400                           ;messages.c: 251: return;
  8401  001646  ECE7  F00D         	call	_enter_sleep_mode	;wreg free
  8402  00164A  0012               	return	
  8403  00164C                     __end_of_SleepIfOkay:
  8404                           	opt stack 0
  8405                           pclatu	equ	0xFFB
  8406                           pclath	equ	0xFFA
  8407                           tblptru	equ	0xFF8
  8408                           tblptrh	equ	0xFF7
  8409                           tblptrl	equ	0xFF6
  8410                           tablat	equ	0xFF5
  8411                           prodh	equ	0xFF4
  8412                           prodl	equ	0xFF3
  8413                           intcon	equ	0xFF2
  8414                           postinc0	equ	0xFEE
  8415                           fsr0h	equ	0xFEA
  8416                           fsr0l	equ	0xFE9
  8417                           wreg	equ	0xFE8
  8418                           indf1	equ	0xFE7
  8419                           fsr1h	equ	0xFE2
  8420                           fsr1l	equ	0xFE1
  8421                           bsr	equ	0xFE0
  8422                           indf2	equ	0xFDF
  8423                           postinc2	equ	0xFDE
  8424                           postdec2	equ	0xFDD
  8425                           fsr2h	equ	0xFDA
  8426                           fsr2l	equ	0xFD9
  8427                           status	equ	0xFD8
  8428                           
  8429 ;; *************** function i2_in_low_int *****************
  8430 ;; Defined at:
  8431 ;;		line 30 in file "../src/interrupts.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;		None
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  2   46[COMRAM] int 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8445 ;;      Params:         2       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0
  8447 ;;      Temps:          0       0       0       0       0
  8448 ;;      Totals:         2       0       0       0       0
  8449 ;;Total ram usage:        2 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    1
  8452 ;; This function calls:
  8453 ;;		i2_in_high_int
  8454 ;; This function is called by:
  8455 ;;		_SleepIfOkay
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text52
  8460  0019E8                     __ptext52:
  8461                           	opt stack 0
  8462  0019E8                     i2_in_low_int:
  8463                           	opt stack 17
  8464                           
  8465                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8466                           
  8467                           ;incstack = 0
  8468  0019E8  ACF2               	btfss	intcon,6,c	;volatile
  8469  0019EA  D005               	goto	i2l3150
  8470                           
  8471                           ;interrupts.c: 32: return (0);
  8472  0019EC  0E00               	movlw	0
  8473  0019EE  6E30               	movwf	?i2_in_low_int+1,c
  8474  0019F0  0E00               	movlw	0
  8475  0019F2  6E2F               	movwf	?i2_in_low_int,c
  8476  0019F4  0012               	return	
  8477  0019F6                     i2l3150:
  8478  0019F6  ECDD  F00D         	call	i2_in_high_int	;wreg free
  8479  0019FA  502E               	movf	?i2_in_high_int+1,w,c
  8480  0019FC  102D               	iorwf	?i2_in_high_int,w,c
  8481  0019FE  B4D8               	btfsc	status,2,c
  8482  001A00  D005               	goto	i2l3158
  8483                           
  8484                           ;interrupts.c: 34: return (0);
  8485  001A02  0E00               	movlw	0
  8486  001A04  6E30               	movwf	?i2_in_low_int+1,c
  8487  001A06  0E00               	movlw	0
  8488  001A08  6E2F               	movwf	?i2_in_low_int,c
  8489  001A0A  0012               	return	
  8490  001A0C                     i2l3158:
  8491                           
  8492                           ;interrupts.c: 36: return (1);
  8493  001A0C  0E00               	movlw	0
  8494  001A0E  6E30               	movwf	?i2_in_low_int+1,c
  8495  001A10  0E01               	movlw	1
  8496  001A12  6E2F               	movwf	?i2_in_low_int,c
  8497  001A14  0012               	return	
  8498  001A16                     __end_ofi2_in_low_int:
  8499                           	opt stack 0
  8500                           pclatu	equ	0xFFB
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           postinc0	equ	0xFEE
  8510                           fsr0h	equ	0xFEA
  8511                           fsr0l	equ	0xFE9
  8512                           wreg	equ	0xFE8
  8513                           indf1	equ	0xFE7
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           bsr	equ	0xFE0
  8517                           indf2	equ	0xFDF
  8518                           postinc2	equ	0xFDE
  8519                           postdec2	equ	0xFDD
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8
  8523                           
  8524 ;; *************** function i2_in_high_int *****************
  8525 ;; Defined at:
  8526 ;;		line 22 in file "../src/interrupts.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  2   44[COMRAM] int 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8540 ;;      Params:         2       0       0       0       0
  8541 ;;      Locals:         0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0
  8543 ;;      Totals:         2       0       0       0       0
  8544 ;;Total ram usage:        2 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_SleepIfOkay
  8550 ;;		i2_in_low_int
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text53
  8555  001BBA                     __ptext53:
  8556                           	opt stack 0
  8557  001BBA                     i2_in_high_int:
  8558                           	opt stack 17
  8559                           
  8560                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8561                           
  8562                           ;incstack = 0
  8563  001BBA  0E00               	movlw	0
  8564  001BBC  AEF2               	btfss	intcon,7,c	;volatile
  8565  001BBE  0E01               	movlw	1
  8566  001BC0  6E2D               	movwf	?i2_in_high_int,c
  8567  001BC2  6A2E               	clrf	?i2_in_high_int+1,c
  8568  001BC4  0012               	return	
  8569  001BC6                     __end_ofi2_in_high_int:
  8570                           	opt stack 0
  8571                           pclatu	equ	0xFFB
  8572                           pclath	equ	0xFFA
  8573                           tblptru	equ	0xFF8
  8574                           tblptrh	equ	0xFF7
  8575                           tblptrl	equ	0xFF6
  8576                           tablat	equ	0xFF5
  8577                           prodh	equ	0xFF4
  8578                           prodl	equ	0xFF3
  8579                           intcon	equ	0xFF2
  8580                           postinc0	equ	0xFEE
  8581                           fsr0h	equ	0xFEA
  8582                           fsr0l	equ	0xFE9
  8583                           wreg	equ	0xFE8
  8584                           indf1	equ	0xFE7
  8585                           fsr1h	equ	0xFE2
  8586                           fsr1l	equ	0xFE1
  8587                           bsr	equ	0xFE0
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           fsr2h	equ	0xFDA
  8592                           fsr2l	equ	0xFD9
  8593                           status	equ	0xFD8
  8594                           
  8595 ;; *************** function i2_check_msg *****************
  8596 ;; Defined at:
  8597 ;;		line 222 in file "../src/messages.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8600 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      unsigned char 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8612 ;;      Params:         2       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0
  8614 ;;      Temps:          1       0       0       0       0
  8615 ;;      Totals:         3       0       0       0       0
  8616 ;;Total ram usage:        3 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_SleepIfOkay
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text54
  8626  001A8C                     __ptext54:
  8627                           	opt stack 0
  8628  001A8C                     i2_check_msg:
  8629                           	opt stack 18
  8630                           
  8631                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8632                           
  8633                           ;incstack = 0
  8634  001A8C  EE20 F035          	lfsr	2,53
  8635  001A90  502D               	movf	i2check_msg@qptr,w,c
  8636  001A92  26D9               	addwf	fsr2l,f,c
  8637  001A94  502E               	movf	i2check_msg@qptr+1,w,c
  8638  001A96  22DA               	addwfc	fsr2h,f,c
  8639  001A98  50DF               	movf	indf2,w,c
  8640  001A9A  6E2F               	movwf	??i2_check_msg& (0+255),c
  8641  001A9C  502F               	movf	??i2_check_msg,w,c
  8642  001A9E  0D0D               	mullw	13
  8643  001AA0  50F3               	movf	prodl,w,c
  8644  001AA2  242D               	addwf	i2check_msg@qptr,w,c
  8645  001AA4  6ED9               	movwf	fsr2l,c
  8646  001AA6  50F4               	movf	prodh,w,c
  8647  001AA8  202E               	addwfc	i2check_msg@qptr+1,w,c
  8648  001AAA  6EDA               	movwf	fsr2h,c
  8649  001AAC  50DF               	movf	indf2,w,c
  8650  001AAE  0012               	return	
  8651  001AB0                     __end_ofi2_check_msg:
  8652                           	opt stack 0
  8653                           pclatu	equ	0xFFB
  8654                           pclath	equ	0xFFA
  8655                           tblptru	equ	0xFF8
  8656                           tblptrh	equ	0xFF7
  8657                           tblptrl	equ	0xFF6
  8658                           tablat	equ	0xFF5
  8659                           prodh	equ	0xFF4
  8660                           prodl	equ	0xFF3
  8661                           intcon	equ	0xFF2
  8662                           postinc0	equ	0xFEE
  8663                           fsr0h	equ	0xFEA
  8664                           fsr0l	equ	0xFE9
  8665                           wreg	equ	0xFE8
  8666                           indf1	equ	0xFE7
  8667                           fsr1h	equ	0xFE2
  8668                           fsr1l	equ	0xFE1
  8669                           bsr	equ	0xFE0
  8670                           indf2	equ	0xFDF
  8671                           postinc2	equ	0xFDE
  8672                           postdec2	equ	0xFDD
  8673                           fsr2h	equ	0xFDA
  8674                           fsr2l	equ	0xFD9
  8675                           status	equ	0xFD8
  8676                           
  8677 ;; *************** function _enter_sleep_mode *****************
  8678 ;; Defined at:
  8679 ;;		line 202 in file "../src/messages.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;		None
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;		None               void
  8686 ;; Registers used:
  8687 ;;		None
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8693 ;;      Params:         0       0       0       0       0
  8694 ;;      Locals:         0       0       0       0       0
  8695 ;;      Temps:          0       0       0       0       0
  8696 ;;      Totals:         0       0       0       0       0
  8697 ;;Total ram usage:        0 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; This function calls:
  8700 ;;		Nothing
  8701 ;; This function is called by:
  8702 ;;		_SleepIfOkay
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text55
  8707  001BCE                     __ptext55:
  8708                           	opt stack 0
  8709  001BCE                     _enter_sleep_mode:
  8710                           	opt stack 18
  8711                           
  8712                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8713                           
  8714                           ;incstack = 0
  8715  001BCE  8ED3               	bsf	4051,7,c	;volatile
  8716  001BD0  0003               	sleep		;# 
  8717  001BD2  0012               	return	
  8718  001BD4                     __end_of_enter_sleep_mode:
  8719                           	opt stack 0
  8720  0000                     pclatu	equ	0xFFB
  8721                           pclath	equ	0xFFA
  8722                           tblptru	equ	0xFF8
  8723                           tblptrh	equ	0xFF7
  8724                           tblptrl	equ	0xFF6
  8725                           tablat	equ	0xFF5
  8726                           prodh	equ	0xFF4
  8727                           prodl	equ	0xFF3
  8728                           intcon	equ	0xFF2
  8729                           postinc0	equ	0xFEE
  8730                           fsr0h	equ	0xFEA
  8731                           fsr0l	equ	0xFE9
  8732                           wreg	equ	0xFE8
  8733                           indf1	equ	0xFE7
  8734                           fsr1h	equ	0xFE2
  8735                           fsr1l	equ	0xFE1
  8736                           bsr	equ	0xFE0
  8737                           indf2	equ	0xFDF
  8738                           postinc2	equ	0xFDE
  8739                           postdec2	equ	0xFDD
  8740                           fsr2h	equ	0xFDA
  8741                           fsr2l	equ	0xFD9
  8742                           status	equ	0xFD8
  8743                           pclatu	equ	0xFFB
  8744                           pclath	equ	0xFFA
  8745                           tblptru	equ	0xFF8
  8746                           tblptrh	equ	0xFF7
  8747                           tblptrl	equ	0xFF6
  8748                           tablat	equ	0xFF5
  8749                           prodh	equ	0xFF4
  8750                           prodl	equ	0xFF3
  8751                           intcon	equ	0xFF2
  8752                           postinc0	equ	0xFEE
  8753                           fsr0h	equ	0xFEA
  8754                           fsr0l	equ	0xFE9
  8755                           wreg	equ	0xFE8
  8756                           indf1	equ	0xFE7
  8757                           fsr1h	equ	0xFE2
  8758                           fsr1l	equ	0xFE1
  8759                           bsr	equ	0xFE0
  8760                           indf2	equ	0xFDF
  8761                           postinc2	equ	0xFDE
  8762                           postdec2	equ	0xFDD
  8763                           fsr2h	equ	0xFDA
  8764                           fsr2l	equ	0xFD9
  8765                           status	equ	0xFD8
  8766                           
  8767                           	psect	rparam
  8768  0000                     pclatu	equ	0xFFB
  8769                           pclath	equ	0xFFA
  8770                           tblptru	equ	0xFF8
  8771                           tblptrh	equ	0xFF7
  8772                           tblptrl	equ	0xFF6
  8773                           tablat	equ	0xFF5
  8774                           prodh	equ	0xFF4
  8775                           prodl	equ	0xFF3
  8776                           intcon	equ	0xFF2
  8777                           postinc0	equ	0xFEE
  8778                           fsr0h	equ	0xFEA
  8779                           fsr0l	equ	0xFE9
  8780                           wreg	equ	0xFE8
  8781                           indf1	equ	0xFE7
  8782                           fsr1h	equ	0xFE2
  8783                           fsr1l	equ	0xFE1
  8784                           bsr	equ	0xFE0
  8785                           indf2	equ	0xFDF
  8786                           postinc2	equ	0xFDE
  8787                           postdec2	equ	0xFDD
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         223
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70      83
    BANK0           128     49     103
    BANK1           256     89     251
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), main@ic(BANK1[53]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), main@ic(BANK1[53]), 
		 -> main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_write@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 53
		 -> main@ic(BANK1[53]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 53
		 -> NULL(NULL[0]), main@ic(BANK1[53]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 53
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[53]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 53
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[53]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_write->_WriteUSART
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0   10990
                                             12 BANK1     77    77      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           5     3      2     219
                                             26 BANK0      5     3      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             25 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2710
                                             48 BANK0      1     1      0
                                              3 BANK1      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             47 BANK0      1     1      0
                                              0 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             35 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             25 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             29 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             25 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     2      0      22
                                             25 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             31 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             29 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             35 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             25 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             25 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2841
                                             27 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2723
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2700
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0     118
                                              4 COMRAM     2     2      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7842
                                             11 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0     133
                                             48 COMRAM     2     2      0
                        _WriteTimer0
               _i2c_configure_master
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (12) _i2c_master_recv                                     1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _i2c_configure_master                                2     2      0      22
                                             44 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    7473
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              11    11      0    4123
                                              0 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               6     4      2     158
                                             44 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              1     1      0    3350
                                              0 BANK0      1     1      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3350
                                             66 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2347
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
   _uart_write
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
     _i2c_configure_master
     _i2c_master_recv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     59      FB       6       98.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     31      67       5       80.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     46      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B5       9        0.0%
DATA                 0      0     1B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Apr 15 11:47:39 2014

                     uart_write@msg 00D0                    main@uthread_data 01B9  
                                 _x 0049            _MQ_Main_Willing_to_block 004B  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 17A2  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 1A66  
                      __CFG_CP0$OFF 000000                                 l106 09EE  
                               l500 1910                                 l501 1912  
                               l542 11FA                                 l392 1562  
                               l474 1A3A                                 l546 121A  
                               l475 1A3C                                 l547 121C  
                               l548 122A                                 l549 122C  
                               l498 18F8                                 l786 1B28  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                    _FromMainLow_MQ 0136                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00CF  
                  ??_init_uart_recv 00D1                     ReadTimer1@timer 0003  
                              l2302 16C8                                l1098 12D8  
                              l2316 170C                                l3070 1B48  
                              l3400 15C2                                l3420 0CD6  
                              l2542 11FC                                l2534 11E6  
                              l3406 15E6                                l2294 16A6  
                              l2606 158E                                l3350 0A64  
                              l3342 0A0E                                l3352 0AB6  
                              l3336 097E                                l3344 0A26  
                              l3328 093C                                l3338 09D0  
                              l3436 0D9C                                l2580 1382  
                              l2636 142A                                l3356 0B08  
                              l2494 18FA                                l2592 13DA  
                              l3720 12C4                                l3712 1276  
                              l2586 13AE                                l3386 0DFC  
                              l3714 1288                                l3716 1290  
                              _LATB 000F8A                                u2857 1B2A  
                              i1l49 0070                    uart_write@length 00D3  
                   _FromMainHigh_MQ 0100                                _Send 0047  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 08B0                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01C4  
                        i1_send_msg 0EA4                                pclat 000FFA  
                       i2_check_msg 1A8C                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00B6                       __CFG_FOSC2$ON 000000  
                        i2_send_msg 0F4E       __size_of_i2c_configure_master 0044  
         ToMainHigh_recvmsg@msgtype 01A2                      send_msg@length 00DB  
       __size_of_timer0_int_handler 0032             ??_i2c_slave_int_handler 00B6  
                       _Delay1KTCYx 1B24                               ?_main 0001  
                             _T0CON 000FD5                               _T1CON 000FCD  
                   __end_of___lwmod 12E2                          i1memcpy@d1 0001  
                             i1l560 1ADC                               i2l321 03DA  
                             i2l313 02E8                               i2l327 0468  
                             i2l353 073C                               i2l346 05FC  
                             i2l275 118C                               i2l357 07F6  
                             i2l293 0456                               i2l295 0170  
                             i2l299 01AE                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 002D                          i2memcpy@s1 002F  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 171C          ToMainLow_recvmsg@maxlength 01A6  
           timer0_lthread@msgbuffer 00D5             i2c_configure_slave@addr 00D0  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 1824                    __end_ofi2_memcpy 1864  
                    WriteUSART@data 00CF                     __initialization 164C  
                      __end_of_main 0B22                          _ReadTimer1 1B96  
       __size_of_timer1_int_handler 001A          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 002E  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 00E7  
                   send_msg@msgtype 00DC                       __activetblptr 000002  
                   send_msg@tlength 00E0                __end_of_handle_start 11C6  
           ??_uart_recv_int_handler 001B                              i1l3820 0066  
                            i1l3750 17F6                              i1l3808 1074  
                            i1l3756 1812                              i1l3780 0EDC  
                            i2l3150 19F6                          _OpenTimer0 1A16  
                        _OpenTimer1 18DE                              i2l3158 1A0C  
                            i2l2358 1604                      __CFG_WDTEN$OFF 000000  
                            i2l3520 06E4                              i2l3530 0754  
                            i2l3506 0678                              i2l3514 06B6  
                            i2l3282 1326                              i2l3524 0710  
                            i2l3604 01E0                              i2l3292 1AFA  
                            i2l3276 131C                              i2l3470 0BBA  
                            i2l3462 0B38                              i2l3702 05A2  
                            i2l3622 0242                              i2l3606 0200  
                            i2l3286 1AEE                              i2l3552 0838  
                            i2l3536 0782                              i2l3624 0270  
                            i2l3616 0230                              i2l3288 1AF4  
                            i2l3546 07FC                              i2l3490 11A2  
                            i2l3466 0B98                              i2l3474 0C0E  
                            i2l3564 0876                              i2l3492 11B4  
                            i2l3652 0384                              i2l3580 014E  
                            i2l3646 0342                              i2l3760 1836  
                            i2l3736 0F86                              i2l3496 05CE  
                            i2l3680 046C                              i2l3648 0372  
                            i2l3674 0430                              i2l3586 0166  
                            i2l3766 1852                              i2l3694 0526  
                            i2l3686 04B4         __end_of_i2c_configure_slave 19B6  
                     ??_SleepIfOkay 0031                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 0148                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 0C6A                  timer0_lthread@tptr 00CF  
                      i2_in_low_int 19E8                         ?i2_send_msg 0037  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 1AEC   i2c_slave_int_handler@data_written 00BB  
                   _i2c_master_recv 18A2                    OpenTimer0@config 00CF  
                            _ic_ptr 004E                           ??___lwmod 00D3  
                     main@msgbuffer 01AE                    __end_of_init_i2c 112E  
                  OpenTimer1@config 00CF                              _memcpy 15A0  
                            clear_0 1652                              clear_1 165E  
                            clear_2 166A                              _uc_ptr 0050  
                            main@ic 01C6                              main@uc 01BF  
                  __end_of_recv_msg 0DA0         start_i2c_slave_reply@length 0032  
                         ??_in_main 00D5                    __end_of_send_msg 0EA4  
                      __pdataCOMRAM 0052               timer0_int_handler@val 0032  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00D2  
          ToMainLow_recvmsg@msgtype 01A2                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1688          __end_of_ToMainHigh_recvmsg 17E4  
        __end_of_ToMainHigh_sendmsg 1A8C         __end_of_init_timer1_lthread 1B72  
               __end_of_SleepIfOkay 164C                          _WriteUSART 1B3A  
                    __pcstackCOMRAM 0001              __size_ofi2_in_high_int 000C  
                       ?_ReadTimer1 0001                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 1AEC                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 135C  
       __end_of_InterruptHandlerLow 00B6                           ?i2_memcpy 002D  
                     _ToMainHigh_MQ 016C                    _enter_sleep_mode 1BCE  
               __size_ofi2_send_msg 00AA                timer1_lthread@length 01A9  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1258  
                     check_msg@qptr 00CF                timer1_lthread@retval 01AD  
           ??_block_on_To_msgqueues 00D5                __size_of_init_queues 006E  
                        __pbssBANK0 0080                          __pbssBANK1 0100  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 004E             __end_of_i2c_int_handler 1B0A  
                      ?i2_check_msg 002D             __end_of_i2c_master_recv 18DE  
                timer1_lthread@tptr 01A5            ??_i2c_master_int_handler 00B6  
                 recv_msg@maxlength 00DB                     recv_msg@msgtype 00DC  
                   recv_msg@tlength 00E3               __size_of_handle_start 0098  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 002F  
                           ?_memcpy 00CF                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 0512             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 05CC             __size_of_timer1_lthread 0072  
      __end_of_i2c_configure_master 1760                          ??i1_memcpy 0007  
                        ??i2_memcpy 0033                    i1send_msg@length 000D  
                     i2_in_high_int 1BBA                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 1982  
                         ?_init_i2c 00CF                         _SleepIfOkay 15FE  
                         ?_recv_msg 00D9                          _in_low_int 1692  
                      _handle_start 112E                             __Hparam 0000  
                         ?_send_msg 00D9                             __Lparam 0000  
        __end_of_timer0_int_handler 19E8                         ?_WriteUSART 0001  
                  init_uart_recv@uc 00CF                             ___lwmod 1258  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00BC  
                           __pcinit 164C                     __size_of_memcpy 005E  
                        _init_queue 13E2                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 08B0                             __ptext1 153C  
                           __ptext2 1B3A                             __ptext3 1864  
                           __ptext4 145C                             __ptext5 1258  
                           __ptext6 1916                             __ptext7 0DA0  
                           __ptext8 1B4E                             __ptext9 1AB0  
                         _T0CONbits 000FD5                             _in_main 16D8  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 1BBA  
               __end_of_WriteTimer1 1B96                      ?i2_in_high_int 002D  
                    __pintcode_body 12E2                end_of_initialization 1688  
           timer1_lthread@msgbuffer 01AB        __end_of_FromMainHigh_sendmsg 194C  
    __size_of_uart_recv_int_handler 009C          FromMainHigh_sendmsg@length 00E5  
                           memcpy@d 00D5                             memcpy@n 00D3  
                           memcpy@s 00D7       __end_of_uart_recv_int_handler 1094  
                        ??_init_i2c 00D1                       __Lmediumconst 0000  
                           int_func 12E2                        ??i1_send_msg 0011  
                     ?_uart_lthread 00CF             __size_of_init_uart_recv 001E  
                  ?_i2c_int_handler 0001                    ?_i2c_master_recv 0001  
                        ??_recv_msg 00E0                        ??i2_send_msg 003D  
                        ??_send_msg 00DF     __size_of_i2c_master_int_handler 02E4  
        __end_of_timer1_int_handler 1B24                           _RCSTAbits 000FAB  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0043  
                        _uart_write 153C                  __end_ofi1_send_msg 0F4E  
       FromMainHigh_sendmsg@msgtype 01A2                           _TRISCbits 000F94  
                       uart_write@i 00D4                  __end_ofi2_send_msg 0FF8  
               __size_of_WriteUSART 0014            timer1_int_handler@result 0005  
                    ??_uart_lthread 00D7                           _TXSTAbits 000FAC  
                        main@length 01C5                         ?_in_low_int 00D1  
             timer0_lthread@msgtype 00D1                _i2c_configure_master 171C  
             _start_i2c_slave_reply 0B22        __size_of_i2c_configure_slave 0034  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 1BD4  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 17A2  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1A66  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                     __pidataCOMRAM 1BD4                      _timer0_lthread 1B4E  
                       ?_init_queue 00CF                           i2memcpy@d 0033  
                       _WriteTimer0 1BA8                         _WriteTimer1 1B84  
                         i2memcpy@n 0031                           i2memcpy@s 0035  
                    _timer1_lthread 145C                      __end_of_memcpy 15FE  
                 _enable_interrupts 1BC6                __size_of_Delay1KTCYx 0016  
               ?_ToMainHigh_recvmsg 01A2                     ??i2_in_high_int 002F  
               ?_ToMainHigh_sendmsg 0043                  ?_enable_interrupts 0001  
               start_initialization 164C              _i2c_master_int_handler 05CC  
                     ??_in_high_int 00D1                           _ReadUSART 1ACE  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 0040  
               ??_enable_interrupts 00CF                        ??_OpenTimer0 00CF  
                      ??_OpenTimer1 00CF      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 1BA8       __end_of_block_on_To_msgqueues 13E2  
                         _OpenUSART 11C6        __end_of_InterruptHandlerHigh 1364  
                        init_i2c@ic 00CF                ??_ToMainHigh_recvmsg 00E7  
              ??_ToMainHigh_sendmsg 0046               ?_i2c_configure_master 0001  
            __end_of_timer0_lthread 1B60              __end_of_timer1_lthread 14CE  
         __end_of_enable_interrupts 1BCE                            ??_memcpy 00D5  
             timer1_lthread@msgtype 01A7                _FromMainHigh_sendmsg 1916  
                       ?_uart_write 00D0        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1A40                  __end_of_OpenTimer1 1916  
                       __pbssCOMRAM 0047                          ?_ReadUSART 0001  
                     ??_init_queues 00D3                       __pcstackBANK0 00B6  
                     __pcstackBANK1 01A2                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00CF            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 009E      i2c_slave_int_handler@data_read 00C0  
               __end_of_in_high_int 1B84                          ?_OpenUSART 00CF  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01A4  
                      _ToMainLow_MQ 0080                 __size_of_init_queue 007A  
                    _init_uart_recv 1AB0                           _check_msg 194C  
            ?_start_i2c_slave_reply 002D                   __size_of_init_i2c 009A  
                      recv_msg@data 00DE                        ??_WriteUSART 00CF  
                      recv_msg@qmsg 00E5                        recv_msg@slot 00E2  
                      recv_msg@qptr 00D9                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                   ?_timer0_lthread 00CF                            ?___lwmod 00CF  
                   ?_timer1_lthread 01A5               ?_FromMainHigh_sendmsg 01A2  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01A4  
              __end_of_uart_lthread 18A2                            ?_in_main 00D3  
                 WriteTimer0@timer0 002D                  _timer0_int_handler 19B6  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00BA  
               uart_lthread@msgtype 00D1      i2c_slave_int_handler@error_buf 00B8  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 1B4E                    uart_lthread@uptr 00CF  
    i2c_slave_int_handler@msg_ready 00BF              __end_of_init_uart_recv 1ACE  
               __end_of_init_queues 153C               i2c_master_recv@length 002D  
                          _LATCbits 000F8B                 __size_of_uart_write 0064  
            ??_i2c_configure_master 002D                     i2check_msg@qptr 002D  
                        ?_check_msg 00CF                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                     _I2C_Buffer_Size 0052  
                     ?i2_in_low_int 002F                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 0044                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 0031  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                timer0_lthread@length 00D3  
                _timer1_int_handler 1B0A                            i1_memcpy 17E4  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1824                timer0_lthread@msgval 00D7  
                       _in_high_int 1B72                        send_msg@data 00DD  
               _i2c_configure_slave 1982                        send_msg@qmsg 00E3  
                      send_msg@slot 00E2                        send_msg@qptr 00D9  
             uart_lthread@msgbuffer 00D5                 ?_timer1_int_handler 0001  
                   ?_init_uart_recv 00CF                            _i2c_mode 004D  
                       ??_OpenUSART 00D1                     OpenUSART@config 00D4  
                    ??i2_in_low_int 0031               _uart_recv_int_handler 0FF8  
                      ??_in_low_int 00D3                            __Hrparam 0000  
              ?_i2c_configure_slave 0001                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_sendmsg 00E5  
              ??_timer1_int_handler 0005            __size_of_i2c_int_handler 001E  
                ??_enter_sleep_mode 002D            __size_of_i2c_master_recv 003C  
                  __size_of___lwmod 008A                        ??_init_queue 00D1  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 01A3             ToMainLow_sendmsg@length 001A  
           ?_i2c_master_int_handler 0001              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01BB               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 003A  
       ToMainHigh_recvmsg@maxlength 01A6                   i2send_msg@tlength 003E  
           init_timer1_lthread@tptr 00CF                         _init_queues 14CE  
                __end_of_in_low_int 16D8                            __ptext10 1B60  
                          __ptext11 14CE                            __ptext20 194C  
                          __ptext12 13E2                            __ptext21 1B24  
                          __ptext13 1094                            __ptext30 0FF8  
                          __ptext22 1760                            __ptext14 1982  
                          __ptext31 1A40                            __ptext23 17A2  
                          __ptext15 1BC6                            __ptext40 18A2  
                          __ptext32 0EA4                            __ptext24 0C6A  
                          __ptext16 1364                            __ptext41 171C  
                          __ptext33 17E4                            __ptext25 15A0  
                          __ptext17 16D8                            __ptext50 1824  
                          __ptext42 1BA8                            __ptext34 1ACE  
                          __ptext26 11C6                            __ptext18 1692  
                          __ptext51 15FE                            __ptext43 1AEC  
                          __ptext35 1B0A                            __ptext27 18DE  
                          __ptext19 1B72                            __ptext52 19E8  
                          __ptext44 00BA                            __ptext36 1B84  
                          __ptext28 1A16                            __ptext53 1BBA  
                          __ptext45 0B22                            __ptext37 1B96  
                          __ptext54 1A8C                            __ptext46 112E  
                          __ptext55 1BCE                            __ptext47 05CC  
                          __ptext39 19B6                            __ptext48 1A66  
                          __ptext49 0F4E                      i1send_msg@data 000F  
    i2c_configure_master@slave_addr 002E                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 00D3                            _init_i2c 1094  
               _init_timer1_lthread 1B60                       __size_of_main 0272  
                     ??i2_check_msg 002F                   main@t1thread_data 01BD  
                       ??_check_msg 00D1                  __end_of_init_queue 145C  
              __size_of_SleepIfOkay 004E                            _recv_msg 0C6A  
  i2c_slave_int_handler@msg_to_send 00BE               ??_i2c_configure_slave 00CF  
                          _send_msg 0DA0                      init_queue@qptr 00CF  
             __size_of_uart_lthread 003E                       ??_Delay1KTCYx 00CF  
    __end_of_i2c_master_int_handler 08B0                 _InterruptHandlerLow 0018  
                      ??_uart_write 00D2                ?_init_timer1_lthread 00CF  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 00CF                            memcpy@d1 00CF  
                          memcpy@s1 00D1               __end_ofi2_in_high_int 1BC6  
                  i2send_msg@length 0039                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 002F                    ___lwmod@dividend 00CF  
            ?_uart_recv_int_handler 0001                        _uart_lthread 1864  
                __end_of_uart_write 15A0               _block_on_To_msgqueues 1364  
                     ?_handle_start 0001                    ??_timer0_lthread 00D7  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0026  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 00E6  
          ToMainHigh_sendmsg@length 0046                 __end_ofi2_check_msg 1AB0  
             ??_init_timer1_lthread 00D1              ??_InterruptHandlerHigh 00C1  
                 _ToMainLow_recvmsg 1760                   _ToMainLow_sendmsg 1A40  
                   ___lwmod@divisor 00D1                __end_ofi2_in_low_int 1A16  
                ?_ToMainLow_recvmsg 01A2                 __end_of_Delay1KTCYx 1B3A  
                 ??_i2c_int_handler 0047                     ___lwmod@counter 00D4  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_recv 002D  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 003B               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 00E7                      i2send_msg@qmsg 0041  
                    i2send_msg@slot 0040                      i2send_msg@qptr 0037  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00BD  
                    ??_handle_start 002D                        _USART_Status 004C  
