

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Apr 15 11:59:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001BD6                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for _I2C_Buffer_Size
    80  001BD6  0017               	dw	23
    81  0000                     _INTCONbits	set	4082
    82  0000                     _IPR1bits	set	3999
    83  0000                     _LATB	set	3978
    84  0000                     _LATCbits	set	3979
    85  0000                     _OSCCON	set	4051
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _OSCTUNEbits	set	3995
    88  0000                     _PIE1bits	set	3997
    89  0000                     _PIR1bits	set	3998
    90  0000                     _RCONbits	set	4048
    91  0000                     _RCREG	set	4014
    92  0000                     _RCSTA	set	4011
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _SSPADD	set	4040
    97  0000                     _SSPBUF	set	4041
    98  0000                     _SSPCON1	set	4038
    99  0000                     _SSPCON1bits	set	4038
   100  0000                     _SSPCON2	set	4037
   101  0000                     _SSPCON2bits	set	4037
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _SSPSTATbits	set	4039
   104  0000                     _T0CON	set	4053
   105  0000                     _T0CONbits	set	4053
   106  0000                     _T1CON	set	4045
   107  0000                     _T1CONbits	set	4045
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TMR1H	set	4047
   111  0000                     _TMR1L	set	4046
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TXREG	set	4013
   115  0000                     _TXSTA	set	4012
   116  0000                     _TXSTAbits	set	4012
   117                           
   118                           	psect	nvCOMRAM
   119  00004E                     __pnvCOMRAM:
   120                           	opt stack 0
   121  00004E                     _ic_ptr:
   122                           	opt stack 0
   123  00004E                     	ds	2
   124  000050                     _uc_ptr:
   125                           	opt stack 0
   126  000050                     	ds	2
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  00164E                     __pcinit:
   132                           	opt stack 0
   133  00164E                     start_initialization:
   134                           	opt stack 0
   135  00164E                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to BANK1 (162 bytes)
   139  00164E  EE01  F000         	lfsr	0,__pbssBANK1
   140  001652  0EA2               	movlw	162
   141  001654                     clear_0:
   142  001654  6AEE               	clrf	postinc0,c
   143  001656  06E8               	decf	wreg,f,c
   144  001658  E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to BANK0 (54 bytes)
   147  00165A  EE00  F080         	lfsr	0,__pbssBANK0
   148  00165E  0E36               	movlw	54
   149  001660                     clear_1:
   150  001660  6AEE               	clrf	postinc0,c
   151  001662  06E8               	decf	wreg,f,c
   152  001664  E1FD               	bnz	clear_1
   153                           
   154                           ; Clear objects allocated to COMRAM (7 bytes)
   155  001666  EE00  F047         	lfsr	0,__pbssCOMRAM
   156  00166A  0E07               	movlw	7
   157  00166C                     clear_2:
   158  00166C  6AEE               	clrf	postinc0,c
   159  00166E  06E8               	decf	wreg,f,c
   160  001670  E1FD               	bnz	clear_2
   161                           
   162                           ; Initialize objects allocated to COMRAM (2 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  001672  0ED6               	movlw	low __pidataCOMRAM
   165  001674  6EF6               	movwf	tblptrl,c
   166  001676  0E1B               	movlw	high __pidataCOMRAM
   167  001678  6EF7               	movwf	tblptrh,c
   168  00167A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  00167C  6EF8               	movwf	tblptru,c
   170  00167E  0009               	tblrd		*+	;fetch initializer
   171  001680  CFF5 F052          	movff	tablat,__pdataCOMRAM
   172  001684  0009               	tblrd		*+	;fetch initializer
   173  001686  CFF5 F053          	movff	tablat,__pdataCOMRAM+1
   174  00168A                     end_of_initialization:
   175                           	opt stack 0
   176  00168A                     __end_of__initialization:
   177                           	opt stack 0
   178  00168A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  00168C  6EF8               	movwf	tblptru,c
   180  00168E  0100               	movlb	0
   181  001690  EF58  F004         	goto	_main	;jump to C main() function
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           
   189                           	psect	bssCOMRAM
   190  000047                     __pbssCOMRAM:
   191                           	opt stack 0
   192  000047                     _Send:
   193                           	opt stack 0
   194  000047                     	ds	2
   195  000049                     _x:
   196                           	opt stack 0
   197  000049                     	ds	2
   198  00004B                     _MQ_Main_Willing_to_block:
   199                           	opt stack 0
   200  00004B                     	ds	1
   201  00004C                     _USART_Status:
   202                           	opt stack 0
   203  00004C                     	ds	1
   204  00004D                     _i2c_mode:
   205                           	opt stack 0
   206  00004D                     	ds	1
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	dataCOMRAM
   215  000052                     __pdataCOMRAM:
   216                           	opt stack 0
   217  000052                     _I2C_Buffer_Size:
   218                           	opt stack 0
   219  000052                     	ds	2
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           	psect	bssBANK0
   228  000080                     __pbssBANK0:
   229                           	opt stack 0
   230  000080                     _ToMainLow_MQ:
   231                           	opt stack 0
   232  000080                     	ds	54
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	bssBANK1
   241  000100                     __pbssBANK1:
   242                           	opt stack 0
   243  000100                     _FromMainHigh_MQ:
   244                           	opt stack 0
   245  000100                     	ds	54
   246  000136                     _FromMainLow_MQ:
   247                           	opt stack 0
   248  000136                     	ds	54
   249  00016C                     _ToMainHigh_MQ:
   250                           	opt stack 0
   251  00016C                     	ds	54
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	cstackBANK1
   260  0001A2                     __pcstackBANK1:
   261                           	opt stack 0
   262  0001A2                     FromMainHigh_sendmsg@msgtype:
   263                           	opt stack 0
   264  0001A2                     ToMainLow_recvmsg@msgtype:
   265                           	opt stack 0
   266  0001A2                     ToMainHigh_recvmsg@msgtype:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x0
   270  0001A2                     	ds	1
   271  0001A3                     FromMainHigh_sendmsg@data:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x1
   275  0001A3                     	ds	1
   276  0001A4                     ToMainLow_recvmsg@data:
   277                           	opt stack 0
   278  0001A4                     ToMainHigh_recvmsg@data:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x2
   282  0001A4                     	ds	1
   283  0001A5                     timer1_lthread@tptr:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x3
   287  0001A5                     	ds	1
   288  0001A6                     ToMainLow_recvmsg@maxlength:
   289                           	opt stack 0
   290  0001A6                     ToMainHigh_recvmsg@maxlength:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  0001A6                     	ds	1
   295  0001A7                     timer1_lthread@msgtype:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x5
   299  0001A7                     	ds	2
   300  0001A9                     timer1_lthread@length:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x7
   304  0001A9                     	ds	2
   305  0001AB                     timer1_lthread@msgbuffer:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x9
   309  0001AB                     	ds	2
   310  0001AD                     timer1_lthread@retval:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0xB
   314  0001AD                     	ds	1
   315  0001AE                     main@msgbuffer:
   316                           	opt stack 0
   317                           
   318                           ; 11 bytes @ 0xC
   319  0001AE                     	ds	11
   320  0001B9                     main@uthread_data:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x17
   324  0001B9                     	ds	2
   325  0001BB                     main@t0thread_data:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x19
   329  0001BB                     	ds	2
   330  0001BD                     main@t1thread_data:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x1B
   334  0001BD                     	ds	2
   335  0001BF                     main@uc:
   336                           	opt stack 0
   337                           
   338                           ; 5 bytes @ 0x1D
   339  0001BF                     	ds	5
   340  0001C4                     main@msgtype:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x22
   344  0001C4                     	ds	1
   345  0001C5                     main@length:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x23
   349  0001C5                     	ds	1
   350  0001C6                     main@ic:
   351                           	opt stack 0
   352                           
   353                           ; 53 bytes @ 0x24
   354  0001C6                     	ds	53
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           
   362                           	psect	cstackBANK0
   363  0000B6                     __pcstackBANK0:
   364                           	opt stack 0
   365  0000B6                     ??_i2c_master_int_handler:
   366  0000B6                     ??_i2c_slave_int_handler:
   367                           
   368                           ; 0 bytes @ 0x0
   369  0000B6                     	ds	2
   370  0000B8                     i2c_slave_int_handler@error_buf:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x2
   374  0000B8                     	ds	3
   375  0000BB                     i2c_slave_int_handler@data_written:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379  0000BB                     	ds	1
   380  0000BC                     i2c_slave_int_handler@overrun_error:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x6
   384  0000BC                     	ds	1
   385  0000BD                     i2c_slave_int_handler@i2c_data:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x7
   389  0000BD                     	ds	1
   390  0000BE                     i2c_slave_int_handler@msg_to_send:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x8
   394  0000BE                     	ds	1
   395  0000BF                     i2c_slave_int_handler@msg_ready:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x9
   399  0000BF                     	ds	1
   400  0000C0                     i2c_slave_int_handler@data_read:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0xA
   404  0000C0                     	ds	1
   405  0000C1                     ??_InterruptHandlerHigh:
   406                           
   407                           ; 0 bytes @ 0xB
   408  0000C1                     	ds	14
   409  0000CF                     ??_i2c_configure_slave:
   410  0000CF                     ?_in_high_int:
   411                           	opt stack 0
   412  0000CF                     ?___lwmod:
   413                           	opt stack 0
   414  0000CF                     OpenTimer0@config:
   415                           	opt stack 0
   416  0000CF                     OpenTimer1@config:
   417                           	opt stack 0
   418  0000CF                     WriteUSART@data:
   419                           	opt stack 0
   420  0000CF                     Delay1KTCYx@unit:
   421                           	opt stack 0
   422  0000CF                     init_queue@qptr:
   423                           	opt stack 0
   424  0000CF                     check_msg@qptr:
   425                           	opt stack 0
   426  0000CF                     init_i2c@ic:
   427                           	opt stack 0
   428  0000CF                     init_uart_recv@uc:
   429                           	opt stack 0
   430  0000CF                     timer0_lthread@tptr:
   431                           	opt stack 0
   432  0000CF                     init_timer1_lthread@tptr:
   433                           	opt stack 0
   434  0000CF                     uart_lthread@uptr:
   435                           	opt stack 0
   436  0000CF                     OpenUSART@spbrg:
   437                           	opt stack 0
   438  0000CF                     ___lwmod@dividend:
   439                           	opt stack 0
   440  0000CF                     memcpy@d1:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x19
   444  0000CF                     	ds	1
   445  0000D0                     i2c_configure_slave@addr:
   446                           	opt stack 0
   447  0000D0                     uart_write@msg:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x1A
   451  0000D0                     	ds	1
   452  0000D1                     ??_OpenUSART:
   453  0000D1                     ??_init_queue:
   454  0000D1                     ??_check_msg:
   455  0000D1                     ?_in_low_int:
   456                           	opt stack 0
   457  0000D1                     timer0_lthread@msgtype:
   458                           	opt stack 0
   459  0000D1                     uart_lthread@msgtype:
   460                           	opt stack 0
   461  0000D1                     ___lwmod@divisor:
   462                           	opt stack 0
   463  0000D1                     memcpy@s1:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x1B
   467  0000D1                     	ds	1
   468  0000D2                     ??_uart_write:
   469  0000D2                     init_queue@i:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x1C
   473  0000D2                     	ds	1
   474  0000D3                     ??_init_queues:
   475  0000D3                     ??___lwmod:
   476  0000D3                     ?_in_main:
   477                           	opt stack 0
   478  0000D3                     uart_write@length:
   479                           	opt stack 0
   480  0000D3                     timer0_lthread@length:
   481                           	opt stack 0
   482  0000D3                     uart_lthread@length:
   483                           	opt stack 0
   484  0000D3                     memcpy@n:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1D
   488  0000D3                     	ds	1
   489  0000D4                     uart_write@i:
   490                           	opt stack 0
   491  0000D4                     OpenUSART@config:
   492                           	opt stack 0
   493  0000D4                     ___lwmod@counter:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1E
   497  0000D4                     	ds	1
   498  0000D5                     ??_block_on_To_msgqueues:
   499  0000D5                     timer0_lthread@msgbuffer:
   500                           	opt stack 0
   501  0000D5                     uart_lthread@msgbuffer:
   502                           	opt stack 0
   503  0000D5                     memcpy@d:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x1F
   507  0000D5                     	ds	2
   508  0000D7                     timer0_lthread@msgval:
   509                           	opt stack 0
   510  0000D7                     memcpy@s:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x21
   514  0000D7                     	ds	2
   515  0000D9                     send_msg@qptr:
   516                           	opt stack 0
   517  0000D9                     recv_msg@qptr:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x23
   521  0000D9                     	ds	2
   522  0000DB                     send_msg@length:
   523                           	opt stack 0
   524  0000DB                     recv_msg@maxlength:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x25
   528  0000DB                     	ds	1
   529  0000DC                     send_msg@msgtype:
   530                           	opt stack 0
   531  0000DC                     recv_msg@msgtype:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x26
   535  0000DC                     	ds	1
   536  0000DD                     send_msg@data:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x27
   540  0000DD                     	ds	1
   541  0000DE                     recv_msg@data:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x28
   545  0000DE                     	ds	1
   546  0000DF                     ??_send_msg:
   547                           
   548                           ; 0 bytes @ 0x29
   549  0000DF                     	ds	1
   550  0000E0                     ??_recv_msg:
   551  0000E0                     send_msg@tlength:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x2A
   555  0000E0                     	ds	2
   556  0000E2                     send_msg@slot:
   557                           	opt stack 0
   558  0000E2                     recv_msg@slot:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x2C
   562  0000E2                     	ds	1
   563  0000E3                     send_msg@qmsg:
   564                           	opt stack 0
   565  0000E3                     recv_msg@tlength:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2D
   569  0000E3                     	ds	2
   570  0000E5                     FromMainHigh_sendmsg@length:
   571                           	opt stack 0
   572  0000E5                     recv_msg@qmsg:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x2F
   576  0000E5                     	ds	1
   577  0000E6                     ??_timer1_lthread:
   578                           
   579                           ; 0 bytes @ 0x30
   580  0000E6                     	ds	1
   581  0000E7                     tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           
   588                           ; 0 bytes @ 0x31
   589                           
   590                           	psect	cstackCOMRAM
   591  000001                     __pcstackCOMRAM:
   592                           	opt stack 0
   593  000001                     ?_ReadTimer1:
   594                           	opt stack 0
   595  000001                     ReadUSART@data:
   596                           	opt stack 0
   597  000001                     WriteTimer1@timer1:
   598                           	opt stack 0
   599  000001                     i1memcpy@d1:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x0
   603  000001                     	ds	2
   604  000003                     ReadTimer1@timer:
   605                           	opt stack 0
   606  000003                     WriteTimer1@timer:
   607                           	opt stack 0
   608  000003                     i1memcpy@s1:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x2
   612  000003                     	ds	2
   613  000005                     timer1_int_handler@result:
   614                           	opt stack 0
   615  000005                     i1memcpy@n:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x4
   619  000005                     	ds	2
   620  000007                     i1memcpy@d:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x6
   624  000007                     	ds	2
   625  000009                     i1memcpy@s:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x8
   629  000009                     	ds	2
   630  00000B                     i1send_msg@qptr:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0xA
   634  00000B                     	ds	2
   635  00000D                     i1send_msg@length:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0xC
   639  00000D                     	ds	1
   640  00000E                     i1send_msg@msgtype:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0xD
   644  00000E                     	ds	1
   645  00000F                     i1send_msg@data:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xE
   649  00000F                     	ds	2
   650  000011                     ??i1_send_msg:
   651                           
   652                           ; 0 bytes @ 0x10
   653  000011                     	ds	1
   654  000012                     i1send_msg@tlength:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x11
   658  000012                     	ds	2
   659  000014                     i1send_msg@slot:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x13
   663  000014                     	ds	1
   664  000015                     i1send_msg@qmsg:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x14
   668  000015                     	ds	2
   669  000017                     ToMainLow_sendmsg@msgtype:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x16
   673  000017                     	ds	1
   674  000018                     ToMainLow_sendmsg@data:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x17
   678  000018                     	ds	2
   679  00001A                     ToMainLow_sendmsg@length:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x19
   683  00001A                     	ds	1
   684  00001B                     ??_uart_recv_int_handler:
   685                           
   686                           ; 0 bytes @ 0x1A
   687  00001B                     	ds	1
   688  00001C                     ??_InterruptHandlerLow:
   689                           
   690                           ; 0 bytes @ 0x1B
   691  00001C                     	ds	17
   692  00002D                     ??_i2c_configure_master:
   693  00002D                     ?i2_in_high_int:
   694                           	opt stack 0
   695  00002D                     i2c_master_recv@length:
   696                           	opt stack 0
   697  00002D                     handle_start@data_read:
   698                           	opt stack 0
   699  00002D                     start_i2c_slave_reply@msg:
   700                           	opt stack 0
   701  00002D                     WriteTimer0@timer0:
   702                           	opt stack 0
   703  00002D                     i2check_msg@qptr:
   704                           	opt stack 0
   705  00002D                     i2memcpy@d1:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x2C
   709  00002D                     	ds	1
   710  00002E                     i2c_configure_master@slave_addr:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x2D
   714  00002E                     	ds	1
   715  00002F                     ??_start_i2c_slave_reply:
   716  00002F                     ??i2_check_msg:
   717  00002F                     ?i2_in_low_int:
   718                           	opt stack 0
   719  00002F                     WriteTimer0@timer:
   720                           	opt stack 0
   721  00002F                     i2memcpy@s1:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x2E
   725  00002F                     	ds	2
   726  000031                     ??_timer0_int_handler:
   727  000031                     i2memcpy@n:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x30
   731  000031                     	ds	1
   732  000032                     start_i2c_slave_reply@length:
   733                           	opt stack 0
   734  000032                     timer0_int_handler@val:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x31
   738  000032                     	ds	1
   739  000033                     i2memcpy@d:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x32
   743  000033                     	ds	2
   744  000035                     i2memcpy@s:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x34
   748  000035                     	ds	2
   749  000037                     i2send_msg@qptr:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x36
   753  000037                     	ds	2
   754  000039                     i2send_msg@length:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x38
   758  000039                     	ds	1
   759  00003A                     i2send_msg@msgtype:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x39
   763  00003A                     	ds	1
   764  00003B                     i2send_msg@data:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x3A
   768  00003B                     	ds	2
   769  00003D                     ??i2_send_msg:
   770                           
   771                           ; 0 bytes @ 0x3C
   772  00003D                     	ds	1
   773  00003E                     i2send_msg@tlength:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x3D
   777  00003E                     	ds	2
   778  000040                     i2send_msg@slot:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x3F
   782  000040                     	ds	1
   783  000041                     i2send_msg@qmsg:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x40
   787  000041                     	ds	2
   788  000043                     ToMainHigh_sendmsg@msgtype:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x42
   792  000043                     	ds	1
   793  000044                     ToMainHigh_sendmsg@data:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x43
   797  000044                     	ds	2
   798  000046                     ToMainHigh_sendmsg@length:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x45
   802  000046                     	ds	1
   803  000047                     tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           
   810                           ; 0 bytes @ 0x46
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 186 in file "../src/main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  ic             53   36[BANK1 ] struct __i2c_comm
   821 ;;  msgbuffer      11   12[BANK1 ] unsigned char [11]
   822 ;;  uc              5   29[BANK1 ] struct __uart_comm
   823 ;;  t1thread_dat    2   27[BANK1 ] struct __timer1_thread_s
   824 ;;  t0thread_dat    2   25[BANK1 ] struct __timer0_thread_s
   825 ;;  uthread_data    2   23[BANK1 ] struct __uart_thread_str
   826 ;;  length          1   35[BANK1 ] char 
   827 ;;  msgtype         1   34[BANK1 ] unsigned char 
   828 ;;  i               1    0        unsigned char 
   829 ;;  last_reg_rec    1    0        unsigned char 
   830 ;;  c               1    0        unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0      77       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         0       0      77       0       0
   844 ;;Total ram usage:       77 bytes
   845 ;; Hardware stack levels required when called:   15
   846 ;; This function calls:
   847 ;;		_OpenTimer0
   848 ;;		_OpenTimer1
   849 ;;		_OpenUSART
   850 ;;		_ToMainHigh_recvmsg
   851 ;;		_ToMainLow_recvmsg
   852 ;;		_block_on_To_msgqueues
   853 ;;		_enable_interrupts
   854 ;;		_i2c_configure_slave
   855 ;;		_init_i2c
   856 ;;		_init_queues
   857 ;;		_init_timer1_lthread
   858 ;;		_init_uart_recv
   859 ;;		_timer0_lthread
   860 ;;		_timer1_lthread
   861 ;;		_uart_lthread
   862 ;;		_uart_write
   863 ;; This function is called by:
   864 ;;		Startup code after reset
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text0
   869  0008B0                     __ptext0:
   870                           	opt stack 0
   871  0008B0                     _main:
   872                           	opt stack 16
   873                           
   874                           ;main.c: 187: char c;
   875                           ;main.c: 188: signed char length;
   876                           ;main.c: 189: unsigned char msgtype;
   877                           ;main.c: 190: unsigned char last_reg_recvd;
   878                           ;main.c: 191: uart_comm uc;
   879                           ;main.c: 192: i2c_comm ic;
   880                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   881                           ;main.c: 194: unsigned char i;
   882                           ;main.c: 195: uart_thread_struct uthread_data;
   883                           ;main.c: 196: timer1_thread_struct t1thread_data;
   884                           ;main.c: 197: timer0_thread_struct t0thread_data;
   885                           ;main.c: 205: OSCCON = 0x82;
   886                           
   887                           ;incstack = 0
   888  0008B0  0E82               	movlw	130
   889  0008B2  6ED3               	movwf	4051,c	;volatile
   890                           
   891                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
   892  0008B4  8C9B               	bsf	3995,6,c	;volatile
   893                           
   894                           ;main.c: 224: init_uart_recv(&uc);
   895  0008B6  0101               	movlb	1	; () banked
   896  0008B8  0E01               	movlw	high main@uc
   897  0008BA  0100               	movlb	0	; () banked
   898  0008BC  0100               	movlb	0	; () banked
   899  0008BE  6FD0               	movwf	(init_uart_recv@uc+1)& (0+255),b
   900  0008C0  0101               	movlb	1	; () banked
   901  0008C2  0EBF               	movlw	low main@uc
   902  0008C4  0100               	movlb	0	; () banked
   903  0008C6  0100               	movlb	0	; () banked
   904  0008C8  6FCF               	movwf	init_uart_recv@uc& (0+255),b
   905  0008CA  EC59  F00D         	call	_init_uart_recv	;wreg free
   906                           
   907                           ;main.c: 227: init_i2c(&ic);
   908  0008CE  0101               	movlb	1	; () banked
   909  0008D0  0E01               	movlw	high main@ic
   910  0008D2  0100               	movlb	0	; () banked
   911  0008D4  0100               	movlb	0	; () banked
   912  0008D6  6FD0               	movwf	(init_i2c@ic+1)& (0+255),b
   913  0008D8  0101               	movlb	1	; () banked
   914  0008DA  0EC6               	movlw	low main@ic
   915  0008DC  0100               	movlb	0	; () banked
   916  0008DE  0100               	movlb	0	; () banked
   917  0008E0  6FCF               	movwf	init_i2c@ic& (0+255),b
   918  0008E2  EC4B  F008         	call	_init_i2c	;wreg free
   919                           
   920                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
   921  0008E6  0101               	movlb	1	; () banked
   922  0008E8  0E01               	movlw	high main@t1thread_data
   923  0008EA  0100               	movlb	0	; () banked
   924  0008EC  0100               	movlb	0	; () banked
   925  0008EE  6FD0               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   926  0008F0  0101               	movlb	1	; () banked
   927  0008F2  0EBD               	movlw	low main@t1thread_data
   928  0008F4  0100               	movlb	0	; () banked
   929  0008F6  0100               	movlb	0	; () banked
   930  0008F8  6FCF               	movwf	init_timer1_lthread@tptr& (0+255),b
   931  0008FA  ECB1  F00D         	call	_init_timer1_lthread	;wreg free
   932                           
   933                           ;main.c: 233: init_queues();
   934  0008FE  EC68  F00A         	call	_init_queues	;wreg free
   935                           
   936                           ;main.c: 237: TRISB = 0x0;
   937  000902  0E00               	movlw	0
   938  000904  6E93               	movwf	3987,c	;volatile
   939                           
   940                           ;main.c: 238: LATB = 0x0;
   941  000906  0E00               	movlw	0
   942  000908  6E8A               	movwf	3978,c	;volatile
   943                           
   944                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110111);
   945  00090A  0E97               	movlw	151
   946  00090C  EC0C  F00D         	call	_OpenTimer0
   947                           
   948                           ;main.c: 260: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   949  000910  0EF5               	movlw	245
   950  000912  EC70  F00C         	call	_OpenTimer1
   951                           
   952                           ;main.c: 267: IPR1bits.TMR1IP = 0;
   953  000916  909F               	bcf	3999,0,c	;volatile
   954                           
   955                           ;main.c: 269: IPR1bits.RCIP = 0;
   956  000918  9A9F               	bcf	3999,5,c	;volatile
   957                           
   958                           ;main.c: 271: IPR1bits.SSPIP = 1;
   959  00091A  869F               	bsf	3999,3,c	;volatile
   960                           
   961                           ;main.c: 280: i2c_configure_slave(0x9E);
   962  00091C  0E9E               	movlw	158
   963  00091E  ECC2  F00C         	call	_i2c_configure_slave
   964                           
   965                           ;main.c: 295: PIE1bits.SSPIE = 1;
   966  000922  869D               	bsf	3997,3,c	;volatile
   967                           
   968                           ;main.c: 306: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   969                           ;main.c: 307: 0b11111111 & 0b11101111, 0x26);
   970  000924  0E00               	movlw	0
   971  000926  0100               	movlb	0	; () banked
   972  000928  0100               	movlb	0	; () banked
   973  00092A  6FD0               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   974  00092C  0E26               	movlw	38
   975  00092E  0100               	movlb	0	; () banked
   976  000930  6FCF               	movwf	OpenUSART@spbrg& (0+255),b
   977  000932  0E6C               	movlw	108
   978  000934  ECE4  F008         	call	_OpenUSART
   979                           
   980                           ;main.c: 313: enable_interrupts();
   981  000938  ECE4  F00D         	call	_enable_interrupts	;wreg free
   982  00093C                     l3332:
   983                           
   984                           ;main.c: 339: block_on_To_msgqueues();
   985  00093C  ECB3  F009         	call	_block_on_To_msgqueues	;wreg free
   986                           
   987                           ;main.c: 346: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   988  000940  0101               	movlb	1	; () banked
   989  000942  0E01               	movlw	high main@msgtype
   990  000944  0101               	movlb	1	; () banked
   991  000946  0101               	movlb	1	; () banked
   992  000948  6FA3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   993  00094A  0101               	movlb	1	; () banked
   994  00094C  0EC4               	movlw	low main@msgtype
   995  00094E  0101               	movlb	1	; () banked
   996  000950  0101               	movlb	1	; () banked
   997  000952  6FA2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   998  000954  0101               	movlb	1	; () banked
   999  000956  0E01               	movlw	high main@msgbuffer
  1000  000958  0101               	movlb	1	; () banked
  1001  00095A  0101               	movlb	1	; () banked
  1002  00095C  6FA5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1003  00095E  0101               	movlb	1	; () banked
  1004  000960  0EAE               	movlw	low main@msgbuffer
  1005  000962  0101               	movlb	1	; () banked
  1006  000964  0101               	movlb	1	; () banked
  1007  000966  6FA4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1008  000968  0E0A               	movlw	10
  1009  00096A  ECD2  F00B         	call	_ToMainHigh_recvmsg
  1010  00096E  0101               	movlb	1	; () banked
  1011  000970  0101               	movlb	1	; () banked
  1012  000972  6FC5               	movwf	main@length& (0+255),b
  1013                           
  1014                           ; BSR set to: 1
  1015                           ;main.c: 347: if (length < 0) {
  1016  000974  0101               	movlb	1	; () banked
  1017  000976  0101               	movlb	1	; () banked
  1018  000978  BFC5               	btfsc	main@length& (0+255),7,b
  1019  00097A  D056               	goto	l3350
  1020  00097C  D049               	goto	l3348
  1021  00097E                     l3340:
  1022                           
  1023                           ; BSR set to: 1
  1024                           ;main.c: 355: {
  1025                           ;main.c: 356: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1026  00097E  0101               	movlb	1	; () banked
  1027  000980  0E01               	movlw	high main@t0thread_data
  1028  000982  0100               	movlb	0	; () banked
  1029  000984  0100               	movlb	0	; () banked
  1030  000986  6FD0               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1031  000988  0101               	movlb	1	; () banked
  1032  00098A  0EBB               	movlw	low main@t0thread_data
  1033  00098C  0100               	movlb	0	; () banked
  1034  00098E  0100               	movlb	0	; () banked
  1035  000990  6FCF               	movwf	timer0_lthread@tptr& (0+255),b
  1036  000992  0101               	movlb	1	; () banked
  1037  000994  0100               	movlb	0	; () banked
  1038  000996  C1C4  F0D1         	movff	main@msgtype,timer0_lthread@msgtype
  1039  00099A  0100               	movlb	0	; () banked
  1040  00099C  0100               	movlb	0	; () banked
  1041  00099E  6BD2               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1042  0009A0  0101               	movlb	1	; () banked
  1043  0009A2  0101               	movlb	1	; () banked
  1044  0009A4  51C5               	movf	main@length& (0+255),w,b
  1045  0009A6  0100               	movlb	0	; () banked
  1046  0009A8  0100               	movlb	0	; () banked
  1047  0009AA  6FD3               	movwf	timer0_lthread@length& (0+255),b
  1048  0009AC  0100               	movlb	0	; () banked
  1049  0009AE  6BD4               	clrf	(timer0_lthread@length+1)& (0+255),b
  1050  0009B0  0100               	movlb	0	; () banked
  1051  0009B2  BFD3               	btfsc	timer0_lthread@length& (0+255),7,b
  1052  0009B4  07D4               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1053  0009B6  0101               	movlb	1	; () banked
  1054  0009B8  0E01               	movlw	high main@msgbuffer
  1055  0009BA  0100               	movlb	0	; () banked
  1056  0009BC  0100               	movlb	0	; () banked
  1057  0009BE  6FD6               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1058  0009C0  0101               	movlb	1	; () banked
  1059  0009C2  0EAE               	movlw	low main@msgbuffer
  1060  0009C4  0100               	movlb	0	; () banked
  1061  0009C6  0100               	movlb	0	; () banked
  1062  0009C8  6FD5               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1063  0009CA  ECA8  F00D         	call	_timer0_lthread	;wreg free
  1064                           
  1065                           ;main.c: 357: break;
  1066  0009CE  D02C               	goto	l3350
  1067  0009D0                     l3342:
  1068                           
  1069                           ;main.c: 360: {
  1070                           ;main.c: 361: uart_write(length,msgbuffer);
  1071  0009D0  0101               	movlb	1	; () banked
  1072  0009D2  0E01               	movlw	high main@msgbuffer
  1073  0009D4  0100               	movlb	0	; () banked
  1074  0009D6  0100               	movlb	0	; () banked
  1075  0009D8  6FD1               	movwf	(uart_write@msg+1)& (0+255),b
  1076  0009DA  0101               	movlb	1	; () banked
  1077  0009DC  0EAE               	movlw	low main@msgbuffer
  1078  0009DE  0100               	movlb	0	; () banked
  1079  0009E0  0100               	movlb	0	; () banked
  1080  0009E2  6FD0               	movwf	uart_write@msg& (0+255),b
  1081  0009E4  0101               	movlb	1	; () banked
  1082  0009E6  0101               	movlb	1	; () banked
  1083  0009E8  51C5               	movf	main@length& (0+255),w,b
  1084  0009EA  EC9F  F00A         	call	_uart_write
  1085                           
  1086                           ;main.c: 362: break;
  1087  0009EE  D01C               	goto	l3350
  1088  0009F0                     l3344:
  1089                           
  1090                           ;main.c: 365: {
  1091                           ;main.c: 366: uart_write(length,msgbuffer);
  1092  0009F0  0101               	movlb	1	; () banked
  1093  0009F2  0E01               	movlw	high main@msgbuffer
  1094  0009F4  0100               	movlb	0	; () banked
  1095  0009F6  0100               	movlb	0	; () banked
  1096  0009F8  6FD1               	movwf	(uart_write@msg+1)& (0+255),b
  1097  0009FA  0101               	movlb	1	; () banked
  1098  0009FC  0EAE               	movlw	low main@msgbuffer
  1099  0009FE  0100               	movlb	0	; () banked
  1100  000A00  0100               	movlb	0	; () banked
  1101  000A02  6FD0               	movwf	uart_write@msg& (0+255),b
  1102  000A04  0101               	movlb	1	; () banked
  1103  000A06  0101               	movlb	1	; () banked
  1104  000A08  51C5               	movf	main@length& (0+255),w,b
  1105  000A0A  EC9F  F00A         	call	_uart_write
  1106                           
  1107                           ;main.c: 367: break;
  1108  000A0E  D00C               	goto	l3350
  1109  000A10                     l3348:
  1110  000A10  0101               	movlb	1	; () banked
  1111  000A12  0101               	movlb	1	; () banked
  1112  000A14  51C4               	movf	main@msgtype& (0+255),w,b
  1113                           
  1114                           ; Switch size 1, requested type "space"
  1115                           ; Number of cases is 3, Range of values is 10 to 47
  1116                           ; switch strategies available:
  1117                           ; Name         Instructions Cycles
  1118                           ; simple_byte           10     6 (average)
  1119                           ;	Chosen strategy is simple_byte
  1120  000A16  0A0A               	xorlw	10	; case 10
  1121  000A18  B4D8               	btfsc	status,2,c
  1122  000A1A  D7B1               	goto	l3340
  1123  000A1C  0A27               	xorlw	39	; case 45
  1124  000A1E  B4D8               	btfsc	status,2,c
  1125  000A20  D7D7               	goto	l3342
  1126  000A22  0A02               	xorlw	2	; case 47
  1127  000A24  B4D8               	btfsc	status,2,c
  1128  000A26  D7E4               	goto	l3344
  1129  000A28                     l3350:
  1130                           
  1131                           ;main.c: 375: }
  1132                           ;main.c: 378: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1133  000A28  0101               	movlb	1	; () banked
  1134  000A2A  0E01               	movlw	high main@msgtype
  1135  000A2C  0101               	movlb	1	; () banked
  1136  000A2E  0101               	movlb	1	; () banked
  1137  000A30  6FA3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1138  000A32  0101               	movlb	1	; () banked
  1139  000A34  0EC4               	movlw	low main@msgtype
  1140  000A36  0101               	movlb	1	; () banked
  1141  000A38  0101               	movlb	1	; () banked
  1142  000A3A  6FA2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1143  000A3C  0101               	movlb	1	; () banked
  1144  000A3E  0E01               	movlw	high main@msgbuffer
  1145  000A40  0101               	movlb	1	; () banked
  1146  000A42  0101               	movlb	1	; () banked
  1147  000A44  6FA5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1148  000A46  0101               	movlb	1	; () banked
  1149  000A48  0EAE               	movlw	low main@msgbuffer
  1150  000A4A  0101               	movlb	1	; () banked
  1151  000A4C  0101               	movlb	1	; () banked
  1152  000A4E  6FA4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1153  000A50  0E0A               	movlw	10
  1154  000A52  ECB1  F00B         	call	_ToMainLow_recvmsg
  1155  000A56  0101               	movlb	1	; () banked
  1156  000A58  0101               	movlb	1	; () banked
  1157  000A5A  6FC5               	movwf	main@length& (0+255),b
  1158                           
  1159                           ; BSR set to: 1
  1160                           ;main.c: 379: if (length < 0) {
  1161  000A5C  0101               	movlb	1	; () banked
  1162  000A5E  0101               	movlb	1	; () banked
  1163  000A60  BFC5               	btfsc	main@length& (0+255),7,b
  1164  000A62  D76C               	goto	l3332
  1165  000A64  D052               	goto	l3362
  1166  000A66                     l3356:
  1167                           
  1168                           ; BSR set to: 1
  1169                           ;main.c: 387: {
  1170                           ;main.c: 388: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1171  000A66  0101               	movlb	1	; () banked
  1172  000A68  0E01               	movlw	high main@t1thread_data
  1173  000A6A  0101               	movlb	1	; () banked
  1174  000A6C  0101               	movlb	1	; () banked
  1175  000A6E  6FA6               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1176  000A70  0101               	movlb	1	; () banked
  1177  000A72  0EBD               	movlw	low main@t1thread_data
  1178  000A74  0101               	movlb	1	; () banked
  1179  000A76  0101               	movlb	1	; () banked
  1180  000A78  6FA5               	movwf	timer1_lthread@tptr& (0+255),b
  1181  000A7A  0101               	movlb	1	; () banked
  1182  000A7C  0101               	movlb	1	; () banked
  1183  000A7E  C1C4  F1A7         	movff	main@msgtype,timer1_lthread@msgtype
  1184  000A82  0101               	movlb	1	; () banked
  1185  000A84  0101               	movlb	1	; () banked
  1186  000A86  6BA8               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1187  000A88  0101               	movlb	1	; () banked
  1188  000A8A  0101               	movlb	1	; () banked
  1189  000A8C  51C5               	movf	main@length& (0+255),w,b
  1190  000A8E  0101               	movlb	1	; () banked
  1191  000A90  0101               	movlb	1	; () banked
  1192  000A92  6FA9               	movwf	timer1_lthread@length& (0+255),b
  1193  000A94  0101               	movlb	1	; () banked
  1194  000A96  6BAA               	clrf	(timer1_lthread@length+1)& (0+255),b
  1195  000A98  0101               	movlb	1	; () banked
  1196  000A9A  BFA9               	btfsc	timer1_lthread@length& (0+255),7,b
  1197  000A9C  07AA               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1198  000A9E  0101               	movlb	1	; () banked
  1199  000AA0  0E01               	movlw	high main@msgbuffer
  1200  000AA2  0101               	movlb	1	; () banked
  1201  000AA4  0101               	movlb	1	; () banked
  1202  000AA6  6FAC               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1203  000AA8  0101               	movlb	1	; () banked
  1204  000AAA  0EAE               	movlw	low main@msgbuffer
  1205  000AAC  0101               	movlb	1	; () banked
  1206  000AAE  0101               	movlb	1	; () banked
  1207  000AB0  6FAB               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1208  000AB2  EC2F  F00A         	call	_timer1_lthread	;wreg free
  1209                           
  1210                           ;main.c: 389: break;
  1211  000AB6  D742               	goto	l3332
  1212  000AB8                     l3358:
  1213                           
  1214                           ;main.c: 396: {
  1215                           ;main.c: 397: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1216  000AB8  0101               	movlb	1	; () banked
  1217  000ABA  0E01               	movlw	high main@uthread_data
  1218  000ABC  0100               	movlb	0	; () banked
  1219  000ABE  0100               	movlb	0	; () banked
  1220  000AC0  6FD0               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1221  000AC2  0101               	movlb	1	; () banked
  1222  000AC4  0EB9               	movlw	low main@uthread_data
  1223  000AC6  0100               	movlb	0	; () banked
  1224  000AC8  0100               	movlb	0	; () banked
  1225  000ACA  6FCF               	movwf	uart_lthread@uptr& (0+255),b
  1226  000ACC  0101               	movlb	1	; () banked
  1227  000ACE  0100               	movlb	0	; () banked
  1228  000AD0  C1C4  F0D1         	movff	main@msgtype,uart_lthread@msgtype
  1229  000AD4  0100               	movlb	0	; () banked
  1230  000AD6  0100               	movlb	0	; () banked
  1231  000AD8  6BD2               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1232  000ADA  0101               	movlb	1	; () banked
  1233  000ADC  0101               	movlb	1	; () banked
  1234  000ADE  51C5               	movf	main@length& (0+255),w,b
  1235  000AE0  0100               	movlb	0	; () banked
  1236  000AE2  0100               	movlb	0	; () banked
  1237  000AE4  6FD3               	movwf	uart_lthread@length& (0+255),b
  1238  000AE6  0100               	movlb	0	; () banked
  1239  000AE8  6BD4               	clrf	(uart_lthread@length+1)& (0+255),b
  1240  000AEA  0100               	movlb	0	; () banked
  1241  000AEC  BFD3               	btfsc	uart_lthread@length& (0+255),7,b
  1242  000AEE  07D4               	decf	(uart_lthread@length+1)& (0+255),f,b
  1243  000AF0  0101               	movlb	1	; () banked
  1244  000AF2  0E01               	movlw	high main@msgbuffer
  1245  000AF4  0100               	movlb	0	; () banked
  1246  000AF6  0100               	movlb	0	; () banked
  1247  000AF8  6FD6               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1248  000AFA  0101               	movlb	1	; () banked
  1249  000AFC  0EAE               	movlw	low main@msgbuffer
  1250  000AFE  0100               	movlb	0	; () banked
  1251  000B00  0100               	movlb	0	; () banked
  1252  000B02  6FD5               	movwf	uart_lthread@msgbuffer& (0+255),b
  1253  000B04  EC33  F00C         	call	_uart_lthread	;wreg free
  1254                           
  1255                           ;main.c: 398: break;
  1256  000B08  D719               	goto	l3332
  1257  000B0A                     l3362:
  1258  000B0A  0101               	movlb	1	; () banked
  1259  000B0C  0101               	movlb	1	; () banked
  1260  000B0E  51C4               	movf	main@msgtype& (0+255),w,b
  1261                           
  1262                           ; Switch size 1, requested type "space"
  1263                           ; Number of cases is 3, Range of values is 11 to 31
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte           10     6 (average)
  1267                           ;	Chosen strategy is simple_byte
  1268  000B10  0A0B               	xorlw	11	; case 11
  1269  000B12  B4D8               	btfsc	status,2,c
  1270  000B14  D7A8               	goto	l3356
  1271  000B16  0A15               	xorlw	21	; case 30
  1272  000B18  B4D8               	btfsc	status,2,c
  1273  000B1A  D7CE               	goto	l3358
  1274  000B1C  0A01               	xorlw	1	; case 31
  1275  000B1E  B4D8               	btfsc	status,2,c
  1276  000B20  D7CB               	goto	l3358
  1277  000B22  D70C               	goto	l3332
  1278  000B24                     __end_of_main:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _uart_write *****************
  1289 ;; Defined at:
  1290 ;;		line 55 in file "../src/my_uart.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  length          1    wreg     unsigned char 
  1293 ;;  msg             2   26[BANK0 ] PTR unsigned char 
  1294 ;;		 -> main@msgbuffer(11), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  length          1   29[BANK0 ] unsigned char 
  1297 ;;  i               1   30[BANK0 ] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;		None               void
  1300 ;; Registers used:
  1301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1307 ;;      Params:         0       2       0       0       0
  1308 ;;      Locals:         0       2       0       0       0
  1309 ;;      Temps:          0       1       0       0       0
  1310 ;;      Totals:         0       5       0       0       0
  1311 ;;Total ram usage:        5 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:   12
  1314 ;; This function calls:
  1315 ;;		_WriteUSART
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text1
  1322  00153E                     __ptext1:
  1323                           	opt stack 0
  1324  00153E                     _uart_write:
  1325                           	opt stack 18
  1326                           
  1327                           ; BSR set to: 1
  1328                           ;incstack = 0
  1329                           ;uart_write@length stored from wreg
  1330  00153E  CFE8 F0D3          	movff	wreg,uart_write@length
  1331                           
  1332                           ;my_uart.c: 60: unsigned char i = 0;
  1333  001542  0100               	movlb	0	; () banked
  1334  001544  6FD2               	movwf	??_uart_write& (0+255),b
  1335  001546  0E00               	movlw	0
  1336  001548  0100               	movlb	0	; () banked
  1337  00154A  0100               	movlb	0	; () banked
  1338  00154C  6FD4               	movwf	uart_write@i& (0+255),b
  1339  00154E  0100               	movlb	0	; () banked
  1340  001550  51D2               	movf	??_uart_write& (0+255),w,b
  1341                           
  1342                           ;my_uart.c: 61: for(i = 0; i < length; i++){
  1343  001552  0100               	movlb	0	; () banked
  1344  001554  6FD2               	movwf	??_uart_write& (0+255),b
  1345  001556  0E00               	movlw	0
  1346  001558  0100               	movlb	0	; () banked
  1347  00155A  0100               	movlb	0	; () banked
  1348  00155C  6FD4               	movwf	uart_write@i& (0+255),b
  1349  00155E  0100               	movlb	0	; () banked
  1350  001560  51D2               	movf	??_uart_write& (0+255),w,b
  1351  001562  D016               	goto	l2610
  1352  001564                     l392:
  1353  001564  A2AC               	btfss	4012,1,c	;volatile
  1354  001566  D7FE               	goto	l392
  1355                           
  1356                           ;my_uart.c: 72: WriteUSART(msg[i]);
  1357  001568  0100               	movlb	0	; () banked
  1358  00156A  0100               	movlb	0	; () banked
  1359  00156C  51D4               	movf	uart_write@i& (0+255),w,b
  1360  00156E  0D01               	mullw	1
  1361  001570  50F3               	movf	prodl,w,c
  1362  001572  0100               	movlb	0	; () banked
  1363  001574  0100               	movlb	0	; () banked
  1364  001576  25D0               	addwf	uart_write@msg& (0+255),w,b
  1365  001578  6ED9               	movwf	fsr2l,c
  1366  00157A  50F4               	movf	prodh,w,c
  1367  00157C  0100               	movlb	0	; () banked
  1368  00157E  0100               	movlb	0	; () banked
  1369  001580  21D1               	addwfc	(uart_write@msg+1)& (0+255),w,b
  1370  001582  6EDA               	movwf	fsr2h,c
  1371  001584  50DF               	movf	indf2,w,c
  1372  001586  EC9E  F00D         	call	_WriteUSART
  1373  00158A  0100               	movlb	0	; () banked
  1374  00158C  0100               	movlb	0	; () banked
  1375  00158E  2BD4               	incf	uart_write@i& (0+255),f,b
  1376  001590                     l2610:
  1377                           
  1378                           ; BSR set to: 0
  1379  001590  0100               	movlb	0	; () banked
  1380  001592  0100               	movlb	0	; () banked
  1381  001594  51D3               	movf	uart_write@length& (0+255),w,b
  1382  001596  0100               	movlb	0	; () banked
  1383  001598  0100               	movlb	0	; () banked
  1384  00159A  5DD4               	subwf	uart_write@i& (0+255),w,b
  1385  00159C  B0D8               	btfsc	status,0,c
  1386                           
  1387                           ; BSR set to: 0
  1388                           
  1389                           ; BSR set to: 0
  1390  00159E  0012               	return	
  1391  0015A0  D7E1               	goto	l392
  1392  0015A2                     __end_of_uart_write:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           prodh	equ	0xFF4
  1399                           prodl	equ	0xFF3
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           indf2	equ	0xFDF
  1403                           fsr2h	equ	0xFDA
  1404                           fsr2l	equ	0xFD9
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _WriteUSART *****************
  1408 ;; Defined at:
  1409 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  data            1    wreg     unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  data            1   25[BANK0 ] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;		None               void
  1416 ;; Registers used:
  1417 ;;		wreg
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       1       0       0       0
  1425 ;;      Temps:          0       0       0       0       0
  1426 ;;      Totals:         0       1       0       0       0
  1427 ;;Total ram usage:        1 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:   11
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_uart_write
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text2
  1438  001B3C                     __ptext2:
  1439                           	opt stack 0
  1440  001B3C                     _WriteUSART:
  1441                           	opt stack 18
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;incstack = 0
  1445                           ;WriteUSART@data stored from wreg
  1446  001B3C  CFE8 F0CF          	movff	wreg,WriteUSART@data
  1447  001B40  ACAC               	btfss	4012,6,c	;volatile
  1448  001B42  D003               	goto	l3074
  1449  001B44  90AC               	bcf	4012,0,c	;volatile
  1450  001B46  B24C               	btfsc	_USART_Status,1,c
  1451  001B48  80AC               	bsf	4012,0,c	;volatile
  1452  001B4A                     l3074:
  1453  001B4A  C0CF  FFAD         	movff	WriteUSART@data,4013	;volatile
  1454  001B4E  0012               	return	
  1455  001B50                     __end_of_WriteUSART:
  1456                           	opt stack 0
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           prodh	equ	0xFF4
  1462                           prodl	equ	0xFF3
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           indf2	equ	0xFDF
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _uart_lthread *****************
  1471 ;; Defined at:
  1472 ;;		line 9 in file "../src/uart_thread.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  uptr            2   25[BANK0 ] PTR struct __uart_thread
  1475 ;;		 -> main@uthread_data(2), 
  1476 ;;  msgtype         2   27[BANK0 ] int 
  1477 ;;  length          2   29[BANK0 ] int 
  1478 ;;  msgbuffer       2   31[BANK0 ] PTR unsigned char 
  1479 ;;		 -> main@msgbuffer(11), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  2   25[BANK0 ] int 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1491 ;;      Params:         0       8       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0
  1494 ;;      Totals:         0       8       0       0       0
  1495 ;;Total ram usage:        8 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:   11
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text3
  1506  001866                     __ptext3:
  1507                           	opt stack 0
  1508  001866                     _uart_lthread:
  1509                           	opt stack 19
  1510                           
  1511                           ;uart_thread.c: 10: if (msgtype == 30) {
  1512                           
  1513                           ;incstack = 0
  1514  001866  0100               	movlb	0	; () banked
  1515  001868  0100               	movlb	0	; () banked
  1516  00186A  51D1               	movf	uart_lthread@msgtype& (0+255),w,b
  1517  00186C  0A1E               	xorlw	30
  1518  00186E  11D2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1519  001870  B4D8               	btfsc	status,2,c
  1520  001872  0012               	return	
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1524                           
  1525                           ; BSR set to: 0
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;uart_thread.c: 11: }
  1529  001874  0100               	movlb	0	; () banked
  1530  001876  0100               	movlb	0	; () banked
  1531  001878  51D1               	movf	uart_lthread@msgtype& (0+255),w,b
  1532  00187A  0A1F               	xorlw	31
  1533  00187C  11D2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1534  00187E  A4D8               	btfss	status,2,c
  1535  001880  0012               	return	
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1539  001882  0100               	movlb	0	; () banked
  1540  001884  0100               	movlb	0	; () banked
  1541  001886  51D3               	movf	uart_lthread@length& (0+255),w,b
  1542  001888  0100               	movlb	0	; () banked
  1543  00188A  0100               	movlb	0	; () banked
  1544  00188C  25D5               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1545  00188E  6ED9               	movwf	fsr2l,c
  1546  001890  0100               	movlb	0	; () banked
  1547  001892  0100               	movlb	0	; () banked
  1548  001894  51D4               	movf	(uart_lthread@length+1)& (0+255),w,b
  1549  001896  0100               	movlb	0	; () banked
  1550  001898  0100               	movlb	0	; () banked
  1551  00189A  21D6               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1552  00189C  6EDA               	movwf	fsr2h,c
  1553  00189E  0E00               	movlw	0
  1554  0018A0  6EDF               	movwf	indf2,c
  1555  0018A2  0012               	return	
  1556  0018A4                     __end_of_uart_lthread:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           prodh	equ	0xFF4
  1563                           prodl	equ	0xFF3
  1564                           postinc0	equ	0xFEE
  1565                           wreg	equ	0xFE8
  1566                           indf2	equ	0xFDF
  1567                           fsr2h	equ	0xFDA
  1568                           fsr2l	equ	0xFD9
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _timer1_lthread *****************
  1572 ;; Defined at:
  1573 ;;		line 14 in file "../src/timer1_thread.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  tptr            2    3[BANK1 ] PTR struct __timer1_thre
  1576 ;;		 -> main@t1thread_data(2), 
  1577 ;;  msgtype         2    5[BANK1 ] int 
  1578 ;;  length          2    7[BANK1 ] int 
  1579 ;;  msgbuffer       2    9[BANK1 ] PTR unsigned char 
  1580 ;;		 -> main@msgbuffer(11), 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  retval          1   11[BANK1 ] char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2    3[BANK1 ] int 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1592 ;;      Params:         0       0       8       0       0
  1593 ;;      Locals:         0       0       1       0       0
  1594 ;;      Temps:          0       1       0       0       0
  1595 ;;      Totals:         0       1       9       0       0
  1596 ;;Total ram usage:       10 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:   14
  1599 ;; This function calls:
  1600 ;;		_FromMainHigh_sendmsg
  1601 ;;		___lwmod
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text4
  1608  00145E                     __ptext4:
  1609                           	opt stack 0
  1610  00145E                     _timer1_lthread:
  1611                           	opt stack 16
  1612                           
  1613                           ;timer1_thread.c: 15: signed char retval;
  1614                           ;timer1_thread.c: 17: tptr->msgcount++;
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;incstack = 0
  1618  00145E  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1619  001462  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1620  001466  2ADE               	incf	postinc2,f,c
  1621  001468  0E00               	movlw	0
  1622  00146A  22DD               	addwfc	postdec2,f,c
  1623                           
  1624                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1625  00146C  C1A5  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1626  001470  C1A6  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1627  001474  0100               	movlb	0	; () banked
  1628  001476  CFDE F0CF          	movff	postinc2,___lwmod@dividend
  1629  00147A  0100               	movlb	0	; () banked
  1630  00147C  CFDD F0D0          	movff	postdec2,___lwmod@dividend+1
  1631  001480  0E00               	movlw	0
  1632  001482  0100               	movlb	0	; () banked
  1633  001484  0100               	movlb	0	; () banked
  1634  001486  6FD2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1635  001488  0E0A               	movlw	10
  1636  00148A  0100               	movlb	0	; () banked
  1637  00148C  6FD1               	movwf	___lwmod@divisor& (0+255),b
  1638  00148E  EC2D  F009         	call	___lwmod	;wreg free
  1639  001492  0100               	movlb	0	; () banked
  1640  001494  0100               	movlb	0	; () banked
  1641  001496  51CF               	movf	?___lwmod& (0+255),w,b
  1642  001498  0A09               	xorlw	9
  1643  00149A  0100               	movlb	0	; () banked
  1644  00149C  11D0               	iorwf	(?___lwmod+1)& (0+255),w,b
  1645  00149E  A4D8               	btfss	status,2,c
  1646  0014A0  0012               	return	
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1650  0014A2  0100               	movlb	0	; () banked
  1651  0014A4  6FE6               	movwf	??_timer1_lthread& (0+255),b
  1652  0014A6  0E14               	movlw	20
  1653  0014A8  0101               	movlb	1	; () banked
  1654  0014AA  0101               	movlb	1	; () banked
  1655  0014AC  6FA2               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1656  0014AE  0100               	movlb	0	; () banked
  1657  0014B0  51E6               	movf	??_timer1_lthread& (0+255),w,b
  1658  0014B2  0101               	movlb	1	; () banked
  1659  0014B4  0101               	movlb	1	; () banked
  1660  0014B6  C1A6  F1A4         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1661  0014BA  0101               	movlb	1	; () banked
  1662  0014BC  0101               	movlb	1	; () banked
  1663  0014BE  C1A5  F1A3         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1664  0014C2  0E02               	movlw	2
  1665  0014C4  EC8C  F00C         	call	_FromMainHigh_sendmsg
  1666  0014C8  0101               	movlb	1	; () banked
  1667  0014CA  0101               	movlb	1	; () banked
  1668  0014CC  6FAD               	movwf	timer1_lthread@retval& (0+255),b
  1669  0014CE  0012               	return	
  1670  0014D0                     __end_of_timer1_lthread:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           indf2	equ	0xFDF
  1681                           postinc2	equ	0xFDE
  1682                           postdec2	equ	0xFDD
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function ___lwmod *****************
  1688 ;; Defined at:
  1689 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/common/lwmod.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  dividend        2   25[BANK0 ] unsigned int 
  1692 ;;  divisor         2   27[BANK0 ] unsigned int 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  counter         1   30[BANK0 ] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2   25[BANK0 ] unsigned int 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1704 ;;      Params:         0       4       0       0       0
  1705 ;;      Locals:         0       1       0       0       0
  1706 ;;      Temps:          0       1       0       0       0
  1707 ;;      Totals:         0       6       0       0       0
  1708 ;;Total ram usage:        6 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:   11
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_timer1_lthread
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text5
  1719  00125A                     __ptext5:
  1720                           	opt stack 0
  1721  00125A                     ___lwmod:
  1722                           	opt stack 18
  1723                           
  1724                           ;incstack = 0
  1725  00125A  0100               	movlb	0	; () banked
  1726  00125C  0100               	movlb	0	; () banked
  1727  00125E  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1728  001260  11D1               	iorwf	___lwmod@divisor& (0+255),w,b
  1729  001262  B4D8               	btfsc	status,2,c
  1730  001264  D03A               	goto	l1098
  1731                           
  1732                           ; BSR set to: 0
  1733  001266  0100               	movlb	0	; () banked
  1734  001268  6FD3               	movwf	??___lwmod& (0+255),b
  1735  00126A  0E01               	movlw	1
  1736  00126C  0100               	movlb	0	; () banked
  1737  00126E  0100               	movlb	0	; () banked
  1738  001270  6FD4               	movwf	___lwmod@counter& (0+255),b
  1739  001272  0100               	movlb	0	; () banked
  1740  001274  51D3               	movf	??___lwmod& (0+255),w,b
  1741  001276  D009               	goto	l3720
  1742  001278                     l3718:
  1743                           
  1744                           ; BSR set to: 0
  1745  001278  0100               	movlb	0	; () banked
  1746  00127A  0100               	movlb	0	; () banked
  1747  00127C  0100               	movlb	0	; () banked
  1748  00127E  90D8               	bcf	status,0,c
  1749  001280  37D1               	rlcf	___lwmod@divisor& (0+255),f,b
  1750  001282  37D2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1751  001284  0100               	movlb	0	; () banked
  1752  001286  0100               	movlb	0	; () banked
  1753  001288  2BD4               	incf	___lwmod@counter& (0+255),f,b
  1754  00128A                     l3720:
  1755                           
  1756                           ; BSR set to: 0
  1757  00128A  0100               	movlb	0	; () banked
  1758  00128C  0100               	movlb	0	; () banked
  1759  00128E  AFD2               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1760  001290  D7F3               	goto	l3718
  1761  001292                     l3722:
  1762                           
  1763                           ; BSR set to: 0
  1764  001292  0100               	movlb	0	; () banked
  1765  001294  0100               	movlb	0	; () banked
  1766  001296  51D1               	movf	___lwmod@divisor& (0+255),w,b
  1767  001298  0100               	movlb	0	; () banked
  1768  00129A  0100               	movlb	0	; () banked
  1769  00129C  5DCF               	subwf	___lwmod@dividend& (0+255),w,b
  1770  00129E  0100               	movlb	0	; () banked
  1771  0012A0  0100               	movlb	0	; () banked
  1772  0012A2  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1773  0012A4  0100               	movlb	0	; () banked
  1774  0012A6  0100               	movlb	0	; () banked
  1775  0012A8  59D0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1776  0012AA  A0D8               	btfss	status,0,c
  1777  0012AC  D00C               	goto	l3726
  1778                           
  1779                           ; BSR set to: 0
  1780  0012AE  0100               	movlb	0	; () banked
  1781  0012B0  0100               	movlb	0	; () banked
  1782  0012B2  51D1               	movf	___lwmod@divisor& (0+255),w,b
  1783  0012B4  0100               	movlb	0	; () banked
  1784  0012B6  0100               	movlb	0	; () banked
  1785  0012B8  5FCF               	subwf	___lwmod@dividend& (0+255),f,b
  1786  0012BA  0100               	movlb	0	; () banked
  1787  0012BC  0100               	movlb	0	; () banked
  1788  0012BE  51D2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1789  0012C0  0100               	movlb	0	; () banked
  1790  0012C2  0100               	movlb	0	; () banked
  1791  0012C4  5BD0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1792  0012C6                     l3726:
  1793                           
  1794                           ; BSR set to: 0
  1795  0012C6  0100               	movlb	0	; () banked
  1796  0012C8  0100               	movlb	0	; () banked
  1797  0012CA  0100               	movlb	0	; () banked
  1798  0012CC  90D8               	bcf	status,0,c
  1799  0012CE  33D2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1800  0012D0  33D1               	rrcf	___lwmod@divisor& (0+255),f,b
  1801                           
  1802                           ; BSR set to: 0
  1803  0012D2  0100               	movlb	0	; () banked
  1804  0012D4  0100               	movlb	0	; () banked
  1805  0012D6  2FD4               	decfsz	___lwmod@counter& (0+255),f,b
  1806  0012D8  D7DC               	goto	l3722
  1807  0012DA                     l1098:
  1808                           
  1809                           ; BSR set to: 0
  1810  0012DA  C0CF  F0CF         	movff	___lwmod@dividend,?___lwmod
  1811  0012DE  C0D0  F0D0         	movff	___lwmod@dividend+1,?___lwmod+1
  1812                           
  1813                           ; BSR set to: 0
  1814  0012E2  0012               	return	
  1815  0012E4                     __end_of___lwmod:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           prodh	equ	0xFF4
  1822                           prodl	equ	0xFF3
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           indf2	equ	0xFDF
  1826                           postinc2	equ	0xFDE
  1827                           postdec2	equ	0xFDD
  1828                           fsr2h	equ	0xFDA
  1829                           fsr2l	equ	0xFD9
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _FromMainHigh_sendmsg *****************
  1833 ;; Defined at:
  1834 ;;		line 174 in file "../src/messages.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  length          1    wreg     unsigned char 
  1837 ;;  msgtype         1    0[BANK1 ] unsigned char 
  1838 ;;  data            2    1[BANK1 ] PTR void 
  1839 ;;		 -> main@t1thread_data(2), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  length          1   47[BANK0 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      char 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1851 ;;      Params:         0       0       3       0       0
  1852 ;;      Locals:         0       1       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       1       3       0       0
  1855 ;;Total ram usage:        4 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:   13
  1858 ;; This function calls:
  1859 ;;		_send_msg
  1860 ;; This function is called by:
  1861 ;;		_timer1_lthread
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text6
  1866  001918                     __ptext6:
  1867                           	opt stack 0
  1868  001918                     _FromMainHigh_sendmsg:
  1869                           	opt stack 16
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;incstack = 0
  1873                           ;FromMainHigh_sendmsg@length stored from wreg
  1874  001918  CFE8 F0E5          	movff	wreg,FromMainHigh_sendmsg@length
  1875                           
  1876                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1877  00191C  0101               	movlb	1	; () banked
  1878  00191E  0E01               	movlw	high _FromMainHigh_MQ
  1879  001920  0100               	movlb	0	; () banked
  1880  001922  0100               	movlb	0	; () banked
  1881  001924  6FDA               	movwf	(send_msg@qptr+1)& (0+255),b
  1882  001926  0101               	movlb	1	; () banked
  1883  001928  0E00               	movlw	low _FromMainHigh_MQ
  1884  00192A  0100               	movlb	0	; () banked
  1885  00192C  0100               	movlb	0	; () banked
  1886  00192E  6FD9               	movwf	send_msg@qptr& (0+255),b
  1887  001930  C0E5  F0DB         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1888  001934  C1A2  F0DC         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1889  001938  0101               	movlb	1	; () banked
  1890  00193A  0100               	movlb	0	; () banked
  1891  00193C  C1A4  F0DE         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1892  001940  0101               	movlb	1	; () banked
  1893  001942  0100               	movlb	0	; () banked
  1894  001944  C1A3  F0DD         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1895  001948  ECD1  F006         	call	_send_msg	;wreg free
  1896  00194C  0012               	return	
  1897  00194E                     __end_of_FromMainHigh_sendmsg:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           prodh	equ	0xFF4
  1904                           prodl	equ	0xFF3
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           indf2	equ	0xFDF
  1908                           postinc2	equ	0xFDE
  1909                           postdec2	equ	0xFDD
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _send_msg *****************
  1915 ;; Defined at:
  1916 ;;		line 24 in file "../src/messages.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  qptr            2   35[BANK0 ] PTR struct __msg_queue
  1919 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1920 ;;  length          1   37[BANK0 ] unsigned char 
  1921 ;;  msgtype         1   38[BANK0 ] unsigned char 
  1922 ;;  data            2   39[BANK0 ] PTR void 
  1923 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(53), 
  1924 ;;		 -> main@uc(5), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  1927 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1928 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1929 ;;  tlength         2   42[BANK0 ] unsigned int 
  1930 ;;  slot            1   44[BANK0 ] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      char 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1940 ;;      Params:         0       6       0       0       0
  1941 ;;      Locals:         0       5       0       0       0
  1942 ;;      Temps:          0       1       0       0       0
  1943 ;;      Totals:         0      12       0       0       0
  1944 ;;Total ram usage:       12 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:   12
  1947 ;; This function calls:
  1948 ;;		_memcpy
  1949 ;; This function is called by:
  1950 ;;		_FromMainHigh_sendmsg
  1951 ;;		_FromMainLow_sendmsg
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text7
  1956  000DA2                     __ptext7:
  1957                           	opt stack 0
  1958  000DA2                     _send_msg:
  1959                           	opt stack 16
  1960                           
  1961                           ;messages.c: 25: unsigned char slot;
  1962                           ;messages.c: 27: msg *qmsg;
  1963                           ;messages.c: 28: size_t tlength = length;
  1964                           
  1965                           ;incstack = 0
  1966  000DA2  0100               	movlb	0	; () banked
  1967  000DA4  0100               	movlb	0	; () banked
  1968  000DA6  C0DB  F0E0         	movff	send_msg@length,send_msg@tlength
  1969  000DAA  0100               	movlb	0	; () banked
  1970  000DAC  0100               	movlb	0	; () banked
  1971  000DAE  6BE1               	clrf	(send_msg@tlength+1)& (0+255),b
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1975  000DB0  0100               	movlb	0	; () banked
  1976  000DB2  EE20 F034          	lfsr	2,52
  1977  000DB6  0100               	movlb	0	; () banked
  1978  000DB8  51D9               	movf	send_msg@qptr& (0+255),w,b
  1979  000DBA  26D9               	addwf	fsr2l,f,c
  1980  000DBC  0100               	movlb	0	; () banked
  1981  000DBE  51DA               	movf	(send_msg@qptr+1)& (0+255),w,b
  1982  000DC0  22DA               	addwfc	fsr2h,f,c
  1983  000DC2  50DF               	movf	indf2,w,c
  1984  000DC4  0100               	movlb	0	; () banked
  1985  000DC6  0100               	movlb	0	; () banked
  1986  000DC8  6FE2               	movwf	send_msg@slot& (0+255),b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1990  000DCA  0100               	movlb	0	; () banked
  1991  000DCC  0100               	movlb	0	; () banked
  1992  000DCE  51E2               	movf	send_msg@slot& (0+255),w,b
  1993  000DD0  0D0D               	mullw	13
  1994  000DD2  50F3               	movf	prodl,w,c
  1995  000DD4  0100               	movlb	0	; () banked
  1996  000DD6  0100               	movlb	0	; () banked
  1997  000DD8  25D9               	addwf	send_msg@qptr& (0+255),w,b
  1998  000DDA  0100               	movlb	0	; () banked
  1999  000DDC  0100               	movlb	0	; () banked
  2000  000DDE  6FE3               	movwf	send_msg@qmsg& (0+255),b
  2001  000DE0  50F4               	movf	prodh,w,c
  2002  000DE2  0100               	movlb	0	; () banked
  2003  000DE4  0100               	movlb	0	; () banked
  2004  000DE6  21DA               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2005  000DE8  0100               	movlb	0	; () banked
  2006  000DEA  6FE4               	movwf	(send_msg@qmsg+1)& (0+255),b
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;messages.c: 41: if (qmsg->full != 0) {
  2010  000DEC  C0E3  FFD9         	movff	send_msg@qmsg,fsr2l
  2011  000DF0  C0E4  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2012  000DF4  50DF               	movf	indf2,w,c
  2013  000DF6  B4D8               	btfsc	status,2,c
  2014  000DF8  D002               	goto	l3392
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;messages.c: 42: return (-1);
  2018  000DFA  0EFF               	movlw	255
  2019  000DFC  0012               	return	
  2020  000DFE                     l3392:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;messages.c: 43: }
  2024                           ;messages.c: 46: qmsg->length = length;
  2025  000DFE  0100               	movlb	0	; () banked
  2026  000E00  EE20 F001          	lfsr	2,1
  2027  000E04  0100               	movlb	0	; () banked
  2028  000E06  51E3               	movf	send_msg@qmsg& (0+255),w,b
  2029  000E08  26D9               	addwf	fsr2l,f,c
  2030  000E0A  0100               	movlb	0	; () banked
  2031  000E0C  51E4               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2032  000E0E  22DA               	addwfc	fsr2h,f,c
  2033  000E10  0100               	movlb	0	; () banked
  2034  000E12  C0DB  FFDF         	movff	send_msg@length,indf2
  2035                           
  2036                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2037  000E16  0100               	movlb	0	; () banked
  2038  000E18  EE20 F002          	lfsr	2,2
  2039  000E1C  0100               	movlb	0	; () banked
  2040  000E1E  51E3               	movf	send_msg@qmsg& (0+255),w,b
  2041  000E20  26D9               	addwf	fsr2l,f,c
  2042  000E22  0100               	movlb	0	; () banked
  2043  000E24  51E4               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2044  000E26  22DA               	addwfc	fsr2h,f,c
  2045  000E28  0100               	movlb	0	; () banked
  2046  000E2A  C0DC  FFDF         	movff	send_msg@msgtype,indf2
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2050  000E2E  0E03               	movlw	3
  2051  000E30  0100               	movlb	0	; () banked
  2052  000E32  0100               	movlb	0	; () banked
  2053  000E34  25E3               	addwf	send_msg@qmsg& (0+255),w,b
  2054  000E36  0100               	movlb	0	; () banked
  2055  000E38  0100               	movlb	0	; () banked
  2056  000E3A  6FCF               	movwf	memcpy@d1& (0+255),b
  2057  000E3C  0E00               	movlw	0
  2058  000E3E  0100               	movlb	0	; () banked
  2059  000E40  0100               	movlb	0	; () banked
  2060  000E42  21E4               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2061  000E44  0100               	movlb	0	; () banked
  2062  000E46  6FD0               	movwf	(memcpy@d1+1)& (0+255),b
  2063  000E48  0100               	movlb	0	; () banked
  2064  000E4A  0100               	movlb	0	; () banked
  2065  000E4C  C0DE  F0D2         	movff	send_msg@data+1,memcpy@s1+1
  2066  000E50  0100               	movlb	0	; () banked
  2067  000E52  0100               	movlb	0	; () banked
  2068  000E54  C0DD  F0D1         	movff	send_msg@data,memcpy@s1
  2069  000E58  C0E0  F0D3         	movff	send_msg@tlength,memcpy@n
  2070  000E5C  C0E1  F0D4         	movff	send_msg@tlength+1,memcpy@n+1
  2071  000E60  ECD1  F00A         	call	_memcpy	;wreg free
  2072                           
  2073                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2074  000E64  0100               	movlb	0	; () banked
  2075  000E66  EE20 F034          	lfsr	2,52
  2076  000E6A  0100               	movlb	0	; () banked
  2077  000E6C  51D9               	movf	send_msg@qptr& (0+255),w,b
  2078  000E6E  26D9               	addwf	fsr2l,f,c
  2079  000E70  0100               	movlb	0	; () banked
  2080  000E72  51DA               	movf	(send_msg@qptr+1)& (0+255),w,b
  2081  000E74  22DA               	addwfc	fsr2h,f,c
  2082  000E76  0100               	movlb	0	; () banked
  2083  000E78  EE10 F034          	lfsr	1,52
  2084  000E7C  0100               	movlb	0	; () banked
  2085  000E7E  51D9               	movf	send_msg@qptr& (0+255),w,b
  2086  000E80  26E1               	addwf	fsr1l,f,c
  2087  000E82  0100               	movlb	0	; () banked
  2088  000E84  51DA               	movf	(send_msg@qptr+1)& (0+255),w,b
  2089  000E86  22E2               	addwfc	fsr1h,f,c
  2090  000E88  50E7               	movf	indf1,w,c
  2091  000E8A  0100               	movlb	0	; () banked
  2092  000E8C  6FDF               	movwf	??_send_msg& (0+255),b
  2093  000E8E  0100               	movlb	0	; () banked
  2094  000E90  29DF               	incf	??_send_msg& (0+255),w,b
  2095  000E92  0B03               	andlw	3
  2096  000E94  6EDF               	movwf	indf2,c
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;messages.c: 59: qmsg->full = 1;
  2100  000E96  C0E3  FFD9         	movff	send_msg@qmsg,fsr2l
  2101  000E9A  C0E4  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2102  000E9E  0E01               	movlw	1
  2103  000EA0  6EDF               	movwf	indf2,c
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;messages.c: 60: return (1);
  2107  000EA2  0E01               	movlw	1
  2108  000EA4  0012               	return	
  2109  000EA6                     __end_of_send_msg:
  2110                           	opt stack 0
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           prodh	equ	0xFF4
  2116                           prodl	equ	0xFF3
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           indf1	equ	0xFE7
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           indf2	equ	0xFDF
  2123                           postinc2	equ	0xFDE
  2124                           postdec2	equ	0xFDD
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _timer0_lthread *****************
  2130 ;; Defined at:
  2131 ;;		line 9 in file "../src/timer0_thread.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  tptr            2   25[BANK0 ] PTR struct __timer0_thre
  2134 ;;		 -> main@t0thread_data(2), 
  2135 ;;  msgtype         2   27[BANK0 ] int 
  2136 ;;  length          2   29[BANK0 ] int 
  2137 ;;  msgbuffer       2   31[BANK0 ] PTR unsigned char 
  2138 ;;		 -> main@msgbuffer(11), 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  msgval          2   33[BANK0 ] PTR unsigned int 
  2141 ;;		 -> main@msgbuffer(11), 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  2   25[BANK0 ] int 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2151 ;;      Params:         0       8       0       0       0
  2152 ;;      Locals:         0       2       0       0       0
  2153 ;;      Temps:          0       0       0       0       0
  2154 ;;      Totals:         0      10       0       0       0
  2155 ;;Total ram usage:       10 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:   11
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text8
  2166  001B50                     __ptext8:
  2167                           	opt stack 0
  2168  001B50                     _timer0_lthread:
  2169                           	opt stack 19
  2170                           
  2171                           ;timer0_thread.c: 10: unsigned int *msgval;
  2172                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;incstack = 0
  2176  001B50  0100               	movlb	0	; () banked
  2177  001B52  0100               	movlb	0	; () banked
  2178  001B54  C0D6  F0D8         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2179  001B58  0100               	movlb	0	; () banked
  2180  001B5A  0100               	movlb	0	; () banked
  2181  001B5C  C0D5  F0D7         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2182                           
  2183                           ; BSR set to: 0
  2184  001B60  0012               	return	
  2185  001B62                     __end_of_timer0_lthread:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           prodh	equ	0xFF4
  2192                           prodl	equ	0xFF3
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           indf1	equ	0xFE7
  2196                           fsr1h	equ	0xFE2
  2197                           fsr1l	equ	0xFE1
  2198                           indf2	equ	0xFDF
  2199                           postinc2	equ	0xFDE
  2200                           postdec2	equ	0xFDD
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _init_uart_recv *****************
  2206 ;; Defined at:
  2207 ;;		line 49 in file "../src/my_uart.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  uc              2   25[BANK0 ] PTR struct __uart_comm
  2210 ;;		 -> main@uc(5), 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;		None               void
  2215 ;; Registers used:
  2216 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2222 ;;      Params:         0       2       0       0       0
  2223 ;;      Locals:         0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0
  2225 ;;      Totals:         0       2       0       0       0
  2226 ;;Total ram usage:        2 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:   11
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text9
  2237  001AB2                     __ptext9:
  2238                           	opt stack 0
  2239  001AB2                     _init_uart_recv:
  2240                           	opt stack 19
  2241                           
  2242                           ;my_uart.c: 50: uc_ptr = uc;
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;incstack = 0
  2246  001AB2  0100               	movlb	0	; () banked
  2247  001AB4  C0D0  F051         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2248  001AB8  0100               	movlb	0	; () banked
  2249  001ABA  C0CF  F050         	movff	init_uart_recv@uc,_uc_ptr
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;my_uart.c: 51: uc_ptr->buflen = 0;
  2253  001ABE  EE20 F004          	lfsr	2,4
  2254  001AC2  5050               	movf	_uc_ptr,w,c
  2255  001AC4  26D9               	addwf	fsr2l,f,c
  2256  001AC6  5051               	movf	_uc_ptr+1,w,c
  2257  001AC8  22DA               	addwfc	fsr2h,f,c
  2258  001ACA  0E00               	movlw	0
  2259  001ACC  6EDF               	movwf	indf2,c
  2260                           
  2261                           ; BSR set to: 0
  2262  001ACE  0012               	return	
  2263  001AD0                     __end_of_init_uart_recv:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           indf1	equ	0xFE7
  2274                           fsr1h	equ	0xFE2
  2275                           fsr1l	equ	0xFE1
  2276                           indf2	equ	0xFDF
  2277                           postinc2	equ	0xFDE
  2278                           postdec2	equ	0xFDD
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _init_timer1_lthread *****************
  2284 ;; Defined at:
  2285 ;;		line 6 in file "../src/timer1_thread.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  tptr            2   25[BANK0 ] PTR struct __timer1_thre
  2288 ;;		 -> main@t1thread_data(2), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;		None               void
  2293 ;; Registers used:
  2294 ;;		wreg, fsr2l, fsr2h
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2300 ;;      Params:         0       2       0       0       0
  2301 ;;      Locals:         0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0
  2303 ;;      Totals:         0       2       0       0       0
  2304 ;;Total ram usage:        2 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:   11
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text10
  2315  001B62                     __ptext10:
  2316                           	opt stack 0
  2317  001B62                     _init_timer1_lthread:
  2318                           	opt stack 19
  2319                           
  2320                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;incstack = 0
  2324  001B62  C0CF  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2325  001B66  C0D0  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2326  001B6A  0E00               	movlw	0
  2327  001B6C  6EDE               	movwf	postinc2,c
  2328  001B6E  0E00               	movlw	0
  2329  001B70  6EDD               	movwf	postdec2,c
  2330  001B72  0012               	return	
  2331  001B74                     __end_of_init_timer1_lthread:
  2332                           	opt stack 0
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           postinc0	equ	0xFEE
  2340                           wreg	equ	0xFE8
  2341                           indf1	equ	0xFE7
  2342                           fsr1h	equ	0xFE2
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           postinc2	equ	0xFDE
  2346                           postdec2	equ	0xFDD
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _init_queues *****************
  2352 ;; Defined at:
  2353 ;;		line 194 in file "../src/messages.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;		None               void
  2360 ;; Registers used:
  2361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0
  2369 ;;      Temps:          0       1       0       0       0
  2370 ;;      Totals:         0       1       0       0       0
  2371 ;;Total ram usage:        1 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:   12
  2374 ;; This function calls:
  2375 ;;		_init_queue
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text11
  2382  0014D0                     __ptext11:
  2383                           	opt stack 0
  2384  0014D0                     _init_queues:
  2385                           	opt stack 18
  2386                           
  2387                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2388                           
  2389                           ;incstack = 0
  2390  0014D0  0100               	movlb	0	; () banked
  2391  0014D2  6FD3               	movwf	??_init_queues& (0+255),b
  2392  0014D4  0E00               	movlw	0
  2393  0014D6  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2394  0014D8  0100               	movlb	0	; () banked
  2395  0014DA  51D3               	movf	??_init_queues& (0+255),w,b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2399  0014DC  0100               	movlb	0	; () banked
  2400  0014DE  0E00               	movlw	high _ToMainLow_MQ
  2401  0014E0  0100               	movlb	0	; () banked
  2402  0014E2  0100               	movlb	0	; () banked
  2403  0014E4  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2404  0014E6  0100               	movlb	0	; () banked
  2405  0014E8  0E80               	movlw	low _ToMainLow_MQ
  2406  0014EA  0100               	movlb	0	; () banked
  2407  0014EC  0100               	movlb	0	; () banked
  2408  0014EE  6FCF               	movwf	init_queue@qptr& (0+255),b
  2409  0014F0  ECF2  F009         	call	_init_queue	;wreg free
  2410                           
  2411                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2412  0014F4  0101               	movlb	1	; () banked
  2413  0014F6  0E01               	movlw	high _ToMainHigh_MQ
  2414  0014F8  0100               	movlb	0	; () banked
  2415  0014FA  0100               	movlb	0	; () banked
  2416  0014FC  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2417  0014FE  0101               	movlb	1	; () banked
  2418  001500  0E6C               	movlw	low _ToMainHigh_MQ
  2419  001502  0100               	movlb	0	; () banked
  2420  001504  0100               	movlb	0	; () banked
  2421  001506  6FCF               	movwf	init_queue@qptr& (0+255),b
  2422  001508  ECF2  F009         	call	_init_queue	;wreg free
  2423                           
  2424                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2425  00150C  0101               	movlb	1	; () banked
  2426  00150E  0E01               	movlw	high _FromMainLow_MQ
  2427  001510  0100               	movlb	0	; () banked
  2428  001512  0100               	movlb	0	; () banked
  2429  001514  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2430  001516  0101               	movlb	1	; () banked
  2431  001518  0E36               	movlw	low _FromMainLow_MQ
  2432  00151A  0100               	movlb	0	; () banked
  2433  00151C  0100               	movlb	0	; () banked
  2434  00151E  6FCF               	movwf	init_queue@qptr& (0+255),b
  2435  001520  ECF2  F009         	call	_init_queue	;wreg free
  2436                           
  2437                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2438  001524  0101               	movlb	1	; () banked
  2439  001526  0E01               	movlw	high _FromMainHigh_MQ
  2440  001528  0100               	movlb	0	; () banked
  2441  00152A  0100               	movlb	0	; () banked
  2442  00152C  6FD0               	movwf	(init_queue@qptr+1)& (0+255),b
  2443  00152E  0101               	movlb	1	; () banked
  2444  001530  0E00               	movlw	low _FromMainHigh_MQ
  2445  001532  0100               	movlb	0	; () banked
  2446  001534  0100               	movlb	0	; () banked
  2447  001536  6FCF               	movwf	init_queue@qptr& (0+255),b
  2448  001538  ECF2  F009         	call	_init_queue	;wreg free
  2449  00153C  0012               	return	
  2450  00153E                     __end_of_init_queues:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           indf1	equ	0xFE7
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _init_queue *****************
  2471 ;; Defined at:
  2472 ;;		line 14 in file "../src/messages.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  qptr            2   25[BANK0 ] PTR struct __msg_queue
  2475 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  i               1   28[BANK0 ] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;		None               void
  2480 ;; Registers used:
  2481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2487 ;;      Params:         0       2       0       0       0
  2488 ;;      Locals:         0       1       0       0       0
  2489 ;;      Temps:          0       1       0       0       0
  2490 ;;      Totals:         0       4       0       0       0
  2491 ;;Total ram usage:        4 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:   11
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_init_queues
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text12
  2502  0013E4                     __ptext12:
  2503                           	opt stack 0
  2504  0013E4                     _init_queue:
  2505                           	opt stack 18
  2506                           
  2507                           ;messages.c: 15: unsigned char i;
  2508                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2509                           
  2510                           ;incstack = 0
  2511  0013E4  0100               	movlb	0	; () banked
  2512  0013E6  EE20 F034          	lfsr	2,52
  2513  0013EA  0100               	movlb	0	; () banked
  2514  0013EC  51CF               	movf	init_queue@qptr& (0+255),w,b
  2515  0013EE  26D9               	addwf	fsr2l,f,c
  2516  0013F0  0100               	movlb	0	; () banked
  2517  0013F2  51D0               	movf	(init_queue@qptr+1)& (0+255),w,b
  2518  0013F4  22DA               	addwfc	fsr2h,f,c
  2519  0013F6  0E00               	movlw	0
  2520  0013F8  6EDF               	movwf	indf2,c
  2521                           
  2522                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2523  0013FA  0100               	movlb	0	; () banked
  2524  0013FC  EE20 F035          	lfsr	2,53
  2525  001400  0100               	movlb	0	; () banked
  2526  001402  51CF               	movf	init_queue@qptr& (0+255),w,b
  2527  001404  26D9               	addwf	fsr2l,f,c
  2528  001406  0100               	movlb	0	; () banked
  2529  001408  51D0               	movf	(init_queue@qptr+1)& (0+255),w,b
  2530  00140A  22DA               	addwfc	fsr2h,f,c
  2531  00140C  0E00               	movlw	0
  2532  00140E  6EDF               	movwf	indf2,c
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2536  001410  0100               	movlb	0	; () banked
  2537  001412  6FD1               	movwf	??_init_queue& (0+255),b
  2538  001414  0E00               	movlw	0
  2539  001416  0100               	movlb	0	; () banked
  2540  001418  0100               	movlb	0	; () banked
  2541  00141A  6FD2               	movwf	init_queue@i& (0+255),b
  2542  00141C  0100               	movlb	0	; () banked
  2543  00141E  51D1               	movf	??_init_queue& (0+255),w,b
  2544                           
  2545                           ; BSR set to: 0
  2546  001420  0E03               	movlw	3
  2547  001422  0100               	movlb	0	; () banked
  2548  001424  0100               	movlb	0	; () banked
  2549  001426  65D2               	cpfsgt	init_queue@i& (0+255),b
  2550  001428  D001               	goto	l2640
  2551  00142A  0012               	return	
  2552  00142C                     l2640:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;messages.c: 20: qptr->queue[i].full = 0;
  2556  00142C  0100               	movlb	0	; () banked
  2557  00142E  0100               	movlb	0	; () banked
  2558  001430  51D2               	movf	init_queue@i& (0+255),w,b
  2559  001432  0D0D               	mullw	13
  2560  001434  50F3               	movf	prodl,w,c
  2561  001436  0100               	movlb	0	; () banked
  2562  001438  0100               	movlb	0	; () banked
  2563  00143A  25CF               	addwf	init_queue@qptr& (0+255),w,b
  2564  00143C  6ED9               	movwf	fsr2l,c
  2565  00143E  50F4               	movf	prodh,w,c
  2566  001440  0100               	movlb	0	; () banked
  2567  001442  0100               	movlb	0	; () banked
  2568  001444  21D0               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2569  001446  6EDA               	movwf	fsr2h,c
  2570  001448  0E00               	movlw	0
  2571  00144A  6EDF               	movwf	indf2,c
  2572                           
  2573                           ; BSR set to: 0
  2574  00144C  0100               	movlb	0	; () banked
  2575  00144E  0100               	movlb	0	; () banked
  2576  001450  2BD2               	incf	init_queue@i& (0+255),f,b
  2577                           
  2578                           ; BSR set to: 0
  2579  001452  0E03               	movlw	3
  2580  001454  0100               	movlb	0	; () banked
  2581  001456  0100               	movlb	0	; () banked
  2582  001458  65D2               	cpfsgt	init_queue@i& (0+255),b
  2583  00145A  D7E8               	goto	l2640
  2584  00145C  0012               	return	
  2585  00145E                     __end_of_init_queue:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           prodh	equ	0xFF4
  2592                           prodl	equ	0xFF3
  2593                           postinc0	equ	0xFEE
  2594                           wreg	equ	0xFE8
  2595                           indf1	equ	0xFE7
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           postdec2	equ	0xFDD
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _init_i2c *****************
  2606 ;; Defined at:
  2607 ;;		line 382 in file "../src/my_i2c.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  ic              2   25[BANK0 ] PTR struct __i2c_comm
  2610 ;;		 -> main@ic(53), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2622 ;;      Params:         0       2       0       0       0
  2623 ;;      Locals:         0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0
  2625 ;;      Totals:         0       2       0       0       0
  2626 ;;Total ram usage:        2 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:   11
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text13
  2637  001096                     __ptext13:
  2638                           	opt stack 0
  2639  001096                     _init_i2c:
  2640                           	opt stack 19
  2641                           
  2642                           ;my_i2c.c: 383: ic_ptr = ic;
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;incstack = 0
  2646  001096  0100               	movlb	0	; () banked
  2647  001098  C0D0  F04F         	movff	init_i2c@ic+1,_ic_ptr+1
  2648  00109C  0100               	movlb	0	; () banked
  2649  00109E  C0CF  F04E         	movff	init_i2c@ic,_ic_ptr
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;my_i2c.c: 384: ic_ptr->buffer[0] = 0;
  2653  0010A2  C04E  FFD9         	movff	_ic_ptr,fsr2l
  2654  0010A6  C04F  FFDA         	movff	_ic_ptr+1,fsr2h
  2655  0010AA  0E00               	movlw	0
  2656  0010AC  6EDF               	movwf	indf2,c
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;my_i2c.c: 385: ic_ptr->buffer[1] = 0;
  2660  0010AE  EE20 F001          	lfsr	2,1
  2661  0010B2  504E               	movf	_ic_ptr,w,c
  2662  0010B4  26D9               	addwf	fsr2l,f,c
  2663  0010B6  504F               	movf	_ic_ptr+1,w,c
  2664  0010B8  22DA               	addwfc	fsr2h,f,c
  2665  0010BA  0E00               	movlw	0
  2666  0010BC  6EDF               	movwf	indf2,c
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;my_i2c.c: 386: ic_ptr->buffer[2] = 0;
  2670  0010BE  EE20 F002          	lfsr	2,2
  2671  0010C2  504E               	movf	_ic_ptr,w,c
  2672  0010C4  26D9               	addwf	fsr2l,f,c
  2673  0010C6  504F               	movf	_ic_ptr+1,w,c
  2674  0010C8  22DA               	addwfc	fsr2h,f,c
  2675  0010CA  0E00               	movlw	0
  2676  0010CC  6EDF               	movwf	indf2,c
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;my_i2c.c: 387: ic_ptr->buflen = 0;
  2680  0010CE  EE20 F00A          	lfsr	2,10
  2681  0010D2  504E               	movf	_ic_ptr,w,c
  2682  0010D4  26D9               	addwf	fsr2l,f,c
  2683  0010D6  504F               	movf	_ic_ptr+1,w,c
  2684  0010D8  22DA               	addwfc	fsr2h,f,c
  2685  0010DA  0E00               	movlw	0
  2686  0010DC  6EDF               	movwf	indf2,c
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;my_i2c.c: 388: ic_ptr->event_count = 0;
  2690  0010DE  EE20 F00C          	lfsr	2,12
  2691  0010E2  504E               	movf	_ic_ptr,w,c
  2692  0010E4  26D9               	addwf	fsr2l,f,c
  2693  0010E6  504F               	movf	_ic_ptr+1,w,c
  2694  0010E8  22DA               	addwfc	fsr2h,f,c
  2695  0010EA  0E00               	movlw	0
  2696  0010EC  6EDF               	movwf	indf2,c
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;my_i2c.c: 389: ic_ptr->status = 0x5;
  2700  0010EE  EE20 F00D          	lfsr	2,13
  2701  0010F2  504E               	movf	_ic_ptr,w,c
  2702  0010F4  26D9               	addwf	fsr2l,f,c
  2703  0010F6  504F               	movf	_ic_ptr+1,w,c
  2704  0010F8  22DA               	addwfc	fsr2h,f,c
  2705  0010FA  0E05               	movlw	5
  2706  0010FC  6EDF               	movwf	indf2,c
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;my_i2c.c: 390: ic_ptr->error_count = 0;
  2710  0010FE  EE20 F00F          	lfsr	2,15
  2711  001102  504E               	movf	_ic_ptr,w,c
  2712  001104  26D9               	addwf	fsr2l,f,c
  2713  001106  504F               	movf	_ic_ptr+1,w,c
  2714  001108  22DA               	addwfc	fsr2h,f,c
  2715  00110A  0E00               	movlw	0
  2716  00110C  6EDF               	movwf	indf2,c
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;my_i2c.c: 391: ic_ptr->sendBufInd = 0;
  2720  00110E  EE20 F028          	lfsr	2,40
  2721  001112  504E               	movf	_ic_ptr,w,c
  2722  001114  26D9               	addwf	fsr2l,f,c
  2723  001116  504F               	movf	_ic_ptr+1,w,c
  2724  001118  22DA               	addwfc	fsr2h,f,c
  2725  00111A  0E00               	movlw	0
  2726  00111C  6EDF               	movwf	indf2,c
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;my_i2c.c: 392: ic_ptr->sendBufLen = 0;
  2730  00111E  EE20 F027          	lfsr	2,39
  2731  001122  504E               	movf	_ic_ptr,w,c
  2732  001124  26D9               	addwf	fsr2l,f,c
  2733  001126  504F               	movf	_ic_ptr+1,w,c
  2734  001128  22DA               	addwfc	fsr2h,f,c
  2735  00112A  0E00               	movlw	0
  2736  00112C  6EDF               	movwf	indf2,c
  2737                           
  2738                           ; BSR set to: 0
  2739  00112E  0012               	return	
  2740  001130                     __end_of_init_i2c:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           indf1	equ	0xFE7
  2751                           fsr1h	equ	0xFE2
  2752                           fsr1l	equ	0xFE1
  2753                           indf2	equ	0xFDF
  2754                           postinc2	equ	0xFDE
  2755                           postdec2	equ	0xFDD
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _i2c_configure_slave *****************
  2761 ;; Defined at:
  2762 ;;		line 398 in file "../src/my_i2c.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  addr            1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  addr            1   26[BANK0 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;		None               void
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         0       1       0       0       0
  2778 ;;      Temps:          0       1       0       0       0
  2779 ;;      Totals:         0       2       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:   11
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text14
  2791  001984                     __ptext14:
  2792                           	opt stack 0
  2793  001984                     _i2c_configure_slave:
  2794                           	opt stack 19
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;incstack = 0
  2798                           ;i2c_configure_slave@addr stored from wreg
  2799  001984  CFE8 F0D0          	movff	wreg,i2c_configure_slave@addr
  2800                           
  2801                           ;my_i2c.c: 410: TRISCbits.TRISC3 = 1;
  2802  001988  8694               	bsf	3988,3,c	;volatile
  2803                           
  2804                           ;my_i2c.c: 411: TRISCbits.TRISC4 = 1;
  2805  00198A  8894               	bsf	3988,4,c	;volatile
  2806                           
  2807                           ;my_i2c.c: 416: SSPADD = addr;
  2808  00198C  C0D0  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2809                           
  2810                           ;my_i2c.c: 418: SSPSTAT = 0x0;
  2811  001990  0E00               	movlw	0
  2812  001992  6EC7               	movwf	4039,c	;volatile
  2813                           
  2814                           ;my_i2c.c: 419: SSPCON1 = 0x0;
  2815  001994  0E00               	movlw	0
  2816  001996  6EC6               	movwf	4038,c	;volatile
  2817                           
  2818                           ;my_i2c.c: 420: SSPCON2 = 0x0;
  2819  001998  0E00               	movlw	0
  2820  00199A  6EC5               	movwf	4037,c	;volatile
  2821                           
  2822                           ;my_i2c.c: 421: SSPCON1 |= 0x0E;
  2823  00199C  0E0E               	movlw	14
  2824  00199E  12C6               	iorwf	4038,f,c	;volatile
  2825                           
  2826                           ;my_i2c.c: 422: SSPSTAT |= 0b10000000;
  2827  0019A0  8EC7               	bsf	4039,7,c	;volatile
  2828                           
  2829                           ;my_i2c.c: 425: TRISCbits.TRISC3 = 1;
  2830  0019A2  8694               	bsf	3988,3,c	;volatile
  2831                           
  2832                           ;my_i2c.c: 426: TRISCbits.TRISC4 = 1;
  2833  0019A4  8894               	bsf	3988,4,c	;volatile
  2834                           
  2835                           ;my_i2c.c: 445: i2c_mode = 2;
  2836  0019A6  0100               	movlb	0	; () banked
  2837  0019A8  6FCF               	movwf	??_i2c_configure_slave& (0+255),b
  2838  0019AA  0E02               	movlw	2
  2839  0019AC  6E4D               	movwf	_i2c_mode,c
  2840  0019AE  0100               	movlb	0	; () banked
  2841  0019B0  51CF               	movf	??_i2c_configure_slave& (0+255),w,b
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;my_i2c.c: 447: SSPCON2bits.SEN = 1;
  2845  0019B2  80C5               	bsf	4037,0,c	;volatile
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;my_i2c.c: 448: SSPCON1 |= 0b00100000;
  2849  0019B4  8AC6               	bsf	4038,5,c	;volatile
  2850                           
  2851                           ; BSR set to: 0
  2852  0019B6  0012               	return	
  2853  0019B8                     __end_of_i2c_configure_slave:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           indf1	equ	0xFE7
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _enable_interrupts *****************
  2874 ;; Defined at:
  2875 ;;		line 14 in file "../src/interrupts.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		None
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:   11
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text15
  2904  001BC8                     __ptext15:
  2905                           	opt stack 0
  2906  001BC8                     _enable_interrupts:
  2907                           	opt stack 19
  2908                           
  2909                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;incstack = 0
  2913  001BC8  8ED0               	bsf	4048,7,c	;volatile
  2914                           
  2915                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2916  001BCA  8EF2               	bsf	intcon,7,c	;volatile
  2917                           
  2918                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2919  001BCC  8CF2               	bsf	intcon,6,c	;volatile
  2920  001BCE  0012               	return	
  2921  001BD0                     __end_of_enable_interrupts:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           indf1	equ	0xFE7
  2933                           fsr1h	equ	0xFE2
  2934                           fsr1l	equ	0xFE1
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           postdec2	equ	0xFDD
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function _block_on_To_msgqueues *****************
  2943 ;; Defined at:
  2944 ;;		line 258 in file "../src/messages.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          0       1       0       0       0
  2961 ;;      Totals:         0       1       0       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:   14
  2965 ;; This function calls:
  2966 ;;		_Delay1KTCYx
  2967 ;;		_check_msg
  2968 ;;		_in_main
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text16
  2975  001366                     __ptext16:
  2976                           	opt stack 0
  2977  001366                     _block_on_To_msgqueues:
  2978                           	opt stack 16
  2979                           
  2980                           ;messages.c: 259: if (!in_main()) {
  2981                           
  2982                           ;incstack = 0
  2983  001366  EC6D  F00B         	call	_in_main	;wreg free
  2984  00136A  0100               	movlb	0	; () banked
  2985  00136C  0100               	movlb	0	; () banked
  2986  00136E  51D4               	movf	(?_in_main+1)& (0+255),w,b
  2987  001370  0100               	movlb	0	; () banked
  2988  001372  11D3               	iorwf	?_in_main& (0+255),w,b
  2989  001374  B4D8               	btfsc	status,2,c
  2990  001376  0012               	return	
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;messages.c: 261: }
  2994                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2995                           
  2996                           ; BSR set to: 0
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;messages.c: 260: return;
  3000  001378  0100               	movlb	0	; () banked
  3001  00137A  6FD5               	movwf	??_block_on_To_msgqueues& (0+255),b
  3002  00137C  0E01               	movlw	1
  3003  00137E  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3004  001380  0100               	movlb	0	; () banked
  3005  001382  51D5               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3006  001384                     l2584:
  3007                           
  3008                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3009  001384  0101               	movlb	1	; () banked
  3010  001386  0E01               	movlw	high _ToMainHigh_MQ
  3011  001388  0100               	movlb	0	; () banked
  3012  00138A  0100               	movlb	0	; () banked
  3013  00138C  6FD0               	movwf	(check_msg@qptr+1)& (0+255),b
  3014  00138E  0101               	movlb	1	; () banked
  3015  001390  0E6C               	movlw	low _ToMainHigh_MQ
  3016  001392  0100               	movlb	0	; () banked
  3017  001394  0100               	movlb	0	; () banked
  3018  001396  6FCF               	movwf	check_msg@qptr& (0+255),b
  3019  001398  ECA7  F00C         	call	_check_msg	;wreg free
  3020  00139C  0900               	iorlw	0
  3021  00139E  B4D8               	btfsc	status,2,c
  3022  0013A0  D007               	goto	l2590
  3023                           
  3024                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3025  0013A2  0100               	movlb	0	; () banked
  3026  0013A4  6FD5               	movwf	??_block_on_To_msgqueues& (0+255),b
  3027  0013A6  0E00               	movlw	0
  3028  0013A8  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3029  0013AA  0100               	movlb	0	; () banked
  3030  0013AC  51D5               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3031  0013AE  0012               	return	
  3032  0013B0                     l2590:
  3033                           
  3034                           ;messages.c: 271: }
  3035                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3036  0013B0  0100               	movlb	0	; () banked
  3037  0013B2  0E00               	movlw	high _ToMainLow_MQ
  3038  0013B4  0100               	movlb	0	; () banked
  3039  0013B6  0100               	movlb	0	; () banked
  3040  0013B8  6FD0               	movwf	(check_msg@qptr+1)& (0+255),b
  3041  0013BA  0100               	movlb	0	; () banked
  3042  0013BC  0E80               	movlw	low _ToMainLow_MQ
  3043  0013BE  0100               	movlb	0	; () banked
  3044  0013C0  0100               	movlb	0	; () banked
  3045  0013C2  6FCF               	movwf	check_msg@qptr& (0+255),b
  3046  0013C4  ECA7  F00C         	call	_check_msg	;wreg free
  3047  0013C8  0900               	iorlw	0
  3048  0013CA  B4D8               	btfsc	status,2,c
  3049  0013CC  D007               	goto	l2596
  3050                           
  3051                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3052  0013CE  0100               	movlb	0	; () banked
  3053  0013D0  6FD5               	movwf	??_block_on_To_msgqueues& (0+255),b
  3054  0013D2  0E00               	movlw	0
  3055  0013D4  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3056  0013D6  0100               	movlb	0	; () banked
  3057  0013D8  51D5               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3058  0013DA  0012               	return	
  3059  0013DC                     l2596:
  3060                           
  3061                           ;messages.c: 278: }
  3062                           ;messages.c: 279: Delay1KTCYx(10);
  3063  0013DC  0E0A               	movlw	10
  3064  0013DE  EC93  F00D         	call	_Delay1KTCYx
  3065  0013E2  D7D0               	goto	l2584
  3066  0013E4                     __end_of_block_on_To_msgqueues:
  3067                           	opt stack 0
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           intcon	equ	0xFF2
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           indf1	equ	0xFE7
  3078                           fsr1h	equ	0xFE2
  3079                           fsr1l	equ	0xFE1
  3080                           indf2	equ	0xFDF
  3081                           postinc2	equ	0xFDE
  3082                           postdec2	equ	0xFDD
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _in_main *****************
  3088 ;; Defined at:
  3089 ;;		line 40 in file "../src/interrupts.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2   29[BANK0 ] int 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3103 ;;      Params:         0       2       0       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       2       0       0       0
  3107 ;;Total ram usage:        2 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:   13
  3110 ;; This function calls:
  3111 ;;		_in_high_int
  3112 ;;		_in_low_int
  3113 ;; This function is called by:
  3114 ;;		_block_on_To_msgqueues
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text17
  3119  0016DA                     __ptext17:
  3120                           	opt stack 0
  3121  0016DA                     _in_main:
  3122                           	opt stack 16
  3123                           
  3124                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3125                           
  3126                           ;incstack = 0
  3127  0016DA  EC4A  F00B         	call	_in_low_int	;wreg free
  3128  0016DE  0100               	movlb	0	; () banked
  3129  0016E0  0100               	movlb	0	; () banked
  3130  0016E2  51D2               	movf	(?_in_low_int+1)& (0+255),w,b
  3131  0016E4  0100               	movlb	0	; () banked
  3132  0016E6  11D1               	iorwf	?_in_low_int& (0+255),w,b
  3133  0016E8  A4D8               	btfss	status,2,c
  3134  0016EA  D011               	goto	l2318
  3135                           
  3136                           ; BSR set to: 0
  3137  0016EC  ECBA  F00D         	call	_in_high_int	;wreg free
  3138  0016F0  0100               	movlb	0	; () banked
  3139  0016F2  0100               	movlb	0	; () banked
  3140  0016F4  51D0               	movf	(?_in_high_int+1)& (0+255),w,b
  3141  0016F6  0100               	movlb	0	; () banked
  3142  0016F8  11CF               	iorwf	?_in_high_int& (0+255),w,b
  3143  0016FA  A4D8               	btfss	status,2,c
  3144  0016FC  D008               	goto	l2318
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;interrupts.c: 42: return (1);
  3148  0016FE  0E00               	movlw	0
  3149  001700  0100               	movlb	0	; () banked
  3150  001702  0100               	movlb	0	; () banked
  3151  001704  6FD4               	movwf	(?_in_main+1)& (0+255),b
  3152  001706  0E01               	movlw	1
  3153  001708  0100               	movlb	0	; () banked
  3154  00170A  6FD3               	movwf	?_in_main& (0+255),b
  3155  00170C  0012               	return	
  3156  00170E                     l2318:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;interrupts.c: 44: return (0);
  3160  00170E  0E00               	movlw	0
  3161  001710  0100               	movlb	0	; () banked
  3162  001712  0100               	movlb	0	; () banked
  3163  001714  6FD4               	movwf	(?_in_main+1)& (0+255),b
  3164  001716  0E00               	movlw	0
  3165  001718  0100               	movlb	0	; () banked
  3166  00171A  6FD3               	movwf	?_in_main& (0+255),b
  3167  00171C  0012               	return	
  3168  00171E                     __end_of_in_main:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           indf1	equ	0xFE7
  3180                           fsr1h	equ	0xFE2
  3181                           fsr1l	equ	0xFE1
  3182                           indf2	equ	0xFDF
  3183                           postinc2	equ	0xFDE
  3184                           postdec2	equ	0xFDD
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _in_low_int *****************
  3190 ;; Defined at:
  3191 ;;		line 30 in file "../src/interrupts.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2   27[BANK0 ] int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3205 ;;      Params:         0       2       0       0       0
  3206 ;;      Locals:         0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       2       0       0       0
  3209 ;;Total ram usage:        2 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:   12
  3212 ;; This function calls:
  3213 ;;		_in_high_int
  3214 ;; This function is called by:
  3215 ;;		_in_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text18
  3220  001694                     __ptext18:
  3221                           	opt stack 0
  3222  001694                     _in_low_int:
  3223                           	opt stack 16
  3224                           
  3225                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;incstack = 0
  3229  001694  ACF2               	btfss	intcon,6,c	;volatile
  3230  001696  D008               	goto	l2296
  3231                           
  3232                           ;interrupts.c: 32: return (0);
  3233  001698  0E00               	movlw	0
  3234  00169A  0100               	movlb	0	; () banked
  3235  00169C  0100               	movlb	0	; () banked
  3236  00169E  6FD2               	movwf	(?_in_low_int+1)& (0+255),b
  3237  0016A0  0E00               	movlw	0
  3238  0016A2  0100               	movlb	0	; () banked
  3239  0016A4  6FD1               	movwf	?_in_low_int& (0+255),b
  3240  0016A6  0012               	return	
  3241  0016A8                     l2296:
  3242  0016A8  ECBA  F00D         	call	_in_high_int	;wreg free
  3243  0016AC  0100               	movlb	0	; () banked
  3244  0016AE  0100               	movlb	0	; () banked
  3245  0016B0  51D0               	movf	(?_in_high_int+1)& (0+255),w,b
  3246  0016B2  0100               	movlb	0	; () banked
  3247  0016B4  11CF               	iorwf	?_in_high_int& (0+255),w,b
  3248  0016B6  B4D8               	btfsc	status,2,c
  3249  0016B8  D008               	goto	l2304
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;interrupts.c: 34: return (0);
  3253  0016BA  0E00               	movlw	0
  3254  0016BC  0100               	movlb	0	; () banked
  3255  0016BE  0100               	movlb	0	; () banked
  3256  0016C0  6FD2               	movwf	(?_in_low_int+1)& (0+255),b
  3257  0016C2  0E00               	movlw	0
  3258  0016C4  0100               	movlb	0	; () banked
  3259  0016C6  6FD1               	movwf	?_in_low_int& (0+255),b
  3260  0016C8  0012               	return	
  3261  0016CA                     l2304:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;interrupts.c: 36: return (1);
  3265  0016CA  0E00               	movlw	0
  3266  0016CC  0100               	movlb	0	; () banked
  3267  0016CE  0100               	movlb	0	; () banked
  3268  0016D0  6FD2               	movwf	(?_in_low_int+1)& (0+255),b
  3269  0016D2  0E01               	movlw	1
  3270  0016D4  0100               	movlb	0	; () banked
  3271  0016D6  6FD1               	movwf	?_in_low_int& (0+255),b
  3272  0016D8  0012               	return	
  3273  0016DA                     __end_of_in_low_int:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           intcon	equ	0xFF2
  3282                           postinc0	equ	0xFEE
  3283                           wreg	equ	0xFE8
  3284                           indf1	equ	0xFE7
  3285                           fsr1h	equ	0xFE2
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           postdec2	equ	0xFDD
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _in_high_int *****************
  3295 ;; Defined at:
  3296 ;;		line 22 in file "../src/interrupts.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  2   25[BANK0 ] int 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3310 ;;      Params:         0       2       0       0       0
  3311 ;;      Locals:         0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0
  3313 ;;      Totals:         0       2       0       0       0
  3314 ;;Total ram usage:        2 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:   11
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_in_low_int
  3321 ;;		_in_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text19
  3326  001B74                     __ptext19:
  3327                           	opt stack 0
  3328  001B74                     _in_high_int:
  3329                           	opt stack 16
  3330                           
  3331                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;incstack = 0
  3335  001B74  0E00               	movlw	0
  3336  001B76  AEF2               	btfss	intcon,7,c	;volatile
  3337  001B78  0E01               	movlw	1
  3338  001B7A  0100               	movlb	0	; () banked
  3339  001B7C  0100               	movlb	0	; () banked
  3340  001B7E  6FCF               	movwf	?_in_high_int& (0+255),b
  3341  001B80  0100               	movlb	0	; () banked
  3342  001B82  6BD0               	clrf	(?_in_high_int+1)& (0+255),b
  3343  001B84  0012               	return	
  3344  001B86                     __end_of_in_high_int:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           indf1	equ	0xFE7
  3356                           fsr1h	equ	0xFE2
  3357                           fsr1l	equ	0xFE1
  3358                           indf2	equ	0xFDF
  3359                           postinc2	equ	0xFDE
  3360                           postdec2	equ	0xFDD
  3361                           fsr2h	equ	0xFDA
  3362                           fsr2l	equ	0xFD9
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _check_msg *****************
  3366 ;; Defined at:
  3367 ;;		line 222 in file "../src/messages.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  qptr            2   25[BANK0 ] PTR struct __msg_queue
  3370 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      unsigned char 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3382 ;;      Params:         0       2       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          0       1       0       0       0
  3385 ;;      Totals:         0       3       0       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:   11
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_block_on_To_msgqueues
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text20
  3397  00194E                     __ptext20:
  3398                           	opt stack 0
  3399  00194E                     _check_msg:
  3400                           	opt stack 18
  3401                           
  3402                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;incstack = 0
  3406  00194E  0100               	movlb	0	; () banked
  3407  001950  EE20 F035          	lfsr	2,53
  3408  001954  0100               	movlb	0	; () banked
  3409  001956  51CF               	movf	check_msg@qptr& (0+255),w,b
  3410  001958  26D9               	addwf	fsr2l,f,c
  3411  00195A  0100               	movlb	0	; () banked
  3412  00195C  51D0               	movf	(check_msg@qptr+1)& (0+255),w,b
  3413  00195E  22DA               	addwfc	fsr2h,f,c
  3414  001960  50DF               	movf	indf2,w,c
  3415  001962  0100               	movlb	0	; () banked
  3416  001964  6FD1               	movwf	??_check_msg& (0+255),b
  3417  001966  0100               	movlb	0	; () banked
  3418  001968  51D1               	movf	??_check_msg& (0+255),w,b
  3419  00196A  0D0D               	mullw	13
  3420  00196C  50F3               	movf	prodl,w,c
  3421  00196E  0100               	movlb	0	; () banked
  3422  001970  0100               	movlb	0	; () banked
  3423  001972  25CF               	addwf	check_msg@qptr& (0+255),w,b
  3424  001974  6ED9               	movwf	fsr2l,c
  3425  001976  50F4               	movf	prodh,w,c
  3426  001978  0100               	movlb	0	; () banked
  3427  00197A  0100               	movlb	0	; () banked
  3428  00197C  21D0               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3429  00197E  6EDA               	movwf	fsr2h,c
  3430  001980  50DF               	movf	indf2,w,c
  3431  001982  0012               	return	
  3432  001984                     __end_of_check_msg:
  3433                           	opt stack 0
  3434                           tblptru	equ	0xFF8
  3435                           tblptrh	equ	0xFF7
  3436                           tblptrl	equ	0xFF6
  3437                           tablat	equ	0xFF5
  3438                           prodh	equ	0xFF4
  3439                           prodl	equ	0xFF3
  3440                           intcon	equ	0xFF2
  3441                           postinc0	equ	0xFEE
  3442                           wreg	equ	0xFE8
  3443                           indf1	equ	0xFE7
  3444                           fsr1h	equ	0xFE2
  3445                           fsr1l	equ	0xFE1
  3446                           indf2	equ	0xFDF
  3447                           postinc2	equ	0xFDE
  3448                           postdec2	equ	0xFDD
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           
  3453 ;; *************** function _Delay1KTCYx *****************
  3454 ;; Defined at:
  3455 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  unit            1    wreg     unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  unit            1   25[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;		None               void
  3462 ;; Registers used:
  3463 ;;		wreg
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3469 ;;      Params:         0       0       0       0       0
  3470 ;;      Locals:         0       1       0       0       0
  3471 ;;      Temps:          0       0       0       0       0
  3472 ;;      Totals:         0       1       0       0       0
  3473 ;;Total ram usage:        1 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:   11
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_block_on_To_msgqueues
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text21
  3484  001B26                     __ptext21:
  3485                           	opt stack 0
  3486  001B26                     _Delay1KTCYx:
  3487                           	opt stack 18
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;incstack = 0
  3491                           ;Delay1KTCYx@unit stored from wreg
  3492  001B26  CFE8 F0CF          	movff	wreg,Delay1KTCYx@unit
  3493  001B2A                     l786:
  3494  001B2A  0EFA               	movlw	250
  3495  001B2C                     u2857:
  3496  001B2C  F000               	nop	
  3497  001B2E  2EE8               	decfsz	wreg,f,c
  3498  001B30  D7FD               	goto	u2857
  3499  001B32  0100               	movlb	0	; () banked
  3500  001B34  0100               	movlb	0	; () banked
  3501  001B36  2FCF               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3502  001B38  D7F8               	goto	l786
  3503  001B3A  0012               	return	
  3504  001B3C                     __end_of_Delay1KTCYx:
  3505                           	opt stack 0
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           prodh	equ	0xFF4
  3511                           prodl	equ	0xFF3
  3512                           intcon	equ	0xFF2
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           indf1	equ	0xFE7
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           postinc2	equ	0xFDE
  3520                           postdec2	equ	0xFDD
  3521                           fsr2h	equ	0xFDA
  3522                           fsr2l	equ	0xFD9
  3523                           status	equ	0xFD8
  3524                           
  3525 ;; *************** function _ToMainLow_recvmsg *****************
  3526 ;; Defined at:
  3527 ;;		line 112 in file "../src/messages.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  maxlength       1    wreg     unsigned char 
  3530 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  3531 ;;		 -> main@msgtype(1), 
  3532 ;;  data            2    2[BANK1 ] PTR void 
  3533 ;;		 -> main@msgbuffer(11), 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  maxlength       1    4[BANK1 ] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      char 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3545 ;;      Params:         0       0       4       0       0
  3546 ;;      Locals:         0       0       1       0       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         0       0       5       0       0
  3549 ;;Total ram usage:        5 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:   13
  3552 ;; This function calls:
  3553 ;;		_recv_msg
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text22
  3560  001762                     __ptext22:
  3561                           	opt stack 0
  3562  001762                     _ToMainLow_recvmsg:
  3563                           	opt stack 17
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;incstack = 0
  3567                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3568  001762  CFE8 F1A6          	movff	wreg,ToMainLow_recvmsg@maxlength
  3569                           
  3570                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3571  001766  0100               	movlb	0	; () banked
  3572  001768  0E00               	movlw	high _ToMainLow_MQ
  3573  00176A  0100               	movlb	0	; () banked
  3574  00176C  0100               	movlb	0	; () banked
  3575  00176E  6FDA               	movwf	(recv_msg@qptr+1)& (0+255),b
  3576  001770  0100               	movlb	0	; () banked
  3577  001772  0E80               	movlw	low _ToMainLow_MQ
  3578  001774  0100               	movlb	0	; () banked
  3579  001776  0100               	movlb	0	; () banked
  3580  001778  6FD9               	movwf	recv_msg@qptr& (0+255),b
  3581  00177A  C1A6  F0DB         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3582  00177E  0101               	movlb	1	; () banked
  3583  001780  0100               	movlb	0	; () banked
  3584  001782  C1A3  F0DD         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3585  001786  0101               	movlb	1	; () banked
  3586  001788  0100               	movlb	0	; () banked
  3587  00178A  C1A2  F0DC         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3588  00178E  0101               	movlb	1	; () banked
  3589  001790  0100               	movlb	0	; () banked
  3590  001792  C1A5  F0DF         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3591  001796  0101               	movlb	1	; () banked
  3592  001798  0100               	movlb	0	; () banked
  3593  00179A  C1A4  F0DE         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3594  00179E  EC36  F006         	call	_recv_msg	;wreg free
  3595  0017A2  0012               	return	
  3596  0017A4                     __end_of_ToMainLow_recvmsg:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           prodh	equ	0xFF4
  3603                           prodl	equ	0xFF3
  3604                           intcon	equ	0xFF2
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           indf1	equ	0xFE7
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _ToMainHigh_recvmsg *****************
  3618 ;; Defined at:
  3619 ;;		line 135 in file "../src/messages.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  maxlength       1    wreg     unsigned char 
  3622 ;;  msgtype         2    0[BANK1 ] PTR unsigned char 
  3623 ;;		 -> main@msgtype(1), 
  3624 ;;  data            2    2[BANK1 ] PTR void 
  3625 ;;		 -> main@msgbuffer(11), 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  maxlength       1    4[BANK1 ] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      char 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3637 ;;      Params:         0       0       4       0       0
  3638 ;;      Locals:         0       0       1       0       0
  3639 ;;      Temps:          0       0       0       0       0
  3640 ;;      Totals:         0       0       5       0       0
  3641 ;;Total ram usage:        5 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:   13
  3644 ;; This function calls:
  3645 ;;		_recv_msg
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text23
  3652  0017A4                     __ptext23:
  3653                           	opt stack 0
  3654  0017A4                     _ToMainHigh_recvmsg:
  3655                           	opt stack 17
  3656                           
  3657                           ;incstack = 0
  3658                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3659  0017A4  CFE8 F1A6          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3660                           
  3661                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3662  0017A8  0101               	movlb	1	; () banked
  3663  0017AA  0E01               	movlw	high _ToMainHigh_MQ
  3664  0017AC  0100               	movlb	0	; () banked
  3665  0017AE  0100               	movlb	0	; () banked
  3666  0017B0  6FDA               	movwf	(recv_msg@qptr+1)& (0+255),b
  3667  0017B2  0101               	movlb	1	; () banked
  3668  0017B4  0E6C               	movlw	low _ToMainHigh_MQ
  3669  0017B6  0100               	movlb	0	; () banked
  3670  0017B8  0100               	movlb	0	; () banked
  3671  0017BA  6FD9               	movwf	recv_msg@qptr& (0+255),b
  3672  0017BC  C1A6  F0DB         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3673  0017C0  0101               	movlb	1	; () banked
  3674  0017C2  0100               	movlb	0	; () banked
  3675  0017C4  C1A3  F0DD         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3676  0017C8  0101               	movlb	1	; () banked
  3677  0017CA  0100               	movlb	0	; () banked
  3678  0017CC  C1A2  F0DC         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3679  0017D0  0101               	movlb	1	; () banked
  3680  0017D2  0100               	movlb	0	; () banked
  3681  0017D4  C1A5  F0DF         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3682  0017D8  0101               	movlb	1	; () banked
  3683  0017DA  0100               	movlb	0	; () banked
  3684  0017DC  C1A4  F0DE         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3685  0017E0  EC36  F006         	call	_recv_msg	;wreg free
  3686  0017E4  0012               	return	
  3687  0017E6                     __end_of_ToMainHigh_recvmsg:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           prodh	equ	0xFF4
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           indf1	equ	0xFE7
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _recv_msg *****************
  3709 ;; Defined at:
  3710 ;;		line 63 in file "../src/messages.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  qptr            2   35[BANK0 ] PTR struct __msg_queue
  3713 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3714 ;;  maxlength       1   37[BANK0 ] unsigned char 
  3715 ;;  msgtype         2   38[BANK0 ] PTR unsigned char 
  3716 ;;		 -> main@msgtype(1), 
  3717 ;;  data            2   40[BANK0 ] PTR void 
  3718 ;;		 -> main@msgbuffer(11), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  qmsg            2   47[BANK0 ] PTR struct __msg
  3721 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3722 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3723 ;;  tlength         2   45[BANK0 ] unsigned int 
  3724 ;;  slot            1   44[BANK0 ] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      char 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3734 ;;      Params:         0       7       0       0       0
  3735 ;;      Locals:         0       5       0       0       0
  3736 ;;      Temps:          0       2       0       0       0
  3737 ;;      Totals:         0      14       0       0       0
  3738 ;;Total ram usage:       14 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:   12
  3741 ;; This function calls:
  3742 ;;		_memcpy
  3743 ;; This function is called by:
  3744 ;;		_ToMainLow_recvmsg
  3745 ;;		_ToMainHigh_recvmsg
  3746 ;;		_FromMainLow_recvmsg
  3747 ;;		_FromMainHigh_recvmsg
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text24
  3752  000C6C                     __ptext24:
  3753                           	opt stack 0
  3754  000C6C                     _recv_msg:
  3755                           	opt stack 17
  3756                           
  3757                           ;messages.c: 64: unsigned char slot;
  3758                           ;messages.c: 68: msg *qmsg;
  3759                           ;messages.c: 69: size_t tlength;
  3760                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3761                           
  3762                           ;incstack = 0
  3763  000C6C  0100               	movlb	0	; () banked
  3764  000C6E  EE20 F035          	lfsr	2,53
  3765  000C72  0100               	movlb	0	; () banked
  3766  000C74  51D9               	movf	recv_msg@qptr& (0+255),w,b
  3767  000C76  26D9               	addwf	fsr2l,f,c
  3768  000C78  0100               	movlb	0	; () banked
  3769  000C7A  51DA               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3770  000C7C  22DA               	addwfc	fsr2h,f,c
  3771  000C7E  50DF               	movf	indf2,w,c
  3772  000C80  0100               	movlb	0	; () banked
  3773  000C82  0100               	movlb	0	; () banked
  3774  000C84  6FE2               	movwf	recv_msg@slot& (0+255),b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3778  000C86  0100               	movlb	0	; () banked
  3779  000C88  0100               	movlb	0	; () banked
  3780  000C8A  51E2               	movf	recv_msg@slot& (0+255),w,b
  3781  000C8C  0D0D               	mullw	13
  3782  000C8E  50F3               	movf	prodl,w,c
  3783  000C90  0100               	movlb	0	; () banked
  3784  000C92  0100               	movlb	0	; () banked
  3785  000C94  25D9               	addwf	recv_msg@qptr& (0+255),w,b
  3786  000C96  0100               	movlb	0	; () banked
  3787  000C98  0100               	movlb	0	; () banked
  3788  000C9A  6FE5               	movwf	recv_msg@qmsg& (0+255),b
  3789  000C9C  50F4               	movf	prodh,w,c
  3790  000C9E  0100               	movlb	0	; () banked
  3791  000CA0  0100               	movlb	0	; () banked
  3792  000CA2  21DA               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3793  000CA4  0100               	movlb	0	; () banked
  3794  000CA6  6FE6               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;messages.c: 74: if (qmsg->full == 1) {
  3798  000CA8  0E01               	movlw	1
  3799  000CAA  C0E5  FFD9         	movff	recv_msg@qmsg,fsr2l
  3800  000CAE  C0E6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3801  000CB2  62DF               	cpfseq	indf2,c
  3802  000CB4  D074               	goto	l3442
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3806  000CB6  0100               	movlb	0	; () banked
  3807  000CB8  EE20 F001          	lfsr	2,1
  3808  000CBC  0100               	movlb	0	; () banked
  3809  000CBE  51E5               	movf	recv_msg@qmsg& (0+255),w,b
  3810  000CC0  26D9               	addwf	fsr2l,f,c
  3811  000CC2  0100               	movlb	0	; () banked
  3812  000CC4  51E6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3813  000CC6  22DA               	addwfc	fsr2h,f,c
  3814  000CC8  50DF               	movf	indf2,w,c
  3815  000CCA  0100               	movlb	0	; () banked
  3816  000CCC  0100               	movlb	0	; () banked
  3817  000CCE  5DDB               	subwf	recv_msg@maxlength& (0+255),w,b
  3818  000CD0  B0D8               	btfsc	status,0,c
  3819  000CD2  D002               	goto	l3426
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;messages.c: 77: return (-3);
  3823  000CD4  0EFD               	movlw	253
  3824  000CD6  0012               	return	
  3825  000CD8                     l3426:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;messages.c: 78: }
  3829                           ;messages.c: 80: tlength = qmsg->length;
  3830  000CD8  0100               	movlb	0	; () banked
  3831  000CDA  EE20 F001          	lfsr	2,1
  3832  000CDE  0100               	movlb	0	; () banked
  3833  000CE0  51E5               	movf	recv_msg@qmsg& (0+255),w,b
  3834  000CE2  26D9               	addwf	fsr2l,f,c
  3835  000CE4  0100               	movlb	0	; () banked
  3836  000CE6  51E6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3837  000CE8  22DA               	addwfc	fsr2h,f,c
  3838  000CEA  50DF               	movf	indf2,w,c
  3839  000CEC  0100               	movlb	0	; () banked
  3840  000CEE  6FE0               	movwf	??_recv_msg& (0+255),b
  3841  000CF0  0100               	movlb	0	; () banked
  3842  000CF2  51E0               	movf	??_recv_msg& (0+255),w,b
  3843  000CF4  0100               	movlb	0	; () banked
  3844  000CF6  0100               	movlb	0	; () banked
  3845  000CF8  6FE3               	movwf	recv_msg@tlength& (0+255),b
  3846  000CFA  0100               	movlb	0	; () banked
  3847  000CFC  6BE4               	clrf	(recv_msg@tlength+1)& (0+255),b
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3851  000CFE  0100               	movlb	0	; () banked
  3852  000D00  0100               	movlb	0	; () banked
  3853  000D02  C0DF  F0D0         	movff	recv_msg@data+1,memcpy@d1+1
  3854  000D06  0100               	movlb	0	; () banked
  3855  000D08  0100               	movlb	0	; () banked
  3856  000D0A  C0DE  F0CF         	movff	recv_msg@data,memcpy@d1
  3857  000D0E  0E03               	movlw	3
  3858  000D10  0100               	movlb	0	; () banked
  3859  000D12  0100               	movlb	0	; () banked
  3860  000D14  25E5               	addwf	recv_msg@qmsg& (0+255),w,b
  3861  000D16  0100               	movlb	0	; () banked
  3862  000D18  6FE0               	movwf	??_recv_msg& (0+255),b
  3863  000D1A  0E00               	movlw	0
  3864  000D1C  0100               	movlb	0	; () banked
  3865  000D1E  0100               	movlb	0	; () banked
  3866  000D20  21E6               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3867  000D22  0100               	movlb	0	; () banked
  3868  000D24  6FE1               	movwf	(??_recv_msg+1)& (0+255),b
  3869  000D26  C0E0  F0D1         	movff	??_recv_msg,memcpy@s1
  3870  000D2A  C0E1  F0D2         	movff	??_recv_msg+1,memcpy@s1+1
  3871  000D2E  C0E3  F0D3         	movff	recv_msg@tlength,memcpy@n
  3872  000D32  C0E4  F0D4         	movff	recv_msg@tlength+1,memcpy@n+1
  3873  000D36  ECD1  F00A         	call	_memcpy	;wreg free
  3874                           
  3875                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3876  000D3A  0100               	movlb	0	; () banked
  3877  000D3C  EE20 F035          	lfsr	2,53
  3878  000D40  0100               	movlb	0	; () banked
  3879  000D42  51D9               	movf	recv_msg@qptr& (0+255),w,b
  3880  000D44  26D9               	addwf	fsr2l,f,c
  3881  000D46  0100               	movlb	0	; () banked
  3882  000D48  51DA               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3883  000D4A  22DA               	addwfc	fsr2h,f,c
  3884  000D4C  0100               	movlb	0	; () banked
  3885  000D4E  EE10 F035          	lfsr	1,53
  3886  000D52  0100               	movlb	0	; () banked
  3887  000D54  51D9               	movf	recv_msg@qptr& (0+255),w,b
  3888  000D56  26E1               	addwf	fsr1l,f,c
  3889  000D58  0100               	movlb	0	; () banked
  3890  000D5A  51DA               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3891  000D5C  22E2               	addwfc	fsr1h,f,c
  3892  000D5E  50E7               	movf	indf1,w,c
  3893  000D60  0100               	movlb	0	; () banked
  3894  000D62  6FE0               	movwf	??_recv_msg& (0+255),b
  3895  000D64  0100               	movlb	0	; () banked
  3896  000D66  29E0               	incf	??_recv_msg& (0+255),w,b
  3897  000D68  0B03               	andlw	3
  3898  000D6A  6EDF               	movwf	indf2,c
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3902  000D6C  0100               	movlb	0	; () banked
  3903  000D6E  EE20 F002          	lfsr	2,2
  3904  000D72  0100               	movlb	0	; () banked
  3905  000D74  51E5               	movf	recv_msg@qmsg& (0+255),w,b
  3906  000D76  26D9               	addwf	fsr2l,f,c
  3907  000D78  0100               	movlb	0	; () banked
  3908  000D7A  51E6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3909  000D7C  22DA               	addwfc	fsr2h,f,c
  3910  000D7E  C0DC  FFE1         	movff	recv_msg@msgtype,fsr1l
  3911  000D82  C0DD  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3912  000D86  CFDF FFE7          	movff	indf2,indf1
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;messages.c: 91: qmsg->full = 0;
  3916  000D8A  C0E5  FFD9         	movff	recv_msg@qmsg,fsr2l
  3917  000D8E  C0E6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3918  000D92  0E00               	movlw	0
  3919  000D94  6EDF               	movwf	indf2,c
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;messages.c: 92: return (tlength);
  3923  000D96  0100               	movlb	0	; () banked
  3924  000D98  0100               	movlb	0	; () banked
  3925  000D9A  51E3               	movf	recv_msg@tlength& (0+255),w,b
  3926  000D9C  0012               	return	
  3927  000D9E                     l3442:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;messages.c: 94: return (-4);
  3931  000D9E  0EFC               	movlw	252
  3932  000DA0  0012               	return	
  3933  000DA2                     __end_of_recv_msg:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           intcon	equ	0xFF2
  3942                           postinc0	equ	0xFEE
  3943                           wreg	equ	0xFE8
  3944                           indf1	equ	0xFE7
  3945                           fsr1h	equ	0xFE2
  3946                           fsr1l	equ	0xFE1
  3947                           indf2	equ	0xFDF
  3948                           postinc2	equ	0xFDE
  3949                           postdec2	equ	0xFDD
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function _memcpy *****************
  3955 ;; Defined at:
  3956 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  d1              2   25[BANK0 ] PTR void 
  3959 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3960 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3961 ;;		 -> main@msgbuffer(11), 
  3962 ;;  s1              2   27[BANK0 ] PTR const void 
  3963 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3964 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3965 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3966 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  3967 ;;		 -> main@uc(5), 
  3968 ;;  n               2   29[BANK0 ] unsigned int 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  s               2   33[BANK0 ] PTR const unsigned char 
  3971 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3972 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3973 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3974 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  3975 ;;		 -> main@uc(5), 
  3976 ;;  d               2   31[BANK0 ] PTR unsigned char 
  3977 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3978 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3979 ;;		 -> main@msgbuffer(11), 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2   25[BANK0 ] PTR void 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3989 ;;      Params:         0       6       0       0       0
  3990 ;;      Locals:         0       4       0       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0      10       0       0       0
  3993 ;;Total ram usage:       10 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:   11
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_send_msg
  4000 ;;		_recv_msg
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text25
  4005  0015A2                     __ptext25:
  4006                           	opt stack 0
  4007  0015A2                     _memcpy:
  4008                           	opt stack 16
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;incstack = 0
  4012  0015A2  0100               	movlb	0	; () banked
  4013  0015A4  0100               	movlb	0	; () banked
  4014  0015A6  C0D2  F0D8         	movff	memcpy@s1+1,memcpy@s+1
  4015  0015AA  0100               	movlb	0	; () banked
  4016  0015AC  0100               	movlb	0	; () banked
  4017  0015AE  C0D1  F0D7         	movff	memcpy@s1,memcpy@s
  4018  0015B2  0100               	movlb	0	; () banked
  4019  0015B4  0100               	movlb	0	; () banked
  4020  0015B6  C0D0  F0D6         	movff	memcpy@d1+1,memcpy@d+1
  4021  0015BA  0100               	movlb	0	; () banked
  4022  0015BC  0100               	movlb	0	; () banked
  4023  0015BE  C0CF  F0D5         	movff	memcpy@d1,memcpy@d
  4024  0015C2  D012               	goto	l3412
  4025  0015C4                     l3406:
  4026                           
  4027                           ; BSR set to: 0
  4028  0015C4  C0D7  FFD9         	movff	memcpy@s,fsr2l
  4029  0015C8  C0D8  FFDA         	movff	memcpy@s+1,fsr2h
  4030  0015CC  C0D5  FFE1         	movff	memcpy@d,fsr1l
  4031  0015D0  C0D6  FFE2         	movff	memcpy@d+1,fsr1h
  4032  0015D4  CFDF FFE7          	movff	indf2,indf1
  4033                           
  4034                           ; BSR set to: 0
  4035  0015D8  0100               	movlb	0	; () banked
  4036  0015DA  0100               	movlb	0	; () banked
  4037  0015DC  4BD7               	infsnz	memcpy@s& (0+255),f,b
  4038  0015DE  2BD8               	incf	(memcpy@s+1)& (0+255),f,b
  4039                           
  4040                           ; BSR set to: 0
  4041  0015E0  0100               	movlb	0	; () banked
  4042  0015E2  0100               	movlb	0	; () banked
  4043  0015E4  4BD5               	infsnz	memcpy@d& (0+255),f,b
  4044  0015E6  2BD6               	incf	(memcpy@d+1)& (0+255),f,b
  4045  0015E8                     l3412:
  4046                           
  4047                           ; BSR set to: 0
  4048  0015E8  0100               	movlb	0	; () banked
  4049  0015EA  0100               	movlb	0	; () banked
  4050  0015EC  07D3               	decf	memcpy@n& (0+255),f,b
  4051  0015EE  A0D8               	btfss	status,0,c
  4052  0015F0  07D4               	decf	(memcpy@n+1)& (0+255),f,b
  4053  0015F2  0100               	movlb	0	; () banked
  4054  0015F4  29D3               	incf	memcpy@n& (0+255),w,b
  4055  0015F6  B4D8               	btfsc	status,2,c
  4056  0015F8  29D4               	incf	(memcpy@n+1)& (0+255),w,b
  4057  0015FA  B4D8               	btfsc	status,2,c
  4058                           
  4059                           ; BSR set to: 0
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;	Return value of _memcpy is never used
  4063  0015FC  0012               	return	
  4064  0015FE  D7E2               	goto	l3406
  4065  001600                     __end_of_memcpy:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           postinc0	equ	0xFEE
  4075                           wreg	equ	0xFE8
  4076                           indf1	equ	0xFE7
  4077                           fsr1h	equ	0xFE2
  4078                           fsr1l	equ	0xFE1
  4079                           indf2	equ	0xFDF
  4080                           postinc2	equ	0xFDE
  4081                           postdec2	equ	0xFDD
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           
  4086 ;; *************** function _OpenUSART *****************
  4087 ;; Defined at:
  4088 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  config          1    wreg     unsigned char 
  4091 ;;  spbrg           2   25[BANK0 ] unsigned int 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  config          1   30[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;		None               void
  4096 ;; Registers used:
  4097 ;;		wreg, status,2
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4103 ;;      Params:         0       2       0       0       0
  4104 ;;      Locals:         0       1       0       0       0
  4105 ;;      Temps:          0       3       0       0       0
  4106 ;;      Totals:         0       6       0       0       0
  4107 ;;Total ram usage:        6 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:   11
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text26
  4118  0011C8                     __ptext26:
  4119                           	opt stack 0
  4120  0011C8                     _OpenUSART:
  4121                           	opt stack 19
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;incstack = 0
  4125                           ;OpenUSART@config stored from wreg
  4126  0011C8  CFE8 F0D4          	movff	wreg,OpenUSART@config
  4127  0011CC  0E00               	movlw	0
  4128  0011CE  6EAC               	movwf	4012,c	;volatile
  4129  0011D0  0E00               	movlw	0
  4130  0011D2  6EAB               	movwf	4011,c	;volatile
  4131  0011D4  0100               	movlb	0	; () banked
  4132  0011D6  0100               	movlb	0	; () banked
  4133  0011D8  B1D4               	btfsc	OpenUSART@config& (0+255),0,b
  4134                           
  4135                           ; BSR set to: 0
  4136  0011DA  88AC               	bsf	4012,4,c	;volatile
  4137                           
  4138                           ; BSR set to: 0
  4139                           
  4140                           ; BSR set to: 0
  4141  0011DC  0100               	movlb	0	; () banked
  4142  0011DE  0100               	movlb	0	; () banked
  4143  0011E0  A3D4               	btfss	OpenUSART@config& (0+255),1,b
  4144  0011E2  D002               	goto	l2538
  4145                           
  4146                           ; BSR set to: 0
  4147  0011E4  8CAC               	bsf	4012,6,c	;volatile
  4148  0011E6  8CAB               	bsf	4011,6,c	;volatile
  4149  0011E8                     l2538:
  4150                           
  4151                           ; BSR set to: 0
  4152  0011E8  0100               	movlb	0	; () banked
  4153  0011EA  0100               	movlb	0	; () banked
  4154  0011EC  B5D4               	btfsc	OpenUSART@config& (0+255),2,b
  4155                           
  4156                           ; BSR set to: 0
  4157  0011EE  8EAC               	bsf	4012,7,c	;volatile
  4158                           
  4159                           ; BSR set to: 0
  4160                           
  4161                           ; BSR set to: 0
  4162  0011F0  0100               	movlb	0	; () banked
  4163  0011F2  0100               	movlb	0	; () banked
  4164  0011F4  A7D4               	btfss	OpenUSART@config& (0+255),3,b
  4165  0011F6  D002               	goto	l542
  4166                           
  4167                           ; BSR set to: 0
  4168  0011F8  88AB               	bsf	4011,4,c	;volatile
  4169  0011FA  D001               	goto	l2546
  4170  0011FC                     l542:
  4171                           
  4172                           ; BSR set to: 0
  4173  0011FC  8AAB               	bsf	4011,5,c	;volatile
  4174  0011FE                     l2546:
  4175                           
  4176                           ; BSR set to: 0
  4177  0011FE  0100               	movlb	0	; () banked
  4178  001200  0100               	movlb	0	; () banked
  4179  001202  B9D4               	btfsc	OpenUSART@config& (0+255),4,b
  4180                           
  4181                           ; BSR set to: 0
  4182  001204  84AC               	bsf	4012,2,c	;volatile
  4183                           
  4184                           ; BSR set to: 0
  4185  001206  989E               	bcf	3998,4,c	;volatile
  4186                           
  4187                           ; BSR set to: 0
  4188  001208  0100               	movlb	0	; () banked
  4189  00120A  0100               	movlb	0	; () banked
  4190  00120C  BBD4               	btfsc	OpenUSART@config& (0+255),5,b
  4191                           
  4192                           ; BSR set to: 0
  4193  00120E  86AB               	bsf	4011,3,c	;volatile
  4194                           
  4195                           ; BSR set to: 0
  4196                           
  4197                           ; BSR set to: 0
  4198  001210  0100               	movlb	0	; () banked
  4199  001212  0100               	movlb	0	; () banked
  4200  001214  ADD4               	btfss	OpenUSART@config& (0+255),6,b
  4201  001216  D002               	goto	l546
  4202                           
  4203                           ; BSR set to: 0
  4204  001218  8A9D               	bsf	3997,5,c	;volatile
  4205  00121A  D001               	goto	l547
  4206  00121C                     l546:
  4207                           
  4208                           ; BSR set to: 0
  4209  00121C  9A9D               	bcf	3997,5,c	;volatile
  4210  00121E                     l547:
  4211                           
  4212                           ; BSR set to: 0
  4213  00121E  9A9E               	bcf	3998,5,c	;volatile
  4214                           
  4215                           ; BSR set to: 0
  4216  001220  0100               	movlb	0	; () banked
  4217  001222  0100               	movlb	0	; () banked
  4218  001224  AFD4               	btfss	OpenUSART@config& (0+255),7,b
  4219  001226  D002               	goto	l548
  4220                           
  4221                           ; BSR set to: 0
  4222  001228  889D               	bsf	3997,4,c	;volatile
  4223  00122A  D001               	goto	l549
  4224  00122C                     l548:
  4225                           
  4226                           ; BSR set to: 0
  4227  00122C  989D               	bcf	3997,4,c	;volatile
  4228  00122E                     l549:
  4229                           
  4230                           ; BSR set to: 0
  4231  00122E  C0CF  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4232                           
  4233                           ; BSR set to: 0
  4234  001232  0100               	movlb	0	; () banked
  4235  001234  C0D0  F0D1         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4236  001238  C0D1  F0D2         	movff	??_OpenUSART,??_OpenUSART+1
  4237  00123C  0100               	movlb	0	; () banked
  4238  00123E  6BD3               	clrf	(??_OpenUSART+2)& (0+255),b
  4239  001240  0100               	movlb	0	; () banked
  4240  001242  51D2               	movf	(??_OpenUSART+1)& (0+255),w,b
  4241  001244  6EB0               	movwf	4016,c	;volatile
  4242                           
  4243                           ; BSR set to: 0
  4244  001246  8AAC               	bsf	4012,5,c	;volatile
  4245                           
  4246                           ; BSR set to: 0
  4247  001248  8EAB               	bsf	4011,7,c	;volatile
  4248                           
  4249                           ; BSR set to: 0
  4250  00124A  9C94               	bcf	3988,6,c	;volatile
  4251                           
  4252                           ; BSR set to: 0
  4253  00124C  8E94               	bsf	3988,7,c	;volatile
  4254                           
  4255                           ; BSR set to: 0
  4256  00124E  A8AC               	btfss	4012,4,c	;volatile
  4257  001250  0012               	return	
  4258                           
  4259                           ; BSR set to: 0
  4260  001252  BEAC               	btfsc	4012,7,c	;volatile
  4261  001254  0012               	return	
  4262                           
  4263                           ; BSR set to: 0
  4264  001256  8C94               	bsf	3988,6,c	;volatile
  4265  001258  0012               	return	
  4266  00125A                     __end_of_OpenUSART:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodh	equ	0xFF4
  4273                           prodl	equ	0xFF3
  4274                           intcon	equ	0xFF2
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           indf1	equ	0xFE7
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           postinc2	equ	0xFDE
  4282                           postdec2	equ	0xFDD
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function _OpenTimer1 *****************
  4288 ;; Defined at:
  4289 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  config          1    wreg     unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  config          1   25[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;		None               void
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4303 ;;      Params:         0       0       0       0       0
  4304 ;;      Locals:         0       1       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       1       0       0       0
  4307 ;;Total ram usage:        1 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:   11
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text27
  4318  0018E0                     __ptext27:
  4319                           	opt stack 0
  4320  0018E0                     _OpenTimer1:
  4321                           	opt stack 19
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;incstack = 0
  4325                           ;OpenTimer1@config stored from wreg
  4326  0018E0  CFE8 F0CF          	movff	wreg,OpenTimer1@config
  4327  0018E4  0100               	movlb	0	; () banked
  4328  0018E6  0100               	movlb	0	; () banked
  4329  0018E8  51CF               	movf	OpenTimer1@config& (0+255),w,b
  4330  0018EA  0B7E               	andlw	126
  4331  0018EC  6ECD               	movwf	4045,c	;volatile
  4332                           
  4333                           ; BSR set to: 0
  4334  0018EE  0100               	movlb	0	; () banked
  4335  0018F0  0100               	movlb	0	; () banked
  4336  0018F2  ADCF               	btfss	OpenTimer1@config& (0+255),6,b
  4337  0018F4  D002               	goto	l498
  4338                           
  4339                           ; BSR set to: 0
  4340  0018F6  8ECD               	bsf	4045,7,c	;volatile
  4341  0018F8  D001               	goto	l2498
  4342  0018FA                     l498:
  4343                           
  4344                           ; BSR set to: 0
  4345  0018FA  9ECD               	bcf	4045,7,c	;volatile
  4346  0018FC                     l2498:
  4347                           
  4348                           ; BSR set to: 0
  4349  0018FC  0E00               	movlw	0
  4350  0018FE  6ECF               	movwf	4047,c	;volatile
  4351  001900  0E00               	movlw	0
  4352  001902  6ECE               	movwf	4046,c	;volatile
  4353                           
  4354                           ; BSR set to: 0
  4355  001904  909E               	bcf	3998,0,c	;volatile
  4356                           
  4357                           ; BSR set to: 0
  4358  001906  0100               	movlb	0	; () banked
  4359  001908  0100               	movlb	0	; () banked
  4360  00190A  AFCF               	btfss	OpenTimer1@config& (0+255),7,b
  4361  00190C  D002               	goto	l500
  4362                           
  4363                           ; BSR set to: 0
  4364  00190E  809D               	bsf	3997,0,c	;volatile
  4365  001910  D001               	goto	l501
  4366  001912                     l500:
  4367                           
  4368                           ; BSR set to: 0
  4369  001912  909D               	bcf	3997,0,c	;volatile
  4370  001914                     l501:
  4371                           
  4372                           ; BSR set to: 0
  4373  001914  80CD               	bsf	4045,0,c	;volatile
  4374                           
  4375                           ; BSR set to: 0
  4376  001916  0012               	return	
  4377  001918                     __end_of_OpenTimer1:
  4378                           	opt stack 0
  4379                           tblptru	equ	0xFF8
  4380                           tblptrh	equ	0xFF7
  4381                           tblptrl	equ	0xFF6
  4382                           tablat	equ	0xFF5
  4383                           prodh	equ	0xFF4
  4384                           prodl	equ	0xFF3
  4385                           intcon	equ	0xFF2
  4386                           postinc0	equ	0xFEE
  4387                           wreg	equ	0xFE8
  4388                           indf1	equ	0xFE7
  4389                           fsr1h	equ	0xFE2
  4390                           fsr1l	equ	0xFE1
  4391                           indf2	equ	0xFDF
  4392                           postinc2	equ	0xFDE
  4393                           postdec2	equ	0xFDD
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8
  4397                           
  4398 ;; *************** function _OpenTimer0 *****************
  4399 ;; Defined at:
  4400 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  config          1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  config          1   25[BANK0 ] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;		None               void
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4414 ;;      Params:         0       0       0       0       0
  4415 ;;      Locals:         0       1       0       0       0
  4416 ;;      Temps:          0       0       0       0       0
  4417 ;;      Totals:         0       1       0       0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:   11
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_main
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text28
  4429  001A18                     __ptext28:
  4430                           	opt stack 0
  4431  001A18                     _OpenTimer0:
  4432                           	opt stack 19
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;incstack = 0
  4436                           ;OpenTimer0@config stored from wreg
  4437  001A18  CFE8 F0CF          	movff	wreg,OpenTimer0@config
  4438  001A1C  0100               	movlb	0	; () banked
  4439  001A1E  0100               	movlb	0	; () banked
  4440  001A20  51CF               	movf	OpenTimer0@config& (0+255),w,b
  4441  001A22  0B7F               	andlw	127
  4442  001A24  6ED5               	movwf	4053,c	;volatile
  4443                           
  4444                           ; BSR set to: 0
  4445  001A26  0E00               	movlw	0
  4446  001A28  6ED7               	movwf	4055,c	;volatile
  4447                           
  4448                           ; BSR set to: 0
  4449  001A2A  0E00               	movlw	0
  4450  001A2C  6ED6               	movwf	4054,c	;volatile
  4451                           
  4452                           ; BSR set to: 0
  4453  001A2E  94F2               	bcf	intcon,2,c	;volatile
  4454                           
  4455                           ; BSR set to: 0
  4456  001A30  0100               	movlb	0	; () banked
  4457  001A32  0100               	movlb	0	; () banked
  4458  001A34  AFCF               	btfss	OpenTimer0@config& (0+255),7,b
  4459  001A36  D002               	goto	l474
  4460                           
  4461                           ; BSR set to: 0
  4462  001A38  8AF2               	bsf	intcon,5,c	;volatile
  4463  001A3A  D001               	goto	l475
  4464  001A3C                     l474:
  4465                           
  4466                           ; BSR set to: 0
  4467  001A3C  9AF2               	bcf	intcon,5,c	;volatile
  4468  001A3E                     l475:
  4469                           
  4470                           ; BSR set to: 0
  4471  001A3E  8ED5               	bsf	4053,7,c	;volatile
  4472                           
  4473                           ; BSR set to: 0
  4474  001A40  0012               	return	
  4475  001A42                     __end_of_OpenTimer0:
  4476                           	opt stack 0
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           indf1	equ	0xFE7
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           indf2	equ	0xFDF
  4490                           postinc2	equ	0xFDE
  4491                           postdec2	equ	0xFDD
  4492                           fsr2h	equ	0xFDA
  4493                           fsr2l	equ	0xFD9
  4494                           status	equ	0xFD8
  4495                           
  4496 ;; *************** function _InterruptHandlerLow *****************
  4497 ;; Defined at:
  4498 ;;		line 122 in file "../src/interrupts.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;		None               void
  4505 ;; Registers used:
  4506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4512 ;;      Params:         0       0       0       0       0
  4513 ;;      Locals:         0       0       0       0       0
  4514 ;;      Temps:         17       0       0       0       0
  4515 ;;      Totals:        17       0       0       0       0
  4516 ;;Total ram usage:       17 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:   10
  4519 ;; This function calls:
  4520 ;;		_timer1_int_handler
  4521 ;;		_uart_recv_int_handler
  4522 ;; This function is called by:
  4523 ;;		Interrupt level 1
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	intcodelo
  4528  000018                     __pintcodelo:
  4529                           	opt stack 0
  4530  000018                     _InterruptHandlerLow:
  4531                           	opt stack 16
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;incstack = 0
  4535  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  4536  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  4537  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  4538  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  4539  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  4540  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  4541  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  4542  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  4543  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  4544  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  4545  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  4546  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  4547  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  4548  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  4549  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  4550  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  4551  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  4552                           
  4553                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4554  00005C  A09E               	btfss	3998,0,c	;volatile
  4555  00005E  D003               	goto	i1l3826
  4556                           
  4557                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4558  000060  909E               	bcf	3998,0,c	;volatile
  4559                           
  4560                           ;interrupts.c: 126: timer1_int_handler();
  4561  000062  EC86  F00D         	call	_timer1_int_handler	;wreg free
  4562  000066                     i1l3826:
  4563                           
  4564                           ;interrupts.c: 127: }
  4565                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4566  000066  AA9E               	btfss	3998,5,c	;volatile
  4567  000068  D003               	goto	i1l49
  4568                           
  4569                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4570  00006A  9A9E               	bcf	3998,5,c	;volatile
  4571                           
  4572                           ;interrupts.c: 132: uart_recv_int_handler();
  4573  00006C  ECFD  F007         	call	_uart_recv_int_handler	;wreg free
  4574  000070                     i1l49:
  4575  000070  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4576  000074  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4577  000078  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4578  00007C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4579  000080  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4580  000084  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4581  000088  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4582  00008C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4583  000090  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4584  000094  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4585  000098  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4586  00009C  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4587  0000A0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4588  0000A4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4589  0000A8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4590  0000AC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4591  0000B0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  4592  0000B4  0010               	retfie	
  4593  0000B6                     __end_of_InterruptHandlerLow:
  4594                           	opt stack 0
  4595                           pclatu	equ	0xFFB
  4596                           pclath	equ	0xFFA
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           fsr0h	equ	0xFEA
  4606                           fsr0l	equ	0xFE9
  4607                           wreg	equ	0xFE8
  4608                           indf1	equ	0xFE7
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           bsr	equ	0xFE0
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           postdec2	equ	0xFDD
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _uart_recv_int_handler *****************
  4620 ;; Defined at:
  4621 ;;		line 11 in file "../src/my_uart.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;		None               void
  4628 ;; Registers used:
  4629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4635 ;;      Params:         0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0
  4637 ;;      Temps:          1       0       0       0       0
  4638 ;;      Totals:         1       0       0       0       0
  4639 ;;Total ram usage:        1 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    9
  4642 ;; This function calls:
  4643 ;;		_ReadUSART
  4644 ;;		_ToMainLow_sendmsg
  4645 ;; This function is called by:
  4646 ;;		_InterruptHandlerLow
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text30
  4651  000FFA                     __ptext30:
  4652                           	opt stack 0
  4653  000FFA                     _uart_recv_int_handler:
  4654                           	opt stack 16
  4655                           
  4656                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  4657                           
  4658                           ;incstack = 0
  4659  000FFA  AA9E               	btfss	3998,5,c	;volatile
  4660  000FFC  D03C               	goto	i1l3814
  4661                           
  4662                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4663  000FFE  EE20 F004          	lfsr	2,4
  4664  001002  5050               	movf	_uc_ptr,w,c
  4665  001004  26D9               	addwf	fsr2l,f,c
  4666  001006  5051               	movf	_uc_ptr+1,w,c
  4667  001008  22DA               	addwfc	fsr2h,f,c
  4668  00100A  50DF               	movf	indf2,w,c
  4669  00100C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4670  00100E  501B               	movf	??_uart_recv_int_handler,w,c
  4671  001010  0D01               	mullw	1
  4672  001012  50F3               	movf	prodl,w,c
  4673  001014  2450               	addwf	_uc_ptr,w,c
  4674  001016  6ED9               	movwf	fsr2l,c
  4675  001018  50F4               	movf	prodh,w,c
  4676  00101A  2051               	addwfc	_uc_ptr+1,w,c
  4677  00101C  6EDA               	movwf	fsr2h,c
  4678  00101E  EC68  F00D         	call	_ReadUSART	;wreg free
  4679  001022  6EDF               	movwf	indf2,c
  4680                           
  4681                           ;my_uart.c: 25: uc_ptr->buflen++;
  4682  001024  EE20 F004          	lfsr	2,4
  4683  001028  5050               	movf	_uc_ptr,w,c
  4684  00102A  26D9               	addwf	fsr2l,f,c
  4685  00102C  5051               	movf	_uc_ptr+1,w,c
  4686  00102E  22DA               	addwfc	fsr2h,f,c
  4687  001030  2ADF               	incf	indf2,f,c
  4688                           
  4689                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  4690  001032  EE20 F004          	lfsr	2,4
  4691  001036  5050               	movf	_uc_ptr,w,c
  4692  001038  26D9               	addwf	fsr2l,f,c
  4693  00103A  5051               	movf	_uc_ptr+1,w,c
  4694  00103C  22DA               	addwfc	fsr2h,f,c
  4695  00103E  0E04               	movlw	4
  4696  001040  62DF               	cpfseq	indf2,c
  4697  001042  D019               	goto	i1l3814
  4698                           
  4699                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4700  001044  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4701  001046  0E1F               	movlw	31
  4702  001048  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4703  00104A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4704  00104C  C051  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  4705  001050  C050  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  4706  001054  EE20 F004          	lfsr	2,4
  4707  001058  5050               	movf	_uc_ptr,w,c
  4708  00105A  26D9               	addwf	fsr2l,f,c
  4709  00105C  5051               	movf	_uc_ptr+1,w,c
  4710  00105E  22DA               	addwfc	fsr2h,f,c
  4711  001060  50DF               	movf	indf2,w,c
  4712  001062  EC21  F00D         	call	_ToMainLow_sendmsg
  4713                           
  4714                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  4715  001066  EE20 F004          	lfsr	2,4
  4716  00106A  5050               	movf	_uc_ptr,w,c
  4717  00106C  26D9               	addwf	fsr2l,f,c
  4718  00106E  5051               	movf	_uc_ptr+1,w,c
  4719  001070  22DA               	addwfc	fsr2h,f,c
  4720  001072  0E00               	movlw	0
  4721  001074  6EDF               	movwf	indf2,c
  4722  001076                     i1l3814:
  4723                           
  4724                           ;my_uart.c: 30: }
  4725                           ;my_uart.c: 31: }
  4726                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  4727  001076  A64C               	btfss	_USART_Status,3,c
  4728  001078  0012               	return	
  4729                           
  4730                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  4731  00107A  98AB               	bcf	4011,4,c	;volatile
  4732                           
  4733                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  4734  00107C  88AB               	bsf	4011,4,c	;volatile
  4735                           
  4736                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  4737  00107E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4738  001080  0E1E               	movlw	30
  4739  001082  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4740  001084  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4741  001086  0E00               	movlw	0
  4742  001088  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4743  00108A  0E00               	movlw	0
  4744  00108C  6E18               	movwf	ToMainLow_sendmsg@data,c
  4745  00108E  0E00               	movlw	0
  4746  001090  EC21  F00D         	call	_ToMainLow_sendmsg
  4747  001094  0012               	return	
  4748  001096                     __end_of_uart_recv_int_handler:
  4749                           	opt stack 0
  4750                           pclatu	equ	0xFFB
  4751                           pclath	equ	0xFFA
  4752                           tblptru	equ	0xFF8
  4753                           tblptrh	equ	0xFF7
  4754                           tblptrl	equ	0xFF6
  4755                           tablat	equ	0xFF5
  4756                           prodh	equ	0xFF4
  4757                           prodl	equ	0xFF3
  4758                           intcon	equ	0xFF2
  4759                           postinc0	equ	0xFEE
  4760                           fsr0h	equ	0xFEA
  4761                           fsr0l	equ	0xFE9
  4762                           wreg	equ	0xFE8
  4763                           indf1	equ	0xFE7
  4764                           fsr1h	equ	0xFE2
  4765                           fsr1l	equ	0xFE1
  4766                           bsr	equ	0xFE0
  4767                           indf2	equ	0xFDF
  4768                           postinc2	equ	0xFDE
  4769                           postdec2	equ	0xFDD
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774 ;; *************** function _ToMainLow_sendmsg *****************
  4775 ;; Defined at:
  4776 ;;		line 103 in file "../src/messages.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  length          1    wreg     unsigned char 
  4779 ;;  msgtype         1   22[COMRAM] unsigned char 
  4780 ;;  data            2   23[COMRAM] PTR void 
  4781 ;;		 -> NULL(0), main@uc(5), 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  length          1   25[COMRAM] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      char 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4793 ;;      Params:         3       0       0       0       0
  4794 ;;      Locals:         1       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0
  4796 ;;      Totals:         4       0       0       0       0
  4797 ;;Total ram usage:        4 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    8
  4800 ;; This function calls:
  4801 ;;		i1_send_msg
  4802 ;; This function is called by:
  4803 ;;		_uart_recv_int_handler
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text31
  4808  001A42                     __ptext31:
  4809                           	opt stack 0
  4810  001A42                     _ToMainLow_sendmsg:
  4811                           	opt stack 16
  4812                           
  4813                           ;incstack = 0
  4814                           ;ToMainLow_sendmsg@length stored from wreg
  4815  001A42  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  4816                           
  4817                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4818                           ;	Return value of _ToMainLow_sendmsg is never used
  4819  001A46  0100               	movlb	0	; () banked
  4820  001A48  0E00               	movlw	high _ToMainLow_MQ
  4821  001A4A  6E0C               	movwf	i1send_msg@qptr+1,c
  4822  001A4C  0100               	movlb	0	; () banked
  4823  001A4E  0E80               	movlw	low _ToMainLow_MQ
  4824  001A50  6E0B               	movwf	i1send_msg@qptr,c
  4825  001A52  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4826  001A56  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4827  001A5A  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  4828  001A5E  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4829  001A62  EC53  F007         	call	i1_send_msg	;wreg free
  4830  001A66  0012               	return	
  4831  001A68                     __end_of_ToMainLow_sendmsg:
  4832                           	opt stack 0
  4833                           pclatu	equ	0xFFB
  4834                           pclath	equ	0xFFA
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           prodh	equ	0xFF4
  4840                           prodl	equ	0xFF3
  4841                           intcon	equ	0xFF2
  4842                           postinc0	equ	0xFEE
  4843                           fsr0h	equ	0xFEA
  4844                           fsr0l	equ	0xFE9
  4845                           wreg	equ	0xFE8
  4846                           indf1	equ	0xFE7
  4847                           fsr1h	equ	0xFE2
  4848                           fsr1l	equ	0xFE1
  4849                           bsr	equ	0xFE0
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           postdec2	equ	0xFDD
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function i1_send_msg *****************
  4858 ;; Defined at:
  4859 ;;		line 24 in file "../src/messages.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4862 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4863 ;;  length          1   12[COMRAM] unsigned char 
  4864 ;;  msgtype         1   13[COMRAM] unsigned char 
  4865 ;;  data            2   14[COMRAM] PTR void 
  4866 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(53), 
  4867 ;;		 -> main@uc(5), 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4870 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4871 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4872 ;;  send_msg        2   17[COMRAM] unsigned int 
  4873 ;;  send_msg        1   19[COMRAM] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      char 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4883 ;;      Params:         6       0       0       0       0
  4884 ;;      Locals:         5       0       0       0       0
  4885 ;;      Temps:          1       0       0       0       0
  4886 ;;      Totals:        12       0       0       0       0
  4887 ;;Total ram usage:       12 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    7
  4890 ;; This function calls:
  4891 ;;		i1_memcpy
  4892 ;; This function is called by:
  4893 ;;		_ToMainLow_sendmsg
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text32
  4898  000EA6                     __ptext32:
  4899                           	opt stack 0
  4900  000EA6                     i1_send_msg:
  4901                           	opt stack 16
  4902                           
  4903                           ;messages.c: 25: unsigned char slot;
  4904                           ;messages.c: 27: msg *qmsg;
  4905                           ;messages.c: 28: size_t tlength = length;
  4906                           
  4907                           ;incstack = 0
  4908  000EA6  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4909  000EAA  6A13               	clrf	i1send_msg@tlength+1,c
  4910                           
  4911                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4912  000EAC  EE20 F034          	lfsr	2,52
  4913  000EB0  500B               	movf	i1send_msg@qptr,w,c
  4914  000EB2  26D9               	addwf	fsr2l,f,c
  4915  000EB4  500C               	movf	i1send_msg@qptr+1,w,c
  4916  000EB6  22DA               	addwfc	fsr2h,f,c
  4917  000EB8  50DF               	movf	indf2,w,c
  4918  000EBA  6E14               	movwf	i1send_msg@slot,c
  4919                           
  4920                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4921  000EBC  5014               	movf	i1send_msg@slot,w,c
  4922  000EBE  0D0D               	mullw	13
  4923  000EC0  50F3               	movf	prodl,w,c
  4924  000EC2  240B               	addwf	i1send_msg@qptr,w,c
  4925  000EC4  6E15               	movwf	i1send_msg@qmsg,c
  4926  000EC6  50F4               	movf	prodh,w,c
  4927  000EC8  200C               	addwfc	i1send_msg@qptr+1,w,c
  4928  000ECA  6E16               	movwf	i1send_msg@qmsg+1,c
  4929                           
  4930                           ;messages.c: 41: if (qmsg->full != 0) {
  4931  000ECC  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4932  000ED0  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4933  000ED4  50DF               	movf	indf2,w,c
  4934  000ED6  B4D8               	btfsc	status,2,c
  4935  000ED8  D002               	goto	i1l3786
  4936                           
  4937                           ;messages.c: 42: return (-1);
  4938  000EDA  0EFF               	movlw	255
  4939  000EDC  0012               	return	
  4940  000EDE                     i1l3786:
  4941                           
  4942                           ;messages.c: 43: }
  4943                           ;messages.c: 46: qmsg->length = length;
  4944  000EDE  EE20 F001          	lfsr	2,1
  4945  000EE2  5015               	movf	i1send_msg@qmsg,w,c
  4946  000EE4  26D9               	addwf	fsr2l,f,c
  4947  000EE6  5016               	movf	i1send_msg@qmsg+1,w,c
  4948  000EE8  22DA               	addwfc	fsr2h,f,c
  4949  000EEA  C00D  FFDF         	movff	i1send_msg@length,indf2
  4950                           
  4951                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4952  000EEE  EE20 F002          	lfsr	2,2
  4953  000EF2  5015               	movf	i1send_msg@qmsg,w,c
  4954  000EF4  26D9               	addwf	fsr2l,f,c
  4955  000EF6  5016               	movf	i1send_msg@qmsg+1,w,c
  4956  000EF8  22DA               	addwfc	fsr2h,f,c
  4957  000EFA  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4958                           
  4959                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4960  000EFE  0E03               	movlw	3
  4961  000F00  2415               	addwf	i1send_msg@qmsg,w,c
  4962  000F02  6E01               	movwf	i1memcpy@d1,c
  4963  000F04  0E00               	movlw	0
  4964  000F06  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4965  000F08  6E02               	movwf	i1memcpy@d1+1,c
  4966  000F0A  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  4967  000F0E  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  4968  000F12  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  4969  000F16  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  4970  000F1A  ECF3  F00B         	call	i1_memcpy	;wreg free
  4971                           
  4972                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4973  000F1E  EE20 F034          	lfsr	2,52
  4974  000F22  500B               	movf	i1send_msg@qptr,w,c
  4975  000F24  26D9               	addwf	fsr2l,f,c
  4976  000F26  500C               	movf	i1send_msg@qptr+1,w,c
  4977  000F28  22DA               	addwfc	fsr2h,f,c
  4978  000F2A  EE10 F034          	lfsr	1,52
  4979  000F2E  500B               	movf	i1send_msg@qptr,w,c
  4980  000F30  26E1               	addwf	fsr1l,f,c
  4981  000F32  500C               	movf	i1send_msg@qptr+1,w,c
  4982  000F34  22E2               	addwfc	fsr1h,f,c
  4983  000F36  50E7               	movf	indf1,w,c
  4984  000F38  6E11               	movwf	??i1_send_msg& (0+255),c
  4985  000F3A  2811               	incf	??i1_send_msg,w,c
  4986  000F3C  0B03               	andlw	3
  4987  000F3E  6EDF               	movwf	indf2,c
  4988                           
  4989                           ;messages.c: 59: qmsg->full = 1;
  4990  000F40  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4991  000F44  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4992  000F48  0E01               	movlw	1
  4993  000F4A  6EDF               	movwf	indf2,c
  4994                           
  4995                           ;messages.c: 60: return (1);
  4996  000F4C  0E01               	movlw	1
  4997  000F4E  0012               	return	
  4998  000F50                     __end_ofi1_send_msg:
  4999                           	opt stack 0
  5000                           pclatu	equ	0xFFB
  5001                           pclath	equ	0xFFA
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           postinc0	equ	0xFEE
  5010                           fsr0h	equ	0xFEA
  5011                           fsr0l	equ	0xFE9
  5012                           wreg	equ	0xFE8
  5013                           indf1	equ	0xFE7
  5014                           fsr1h	equ	0xFE2
  5015                           fsr1l	equ	0xFE1
  5016                           bsr	equ	0xFE0
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function i1_memcpy *****************
  5025 ;; Defined at:
  5026 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  d1              2    0[COMRAM] PTR void 
  5029 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5030 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5031 ;;		 -> main@msgbuffer(11), 
  5032 ;;  s1              2    2[COMRAM] PTR const void 
  5033 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5034 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5035 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5036 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  5037 ;;		 -> main@uc(5), 
  5038 ;;  n               2    4[COMRAM] unsigned int 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5041 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5042 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5043 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5044 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  5045 ;;		 -> main@uc(5), 
  5046 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5047 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5048 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5049 ;;		 -> main@msgbuffer(11), 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  2    0[COMRAM] PTR void 
  5052 ;; Registers used:
  5053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5059 ;;      Params:         6       0       0       0       0
  5060 ;;      Locals:         4       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0
  5062 ;;      Totals:        10       0       0       0       0
  5063 ;;Total ram usage:       10 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    6
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		i1_send_msg
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text33
  5074  0017E6                     __ptext33:
  5075                           	opt stack 0
  5076  0017E6                     i1_memcpy:
  5077                           	opt stack 16
  5078                           
  5079                           ;incstack = 0
  5080  0017E6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5081  0017EA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5082  0017EE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5083  0017F2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5084  0017F6  D00E               	goto	i1l3762
  5085  0017F8                     i1l3756:
  5086  0017F8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5087  0017FC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5088  001800  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5089  001804  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5090  001808  CFDF FFE7          	movff	indf2,indf1
  5091  00180C  4A09               	infsnz	i1memcpy@s,f,c
  5092  00180E  2A0A               	incf	i1memcpy@s+1,f,c
  5093  001810  4A07               	infsnz	i1memcpy@d,f,c
  5094  001812  2A08               	incf	i1memcpy@d+1,f,c
  5095  001814                     i1l3762:
  5096  001814  0605               	decf	i1memcpy@n,f,c
  5097  001816  A0D8               	btfss	status,0,c
  5098  001818  0606               	decf	i1memcpy@n+1,f,c
  5099  00181A  2805               	incf	i1memcpy@n& (0+255),w,c
  5100  00181C  B4D8               	btfsc	status,2,c
  5101  00181E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5102  001820  B4D8               	btfsc	status,2,c
  5103                           
  5104                           ;	Return value of i1_memcpy is never used
  5105  001822  0012               	return	
  5106  001824  D7E9               	goto	i1l3756
  5107  001826                     __end_ofi1_memcpy:
  5108                           	opt stack 0
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           indf1	equ	0xFE7
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           bsr	equ	0xFE0
  5126                           indf2	equ	0xFDF
  5127                           postinc2	equ	0xFDE
  5128                           postdec2	equ	0xFDD
  5129                           fsr2h	equ	0xFDA
  5130                           fsr2l	equ	0xFD9
  5131                           status	equ	0xFD8
  5132                           
  5133 ;; *************** function _ReadUSART *****************
  5134 ;; Defined at:
  5135 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  data            1    0[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      unsigned char 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5149 ;;      Params:         0       0       0       0       0
  5150 ;;      Locals:         1       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0
  5152 ;;      Totals:         1       0       0       0       0
  5153 ;;Total ram usage:        1 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    6
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_uart_recv_int_handler
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text34
  5164  001AD0                     __ptext34:
  5165                           	opt stack 0
  5166  001AD0                     _ReadUSART:
  5167                           	opt stack 18
  5168                           
  5169                           ;incstack = 0
  5170  001AD0  0EF2               	movlw	242
  5171  001AD2  164C               	andwf	_USART_Status,f,c
  5172  001AD4  ACAB               	btfss	4011,6,c	;volatile
  5173  001AD6  D003               	goto	i1l560
  5174  001AD8  904C               	bcf	_USART_Status,0,c
  5175  001ADA  B0AB               	btfsc	4011,0,c	;volatile
  5176  001ADC  804C               	bsf	_USART_Status,0,c
  5177  001ADE                     i1l560:
  5178  001ADE  B4AB               	btfsc	4011,2,c	;volatile
  5179  001AE0  844C               	bsf	_USART_Status,2,c
  5180  001AE2  B2AB               	btfsc	4011,1,c	;volatile
  5181  001AE4  864C               	bsf	_USART_Status,3,c
  5182  001AE6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5183  001AEA  5001               	movf	ReadUSART@data,w,c
  5184  001AEC  0012               	return	
  5185  001AEE                     __end_of_ReadUSART:
  5186                           	opt stack 0
  5187                           pclatu	equ	0xFFB
  5188                           pclath	equ	0xFFA
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           intcon	equ	0xFF2
  5196                           postinc0	equ	0xFEE
  5197                           fsr0h	equ	0xFEA
  5198                           fsr0l	equ	0xFE9
  5199                           wreg	equ	0xFE8
  5200                           indf1	equ	0xFE7
  5201                           fsr1h	equ	0xFE2
  5202                           fsr1l	equ	0xFE1
  5203                           bsr	equ	0xFE0
  5204                           indf2	equ	0xFDF
  5205                           postinc2	equ	0xFDE
  5206                           postdec2	equ	0xFDD
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _timer1_int_handler *****************
  5212 ;; Defined at:
  5213 ;;		line 34 in file "../src/user_interrupts.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  result          2    4[COMRAM] unsigned int 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;		None               void
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5227 ;;      Params:         0       0       0       0       0
  5228 ;;      Locals:         2       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0
  5230 ;;      Totals:         2       0       0       0       0
  5231 ;;Total ram usage:        2 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    7
  5234 ;; This function calls:
  5235 ;;		_ReadTimer1
  5236 ;;		_WriteTimer1
  5237 ;; This function is called by:
  5238 ;;		_InterruptHandlerLow
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text35
  5243  001B0C                     __ptext35:
  5244                           	opt stack 0
  5245  001B0C                     _timer1_int_handler:
  5246                           	opt stack 18
  5247                           
  5248                           ;user_interrupts.c: 35: unsigned int result;
  5249                           ;user_interrupts.c: 37: result = ReadTimer1();
  5250                           
  5251                           ;incstack = 0
  5252  001B0C  ECCC  F00D         	call	_ReadTimer1	;wreg free
  5253  001B10  C001  F005         	movff	?_ReadTimer1,timer1_int_handler@result
  5254  001B14  C002  F006         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5255                           
  5256                           ;user_interrupts.c: 42: WriteTimer1(0);
  5257  001B18  0E00               	movlw	0
  5258  001B1A  6E02               	movwf	WriteTimer1@timer1+1,c
  5259  001B1C  0E00               	movlw	0
  5260  001B1E  6E01               	movwf	WriteTimer1@timer1,c
  5261  001B20  ECC3  F00D         	call	_WriteTimer1	;wreg free
  5262  001B24  0012               	return	
  5263  001B26                     __end_of_timer1_int_handler:
  5264                           	opt stack 0
  5265                           pclatu	equ	0xFFB
  5266                           pclath	equ	0xFFA
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodh	equ	0xFF4
  5272                           prodl	equ	0xFF3
  5273                           intcon	equ	0xFF2
  5274                           postinc0	equ	0xFEE
  5275                           fsr0h	equ	0xFEA
  5276                           fsr0l	equ	0xFE9
  5277                           wreg	equ	0xFE8
  5278                           indf1	equ	0xFE7
  5279                           fsr1h	equ	0xFE2
  5280                           fsr1l	equ	0xFE1
  5281                           bsr	equ	0xFE0
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _WriteTimer1 *****************
  5290 ;; Defined at:
  5291 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  timer1          2    0[COMRAM] unsigned int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  timer           2    2[COMRAM] struct Timers
  5296 ;; Return value:  Size  Location     Type
  5297 ;;		None               void
  5298 ;; Registers used:
  5299 ;;		None
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5305 ;;      Params:         2       0       0       0       0
  5306 ;;      Locals:         2       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0
  5308 ;;      Totals:         4       0       0       0       0
  5309 ;;Total ram usage:        4 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    6
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_timer1_int_handler
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text36
  5320  001B86                     __ptext36:
  5321                           	opt stack 0
  5322  001B86                     _WriteTimer1:
  5323                           	opt stack 18
  5324                           
  5325                           ;incstack = 0
  5326  001B86  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5327  001B8A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5328  001B8E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5329  001B92  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5330  001B96  0012               	return	
  5331  001B98                     __end_of_WriteTimer1:
  5332                           	opt stack 0
  5333                           pclatu	equ	0xFFB
  5334                           pclath	equ	0xFFA
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           postinc0	equ	0xFEE
  5343                           fsr0h	equ	0xFEA
  5344                           fsr0l	equ	0xFE9
  5345                           wreg	equ	0xFE8
  5346                           indf1	equ	0xFE7
  5347                           fsr1h	equ	0xFE2
  5348                           fsr1l	equ	0xFE1
  5349                           bsr	equ	0xFE0
  5350                           indf2	equ	0xFDF
  5351                           postinc2	equ	0xFDE
  5352                           postdec2	equ	0xFDD
  5353                           fsr2h	equ	0xFDA
  5354                           fsr2l	equ	0xFD9
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function _ReadTimer1 *****************
  5358 ;; Defined at:
  5359 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  timer           2    2[COMRAM] struct Timers
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  2    0[COMRAM] unsigned int 
  5366 ;; Registers used:
  5367 ;;		None
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5373 ;;      Params:         2       0       0       0       0
  5374 ;;      Locals:         2       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0
  5376 ;;      Totals:         4       0       0       0       0
  5377 ;;Total ram usage:        4 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    6
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_timer1_int_handler
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text37
  5388  001B98                     __ptext37:
  5389                           	opt stack 0
  5390  001B98                     _ReadTimer1:
  5391                           	opt stack 18
  5392                           
  5393                           ;incstack = 0
  5394  001B98  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5395  001B9C  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5396  001BA0  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5397  001BA4  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5398  001BA8  0012               	return	
  5399  001BAA                     __end_of_ReadTimer1:
  5400                           	opt stack 0
  5401                           pclatu	equ	0xFFB
  5402                           pclath	equ	0xFFA
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           prodh	equ	0xFF4
  5408                           prodl	equ	0xFF3
  5409                           intcon	equ	0xFF2
  5410                           postinc0	equ	0xFEE
  5411                           fsr0h	equ	0xFEA
  5412                           fsr0l	equ	0xFE9
  5413                           wreg	equ	0xFE8
  5414                           indf1	equ	0xFE7
  5415                           fsr1h	equ	0xFE2
  5416                           fsr1l	equ	0xFE1
  5417                           bsr	equ	0xFE0
  5418                           indf2	equ	0xFDF
  5419                           postinc2	equ	0xFDE
  5420                           postdec2	equ	0xFDD
  5421                           fsr2h	equ	0xFDA
  5422                           fsr2l	equ	0xFD9
  5423                           status	equ	0xFD8
  5424                           
  5425 ;; *************** function _InterruptHandlerHigh *****************
  5426 ;; Defined at:
  5427 ;;		line 83 in file "../src/interrupts.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;		None               void
  5434 ;; Registers used:
  5435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5441 ;;      Params:         0       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0
  5443 ;;      Temps:          0      14       0       0       0
  5444 ;;      Totals:         0      14       0       0       0
  5445 ;;Total ram usage:       14 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    5
  5448 ;; This function calls:
  5449 ;;		_SleepIfOkay
  5450 ;;		_i2c_int_handler
  5451 ;;		_timer0_int_handler
  5452 ;; This function is called by:
  5453 ;;		Interrupt level 2
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	intcode
  5458  000008                     __pintcode:
  5459                           	opt stack 0
  5460  000008                     _InterruptHandlerHigh:
  5461                           	opt stack 16
  5462                           
  5463                           ;incstack = 0
  5464  000008  CFFA F0C1          	movff	pclath,??_InterruptHandlerHigh
  5465  00000C  CFFB F0C2          	movff	pclatu,??_InterruptHandlerHigh+1
  5466  000010  EF72  F009         	goto	int_func
  5467                           pclatu	equ	0xFFB
  5468                           pclath	equ	0xFFA
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           indf1	equ	0xFE7
  5481                           fsr1h	equ	0xFE2
  5482                           fsr1l	equ	0xFE1
  5483                           bsr	equ	0xFE0
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491                           	psect	intcode_body
  5492  0012E4                     __pintcode_body:
  5493                           	opt stack 16
  5494  0012E4                     int_func:
  5495                           	opt stack 16
  5496  0012E4  CFE9 F0C3          	movff	fsr0l,??_InterruptHandlerHigh+2
  5497  0012E8  CFEA F0C4          	movff	fsr0h,??_InterruptHandlerHigh+3
  5498  0012EC  CFE1 F0C5          	movff	fsr1l,??_InterruptHandlerHigh+4
  5499  0012F0  CFE2 F0C6          	movff	fsr1h,??_InterruptHandlerHigh+5
  5500  0012F4  CFD9 F0C7          	movff	fsr2l,??_InterruptHandlerHigh+6
  5501  0012F8  CFDA F0C8          	movff	fsr2h,??_InterruptHandlerHigh+7
  5502  0012FC  CFF3 F0C9          	movff	prodl,??_InterruptHandlerHigh+8
  5503  001300  CFF4 F0CA          	movff	prodh,??_InterruptHandlerHigh+9
  5504  001304  CFF6 F0CB          	movff	tblptrl,??_InterruptHandlerHigh+10
  5505  001308  CFF7 F0CC          	movff	tblptrh,??_InterruptHandlerHigh+11
  5506  00130C  CFF8 F0CD          	movff	tblptru,??_InterruptHandlerHigh+12
  5507  001310  CFF5 F0CE          	movff	tablat,??_InterruptHandlerHigh+13
  5508                           
  5509                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5510  001314  A69E               	btfss	3998,3,c	;volatile
  5511  001316  D003               	goto	i2l3280
  5512                           
  5513                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5514  001318  969E               	bcf	3998,3,c	;volatile
  5515                           
  5516                           ;interrupts.c: 92: i2c_int_handler();
  5517  00131A  EC77  F00D         	call	_i2c_int_handler	;wreg free
  5518  00131E                     i2l3280:
  5519                           
  5520                           ;interrupts.c: 93: }
  5521                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5522  00131E  A4F2               	btfss	intcon,2,c	;volatile
  5523  001320  D003               	goto	i2l3286
  5524                           
  5525                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5526  001322  94F2               	bcf	intcon,2,c	;volatile
  5527                           
  5528                           ;interrupts.c: 99: timer0_int_handler();
  5529  001324  ECDC  F00C         	call	_timer0_int_handler	;wreg free
  5530  001328                     i2l3286:
  5531                           
  5532                           ;interrupts.c: 100: }
  5533                           ;interrupts.c: 109: SleepIfOkay();
  5534  001328  EC00  F00B         	call	_SleepIfOkay	;wreg free
  5535  00132C  C0CE  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5536  001330  C0CD  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5537  001334  C0CC  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5538  001338  C0CB  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5539  00133C  C0CA  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5540  001340  C0C9  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5541  001344  C0C8  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5542  001348  C0C7  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5543  00134C  C0C6  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5544  001350  C0C5  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5545  001354  C0C4  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5546  001358  C0C3  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5547  00135C  C0C2  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5548  001360  C0C1  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5549  001364  0011               	retfie		f
  5550  001366                     __end_of_InterruptHandlerHigh:
  5551                           	opt stack 0
  5552                           pclatu	equ	0xFFB
  5553                           pclath	equ	0xFFA
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           prodh	equ	0xFF4
  5559                           prodl	equ	0xFF3
  5560                           intcon	equ	0xFF2
  5561                           postinc0	equ	0xFEE
  5562                           fsr0h	equ	0xFEA
  5563                           fsr0l	equ	0xFE9
  5564                           wreg	equ	0xFE8
  5565                           indf1	equ	0xFE7
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           bsr	equ	0xFE0
  5569                           indf2	equ	0xFDF
  5570                           postinc2	equ	0xFDE
  5571                           postdec2	equ	0xFDD
  5572                           fsr2h	equ	0xFDA
  5573                           fsr2l	equ	0xFD9
  5574                           status	equ	0xFD8
  5575                           
  5576 ;; *************** function _timer0_int_handler *****************
  5577 ;; Defined at:
  5578 ;;		line 16 in file "../src/user_interrupts.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  msgtype         2    0        int 
  5583 ;;  length          2    0        int 
  5584 ;;  val             1   49[COMRAM] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;		None               void
  5587 ;; Registers used:
  5588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5594 ;;      Params:         0       0       0       0       0
  5595 ;;      Locals:         1       0       0       0       0
  5596 ;;      Temps:          1       0       0       0       0
  5597 ;;      Totals:         2       0       0       0       0
  5598 ;;Total ram usage:        2 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    1
  5601 ;; This function calls:
  5602 ;;		_WriteTimer0
  5603 ;;		_i2c_configure_master
  5604 ;;		_i2c_master_recv
  5605 ;; This function is called by:
  5606 ;;		_InterruptHandlerHigh
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text39
  5611  0019B8                     __ptext39:
  5612                           	opt stack 0
  5613  0019B8                     _timer0_int_handler:
  5614                           	opt stack 19
  5615                           
  5616                           ;user_interrupts.c: 17: unsigned char val = 0x32;
  5617                           
  5618                           ;incstack = 0
  5619  0019B8  6E31               	movwf	??_timer0_int_handler& (0+255),c
  5620  0019BA  0E32               	movlw	50
  5621  0019BC  6E32               	movwf	timer0_int_handler@val,c
  5622  0019BE  5031               	movf	??_timer0_int_handler& (0+255),w,c
  5623                           
  5624                           ;user_interrupts.c: 18: int length, msgtype;
  5625                           ;user_interrupts.c: 21: WriteTimer0(0);
  5626  0019C0  0E00               	movlw	0
  5627  0019C2  6E2E               	movwf	WriteTimer0@timer0+1,c
  5628  0019C4  0E00               	movlw	0
  5629  0019C6  6E2D               	movwf	WriteTimer0@timer0,c
  5630  0019C8  ECD5  F00D         	call	_WriteTimer0	;wreg free
  5631                           
  5632                           ;user_interrupts.c: 22: if(x == 0)
  5633  0019CC  504A               	movf	_x+1,w,c
  5634  0019CE  1049               	iorwf	_x,w,c
  5635  0019D0  A4D8               	btfss	status,2,c
  5636  0019D2  0012               	return	
  5637                           
  5638                           ;user_interrupts.c: 23: {
  5639                           ;user_interrupts.c: 24: x= 1;
  5640  0019D4  0E00               	movlw	0
  5641  0019D6  6E4A               	movwf	_x+1,c
  5642  0019D8  0E01               	movlw	1
  5643  0019DA  6E49               	movwf	_x,c
  5644                           
  5645                           ;user_interrupts.c: 25: i2c_configure_master(0x4D);
  5646  0019DC  0E4D               	movlw	77
  5647  0019DE  EC8F  F00B         	call	_i2c_configure_master
  5648                           
  5649                           ;user_interrupts.c: 26: i2c_master_recv(0x6);
  5650  0019E2  0E06               	movlw	6
  5651  0019E4  EC52  F00C         	call	_i2c_master_recv
  5652  0019E8  0012               	return	
  5653  0019EA                     __end_of_timer0_int_handler:
  5654                           	opt stack 0
  5655                           pclatu	equ	0xFFB
  5656                           pclath	equ	0xFFA
  5657                           tblptru	equ	0xFF8
  5658                           tblptrh	equ	0xFF7
  5659                           tblptrl	equ	0xFF6
  5660                           tablat	equ	0xFF5
  5661                           prodh	equ	0xFF4
  5662                           prodl	equ	0xFF3
  5663                           intcon	equ	0xFF2
  5664                           postinc0	equ	0xFEE
  5665                           fsr0h	equ	0xFEA
  5666                           fsr0l	equ	0xFE9
  5667                           wreg	equ	0xFE8
  5668                           indf1	equ	0xFE7
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           bsr	equ	0xFE0
  5672                           indf2	equ	0xFDF
  5673                           postinc2	equ	0xFDE
  5674                           postdec2	equ	0xFDD
  5675                           fsr2h	equ	0xFDA
  5676                           fsr2l	equ	0xFD9
  5677                           status	equ	0xFD8
  5678                           
  5679 ;; *************** function _i2c_master_recv *****************
  5680 ;; Defined at:
  5681 ;;		line 106 in file "../src/my_i2c.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  length          1    wreg     unsigned char 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  length          1   44[COMRAM] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      unsigned char 
  5688 ;; Registers used:
  5689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5695 ;;      Params:         0       0       0       0       0
  5696 ;;      Locals:         1       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0
  5698 ;;      Totals:         1       0       0       0       0
  5699 ;;Total ram usage:        1 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_timer0_int_handler
  5705 ;;		_parser_lthread
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text40
  5710  0018A4                     __ptext40:
  5711                           	opt stack 0
  5712  0018A4                     _i2c_master_recv:
  5713                           	opt stack 19
  5714                           
  5715                           ;incstack = 0
  5716                           ;i2c_master_recv@length stored from wreg
  5717  0018A4  CFE8 F02D          	movff	wreg,i2c_master_recv@length
  5718                           
  5719                           ;my_i2c.c: 108: if (SSPSTATbits.READ_WRITE == 1){
  5720  0018A8  B4C7               	btfsc	4039,2,c	;volatile
  5721  0018AA  0012               	return	
  5722                           
  5723                           ;my_i2c.c: 110: }
  5724                           ;my_i2c.c: 112: ic_ptr->buflen = length;
  5725                           
  5726                           ;my_i2c.c: 109: return -1;
  5727                           ;	Return value of _i2c_master_recv is never used
  5728  0018AC  EE20 F00A          	lfsr	2,10
  5729  0018B0  504E               	movf	_ic_ptr,w,c
  5730  0018B2  26D9               	addwf	fsr2l,f,c
  5731  0018B4  504F               	movf	_ic_ptr+1,w,c
  5732  0018B6  22DA               	addwfc	fsr2h,f,c
  5733  0018B8  C02D  FFDF         	movff	i2c_master_recv@length,indf2
  5734                           
  5735                           ;my_i2c.c: 113: ic_ptr->bufind = 0;
  5736  0018BC  EE20 F00B          	lfsr	2,11
  5737  0018C0  504E               	movf	_ic_ptr,w,c
  5738  0018C2  26D9               	addwf	fsr2l,f,c
  5739  0018C4  504F               	movf	_ic_ptr+1,w,c
  5740  0018C6  22DA               	addwfc	fsr2h,f,c
  5741  0018C8  0E00               	movlw	0
  5742  0018CA  6EDF               	movwf	indf2,c
  5743                           
  5744                           ;my_i2c.c: 116: SSPCON2bits.SEN = 1;
  5745  0018CC  80C5               	bsf	4037,0,c	;volatile
  5746                           
  5747                           ;my_i2c.c: 118: ic_ptr->status = 0x10;
  5748  0018CE  EE20 F00D          	lfsr	2,13
  5749  0018D2  504E               	movf	_ic_ptr,w,c
  5750  0018D4  26D9               	addwf	fsr2l,f,c
  5751  0018D6  504F               	movf	_ic_ptr+1,w,c
  5752  0018D8  22DA               	addwfc	fsr2h,f,c
  5753  0018DA  0E10               	movlw	16
  5754  0018DC  6EDF               	movwf	indf2,c
  5755  0018DE  0012               	return	
  5756  0018E0                     __end_of_i2c_master_recv:
  5757                           	opt stack 0
  5758                           pclatu	equ	0xFFB
  5759                           pclath	equ	0xFFA
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           prodh	equ	0xFF4
  5765                           prodl	equ	0xFF3
  5766                           intcon	equ	0xFF2
  5767                           postinc0	equ	0xFEE
  5768                           fsr0h	equ	0xFEA
  5769                           fsr0l	equ	0xFE9
  5770                           wreg	equ	0xFE8
  5771                           indf1	equ	0xFE7
  5772                           fsr1h	equ	0xFE2
  5773                           fsr1l	equ	0xFE1
  5774                           bsr	equ	0xFE0
  5775                           indf2	equ	0xFDF
  5776                           postinc2	equ	0xFDE
  5777                           postdec2	equ	0xFDD
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function _i2c_configure_master *****************
  5783 ;; Defined at:
  5784 ;;		line 24 in file "../src/my_i2c.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  slave_addr      1    wreg     unsigned char 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  slave_addr      1   45[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;		None               void
  5791 ;; Registers used:
  5792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5798 ;;      Params:         0       0       0       0       0
  5799 ;;      Locals:         1       0       0       0       0
  5800 ;;      Temps:          1       0       0       0       0
  5801 ;;      Totals:         2       0       0       0       0
  5802 ;;Total ram usage:        2 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_timer0_int_handler
  5808 ;;		_parser_lthread
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text41
  5813  00171E                     __ptext41:
  5814                           	opt stack 0
  5815  00171E                     _i2c_configure_master:
  5816                           	opt stack 19
  5817                           
  5818                           ;incstack = 0
  5819                           ;i2c_configure_master@slave_addr stored from wreg
  5820  00171E  CFE8 F02E          	movff	wreg,i2c_configure_master@slave_addr
  5821                           
  5822                           ;my_i2c.c: 25: i2c_mode = 1;
  5823  001722  6E2D               	movwf	??_i2c_configure_master& (0+255),c
  5824  001724  0E01               	movlw	1
  5825  001726  6E4D               	movwf	_i2c_mode,c
  5826  001728  502D               	movf	??_i2c_configure_master& (0+255),w,c
  5827                           
  5828                           ;my_i2c.c: 27: ic_ptr->slave_addr = slave_addr;
  5829  00172A  EE20 F01C          	lfsr	2,28
  5830  00172E  504E               	movf	_ic_ptr,w,c
  5831  001730  26D9               	addwf	fsr2l,f,c
  5832  001732  504F               	movf	_ic_ptr+1,w,c
  5833  001734  22DA               	addwfc	fsr2h,f,c
  5834  001736  C02E  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  5835                           
  5836                           ;my_i2c.c: 30: SSPCON1 = 0x0;
  5837  00173A  0E00               	movlw	0
  5838  00173C  6EC6               	movwf	4038,c	;volatile
  5839                           
  5840                           ;my_i2c.c: 31: SSPCON2 = 0x0;
  5841  00173E  0E00               	movlw	0
  5842  001740  6EC5               	movwf	4037,c	;volatile
  5843                           
  5844                           ;my_i2c.c: 32: SSPSTAT = 0x0;
  5845  001742  0E00               	movlw	0
  5846  001744  6EC7               	movwf	4039,c	;volatile
  5847                           
  5848                           ;my_i2c.c: 35: SSPADD = 0x63;
  5849  001746  0E63               	movlw	99
  5850  001748  6EC8               	movwf	4040,c	;volatile
  5851                           
  5852                           ;my_i2c.c: 38: SSPCON1bits.SSPM = 0x08;
  5853  00174A  50C6               	movf	4038,w,c	;volatile
  5854  00174C  0BF0               	andlw	-16
  5855  00174E  0908               	iorlw	8
  5856  001750  6EC6               	movwf	4038,c	;volatile
  5857                           
  5858                           ;my_i2c.c: 39: SSPCON1bits.SSPEN = 1;
  5859  001752  8AC6               	bsf	4038,5,c	;volatile
  5860                           
  5861                           ;my_i2c.c: 42: SSPSTAT = 0b10000000;
  5862  001754  0E80               	movlw	128
  5863  001756  6EC7               	movwf	4039,c	;volatile
  5864                           
  5865                           ;my_i2c.c: 45: LATCbits.LATC3 = 1;
  5866  001758  868B               	bsf	3979,3,c	;volatile
  5867                           
  5868                           ;my_i2c.c: 46: LATCbits.LATC4 = 1;
  5869  00175A  888B               	bsf	3979,4,c	;volatile
  5870                           
  5871                           ;my_i2c.c: 47: TRISCbits.TRISC3 = 1;
  5872  00175C  8694               	bsf	3988,3,c	;volatile
  5873                           
  5874                           ;my_i2c.c: 48: TRISCbits.TRISC4 = 1;
  5875  00175E  8894               	bsf	3988,4,c	;volatile
  5876  001760  0012               	return	
  5877  001762                     __end_of_i2c_configure_master:
  5878                           	opt stack 0
  5879                           pclatu	equ	0xFFB
  5880                           pclath	equ	0xFFA
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           fsr0h	equ	0xFEA
  5890                           fsr0l	equ	0xFE9
  5891                           wreg	equ	0xFE8
  5892                           indf1	equ	0xFE7
  5893                           fsr1h	equ	0xFE2
  5894                           fsr1l	equ	0xFE1
  5895                           bsr	equ	0xFE0
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _WriteTimer0 *****************
  5904 ;; Defined at:
  5905 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  timer0          2   44[COMRAM] unsigned int 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  timer           2   46[COMRAM] struct Timers
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		None
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5919 ;;      Params:         2       0       0       0       0
  5920 ;;      Locals:         2       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0
  5922 ;;      Totals:         4       0       0       0       0
  5923 ;;Total ram usage:        4 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_timer0_int_handler
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text42
  5933  001BAA                     __ptext42:
  5934                           	opt stack 0
  5935  001BAA                     _WriteTimer0:
  5936                           	opt stack 19
  5937                           
  5938                           ;incstack = 0
  5939  001BAA  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5940  001BAE  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5941  001BB2  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5942  001BB6  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5943  001BBA  0012               	return	
  5944  001BBC                     __end_of_WriteTimer0:
  5945                           	opt stack 0
  5946                           pclatu	equ	0xFFB
  5947                           pclath	equ	0xFFA
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           prodh	equ	0xFF4
  5953                           prodl	equ	0xFF3
  5954                           intcon	equ	0xFF2
  5955                           postinc0	equ	0xFEE
  5956                           fsr0h	equ	0xFEA
  5957                           fsr0l	equ	0xFE9
  5958                           wreg	equ	0xFE8
  5959                           indf1	equ	0xFE7
  5960                           fsr1h	equ	0xFE2
  5961                           fsr1l	equ	0xFE1
  5962                           bsr	equ	0xFE0
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _i2c_int_handler *****************
  5971 ;; Defined at:
  5972 ;;		line 196 in file "../src/my_i2c.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;		None               void
  5979 ;; Registers used:
  5980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5986 ;;      Params:         0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    4
  5993 ;; This function calls:
  5994 ;;		_i2c_master_int_handler
  5995 ;;		_i2c_slave_int_handler
  5996 ;; This function is called by:
  5997 ;;		_InterruptHandlerHigh
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text43
  6002  001AEE                     __ptext43:
  6003                           	opt stack 0
  6004  001AEE                     _i2c_int_handler:
  6005                           	opt stack 16
  6006                           
  6007                           ;my_i2c.c: 197: switch (i2c_mode){
  6008                           
  6009                           ;incstack = 0
  6010  001AEE  D006               	goto	i2l3296
  6011  001AF0                     i2l3290:
  6012                           
  6013                           ;my_i2c.c: 199: i2c_master_int_handler();
  6014  001AF0  ECE6  F002         	call	_i2c_master_int_handler	;wreg free
  6015                           
  6016                           ;my_i2c.c: 200: break;
  6017  001AF4  0012               	return	
  6018  001AF6                     i2l3292:
  6019                           
  6020                           ;my_i2c.c: 203: i2c_slave_int_handler();
  6021  001AF6  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  6022                           
  6023                           ;my_i2c.c: 204: break;
  6024  001AFA  0012               	return	
  6025  001AFC                     i2l3296:
  6026  001AFC  504D               	movf	_i2c_mode,w,c
  6027                           
  6028                           ; Switch size 1, requested type "space"
  6029                           ; Number of cases is 2, Range of values is 1 to 2
  6030                           ; switch strategies available:
  6031                           ; Name         Instructions Cycles
  6032                           ; simple_byte            7     4 (average)
  6033                           ;	Chosen strategy is simple_byte
  6034  001AFE  0A01               	xorlw	1	; case 1
  6035  001B00  B4D8               	btfsc	status,2,c
  6036  001B02  D7F6               	goto	i2l3290
  6037  001B04  0A03               	xorlw	3	; case 2
  6038  001B06  A4D8               	btfss	status,2,c
  6039  001B08  0012               	return	
  6040  001B0A  D7F5               	goto	i2l3292
  6041  001B0C                     __end_of_i2c_int_handler:
  6042                           	opt stack 0
  6043                           pclatu	equ	0xFFB
  6044                           pclath	equ	0xFFA
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           postinc0	equ	0xFEE
  6053                           fsr0h	equ	0xFEA
  6054                           fsr0l	equ	0xFE9
  6055                           wreg	equ	0xFE8
  6056                           indf1	equ	0xFE7
  6057                           fsr1h	equ	0xFE2
  6058                           fsr1l	equ	0xFE1
  6059                           bsr	equ	0xFE0
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           postdec2	equ	0xFDD
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function _i2c_slave_int_handler *****************
  6068 ;; Defined at:
  6069 ;;		line 213 in file "../src/my_i2c.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  error_buf       3    2[BANK0 ] unsigned char [3]
  6074 ;;  data_read       1   10[BANK0 ] unsigned char 
  6075 ;;  msg_ready       1    9[BANK0 ] unsigned char 
  6076 ;;  msg_to_send     1    8[BANK0 ] unsigned char 
  6077 ;;  i2c_data        1    7[BANK0 ] unsigned char 
  6078 ;;  overrun_erro    1    6[BANK0 ] unsigned char 
  6079 ;;  data_written    1    5[BANK0 ] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;		None               void
  6082 ;; Registers used:
  6083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         0       9       0       0       0
  6091 ;;      Temps:          0       2       0       0       0
  6092 ;;      Totals:         0      11       0       0       0
  6093 ;;Total ram usage:       11 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    3
  6096 ;; This function calls:
  6097 ;;		_ToMainHigh_sendmsg
  6098 ;;		_handle_start
  6099 ;;		_start_i2c_slave_reply
  6100 ;; This function is called by:
  6101 ;;		_i2c_int_handler
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text44
  6106  0000BA                     __ptext44:
  6107                           	opt stack 0
  6108  0000BA                     _i2c_slave_int_handler:
  6109                           	opt stack 16
  6110                           
  6111                           ;my_i2c.c: 214: unsigned char i2c_data;
  6112                           ;my_i2c.c: 215: unsigned char data_read = 0;
  6113                           
  6114                           ;incstack = 0
  6115  0000BA  0100               	movlb	0	; () banked
  6116  0000BC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6117  0000BE  0E00               	movlw	0
  6118  0000C0  0100               	movlb	0	; () banked
  6119  0000C2  0100               	movlb	0	; () banked
  6120  0000C4  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6121  0000C6  0100               	movlb	0	; () banked
  6122  0000C8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6123                           
  6124                           ;my_i2c.c: 216: unsigned char data_written = 0;
  6125  0000CA  0100               	movlb	0	; () banked
  6126  0000CC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6127  0000CE  0E00               	movlw	0
  6128  0000D0  0100               	movlb	0	; () banked
  6129  0000D2  0100               	movlb	0	; () banked
  6130  0000D4  6FBB               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6131  0000D6  0100               	movlb	0	; () banked
  6132  0000D8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6133                           
  6134                           ;my_i2c.c: 217: unsigned char msg_ready = 0;
  6135  0000DA  0100               	movlb	0	; () banked
  6136  0000DC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6137  0000DE  0E00               	movlw	0
  6138  0000E0  0100               	movlb	0	; () banked
  6139  0000E2  0100               	movlb	0	; () banked
  6140  0000E4  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6141  0000E6  0100               	movlb	0	; () banked
  6142  0000E8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6143                           
  6144                           ;my_i2c.c: 218: unsigned char msg_to_send = 0;
  6145  0000EA  0100               	movlb	0	; () banked
  6146  0000EC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6147  0000EE  0E00               	movlw	0
  6148  0000F0  0100               	movlb	0	; () banked
  6149  0000F2  0100               	movlb	0	; () banked
  6150  0000F4  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6151  0000F6  0100               	movlb	0	; () banked
  6152  0000F8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6153                           
  6154                           ;my_i2c.c: 219: unsigned char overrun_error = 0;
  6155  0000FA  0100               	movlb	0	; () banked
  6156  0000FC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6157  0000FE  0E00               	movlw	0
  6158  000100  0100               	movlb	0	; () banked
  6159  000102  0100               	movlb	0	; () banked
  6160  000104  6FBC               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6161  000106  0100               	movlb	0	; () banked
  6162  000108  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;my_i2c.c: 220: unsigned char error_buf[3];
  6166                           ;my_i2c.c: 223: if (SSPCON1bits.SSPOV == 1) {
  6167  00010A  ACC6               	btfss	4038,6,c	;volatile
  6168  00010C  D020               	goto	i2l3586
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;my_i2c.c: 224: SSPCON1bits.SSPOV = 0;
  6172  00010E  9CC6               	bcf	4038,6,c	;volatile
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
  6176  000110  EE20 F00D          	lfsr	2,13
  6177  000114  504E               	movf	_ic_ptr,w,c
  6178  000116  26D9               	addwf	fsr2l,f,c
  6179  000118  504F               	movf	_ic_ptr+1,w,c
  6180  00011A  22DA               	addwfc	fsr2h,f,c
  6181  00011C  0E05               	movlw	5
  6182  00011E  6EDF               	movwf	indf2,c
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;my_i2c.c: 229: overrun_error = 1;
  6186  000120  0100               	movlb	0	; () banked
  6187  000122  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6188  000124  0E01               	movlw	1
  6189  000126  0100               	movlb	0	; () banked
  6190  000128  0100               	movlb	0	; () banked
  6191  00012A  6FBC               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6192  00012C  0100               	movlb	0	; () banked
  6193  00012E  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;my_i2c.c: 230: ic_ptr->error_count++;
  6197  000130  EE20 F00F          	lfsr	2,15
  6198  000134  504E               	movf	_ic_ptr,w,c
  6199  000136  26D9               	addwf	fsr2l,f,c
  6200  000138  504F               	movf	_ic_ptr+1,w,c
  6201  00013A  22DA               	addwfc	fsr2h,f,c
  6202  00013C  2ADF               	incf	indf2,f,c
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;my_i2c.c: 231: ic_ptr->error_code = 0x4;
  6206  00013E  EE20 F00E          	lfsr	2,14
  6207  000142  504E               	movf	_ic_ptr,w,c
  6208  000144  26D9               	addwf	fsr2l,f,c
  6209  000146  504F               	movf	_ic_ptr+1,w,c
  6210  000148  22DA               	addwfc	fsr2h,f,c
  6211  00014A  0E04               	movlw	4
  6212  00014C  6EDF               	movwf	indf2,c
  6213  00014E                     i2l3586:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;my_i2c.c: 232: }
  6217                           ;my_i2c.c: 234: if (SSPSTATbits.BF == 1) {
  6218  00014E  A0C7               	btfss	4039,0,c	;volatile
  6219  000150  D00A               	goto	i2l3592
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;my_i2c.c: 235: i2c_data = SSPBUF;
  6223  000152  CFC9 F0BD          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;my_i2c.c: 236: data_read = 1;
  6227  000156  0100               	movlb	0	; () banked
  6228  000158  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6229  00015A  0E01               	movlw	1
  6230  00015C  0100               	movlb	0	; () banked
  6231  00015E  0100               	movlb	0	; () banked
  6232  000160  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6233  000162  0100               	movlb	0	; () banked
  6234  000164  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6235  000166                     i2l3592:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;my_i2c.c: 237: }
  6239                           ;my_i2c.c: 239: if (!overrun_error) {
  6240  000166  0100               	movlb	0	; () banked
  6241  000168  0100               	movlb	0	; () banked
  6242  00016A  67BC               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  6243  00016C  D174               	goto	i2l293
  6244  00016E  D160               	goto	i2l3680
  6245  000170                     i2l295:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;my_i2c.c: 242: {
  6249                           ;my_i2c.c: 244: if (SSPSTATbits.S == 1) {
  6250  000170  A6C7               	btfss	4039,3,c	;volatile
  6251  000172  D171               	goto	i2l293
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;my_i2c.c: 245: handle_start(data_read);
  6255  000174  0100               	movlb	0	; () banked
  6256  000176  0100               	movlb	0	; () banked
  6257  000178  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6258  00017A  EC98  F008         	call	_handle_start
  6259                           
  6260                           ;my_i2c.c: 247: if (ic_ptr->status == 0x8) {
  6261  00017E  EE20 F00D          	lfsr	2,13
  6262  000182  504E               	movf	_ic_ptr,w,c
  6263  000184  26D9               	addwf	fsr2l,f,c
  6264  000186  504F               	movf	_ic_ptr+1,w,c
  6265  000188  22DA               	addwfc	fsr2h,f,c
  6266  00018A  0E08               	movlw	8
  6267  00018C  62DF               	cpfseq	indf2,c
  6268  00018E  D163               	goto	i2l293
  6269                           
  6270                           ;my_i2c.c: 248: data_read = 0;
  6271  000190  0100               	movlb	0	; () banked
  6272  000192  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6273  000194  0E00               	movlw	0
  6274  000196  0100               	movlb	0	; () banked
  6275  000198  0100               	movlb	0	; () banked
  6276  00019A  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6277  00019C  0100               	movlb	0	; () banked
  6278  00019E  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6279                           
  6280                           ;my_i2c.c: 249: msg_to_send = 1;
  6281  0001A0  0100               	movlb	0	; () banked
  6282  0001A2  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6283  0001A4  0E01               	movlw	1
  6284  0001A6  0100               	movlb	0	; () banked
  6285  0001A8  0100               	movlb	0	; () banked
  6286  0001AA  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6287  0001AC  D136               	goto	L6
  6288  0001AE                     i2l299:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;my_i2c.c: 255: {
  6292                           ;my_i2c.c: 257: if (SSPSTATbits.P == 1) {
  6293  0001AE  A8C7               	btfss	4039,4,c	;volatile
  6294  0001B0  D027               	goto	i2l3612
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;my_i2c.c: 260: ic_ptr->event_count++;
  6298  0001B2  EE20 F00C          	lfsr	2,12
  6299  0001B6  504E               	movf	_ic_ptr,w,c
  6300  0001B8  26D9               	addwf	fsr2l,f,c
  6301  0001BA  504F               	movf	_ic_ptr+1,w,c
  6302  0001BC  22DA               	addwfc	fsr2h,f,c
  6303  0001BE  2ADF               	incf	indf2,f,c
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;my_i2c.c: 261: if (data_read) {
  6307  0001C0  0100               	movlb	0	; () banked
  6308  0001C2  0100               	movlb	0	; () banked
  6309  0001C4  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6310  0001C6  B4D8               	btfsc	status,2,c
  6311  0001C8  D12B               	goto	L8
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;my_i2c.c: 262: if (SSPSTATbits.D_A == 0) {
  6315  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6316  0001CC  D009               	goto	i2l3610
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;my_i2c.c: 263: msg_ready = 1;
  6320  0001CE  0100               	movlb	0	; () banked
  6321  0001D0  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6322  0001D2  0E01               	movlw	1
  6323  0001D4  0100               	movlb	0	; () banked
  6324  0001D6  0100               	movlb	0	; () banked
  6325  0001D8  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6326  0001DA  0100               	movlb	0	; () banked
  6327  0001DC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6328                           
  6329                           ;my_i2c.c: 264: } else {
  6330  0001DE  D120               	goto	L8
  6331  0001E0                     i2l3610:
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;my_i2c.c: 265: ic_ptr->error_count++;
  6335  0001E0  EE20 F00F          	lfsr	2,15
  6336  0001E4  504E               	movf	_ic_ptr,w,c
  6337  0001E6  26D9               	addwf	fsr2l,f,c
  6338  0001E8  504F               	movf	_ic_ptr+1,w,c
  6339  0001EA  22DA               	addwfc	fsr2h,f,c
  6340  0001EC  2ADF               	incf	indf2,f,c
  6341                           
  6342                           ;my_i2c.c: 266: ic_ptr->error_code = 0x6;
  6343  0001EE  EE20 F00E          	lfsr	2,14
  6344  0001F2  504E               	movf	_ic_ptr,w,c
  6345  0001F4  26D9               	addwf	fsr2l,f,c
  6346  0001F6  504F               	movf	_ic_ptr+1,w,c
  6347  0001F8  22DA               	addwfc	fsr2h,f,c
  6348  0001FA  0E06               	movlw	6
  6349  0001FC  6EDF               	movwf	indf2,c
  6350                           
  6351                           ; BSR set to: 0
  6352  0001FE  D110               	goto	L8
  6353  000200                     i2l3612:
  6354                           
  6355                           ; BSR set to: 0
  6356  000200  0100               	movlb	0	; () banked
  6357  000202  0100               	movlb	0	; () banked
  6358  000204  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6359  000206  B4D8               	btfsc	status,2,c
  6360  000208  D126               	goto	i2l293
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;my_i2c.c: 271: ic_ptr->event_count++;
  6364  00020A  EE20 F00C          	lfsr	2,12
  6365  00020E  504E               	movf	_ic_ptr,w,c
  6366  000210  26D9               	addwf	fsr2l,f,c
  6367  000212  504F               	movf	_ic_ptr+1,w,c
  6368  000214  22DA               	addwfc	fsr2h,f,c
  6369  000216  2ADF               	incf	indf2,f,c
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;my_i2c.c: 272: if (SSPSTATbits.D_A == 0) {
  6373  000218  BAC7               	btfsc	4039,5,c	;volatile
  6374  00021A  D013               	goto	i2l3628
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;my_i2c.c: 273: if (SSPSTATbits.R_W == 0) {
  6378  00021C  B4C7               	btfsc	4039,2,c	;volatile
  6379  00021E  D008               	goto	i2l3622
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;my_i2c.c: 274: ic_ptr->status = 0x7;
  6383  000220  EE20 F00D          	lfsr	2,13
  6384  000224  504E               	movf	_ic_ptr,w,c
  6385  000226  26D9               	addwf	fsr2l,f,c
  6386  000228  504F               	movf	_ic_ptr+1,w,c
  6387  00022A  22DA               	addwfc	fsr2h,f,c
  6388  00022C  0E07               	movlw	7
  6389  00022E  D05A               	goto	L5
  6390  000230                     i2l3622:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;my_i2c.c: 276: ic_ptr->status = 0x8;
  6394  000230  EE20 F00D          	lfsr	2,13
  6395  000234  504E               	movf	_ic_ptr,w,c
  6396  000236  26D9               	addwf	fsr2l,f,c
  6397  000238  504F               	movf	_ic_ptr+1,w,c
  6398  00023A  22DA               	addwfc	fsr2h,f,c
  6399  00023C  0E08               	movlw	8
  6400  00023E  6EDF               	movwf	indf2,c
  6401  000240  D0DE               	goto	L9
  6402  000242                     i2l3628:
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;my_i2c.c: 282: ic_ptr->error_count++;
  6406  000242  EE20 F00F          	lfsr	2,15
  6407  000246  504E               	movf	_ic_ptr,w,c
  6408  000248  26D9               	addwf	fsr2l,f,c
  6409  00024A  504F               	movf	_ic_ptr+1,w,c
  6410  00024C  22DA               	addwfc	fsr2h,f,c
  6411  00024E  2ADF               	incf	indf2,f,c
  6412                           
  6413                           ;my_i2c.c: 283: ic_ptr->status = 0x5;
  6414  000250  EE20 F00D          	lfsr	2,13
  6415  000254  504E               	movf	_ic_ptr,w,c
  6416  000256  26D9               	addwf	fsr2l,f,c
  6417  000258  504F               	movf	_ic_ptr+1,w,c
  6418  00025A  22DA               	addwfc	fsr2h,f,c
  6419  00025C  0E05               	movlw	5
  6420  00025E  6EDF               	movwf	indf2,c
  6421                           
  6422                           ;my_i2c.c: 284: ic_ptr->error_code = 0x6;
  6423  000260  EE20 F00E          	lfsr	2,14
  6424  000264  504E               	movf	_ic_ptr,w,c
  6425  000266  26D9               	addwf	fsr2l,f,c
  6426  000268  504F               	movf	_ic_ptr+1,w,c
  6427  00026A  22DA               	addwfc	fsr2h,f,c
  6428  00026C  0E06               	movlw	6
  6429  00026E  D03A               	goto	L5
  6430  000270                     i2l3630:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;my_i2c.c: 290: {
  6434                           ;my_i2c.c: 291: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6435  000270  EE20 F01B          	lfsr	2,27
  6436  000274  504E               	movf	_ic_ptr,w,c
  6437  000276  26D9               	addwf	fsr2l,f,c
  6438  000278  504F               	movf	_ic_ptr+1,w,c
  6439  00027A  22DA               	addwfc	fsr2h,f,c
  6440  00027C  50DF               	movf	indf2,w,c
  6441  00027E  0100               	movlb	0	; () banked
  6442  000280  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6443  000282  EE20 F01A          	lfsr	2,26
  6444  000286  504E               	movf	_ic_ptr,w,c
  6445  000288  26D9               	addwf	fsr2l,f,c
  6446  00028A  504F               	movf	_ic_ptr+1,w,c
  6447  00028C  22DA               	addwfc	fsr2h,f,c
  6448  00028E  50DF               	movf	indf2,w,c
  6449  000290  0100               	movlb	0	; () banked
  6450  000292  5DB6               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  6451  000294  B0D8               	btfsc	status,0,c
  6452  000296  D0C4               	goto	L8
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;my_i2c.c: 292: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6456  000298  EE20 F01B          	lfsr	2,27
  6457  00029C  504E               	movf	_ic_ptr,w,c
  6458  00029E  26D9               	addwf	fsr2l,f,c
  6459  0002A0  504F               	movf	_ic_ptr+1,w,c
  6460  0002A2  22DA               	addwfc	fsr2h,f,c
  6461  0002A4  50DF               	movf	indf2,w,c
  6462  0002A6  0100               	movlb	0	; () banked
  6463  0002A8  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6464  0002AA  0100               	movlb	0	; () banked
  6465  0002AC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6466  0002AE  0D01               	mullw	1
  6467  0002B0  0E10               	movlw	16
  6468  0002B2  26F3               	addwf	prodl,f,c
  6469  0002B4  0E00               	movlw	0
  6470  0002B6  22F4               	addwfc	prodh,f,c
  6471  0002B8  50F3               	movf	prodl,w,c
  6472  0002BA  244E               	addwf	_ic_ptr,w,c
  6473  0002BC  6ED9               	movwf	fsr2l,c
  6474  0002BE  50F4               	movf	prodh,w,c
  6475  0002C0  204F               	addwfc	_ic_ptr+1,w,c
  6476  0002C2  6EDA               	movwf	fsr2h,c
  6477  0002C4  50DF               	movf	indf2,w,c
  6478  0002C6  6EC9               	movwf	4041,c	;volatile
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;my_i2c.c: 293: ic_ptr->outbufind++;
  6482  0002C8  EE20 F01B          	lfsr	2,27
  6483  0002CC  504E               	movf	_ic_ptr,w,c
  6484  0002CE  26D9               	addwf	fsr2l,f,c
  6485  0002D0  504F               	movf	_ic_ptr+1,w,c
  6486  0002D2  22DA               	addwfc	fsr2h,f,c
  6487  0002D4  2ADF               	incf	indf2,f,c
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;my_i2c.c: 294: data_written = 1;
  6491  0002D6  0100               	movlb	0	; () banked
  6492  0002D8  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6493  0002DA  0E01               	movlw	1
  6494  0002DC  0100               	movlb	0	; () banked
  6495  0002DE  0100               	movlb	0	; () banked
  6496  0002E0  6FBB               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6497  0002E2  D09B               	goto	L6
  6498  0002E4                     L5:
  6499  0002E4  6EDF               	movwf	indf2,c
  6500  0002E6  D0B7               	goto	i2l293
  6501  0002E8                     i2l313:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;my_i2c.c: 302: {
  6505                           ;my_i2c.c: 304: if (SSPSTATbits.P == 1) {
  6506  0002E8  A8C7               	btfss	4039,4,c	;volatile
  6507  0002EA  D04C               	goto	i2l3658
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;my_i2c.c: 306: ic_ptr->event_count++;
  6511  0002EC  EE20 F00C          	lfsr	2,12
  6512  0002F0  504E               	movf	_ic_ptr,w,c
  6513  0002F2  26D9               	addwf	fsr2l,f,c
  6514  0002F4  504F               	movf	_ic_ptr+1,w,c
  6515  0002F6  22DA               	addwfc	fsr2h,f,c
  6516  0002F8  2ADF               	incf	indf2,f,c
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;my_i2c.c: 307: if (data_read) {
  6520  0002FA  0100               	movlb	0	; () banked
  6521  0002FC  0100               	movlb	0	; () banked
  6522  0002FE  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6523  000300  B4D8               	btfsc	status,2,c
  6524  000302  D037               	goto	i2l3654
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;my_i2c.c: 308: if (SSPSTATbits.D_A == 1) {
  6528  000304  AAC7               	btfss	4039,5,c	;volatile
  6529  000306  D01D               	goto	i2l3652
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;my_i2c.c: 309: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6533  000308  EE20 F00A          	lfsr	2,10
  6534  00030C  504E               	movf	_ic_ptr,w,c
  6535  00030E  26D9               	addwf	fsr2l,f,c
  6536  000310  504F               	movf	_ic_ptr+1,w,c
  6537  000312  22DA               	addwfc	fsr2h,f,c
  6538  000314  50DF               	movf	indf2,w,c
  6539  000316  0100               	movlb	0	; () banked
  6540  000318  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6541  00031A  0100               	movlb	0	; () banked
  6542  00031C  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6543  00031E  0D01               	mullw	1
  6544  000320  50F3               	movf	prodl,w,c
  6545  000322  244E               	addwf	_ic_ptr,w,c
  6546  000324  6ED9               	movwf	fsr2l,c
  6547  000326  50F4               	movf	prodh,w,c
  6548  000328  204F               	addwfc	_ic_ptr+1,w,c
  6549  00032A  6EDA               	movwf	fsr2h,c
  6550  00032C  0100               	movlb	0	; () banked
  6551  00032E  C0BD  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;my_i2c.c: 310: ic_ptr->buflen++;
  6555  000332  EE20 F00A          	lfsr	2,10
  6556  000336  504E               	movf	_ic_ptr,w,c
  6557  000338  26D9               	addwf	fsr2l,f,c
  6558  00033A  504F               	movf	_ic_ptr+1,w,c
  6559  00033C  22DA               	addwfc	fsr2h,f,c
  6560  00033E  2ADF               	incf	indf2,f,c
  6561  000340  D018               	goto	i2l3654
  6562  000342                     i2l3652:
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;my_i2c.c: 313: ic_ptr->error_count++;
  6566  000342  EE20 F00F          	lfsr	2,15
  6567  000346  504E               	movf	_ic_ptr,w,c
  6568  000348  26D9               	addwf	fsr2l,f,c
  6569  00034A  504F               	movf	_ic_ptr+1,w,c
  6570  00034C  22DA               	addwfc	fsr2h,f,c
  6571  00034E  2ADF               	incf	indf2,f,c
  6572                           
  6573                           ;my_i2c.c: 314: ic_ptr->error_code = 0x6;
  6574  000350  EE20 F00E          	lfsr	2,14
  6575  000354  504E               	movf	_ic_ptr,w,c
  6576  000356  26D9               	addwf	fsr2l,f,c
  6577  000358  504F               	movf	_ic_ptr+1,w,c
  6578  00035A  22DA               	addwfc	fsr2h,f,c
  6579  00035C  0E06               	movlw	6
  6580  00035E  6EDF               	movwf	indf2,c
  6581                           
  6582                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  6583  000360  EE20 F00D          	lfsr	2,13
  6584  000364  504E               	movf	_ic_ptr,w,c
  6585  000366  26D9               	addwf	fsr2l,f,c
  6586  000368  504F               	movf	_ic_ptr+1,w,c
  6587  00036A  22DA               	addwfc	fsr2h,f,c
  6588  00036C  0E05               	movlw	5
  6589  00036E  6EDF               	movwf	indf2,c
  6590  000370  D057               	goto	L8
  6591  000372                     i2l3654:
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;my_i2c.c: 318: msg_ready = 1;
  6595  000372  0100               	movlb	0	; () banked
  6596  000374  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6597  000376  0E01               	movlw	1
  6598  000378  0100               	movlb	0	; () banked
  6599  00037A  0100               	movlb	0	; () banked
  6600  00037C  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6601  00037E  0100               	movlb	0	; () banked
  6602  000380  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6603                           
  6604                           ; BSR set to: 0
  6605  000382  D04E               	goto	L8
  6606  000384                     i2l3658:
  6607                           
  6608                           ; BSR set to: 0
  6609  000384  0100               	movlb	0	; () banked
  6610  000386  0100               	movlb	0	; () banked
  6611  000388  51C0               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  6612  00038A  B4D8               	btfsc	status,2,c
  6613  00038C  D064               	goto	i2l293
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;my_i2c.c: 322: ic_ptr->event_count++;
  6617  00038E  EE20 F00C          	lfsr	2,12
  6618  000392  504E               	movf	_ic_ptr,w,c
  6619  000394  26D9               	addwf	fsr2l,f,c
  6620  000396  504F               	movf	_ic_ptr+1,w,c
  6621  000398  22DA               	addwfc	fsr2h,f,c
  6622  00039A  2ADF               	incf	indf2,f,c
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;my_i2c.c: 323: if (SSPSTATbits.D_A == 1) {
  6626  00039C  AAC7               	btfss	4039,5,c	;volatile
  6627  00039E  D01D               	goto	i2l321
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;my_i2c.c: 324: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6631  0003A0  EE20 F00A          	lfsr	2,10
  6632  0003A4  504E               	movf	_ic_ptr,w,c
  6633  0003A6  26D9               	addwf	fsr2l,f,c
  6634  0003A8  504F               	movf	_ic_ptr+1,w,c
  6635  0003AA  22DA               	addwfc	fsr2h,f,c
  6636  0003AC  50DF               	movf	indf2,w,c
  6637  0003AE  0100               	movlb	0	; () banked
  6638  0003B0  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6639  0003B2  0100               	movlb	0	; () banked
  6640  0003B4  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6641  0003B6  0D01               	mullw	1
  6642  0003B8  50F3               	movf	prodl,w,c
  6643  0003BA  244E               	addwf	_ic_ptr,w,c
  6644  0003BC  6ED9               	movwf	fsr2l,c
  6645  0003BE  50F4               	movf	prodh,w,c
  6646  0003C0  204F               	addwfc	_ic_ptr+1,w,c
  6647  0003C2  6EDA               	movwf	fsr2h,c
  6648  0003C4  0100               	movlb	0	; () banked
  6649  0003C6  C0BD  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;my_i2c.c: 325: ic_ptr->buflen++;
  6653  0003CA  EE20 F00A          	lfsr	2,10
  6654  0003CE  504E               	movf	_ic_ptr,w,c
  6655  0003D0  26D9               	addwf	fsr2l,f,c
  6656  0003D2  504F               	movf	_ic_ptr+1,w,c
  6657  0003D4  22DA               	addwfc	fsr2h,f,c
  6658  0003D6  2ADF               	incf	indf2,f,c
  6659                           
  6660                           ;my_i2c.c: 326: } else {
  6661  0003D8  D03E               	goto	i2l293
  6662  0003DA                     i2l321:
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;my_i2c.c: 327: if (SSPSTATbits.R_W == 1) {
  6666  0003DA  A4C7               	btfss	4039,2,c	;volatile
  6667  0003DC  D701               	goto	i2l3610
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;my_i2c.c: 328: ic_ptr->status = 0x8;
  6671  0003DE  EE20 F00D          	lfsr	2,13
  6672  0003E2  504E               	movf	_ic_ptr,w,c
  6673  0003E4  26D9               	addwf	fsr2l,f,c
  6674  0003E6  504F               	movf	_ic_ptr+1,w,c
  6675  0003E8  22DA               	addwfc	fsr2h,f,c
  6676  0003EA  0E08               	movlw	8
  6677  0003EC  6EDF               	movwf	indf2,c
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;my_i2c.c: 329: msg_ready = 1;
  6681  0003EE  0100               	movlb	0	; () banked
  6682  0003F0  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6683  0003F2  0E01               	movlw	1
  6684  0003F4  0100               	movlb	0	; () banked
  6685  0003F6  0100               	movlb	0	; () banked
  6686  0003F8  6FBF               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6687  0003FA  0100               	movlb	0	; () banked
  6688  0003FC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6689  0003FE                     L9:
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;my_i2c.c: 330: msg_to_send = 1;
  6693  0003FE  0100               	movlb	0	; () banked
  6694  000400  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6695  000402  0E01               	movlw	1
  6696  000404  0100               	movlb	0	; () banked
  6697  000406  0100               	movlb	0	; () banked
  6698  000408  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6699  00040A  0100               	movlb	0	; () banked
  6700  00040C  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;my_i2c.c: 332: data_read = 0;
  6704  00040E  0100               	movlb	0	; () banked
  6705  000410  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6706  000412  0E00               	movlw	0
  6707  000414  0100               	movlb	0	; () banked
  6708  000416  0100               	movlb	0	; () banked
  6709  000418  6FC0               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6710  00041A                     L6:
  6711  00041A  0100               	movlb	0	; () banked
  6712  00041C  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6713                           
  6714                           ;my_i2c.c: 333: } else {
  6715  00041E  D01B               	goto	i2l293
  6716  000420                     L8:
  6717                           
  6718                           ;my_i2c.c: 336: ic_ptr->status = 0x5;
  6719  000420  EE20 F00D          	lfsr	2,13
  6720  000424  504E               	movf	_ic_ptr,w,c
  6721  000426  26D9               	addwf	fsr2l,f,c
  6722  000428  504F               	movf	_ic_ptr+1,w,c
  6723  00042A  22DA               	addwfc	fsr2h,f,c
  6724  00042C  0E05               	movlw	5
  6725  00042E  D75A               	goto	L5
  6726  000430                     i2l3680:
  6727                           
  6728                           ; BSR set to: 0
  6729  000430  EE20 F00D          	lfsr	2,13
  6730  000434  504E               	movf	_ic_ptr,w,c
  6731  000436  26D9               	addwf	fsr2l,f,c
  6732  000438  504F               	movf	_ic_ptr+1,w,c
  6733  00043A  22DA               	addwfc	fsr2h,f,c
  6734  00043C  50DF               	movf	indf2,w,c
  6735                           
  6736                           ; Switch size 1, requested type "space"
  6737                           ; Number of cases is 4, Range of values is 5 to 8
  6738                           ; switch strategies available:
  6739                           ; Name         Instructions Cycles
  6740                           ; simple_byte           13     7 (average)
  6741                           ;	Chosen strategy is simple_byte
  6742  00043E  0A05               	xorlw	5	; case 5
  6743  000440  B4D8               	btfsc	status,2,c
  6744  000442  D696               	goto	i2l295
  6745  000444  0A03               	xorlw	3	; case 6
  6746  000446  B4D8               	btfsc	status,2,c
  6747  000448  D6B2               	goto	i2l299
  6748  00044A  0A01               	xorlw	1	; case 7
  6749  00044C  B4D8               	btfsc	status,2,c
  6750  00044E  D74C               	goto	i2l313
  6751  000450  0A0F               	xorlw	15	; case 8
  6752  000452  B4D8               	btfsc	status,2,c
  6753  000454  D70D               	goto	i2l3630
  6754  000456                     i2l293:
  6755                           
  6756                           ;my_i2c.c: 343: }
  6757                           ;my_i2c.c: 346: if (data_read || data_written) {
  6758  000456  0100               	movlb	0	; () banked
  6759  000458  0100               	movlb	0	; () banked
  6760  00045A  67C0               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  6761  00045C  D005               	goto	i2l327
  6762                           
  6763                           ; BSR set to: 0
  6764  00045E  0100               	movlb	0	; () banked
  6765  000460  0100               	movlb	0	; () banked
  6766  000462  51BB               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  6767  000464  B4D8               	btfsc	status,2,c
  6768  000466  D002               	goto	i2l3686
  6769  000468                     i2l327:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;my_i2c.c: 348: if (SSPCON1bits.CKP == 0) {
  6773  000468  A8C6               	btfss	4038,4,c	;volatile
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;my_i2c.c: 349: SSPCON1bits.CKP = 1;
  6777  00046A  88C6               	bsf	4038,4,c	;volatile
  6778  00046C                     i2l3686:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;my_i2c.c: 350: }
  6782                           ;my_i2c.c: 351: }
  6783                           ;my_i2c.c: 354: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6784  00046C  EE20 F00A          	lfsr	2,10
  6785  000470  504E               	movf	_ic_ptr,w,c
  6786  000472  26D9               	addwf	fsr2l,f,c
  6787  000474  504F               	movf	_ic_ptr+1,w,c
  6788  000476  22DA               	addwfc	fsr2h,f,c
  6789  000478  0E08               	movlw	8
  6790  00047A  64DF               	cpfsgt	indf2,c
  6791  00047C  D01B               	goto	i2l3692
  6792                           
  6793                           ; BSR set to: 0
  6794  00047E  0100               	movlb	0	; () banked
  6795  000480  0100               	movlb	0	; () banked
  6796  000482  67BF               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  6797  000484  D017               	goto	i2l3692
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;my_i2c.c: 355: ic_ptr->status = 0x5;
  6801  000486  EE20 F00D          	lfsr	2,13
  6802  00048A  504E               	movf	_ic_ptr,w,c
  6803  00048C  26D9               	addwf	fsr2l,f,c
  6804  00048E  504F               	movf	_ic_ptr+1,w,c
  6805  000490  22DA               	addwfc	fsr2h,f,c
  6806  000492  0E05               	movlw	5
  6807  000494  6EDF               	movwf	indf2,c
  6808                           
  6809                           ;my_i2c.c: 356: ic_ptr->error_count++;
  6810  000496  EE20 F00F          	lfsr	2,15
  6811  00049A  504E               	movf	_ic_ptr,w,c
  6812  00049C  26D9               	addwf	fsr2l,f,c
  6813  00049E  504F               	movf	_ic_ptr+1,w,c
  6814  0004A0  22DA               	addwfc	fsr2h,f,c
  6815  0004A2  2ADF               	incf	indf2,f,c
  6816                           
  6817                           ;my_i2c.c: 357: ic_ptr->error_code = 0x7;
  6818  0004A4  EE20 F00E          	lfsr	2,14
  6819  0004A8  504E               	movf	_ic_ptr,w,c
  6820  0004AA  26D9               	addwf	fsr2l,f,c
  6821  0004AC  504F               	movf	_ic_ptr+1,w,c
  6822  0004AE  22DA               	addwfc	fsr2h,f,c
  6823  0004B0  0E07               	movlw	7
  6824  0004B2  6EDF               	movwf	indf2,c
  6825  0004B4                     i2l3692:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;my_i2c.c: 358: }
  6829                           ;my_i2c.c: 360: if (msg_ready) {
  6830  0004B4  0100               	movlb	0	; () banked
  6831  0004B6  0100               	movlb	0	; () banked
  6832  0004B8  51BF               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  6833  0004BA  B4D8               	btfsc	status,2,c
  6834  0004BC  D034               	goto	i2l3700
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;my_i2c.c: 361: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6838  0004BE  EE20 F00C          	lfsr	2,12
  6839  0004C2  504E               	movf	_ic_ptr,w,c
  6840  0004C4  26D9               	addwf	fsr2l,f,c
  6841  0004C6  504F               	movf	_ic_ptr+1,w,c
  6842  0004C8  22DA               	addwfc	fsr2h,f,c
  6843  0004CA  EE10 F00A          	lfsr	1,10
  6844  0004CE  504E               	movf	_ic_ptr,w,c
  6845  0004D0  26E1               	addwf	fsr1l,f,c
  6846  0004D2  504F               	movf	_ic_ptr+1,w,c
  6847  0004D4  22E2               	addwfc	fsr1h,f,c
  6848  0004D6  50E7               	movf	indf1,w,c
  6849  0004D8  0100               	movlb	0	; () banked
  6850  0004DA  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6851  0004DC  0100               	movlb	0	; () banked
  6852  0004DE  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6853  0004E0  0D01               	mullw	1
  6854  0004E2  50F3               	movf	prodl,w,c
  6855  0004E4  244E               	addwf	_ic_ptr,w,c
  6856  0004E6  6EE1               	movwf	fsr1l,c
  6857  0004E8  50F4               	movf	prodh,w,c
  6858  0004EA  204F               	addwfc	_ic_ptr+1,w,c
  6859  0004EC  6EE2               	movwf	fsr1h,c
  6860  0004EE  CFDF FFE7          	movff	indf2,indf1
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;my_i2c.c: 362: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6864  0004F2  0100               	movlb	0	; () banked
  6865  0004F4  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6866  0004F6  0E28               	movlw	40
  6867  0004F8  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6868  0004FA  0100               	movlb	0	; () banked
  6869  0004FC  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6870  0004FE  C04F  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6871  000502  C04E  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6872  000506  EE20 F00A          	lfsr	2,10
  6873  00050A  504E               	movf	_ic_ptr,w,c
  6874  00050C  26D9               	addwf	fsr2l,f,c
  6875  00050E  504F               	movf	_ic_ptr+1,w,c
  6876  000510  22DA               	addwfc	fsr2h,f,c
  6877  000512  50DF               	movf	indf2,w,c
  6878  000514  0100               	movlb	0	; () banked
  6879  000516  6FB7               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  6880  000518  0100               	movlb	0	; () banked
  6881  00051A  29B7               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  6882  00051C  EC34  F00D         	call	_ToMainHigh_sendmsg
  6883                           
  6884                           ;my_i2c.c: 363: ic_ptr->buflen = 0;
  6885  000520  EE20 F00A          	lfsr	2,10
  6886  000524  D038               	goto	L7
  6887  000526                     i2l3700:
  6888  000526  EE20 F00F          	lfsr	2,15
  6889  00052A  504E               	movf	_ic_ptr,w,c
  6890  00052C  26D9               	addwf	fsr2l,f,c
  6891  00052E  504F               	movf	_ic_ptr+1,w,c
  6892  000530  22DA               	addwfc	fsr2h,f,c
  6893  000532  50DF               	movf	indf2,w,c
  6894  000534  B4D8               	btfsc	status,2,c
  6895  000536  D035               	goto	i2l3708
  6896                           
  6897                           ;my_i2c.c: 365: error_buf[0] = ic_ptr->error_count;
  6898  000538  EE20 F00F          	lfsr	2,15
  6899  00053C  504E               	movf	_ic_ptr,w,c
  6900  00053E  26D9               	addwf	fsr2l,f,c
  6901  000540  504F               	movf	_ic_ptr+1,w,c
  6902  000542  22DA               	addwfc	fsr2h,f,c
  6903  000544  50DF               	movf	indf2,w,c
  6904  000546  0100               	movlb	0	; () banked
  6905  000548  0100               	movlb	0	; () banked
  6906  00054A  6FB8               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  6907                           
  6908                           ;my_i2c.c: 366: error_buf[1] = ic_ptr->error_code;
  6909  00054C  EE20 F00E          	lfsr	2,14
  6910  000550  504E               	movf	_ic_ptr,w,c
  6911  000552  26D9               	addwf	fsr2l,f,c
  6912  000554  504F               	movf	_ic_ptr+1,w,c
  6913  000556  22DA               	addwfc	fsr2h,f,c
  6914  000558  50DF               	movf	indf2,w,c
  6915  00055A  0100               	movlb	0	; () banked
  6916  00055C  0100               	movlb	0	; () banked
  6917  00055E  6FB9               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  6918                           
  6919                           ;my_i2c.c: 367: error_buf[2] = ic_ptr->event_count;
  6920  000560  EE20 F00C          	lfsr	2,12
  6921  000564  504E               	movf	_ic_ptr,w,c
  6922  000566  26D9               	addwf	fsr2l,f,c
  6923  000568  504F               	movf	_ic_ptr+1,w,c
  6924  00056A  22DA               	addwfc	fsr2h,f,c
  6925  00056C  50DF               	movf	indf2,w,c
  6926  00056E  0100               	movlb	0	; () banked
  6927  000570  0100               	movlb	0	; () banked
  6928  000572  6FBA               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;my_i2c.c: 368: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6932  000574  0100               	movlb	0	; () banked
  6933  000576  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6934  000578  0E29               	movlw	41
  6935  00057A  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  6936  00057C  0100               	movlb	0	; () banked
  6937  00057E  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6938  000580  0100               	movlb	0	; () banked
  6939  000582  0E00               	movlw	high i2c_slave_int_handler@error_buf
  6940  000584  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  6941  000586  0100               	movlb	0	; () banked
  6942  000588  0EB8               	movlw	low i2c_slave_int_handler@error_buf
  6943  00058A  6E44               	movwf	ToMainHigh_sendmsg@data,c
  6944  00058C  0E03               	movlw	3
  6945  00058E  EC34  F00D         	call	_ToMainHigh_sendmsg
  6946                           
  6947                           ;my_i2c.c: 369: ic_ptr->error_count = 0;
  6948  000592  EE20 F00F          	lfsr	2,15
  6949  000596                     L7:
  6950  000596  504E               	movf	_ic_ptr,w,c
  6951  000598  26D9               	addwf	fsr2l,f,c
  6952  00059A  504F               	movf	_ic_ptr+1,w,c
  6953  00059C  22DA               	addwfc	fsr2h,f,c
  6954  00059E  0E00               	movlw	0
  6955  0005A0  6EDF               	movwf	indf2,c
  6956  0005A2                     i2l3708:
  6957                           
  6958                           ;my_i2c.c: 370: }
  6959                           ;my_i2c.c: 371: if (msg_to_send) {
  6960  0005A2  0100               	movlb	0	; () banked
  6961  0005A4  0100               	movlb	0	; () banked
  6962  0005A6  51BE               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  6963  0005A8  B4D8               	btfsc	status,2,c
  6964  0005AA  0012               	return	
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;my_i2c.c: 374: start_i2c_slave_reply(I2C_Buffer_Size, 0);
  6968  0005AC  0E00               	movlw	0
  6969  0005AE  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  6970  0005B0  0E00               	movlw	0
  6971  0005B2  6E2D               	movwf	start_i2c_slave_reply@msg,c
  6972  0005B4  5052               	movf	_I2C_Buffer_Size,w,c
  6973  0005B6  EC92  F005         	call	_start_i2c_slave_reply
  6974                           
  6975                           ;my_i2c.c: 375: msg_to_send = 0;
  6976  0005BA  0100               	movlb	0	; () banked
  6977  0005BC  6FB6               	movwf	??_i2c_slave_int_handler& (0+255),b
  6978  0005BE  0E00               	movlw	0
  6979  0005C0  0100               	movlb	0	; () banked
  6980  0005C2  0100               	movlb	0	; () banked
  6981  0005C4  6FBE               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6982  0005C6  0100               	movlb	0	; () banked
  6983  0005C8  51B6               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6984  0005CA  0012               	return	
  6985  0005CC                     __end_of_i2c_slave_int_handler:
  6986                           	opt stack 0
  6987                           pclatu	equ	0xFFB
  6988                           pclath	equ	0xFFA
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           postinc0	equ	0xFEE
  6997                           fsr0h	equ	0xFEA
  6998                           fsr0l	equ	0xFE9
  6999                           wreg	equ	0xFE8
  7000                           indf1	equ	0xFE7
  7001                           fsr1h	equ	0xFE2
  7002                           fsr1l	equ	0xFE1
  7003                           bsr	equ	0xFE0
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function _start_i2c_slave_reply *****************
  7012 ;; Defined at:
  7013 ;;		line 132 in file "../src/my_i2c.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  length          1    wreg     unsigned char 
  7016 ;;  msg             2   44[COMRAM] PTR unsigned char 
  7017 ;;		 -> NULL(0), 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  length          1   49[COMRAM] unsigned char 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;		None               void
  7022 ;; Registers used:
  7023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7029 ;;      Params:         2       0       0       0       0
  7030 ;;      Locals:         1       0       0       0       0
  7031 ;;      Temps:          3       0       0       0       0
  7032 ;;      Totals:         6       0       0       0       0
  7033 ;;Total ram usage:        6 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_i2c_slave_int_handler
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text45
  7043  000B24                     __ptext45:
  7044                           	opt stack 0
  7045  000B24                     _start_i2c_slave_reply:
  7046                           	opt stack 18
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;incstack = 0
  7050                           ;start_i2c_slave_reply@length stored from wreg
  7051  000B24  CFE8 F032          	movff	wreg,start_i2c_slave_reply@length
  7052                           
  7053                           ;my_i2c.c: 136: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  7054  000B28  EE20 F01A          	lfsr	2,26
  7055  000B2C  504E               	movf	_ic_ptr,w,c
  7056  000B2E  26D9               	addwf	fsr2l,f,c
  7057  000B30  504F               	movf	_ic_ptr+1,w,c
  7058  000B32  22DA               	addwfc	fsr2h,f,c
  7059  000B34  0E00               	movlw	0
  7060  000B36  6EDF               	movwf	indf2,c
  7061  000B38  D06B               	goto	i2l3480
  7062  000B3A                     i2l3468:
  7063                           
  7064                           ;my_i2c.c: 139: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  7065  000B3A  EE20 F01A          	lfsr	2,26
  7066  000B3E  504E               	movf	_ic_ptr,w,c
  7067  000B40  26D9               	addwf	fsr2l,f,c
  7068  000B42  504F               	movf	_ic_ptr+1,w,c
  7069  000B44  22DA               	addwfc	fsr2h,f,c
  7070  000B46  50DF               	movf	indf2,w,c
  7071  000B48  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7072  000B4A  EE20 F027          	lfsr	2,39
  7073  000B4E  504E               	movf	_ic_ptr,w,c
  7074  000B50  26D9               	addwf	fsr2l,f,c
  7075  000B52  504F               	movf	_ic_ptr+1,w,c
  7076  000B54  22DA               	addwfc	fsr2h,f,c
  7077  000B56  50DF               	movf	indf2,w,c
  7078  000B58  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  7079  000B5A  B0D8               	btfsc	status,0,c
  7080  000B5C  D01E               	goto	i2l3472
  7081                           
  7082                           ;my_i2c.c: 140: {
  7083                           ;my_i2c.c: 141: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  7084  000B5E  EE20 F01A          	lfsr	2,26
  7085  000B62  504E               	movf	_ic_ptr,w,c
  7086  000B64  26D9               	addwf	fsr2l,f,c
  7087  000B66  504F               	movf	_ic_ptr+1,w,c
  7088  000B68  22DA               	addwfc	fsr2h,f,c
  7089  000B6A  50DF               	movf	indf2,w,c
  7090  000B6C  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7091  000B6E  502F               	movf	??_start_i2c_slave_reply,w,c
  7092  000B70  0D01               	mullw	1
  7093  000B72  0E1D               	movlw	29
  7094  000B74  26F3               	addwf	prodl,f,c
  7095  000B76  0E00               	movlw	0
  7096  000B78  22F4               	addwfc	prodh,f,c
  7097  000B7A  50F3               	movf	prodl,w,c
  7098  000B7C  244E               	addwf	_ic_ptr,w,c
  7099  000B7E  6ED9               	movwf	fsr2l,c
  7100  000B80  50F4               	movf	prodh,w,c
  7101  000B82  204F               	addwfc	_ic_ptr+1,w,c
  7102  000B84  6EDA               	movwf	fsr2h,c
  7103  000B86  EE10 F01A          	lfsr	1,26
  7104  000B8A  504E               	movf	_ic_ptr,w,c
  7105  000B8C  26E1               	addwf	fsr1l,f,c
  7106  000B8E  504F               	movf	_ic_ptr+1,w,c
  7107  000B90  22E2               	addwfc	fsr1h,f,c
  7108  000B92  50E7               	movf	indf1,w,c
  7109  000B94  6E30               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  7110  000B96  5030               	movf	??_start_i2c_slave_reply+1,w,c
  7111  000B98  D027               	goto	L12
  7112  000B9A                     i2l3472:
  7113                           
  7114                           ;my_i2c.c: 143: else if(ic_ptr->sendBufLen != 0)
  7115  000B9A  EE20 F027          	lfsr	2,39
  7116  000B9E  504E               	movf	_ic_ptr,w,c
  7117  000BA0  26D9               	addwf	fsr2l,f,c
  7118  000BA2  504F               	movf	_ic_ptr+1,w,c
  7119  000BA4  22DA               	addwfc	fsr2h,f,c
  7120  000BA6  50DF               	movf	indf2,w,c
  7121  000BA8  B4D8               	btfsc	status,2,c
  7122  000BAA  D008               	goto	i2l3476
  7123                           
  7124                           ;my_i2c.c: 144: {
  7125                           ;my_i2c.c: 145: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  7126  000BAC  EE20 F027          	lfsr	2,39
  7127  000BB0  504E               	movf	_ic_ptr,w,c
  7128  000BB2  26D9               	addwf	fsr2l,f,c
  7129  000BB4  504F               	movf	_ic_ptr+1,w,c
  7130  000BB6  22DA               	addwfc	fsr2h,f,c
  7131  000BB8  50DF               	movf	indf2,w,c
  7132  000BBA  D001               	goto	L11
  7133  000BBC                     i2l3476:
  7134                           
  7135                           ;my_i2c.c: 147: else
  7136                           ;my_i2c.c: 148: {
  7137                           ;my_i2c.c: 149: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  7138  000BBC  5032               	movf	start_i2c_slave_reply@length,w,c
  7139  000BBE                     L11:
  7140  000BBE  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7141  000BC0  6A30               	clrf	(??_start_i2c_slave_reply+1)& (0+255),c
  7142  000BC2  0E1C               	movlw	28
  7143  000BC4  262F               	addwf	??_start_i2c_slave_reply,f,c
  7144  000BC6  0E00               	movlw	0
  7145  000BC8  2230               	addwfc	??_start_i2c_slave_reply+1,f,c
  7146  000BCA  502F               	movf	??_start_i2c_slave_reply,w,c
  7147  000BCC  244E               	addwf	_ic_ptr,w,c
  7148  000BCE  6ED9               	movwf	fsr2l,c
  7149  000BD0  5030               	movf	??_start_i2c_slave_reply+1,w,c
  7150  000BD2  204F               	addwfc	_ic_ptr+1,w,c
  7151  000BD4  6EDA               	movwf	fsr2h,c
  7152  000BD6  EE10 F01A          	lfsr	1,26
  7153  000BDA  504E               	movf	_ic_ptr,w,c
  7154  000BDC  26E1               	addwf	fsr1l,f,c
  7155  000BDE  504F               	movf	_ic_ptr+1,w,c
  7156  000BE0  22E2               	addwfc	fsr1h,f,c
  7157  000BE2  50E7               	movf	indf1,w,c
  7158  000BE4  6E31               	movwf	(??_start_i2c_slave_reply+2)& (0+255),c
  7159  000BE6  5031               	movf	??_start_i2c_slave_reply+2,w,c
  7160  000BE8                     L12:
  7161  000BE8  0D01               	mullw	1
  7162  000BEA  0E10               	movlw	16
  7163  000BEC  26F3               	addwf	prodl,f,c
  7164  000BEE  0E00               	movlw	0
  7165  000BF0  22F4               	addwfc	prodh,f,c
  7166  000BF2  50F3               	movf	prodl,w,c
  7167  000BF4  244E               	addwf	_ic_ptr,w,c
  7168  000BF6  6EE1               	movwf	fsr1l,c
  7169  000BF8  50F4               	movf	prodh,w,c
  7170  000BFA  204F               	addwfc	_ic_ptr+1,w,c
  7171  000BFC  6EE2               	movwf	fsr1h,c
  7172  000BFE  CFDF FFE7          	movff	indf2,indf1
  7173  000C02  EE20 F01A          	lfsr	2,26
  7174  000C06  504E               	movf	_ic_ptr,w,c
  7175  000C08  26D9               	addwf	fsr2l,f,c
  7176  000C0A  504F               	movf	_ic_ptr+1,w,c
  7177  000C0C  22DA               	addwfc	fsr2h,f,c
  7178  000C0E  2ADF               	incf	indf2,f,c
  7179  000C10                     i2l3480:
  7180  000C10  EE20 F01A          	lfsr	2,26
  7181  000C14  504E               	movf	_ic_ptr,w,c
  7182  000C16  26D9               	addwf	fsr2l,f,c
  7183  000C18  504F               	movf	_ic_ptr+1,w,c
  7184  000C1A  22DA               	addwfc	fsr2h,f,c
  7185  000C1C  50DF               	movf	indf2,w,c
  7186  000C1E  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  7187  000C20  5032               	movf	start_i2c_slave_reply@length,w,c
  7188  000C22  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  7189  000C24  A0D8               	btfss	status,0,c
  7190  000C26  D789               	goto	i2l3468
  7191                           
  7192                           ;my_i2c.c: 150: }
  7193                           ;my_i2c.c: 152: }
  7194                           ;my_i2c.c: 153: ic_ptr->sendBufLen =0;
  7195  000C28  EE20 F027          	lfsr	2,39
  7196  000C2C  504E               	movf	_ic_ptr,w,c
  7197  000C2E  26D9               	addwf	fsr2l,f,c
  7198  000C30  504F               	movf	_ic_ptr+1,w,c
  7199  000C32  22DA               	addwfc	fsr2h,f,c
  7200  000C34  0E00               	movlw	0
  7201  000C36  6EDF               	movwf	indf2,c
  7202                           
  7203                           ;my_i2c.c: 154: ic_ptr->outbuflen = length;
  7204  000C38  EE20 F01A          	lfsr	2,26
  7205  000C3C  504E               	movf	_ic_ptr,w,c
  7206  000C3E  26D9               	addwf	fsr2l,f,c
  7207  000C40  504F               	movf	_ic_ptr+1,w,c
  7208  000C42  22DA               	addwfc	fsr2h,f,c
  7209  000C44  C032  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7210                           
  7211                           ;my_i2c.c: 155: ic_ptr->outbufind = 1;
  7212  000C48  EE20 F01B          	lfsr	2,27
  7213  000C4C  504E               	movf	_ic_ptr,w,c
  7214  000C4E  26D9               	addwf	fsr2l,f,c
  7215  000C50  504F               	movf	_ic_ptr+1,w,c
  7216  000C52  22DA               	addwfc	fsr2h,f,c
  7217  000C54  0E01               	movlw	1
  7218  000C56  6EDF               	movwf	indf2,c
  7219                           
  7220                           ;my_i2c.c: 158: SSPBUF = ic_ptr->outbuffer[0];
  7221  000C58  EE20 F010          	lfsr	2,16
  7222  000C5C  504E               	movf	_ic_ptr,w,c
  7223  000C5E  26D9               	addwf	fsr2l,f,c
  7224  000C60  504F               	movf	_ic_ptr+1,w,c
  7225  000C62  22DA               	addwfc	fsr2h,f,c
  7226  000C64  50DF               	movf	indf2,w,c
  7227  000C66  6EC9               	movwf	4041,c	;volatile
  7228                           
  7229                           ;my_i2c.c: 161: SSPCON1bits.CKP = 1;
  7230  000C68  88C6               	bsf	4038,4,c	;volatile
  7231  000C6A  0012               	return	
  7232  000C6C                     __end_of_start_i2c_slave_reply:
  7233                           	opt stack 0
  7234                           pclatu	equ	0xFFB
  7235                           pclath	equ	0xFFA
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           postinc0	equ	0xFEE
  7244                           fsr0h	equ	0xFEA
  7245                           fsr0l	equ	0xFE9
  7246                           wreg	equ	0xFE8
  7247                           indf1	equ	0xFE7
  7248                           fsr1h	equ	0xFE2
  7249                           fsr1l	equ	0xFE1
  7250                           bsr	equ	0xFE0
  7251                           indf2	equ	0xFDF
  7252                           postinc2	equ	0xFDE
  7253                           postdec2	equ	0xFDD
  7254                           fsr2h	equ	0xFDA
  7255                           fsr2l	equ	0xFD9
  7256                           status	equ	0xFD8
  7257                           
  7258 ;; *************** function _handle_start *****************
  7259 ;; Defined at:
  7260 ;;		line 167 in file "../src/my_i2c.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  data_read       1    wreg     unsigned char 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  data_read       1   44[COMRAM] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;		None               void
  7267 ;; Registers used:
  7268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7274 ;;      Params:         0       0       0       0       0
  7275 ;;      Locals:         1       0       0       0       0
  7276 ;;      Temps:          0       0       0       0       0
  7277 ;;      Totals:         1       0       0       0       0
  7278 ;;Total ram usage:        1 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_i2c_slave_int_handler
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text46
  7288  001130                     __ptext46:
  7289                           	opt stack 0
  7290  001130                     _handle_start:
  7291                           	opt stack 18
  7292                           
  7293                           ;incstack = 0
  7294                           ;handle_start@data_read stored from wreg
  7295  001130  CFE8 F02D          	movff	wreg,handle_start@data_read
  7296                           
  7297                           ;my_i2c.c: 168: ic_ptr->event_count = 1;
  7298  001134  EE20 F00C          	lfsr	2,12
  7299  001138  504E               	movf	_ic_ptr,w,c
  7300  00113A  26D9               	addwf	fsr2l,f,c
  7301  00113C  504F               	movf	_ic_ptr+1,w,c
  7302  00113E  22DA               	addwfc	fsr2h,f,c
  7303  001140  0E01               	movlw	1
  7304  001142  6EDF               	movwf	indf2,c
  7305                           
  7306                           ;my_i2c.c: 169: ic_ptr->buflen = 0;
  7307  001144  EE20 F00A          	lfsr	2,10
  7308  001148  504E               	movf	_ic_ptr,w,c
  7309  00114A  26D9               	addwf	fsr2l,f,c
  7310  00114C  504F               	movf	_ic_ptr+1,w,c
  7311  00114E  22DA               	addwfc	fsr2h,f,c
  7312  001150  0E00               	movlw	0
  7313  001152  6EDF               	movwf	indf2,c
  7314                           
  7315                           ;my_i2c.c: 171: if (data_read) {
  7316  001154  502D               	movf	handle_start@data_read,w,c
  7317  001156  B4D8               	btfsc	status,2,c
  7318  001158  D02E               	goto	i2l3498
  7319                           
  7320                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 1) {
  7321  00115A  AAC7               	btfss	4039,5,c	;volatile
  7322  00115C  D018               	goto	i2l275
  7323                           
  7324                           ;my_i2c.c: 175: ic_ptr->status = 0x5;
  7325  00115E  EE20 F00D          	lfsr	2,13
  7326  001162  504E               	movf	_ic_ptr,w,c
  7327  001164  26D9               	addwf	fsr2l,f,c
  7328  001166  504F               	movf	_ic_ptr+1,w,c
  7329  001168  22DA               	addwfc	fsr2h,f,c
  7330  00116A  0E05               	movlw	5
  7331  00116C  6EDF               	movwf	indf2,c
  7332                           
  7333                           ;my_i2c.c: 176: ic_ptr->error_count++;
  7334  00116E  EE20 F00F          	lfsr	2,15
  7335  001172  504E               	movf	_ic_ptr,w,c
  7336  001174  26D9               	addwf	fsr2l,f,c
  7337  001176  504F               	movf	_ic_ptr+1,w,c
  7338  001178  22DA               	addwfc	fsr2h,f,c
  7339  00117A  2ADF               	incf	indf2,f,c
  7340                           
  7341                           ;my_i2c.c: 177: ic_ptr->error_code = 0x5;
  7342  00117C  EE20 F00E          	lfsr	2,14
  7343  001180  504E               	movf	_ic_ptr,w,c
  7344  001182  26D9               	addwf	fsr2l,f,c
  7345  001184  504F               	movf	_ic_ptr+1,w,c
  7346  001186  22DA               	addwfc	fsr2h,f,c
  7347  001188  0E05               	movlw	5
  7348  00118A  6EDF               	movwf	indf2,c
  7349                           
  7350                           ;my_i2c.c: 178: } else {
  7351  00118C  0012               	return	
  7352  00118E                     i2l275:
  7353                           
  7354                           ;my_i2c.c: 179: if (SSPSTATbits.R_W == 1) {
  7355  00118E  A4C7               	btfss	4039,2,c	;volatile
  7356  001190  D009               	goto	i2l3496
  7357                           
  7358                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  7359  001192  EE20 F00D          	lfsr	2,13
  7360  001196  504E               	movf	_ic_ptr,w,c
  7361  001198  26D9               	addwf	fsr2l,f,c
  7362  00119A  504F               	movf	_ic_ptr+1,w,c
  7363  00119C  22DA               	addwfc	fsr2h,f,c
  7364  00119E  0E08               	movlw	8
  7365  0011A0  6EDF               	movwf	indf2,c
  7366                           
  7367                           ;my_i2c.c: 181: } else {
  7368  0011A2  0012               	return	
  7369  0011A4                     i2l3496:
  7370                           
  7371                           ;my_i2c.c: 182: ic_ptr->status = 0x7;
  7372  0011A4  EE20 F00D          	lfsr	2,13
  7373  0011A8  504E               	movf	_ic_ptr,w,c
  7374  0011AA  26D9               	addwf	fsr2l,f,c
  7375  0011AC  504F               	movf	_ic_ptr+1,w,c
  7376  0011AE  22DA               	addwfc	fsr2h,f,c
  7377  0011B0  0E07               	movlw	7
  7378  0011B2  6EDF               	movwf	indf2,c
  7379  0011B4  0012               	return	
  7380  0011B6                     i2l3498:
  7381                           
  7382                           ;my_i2c.c: 186: ic_ptr->status = 0x6;
  7383  0011B6  EE20 F00D          	lfsr	2,13
  7384  0011BA  504E               	movf	_ic_ptr,w,c
  7385  0011BC  26D9               	addwf	fsr2l,f,c
  7386  0011BE  504F               	movf	_ic_ptr+1,w,c
  7387  0011C0  22DA               	addwfc	fsr2h,f,c
  7388  0011C2  0E06               	movlw	6
  7389  0011C4  6EDF               	movwf	indf2,c
  7390  0011C6  0012               	return	
  7391  0011C8                     __end_of_handle_start:
  7392                           	opt stack 0
  7393                           pclatu	equ	0xFFB
  7394                           pclath	equ	0xFFA
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           prodh	equ	0xFF4
  7400                           prodl	equ	0xFF3
  7401                           intcon	equ	0xFF2
  7402                           postinc0	equ	0xFEE
  7403                           fsr0h	equ	0xFEA
  7404                           fsr0l	equ	0xFE9
  7405                           wreg	equ	0xFE8
  7406                           indf1	equ	0xFE7
  7407                           fsr1h	equ	0xFE2
  7408                           fsr1l	equ	0xFE1
  7409                           bsr	equ	0xFE0
  7410                           indf2	equ	0xFDF
  7411                           postinc2	equ	0xFDE
  7412                           postdec2	equ	0xFDD
  7413                           fsr2h	equ	0xFDA
  7414                           fsr2l	equ	0xFD9
  7415                           status	equ	0xFD8
  7416                           
  7417 ;; *************** function _i2c_master_int_handler *****************
  7418 ;; Defined at:
  7419 ;;		line 452 in file "../src/my_i2c.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;		None
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;		None
  7424 ;; Return value:  Size  Location     Type
  7425 ;;		None               void
  7426 ;; Registers used:
  7427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7433 ;;      Params:         0       0       0       0       0
  7434 ;;      Locals:         0       0       0       0       0
  7435 ;;      Temps:          0       1       0       0       0
  7436 ;;      Totals:         0       1       0       0       0
  7437 ;;Total ram usage:        1 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    3
  7440 ;; This function calls:
  7441 ;;		_ToMainHigh_sendmsg
  7442 ;; This function is called by:
  7443 ;;		_i2c_int_handler
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text47
  7448  0005CC                     __ptext47:
  7449                           	opt stack 0
  7450  0005CC                     _i2c_master_int_handler:
  7451                           	opt stack 16
  7452                           
  7453                           ;my_i2c.c: 453: switch (ic_ptr->status){
  7454                           
  7455                           ;incstack = 0
  7456  0005CC  D154               	goto	i2l3570
  7457  0005CE                     i2l3502:
  7458                           
  7459                           ;my_i2c.c: 456: ic_ptr->status = 0x24;
  7460  0005CE  EE20 F00D          	lfsr	2,13
  7461  0005D2  504E               	movf	_ic_ptr,w,c
  7462  0005D4  26D9               	addwf	fsr2l,f,c
  7463  0005D6  504F               	movf	_ic_ptr+1,w,c
  7464  0005D8  22DA               	addwfc	fsr2h,f,c
  7465  0005DA  0E24               	movlw	36
  7466  0005DC  6EDF               	movwf	indf2,c
  7467                           
  7468                           ;my_i2c.c: 457: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  7469  0005DE  EE20 F01C          	lfsr	2,28
  7470  0005E2  504E               	movf	_ic_ptr,w,c
  7471  0005E4  26D9               	addwf	fsr2l,f,c
  7472  0005E6  504F               	movf	_ic_ptr+1,w,c
  7473  0005E8  22DA               	addwfc	fsr2h,f,c
  7474  0005EA  50DF               	movf	indf2,w,c
  7475  0005EC  0100               	movlb	0	; () banked
  7476  0005EE  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7477  0005F0  0100               	movlb	0	; () banked
  7478  0005F2  90D8               	bcf	status,0,c
  7479  0005F4  35B6               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  7480  0005F6  0BFE               	andlw	254
  7481  0005F8  6EC9               	movwf	4041,c	;volatile
  7482                           
  7483                           ;my_i2c.c: 458: break;
  7484  0005FA  0012               	return	
  7485  0005FC                     i2l346:
  7486                           
  7487                           ;my_i2c.c: 461: if (SSPCON2bits.ACKSTAT == 0) {
  7488  0005FC  BCC5               	btfsc	4037,6,c	;volatile
  7489  0005FE  D05B               	goto	i2l3520
  7490                           
  7491                           ;my_i2c.c: 462: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7492  000600  EE20 F01B          	lfsr	2,27
  7493  000604  504E               	movf	_ic_ptr,w,c
  7494  000606  26D9               	addwf	fsr2l,f,c
  7495  000608  504F               	movf	_ic_ptr+1,w,c
  7496  00060A  22DA               	addwfc	fsr2h,f,c
  7497  00060C  50DF               	movf	indf2,w,c
  7498  00060E  0100               	movlb	0	; () banked
  7499  000610  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7500  000612  EE20 F01A          	lfsr	2,26
  7501  000616  504E               	movf	_ic_ptr,w,c
  7502  000618  26D9               	addwf	fsr2l,f,c
  7503  00061A  504F               	movf	_ic_ptr+1,w,c
  7504  00061C  22DA               	addwfc	fsr2h,f,c
  7505  00061E  50DF               	movf	indf2,w,c
  7506  000620  0100               	movlb	0	; () banked
  7507  000622  5DB6               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7508  000624  B0D8               	btfsc	status,0,c
  7509  000626  D028               	goto	i2l3512
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;my_i2c.c: 463: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7513  000628  EE20 F01B          	lfsr	2,27
  7514  00062C  504E               	movf	_ic_ptr,w,c
  7515  00062E  26D9               	addwf	fsr2l,f,c
  7516  000630  504F               	movf	_ic_ptr+1,w,c
  7517  000632  22DA               	addwfc	fsr2h,f,c
  7518  000634  50DF               	movf	indf2,w,c
  7519  000636  0100               	movlb	0	; () banked
  7520  000638  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7521  00063A  0100               	movlb	0	; () banked
  7522  00063C  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7523  00063E  0D01               	mullw	1
  7524  000640  0E10               	movlw	16
  7525  000642  26F3               	addwf	prodl,f,c
  7526  000644  0E00               	movlw	0
  7527  000646  22F4               	addwfc	prodh,f,c
  7528  000648  50F3               	movf	prodl,w,c
  7529  00064A  244E               	addwf	_ic_ptr,w,c
  7530  00064C  6ED9               	movwf	fsr2l,c
  7531  00064E  50F4               	movf	prodh,w,c
  7532  000650  204F               	addwfc	_ic_ptr+1,w,c
  7533  000652  6EDA               	movwf	fsr2h,c
  7534  000654  50DF               	movf	indf2,w,c
  7535  000656  6EC9               	movwf	4041,c	;volatile
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;my_i2c.c: 464: ic_ptr->outbufind++;
  7539  000658  EE20 F01B          	lfsr	2,27
  7540  00065C  504E               	movf	_ic_ptr,w,c
  7541  00065E  26D9               	addwf	fsr2l,f,c
  7542  000660  504F               	movf	_ic_ptr+1,w,c
  7543  000662  22DA               	addwfc	fsr2h,f,c
  7544  000664  2ADF               	incf	indf2,f,c
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;my_i2c.c: 465: ic_ptr->status = 0x24;
  7548  000666  EE20 F00D          	lfsr	2,13
  7549  00066A  504E               	movf	_ic_ptr,w,c
  7550  00066C  26D9               	addwf	fsr2l,f,c
  7551  00066E  504F               	movf	_ic_ptr+1,w,c
  7552  000670  22DA               	addwfc	fsr2h,f,c
  7553  000672  0E24               	movlw	36
  7554  000674  6EDF               	movwf	indf2,c
  7555                           
  7556                           ;my_i2c.c: 466: }
  7557  000676  0012               	return	
  7558  000678                     i2l3512:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;my_i2c.c: 467: else {
  7562                           ;my_i2c.c: 468: ToMainHigh_sendmsg(0, 43, 0);
  7563  000678  0100               	movlb	0	; () banked
  7564  00067A  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7565  00067C  0E2B               	movlw	43
  7566  00067E  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7567  000680  0100               	movlb	0	; () banked
  7568  000682  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7569  000684  0E00               	movlw	0
  7570  000686  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7571  000688  0E00               	movlw	0
  7572  00068A  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7573  00068C  0E00               	movlw	0
  7574  00068E  EC34  F00D         	call	_ToMainHigh_sendmsg
  7575                           
  7576                           ;my_i2c.c: 469: ic_ptr->outbuflen = 0;
  7577  000692  EE20 F01A          	lfsr	2,26
  7578  000696  504E               	movf	_ic_ptr,w,c
  7579  000698  26D9               	addwf	fsr2l,f,c
  7580  00069A  504F               	movf	_ic_ptr+1,w,c
  7581  00069C  22DA               	addwfc	fsr2h,f,c
  7582  00069E  0E00               	movlw	0
  7583  0006A0  6EDF               	movwf	indf2,c
  7584                           
  7585                           ;my_i2c.c: 470: ic_ptr->status = 0x5;
  7586  0006A2  EE20 F00D          	lfsr	2,13
  7587  0006A6  504E               	movf	_ic_ptr,w,c
  7588  0006A8  26D9               	addwf	fsr2l,f,c
  7589  0006AA  504F               	movf	_ic_ptr+1,w,c
  7590  0006AC  22DA               	addwfc	fsr2h,f,c
  7591  0006AE  0E05               	movlw	5
  7592  0006B0  6EDF               	movwf	indf2,c
  7593                           
  7594                           ;my_i2c.c: 471: SSPCON2bits.PEN = 1;
  7595  0006B2  84C5               	bsf	4037,2,c	;volatile
  7596  0006B4  0012               	return	
  7597  0006B6                     i2l3520:
  7598                           
  7599                           ;my_i2c.c: 474: else {
  7600                           ;my_i2c.c: 475: ToMainHigh_sendmsg(0, 44, 0);
  7601  0006B6  0100               	movlb	0	; () banked
  7602  0006B8  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7603  0006BA  0E2C               	movlw	44
  7604  0006BC  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7605  0006BE  0100               	movlb	0	; () banked
  7606  0006C0  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7607  0006C2  0E00               	movlw	0
  7608  0006C4  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7609  0006C6  0E00               	movlw	0
  7610  0006C8  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7611  0006CA  0E00               	movlw	0
  7612  0006CC  EC34  F00D         	call	_ToMainHigh_sendmsg
  7613                           
  7614                           ;my_i2c.c: 476: ic_ptr->status = 0x5;
  7615  0006D0  EE20 F00D          	lfsr	2,13
  7616  0006D4  504E               	movf	_ic_ptr,w,c
  7617  0006D6  26D9               	addwf	fsr2l,f,c
  7618  0006D8  504F               	movf	_ic_ptr+1,w,c
  7619  0006DA  22DA               	addwfc	fsr2h,f,c
  7620  0006DC  0E05               	movlw	5
  7621  0006DE  6EDF               	movwf	indf2,c
  7622                           
  7623                           ;my_i2c.c: 477: SSPCON2bits.PEN = 1;
  7624  0006E0  84C5               	bsf	4037,2,c	;volatile
  7625  0006E2  0012               	return	
  7626  0006E4                     i2l3526:
  7627                           
  7628                           ;my_i2c.c: 482: ToMainHigh_sendmsg(0, 43, 0);
  7629  0006E4  0100               	movlb	0	; () banked
  7630  0006E6  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7631  0006E8  0E2B               	movlw	43
  7632  0006EA  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7633  0006EC  0100               	movlb	0	; () banked
  7634  0006EE  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7635  0006F0  0E00               	movlw	0
  7636  0006F2  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7637  0006F4  0E00               	movlw	0
  7638  0006F6  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7639  0006F8  0E00               	movlw	0
  7640  0006FA  EC34  F00D         	call	_ToMainHigh_sendmsg
  7641                           
  7642                           ;my_i2c.c: 483: ic_ptr->status = 0x5;
  7643  0006FE  EE20 F00D          	lfsr	2,13
  7644  000702  504E               	movf	_ic_ptr,w,c
  7645  000704  26D9               	addwf	fsr2l,f,c
  7646  000706  504F               	movf	_ic_ptr+1,w,c
  7647  000708  22DA               	addwfc	fsr2h,f,c
  7648  00070A  0E05               	movlw	5
  7649  00070C  6EDF               	movwf	indf2,c
  7650                           
  7651                           ;my_i2c.c: 484: break;
  7652  00070E  0012               	return	
  7653  000710                     i2l3530:
  7654                           
  7655                           ;my_i2c.c: 491: ic_ptr->status = 0x27;
  7656  000710  EE20 F00D          	lfsr	2,13
  7657  000714  504E               	movf	_ic_ptr,w,c
  7658  000716  26D9               	addwf	fsr2l,f,c
  7659  000718  504F               	movf	_ic_ptr+1,w,c
  7660  00071A  22DA               	addwfc	fsr2h,f,c
  7661  00071C  0E27               	movlw	39
  7662  00071E  6EDF               	movwf	indf2,c
  7663                           
  7664                           ;my_i2c.c: 492: SSPBUF = ((ic_ptr->slave_addr << 1) | 0x01) & 0xFF;
  7665  000720  EE20 F01C          	lfsr	2,28
  7666  000724  504E               	movf	_ic_ptr,w,c
  7667  000726  26D9               	addwf	fsr2l,f,c
  7668  000728  504F               	movf	_ic_ptr+1,w,c
  7669  00072A  22DA               	addwfc	fsr2h,f,c
  7670  00072C  50DF               	movf	indf2,w,c
  7671  00072E  0100               	movlb	0	; () banked
  7672  000730  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7673  000732  0100               	movlb	0	; () banked
  7674  000734  80D8               	bsf	status,0,c
  7675  000736  35B6               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  7676  000738  6EC9               	movwf	4041,c	;volatile
  7677                           
  7678                           ;my_i2c.c: 493: break;
  7679  00073A  0012               	return	
  7680  00073C                     i2l353:
  7681                           
  7682                           ;my_i2c.c: 496: if (SSPCON2bits.ACKSTAT == 0) {
  7683  00073C  BCC5               	btfsc	4037,6,c	;volatile
  7684  00073E  D00A               	goto	i2l3536
  7685                           
  7686                           ;my_i2c.c: 498: ic_ptr->status = 0x15;
  7687  000740  EE20 F00D          	lfsr	2,13
  7688  000744  504E               	movf	_ic_ptr,w,c
  7689  000746  26D9               	addwf	fsr2l,f,c
  7690  000748  504F               	movf	_ic_ptr+1,w,c
  7691  00074A  22DA               	addwfc	fsr2h,f,c
  7692  00074C  0E15               	movlw	21
  7693  00074E  6EDF               	movwf	indf2,c
  7694                           
  7695                           ;my_i2c.c: 499: SSPCON2bits.RCEN = 1;
  7696  000750  86C5               	bsf	4037,3,c	;volatile
  7697                           
  7698                           ;my_i2c.c: 500: }
  7699  000752  0012               	return	
  7700  000754                     i2l3536:
  7701                           
  7702                           ;my_i2c.c: 501: else {
  7703                           ;my_i2c.c: 502: ToMainHigh_sendmsg(0, 46, 0);
  7704  000754  0100               	movlb	0	; () banked
  7705  000756  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7706  000758  0E2E               	movlw	46
  7707  00075A  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7708  00075C  0100               	movlb	0	; () banked
  7709  00075E  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7710  000760  0E00               	movlw	0
  7711  000762  6E45               	movwf	ToMainHigh_sendmsg@data+1,c
  7712  000764  0E00               	movlw	0
  7713  000766  6E44               	movwf	ToMainHigh_sendmsg@data,c
  7714  000768  0E00               	movlw	0
  7715  00076A  EC34  F00D         	call	_ToMainHigh_sendmsg
  7716                           
  7717                           ;my_i2c.c: 503: ic_ptr->status = 0x5;
  7718  00076E  EE20 F00D          	lfsr	2,13
  7719  000772  504E               	movf	_ic_ptr,w,c
  7720  000774  26D9               	addwf	fsr2l,f,c
  7721  000776  504F               	movf	_ic_ptr+1,w,c
  7722  000778  22DA               	addwfc	fsr2h,f,c
  7723  00077A  0E05               	movlw	5
  7724  00077C  6EDF               	movwf	indf2,c
  7725                           
  7726                           ;my_i2c.c: 504: SSPCON2bits.PEN = 1;
  7727  00077E  84C5               	bsf	4037,2,c	;volatile
  7728  000780  0012               	return	
  7729  000782                     i2l3542:
  7730                           
  7731                           ;my_i2c.c: 511: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7732  000782  EE20 F00B          	lfsr	2,11
  7733  000786  504E               	movf	_ic_ptr,w,c
  7734  000788  26D9               	addwf	fsr2l,f,c
  7735  00078A  504F               	movf	_ic_ptr+1,w,c
  7736  00078C  22DA               	addwfc	fsr2h,f,c
  7737  00078E  50DF               	movf	indf2,w,c
  7738  000790  0100               	movlb	0	; () banked
  7739  000792  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7740  000794  0100               	movlb	0	; () banked
  7741  000796  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7742  000798  0D01               	mullw	1
  7743  00079A  50F3               	movf	prodl,w,c
  7744  00079C  244E               	addwf	_ic_ptr,w,c
  7745  00079E  6ED9               	movwf	fsr2l,c
  7746  0007A0  50F4               	movf	prodh,w,c
  7747  0007A2  204F               	addwfc	_ic_ptr+1,w,c
  7748  0007A4  6EDA               	movwf	fsr2h,c
  7749  0007A6  CFC9 FFDF          	movff	4041,indf2	;volatile
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;my_i2c.c: 512: ic_ptr->bufind++;
  7753  0007AA  EE20 F00B          	lfsr	2,11
  7754  0007AE  504E               	movf	_ic_ptr,w,c
  7755  0007B0  26D9               	addwf	fsr2l,f,c
  7756  0007B2  504F               	movf	_ic_ptr+1,w,c
  7757  0007B4  22DA               	addwfc	fsr2h,f,c
  7758  0007B6  2ADF               	incf	indf2,f,c
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;my_i2c.c: 513: ic_ptr->status = 0x14;
  7762  0007B8  EE20 F00D          	lfsr	2,13
  7763  0007BC  504E               	movf	_ic_ptr,w,c
  7764  0007BE  26D9               	addwf	fsr2l,f,c
  7765  0007C0  504F               	movf	_ic_ptr+1,w,c
  7766  0007C2  22DA               	addwfc	fsr2h,f,c
  7767  0007C4  0E14               	movlw	20
  7768  0007C6  6EDF               	movwf	indf2,c
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;my_i2c.c: 515: if (ic_ptr->bufind < ic_ptr->buflen) {
  7772  0007C8  EE20 F00B          	lfsr	2,11
  7773  0007CC  504E               	movf	_ic_ptr,w,c
  7774  0007CE  26D9               	addwf	fsr2l,f,c
  7775  0007D0  504F               	movf	_ic_ptr+1,w,c
  7776  0007D2  22DA               	addwfc	fsr2h,f,c
  7777  0007D4  50DF               	movf	indf2,w,c
  7778  0007D6  0100               	movlb	0	; () banked
  7779  0007D8  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7780  0007DA  EE20 F00A          	lfsr	2,10
  7781  0007DE  504E               	movf	_ic_ptr,w,c
  7782  0007E0  26D9               	addwf	fsr2l,f,c
  7783  0007E2  504F               	movf	_ic_ptr+1,w,c
  7784  0007E4  22DA               	addwfc	fsr2h,f,c
  7785  0007E6  50DF               	movf	indf2,w,c
  7786  0007E8  0100               	movlb	0	; () banked
  7787  0007EA  5DB6               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7788  0007EC  B0D8               	btfsc	status,0,c
  7789  0007EE  D003               	goto	i2l357
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;my_i2c.c: 516: SSPCON2bits.ACKDT = 0;
  7793  0007F0  9AC5               	bcf	4037,5,c	;volatile
  7794                           
  7795                           ;my_i2c.c: 517: SSPCON2bits.ACKEN = 1;
  7796  0007F2  88C5               	bsf	4037,4,c	;volatile
  7797                           
  7798                           ;my_i2c.c: 518: }
  7799  0007F4  0012               	return	
  7800  0007F6                     i2l357:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;my_i2c.c: 519: else {
  7804                           ;my_i2c.c: 520: SSPCON2bits.ACKDT = 1;
  7805  0007F6  8AC5               	bsf	4037,5,c	;volatile
  7806                           
  7807                           ;my_i2c.c: 521: SSPCON2bits.ACKEN = 1;
  7808  0007F8  88C5               	bsf	4037,4,c	;volatile
  7809  0007FA  0012               	return	
  7810  0007FC                     i2l3552:
  7811                           
  7812                           ;my_i2c.c: 526: if (ic_ptr->bufind < ic_ptr->buflen) {
  7813  0007FC  EE20 F00B          	lfsr	2,11
  7814  000800  504E               	movf	_ic_ptr,w,c
  7815  000802  26D9               	addwf	fsr2l,f,c
  7816  000804  504F               	movf	_ic_ptr+1,w,c
  7817  000806  22DA               	addwfc	fsr2h,f,c
  7818  000808  50DF               	movf	indf2,w,c
  7819  00080A  0100               	movlb	0	; () banked
  7820  00080C  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7821  00080E  EE20 F00A          	lfsr	2,10
  7822  000812  504E               	movf	_ic_ptr,w,c
  7823  000814  26D9               	addwf	fsr2l,f,c
  7824  000816  504F               	movf	_ic_ptr+1,w,c
  7825  000818  22DA               	addwfc	fsr2h,f,c
  7826  00081A  50DF               	movf	indf2,w,c
  7827  00081C  0100               	movlb	0	; () banked
  7828  00081E  5DB6               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7829  000820  B0D8               	btfsc	status,0,c
  7830  000822  D00A               	goto	i2l3558
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;my_i2c.c: 527: ic_ptr->status = 0x15;
  7834  000824  EE20 F00D          	lfsr	2,13
  7835  000828  504E               	movf	_ic_ptr,w,c
  7836  00082A  26D9               	addwf	fsr2l,f,c
  7837  00082C  504F               	movf	_ic_ptr+1,w,c
  7838  00082E  22DA               	addwfc	fsr2h,f,c
  7839  000830  0E15               	movlw	21
  7840  000832  6EDF               	movwf	indf2,c
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;my_i2c.c: 528: SSPCON2bits.RCEN = 1;
  7844  000834  86C5               	bsf	4037,3,c	;volatile
  7845                           
  7846                           ;my_i2c.c: 529: }
  7847  000836  0012               	return	
  7848  000838                     i2l3558:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;my_i2c.c: 530: else {
  7852                           ;my_i2c.c: 531: ToMainHigh_sendmsg(ic_ptr->buflen, 45, (void *)(ic_ptr->buffer));
  7853  000838  0100               	movlb	0	; () banked
  7854  00083A  6FB6               	movwf	??_i2c_master_int_handler& (0+255),b
  7855  00083C  0E2D               	movlw	45
  7856  00083E  6E43               	movwf	ToMainHigh_sendmsg@msgtype,c
  7857  000840  0100               	movlb	0	; () banked
  7858  000842  51B6               	movf	??_i2c_master_int_handler& (0+255),w,b
  7859  000844  C04F  F045         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7860  000848  C04E  F044         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7861  00084C  EE20 F00A          	lfsr	2,10
  7862  000850  504E               	movf	_ic_ptr,w,c
  7863  000852  26D9               	addwf	fsr2l,f,c
  7864  000854  504F               	movf	_ic_ptr+1,w,c
  7865  000856  22DA               	addwfc	fsr2h,f,c
  7866  000858  50DF               	movf	indf2,w,c
  7867  00085A  EC34  F00D         	call	_ToMainHigh_sendmsg
  7868                           
  7869                           ;my_i2c.c: 532: ic_ptr->status = 0x5;
  7870  00085E  EE20 F00D          	lfsr	2,13
  7871  000862  504E               	movf	_ic_ptr,w,c
  7872  000864  26D9               	addwf	fsr2l,f,c
  7873  000866  504F               	movf	_ic_ptr+1,w,c
  7874  000868  22DA               	addwfc	fsr2h,f,c
  7875  00086A  0E05               	movlw	5
  7876  00086C  6EDF               	movwf	indf2,c
  7877                           
  7878                           ;my_i2c.c: 533: SSPCON2bits.PEN = 1;
  7879  00086E  84C5               	bsf	4037,2,c	;volatile
  7880                           
  7881                           ;my_i2c.c: 534: SSPCON2bits.ACKDT = 0;
  7882  000870  9AC5               	bcf	4037,5,c	;volatile
  7883                           
  7884                           ;my_i2c.c: 535: SSPCON2bits.ACKEN = 1;
  7885  000872  88C5               	bsf	4037,4,c	;volatile
  7886  000874  0012               	return	
  7887  000876                     i2l3570:
  7888  000876  EE20 F00D          	lfsr	2,13
  7889  00087A  504E               	movf	_ic_ptr,w,c
  7890  00087C  26D9               	addwf	fsr2l,f,c
  7891  00087E  504F               	movf	_ic_ptr+1,w,c
  7892  000880  22DA               	addwfc	fsr2h,f,c
  7893  000882  50DF               	movf	indf2,w,c
  7894                           
  7895                           ; Switch size 1, requested type "space"
  7896                           ; Number of cases is 7, Range of values is 9 to 39
  7897                           ; switch strategies available:
  7898                           ; Name         Instructions Cycles
  7899                           ; simple_byte           22    12 (average)
  7900                           ;	Chosen strategy is simple_byte
  7901  000884  0A09               	xorlw	9	; case 9
  7902  000886  B4D8               	btfsc	status,2,c
  7903  000888  D6A2               	goto	i2l3502
  7904  00088A  0A19               	xorlw	25	; case 16
  7905  00088C  B4D8               	btfsc	status,2,c
  7906  00088E  D740               	goto	i2l3530
  7907  000890  0A03               	xorlw	3	; case 19
  7908  000892  B4D8               	btfsc	status,2,c
  7909  000894  D727               	goto	i2l3526
  7910  000896  0A07               	xorlw	7	; case 20
  7911  000898  B4D8               	btfsc	status,2,c
  7912  00089A  D7B0               	goto	i2l3552
  7913  00089C  0A01               	xorlw	1	; case 21
  7914  00089E  B4D8               	btfsc	status,2,c
  7915  0008A0  D770               	goto	i2l3542
  7916  0008A2  0A31               	xorlw	49	; case 36
  7917  0008A4  B4D8               	btfsc	status,2,c
  7918  0008A6  D6AA               	goto	i2l346
  7919  0008A8  0A03               	xorlw	3	; case 39
  7920  0008AA  A4D8               	btfss	status,2,c
  7921  0008AC  0012               	return	
  7922  0008AE  D746               	goto	i2l353
  7923  0008B0                     __end_of_i2c_master_int_handler:
  7924                           	opt stack 0
  7925                           pclatu	equ	0xFFB
  7926                           pclath	equ	0xFFA
  7927                           tblptru	equ	0xFF8
  7928                           tblptrh	equ	0xFF7
  7929                           tblptrl	equ	0xFF6
  7930                           tablat	equ	0xFF5
  7931                           prodh	equ	0xFF4
  7932                           prodl	equ	0xFF3
  7933                           intcon	equ	0xFF2
  7934                           postinc0	equ	0xFEE
  7935                           fsr0h	equ	0xFEA
  7936                           fsr0l	equ	0xFE9
  7937                           wreg	equ	0xFE8
  7938                           indf1	equ	0xFE7
  7939                           fsr1h	equ	0xFE2
  7940                           fsr1l	equ	0xFE1
  7941                           bsr	equ	0xFE0
  7942                           indf2	equ	0xFDF
  7943                           postinc2	equ	0xFDE
  7944                           postdec2	equ	0xFDD
  7945                           fsr2h	equ	0xFDA
  7946                           fsr2l	equ	0xFD9
  7947                           status	equ	0xFD8
  7948                           
  7949 ;; *************** function _ToMainHigh_sendmsg *****************
  7950 ;; Defined at:
  7951 ;;		line 126 in file "../src/messages.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  length          1    wreg     unsigned char 
  7954 ;;  msgtype         1   66[COMRAM] unsigned char 
  7955 ;;  data            2   67[COMRAM] PTR void 
  7956 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  length          1   69[COMRAM] unsigned char 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      char 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7968 ;;      Params:         3       0       0       0       0
  7969 ;;      Locals:         1       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0
  7971 ;;      Totals:         4       0       0       0       0
  7972 ;;Total ram usage:        4 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    2
  7975 ;; This function calls:
  7976 ;;		i2_send_msg
  7977 ;; This function is called by:
  7978 ;;		_i2c_slave_int_handler
  7979 ;;		_i2c_master_int_handler
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text48
  7984  001A68                     __ptext48:
  7985                           	opt stack 0
  7986  001A68                     _ToMainHigh_sendmsg:
  7987                           	opt stack 16
  7988                           
  7989                           ;incstack = 0
  7990                           ;ToMainHigh_sendmsg@length stored from wreg
  7991  001A68  CFE8 F046          	movff	wreg,ToMainHigh_sendmsg@length
  7992                           
  7993                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7994                           ;	Return value of _ToMainHigh_sendmsg is never used
  7995  001A6C  0101               	movlb	1	; () banked
  7996  001A6E  0E01               	movlw	high _ToMainHigh_MQ
  7997  001A70  6E38               	movwf	i2send_msg@qptr+1,c
  7998  001A72  0101               	movlb	1	; () banked
  7999  001A74  0E6C               	movlw	low _ToMainHigh_MQ
  8000  001A76  6E37               	movwf	i2send_msg@qptr,c
  8001  001A78  C046  F039         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8002  001A7C  C043  F03A         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8003  001A80  C045  F03C         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8004  001A84  C044  F03B         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8005  001A88  ECA8  F007         	call	i2_send_msg	;wreg free
  8006  001A8C  0012               	return	
  8007  001A8E                     __end_of_ToMainHigh_sendmsg:
  8008                           	opt stack 0
  8009                           pclatu	equ	0xFFB
  8010                           pclath	equ	0xFFA
  8011                           tblptru	equ	0xFF8
  8012                           tblptrh	equ	0xFF7
  8013                           tblptrl	equ	0xFF6
  8014                           tablat	equ	0xFF5
  8015                           prodh	equ	0xFF4
  8016                           prodl	equ	0xFF3
  8017                           intcon	equ	0xFF2
  8018                           postinc0	equ	0xFEE
  8019                           fsr0h	equ	0xFEA
  8020                           fsr0l	equ	0xFE9
  8021                           wreg	equ	0xFE8
  8022                           indf1	equ	0xFE7
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           bsr	equ	0xFE0
  8026                           indf2	equ	0xFDF
  8027                           postinc2	equ	0xFDE
  8028                           postdec2	equ	0xFDD
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function i2_send_msg *****************
  8034 ;; Defined at:
  8035 ;;		line 24 in file "../src/messages.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  qptr            2   54[COMRAM] PTR struct __msg_queue
  8038 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8039 ;;  length          1   56[COMRAM] unsigned char 
  8040 ;;  msgtype         1   57[COMRAM] unsigned char 
  8041 ;;  data            2   58[COMRAM] PTR void 
  8042 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(53), 
  8043 ;;		 -> main@uc(5), 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  send_msg        2   64[COMRAM] PTR struct __msg
  8046 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8047 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8048 ;;  send_msg        2   61[COMRAM] unsigned int 
  8049 ;;  send_msg        1   63[COMRAM] unsigned char 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      char 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8059 ;;      Params:         6       0       0       0       0
  8060 ;;      Locals:         5       0       0       0       0
  8061 ;;      Temps:          1       0       0       0       0
  8062 ;;      Totals:        12       0       0       0       0
  8063 ;;Total ram usage:       12 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    1
  8066 ;; This function calls:
  8067 ;;		i2_memcpy
  8068 ;; This function is called by:
  8069 ;;		_ToMainHigh_sendmsg
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text49
  8074  000F50                     __ptext49:
  8075                           	opt stack 0
  8076  000F50                     i2_send_msg:
  8077                           	opt stack 16
  8078                           
  8079                           ;messages.c: 25: unsigned char slot;
  8080                           ;messages.c: 27: msg *qmsg;
  8081                           ;messages.c: 28: size_t tlength = length;
  8082                           
  8083                           ;incstack = 0
  8084  000F50  C039  F03E         	movff	i2send_msg@length,i2send_msg@tlength
  8085  000F54  6A3F               	clrf	i2send_msg@tlength+1,c
  8086                           
  8087                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8088  000F56  EE20 F034          	lfsr	2,52
  8089  000F5A  5037               	movf	i2send_msg@qptr,w,c
  8090  000F5C  26D9               	addwf	fsr2l,f,c
  8091  000F5E  5038               	movf	i2send_msg@qptr+1,w,c
  8092  000F60  22DA               	addwfc	fsr2h,f,c
  8093  000F62  50DF               	movf	indf2,w,c
  8094  000F64  6E40               	movwf	i2send_msg@slot,c
  8095                           
  8096                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8097  000F66  5040               	movf	i2send_msg@slot,w,c
  8098  000F68  0D0D               	mullw	13
  8099  000F6A  50F3               	movf	prodl,w,c
  8100  000F6C  2437               	addwf	i2send_msg@qptr,w,c
  8101  000F6E  6E41               	movwf	i2send_msg@qmsg,c
  8102  000F70  50F4               	movf	prodh,w,c
  8103  000F72  2038               	addwfc	i2send_msg@qptr+1,w,c
  8104  000F74  6E42               	movwf	i2send_msg@qmsg+1,c
  8105                           
  8106                           ;messages.c: 41: if (qmsg->full != 0) {
  8107  000F76  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8108  000F7A  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8109  000F7E  50DF               	movf	indf2,w,c
  8110  000F80  B4D8               	btfsc	status,2,c
  8111  000F82  D002               	goto	i2l3742
  8112                           
  8113                           ;messages.c: 42: return (-1);
  8114  000F84  0EFF               	movlw	255
  8115  000F86  0012               	return	
  8116  000F88                     i2l3742:
  8117                           
  8118                           ;messages.c: 43: }
  8119                           ;messages.c: 46: qmsg->length = length;
  8120  000F88  EE20 F001          	lfsr	2,1
  8121  000F8C  5041               	movf	i2send_msg@qmsg,w,c
  8122  000F8E  26D9               	addwf	fsr2l,f,c
  8123  000F90  5042               	movf	i2send_msg@qmsg+1,w,c
  8124  000F92  22DA               	addwfc	fsr2h,f,c
  8125  000F94  C039  FFDF         	movff	i2send_msg@length,indf2
  8126                           
  8127                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8128  000F98  EE20 F002          	lfsr	2,2
  8129  000F9C  5041               	movf	i2send_msg@qmsg,w,c
  8130  000F9E  26D9               	addwf	fsr2l,f,c
  8131  000FA0  5042               	movf	i2send_msg@qmsg+1,w,c
  8132  000FA2  22DA               	addwfc	fsr2h,f,c
  8133  000FA4  C03A  FFDF         	movff	i2send_msg@msgtype,indf2
  8134                           
  8135                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8136  000FA8  0E03               	movlw	3
  8137  000FAA  2441               	addwf	i2send_msg@qmsg,w,c
  8138  000FAC  6E2D               	movwf	i2memcpy@d1,c
  8139  000FAE  0E00               	movlw	0
  8140  000FB0  2042               	addwfc	i2send_msg@qmsg+1,w,c
  8141  000FB2  6E2E               	movwf	i2memcpy@d1+1,c
  8142  000FB4  C03C  F030         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8143  000FB8  C03B  F02F         	movff	i2send_msg@data,i2memcpy@s1
  8144  000FBC  C03E  F031         	movff	i2send_msg@tlength,i2memcpy@n
  8145  000FC0  C03F  F032         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8146  000FC4  EC13  F00C         	call	i2_memcpy	;wreg free
  8147                           
  8148                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8149  000FC8  EE20 F034          	lfsr	2,52
  8150  000FCC  5037               	movf	i2send_msg@qptr,w,c
  8151  000FCE  26D9               	addwf	fsr2l,f,c
  8152  000FD0  5038               	movf	i2send_msg@qptr+1,w,c
  8153  000FD2  22DA               	addwfc	fsr2h,f,c
  8154  000FD4  EE10 F034          	lfsr	1,52
  8155  000FD8  5037               	movf	i2send_msg@qptr,w,c
  8156  000FDA  26E1               	addwf	fsr1l,f,c
  8157  000FDC  5038               	movf	i2send_msg@qptr+1,w,c
  8158  000FDE  22E2               	addwfc	fsr1h,f,c
  8159  000FE0  50E7               	movf	indf1,w,c
  8160  000FE2  6E3D               	movwf	??i2_send_msg& (0+255),c
  8161  000FE4  283D               	incf	??i2_send_msg,w,c
  8162  000FE6  0B03               	andlw	3
  8163  000FE8  6EDF               	movwf	indf2,c
  8164                           
  8165                           ;messages.c: 59: qmsg->full = 1;
  8166  000FEA  C041  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8167  000FEE  C042  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8168  000FF2  0E01               	movlw	1
  8169  000FF4  6EDF               	movwf	indf2,c
  8170                           
  8171                           ;messages.c: 60: return (1);
  8172  000FF6  0E01               	movlw	1
  8173  000FF8  0012               	return	
  8174  000FFA                     __end_ofi2_send_msg:
  8175                           	opt stack 0
  8176                           pclatu	equ	0xFFB
  8177                           pclath	equ	0xFFA
  8178                           tblptru	equ	0xFF8
  8179                           tblptrh	equ	0xFF7
  8180                           tblptrl	equ	0xFF6
  8181                           tablat	equ	0xFF5
  8182                           prodh	equ	0xFF4
  8183                           prodl	equ	0xFF3
  8184                           intcon	equ	0xFF2
  8185                           postinc0	equ	0xFEE
  8186                           fsr0h	equ	0xFEA
  8187                           fsr0l	equ	0xFE9
  8188                           wreg	equ	0xFE8
  8189                           indf1	equ	0xFE7
  8190                           fsr1h	equ	0xFE2
  8191                           fsr1l	equ	0xFE1
  8192                           bsr	equ	0xFE0
  8193                           indf2	equ	0xFDF
  8194                           postinc2	equ	0xFDE
  8195                           postdec2	equ	0xFDD
  8196                           fsr2h	equ	0xFDA
  8197                           fsr2l	equ	0xFD9
  8198                           status	equ	0xFD8
  8199                           
  8200 ;; *************** function i2_memcpy *****************
  8201 ;; Defined at:
  8202 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  d1              2   44[COMRAM] PTR void 
  8205 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8206 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8207 ;;		 -> main@msgbuffer(11), 
  8208 ;;  s1              2   46[COMRAM] PTR const void 
  8209 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8210 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8211 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8212 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  8213 ;;		 -> main@uc(5), 
  8214 ;;  n               2   48[COMRAM] unsigned int 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  memcpy          2   52[COMRAM] PTR const unsigned char 
  8217 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8218 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8219 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8220 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(53), 
  8221 ;;		 -> main@uc(5), 
  8222 ;;  memcpy          2   50[COMRAM] PTR unsigned char 
  8223 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8224 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8225 ;;		 -> main@msgbuffer(11), 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  2   44[COMRAM] PTR void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8235 ;;      Params:         6       0       0       0       0
  8236 ;;      Locals:         4       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0
  8238 ;;      Totals:        10       0       0       0       0
  8239 ;;Total ram usage:       10 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		i2_send_msg
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248                           	psect	text50
  8249  001826                     __ptext50:
  8250                           	opt stack 0
  8251  001826                     i2_memcpy:
  8252                           	opt stack 16
  8253                           
  8254                           ;incstack = 0
  8255  001826  C030  F036         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8256  00182A  C02F  F035         	movff	i2memcpy@s1,i2memcpy@s
  8257  00182E  C02E  F034         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8258  001832  C02D  F033         	movff	i2memcpy@d1,i2memcpy@d
  8259  001836  D00E               	goto	i2l3772
  8260  001838                     i2l3766:
  8261  001838  C035  FFD9         	movff	i2memcpy@s,fsr2l
  8262  00183C  C036  FFDA         	movff	i2memcpy@s+1,fsr2h
  8263  001840  C033  FFE1         	movff	i2memcpy@d,fsr1l
  8264  001844  C034  FFE2         	movff	i2memcpy@d+1,fsr1h
  8265  001848  CFDF FFE7          	movff	indf2,indf1
  8266  00184C  4A35               	infsnz	i2memcpy@s,f,c
  8267  00184E  2A36               	incf	i2memcpy@s+1,f,c
  8268  001850  4A33               	infsnz	i2memcpy@d,f,c
  8269  001852  2A34               	incf	i2memcpy@d+1,f,c
  8270  001854                     i2l3772:
  8271  001854  0631               	decf	i2memcpy@n,f,c
  8272  001856  A0D8               	btfss	status,0,c
  8273  001858  0632               	decf	i2memcpy@n+1,f,c
  8274  00185A  2831               	incf	i2memcpy@n& (0+255),w,c
  8275  00185C  B4D8               	btfsc	status,2,c
  8276  00185E  2832               	incf	(i2memcpy@n+1)& (0+255),w,c
  8277  001860  B4D8               	btfsc	status,2,c
  8278                           
  8279                           ;	Return value of i2_memcpy is never used
  8280  001862  0012               	return	
  8281  001864  D7E9               	goto	i2l3766
  8282  001866                     __end_ofi2_memcpy:
  8283                           	opt stack 0
  8284                           pclatu	equ	0xFFB
  8285                           pclath	equ	0xFFA
  8286                           tblptru	equ	0xFF8
  8287                           tblptrh	equ	0xFF7
  8288                           tblptrl	equ	0xFF6
  8289                           tablat	equ	0xFF5
  8290                           prodh	equ	0xFF4
  8291                           prodl	equ	0xFF3
  8292                           intcon	equ	0xFF2
  8293                           postinc0	equ	0xFEE
  8294                           fsr0h	equ	0xFEA
  8295                           fsr0l	equ	0xFE9
  8296                           wreg	equ	0xFE8
  8297                           indf1	equ	0xFE7
  8298                           fsr1h	equ	0xFE2
  8299                           fsr1l	equ	0xFE1
  8300                           bsr	equ	0xFE0
  8301                           indf2	equ	0xFDF
  8302                           postinc2	equ	0xFDE
  8303                           postdec2	equ	0xFDD
  8304                           fsr2h	equ	0xFDA
  8305                           fsr2l	equ	0xFD9
  8306                           status	equ	0xFD8
  8307                           
  8308 ;; *************** function _SleepIfOkay *****************
  8309 ;; Defined at:
  8310 ;;		line 228 in file "../src/messages.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;		None               void
  8317 ;; Registers used:
  8318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8324 ;;      Params:         0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    2
  8331 ;; This function calls:
  8332 ;;		_enter_sleep_mode
  8333 ;;		i2_check_msg
  8334 ;;		i2_in_high_int
  8335 ;;		i2_in_low_int
  8336 ;; This function is called by:
  8337 ;;		_InterruptHandlerHigh
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text51
  8342  001600                     __ptext51:
  8343                           	opt stack 0
  8344  001600                     _SleepIfOkay:
  8345                           	opt stack 18
  8346                           
  8347                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8348                           
  8349                           ;incstack = 0
  8350  001600  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8351  001602  D001               	goto	i2l2360
  8352  001604  0012               	return	
  8353  001606                     i2l2360:
  8354                           
  8355                           ;messages.c: 232: }
  8356                           ;messages.c: 235: if (in_low_int()) {
  8357  001606  ECF5  F00C         	call	i2_in_low_int	;wreg free
  8358  00160A  5030               	movf	?i2_in_low_int+1,w,c
  8359  00160C  102F               	iorwf	?i2_in_low_int,w,c
  8360  00160E  A4D8               	btfss	status,2,c
  8361  001610  0012               	return	
  8362                           
  8363                           ;messages.c: 237: }
  8364                           ;messages.c: 240: if (!in_high_int()) {
  8365                           
  8366                           ;messages.c: 236: return;
  8367  001612  ECDE  F00D         	call	i2_in_high_int	;wreg free
  8368  001616  502E               	movf	?i2_in_high_int+1,w,c
  8369  001618  102D               	iorwf	?i2_in_high_int,w,c
  8370  00161A  B4D8               	btfsc	status,2,c
  8371  00161C  0012               	return	
  8372                           
  8373                           ;messages.c: 242: }
  8374                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8375                           
  8376                           ;messages.c: 241: return;
  8377  00161E  0101               	movlb	1	; () banked
  8378  001620  0E01               	movlw	high _ToMainHigh_MQ
  8379  001622  6E2E               	movwf	i2check_msg@qptr+1,c
  8380  001624  0101               	movlb	1	; () banked
  8381  001626  0E6C               	movlw	low _ToMainHigh_MQ
  8382  001628  6E2D               	movwf	i2check_msg@qptr,c
  8383  00162A  EC47  F00D         	call	i2_check_msg	;wreg free
  8384  00162E  0900               	iorlw	0
  8385  001630  A4D8               	btfss	status,2,c
  8386  001632  0012               	return	
  8387                           
  8388                           ;messages.c: 249: }
  8389                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8390                           
  8391                           ;messages.c: 248: return;
  8392  001634  0100               	movlb	0	; () banked
  8393  001636  0E00               	movlw	high _ToMainLow_MQ
  8394  001638  6E2E               	movwf	i2check_msg@qptr+1,c
  8395  00163A  0100               	movlb	0	; () banked
  8396  00163C  0E80               	movlw	low _ToMainLow_MQ
  8397  00163E  6E2D               	movwf	i2check_msg@qptr,c
  8398  001640  EC47  F00D         	call	i2_check_msg	;wreg free
  8399  001644  0900               	iorlw	0
  8400  001646  B4D8               	btfsc	status,2,c
  8401                           
  8402                           ;messages.c: 252: }
  8403                           ;messages.c: 253: enter_sleep_mode();
  8404                           
  8405                           ;messages.c: 251: return;
  8406  001648  ECE8  F00D         	call	_enter_sleep_mode	;wreg free
  8407  00164C  0012               	return	
  8408  00164E                     __end_of_SleepIfOkay:
  8409                           	opt stack 0
  8410                           pclatu	equ	0xFFB
  8411                           pclath	equ	0xFFA
  8412                           tblptru	equ	0xFF8
  8413                           tblptrh	equ	0xFF7
  8414                           tblptrl	equ	0xFF6
  8415                           tablat	equ	0xFF5
  8416                           prodh	equ	0xFF4
  8417                           prodl	equ	0xFF3
  8418                           intcon	equ	0xFF2
  8419                           postinc0	equ	0xFEE
  8420                           fsr0h	equ	0xFEA
  8421                           fsr0l	equ	0xFE9
  8422                           wreg	equ	0xFE8
  8423                           indf1	equ	0xFE7
  8424                           fsr1h	equ	0xFE2
  8425                           fsr1l	equ	0xFE1
  8426                           bsr	equ	0xFE0
  8427                           indf2	equ	0xFDF
  8428                           postinc2	equ	0xFDE
  8429                           postdec2	equ	0xFDD
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function i2_in_low_int *****************
  8435 ;; Defined at:
  8436 ;;		line 30 in file "../src/interrupts.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  2   46[COMRAM] int 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8450 ;;      Params:         2       0       0       0       0
  8451 ;;      Locals:         0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0
  8453 ;;      Totals:         2       0       0       0       0
  8454 ;;Total ram usage:        2 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    1
  8457 ;; This function calls:
  8458 ;;		i2_in_high_int
  8459 ;; This function is called by:
  8460 ;;		_SleepIfOkay
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text52
  8465  0019EA                     __ptext52:
  8466                           	opt stack 0
  8467  0019EA                     i2_in_low_int:
  8468                           	opt stack 18
  8469                           
  8470                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8471                           
  8472                           ;incstack = 0
  8473  0019EA  ACF2               	btfss	intcon,6,c	;volatile
  8474  0019EC  D005               	goto	i2l3154
  8475                           
  8476                           ;interrupts.c: 32: return (0);
  8477  0019EE  0E00               	movlw	0
  8478  0019F0  6E30               	movwf	?i2_in_low_int+1,c
  8479  0019F2  0E00               	movlw	0
  8480  0019F4  6E2F               	movwf	?i2_in_low_int,c
  8481  0019F6  0012               	return	
  8482  0019F8                     i2l3154:
  8483  0019F8  ECDE  F00D         	call	i2_in_high_int	;wreg free
  8484  0019FC  502E               	movf	?i2_in_high_int+1,w,c
  8485  0019FE  102D               	iorwf	?i2_in_high_int,w,c
  8486  001A00  B4D8               	btfsc	status,2,c
  8487  001A02  D005               	goto	i2l3162
  8488                           
  8489                           ;interrupts.c: 34: return (0);
  8490  001A04  0E00               	movlw	0
  8491  001A06  6E30               	movwf	?i2_in_low_int+1,c
  8492  001A08  0E00               	movlw	0
  8493  001A0A  6E2F               	movwf	?i2_in_low_int,c
  8494  001A0C  0012               	return	
  8495  001A0E                     i2l3162:
  8496                           
  8497                           ;interrupts.c: 36: return (1);
  8498  001A0E  0E00               	movlw	0
  8499  001A10  6E30               	movwf	?i2_in_low_int+1,c
  8500  001A12  0E01               	movlw	1
  8501  001A14  6E2F               	movwf	?i2_in_low_int,c
  8502  001A16  0012               	return	
  8503  001A18                     __end_ofi2_in_low_int:
  8504                           	opt stack 0
  8505                           pclatu	equ	0xFFB
  8506                           pclath	equ	0xFFA
  8507                           tblptru	equ	0xFF8
  8508                           tblptrh	equ	0xFF7
  8509                           tblptrl	equ	0xFF6
  8510                           tablat	equ	0xFF5
  8511                           prodh	equ	0xFF4
  8512                           prodl	equ	0xFF3
  8513                           intcon	equ	0xFF2
  8514                           postinc0	equ	0xFEE
  8515                           fsr0h	equ	0xFEA
  8516                           fsr0l	equ	0xFE9
  8517                           wreg	equ	0xFE8
  8518                           indf1	equ	0xFE7
  8519                           fsr1h	equ	0xFE2
  8520                           fsr1l	equ	0xFE1
  8521                           bsr	equ	0xFE0
  8522                           indf2	equ	0xFDF
  8523                           postinc2	equ	0xFDE
  8524                           postdec2	equ	0xFDD
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8
  8528                           
  8529 ;; *************** function i2_in_high_int *****************
  8530 ;; Defined at:
  8531 ;;		line 22 in file "../src/interrupts.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2   44[COMRAM] int 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8545 ;;      Params:         2       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0
  8548 ;;      Totals:         2       0       0       0       0
  8549 ;;Total ram usage:        2 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_SleepIfOkay
  8555 ;;		i2_in_low_int
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text53
  8560  001BBC                     __ptext53:
  8561                           	opt stack 0
  8562  001BBC                     i2_in_high_int:
  8563                           	opt stack 18
  8564                           
  8565                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8566                           
  8567                           ;incstack = 0
  8568  001BBC  0E00               	movlw	0
  8569  001BBE  AEF2               	btfss	intcon,7,c	;volatile
  8570  001BC0  0E01               	movlw	1
  8571  001BC2  6E2D               	movwf	?i2_in_high_int,c
  8572  001BC4  6A2E               	clrf	?i2_in_high_int+1,c
  8573  001BC6  0012               	return	
  8574  001BC8                     __end_ofi2_in_high_int:
  8575                           	opt stack 0
  8576                           pclatu	equ	0xFFB
  8577                           pclath	equ	0xFFA
  8578                           tblptru	equ	0xFF8
  8579                           tblptrh	equ	0xFF7
  8580                           tblptrl	equ	0xFF6
  8581                           tablat	equ	0xFF5
  8582                           prodh	equ	0xFF4
  8583                           prodl	equ	0xFF3
  8584                           intcon	equ	0xFF2
  8585                           postinc0	equ	0xFEE
  8586                           fsr0h	equ	0xFEA
  8587                           fsr0l	equ	0xFE9
  8588                           wreg	equ	0xFE8
  8589                           indf1	equ	0xFE7
  8590                           fsr1h	equ	0xFE2
  8591                           fsr1l	equ	0xFE1
  8592                           bsr	equ	0xFE0
  8593                           indf2	equ	0xFDF
  8594                           postinc2	equ	0xFDE
  8595                           postdec2	equ	0xFDD
  8596                           fsr2h	equ	0xFDA
  8597                           fsr2l	equ	0xFD9
  8598                           status	equ	0xFD8
  8599                           
  8600 ;; *************** function i2_check_msg *****************
  8601 ;; Defined at:
  8602 ;;		line 222 in file "../src/messages.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  8605 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;		None
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  1    wreg      unsigned char 
  8610 ;; Registers used:
  8611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8617 ;;      Params:         2       0       0       0       0
  8618 ;;      Locals:         0       0       0       0       0
  8619 ;;      Temps:          1       0       0       0       0
  8620 ;;      Totals:         3       0       0       0       0
  8621 ;;Total ram usage:        3 bytes
  8622 ;; Hardware stack levels used:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_SleepIfOkay
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text54
  8631  001A8E                     __ptext54:
  8632                           	opt stack 0
  8633  001A8E                     i2_check_msg:
  8634                           	opt stack 19
  8635                           
  8636                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8637                           
  8638                           ;incstack = 0
  8639  001A8E  EE20 F035          	lfsr	2,53
  8640  001A92  502D               	movf	i2check_msg@qptr,w,c
  8641  001A94  26D9               	addwf	fsr2l,f,c
  8642  001A96  502E               	movf	i2check_msg@qptr+1,w,c
  8643  001A98  22DA               	addwfc	fsr2h,f,c
  8644  001A9A  50DF               	movf	indf2,w,c
  8645  001A9C  6E2F               	movwf	??i2_check_msg& (0+255),c
  8646  001A9E  502F               	movf	??i2_check_msg,w,c
  8647  001AA0  0D0D               	mullw	13
  8648  001AA2  50F3               	movf	prodl,w,c
  8649  001AA4  242D               	addwf	i2check_msg@qptr,w,c
  8650  001AA6  6ED9               	movwf	fsr2l,c
  8651  001AA8  50F4               	movf	prodh,w,c
  8652  001AAA  202E               	addwfc	i2check_msg@qptr+1,w,c
  8653  001AAC  6EDA               	movwf	fsr2h,c
  8654  001AAE  50DF               	movf	indf2,w,c
  8655  001AB0  0012               	return	
  8656  001AB2                     __end_ofi2_check_msg:
  8657                           	opt stack 0
  8658                           pclatu	equ	0xFFB
  8659                           pclath	equ	0xFFA
  8660                           tblptru	equ	0xFF8
  8661                           tblptrh	equ	0xFF7
  8662                           tblptrl	equ	0xFF6
  8663                           tablat	equ	0xFF5
  8664                           prodh	equ	0xFF4
  8665                           prodl	equ	0xFF3
  8666                           intcon	equ	0xFF2
  8667                           postinc0	equ	0xFEE
  8668                           fsr0h	equ	0xFEA
  8669                           fsr0l	equ	0xFE9
  8670                           wreg	equ	0xFE8
  8671                           indf1	equ	0xFE7
  8672                           fsr1h	equ	0xFE2
  8673                           fsr1l	equ	0xFE1
  8674                           bsr	equ	0xFE0
  8675                           indf2	equ	0xFDF
  8676                           postinc2	equ	0xFDE
  8677                           postdec2	equ	0xFDD
  8678                           fsr2h	equ	0xFDA
  8679                           fsr2l	equ	0xFD9
  8680                           status	equ	0xFD8
  8681                           
  8682 ;; *************** function _enter_sleep_mode *****************
  8683 ;; Defined at:
  8684 ;;		line 202 in file "../src/messages.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;		None               void
  8691 ;; Registers used:
  8692 ;;		None
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8698 ;;      Params:         0       0       0       0       0
  8699 ;;      Locals:         0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0
  8701 ;;      Totals:         0       0       0       0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_SleepIfOkay
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text55
  8712  001BD0                     __ptext55:
  8713                           	opt stack 0
  8714  001BD0                     _enter_sleep_mode:
  8715                           	opt stack 19
  8716                           
  8717                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8718                           
  8719                           ;incstack = 0
  8720  001BD0  8ED3               	bsf	4051,7,c	;volatile
  8721  001BD2  0003               	sleep		;# 
  8722  001BD4  0012               	return	
  8723  001BD6                     __end_of_enter_sleep_mode:
  8724                           	opt stack 0
  8725  0000                     pclatu	equ	0xFFB
  8726                           pclath	equ	0xFFA
  8727                           tblptru	equ	0xFF8
  8728                           tblptrh	equ	0xFF7
  8729                           tblptrl	equ	0xFF6
  8730                           tablat	equ	0xFF5
  8731                           prodh	equ	0xFF4
  8732                           prodl	equ	0xFF3
  8733                           intcon	equ	0xFF2
  8734                           postinc0	equ	0xFEE
  8735                           fsr0h	equ	0xFEA
  8736                           fsr0l	equ	0xFE9
  8737                           wreg	equ	0xFE8
  8738                           indf1	equ	0xFE7
  8739                           fsr1h	equ	0xFE2
  8740                           fsr1l	equ	0xFE1
  8741                           bsr	equ	0xFE0
  8742                           indf2	equ	0xFDF
  8743                           postinc2	equ	0xFDE
  8744                           postdec2	equ	0xFDD
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           pclatu	equ	0xFFB
  8749                           pclath	equ	0xFFA
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           postinc0	equ	0xFEE
  8758                           fsr0h	equ	0xFEA
  8759                           fsr0l	equ	0xFE9
  8760                           wreg	equ	0xFE8
  8761                           indf1	equ	0xFE7
  8762                           fsr1h	equ	0xFE2
  8763                           fsr1l	equ	0xFE1
  8764                           bsr	equ	0xFE0
  8765                           indf2	equ	0xFDF
  8766                           postinc2	equ	0xFDE
  8767                           postdec2	equ	0xFDD
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772                           	psect	rparam
  8773  0000                     pclatu	equ	0xFFB
  8774                           pclath	equ	0xFFA
  8775                           tblptru	equ	0xFF8
  8776                           tblptrh	equ	0xFF7
  8777                           tblptrl	equ	0xFF6
  8778                           tablat	equ	0xFF5
  8779                           prodh	equ	0xFF4
  8780                           prodl	equ	0xFF3
  8781                           intcon	equ	0xFF2
  8782                           postinc0	equ	0xFEE
  8783                           fsr0h	equ	0xFEA
  8784                           fsr0l	equ	0xFE9
  8785                           wreg	equ	0xFE8
  8786                           indf1	equ	0xFE7
  8787                           fsr1h	equ	0xFE2
  8788                           fsr1l	equ	0xFE1
  8789                           bsr	equ	0xFE0
  8790                           indf2	equ	0xFDF
  8791                           postinc2	equ	0xFDE
  8792                           postdec2	equ	0xFDD
  8793                           fsr2h	equ	0xFDA
  8794                           fsr2l	equ	0xFD9
  8795                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         223
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70      83
    BANK0           128     49     103
    BANK1           256     89     251
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), main@ic(BANK1[53]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK1[2]), main@ic(BANK1[53]), 
		 -> main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_write@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 53
		 -> main@ic(BANK1[53]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 53
		 -> NULL(NULL[0]), main@ic(BANK1[53]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 53
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[53]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 53
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[53]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_write->_WriteUSART
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0   10990
                                             12 BANK1     77    77      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           5     3      2     219
                                             26 BANK0      5     3      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             25 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2710
                                             48 BANK0      1     1      0
                                              3 BANK1      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             47 BANK0      1     1      0
                                              0 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             35 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             25 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             29 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             25 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     2      0      22
                                             25 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             31 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             29 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             25 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             25 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                              0 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             35 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             25 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             25 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2841
                                             27 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2723
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2700
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0     118
                                              4 COMRAM     2     2      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7842
                                             11 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0     133
                                             48 COMRAM     2     2      0
                        _WriteTimer0
               _i2c_configure_master
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (12) _i2c_master_recv                                     1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _i2c_configure_master                                2     2      0      22
                                             44 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    7473
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              11    11      0    4123
                                              0 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               6     4      2     158
                                             44 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              1     1      0    3350
                                              0 BANK0      1     1      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3350
                                             66 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2347
                                             54 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                             44 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
   _uart_write
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0
     _i2c_configure_master
     _i2c_master_recv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     59      FB       6       98.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     31      67       4       80.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     46      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B5      11        0.0%
DATA                 0      0     1B5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Apr 15 11:59:21 2014

                     uart_write@msg 00D0                    main@uthread_data 01B9  
                                 _x 0049            _MQ_Main_Willing_to_block 004B  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 17A4  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 1A68  
                      __CFG_CP0$OFF 000000                                 l500 1912  
                               l501 1914                                 l542 11FC  
                               l392 1564                                 l474 1A3C  
                               l546 121C                                 l475 1A3E  
                               l547 121E                                 l548 122C  
                               l549 122E                                 l498 18FA  
                               l786 1B2A                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                      _FromMainLow_MQ 0136  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 00CF                    ??_init_uart_recv 00D1  
                   ReadTimer1@timer 0003                                l2304 16CA  
                              l1098 12DA                                l2318 170E  
                              l3074 1B4A                                l2610 1590  
                              l3412 15E8                                l3340 097E  
                              l3332 093C                                l3406 15C4  
                              l3342 09D0                                l3350 0A28  
                              l2296 16A8                                l2640 142C  
                              l3344 09F0                                l2546 11FE  
                              l2538 11E8                                l3426 0CD8  
                              l3442 0D9E                                l3362 0B0A  
                              l3356 0A66                                l3348 0A10  
                              l2590 13B0                                l3358 0AB8  
                              l2584 1384                                l3392 0DFE  
                              l3720 128A                                l2498 18FC  
                              l3722 1292                                l2596 13DC  
                              l3726 12C6                                l3718 1278  
                              _LATB 000F8A                                u2857 1B2C  
                              i1l49 0070                    uart_write@length 00D3  
                   _FromMainHigh_MQ 0100                                _Send 0047  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 08B0                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01C4  
                        i1_send_msg 0EA6                                pclat 000FFA  
                       i2_check_msg 1A8E                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00B6                       __CFG_FOSC2$ON 000000  
                        i2_send_msg 0F50       __size_of_i2c_configure_master 0044  
         ToMainHigh_recvmsg@msgtype 01A2                      send_msg@length 00DB  
       __size_of_timer0_int_handler 0032             ??_i2c_slave_int_handler 00B6  
                       _Delay1KTCYx 1B26                               ?_main 0001  
                             _T0CON 000FD5                               _T1CON 000FCD  
                   __end_of___lwmod 12E4                          i1memcpy@d1 0001  
                             i1l560 1ADE                               i2l321 03DA  
                             i2l313 02E8                               i2l327 0468  
                             i2l353 073C                               i2l346 05FC  
                             i2l275 118E                               i2l357 07F6  
                             i2l293 0456                               i2l295 0170  
                             i2l299 01AE                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 002D                          i2memcpy@s1 002F  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 171E          ToMainLow_recvmsg@maxlength 01A6  
           timer0_lthread@msgbuffer 00D5             i2c_configure_slave@addr 00D0  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 1826                    __end_ofi2_memcpy 1866  
                    WriteUSART@data 00CF                     __initialization 164E  
                      __end_of_main 0B24                          _ReadTimer1 1B98  
       __size_of_timer1_int_handler 001A          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 002E  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 00E7  
                   send_msg@msgtype 00DC                       __activetblptr 000002  
                   send_msg@tlength 00E0                __end_of_handle_start 11C8  
           ??_uart_recv_int_handler 001B                              i1l3814 1076  
                            i1l3762 1814                              i1l3826 0066  
                            i1l3756 17F8                              i2l2360 1606  
                        _OpenTimer0 1A18                              i2l3162 1A0E  
                            i2l3154 19F8                              i1l3786 0EDE  
                        _OpenTimer1 18E0                              i2l3502 05CE  
                    __CFG_WDTEN$OFF 000000                              i2l3512 0678  
                            i2l3520 06B6                              i2l3280 131E  
                            i2l3530 0710                              i2l3610 01E0  
                            i2l3290 1AF0                              i2l3700 0526  
                            i2l3612 0200                              i2l3292 1AF6  
                            i2l3542 0782                              i2l3526 06E4  
                            i2l3630 0270                              i2l3622 0230  
                            i2l3286 1328                              i2l3552 07FC  
                            i2l3536 0754                              i2l3472 0B9A  
                            i2l3480 0C10                              i2l3296 1AFC  
                            i2l3570 0876                              i2l3476 0BBC  
                            i2l3468 0B3A                              i2l3708 05A2  
                            i2l3652 0342                              i2l3628 0242  
                            i2l3742 0F88                              i2l3558 0838  
                            i2l3654 0372                              i2l3496 11A4  
                            i2l3680 0430                              i2l3592 0166  
                            i2l3498 11B6                              i2l3658 0384  
                            i2l3586 014E                              i2l3772 1854  
                            i2l3692 04B4                              i2l3766 1838  
                            i2l3686 046C         __end_of_i2c_configure_slave 19B8  
                     ??_SleepIfOkay 0031                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 0148                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 0C6C                  timer0_lthread@tptr 00CF  
                      i2_in_low_int 19EA                         ?i2_send_msg 0037  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 1AEE   i2c_slave_int_handler@data_written 00BB  
                   _i2c_master_recv 18A4                    OpenTimer0@config 00CF  
                            _ic_ptr 004E                           ??___lwmod 00D3  
                     main@msgbuffer 01AE                    __end_of_init_i2c 1130  
                  OpenTimer1@config 00CF                              _memcpy 15A2  
                            clear_0 1654                              clear_1 1660  
                            clear_2 166C                              _uc_ptr 0050  
                            main@ic 01C6                              main@uc 01BF  
                  __end_of_recv_msg 0DA2         start_i2c_slave_reply@length 0032  
                         ??_in_main 00D5                    __end_of_send_msg 0EA6  
                      __pdataCOMRAM 0052               timer0_int_handler@val 0032  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00D2  
          ToMainLow_recvmsg@msgtype 01A2                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 168A          __end_of_ToMainHigh_recvmsg 17E6  
        __end_of_ToMainHigh_sendmsg 1A8E         __end_of_init_timer1_lthread 1B74  
               __end_of_SleepIfOkay 164E                          _WriteUSART 1B3C  
                    __pcstackCOMRAM 0001              __size_ofi2_in_high_int 000C  
                       ?_ReadTimer1 0001                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 1AEE                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 135E  
       __end_of_InterruptHandlerLow 00B6                           ?i2_memcpy 002D  
                     _ToMainHigh_MQ 016C                    _enter_sleep_mode 1BD0  
               __size_ofi2_send_msg 00AA                timer1_lthread@length 01A9  
                     ReadUSART@data 0001                   __end_of_OpenUSART 125A  
                     check_msg@qptr 00CF                timer1_lthread@retval 01AD  
           ??_block_on_To_msgqueues 00D5                __size_of_init_queues 006E  
                        __pbssBANK0 0080                          __pbssBANK1 0100  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 004E             __end_of_i2c_int_handler 1B0C  
                      ?i2_check_msg 002D             __end_of_i2c_master_recv 18E0  
                timer1_lthread@tptr 01A5            ??_i2c_master_int_handler 00B6  
                 recv_msg@maxlength 00DB                     recv_msg@msgtype 00DC  
                   recv_msg@tlength 00E3               __size_of_handle_start 0098  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 002F  
                           ?_memcpy 00CF                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 0512             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 05CC             __size_of_timer1_lthread 0072  
      __end_of_i2c_configure_master 1762                          ??i1_memcpy 0007  
                        ??i2_memcpy 0033                    i1send_msg@length 000D  
                     i2_in_high_int 1BBC                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 1984  
                         ?_init_i2c 00CF                         _SleepIfOkay 1600  
                         ?_recv_msg 00D9                          _in_low_int 1694  
                      _handle_start 1130                             __Hparam 0000  
                         ?_send_msg 00D9                             __Lparam 0000  
        __end_of_timer0_int_handler 19EA                         ?_WriteUSART 0001  
                  init_uart_recv@uc 00CF                             ___lwmod 125A  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00BC  
                           __pcinit 164E                     __size_of_memcpy 005E  
                        _init_queue 13E4                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 08B0                             __ptext1 153E  
                           __ptext2 1B3C                             __ptext3 1866  
                           __ptext4 145E                             __ptext5 125A  
                           __ptext6 1918                             __ptext7 0DA2  
                           __ptext8 1B50                             __ptext9 1AB2  
                         _T0CONbits 000FD5                             _in_main 16DA  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 1BBC  
               __end_of_WriteTimer1 1B98                      ?i2_in_high_int 002D  
                    __pintcode_body 12E4                end_of_initialization 168A  
           timer1_lthread@msgbuffer 01AB        __end_of_FromMainHigh_sendmsg 194E  
    __size_of_uart_recv_int_handler 009C          FromMainHigh_sendmsg@length 00E5  
                           memcpy@d 00D5                             memcpy@n 00D3  
                           memcpy@s 00D7       __end_of_uart_recv_int_handler 1096  
                        ??_init_i2c 00D1                       __Lmediumconst 0000  
                           int_func 12E4                        ??i1_send_msg 0011  
                     ?_uart_lthread 00CF             __size_of_init_uart_recv 001E  
                  ?_i2c_int_handler 0001                    ?_i2c_master_recv 0001  
                        ??_recv_msg 00E0                        ??i2_send_msg 003D  
                        ??_send_msg 00DF     __size_of_i2c_master_int_handler 02E4  
        __end_of_timer1_int_handler 1B26                           _RCSTAbits 000FAB  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0043  
                        _uart_write 153E                  __end_ofi1_send_msg 0F50  
       FromMainHigh_sendmsg@msgtype 01A2                           _TRISCbits 000F94  
                       uart_write@i 00D4                  __end_ofi2_send_msg 0FFA  
               __size_of_WriteUSART 0014            timer1_int_handler@result 0005  
                    ??_uart_lthread 00D7                           _TXSTAbits 000FAC  
                        main@length 01C5                         ?_in_low_int 00D1  
             timer0_lthread@msgtype 00D1                _i2c_configure_master 171E  
             _start_i2c_slave_reply 0B24        __size_of_i2c_configure_slave 0034  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 1BD6  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 17A4  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1A68  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                     __pidataCOMRAM 1BD6                      _timer0_lthread 1B50  
                       ?_init_queue 00CF                           i2memcpy@d 0033  
                       _WriteTimer0 1BAA                         _WriteTimer1 1B86  
                         i2memcpy@n 0031                           i2memcpy@s 0035  
                    _timer1_lthread 145E                      __end_of_memcpy 1600  
                 _enable_interrupts 1BC8                __size_of_Delay1KTCYx 0016  
               ?_ToMainHigh_recvmsg 01A2                     ??i2_in_high_int 002F  
               ?_ToMainHigh_sendmsg 0043                  ?_enable_interrupts 0001  
               start_initialization 164E              _i2c_master_int_handler 05CC  
                     ??_in_high_int 00D1                           _ReadUSART 1AD0  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 0040  
               ??_enable_interrupts 00CF                        ??_OpenTimer0 00CF  
                      ??_OpenTimer1 00CF      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 1BAA       __end_of_block_on_To_msgqueues 13E4  
                         _OpenUSART 11C8        __end_of_InterruptHandlerHigh 1366  
                        init_i2c@ic 00CF                ??_ToMainHigh_recvmsg 00E7  
              ??_ToMainHigh_sendmsg 0046               ?_i2c_configure_master 0001  
            __end_of_timer0_lthread 1B62              __end_of_timer1_lthread 14D0  
         __end_of_enable_interrupts 1BD0                            ??_memcpy 00D5  
             timer1_lthread@msgtype 01A7                _FromMainHigh_sendmsg 1918  
                       ?_uart_write 00D0        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1A42                  __end_of_OpenTimer1 1918  
                       __pbssCOMRAM 0047                          ?_ReadUSART 0001  
                     ??_init_queues 00D3                       __pcstackBANK0 00B6  
                     __pcstackBANK1 01A2                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00CF            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 009E      i2c_slave_int_handler@data_read 00C0  
               __end_of_in_high_int 1B86                          ?_OpenUSART 00CF  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01A4  
                      _ToMainLow_MQ 0080                 __size_of_init_queue 007A  
                    _init_uart_recv 1AB2                           _check_msg 194E  
            ?_start_i2c_slave_reply 002D                   __size_of_init_i2c 009A  
                      recv_msg@data 00DE                        ??_WriteUSART 00CF  
                      recv_msg@qmsg 00E5                        recv_msg@slot 00E2  
                      recv_msg@qptr 00D9                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                   ?_timer0_lthread 00CF                            ?___lwmod 00CF  
                   ?_timer1_lthread 01A5               ?_FromMainHigh_sendmsg 01A2  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01A4  
              __end_of_uart_lthread 18A4                            ?_in_main 00D3  
                 WriteTimer0@timer0 002D                  _timer0_int_handler 19B8  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00BA  
               uart_lthread@msgtype 00D1      i2c_slave_int_handler@error_buf 00B8  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 1B50                    uart_lthread@uptr 00CF  
    i2c_slave_int_handler@msg_ready 00BF              __end_of_init_uart_recv 1AD0  
               __end_of_init_queues 153E               i2c_master_recv@length 002D  
                          _LATCbits 000F8B                 __size_of_uart_write 0064  
            ??_i2c_configure_master 002D                     i2check_msg@qptr 002D  
                        ?_check_msg 00CF                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                     _I2C_Buffer_Size 0052  
                     ?i2_in_low_int 002F                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 0044                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 0031  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                timer0_lthread@length 00D3  
                _timer1_int_handler 1B0C                            i1_memcpy 17E6  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1826                timer0_lthread@msgval 00D7  
                       _in_high_int 1B74                        send_msg@data 00DD  
               _i2c_configure_slave 1984                        send_msg@qmsg 00E3  
                      send_msg@slot 00E2                        send_msg@qptr 00D9  
             uart_lthread@msgbuffer 00D5                 ?_timer1_int_handler 0001  
                   ?_init_uart_recv 00CF                            _i2c_mode 004D  
                       ??_OpenUSART 00D1                     OpenUSART@config 00D4  
                    ??i2_in_low_int 0031               _uart_recv_int_handler 0FFA  
                      ??_in_low_int 00D3                            __Hrparam 0000  
              ?_i2c_configure_slave 0001                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_sendmsg 00E5  
              ??_timer1_int_handler 0005            __size_of_i2c_int_handler 001E  
                ??_enter_sleep_mode 002D            __size_of_i2c_master_recv 003C  
                  __size_of___lwmod 008A                        ??_init_queue 00D1  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 01A3             ToMainLow_sendmsg@length 001A  
           ?_i2c_master_int_handler 0001              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01BB               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 003A  
       ToMainHigh_recvmsg@maxlength 01A6                   i2send_msg@tlength 003E  
           init_timer1_lthread@tptr 00CF                         _init_queues 14D0  
                __end_of_in_low_int 16DA                            __ptext10 1B62  
                          __ptext11 14D0                            __ptext20 194E  
                          __ptext12 13E4                            __ptext21 1B26  
                          __ptext13 1096                            __ptext30 0FFA  
                          __ptext22 1762                            __ptext14 1984  
                          __ptext31 1A42                            __ptext23 17A4  
                          __ptext15 1BC8                            __ptext40 18A4  
                          __ptext32 0EA6                            __ptext24 0C6C  
                          __ptext16 1366                            __ptext41 171E  
                          __ptext33 17E6                            __ptext25 15A2  
                          __ptext17 16DA                            __ptext50 1826  
                          __ptext42 1BAA                            __ptext34 1AD0  
                          __ptext26 11C8                            __ptext18 1694  
                          __ptext51 1600                            __ptext43 1AEE  
                          __ptext35 1B0C                            __ptext27 18E0  
                          __ptext19 1B74                            __ptext52 19EA  
                          __ptext44 00BA                            __ptext36 1B86  
                          __ptext28 1A18                            __ptext53 1BBC  
                          __ptext45 0B24                            __ptext37 1B98  
                          __ptext54 1A8E                            __ptext46 1130  
                          __ptext55 1BD0                            __ptext47 05CC  
                          __ptext39 19B8                            __ptext48 1A68  
                          __ptext49 0F50                      i1send_msg@data 000F  
    i2c_configure_master@slave_addr 002E                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 00D3                            _init_i2c 1096  
               _init_timer1_lthread 1B62                       __size_of_main 0274  
                     ??i2_check_msg 002F                   main@t1thread_data 01BD  
                       ??_check_msg 00D1                  __end_of_init_queue 145E  
              __size_of_SleepIfOkay 004E                            _recv_msg 0C6C  
  i2c_slave_int_handler@msg_to_send 00BE               ??_i2c_configure_slave 00CF  
                          _send_msg 0DA2                      init_queue@qptr 00CF  
             __size_of_uart_lthread 003E                       ??_Delay1KTCYx 00CF  
    __end_of_i2c_master_int_handler 08B0                 _InterruptHandlerLow 0018  
                      ??_uart_write 00D2                ?_init_timer1_lthread 00CF  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 00CF                            memcpy@d1 00CF  
                          memcpy@s1 00D1               __end_ofi2_in_high_int 1BC8  
                  i2send_msg@length 0039                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 002F                    ___lwmod@dividend 00CF  
            ?_uart_recv_int_handler 0001                        _uart_lthread 1866  
                __end_of_uart_write 15A2               _block_on_To_msgqueues 1366  
                     ?_handle_start 0001                    ??_timer0_lthread 00D7  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0026  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 00E6  
          ToMainHigh_sendmsg@length 0046                 __end_ofi2_check_msg 1AB2  
             ??_init_timer1_lthread 00D1              ??_InterruptHandlerHigh 00C1  
                 _ToMainLow_recvmsg 1762                   _ToMainLow_sendmsg 1A42  
                   ___lwmod@divisor 00D1                __end_ofi2_in_low_int 1A18  
                ?_ToMainLow_recvmsg 01A2                 __end_of_Delay1KTCYx 1B3C  
                 ??_i2c_int_handler 0047                     ___lwmod@counter 00D4  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_recv 002D  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 003B               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 00E7                      i2send_msg@qmsg 0041  
                    i2send_msg@slot 0040                      i2send_msg@qptr 0037  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00BD  
                    ??_handle_start 002D                        _USART_Status 004C  
