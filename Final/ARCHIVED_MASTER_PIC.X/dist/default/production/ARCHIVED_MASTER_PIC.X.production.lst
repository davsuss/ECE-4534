

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat May  3 19:21:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  002708                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _FOOT
    88  002708  0058               	dw	88
    89                           
    90                           ;initializer for _INCH
    91  00270A  0003               	dw	3
    92                           
    93                           ;initializer for _NINETYDEGREES
    94  00270C  0060               	dw	96
    95                           
    96                           ;initializer for _TENDEGREES
    97  00270E  000A               	dw	10
    98                           
    99                           	psect	idataBANK0
   100  00271E                     __pidataBANK0:
   101                           	opt stack 0
   102                           
   103                           ;initializer for _I2C_Buffer_Size
   104  00271E  0017               	dw	23
   105  0000                     _INTCONbits	set	4082
   106  0000                     _IPR1bits	set	3999
   107  0000                     _LATB	set	3978
   108  0000                     _LATCbits	set	3979
   109  0000                     _OSCCON	set	4051
   110  0000                     _OSCCONbits	set	4051
   111  0000                     _OSCTUNEbits	set	3995
   112  0000                     _PIE1bits	set	3997
   113  0000                     _PIR1bits	set	3998
   114  0000                     _RCONbits	set	4048
   115  0000                     _RCREG	set	4014
   116  0000                     _RCSTA	set	4011
   117  0000                     _RCSTAbits	set	4011
   118  0000                     _SPBRG	set	4015
   119  0000                     _SPBRGH	set	4016
   120  0000                     _SSPADD	set	4040
   121  0000                     _SSPBUF	set	4041
   122  0000                     _SSPCON1	set	4038
   123  0000                     _SSPCON1bits	set	4038
   124  0000                     _SSPCON2	set	4037
   125  0000                     _SSPCON2bits	set	4037
   126  0000                     _SSPSTAT	set	4039
   127  0000                     _SSPSTATbits	set	4039
   128  0000                     _T0CON	set	4053
   129  0000                     _T0CONbits	set	4053
   130  0000                     _T1CON	set	4045
   131  0000                     _T1CONbits	set	4045
   132  0000                     _TMR0H	set	4055
   133  0000                     _TMR0L	set	4054
   134  0000                     _TMR1H	set	4047
   135  0000                     _TMR1L	set	4046
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TXREG	set	4013
   139  0000                     _TXSTA	set	4012
   140  0000                     _TXSTAbits	set	4012
   141                           
   142                           	psect	nvCOMRAM
   143  000051                     __pnvCOMRAM:
   144                           	opt stack 0
   145  000051                     _uc_ptr:
   146                           	opt stack 0
   147  000051                     	ds	2
   148                           
   149                           	psect	nvBANK0
   150  0000C8                     __pnvBANK0:
   151                           	opt stack 0
   152  0000C8                     _ic_ptr:
   153                           	opt stack 0
   154  0000C8                     	ds	2
   155                           
   156                           ; #config settings
   157  0000                     
   158                           	psect	cinit
   159  001F5E                     __pcinit:
   160                           	opt stack 0
   161  001F5E                     start_initialization:
   162                           	opt stack 0
   163  001F5E                     __initialization:
   164                           	opt stack 0
   165                           
   166                           ; Clear objects allocated to BANK2 (54 bytes)
   167  001F5E  EE02  F04B         	lfsr	0,__pbssBANK2
   168  001F62  0E36               	movlw	54
   169  001F64                     clear_0:
   170  001F64  6AEE               	clrf	postinc0,c
   171  001F66  06E8               	decf	wreg,f,c
   172  001F68  E1FD               	bnz	clear_0
   173                           
   174                           ; Clear objects allocated to BANK1 (162 bytes)
   175  001F6A  EE01  F000         	lfsr	0,__pbssBANK1
   176  001F6E  0EA2               	movlw	162
   177  001F70                     clear_1:
   178  001F70  6AEE               	clrf	postinc0,c
   179  001F72  06E8               	decf	wreg,f,c
   180  001F74  E1FD               	bnz	clear_1
   181                           
   182                           ; Clear objects allocated to BANK0 (1 bytes)
   183  001F76  0100               	movlb	0
   184  001F78  6BCC               	clrf	__pbssBANK0& (0+255),b
   185                           
   186                           ; Clear objects allocated to COMRAM (22 bytes)
   187  001F7A  EE00  F033         	lfsr	0,__pbssCOMRAM
   188  001F7E  0E16               	movlw	22
   189  001F80                     clear_2:
   190  001F80  6AEE               	clrf	postinc0,c
   191  001F82  06E8               	decf	wreg,f,c
   192  001F84  E1FD               	bnz	clear_2
   193                           
   194                           ; Initialize objects allocated to BANK0 (2 bytes)
   195                           ; load TBLPTR registers with __pidataBANK0
   196  001F86  0E1E               	movlw	low __pidataBANK0
   197  001F88  6EF6               	movwf	tblptrl,c
   198  001F8A  0E27               	movlw	high __pidataBANK0
   199  001F8C  6EF7               	movwf	tblptrh,c
   200  001F8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   201  001F90  6EF8               	movwf	tblptru,c
   202  001F92  0009               	tblrd		*+	;fetch initializer
   203  001F94  CFF5 F0CA          	movff	tablat,__pdataBANK0
   204  001F98  0009               	tblrd		*+	;fetch initializer
   205  001F9A  CFF5 F0CB          	movff	tablat,__pdataBANK0+1
   206                           
   207                           ; Initialize objects allocated to COMRAM (8 bytes)
   208                           ; load TBLPTR registers with __pidataCOMRAM
   209  001F9E  0E08               	movlw	low __pidataCOMRAM
   210  001FA0  6EF6               	movwf	tblptrl,c
   211  001FA2  0E27               	movlw	high __pidataCOMRAM
   212  001FA4  6EF7               	movwf	tblptrh,c
   213  001FA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   214  001FA8  6EF8               	movwf	tblptru,c
   215  001FAA  EE00  F049         	lfsr	0,__pdataCOMRAM
   216  001FAE  EE10 F008          	lfsr	1,8
   217  001FB2                     copy_data0:
   218  001FB2  0009               	tblrd		*+
   219  001FB4  CFF5 FFEE          	movff	tablat,postinc0
   220  001FB8  50E5               	movf	postdec1,w,c
   221  001FBA  50E1               	movf	fsr1l,w,c
   222  001FBC  E1FA               	bnz	copy_data0
   223  001FBE                     end_of_initialization:
   224                           	opt stack 0
   225  001FBE                     __end_of__initialization:
   226                           	opt stack 0
   227  001FBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228  001FC0  6EF8               	movwf	tblptru,c
   229  001FC2  0100               	movlb	0
   230  001FC4  EFC5  F007         	goto	_main	;jump to C main() function
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	bssCOMRAM
   241  000033                     __pbssCOMRAM:
   242                           	opt stack 0
   243  000033                     _Send:
   244                           	opt stack 0
   245  000033                     	ds	2
   246  000035                     _Started:
   247                           	opt stack 0
   248  000035                     	ds	2
   249  000037                     _motorStatus:
   250                           	opt stack 0
   251  000037                     	ds	2
   252  000039                     _motor_count:
   253                           	opt stack 0
   254  000039                     	ds	2
   255  00003B                     _motor_length:
   256                           	opt stack 0
   257  00003B                     	ds	2
   258  00003D                     _x:
   259                           	opt stack 0
   260  00003D                     	ds	2
   261  00003F                     _MQ_Main_Willing_to_block:
   262                           	opt stack 0
   263  00003F                     	ds	1
   264  000040                     _State:
   265                           	opt stack 0
   266  000040                     	ds	1
   267  000041                     _USART_Status:
   268                           	opt stack 0
   269  000041                     	ds	1
   270  000042                     _buf_len:
   271                           	opt stack 0
   272  000042                     	ds	1
   273  000043                     _command_count:
   274                           	opt stack 0
   275  000043                     	ds	1
   276  000044                     _command_length:
   277                           	opt stack 0
   278  000044                     	ds	1
   279  000045                     _buffer_temp:
   280                           	opt stack 0
   281  000045                     	ds	4
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           postdec1	equ	0xFE5
   289                           fsr1l	equ	0xFE1
   290                           
   291                           	psect	dataCOMRAM
   292  000049                     __pdataCOMRAM:
   293                           	opt stack 0
   294  000049                     _FOOT:
   295                           	opt stack 0
   296  000049                     	ds	2
   297  00004B                     _INCH:
   298                           	opt stack 0
   299  00004B                     	ds	2
   300  00004D                     _NINETYDEGREES:
   301                           	opt stack 0
   302  00004D                     	ds	2
   303  00004F                     _TENDEGREES:
   304                           	opt stack 0
   305  00004F                     	ds	2
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	bssBANK0
   316  0000CC                     __pbssBANK0:
   317                           	opt stack 0
   318  0000CC                     _i2c_mode:
   319                           	opt stack 0
   320  0000CC                     	ds	1
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	dataBANK0
   331  0000CA                     __pdataBANK0:
   332                           	opt stack 0
   333  0000CA                     _I2C_Buffer_Size:
   334                           	opt stack 0
   335  0000CA                     	ds	2
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	bssBANK1
   346  000100                     __pbssBANK1:
   347                           	opt stack 0
   348  000100                     _FromMainLow_MQ:
   349                           	opt stack 0
   350  000100                     	ds	54
   351  000136                     _ToMainHigh_MQ:
   352                           	opt stack 0
   353  000136                     	ds	54
   354  00016C                     _ToMainLow_MQ:
   355                           	opt stack 0
   356  00016C                     	ds	54
   357                           tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           postdec1	equ	0xFE5
   364                           fsr1l	equ	0xFE1
   365                           
   366                           	psect	bssBANK2
   367  00024B                     __pbssBANK2:
   368                           	opt stack 0
   369  00024B                     _FromMainHigh_MQ:
   370                           	opt stack 0
   371  00024B                     	ds	54
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	cstackBANK2
   382  000200                     __pcstackBANK2:
   383                           	opt stack 0
   384  000200                     main@t0thread_data:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x0
   388  000200                     	ds	2
   389  000202                     main@msgbuffer:
   390                           	opt stack 0
   391                           
   392                           ; 11 bytes @ 0x2
   393  000202                     	ds	11
   394  00020D                     main@t1thread_data:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0xD
   398  00020D                     	ds	2
   399  00020F                     main@uc:
   400                           	opt stack 0
   401                           
   402                           ; 5 bytes @ 0xF
   403  00020F                     	ds	5
   404  000214                     main@msgtype:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x14
   408  000214                     	ds	1
   409  000215                     main@length:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x15
   413  000215                     	ds	1
   414  000216                     main@ic:
   415                           	opt stack 0
   416                           
   417                           ; 53 bytes @ 0x16
   418  000216                     	ds	53
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	cstackBANK1
   429  0001A2                     __pcstackBANK1:
   430                           	opt stack 0
   431  0001A2                     recv_msg@slot:
   432                           	opt stack 0
   433  0001A2                     send_msg@tlength:
   434                           	opt stack 0
   435  0001A2                     parser_lthread@msgtype:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x0
   439  0001A2                     	ds	1
   440  0001A3                     recv_msg@tlength:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x1
   444  0001A3                     	ds	1
   445  0001A4                     send_msg@slot:
   446                           	opt stack 0
   447  0001A4                     parser_lthread@length:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x2
   451  0001A4                     	ds	1
   452  0001A5                     send_msg@qmsg:
   453                           	opt stack 0
   454  0001A5                     recv_msg@qmsg:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x3
   458  0001A5                     	ds	1
   459  0001A6                     parser_lthread@msgbuf:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x4
   463  0001A6                     	ds	1
   464  0001A7                     ToMainLow_recvmsg@msgtype:
   465                           	opt stack 0
   466  0001A7                     ToMainHigh_recvmsg@msgtype:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x5
   470  0001A7                     	ds	1
   471  0001A8                     parser_lthread@data:
   472                           	opt stack 0
   473                           
   474                           ; 5 bytes @ 0x6
   475  0001A8                     	ds	1
   476  0001A9                     ToMainLow_recvmsg@data:
   477                           	opt stack 0
   478  0001A9                     ToMainHigh_recvmsg@data:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x7
   482  0001A9                     	ds	4
   483  0001AD                     parser_lthread@reply:
   484                           	opt stack 0
   485                           
   486                           ; 6 bytes @ 0xB
   487  0001AD                     	ds	6
   488  0001B3                     parser_lthread@reply_1678:
   489                           	opt stack 0
   490                           
   491                           ; 6 bytes @ 0x11
   492  0001B3                     	ds	6
   493  0001B9                     parser_lthread@reply_1679:
   494                           	opt stack 0
   495                           
   496                           ; 6 bytes @ 0x17
   497  0001B9                     	ds	6
   498  0001BF                     parser_lthread@data_1681:
   499                           	opt stack 0
   500                           
   501                           ; 12 bytes @ 0x1D
   502  0001BF                     	ds	12
   503  0001CB                     parser_lthread@checksum:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x29
   507  0001CB                     	ds	2
   508  0001CD                     parser_lthread@Feet:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x2B
   512  0001CD                     	ds	1
   513  0001CE                     parser_lthread@Inches:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x2C
   517  0001CE                     	ds	1
   518  0001CF                     parser_lthread@status:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x2D
   522  0001CF                     	ds	1
   523  0001D0                     parser_lthread@command:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x2E
   527  0001D0                     	ds	1
   528  0001D1                     parser_lthread@degrees:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x2F
   532  0001D1                     	ds	1
   533  0001D2                     parser_lthread@x:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x30
   537  0001D2                     	ds	2
   538  0001D4                     ??_main:
   539                           
   540                           ; 0 bytes @ 0x32
   541  0001D4                     	ds	1
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           
   551                           	psect	cstackBANK0
   552  000080                     __pcstackBANK0:
   553                           	opt stack 0
   554  000080                     ?i2_in_high_int:
   555                           	opt stack 0
   556  000080                     handle_start@data_read:
   557                           	opt stack 0
   558  000080                     start_i2c_slave_reply@msg:
   559                           	opt stack 0
   560  000080                     WriteTimer0@timer0:
   561                           	opt stack 0
   562  000080                     i2check_msg@qptr:
   563                           	opt stack 0
   564  000080                     i2memcpy@d1:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x0
   568  000080                     	ds	2
   569  000082                     ??_start_i2c_slave_reply:
   570  000082                     ??i2_check_msg:
   571  000082                     ?i2_in_low_int:
   572                           	opt stack 0
   573  000082                     WriteTimer0@timer:
   574                           	opt stack 0
   575  000082                     i2memcpy@s1:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x2
   579  000082                     	ds	2
   580  000084                     ??_timer0_int_handler:
   581  000084                     i2memcpy@n:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x4
   585  000084                     	ds	1
   586  000085                     start_i2c_slave_reply@length:
   587                           	opt stack 0
   588  000085                     timer0_int_handler@val:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x5
   592  000085                     	ds	1
   593  000086                     i2memcpy@d:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x6
   597  000086                     	ds	2
   598  000088                     i2memcpy@s:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x8
   602  000088                     	ds	2
   603  00008A                     i2send_msg@qptr:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0xA
   607  00008A                     	ds	2
   608  00008C                     i2send_msg@length:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0xC
   612  00008C                     	ds	1
   613  00008D                     i2send_msg@msgtype:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0xD
   617  00008D                     	ds	1
   618  00008E                     i2send_msg@data:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0xE
   622  00008E                     	ds	2
   623  000090                     ??i2_send_msg:
   624                           
   625                           ; 0 bytes @ 0x10
   626  000090                     	ds	1
   627  000091                     i2send_msg@tlength:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x11
   631  000091                     	ds	2
   632  000093                     i2send_msg@slot:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x13
   636  000093                     	ds	1
   637  000094                     i2send_msg@qmsg:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x14
   641  000094                     	ds	2
   642  000096                     ToMainHigh_sendmsg@msgtype:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x16
   646  000096                     	ds	1
   647  000097                     ToMainHigh_sendmsg@data:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x17
   651  000097                     	ds	2
   652  000099                     ToMainHigh_sendmsg@length:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x19
   656  000099                     	ds	1
   657  00009A                     ??_i2c_master_int_handler:
   658  00009A                     ??_i2c_slave_int_handler:
   659                           
   660                           ; 0 bytes @ 0x1A
   661  00009A                     	ds	2
   662  00009C                     i2c_slave_int_handler@error_buf:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x1C
   666  00009C                     	ds	3
   667  00009F                     i2c_slave_int_handler@data_written:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1F
   671  00009F                     	ds	1
   672  0000A0                     i2c_slave_int_handler@overrun_error:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x20
   676  0000A0                     	ds	1
   677  0000A1                     i2c_slave_int_handler@i2c_data:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x21
   681  0000A1                     	ds	1
   682  0000A2                     i2c_slave_int_handler@msg_to_send:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x22
   686  0000A2                     	ds	1
   687  0000A3                     i2c_slave_int_handler@msg_ready:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x23
   691  0000A3                     	ds	1
   692  0000A4                     i2c_slave_int_handler@data_read:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x24
   696  0000A4                     	ds	1
   697  0000A5                     ??_InterruptHandlerHigh:
   698                           
   699                           ; 0 bytes @ 0x25
   700  0000A5                     	ds	14
   701  0000B3                     ??_i2c_configure_slave:
   702  0000B3                     ??_i2c_configure_master:
   703  0000B3                     ?_in_high_int:
   704                           	opt stack 0
   705  0000B3                     i2c_master_recv@length:
   706                           	opt stack 0
   707  0000B3                     OpenTimer0@config:
   708                           	opt stack 0
   709  0000B3                     OpenTimer1@config:
   710                           	opt stack 0
   711  0000B3                     WriteUSART@data:
   712                           	opt stack 0
   713  0000B3                     Delay1KTCYx@unit:
   714                           	opt stack 0
   715  0000B3                     init_queue@qptr:
   716                           	opt stack 0
   717  0000B3                     check_msg@qptr:
   718                           	opt stack 0
   719  0000B3                     i2c_master_send@msg:
   720                           	opt stack 0
   721  0000B3                     init_i2c@ic:
   722                           	opt stack 0
   723  0000B3                     init_uart_recv@uc:
   724                           	opt stack 0
   725  0000B3                     validateMessage@buffer:
   726                           	opt stack 0
   727  0000B3                     getMessageId@buffer:
   728                           	opt stack 0
   729  0000B3                     timer0_lthread@tptr:
   730                           	opt stack 0
   731  0000B3                     init_timer1_lthread@tptr:
   732                           	opt stack 0
   733  0000B3                     timer1_lthread@tptr:
   734                           	opt stack 0
   735  0000B3                     OpenUSART@spbrg:
   736                           	opt stack 0
   737  0000B3                     memcpy@d1:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x33
   741  0000B3                     	ds	1
   742  0000B4                     i2c_configure_master@slave_addr:
   743                           	opt stack 0
   744  0000B4                     i2c_configure_slave@addr:
   745                           	opt stack 0
   746  0000B4                     uart_write@msg:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x34
   750  0000B4                     	ds	1
   751  0000B5                     ??_init_uart_recv:
   752  0000B5                     ??_OpenUSART:
   753  0000B5                     ??_init_queue:
   754  0000B5                     ??_check_msg:
   755  0000B5                     ??_i2c_master_send:
   756  0000B5                     ?_in_low_int:
   757                           	opt stack 0
   758  0000B5                     validateMessage@length:
   759                           	opt stack 0
   760  0000B5                     getMessageId@length:
   761                           	opt stack 0
   762  0000B5                     timer0_lthread@msgtype:
   763                           	opt stack 0
   764  0000B5                     timer1_lthread@msgtype:
   765                           	opt stack 0
   766  0000B5                     memcpy@s1:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x35
   770  0000B5                     	ds	1
   771  0000B6                     ??_uart_write:
   772  0000B6                     ??_validateMessage:
   773  0000B6                     ??_getMessageId:
   774  0000B6                     init_queue@i:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x36
   778  0000B6                     	ds	1
   779  0000B7                     ??_init_queues:
   780  0000B7                     ?_in_main:
   781                           	opt stack 0
   782  0000B7                     i2c_master_send@length:
   783                           	opt stack 0
   784  0000B7                     uart_write@length:
   785                           	opt stack 0
   786  0000B7                     timer0_lthread@length:
   787                           	opt stack 0
   788  0000B7                     timer1_lthread@length:
   789                           	opt stack 0
   790  0000B7                     memcpy@n:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x37
   794  0000B7                     	ds	1
   795  0000B8                     uart_write@i:
   796                           	opt stack 0
   797  0000B8                     OpenUSART@config:
   798                           	opt stack 0
   799  0000B8                     i2c_master_send@currentLength:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x38
   803  0000B8                     	ds	1
   804  0000B9                     ??_block_on_To_msgqueues:
   805  0000B9                     timer0_lthread@msgbuffer:
   806                           	opt stack 0
   807  0000B9                     timer1_lthread@msgbuffer:
   808                           	opt stack 0
   809  0000B9                     memcpy@d:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x39
   813  0000B9                     	ds	2
   814  0000BB                     validateMessage@buf:
   815                           	opt stack 0
   816  0000BB                     memcpy@s:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x3B
   820  0000BB                     	ds	1
   821  0000BC                     validateMessage@buf2:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x3C
   825  0000BC                     	ds	1
   826  0000BD                     validateMessage@buf3:
   827                           	opt stack 0
   828  0000BD                     send_msg@qptr:
   829                           	opt stack 0
   830  0000BD                     recv_msg@qptr:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x3D
   834  0000BD                     	ds	1
   835  0000BE                     validateMessage@checksum:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x3E
   839  0000BE                     	ds	1
   840  0000BF                     send_msg@length:
   841                           	opt stack 0
   842  0000BF                     recv_msg@maxlength:
   843                           	opt stack 0
   844  0000BF                     validateMessage@rollingsum:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x3F
   848  0000BF                     	ds	1
   849  0000C0                     send_msg@msgtype:
   850                           	opt stack 0
   851  0000C0                     recv_msg@msgtype:
   852                           	opt stack 0
   853  0000C0                     validateMessage@i:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x40
   857  0000C0                     	ds	1
   858  0000C1                     send_msg@data:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x41
   862  0000C1                     	ds	1
   863  0000C2                     validateMessage@len:
   864                           	opt stack 0
   865  0000C2                     recv_msg@data:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x42
   869  0000C2                     	ds	1
   870  0000C3                     ??_parser_lthread:
   871  0000C3                     ??_send_msg:
   872                           
   873                           ; 0 bytes @ 0x43
   874  0000C3                     	ds	1
   875  0000C4                     ??_recv_msg:
   876  0000C4                     ToMainLow_sendmsg@msgtype:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x44
   880  0000C4                     	ds	1
   881  0000C5                     ToMainLow_sendmsg@data:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x45
   885  0000C5                     	ds	1
   886  0000C6                     ToMainLow_recvmsg@maxlength:
   887                           	opt stack 0
   888  0000C6                     ToMainHigh_recvmsg@maxlength:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x46
   892  0000C6                     	ds	1
   893  0000C7                     ToMainLow_sendmsg@length:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x47
   897  0000C7                     	ds	1
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           postdec1	equ	0xFE5
   905                           fsr1l	equ	0xFE1
   906                           
   907                           	psect	cstackCOMRAM
   908  000001                     __pcstackCOMRAM:
   909                           	opt stack 0
   910  000001                     ?_ReadTimer1:
   911                           	opt stack 0
   912  000001                     ReadUSART@data:
   913                           	opt stack 0
   914  000001                     WriteTimer1@timer1:
   915                           	opt stack 0
   916  000001                     i1memcpy@d1:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x0
   920  000001                     	ds	2
   921  000003                     ReadTimer1@timer:
   922                           	opt stack 0
   923  000003                     WriteTimer1@timer:
   924                           	opt stack 0
   925  000003                     i1memcpy@s1:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x2
   929  000003                     	ds	2
   930  000005                     timer1_int_handler@result:
   931                           	opt stack 0
   932  000005                     i1memcpy@n:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x4
   936  000005                     	ds	2
   937  000007                     i1memcpy@d:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x6
   941  000007                     	ds	2
   942  000009                     i1memcpy@s:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x8
   946  000009                     	ds	2
   947  00000B                     i1send_msg@qptr:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0xA
   951  00000B                     	ds	2
   952  00000D                     i1send_msg@length:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0xC
   956  00000D                     	ds	1
   957  00000E                     i1send_msg@msgtype:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0xD
   961  00000E                     	ds	1
   962  00000F                     i1send_msg@data:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0xE
   966  00000F                     	ds	2
   967  000011                     ??i1_send_msg:
   968                           
   969                           ; 0 bytes @ 0x10
   970  000011                     	ds	1
   971  000012                     i1send_msg@tlength:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x11
   975  000012                     	ds	2
   976  000014                     i1send_msg@slot:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x13
   980  000014                     	ds	1
   981  000015                     i1send_msg@qmsg:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x14
   985  000015                     	ds	2
   986  000017                     i1ToMainLow_sendmsg@msgtype:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x16
   990  000017                     	ds	1
   991  000018                     i1ToMainLow_sendmsg@data:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x17
   995  000018                     	ds	2
   996  00001A                     i1ToMainLow_sendmsg@length:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x19
  1000  00001A                     	ds	1
  1001  00001B                     ??_parseUART:
  1002                           
  1003                           ; 0 bytes @ 0x1A
  1004  00001B                     	ds	5
  1005  000020                     parseUART@x:
  1006                           	opt stack 0
  1007                           
  1008                           ; 1 bytes @ 0x1F
  1009  000020                     	ds	1
  1010  000021                     ??_uart_recv_int_handler:
  1011                           
  1012                           ; 0 bytes @ 0x20
  1013  000021                     	ds	1
  1014  000022                     ??_InterruptHandlerLow:
  1015                           
  1016                           ; 0 bytes @ 0x21
  1017  000022                     	ds	17
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           postdec1	equ	0xFE5
  1025                           fsr1l	equ	0xFE1
  1026                           
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 187 in file "source/main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  ic             53   22[BANK2 ] struct __i2c_comm
  1037 ;;  msgbuffer      11    2[BANK2 ] unsigned char [11]
  1038 ;;  uc              5   15[BANK2 ] struct __uart_comm
  1039 ;;  t1thread_dat    2   13[BANK2 ] struct __timer1_thread_s
  1040 ;;  t0thread_dat    2    0[BANK2 ] struct __timer0_thread_s
  1041 ;;  length          1   21[BANK2 ] char 
  1042 ;;  msgtype         1   20[BANK2 ] unsigned char 
  1043 ;;  i               1    0        unsigned char 
  1044 ;;  last_reg_rec    1    0        unsigned char 
  1045 ;;  c               1    0        unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;		None               void
  1048 ;; Registers used:
  1049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0      75       0
  1057 ;;      Temps:          0       0       1       0       0
  1058 ;;      Totals:         0       0       1      75       0
  1059 ;;Total ram usage:       76 bytes
  1060 ;; Hardware stack levels required when called:   16
  1061 ;; This function calls:
  1062 ;;		_OpenTimer0
  1063 ;;		_OpenTimer1
  1064 ;;		_OpenUSART
  1065 ;;		_ToMainHigh_recvmsg
  1066 ;;		_ToMainLow_recvmsg
  1067 ;;		_ToMainLow_sendmsg
  1068 ;;		_block_on_To_msgqueues
  1069 ;;		_enable_interrupts
  1070 ;;		_i2c_configure_slave
  1071 ;;		_init_i2c
  1072 ;;		_init_queues
  1073 ;;		_init_timer1_lthread
  1074 ;;		_init_uart_recv
  1075 ;;		_parser_lthread
  1076 ;;		_timer0_lthread
  1077 ;;		_timer1_lthread
  1078 ;;		_uart_write
  1079 ;; This function is called by:
  1080 ;;		Startup code after reset
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text0
  1085  000F8A                     __ptext0:
  1086                           	opt stack 0
  1087  000F8A                     _main:
  1088                           	opt stack 15
  1089                           
  1090                           ;main.c: 188: char c;
  1091                           ;main.c: 189: signed char length;
  1092                           ;main.c: 190: unsigned char msgtype;
  1093                           ;main.c: 191: unsigned char last_reg_recvd;
  1094                           ;main.c: 192: uart_comm uc;
  1095                           ;main.c: 193: i2c_comm ic;
  1096                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
  1097                           ;main.c: 195: unsigned char i;
  1098                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1099                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1100                           ;main.c: 205: OSCCON = 0x82;
  1101                           
  1102                           ;incstack = 0
  1103  000F8A  0E82               	movlw	130
  1104  000F8C  6ED3               	movwf	4051,c	;volatile
  1105                           
  1106                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
  1107  000F8E  8C9B               	bsf	3995,6,c	;volatile
  1108                           
  1109                           ;main.c: 224: init_uart_recv(&uc);
  1110  000F90  0102               	movlb	2	; () banked
  1111  000F92  0E02               	movlw	high main@uc
  1112  000F94  0100               	movlb	0	; () banked
  1113  000F96  0100               	movlb	0	; () banked
  1114  000F98  6FB4               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1115  000F9A  0102               	movlb	2	; () banked
  1116  000F9C  0E0F               	movlw	low main@uc
  1117  000F9E  0100               	movlb	0	; () banked
  1118  000FA0  0100               	movlb	0	; () banked
  1119  000FA2  6FB3               	movwf	init_uart_recv@uc& (0+255),b
  1120  000FA4  ECFB  F010         	call	_init_uart_recv	;wreg free
  1121                           
  1122                           ;main.c: 227: init_i2c(&ic);
  1123  000FA8  0102               	movlb	2	; () banked
  1124  000FAA  0E02               	movlw	high main@ic
  1125  000FAC  0100               	movlb	0	; () banked
  1126  000FAE  0100               	movlb	0	; () banked
  1127  000FB0  6FB4               	movwf	(init_i2c@ic+1)& (0+255),b
  1128  000FB2  0102               	movlb	2	; () banked
  1129  000FB4  0E16               	movlw	low main@ic
  1130  000FB6  0100               	movlb	0	; () banked
  1131  000FB8  0100               	movlb	0	; () banked
  1132  000FBA  6FB3               	movwf	init_i2c@ic& (0+255),b
  1133  000FBC  EC50  F00D         	call	_init_i2c	;wreg free
  1134                           
  1135                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1136  000FC0  0102               	movlb	2	; () banked
  1137  000FC2  0E02               	movlw	high main@t1thread_data
  1138  000FC4  0100               	movlb	0	; () banked
  1139  000FC6  0100               	movlb	0	; () banked
  1140  000FC8  6FB4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1141  000FCA  0102               	movlb	2	; () banked
  1142  000FCC  0E0D               	movlw	low main@t1thread_data
  1143  000FCE  0100               	movlb	0	; () banked
  1144  000FD0  0100               	movlb	0	; () banked
  1145  000FD2  6FB3               	movwf	init_timer1_lthread@tptr& (0+255),b
  1146  000FD4  EC4E  F013         	call	_init_timer1_lthread	;wreg free
  1147                           
  1148                           ;main.c: 233: init_queues();
  1149  000FD8  EC78  F00F         	call	_init_queues	;wreg free
  1150                           
  1151                           ;main.c: 237: TRISB = 0x0;
  1152  000FDC  0E00               	movlw	0
  1153  000FDE  6E93               	movwf	3987,c	;volatile
  1154                           
  1155                           ;main.c: 238: LATB = 0x0;
  1156  000FE0  0E00               	movlw	0
  1157  000FE2  6E8A               	movwf	3978,c	;volatile
  1158                           
  1159                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110111);
  1160  000FE4  0E97               	movlw	151
  1161  000FE6  ECD1  F012         	call	_OpenTimer0
  1162                           
  1163                           ;main.c: 260: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1164  000FEA  0EF5               	movlw	245
  1165  000FEC  EC2F  F012         	call	_OpenTimer1
  1166                           
  1167                           ;main.c: 267: IPR1bits.TMR1IP = 0;
  1168  000FF0  909F               	bcf	3999,0,c	;volatile
  1169                           
  1170                           ;main.c: 269: IPR1bits.RCIP = 0;
  1171  000FF2  9A9F               	bcf	3999,5,c	;volatile
  1172                           
  1173                           ;main.c: 271: IPR1bits.SSPIP = 1;
  1174  000FF4  869F               	bsf	3999,3,c	;volatile
  1175                           
  1176                           ;main.c: 280: i2c_configure_slave(0x9E);
  1177  000FF6  0E9E               	movlw	158
  1178  000FF8  EC13  F012         	call	_i2c_configure_slave
  1179                           
  1180                           ;main.c: 295: PIE1bits.SSPIE = 1;
  1181  000FFC  869D               	bsf	3997,3,c	;volatile
  1182                           
  1183                           ;main.c: 306: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1184                           ;main.c: 307: 0b11111111 & 0b11101111, 0x26);
  1185  000FFE  0E00               	movlw	0
  1186  001000  0100               	movlb	0	; () banked
  1187  001002  0100               	movlb	0	; () banked
  1188  001004  6FB4               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1189  001006  0E26               	movlw	38
  1190  001008  0100               	movlb	0	; () banked
  1191  00100A  6FB3               	movwf	OpenUSART@spbrg& (0+255),b
  1192  00100C  0E6C               	movlw	108
  1193  00100E  EC72  F00E         	call	_OpenUSART
  1194                           
  1195                           ;main.c: 313: enable_interrupts();
  1196  001012  EC88  F013         	call	_enable_interrupts	;wreg free
  1197  001016                     l3728:
  1198                           
  1199                           ;main.c: 339: block_on_To_msgqueues();
  1200  001016  ECFC  F00E         	call	_block_on_To_msgqueues	;wreg free
  1201                           
  1202                           ;main.c: 346: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1203  00101A  0102               	movlb	2	; () banked
  1204  00101C  0E02               	movlw	high main@msgtype
  1205  00101E  0101               	movlb	1	; () banked
  1206  001020  0101               	movlb	1	; () banked
  1207  001022  6FA8               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1208  001024  0102               	movlb	2	; () banked
  1209  001026  0E14               	movlw	low main@msgtype
  1210  001028  0101               	movlb	1	; () banked
  1211  00102A  0101               	movlb	1	; () banked
  1212  00102C  6FA7               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1213  00102E  0102               	movlb	2	; () banked
  1214  001030  0E02               	movlw	high main@msgbuffer
  1215  001032  0101               	movlb	1	; () banked
  1216  001034  0101               	movlb	1	; () banked
  1217  001036  6FAA               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1218  001038  0102               	movlb	2	; () banked
  1219  00103A  0E02               	movlw	low main@msgbuffer
  1220  00103C  0101               	movlb	1	; () banked
  1221  00103E  0101               	movlb	1	; () banked
  1222  001040  6FA9               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1223  001042  0E0A               	movlw	10
  1224  001044  ECD2  F011         	call	_ToMainHigh_recvmsg
  1225  001048  0102               	movlb	2	; () banked
  1226  00104A  0102               	movlb	2	; () banked
  1227  00104C  6F15               	movwf	main@length& (0+255),b
  1228                           
  1229                           ; BSR set to: 2
  1230                           ;main.c: 347: if (length < 0) {
  1231  00104E  0102               	movlb	2	; () banked
  1232  001050  0102               	movlb	2	; () banked
  1233  001052  BF15               	btfsc	main@length& (0+255),7,b
  1234  001054  D05E               	goto	l3746
  1235  001056  D051               	goto	l3744
  1236  001058                     l3736:
  1237                           
  1238                           ; BSR set to: 2
  1239                           ;main.c: 355: {
  1240                           ;main.c: 356: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1241  001058  0102               	movlb	2	; () banked
  1242  00105A  0E02               	movlw	high main@t0thread_data
  1243  00105C  0100               	movlb	0	; () banked
  1244  00105E  0100               	movlb	0	; () banked
  1245  001060  6FB4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1246  001062  0102               	movlb	2	; () banked
  1247  001064  0E00               	movlw	low main@t0thread_data
  1248  001066  0100               	movlb	0	; () banked
  1249  001068  0100               	movlb	0	; () banked
  1250  00106A  6FB3               	movwf	timer0_lthread@tptr& (0+255),b
  1251  00106C  0102               	movlb	2	; () banked
  1252  00106E  0100               	movlb	0	; () banked
  1253  001070  C214  F0B5         	movff	main@msgtype,timer0_lthread@msgtype
  1254  001074  0100               	movlb	0	; () banked
  1255  001076  0100               	movlb	0	; () banked
  1256  001078  6BB6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1257  00107A  0102               	movlb	2	; () banked
  1258  00107C  0102               	movlb	2	; () banked
  1259  00107E  5115               	movf	main@length& (0+255),w,b
  1260  001080  0100               	movlb	0	; () banked
  1261  001082  0100               	movlb	0	; () banked
  1262  001084  6FB7               	movwf	timer0_lthread@length& (0+255),b
  1263  001086  0100               	movlb	0	; () banked
  1264  001088  6BB8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1265  00108A  0100               	movlb	0	; () banked
  1266  00108C  BFB7               	btfsc	timer0_lthread@length& (0+255),7,b
  1267  00108E  07B8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1268  001090  0102               	movlb	2	; () banked
  1269  001092  0E02               	movlw	high main@msgbuffer
  1270  001094  0100               	movlb	0	; () banked
  1271  001096  0100               	movlb	0	; () banked
  1272  001098  6FBA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1273  00109A  0102               	movlb	2	; () banked
  1274  00109C  0E02               	movlw	low main@msgbuffer
  1275  00109E  0100               	movlb	0	; () banked
  1276  0010A0  0100               	movlb	0	; () banked
  1277  0010A2  6FB9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1278  0010A4  EC91  F013         	call	_timer0_lthread	;wreg free
  1279                           
  1280                           ;main.c: 357: break;
  1281  0010A8  D034               	goto	l3746
  1282  0010AA                     l3738:
  1283                           
  1284                           ;main.c: 360: {
  1285                           ;main.c: 361: ToMainLow_sendmsg(length,50,msgbuffer);
  1286  0010AA  0101               	movlb	1	; () banked
  1287  0010AC  6FD4               	movwf	??_main& (0+255),b
  1288  0010AE  0E32               	movlw	50
  1289  0010B0  0100               	movlb	0	; () banked
  1290  0010B2  0100               	movlb	0	; () banked
  1291  0010B4  6FC4               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  1292  0010B6  0101               	movlb	1	; () banked
  1293  0010B8  51D4               	movf	??_main& (0+255),w,b
  1294  0010BA  0102               	movlb	2	; () banked
  1295  0010BC  0E02               	movlw	high main@msgbuffer
  1296  0010BE  0100               	movlb	0	; () banked
  1297  0010C0  0100               	movlb	0	; () banked
  1298  0010C2  6FC6               	movwf	(ToMainLow_sendmsg@data+1)& (0+255),b
  1299  0010C4  0102               	movlb	2	; () banked
  1300  0010C6  0E02               	movlw	low main@msgbuffer
  1301  0010C8  0100               	movlb	0	; () banked
  1302  0010CA  0100               	movlb	0	; () banked
  1303  0010CC  6FC5               	movwf	ToMainLow_sendmsg@data& (0+255),b
  1304  0010CE  0102               	movlb	2	; () banked
  1305  0010D0  0102               	movlb	2	; () banked
  1306  0010D2  5115               	movf	main@length& (0+255),w,b
  1307  0010D4  EC66  F012         	call	_ToMainLow_sendmsg
  1308                           
  1309                           ;main.c: 362: break;
  1310  0010D8  D01C               	goto	l3746
  1311  0010DA                     l3740:
  1312                           
  1313                           ;main.c: 365: {
  1314                           ;main.c: 366: uart_write(length,msgbuffer);
  1315  0010DA  0102               	movlb	2	; () banked
  1316  0010DC  0E02               	movlw	high main@msgbuffer
  1317  0010DE  0100               	movlb	0	; () banked
  1318  0010E0  0100               	movlb	0	; () banked
  1319  0010E2  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  1320  0010E4  0102               	movlb	2	; () banked
  1321  0010E6  0E02               	movlw	low main@msgbuffer
  1322  0010E8  0100               	movlb	0	; () banked
  1323  0010EA  0100               	movlb	0	; () banked
  1324  0010EC  6FB4               	movwf	uart_write@msg& (0+255),b
  1325  0010EE  0102               	movlb	2	; () banked
  1326  0010F0  0102               	movlb	2	; () banked
  1327  0010F2  5115               	movf	main@length& (0+255),w,b
  1328  0010F4  EC19  F010         	call	_uart_write
  1329                           
  1330                           ;main.c: 367: break;
  1331  0010F8  D00C               	goto	l3746
  1332  0010FA                     l3744:
  1333  0010FA  0102               	movlb	2	; () banked
  1334  0010FC  0102               	movlb	2	; () banked
  1335  0010FE  5114               	movf	main@msgtype& (0+255),w,b
  1336                           
  1337                           ; Switch size 1, requested type "space"
  1338                           ; Number of cases is 3, Range of values is 10 to 47
  1339                           ; switch strategies available:
  1340                           ; Name         Instructions Cycles
  1341                           ; simple_byte           10     6 (average)
  1342                           ;	Chosen strategy is simple_byte
  1343  001100  0A0A               	xorlw	10	; case 10
  1344  001102  B4D8               	btfsc	status,2,c
  1345  001104  D7A9               	goto	l3736
  1346  001106  0A27               	xorlw	39	; case 45
  1347  001108  B4D8               	btfsc	status,2,c
  1348  00110A  D7CF               	goto	l3738
  1349  00110C  0A02               	xorlw	2	; case 47
  1350  00110E  B4D8               	btfsc	status,2,c
  1351  001110  D7E4               	goto	l3740
  1352  001112                     l3746:
  1353                           
  1354                           ;main.c: 376: }
  1355                           ;main.c: 379: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1356  001112  0102               	movlb	2	; () banked
  1357  001114  0E02               	movlw	high main@msgtype
  1358  001116  0101               	movlb	1	; () banked
  1359  001118  0101               	movlb	1	; () banked
  1360  00111A  6FA8               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1361  00111C  0102               	movlb	2	; () banked
  1362  00111E  0E14               	movlw	low main@msgtype
  1363  001120  0101               	movlb	1	; () banked
  1364  001122  0101               	movlb	1	; () banked
  1365  001124  6FA7               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1366  001126  0102               	movlb	2	; () banked
  1367  001128  0E02               	movlw	high main@msgbuffer
  1368  00112A  0101               	movlb	1	; () banked
  1369  00112C  0101               	movlb	1	; () banked
  1370  00112E  6FAA               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1371  001130  0102               	movlb	2	; () banked
  1372  001132  0E02               	movlw	low main@msgbuffer
  1373  001134  0101               	movlb	1	; () banked
  1374  001136  0101               	movlb	1	; () banked
  1375  001138  6FA9               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1376  00113A  0E0A               	movlw	10
  1377  00113C  ECB1  F011         	call	_ToMainLow_recvmsg
  1378  001140  0102               	movlb	2	; () banked
  1379  001142  0102               	movlb	2	; () banked
  1380  001144  6F15               	movwf	main@length& (0+255),b
  1381                           
  1382                           ; BSR set to: 2
  1383                           ;main.c: 380: if (length < 0) {
  1384  001146  0102               	movlb	2	; () banked
  1385  001148  0102               	movlb	2	; () banked
  1386  00114A  BF15               	btfsc	main@length& (0+255),7,b
  1387  00114C  D764               	goto	l3728
  1388  00114E  D067               	goto	l3760
  1389  001150                     l3752:
  1390                           
  1391                           ; BSR set to: 2
  1392                           ;main.c: 388: {
  1393                           ;main.c: 389: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1394  001150  0102               	movlb	2	; () banked
  1395  001152  0E02               	movlw	high main@t1thread_data
  1396  001154  0100               	movlb	0	; () banked
  1397  001156  0100               	movlb	0	; () banked
  1398  001158  6FB4               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1399  00115A  0102               	movlb	2	; () banked
  1400  00115C  0E0D               	movlw	low main@t1thread_data
  1401  00115E  0100               	movlb	0	; () banked
  1402  001160  0100               	movlb	0	; () banked
  1403  001162  6FB3               	movwf	timer1_lthread@tptr& (0+255),b
  1404  001164  0102               	movlb	2	; () banked
  1405  001166  0100               	movlb	0	; () banked
  1406  001168  C214  F0B5         	movff	main@msgtype,timer1_lthread@msgtype
  1407  00116C  0100               	movlb	0	; () banked
  1408  00116E  0100               	movlb	0	; () banked
  1409  001170  6BB6               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1410  001172  0102               	movlb	2	; () banked
  1411  001174  0102               	movlb	2	; () banked
  1412  001176  5115               	movf	main@length& (0+255),w,b
  1413  001178  0100               	movlb	0	; () banked
  1414  00117A  0100               	movlb	0	; () banked
  1415  00117C  6FB7               	movwf	timer1_lthread@length& (0+255),b
  1416  00117E  0100               	movlb	0	; () banked
  1417  001180  6BB8               	clrf	(timer1_lthread@length+1)& (0+255),b
  1418  001182  0100               	movlb	0	; () banked
  1419  001184  BFB7               	btfsc	timer1_lthread@length& (0+255),7,b
  1420  001186  07B8               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1421  001188  0102               	movlb	2	; () banked
  1422  00118A  0E02               	movlw	high main@msgbuffer
  1423  00118C  0100               	movlb	0	; () banked
  1424  00118E  0100               	movlb	0	; () banked
  1425  001190  6FBA               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1426  001192  0102               	movlb	2	; () banked
  1427  001194  0E02               	movlw	low main@msgbuffer
  1428  001196  0100               	movlb	0	; () banked
  1429  001198  0100               	movlb	0	; () banked
  1430  00119A  6FB9               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1431  00119C  EC90  F013         	call	_timer1_lthread	;wreg free
  1432                           
  1433                           ;main.c: 390: break;
  1434  0011A0  D73A               	goto	l3728
  1435  0011A2                     l3754:
  1436                           
  1437                           ;main.c: 402: {
  1438                           ;main.c: 403: parser_lthread(msgtype,length,msgbuffer);
  1439  0011A2  0102               	movlb	2	; () banked
  1440  0011A4  0101               	movlb	1	; () banked
  1441  0011A6  C214  F1A2         	movff	main@msgtype,parser_lthread@msgtype
  1442  0011AA  0101               	movlb	1	; () banked
  1443  0011AC  0101               	movlb	1	; () banked
  1444  0011AE  6BA3               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1445  0011B0  0102               	movlb	2	; () banked
  1446  0011B2  0102               	movlb	2	; () banked
  1447  0011B4  5115               	movf	main@length& (0+255),w,b
  1448  0011B6  0101               	movlb	1	; () banked
  1449  0011B8  0101               	movlb	1	; () banked
  1450  0011BA  6FA4               	movwf	parser_lthread@length& (0+255),b
  1451  0011BC  0101               	movlb	1	; () banked
  1452  0011BE  6BA5               	clrf	(parser_lthread@length+1)& (0+255),b
  1453  0011C0  0101               	movlb	1	; () banked
  1454  0011C2  BFA4               	btfsc	parser_lthread@length& (0+255),7,b
  1455  0011C4  07A5               	decf	(parser_lthread@length+1)& (0+255),f,b
  1456  0011C6  0102               	movlb	2	; () banked
  1457  0011C8  0E02               	movlw	high main@msgbuffer
  1458  0011CA  0101               	movlb	1	; () banked
  1459  0011CC  0101               	movlb	1	; () banked
  1460  0011CE  6FA7               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1461  0011D0  0102               	movlb	2	; () banked
  1462  0011D2  0E02               	movlw	low main@msgbuffer
  1463  0011D4  0101               	movlb	1	; () banked
  1464  0011D6  0101               	movlb	1	; () banked
  1465  0011D8  6FA6               	movwf	parser_lthread@msgbuf& (0+255),b
  1466  0011DA  EC84  F003         	call	_parser_lthread	;wreg free
  1467                           
  1468                           ;main.c: 404: break;
  1469  0011DE  D71B               	goto	l3728
  1470  0011E0                     l3756:
  1471                           
  1472                           ;main.c: 407: {
  1473                           ;main.c: 408: parser_lthread(msgtype,length,msgbuffer);
  1474  0011E0  0102               	movlb	2	; () banked
  1475  0011E2  0101               	movlb	1	; () banked
  1476  0011E4  C214  F1A2         	movff	main@msgtype,parser_lthread@msgtype
  1477  0011E8  0101               	movlb	1	; () banked
  1478  0011EA  0101               	movlb	1	; () banked
  1479  0011EC  6BA3               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1480  0011EE  0102               	movlb	2	; () banked
  1481  0011F0  0102               	movlb	2	; () banked
  1482  0011F2  5115               	movf	main@length& (0+255),w,b
  1483  0011F4  0101               	movlb	1	; () banked
  1484  0011F6  0101               	movlb	1	; () banked
  1485  0011F8  6FA4               	movwf	parser_lthread@length& (0+255),b
  1486  0011FA  0101               	movlb	1	; () banked
  1487  0011FC  6BA5               	clrf	(parser_lthread@length+1)& (0+255),b
  1488  0011FE  0101               	movlb	1	; () banked
  1489  001200  BFA4               	btfsc	parser_lthread@length& (0+255),7,b
  1490  001202  07A5               	decf	(parser_lthread@length+1)& (0+255),f,b
  1491  001204  0102               	movlb	2	; () banked
  1492  001206  0E02               	movlw	high main@msgbuffer
  1493  001208  0101               	movlb	1	; () banked
  1494  00120A  0101               	movlb	1	; () banked
  1495  00120C  6FA7               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1496  00120E  0102               	movlb	2	; () banked
  1497  001210  0E02               	movlw	low main@msgbuffer
  1498  001212  0101               	movlb	1	; () banked
  1499  001214  0101               	movlb	1	; () banked
  1500  001216  6FA6               	movwf	parser_lthread@msgbuf& (0+255),b
  1501  001218  EC84  F003         	call	_parser_lthread	;wreg free
  1502                           
  1503                           ;main.c: 409: break;
  1504  00121C  D6FC               	goto	l3728
  1505  00121E                     l3760:
  1506  00121E  0102               	movlb	2	; () banked
  1507  001220  0102               	movlb	2	; () banked
  1508  001222  5114               	movf	main@msgtype& (0+255),w,b
  1509                           
  1510                           ; Switch size 1, requested type "space"
  1511                           ; Number of cases is 5, Range of values is 11 to 50
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte           16     9 (average)
  1515                           ;	Chosen strategy is simple_byte
  1516  001224  0A0B               	xorlw	11	; case 11
  1517  001226  B4D8               	btfsc	status,2,c
  1518  001228  D793               	goto	l3752
  1519  00122A  0A15               	xorlw	21	; case 30
  1520  00122C  B4D8               	btfsc	status,2,c
  1521  00122E  D6F3               	goto	l3728
  1522  001230  0A01               	xorlw	1	; case 31
  1523  001232  B4D8               	btfsc	status,2,c
  1524  001234  D6F0               	goto	l3728
  1525  001236  0A2E               	xorlw	46	; case 49
  1526  001238  B4D8               	btfsc	status,2,c
  1527  00123A  D7B3               	goto	l3754
  1528  00123C  0A03               	xorlw	3	; case 50
  1529  00123E  B4D8               	btfsc	status,2,c
  1530  001240  D7CF               	goto	l3756
  1531  001242  D6E9               	goto	l3728
  1532  001244                     __end_of_main:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           postinc0	equ	0xFEE
  1539                           wreg	equ	0xFE8
  1540                           postdec1	equ	0xFE5
  1541                           fsr1l	equ	0xFE1
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _timer1_lthread *****************
  1545 ;; Defined at:
  1546 ;;		line 14 in file "source/timer1_thread.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  tptr            2   51[BANK0 ] PTR struct __timer1_thre
  1549 ;;		 -> main@t1thread_data(2), 
  1550 ;;  msgtype         2   53[BANK0 ] int 
  1551 ;;  length          2   55[BANK0 ] int 
  1552 ;;  msgbuffer       2   57[BANK0 ] PTR unsigned char 
  1553 ;;		 -> main@msgbuffer(11), 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  2   51[BANK0 ] int 
  1558 ;; Registers used:
  1559 ;;		None
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1565 ;;      Params:         0       8       0       0       0
  1566 ;;      Locals:         0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0
  1568 ;;      Totals:         0       8       0       0       0
  1569 ;;Total ram usage:        8 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:   12
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text1
  1580  002720                     __ptext1:
  1581                           	opt stack 0
  1582  002720                     _timer1_lthread:
  1583                           	opt stack 18
  1584                           
  1585                           ; BSR set to: 2
  1586                           ;incstack = 0
  1587  002720  0012               	return	
  1588  002722                     __end_of_timer1_lthread:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           postdec1	equ	0xFE5
  1597                           fsr1l	equ	0xFE1
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _timer0_lthread *****************
  1601 ;; Defined at:
  1602 ;;		line 9 in file "source/timer0_thread.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  tptr            2   51[BANK0 ] PTR struct __timer0_thre
  1605 ;;		 -> main@t0thread_data(2), 
  1606 ;;  msgtype         2   53[BANK0 ] int 
  1607 ;;  length          2   55[BANK0 ] int 
  1608 ;;  msgbuffer       2   57[BANK0 ] PTR unsigned char 
  1609 ;;		 -> main@msgbuffer(11), 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  2   51[BANK0 ] int 
  1614 ;; Registers used:
  1615 ;;		None
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1621 ;;      Params:         0       8       0       0       0
  1622 ;;      Locals:         0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0
  1624 ;;      Totals:         0       8       0       0       0
  1625 ;;Total ram usage:        8 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:   12
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text2
  1636  002722                     __ptext2:
  1637                           	opt stack 0
  1638  002722                     _timer0_lthread:
  1639                           	opt stack 18
  1640                           
  1641                           ;incstack = 0
  1642  002722  0012               	return	
  1643  002724                     __end_of_timer0_lthread:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           postdec1	equ	0xFE5
  1652                           fsr1l	equ	0xFE1
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _parser_lthread *****************
  1656 ;; Defined at:
  1657 ;;		line 8 in file "source/Parser_thread.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  msgtype         2    0[BANK1 ] int 
  1660 ;;  length          2    2[BANK1 ] int 
  1661 ;;  msgbuf          2    4[BANK1 ] PTR unsigned char 
  1662 ;;		 -> main@msgbuffer(11), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  reply           6   23[BANK1 ] unsigned char [6]
  1665 ;;  reply           6   17[BANK1 ] unsigned char [6]
  1666 ;;  reply           6   11[BANK1 ] unsigned char [6]
  1667 ;;  data            5    6[BANK1 ] unsigned char [5]
  1668 ;;  ticks           2    0        unsigned int 
  1669 ;;  degrees         1   47[BANK1 ] unsigned char 
  1670 ;;  command         1   46[BANK1 ] unsigned char 
  1671 ;;  Inches          1   44[BANK1 ] unsigned char 
  1672 ;;  Feet            1   43[BANK1 ] unsigned char 
  1673 ;;  data           12   29[BANK1 ] unsigned char [12]
  1674 ;;  x               2   48[BANK1 ] int 
  1675 ;;  checksum        2   41[BANK1 ] unsigned int 
  1676 ;;  status          1   45[BANK1 ] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2    0[BANK1 ] int 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1686 ;;      Params:         0       0       6       0       0
  1687 ;;      Locals:         0       0      44       0       0
  1688 ;;      Temps:          0       2       0       0       0
  1689 ;;      Totals:         0       2      50       0       0
  1690 ;;Total ram usage:       52 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:   14
  1693 ;; This function calls:
  1694 ;;		_getMessageId
  1695 ;;		_i2c_configure_master
  1696 ;;		_i2c_master_recv
  1697 ;;		_i2c_master_send
  1698 ;;		_uart_write
  1699 ;;		_validateMessage
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text3
  1706  000708                     __ptext3:
  1707                           	opt stack 0
  1708  000708                     _parser_lthread:
  1709                           	opt stack 16
  1710                           
  1711                           ;Parser_thread.c: 10: if(msgtype == 49) {
  1712                           
  1713                           ;incstack = 0
  1714  000708  0101               	movlb	1	; () banked
  1715  00070A  0101               	movlb	1	; () banked
  1716  00070C  51A2               	movf	parser_lthread@msgtype& (0+255),w,b
  1717  00070E  0A31               	xorlw	49
  1718  000710  11A3               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  1719  000712  A4D8               	btfss	status,2,c
  1720  000714  D176               	goto	l3992
  1721                           
  1722                           ; BSR set to: 1
  1723                           ;Parser_thread.c: 12: if ( !validateMessage(msgbuf, (unsigned char) length) )
  1724  000716  0101               	movlb	1	; () banked
  1725  000718  0100               	movlb	0	; () banked
  1726  00071A  C1A7  F0B4         	movff	parser_lthread@msgbuf+1,validateMessage@buffer+1
  1727  00071E  0101               	movlb	1	; () banked
  1728  000720  0100               	movlb	0	; () banked
  1729  000722  C1A6  F0B3         	movff	parser_lthread@msgbuf,validateMessage@buffer
  1730  000726  C1A4  F0B5         	movff	parser_lthread@length,validateMessage@length
  1731  00072A  EC0F  F00A         	call	_validateMessage	;wreg free
  1732  00072E  0900               	iorlw	0
  1733  000730  B4D8               	btfsc	status,2,c
  1734  000732  0012               	return	
  1735  000734  D14D               	goto	l3990
  1736  000736                     l3950:
  1737                           
  1738                           ;Parser_thread.c: 18: {
  1739                           ;Parser_thread.c: 19: i2c_configure_master(0x4D);
  1740  000736  0E4D               	movlw	77
  1741  000738  ECA9  F010         	call	_i2c_configure_master
  1742                           
  1743                           ;Parser_thread.c: 20: i2c_master_recv(0x07);
  1744  00073C  0E07               	movlw	7
  1745  00073E  ECD3  F010         	call	_i2c_master_recv
  1746                           
  1747                           ;Parser_thread.c: 21: break;
  1748  000742  D15F               	goto	l3992
  1749  000744                     l3952:
  1750                           
  1751                           ;Parser_thread.c: 25: {
  1752                           ;Parser_thread.c: 26: unsigned char data[5];
  1753                           ;Parser_thread.c: 27: unsigned char command;
  1754                           ;Parser_thread.c: 28: unsigned int ticks;
  1755                           ;Parser_thread.c: 29: unsigned char Feet = 0;
  1756  000744  0100               	movlb	0	; () banked
  1757  000746  6FC3               	movwf	??_parser_lthread& (0+255),b
  1758  000748  0E00               	movlw	0
  1759  00074A  0101               	movlb	1	; () banked
  1760  00074C  0101               	movlb	1	; () banked
  1761  00074E  6FCD               	movwf	parser_lthread@Feet& (0+255),b
  1762  000750  0100               	movlb	0	; () banked
  1763  000752  51C3               	movf	??_parser_lthread& (0+255),w,b
  1764                           
  1765                           ;Parser_thread.c: 30: unsigned char Inches = 0;
  1766  000754  0100               	movlb	0	; () banked
  1767  000756  6FC3               	movwf	??_parser_lthread& (0+255),b
  1768  000758  0E00               	movlw	0
  1769  00075A  0101               	movlb	1	; () banked
  1770  00075C  0101               	movlb	1	; () banked
  1771  00075E  6FCE               	movwf	parser_lthread@Inches& (0+255),b
  1772  000760  0100               	movlb	0	; () banked
  1773  000762  51C3               	movf	??_parser_lthread& (0+255),w,b
  1774                           
  1775                           ;Parser_thread.c: 31: unsigned char degrees = 0;
  1776  000764  0100               	movlb	0	; () banked
  1777  000766  6FC3               	movwf	??_parser_lthread& (0+255),b
  1778  000768  0E00               	movlw	0
  1779  00076A  0101               	movlb	1	; () banked
  1780  00076C  0101               	movlb	1	; () banked
  1781  00076E  6FD1               	movwf	parser_lthread@degrees& (0+255),b
  1782  000770  0100               	movlb	0	; () banked
  1783  000772  51C3               	movf	??_parser_lthread& (0+255),w,b
  1784                           
  1785                           ;Parser_thread.c: 33: switch(msgbuf[1] & 0x0F)
  1786  000774  D03D               	goto	l3970
  1787  000776                     l3954:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;Parser_thread.c: 36: {
  1791                           ;Parser_thread.c: 38: command = 0x01;
  1792  000776  0100               	movlb	0	; () banked
  1793  000778  6FC3               	movwf	??_parser_lthread& (0+255),b
  1794  00077A  0E01               	movlw	1
  1795  00077C  D003               	goto	L1
  1796  00077E                     l3958:
  1797                           
  1798                           ;Parser_thread.c: 43: {
  1799                           ;Parser_thread.c: 45: command = 0x02;
  1800  00077E  0100               	movlb	0	; () banked
  1801  000780  6FC3               	movwf	??_parser_lthread& (0+255),b
  1802  000782  0E02               	movlw	2
  1803  000784                     L1:
  1804  000784  0101               	movlb	1	; () banked
  1805  000786  0101               	movlb	1	; () banked
  1806  000788  6FD0               	movwf	parser_lthread@command& (0+255),b
  1807  00078A  0100               	movlb	0	; () banked
  1808  00078C  51C3               	movf	??_parser_lthread& (0+255),w,b
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;Parser_thread.c: 46: degrees = msgbuf[2];
  1812  00078E  0101               	movlb	1	; () banked
  1813  000790  EE20 F002          	lfsr	2,2
  1814  000794  0101               	movlb	1	; () banked
  1815  000796  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1816  000798  26D9               	addwf	fsr2l,f,c
  1817  00079A  0101               	movlb	1	; () banked
  1818  00079C  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1819  00079E  22DA               	addwfc	fsr2h,f,c
  1820  0007A0  50DF               	movf	indf2,w,c
  1821  0007A2  0101               	movlb	1	; () banked
  1822  0007A4  0101               	movlb	1	; () banked
  1823  0007A6  6FD1               	movwf	parser_lthread@degrees& (0+255),b
  1824                           
  1825                           ;Parser_thread.c: 47: break;
  1826  0007A8  D041               	goto	l515
  1827  0007AA                     l3962:
  1828                           
  1829                           ;Parser_thread.c: 50: {
  1830                           ;Parser_thread.c: 52: command = 0x03;
  1831  0007AA  0100               	movlb	0	; () banked
  1832  0007AC  6FC3               	movwf	??_parser_lthread& (0+255),b
  1833  0007AE  0E03               	movlw	3
  1834  0007B0  0101               	movlb	1	; () banked
  1835  0007B2  0101               	movlb	1	; () banked
  1836  0007B4  6FD0               	movwf	parser_lthread@command& (0+255),b
  1837  0007B6  0100               	movlb	0	; () banked
  1838  0007B8  51C3               	movf	??_parser_lthread& (0+255),w,b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;Parser_thread.c: 53: Feet = msgbuf[3];
  1842  0007BA  0101               	movlb	1	; () banked
  1843  0007BC  EE20 F003          	lfsr	2,3
  1844  0007C0  0101               	movlb	1	; () banked
  1845  0007C2  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1846  0007C4  26D9               	addwf	fsr2l,f,c
  1847  0007C6  0101               	movlb	1	; () banked
  1848  0007C8  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1849  0007CA  22DA               	addwfc	fsr2h,f,c
  1850  0007CC  50DF               	movf	indf2,w,c
  1851  0007CE  0101               	movlb	1	; () banked
  1852  0007D0  0101               	movlb	1	; () banked
  1853  0007D2  6FCD               	movwf	parser_lthread@Feet& (0+255),b
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;Parser_thread.c: 54: Inches = msgbuf[4];
  1857  0007D4  0101               	movlb	1	; () banked
  1858  0007D6  EE20 F004          	lfsr	2,4
  1859  0007DA  0101               	movlb	1	; () banked
  1860  0007DC  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1861  0007DE  26D9               	addwf	fsr2l,f,c
  1862  0007E0  0101               	movlb	1	; () banked
  1863  0007E2  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1864  0007E4  22DA               	addwfc	fsr2h,f,c
  1865  0007E6  50DF               	movf	indf2,w,c
  1866  0007E8  0101               	movlb	1	; () banked
  1867  0007EA  0101               	movlb	1	; () banked
  1868  0007EC  6FCE               	movwf	parser_lthread@Inches& (0+255),b
  1869                           
  1870                           ;Parser_thread.c: 56: break;
  1871  0007EE  D01E               	goto	l515
  1872  0007F0                     l3970:
  1873  0007F0  0101               	movlb	1	; () banked
  1874  0007F2  EE20 F001          	lfsr	2,1
  1875  0007F6  0101               	movlb	1	; () banked
  1876  0007F8  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1877  0007FA  26D9               	addwf	fsr2l,f,c
  1878  0007FC  0101               	movlb	1	; () banked
  1879  0007FE  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1880  000800  22DA               	addwfc	fsr2h,f,c
  1881  000802  50DF               	movf	indf2,w,c
  1882  000804  0B0F               	andlw	15
  1883  000806  0100               	movlb	0	; () banked
  1884  000808  6FC3               	movwf	??_parser_lthread& (0+255),b
  1885  00080A  6BC4               	clrf	(??_parser_lthread+1)& (0+255),b
  1886                           
  1887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1888                           ; Switch size 1, requested type "space"
  1889                           ; Number of cases is 1, Range of values is 0 to 0
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            4     3 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894  00080C  0100               	movlb	0	; () banked
  1895  00080E  51C4               	movf	(??_parser_lthread+1)& (0+255),w,b
  1896  000810  0A00               	xorlw	0	; case 0
  1897  000812  A4D8               	btfss	status,2,c
  1898  000814  D00B               	goto	l515
  1899                           
  1900                           ; BSR set to: 0
  1901                           ; Switch size 1, requested type "space"
  1902                           ; Number of cases is 3, Range of values is 0 to 2
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte           10     6 (average)
  1906                           ;	Chosen strategy is simple_byte
  1907  000816  0100               	movlb	0	; () banked
  1908  000818  51C3               	movf	??_parser_lthread& (0+255),w,b
  1909  00081A  0A00               	xorlw	0	; case 0
  1910  00081C  B4D8               	btfsc	status,2,c
  1911  00081E  D7C5               	goto	l3962
  1912  000820  0A01               	xorlw	1	; case 1
  1913  000822  B4D8               	btfsc	status,2,c
  1914  000824  D7A8               	goto	l3954
  1915  000826  0A03               	xorlw	3	; case 2
  1916  000828  B4D8               	btfsc	status,2,c
  1917  00082A  D7A9               	goto	l3958
  1918  00082C                     l515:
  1919                           
  1920                           ;Parser_thread.c: 60: data[0] = command;
  1921  00082C  C1D0  F1A8         	movff	parser_lthread@command,parser_lthread@data
  1922                           
  1923                           ;Parser_thread.c: 61: data[1] = degrees;
  1924  000830  C1D1  F1A9         	movff	parser_lthread@degrees,parser_lthread@data+1
  1925                           
  1926                           ;Parser_thread.c: 62: data[2] = Feet;
  1927  000834  C1CD  F1AA         	movff	parser_lthread@Feet,parser_lthread@data+2
  1928                           
  1929                           ;Parser_thread.c: 63: data[3] = Inches;
  1930  000838  C1CE  F1AB         	movff	parser_lthread@Inches,parser_lthread@data+3
  1931                           
  1932                           ;Parser_thread.c: 65: unsigned char reply[6];
  1933                           ;Parser_thread.c: 66: reply[0] = 0x30;
  1934  00083C  0100               	movlb	0	; () banked
  1935  00083E  6FC3               	movwf	??_parser_lthread& (0+255),b
  1936  000840  0E30               	movlw	48
  1937  000842  0101               	movlb	1	; () banked
  1938  000844  0101               	movlb	1	; () banked
  1939  000846  6FAD               	movwf	parser_lthread@reply& (0+255),b
  1940  000848  0100               	movlb	0	; () banked
  1941  00084A  51C3               	movf	??_parser_lthread& (0+255),w,b
  1942                           
  1943                           ;Parser_thread.c: 67: reply[1] = 0x00;
  1944  00084C  0100               	movlb	0	; () banked
  1945  00084E  6FC3               	movwf	??_parser_lthread& (0+255),b
  1946  000850  0E00               	movlw	0
  1947  000852  0101               	movlb	1	; () banked
  1948  000854  0101               	movlb	1	; () banked
  1949  000856  6FAE               	movwf	(parser_lthread@reply+1)& (0+255),b
  1950  000858  0100               	movlb	0	; () banked
  1951  00085A  51C3               	movf	??_parser_lthread& (0+255),w,b
  1952                           
  1953                           ;Parser_thread.c: 68: reply[2] = 0x00;
  1954  00085C  0100               	movlb	0	; () banked
  1955  00085E  6FC3               	movwf	??_parser_lthread& (0+255),b
  1956  000860  0E00               	movlw	0
  1957  000862  0101               	movlb	1	; () banked
  1958  000864  0101               	movlb	1	; () banked
  1959  000866  6FAF               	movwf	(parser_lthread@reply+2)& (0+255),b
  1960  000868  0100               	movlb	0	; () banked
  1961  00086A  51C3               	movf	??_parser_lthread& (0+255),w,b
  1962                           
  1963                           ;Parser_thread.c: 69: reply[3] = 0x00;
  1964  00086C  0100               	movlb	0	; () banked
  1965  00086E  6FC3               	movwf	??_parser_lthread& (0+255),b
  1966  000870  0E00               	movlw	0
  1967  000872  0101               	movlb	1	; () banked
  1968  000874  0101               	movlb	1	; () banked
  1969  000876  6FB0               	movwf	(parser_lthread@reply+3)& (0+255),b
  1970  000878  0100               	movlb	0	; () banked
  1971  00087A  51C3               	movf	??_parser_lthread& (0+255),w,b
  1972                           
  1973                           ;Parser_thread.c: 70: reply[4] = 0x00;
  1974  00087C  0100               	movlb	0	; () banked
  1975  00087E  6FC3               	movwf	??_parser_lthread& (0+255),b
  1976  000880  0E00               	movlw	0
  1977  000882  0101               	movlb	1	; () banked
  1978  000884  0101               	movlb	1	; () banked
  1979  000886  6FB1               	movwf	(parser_lthread@reply+4)& (0+255),b
  1980  000888  0100               	movlb	0	; () banked
  1981  00088A  51C3               	movf	??_parser_lthread& (0+255),w,b
  1982                           
  1983                           ;Parser_thread.c: 71: reply[5] = 0x30;
  1984  00088C  0100               	movlb	0	; () banked
  1985  00088E  6FC3               	movwf	??_parser_lthread& (0+255),b
  1986  000890  0E30               	movlw	48
  1987  000892  0101               	movlb	1	; () banked
  1988  000894  0101               	movlb	1	; () banked
  1989  000896  6FB2               	movwf	(parser_lthread@reply+5)& (0+255),b
  1990  000898  0100               	movlb	0	; () banked
  1991  00089A  51C3               	movf	??_parser_lthread& (0+255),w,b
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;Parser_thread.c: 73: uart_write(6,reply);
  1995  00089C  0101               	movlb	1	; () banked
  1996  00089E  0E01               	movlw	high parser_lthread@reply
  1997  0008A0  0100               	movlb	0	; () banked
  1998  0008A2  0100               	movlb	0	; () banked
  1999  0008A4  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  2000  0008A6  0101               	movlb	1	; () banked
  2001  0008A8  0EAD               	movlw	low parser_lthread@reply
  2002  0008AA  0100               	movlb	0	; () banked
  2003  0008AC  0100               	movlb	0	; () banked
  2004  0008AE  6FB4               	movwf	uart_write@msg& (0+255),b
  2005  0008B0  0E06               	movlw	6
  2006  0008B2  EC19  F010         	call	_uart_write
  2007                           
  2008                           ;Parser_thread.c: 75: i2c_configure_master(0x4F);
  2009  0008B6  0E4F               	movlw	79
  2010  0008B8  ECA9  F010         	call	_i2c_configure_master
  2011                           
  2012                           ;Parser_thread.c: 76: i2c_master_send(5,data);
  2013  0008BC  0101               	movlb	1	; () banked
  2014  0008BE  0E01               	movlw	high parser_lthread@data
  2015  0008C0  0100               	movlb	0	; () banked
  2016  0008C2  0100               	movlb	0	; () banked
  2017  0008C4  6FB4               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2018  0008C6  0101               	movlb	1	; () banked
  2019  0008C8  0EA8               	movlw	low parser_lthread@data
  2020  0008CA  0100               	movlb	0	; () banked
  2021  0008CC  0100               	movlb	0	; () banked
  2022  0008CE  6FB3               	movwf	i2c_master_send@msg& (0+255),b
  2023  0008D0  0E05               	movlw	5
  2024  0008D2  ECE1  F00C         	call	_i2c_master_send
  2025                           
  2026                           ;Parser_thread.c: 78: break;
  2027  0008D6  D095               	goto	l3992
  2028  0008D8                     l3980:
  2029                           
  2030                           ;Parser_thread.c: 82: {
  2031                           ;Parser_thread.c: 83: unsigned char reply[6];
  2032                           ;Parser_thread.c: 84: reply[0] = 0x30;
  2033  0008D8  0100               	movlb	0	; () banked
  2034  0008DA  6FC3               	movwf	??_parser_lthread& (0+255),b
  2035  0008DC  0E30               	movlw	48
  2036  0008DE  0101               	movlb	1	; () banked
  2037  0008E0  0101               	movlb	1	; () banked
  2038  0008E2  6FB3               	movwf	parser_lthread@reply_1678& (0+255),b
  2039  0008E4  0100               	movlb	0	; () banked
  2040  0008E6  51C3               	movf	??_parser_lthread& (0+255),w,b
  2041                           
  2042                           ;Parser_thread.c: 85: reply[1] = 0x00;
  2043  0008E8  0100               	movlb	0	; () banked
  2044  0008EA  6FC3               	movwf	??_parser_lthread& (0+255),b
  2045  0008EC  0E00               	movlw	0
  2046  0008EE  0101               	movlb	1	; () banked
  2047  0008F0  0101               	movlb	1	; () banked
  2048  0008F2  6FB4               	movwf	(parser_lthread@reply_1678+1)& (0+255),b
  2049  0008F4  0100               	movlb	0	; () banked
  2050  0008F6  51C3               	movf	??_parser_lthread& (0+255),w,b
  2051                           
  2052                           ;Parser_thread.c: 86: reply[2] = 0x00;
  2053  0008F8  0100               	movlb	0	; () banked
  2054  0008FA  6FC3               	movwf	??_parser_lthread& (0+255),b
  2055  0008FC  0E00               	movlw	0
  2056  0008FE  0101               	movlb	1	; () banked
  2057  000900  0101               	movlb	1	; () banked
  2058  000902  6FB5               	movwf	(parser_lthread@reply_1678+2)& (0+255),b
  2059  000904  0100               	movlb	0	; () banked
  2060  000906  51C3               	movf	??_parser_lthread& (0+255),w,b
  2061                           
  2062                           ;Parser_thread.c: 87: reply[3] = 0x00;
  2063  000908  0100               	movlb	0	; () banked
  2064  00090A  6FC3               	movwf	??_parser_lthread& (0+255),b
  2065  00090C  0E00               	movlw	0
  2066  00090E  0101               	movlb	1	; () banked
  2067  000910  0101               	movlb	1	; () banked
  2068  000912  6FB6               	movwf	(parser_lthread@reply_1678+3)& (0+255),b
  2069  000914  0100               	movlb	0	; () banked
  2070  000916  51C3               	movf	??_parser_lthread& (0+255),w,b
  2071                           
  2072                           ;Parser_thread.c: 88: reply[4] = 0x00;
  2073  000918  0100               	movlb	0	; () banked
  2074  00091A  6FC3               	movwf	??_parser_lthread& (0+255),b
  2075  00091C  0E00               	movlw	0
  2076  00091E  0101               	movlb	1	; () banked
  2077  000920  0101               	movlb	1	; () banked
  2078  000922  6FB7               	movwf	(parser_lthread@reply_1678+4)& (0+255),b
  2079  000924  0100               	movlb	0	; () banked
  2080  000926  51C3               	movf	??_parser_lthread& (0+255),w,b
  2081                           
  2082                           ;Parser_thread.c: 89: reply[5] = 0x30;
  2083  000928  0100               	movlb	0	; () banked
  2084  00092A  6FC3               	movwf	??_parser_lthread& (0+255),b
  2085  00092C  0E30               	movlw	48
  2086  00092E  0101               	movlb	1	; () banked
  2087  000930  0101               	movlb	1	; () banked
  2088  000932  6FB8               	movwf	(parser_lthread@reply_1678+5)& (0+255),b
  2089  000934  0100               	movlb	0	; () banked
  2090  000936  51C3               	movf	??_parser_lthread& (0+255),w,b
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;Parser_thread.c: 91: uart_write(6,reply);
  2094  000938  0101               	movlb	1	; () banked
  2095  00093A  0E01               	movlw	high parser_lthread@reply_1678
  2096  00093C  0100               	movlb	0	; () banked
  2097  00093E  0100               	movlb	0	; () banked
  2098  000940  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  2099  000942  0101               	movlb	1	; () banked
  2100  000944  0EB3               	movlw	low parser_lthread@reply_1678
  2101  000946  0100               	movlb	0	; () banked
  2102  000948  0100               	movlb	0	; () banked
  2103  00094A  6FB4               	movwf	uart_write@msg& (0+255),b
  2104  00094C  0E06               	movlw	6
  2105  00094E  EC19  F010         	call	_uart_write
  2106                           
  2107                           ;Parser_thread.c: 92: break;
  2108  000952  D057               	goto	l3992
  2109  000954                     l3984:
  2110                           
  2111                           ;Parser_thread.c: 96: {
  2112                           ;Parser_thread.c: 97: unsigned char reply[6];
  2113                           ;Parser_thread.c: 98: reply[0] = 0x30;
  2114  000954  0100               	movlb	0	; () banked
  2115  000956  6FC3               	movwf	??_parser_lthread& (0+255),b
  2116  000958  0E30               	movlw	48
  2117  00095A  0101               	movlb	1	; () banked
  2118  00095C  0101               	movlb	1	; () banked
  2119  00095E  6FB9               	movwf	parser_lthread@reply_1679& (0+255),b
  2120  000960  0100               	movlb	0	; () banked
  2121  000962  51C3               	movf	??_parser_lthread& (0+255),w,b
  2122                           
  2123                           ;Parser_thread.c: 99: reply[1] = 0x00;
  2124  000964  0100               	movlb	0	; () banked
  2125  000966  6FC3               	movwf	??_parser_lthread& (0+255),b
  2126  000968  0E00               	movlw	0
  2127  00096A  0101               	movlb	1	; () banked
  2128  00096C  0101               	movlb	1	; () banked
  2129  00096E  6FBA               	movwf	(parser_lthread@reply_1679+1)& (0+255),b
  2130  000970  0100               	movlb	0	; () banked
  2131  000972  51C3               	movf	??_parser_lthread& (0+255),w,b
  2132                           
  2133                           ;Parser_thread.c: 100: reply[2] = 0x00;
  2134  000974  0100               	movlb	0	; () banked
  2135  000976  6FC3               	movwf	??_parser_lthread& (0+255),b
  2136  000978  0E00               	movlw	0
  2137  00097A  0101               	movlb	1	; () banked
  2138  00097C  0101               	movlb	1	; () banked
  2139  00097E  6FBB               	movwf	(parser_lthread@reply_1679+2)& (0+255),b
  2140  000980  0100               	movlb	0	; () banked
  2141  000982  51C3               	movf	??_parser_lthread& (0+255),w,b
  2142                           
  2143                           ;Parser_thread.c: 101: reply[3] = 0x00;
  2144  000984  0100               	movlb	0	; () banked
  2145  000986  6FC3               	movwf	??_parser_lthread& (0+255),b
  2146  000988  0E00               	movlw	0
  2147  00098A  0101               	movlb	1	; () banked
  2148  00098C  0101               	movlb	1	; () banked
  2149  00098E  6FBC               	movwf	(parser_lthread@reply_1679+3)& (0+255),b
  2150  000990  0100               	movlb	0	; () banked
  2151  000992  51C3               	movf	??_parser_lthread& (0+255),w,b
  2152                           
  2153                           ;Parser_thread.c: 102: reply[4] = 0x00;
  2154  000994  0100               	movlb	0	; () banked
  2155  000996  6FC3               	movwf	??_parser_lthread& (0+255),b
  2156  000998  0E00               	movlw	0
  2157  00099A  0101               	movlb	1	; () banked
  2158  00099C  0101               	movlb	1	; () banked
  2159  00099E  6FBD               	movwf	(parser_lthread@reply_1679+4)& (0+255),b
  2160  0009A0  0100               	movlb	0	; () banked
  2161  0009A2  51C3               	movf	??_parser_lthread& (0+255),w,b
  2162                           
  2163                           ;Parser_thread.c: 103: reply[5] = 0x30;
  2164  0009A4  0100               	movlb	0	; () banked
  2165  0009A6  6FC3               	movwf	??_parser_lthread& (0+255),b
  2166  0009A8  0E30               	movlw	48
  2167  0009AA  0101               	movlb	1	; () banked
  2168  0009AC  0101               	movlb	1	; () banked
  2169  0009AE  6FBE               	movwf	(parser_lthread@reply_1679+5)& (0+255),b
  2170  0009B0  0100               	movlb	0	; () banked
  2171  0009B2  51C3               	movf	??_parser_lthread& (0+255),w,b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;Parser_thread.c: 105: uart_write(6,reply);
  2175  0009B4  0101               	movlb	1	; () banked
  2176  0009B6  0E01               	movlw	high parser_lthread@reply_1679
  2177  0009B8  0100               	movlb	0	; () banked
  2178  0009BA  0100               	movlb	0	; () banked
  2179  0009BC  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  2180  0009BE  0101               	movlb	1	; () banked
  2181  0009C0  0EB9               	movlw	low parser_lthread@reply_1679
  2182  0009C2  0100               	movlb	0	; () banked
  2183  0009C4  0100               	movlb	0	; () banked
  2184  0009C6  6FB4               	movwf	uart_write@msg& (0+255),b
  2185  0009C8  0E06               	movlw	6
  2186  0009CA  EC19  F010         	call	_uart_write
  2187                           
  2188                           ;Parser_thread.c: 106: break;
  2189  0009CE  D019               	goto	l3992
  2190  0009D0                     l3990:
  2191  0009D0  0101               	movlb	1	; () banked
  2192  0009D2  0100               	movlb	0	; () banked
  2193  0009D4  C1A7  F0B4         	movff	parser_lthread@msgbuf+1,getMessageId@buffer+1
  2194  0009D8  0101               	movlb	1	; () banked
  2195  0009DA  0100               	movlb	0	; () banked
  2196  0009DC  C1A6  F0B3         	movff	parser_lthread@msgbuf,getMessageId@buffer
  2197  0009E0  C1A4  F0B5         	movff	parser_lthread@length,getMessageId@length
  2198  0009E4  ECE6  F012         	call	_getMessageId	;wreg free
  2199                           
  2200                           ; Switch size 1, requested type "space"
  2201                           ; Number of cases is 5, Range of values is 0 to 255
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte           16     9 (average)
  2205                           ;	Chosen strategy is simple_byte
  2206  0009E8  0A00               	xorlw	0	; case 0
  2207  0009EA  B4D8               	btfsc	status,2,c
  2208  0009EC  D6A4               	goto	l3950
  2209  0009EE  0A02               	xorlw	2	; case 2
  2210  0009F0  B4D8               	btfsc	status,2,c
  2211  0009F2  D6A8               	goto	l3952
  2212  0009F4  0A01               	xorlw	1	; case 3
  2213  0009F6  B4D8               	btfsc	status,2,c
  2214  0009F8  D7AD               	goto	l3984
  2215  0009FA  0A07               	xorlw	7	; case 4
  2216  0009FC  B4D8               	btfsc	status,2,c
  2217  0009FE  D76C               	goto	l3980
  2218  000A00  0AFB               	xorlw	251	; case 255
  2219  000A02                     l3992:
  2220                           
  2221                           ;Parser_thread.c: 118: }
  2222                           ;Parser_thread.c: 119: if(msgtype == 50)
  2223  000A02  0101               	movlb	1	; () banked
  2224  000A04  0101               	movlb	1	; () banked
  2225  000A06  51A2               	movf	parser_lthread@msgtype& (0+255),w,b
  2226  000A08  0A32               	xorlw	50
  2227  000A0A  11A3               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  2228  000A0C  A4D8               	btfss	status,2,c
  2229  000A0E  0012               	return	
  2230                           
  2231                           ; BSR set to: 1
  2232                           ;Parser_thread.c: 120: {
  2233                           ;Parser_thread.c: 121: unsigned int checksum = 0;
  2234  000A10  0E00               	movlw	0
  2235  000A12  0101               	movlb	1	; () banked
  2236  000A14  0101               	movlb	1	; () banked
  2237  000A16  6FCC               	movwf	(parser_lthread@checksum+1)& (0+255),b
  2238  000A18  0E00               	movlw	0
  2239  000A1A  0101               	movlb	1	; () banked
  2240  000A1C  6FCB               	movwf	parser_lthread@checksum& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;Parser_thread.c: 122: unsigned char data[12];
  2244                           ;Parser_thread.c: 123: unsigned char status = 0;
  2245  000A1E  0100               	movlb	0	; () banked
  2246  000A20  6FC3               	movwf	??_parser_lthread& (0+255),b
  2247  000A22  0E00               	movlw	0
  2248  000A24  0101               	movlb	1	; () banked
  2249  000A26  0101               	movlb	1	; () banked
  2250  000A28  6FCF               	movwf	parser_lthread@status& (0+255),b
  2251  000A2A  0100               	movlb	0	; () banked
  2252  000A2C  51C3               	movf	??_parser_lthread& (0+255),w,b
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;Parser_thread.c: 125: if(msgbuf[6] == 0x01)
  2256  000A2E  0101               	movlb	1	; () banked
  2257  000A30  EE20 F006          	lfsr	2,6
  2258  000A34  0101               	movlb	1	; () banked
  2259  000A36  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2260  000A38  26D9               	addwf	fsr2l,f,c
  2261  000A3A  0101               	movlb	1	; () banked
  2262  000A3C  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2263  000A3E  22DA               	addwfc	fsr2h,f,c
  2264  000A40  0E01               	movlw	1
  2265  000A42  62DF               	cpfseq	indf2,c
  2266  000A44  D008               	goto	l4002
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;Parser_thread.c: 126: {
  2270                           ;Parser_thread.c: 127: status = 0x20;
  2271  000A46  0100               	movlb	0	; () banked
  2272  000A48  6FC3               	movwf	??_parser_lthread& (0+255),b
  2273  000A4A  0E20               	movlw	32
  2274  000A4C  0101               	movlb	1	; () banked
  2275  000A4E  0101               	movlb	1	; () banked
  2276  000A50  6FCF               	movwf	parser_lthread@status& (0+255),b
  2277  000A52  0100               	movlb	0	; () banked
  2278  000A54  51C3               	movf	??_parser_lthread& (0+255),w,b
  2279  000A56                     l4002:
  2280                           
  2281                           ;Parser_thread.c: 128: }
  2282                           ;Parser_thread.c: 129: data[0] = status | 0x06;
  2283  000A56  0101               	movlb	1	; () banked
  2284  000A58  0101               	movlb	1	; () banked
  2285  000A5A  51CF               	movf	parser_lthread@status& (0+255),w,b
  2286  000A5C  0906               	iorlw	6
  2287  000A5E  0101               	movlb	1	; () banked
  2288  000A60  0101               	movlb	1	; () banked
  2289  000A62  6FBF               	movwf	parser_lthread@data_1681& (0+255),b
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;Parser_thread.c: 130: data[1] = msgbuf[0];
  2293  000A64  C1A6  FFD9         	movff	parser_lthread@msgbuf,fsr2l
  2294  000A68  C1A7  FFDA         	movff	parser_lthread@msgbuf+1,fsr2h
  2295  000A6C  50DF               	movf	indf2,w,c
  2296  000A6E  0101               	movlb	1	; () banked
  2297  000A70  0101               	movlb	1	; () banked
  2298  000A72  6FC0               	movwf	(parser_lthread@data_1681+1)& (0+255),b
  2299                           
  2300                           ; BSR set to: 1
  2301                           ;Parser_thread.c: 131: data[2] = msgbuf[1];
  2302  000A74  0101               	movlb	1	; () banked
  2303  000A76  EE20 F001          	lfsr	2,1
  2304  000A7A  0101               	movlb	1	; () banked
  2305  000A7C  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2306  000A7E  26D9               	addwf	fsr2l,f,c
  2307  000A80  0101               	movlb	1	; () banked
  2308  000A82  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2309  000A84  22DA               	addwfc	fsr2h,f,c
  2310  000A86  50DF               	movf	indf2,w,c
  2311  000A88  0101               	movlb	1	; () banked
  2312  000A8A  0101               	movlb	1	; () banked
  2313  000A8C  6FC1               	movwf	(parser_lthread@data_1681+2)& (0+255),b
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;Parser_thread.c: 132: data[3] = msgbuf[2];
  2317  000A8E  0101               	movlb	1	; () banked
  2318  000A90  EE20 F002          	lfsr	2,2
  2319  000A94  0101               	movlb	1	; () banked
  2320  000A96  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2321  000A98  26D9               	addwf	fsr2l,f,c
  2322  000A9A  0101               	movlb	1	; () banked
  2323  000A9C  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2324  000A9E  22DA               	addwfc	fsr2h,f,c
  2325  000AA0  50DF               	movf	indf2,w,c
  2326  000AA2  0101               	movlb	1	; () banked
  2327  000AA4  0101               	movlb	1	; () banked
  2328  000AA6  6FC2               	movwf	(parser_lthread@data_1681+3)& (0+255),b
  2329                           
  2330                           ; BSR set to: 1
  2331                           ;Parser_thread.c: 133: data[4] = msgbuf[3];
  2332  000AA8  0101               	movlb	1	; () banked
  2333  000AAA  EE20 F003          	lfsr	2,3
  2334  000AAE  0101               	movlb	1	; () banked
  2335  000AB0  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2336  000AB2  26D9               	addwf	fsr2l,f,c
  2337  000AB4  0101               	movlb	1	; () banked
  2338  000AB6  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2339  000AB8  22DA               	addwfc	fsr2h,f,c
  2340  000ABA  50DF               	movf	indf2,w,c
  2341  000ABC  0101               	movlb	1	; () banked
  2342  000ABE  0101               	movlb	1	; () banked
  2343  000AC0  6FC3               	movwf	(parser_lthread@data_1681+4)& (0+255),b
  2344                           
  2345                           ; BSR set to: 1
  2346                           ;Parser_thread.c: 134: data[5] = msgbuf[4];
  2347  000AC2  0101               	movlb	1	; () banked
  2348  000AC4  EE20 F004          	lfsr	2,4
  2349  000AC8  0101               	movlb	1	; () banked
  2350  000ACA  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2351  000ACC  26D9               	addwf	fsr2l,f,c
  2352  000ACE  0101               	movlb	1	; () banked
  2353  000AD0  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2354  000AD2  22DA               	addwfc	fsr2h,f,c
  2355  000AD4  50DF               	movf	indf2,w,c
  2356  000AD6  0101               	movlb	1	; () banked
  2357  000AD8  0101               	movlb	1	; () banked
  2358  000ADA  6FC4               	movwf	(parser_lthread@data_1681+5)& (0+255),b
  2359                           
  2360                           ; BSR set to: 1
  2361                           ;Parser_thread.c: 135: data[6] = msgbuf[5];
  2362  000ADC  0101               	movlb	1	; () banked
  2363  000ADE  EE20 F005          	lfsr	2,5
  2364  000AE2  0101               	movlb	1	; () banked
  2365  000AE4  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2366  000AE6  26D9               	addwf	fsr2l,f,c
  2367  000AE8  0101               	movlb	1	; () banked
  2368  000AEA  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2369  000AEC  22DA               	addwfc	fsr2h,f,c
  2370  000AEE  50DF               	movf	indf2,w,c
  2371  000AF0  0101               	movlb	1	; () banked
  2372  000AF2  0101               	movlb	1	; () banked
  2373  000AF4  6FC5               	movwf	(parser_lthread@data_1681+6)& (0+255),b
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;Parser_thread.c: 136: data[7] = 0x00;
  2377  000AF6  0100               	movlb	0	; () banked
  2378  000AF8  6FC3               	movwf	??_parser_lthread& (0+255),b
  2379  000AFA  0E00               	movlw	0
  2380  000AFC  0101               	movlb	1	; () banked
  2381  000AFE  0101               	movlb	1	; () banked
  2382  000B00  6FC6               	movwf	(parser_lthread@data_1681+7)& (0+255),b
  2383  000B02  0100               	movlb	0	; () banked
  2384  000B04  51C3               	movf	??_parser_lthread& (0+255),w,b
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;Parser_thread.c: 137: data[8] = 0x00;
  2388  000B06  0100               	movlb	0	; () banked
  2389  000B08  6FC3               	movwf	??_parser_lthread& (0+255),b
  2390  000B0A  0E00               	movlw	0
  2391  000B0C  0101               	movlb	1	; () banked
  2392  000B0E  0101               	movlb	1	; () banked
  2393  000B10  6FC7               	movwf	(parser_lthread@data_1681+8)& (0+255),b
  2394  000B12  0100               	movlb	0	; () banked
  2395  000B14  51C3               	movf	??_parser_lthread& (0+255),w,b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;Parser_thread.c: 138: data[9] = 0x00;
  2399  000B16  0100               	movlb	0	; () banked
  2400  000B18  6FC3               	movwf	??_parser_lthread& (0+255),b
  2401  000B1A  0E00               	movlw	0
  2402  000B1C  0101               	movlb	1	; () banked
  2403  000B1E  0101               	movlb	1	; () banked
  2404  000B20  6FC8               	movwf	(parser_lthread@data_1681+9)& (0+255),b
  2405  000B22  0100               	movlb	0	; () banked
  2406  000B24  51C3               	movf	??_parser_lthread& (0+255),w,b
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;Parser_thread.c: 139: data[10] = 0x00;
  2410  000B26  0100               	movlb	0	; () banked
  2411  000B28  6FC3               	movwf	??_parser_lthread& (0+255),b
  2412  000B2A  0E00               	movlw	0
  2413  000B2C  0101               	movlb	1	; () banked
  2414  000B2E  0101               	movlb	1	; () banked
  2415  000B30  6FC9               	movwf	(parser_lthread@data_1681+10)& (0+255),b
  2416  000B32  0100               	movlb	0	; () banked
  2417  000B34  51C3               	movf	??_parser_lthread& (0+255),w,b
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;Parser_thread.c: 140: int x = 0;
  2421  000B36  0E00               	movlw	0
  2422  000B38  0101               	movlb	1	; () banked
  2423  000B3A  0101               	movlb	1	; () banked
  2424  000B3C  6FD3               	movwf	(parser_lthread@x+1)& (0+255),b
  2425  000B3E  0E00               	movlw	0
  2426  000B40  0101               	movlb	1	; () banked
  2427  000B42  6FD2               	movwf	parser_lthread@x& (0+255),b
  2428                           
  2429                           ; BSR set to: 1
  2430                           ;Parser_thread.c: 141: for(x = 0; x < 11;x++)
  2431  000B44  0E00               	movlw	0
  2432  000B46  0101               	movlb	1	; () banked
  2433  000B48  0101               	movlb	1	; () banked
  2434  000B4A  6FD3               	movwf	(parser_lthread@x+1)& (0+255),b
  2435  000B4C  0E00               	movlw	0
  2436  000B4E  0101               	movlb	1	; () banked
  2437  000B50  6FD2               	movwf	parser_lthread@x& (0+255),b
  2438  000B52                     
  2439                           ; BSR set to: 1
  2440  000B52  0101               	movlb	1	; () banked
  2441  000B54  0101               	movlb	1	; () banked
  2442  000B56  51D3               	movf	(parser_lthread@x+1)& (0+255),w,b
  2443  000B58  0A80               	xorlw	128
  2444  000B5A  0F80               	addlw	-128
  2445  000B5C  0E0B               	movlw	11
  2446  000B5E  B4D8               	btfsc	status,2,c
  2447  000B60  5DD2               	subwf	parser_lthread@x& (0+255),w,b
  2448  000B62  B0D8               	btfsc	status,0,c
  2449  000B64  D01C               	goto	l525
  2450                           
  2451                           ; BSR set to: 1
  2452                           ;Parser_thread.c: 142: {
  2453                           ;Parser_thread.c: 143: checksum += data[x];
  2454                           
  2455                           ; BSR set to: 1
  2456                           
  2457                           ; BSR set to: 1
  2458  000B66  0101               	movlb	1	; () banked
  2459  000B68  0EBF               	movlw	low parser_lthread@data_1681
  2460  000B6A  0101               	movlb	1	; () banked
  2461  000B6C  0101               	movlb	1	; () banked
  2462  000B6E  25D2               	addwf	parser_lthread@x& (0+255),w,b
  2463  000B70  6ED9               	movwf	fsr2l,c
  2464  000B72  0101               	movlb	1	; () banked
  2465  000B74  0E01               	movlw	high parser_lthread@data_1681
  2466  000B76  0101               	movlb	1	; () banked
  2467  000B78  0101               	movlb	1	; () banked
  2468  000B7A  21D3               	addwfc	(parser_lthread@x+1)& (0+255),w,b
  2469  000B7C  6EDA               	movwf	fsr2h,c
  2470  000B7E  50DF               	movf	indf2,w,c
  2471  000B80  0100               	movlb	0	; () banked
  2472  000B82  6FC3               	movwf	??_parser_lthread& (0+255),b
  2473  000B84  0100               	movlb	0	; () banked
  2474  000B86  51C3               	movf	??_parser_lthread& (0+255),w,b
  2475  000B88  0101               	movlb	1	; () banked
  2476  000B8A  0101               	movlb	1	; () banked
  2477  000B8C  27CB               	addwf	parser_lthread@checksum& (0+255),f,b
  2478  000B8E  0E00               	movlw	0
  2479  000B90  0101               	movlb	1	; () banked
  2480  000B92  23CC               	addwfc	(parser_lthread@checksum+1)& (0+255),f,b
  2481                           
  2482                           ; BSR set to: 1
  2483  000B94  0101               	movlb	1	; () banked
  2484  000B96  0101               	movlb	1	; () banked
  2485  000B98  4BD2               	infsnz	parser_lthread@x& (0+255),f,b
  2486  000B9A  2BD3               	incf	(parser_lthread@x+1)& (0+255),f,b
  2487  000B9C  D7DA               	goto	L2
  2488  000B9E                     l525:
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;Parser_thread.c: 144: }
  2492                           ;Parser_thread.c: 145: data[11] = checksum & 0x0FF;
  2493  000B9E  C1CB  F1CA         	movff	parser_lthread@checksum,parser_lthread@data_1681+11
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;Parser_thread.c: 146: uart_write(12,data);
  2497  000BA2  0101               	movlb	1	; () banked
  2498  000BA4  0E01               	movlw	high parser_lthread@data_1681
  2499  000BA6  0100               	movlb	0	; () banked
  2500  000BA8  0100               	movlb	0	; () banked
  2501  000BAA  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  2502  000BAC  0101               	movlb	1	; () banked
  2503  000BAE  0EBF               	movlw	low parser_lthread@data_1681
  2504  000BB0  0100               	movlb	0	; () banked
  2505  000BB2  0100               	movlb	0	; () banked
  2506  000BB4  6FB4               	movwf	uart_write@msg& (0+255),b
  2507  000BB6  0E0C               	movlw	12
  2508  000BB8  EC19  F010         	call	_uart_write
  2509  000BBC  0012               	return	
  2510  000BBE                     __end_of_parser_lthread:
  2511                           	opt stack 0
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _validateMessage *****************
  2526 ;; Defined at:
  2527 ;;		line 166 in file "source/Parser_thread.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  buffer          2   51[BANK0 ] PTR unsigned char 
  2530 ;;		 -> main@msgbuffer(11), 
  2531 ;;  length          1   53[BANK0 ] unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  i               2   64[BANK0 ] int 
  2534 ;;  len             1   66[BANK0 ] unsigned char 
  2535 ;;  rollingsum      1   63[BANK0 ] unsigned char 
  2536 ;;  checksum        1   62[BANK0 ] unsigned char 
  2537 ;;  buf3            1   61[BANK0 ] unsigned char 
  2538 ;;  buf2            1   60[BANK0 ] unsigned char 
  2539 ;;  buf             1   59[BANK0 ] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2549 ;;      Params:         0       3       0       0       0
  2550 ;;      Locals:         0       8       0       0       0
  2551 ;;      Temps:          0       5       0       0       0
  2552 ;;      Totals:         0      16       0       0       0
  2553 ;;Total ram usage:       16 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:   12
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_parser_lthread
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text4
  2564  00141E                     __ptext4:
  2565                           	opt stack 0
  2566  00141E                     _validateMessage:
  2567                           	opt stack 17
  2568                           
  2569                           ;Parser_thread.c: 171: if (length < 2) {
  2570                           
  2571                           ;incstack = 0
  2572  00141E  0E02               	movlw	2
  2573  001420  0100               	movlb	0	; () banked
  2574  001422  0100               	movlb	0	; () banked
  2575  001424  5DB5               	subwf	validateMessage@length& (0+255),w,b
  2576  001426  B0D8               	btfsc	status,0,c
  2577  001428  D002               	goto	l4494
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;Parser_thread.c: 172: return 0;
  2581  00142A  0E00               	movlw	0
  2582  00142C  0012               	return	
  2583  00142E                     l4494:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;Parser_thread.c: 173: }
  2587                           ;Parser_thread.c: 175: unsigned char len = buffer[0] & 0xF;
  2588  00142E  C0B3  FFD9         	movff	validateMessage@buffer,fsr2l
  2589  001432  C0B4  FFDA         	movff	validateMessage@buffer+1,fsr2h
  2590  001436  50DF               	movf	indf2,w,c
  2591  001438  0B0F               	andlw	15
  2592  00143A  0100               	movlb	0	; () banked
  2593  00143C  0100               	movlb	0	; () banked
  2594  00143E  6FC2               	movwf	validateMessage@len& (0+255),b
  2595                           
  2596                           ;Parser_thread.c: 176: unsigned char buf = buffer[5];
  2597  001440  0100               	movlb	0	; () banked
  2598  001442  EE20 F005          	lfsr	2,5
  2599  001446  0100               	movlb	0	; () banked
  2600  001448  51B3               	movf	validateMessage@buffer& (0+255),w,b
  2601  00144A  26D9               	addwf	fsr2l,f,c
  2602  00144C  0100               	movlb	0	; () banked
  2603  00144E  51B4               	movf	(validateMessage@buffer+1)& (0+255),w,b
  2604  001450  22DA               	addwfc	fsr2h,f,c
  2605  001452  50DF               	movf	indf2,w,c
  2606  001454  0100               	movlb	0	; () banked
  2607  001456  0100               	movlb	0	; () banked
  2608  001458  6FBB               	movwf	validateMessage@buf& (0+255),b
  2609                           
  2610                           ;Parser_thread.c: 177: unsigned char buf2 = buffer[4];
  2611  00145A  0100               	movlb	0	; () banked
  2612  00145C  EE20 F004          	lfsr	2,4
  2613  001460  0100               	movlb	0	; () banked
  2614  001462  51B3               	movf	validateMessage@buffer& (0+255),w,b
  2615  001464  26D9               	addwf	fsr2l,f,c
  2616  001466  0100               	movlb	0	; () banked
  2617  001468  51B4               	movf	(validateMessage@buffer+1)& (0+255),w,b
  2618  00146A  22DA               	addwfc	fsr2h,f,c
  2619  00146C  50DF               	movf	indf2,w,c
  2620  00146E  0100               	movlb	0	; () banked
  2621  001470  0100               	movlb	0	; () banked
  2622  001472  6FBC               	movwf	validateMessage@buf2& (0+255),b
  2623                           
  2624                           ;Parser_thread.c: 178: unsigned char buf3 = buffer[3];
  2625  001474  0100               	movlb	0	; () banked
  2626  001476  EE20 F003          	lfsr	2,3
  2627  00147A  0100               	movlb	0	; () banked
  2628  00147C  51B3               	movf	validateMessage@buffer& (0+255),w,b
  2629  00147E  26D9               	addwf	fsr2l,f,c
  2630  001480  0100               	movlb	0	; () banked
  2631  001482  51B4               	movf	(validateMessage@buffer+1)& (0+255),w,b
  2632  001484  22DA               	addwfc	fsr2h,f,c
  2633  001486  50DF               	movf	indf2,w,c
  2634  001488  0100               	movlb	0	; () banked
  2635  00148A  0100               	movlb	0	; () banked
  2636  00148C  6FBD               	movwf	validateMessage@buf3& (0+255),b
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;Parser_thread.c: 184: len = 1 + len + 1;
  2640  00148E  0100               	movlb	0	; () banked
  2641  001490  0100               	movlb	0	; () banked
  2642  001492  51C2               	movf	validateMessage@len& (0+255),w,b
  2643  001494  0F02               	addlw	2
  2644  001496  0100               	movlb	0	; () banked
  2645  001498  0100               	movlb	0	; () banked
  2646  00149A  6FC2               	movwf	validateMessage@len& (0+255),b
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;Parser_thread.c: 185: int i = 0;
  2650  00149C  0E00               	movlw	0
  2651  00149E  0100               	movlb	0	; () banked
  2652  0014A0  0100               	movlb	0	; () banked
  2653  0014A2  6FC1               	movwf	(validateMessage@i+1)& (0+255),b
  2654  0014A4  0E00               	movlw	0
  2655  0014A6  0100               	movlb	0	; () banked
  2656  0014A8  6FC0               	movwf	validateMessage@i& (0+255),b
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;Parser_thread.c: 186: unsigned char checksum= buffer[len - 1];
  2660  0014AA  0EFF               	movlw	255
  2661  0014AC  0100               	movlb	0	; () banked
  2662  0014AE  6FB6               	movwf	??_validateMessage& (0+255),b
  2663  0014B0  0EFF               	movlw	255
  2664  0014B2  6FB7               	movwf	(??_validateMessage+1)& (0+255),b
  2665  0014B4  0100               	movlb	0	; () banked
  2666  0014B6  0100               	movlb	0	; () banked
  2667  0014B8  51C2               	movf	validateMessage@len& (0+255),w,b
  2668  0014BA  0100               	movlb	0	; () banked
  2669  0014BC  6FB8               	movwf	(??_validateMessage+2)& (0+255),b
  2670  0014BE  6BB9               	clrf	(??_validateMessage+3)& (0+255),b
  2671  0014C0  0100               	movlb	0	; () banked
  2672  0014C2  51B6               	movf	??_validateMessage& (0+255),w,b
  2673  0014C4  0100               	movlb	0	; () banked
  2674  0014C6  27B8               	addwf	(??_validateMessage+2)& (0+255),f,b
  2675  0014C8  0100               	movlb	0	; () banked
  2676  0014CA  51B7               	movf	(??_validateMessage+1)& (0+255),w,b
  2677  0014CC  0100               	movlb	0	; () banked
  2678  0014CE  23B9               	addwfc	(??_validateMessage+3)& (0+255),f,b
  2679  0014D0  0100               	movlb	0	; () banked
  2680  0014D2  51B8               	movf	(??_validateMessage+2)& (0+255),w,b
  2681  0014D4  0100               	movlb	0	; () banked
  2682  0014D6  0100               	movlb	0	; () banked
  2683  0014D8  25B3               	addwf	validateMessage@buffer& (0+255),w,b
  2684  0014DA  6ED9               	movwf	fsr2l,c
  2685  0014DC  0100               	movlb	0	; () banked
  2686  0014DE  51B9               	movf	(??_validateMessage+3)& (0+255),w,b
  2687  0014E0  0100               	movlb	0	; () banked
  2688  0014E2  0100               	movlb	0	; () banked
  2689  0014E4  21B4               	addwfc	(validateMessage@buffer+1)& (0+255),w,b
  2690  0014E6  6EDA               	movwf	fsr2h,c
  2691  0014E8  50DF               	movf	indf2,w,c
  2692  0014EA  0100               	movlb	0	; () banked
  2693  0014EC  0100               	movlb	0	; () banked
  2694  0014EE  6FBE               	movwf	validateMessage@checksum& (0+255),b
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;Parser_thread.c: 187: unsigned char rollingsum = 0x00;
  2698  0014F0  0100               	movlb	0	; () banked
  2699  0014F2  6FB6               	movwf	??_validateMessage& (0+255),b
  2700  0014F4  0E00               	movlw	0
  2701  0014F6  0100               	movlb	0	; () banked
  2702  0014F8  0100               	movlb	0	; () banked
  2703  0014FA  6FBF               	movwf	validateMessage@rollingsum& (0+255),b
  2704  0014FC  0100               	movlb	0	; () banked
  2705  0014FE  51B6               	movf	??_validateMessage& (0+255),w,b
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;Parser_thread.c: 189: for(i = 0; i < len - 1; i++)
  2709  001500  0E00               	movlw	0
  2710  001502  0100               	movlb	0	; () banked
  2711  001504  0100               	movlb	0	; () banked
  2712  001506  6FC1               	movwf	(validateMessage@i+1)& (0+255),b
  2713  001508  0E00               	movlw	0
  2714  00150A  0100               	movlb	0	; () banked
  2715  00150C  6FC0               	movwf	validateMessage@i& (0+255),b
  2716  00150E  D016               	goto	l4510
  2717  001510                     l4506:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;Parser_thread.c: 190: {
  2721                           ;Parser_thread.c: 191: rollingsum += buffer[i];
  2722  001510  0100               	movlb	0	; () banked
  2723  001512  0100               	movlb	0	; () banked
  2724  001514  51C0               	movf	validateMessage@i& (0+255),w,b
  2725  001516  0100               	movlb	0	; () banked
  2726  001518  0100               	movlb	0	; () banked
  2727  00151A  25B3               	addwf	validateMessage@buffer& (0+255),w,b
  2728  00151C  6ED9               	movwf	fsr2l,c
  2729  00151E  0100               	movlb	0	; () banked
  2730  001520  0100               	movlb	0	; () banked
  2731  001522  51C1               	movf	(validateMessage@i+1)& (0+255),w,b
  2732  001524  0100               	movlb	0	; () banked
  2733  001526  0100               	movlb	0	; () banked
  2734  001528  21B4               	addwfc	(validateMessage@buffer+1)& (0+255),w,b
  2735  00152A  6EDA               	movwf	fsr2h,c
  2736  00152C  50DF               	movf	indf2,w,c
  2737  00152E  0100               	movlb	0	; () banked
  2738  001530  0100               	movlb	0	; () banked
  2739  001532  27BF               	addwf	validateMessage@rollingsum& (0+255),f,b
  2740                           
  2741                           ; BSR set to: 0
  2742  001534  0100               	movlb	0	; () banked
  2743  001536  0100               	movlb	0	; () banked
  2744  001538  4BC0               	infsnz	validateMessage@i& (0+255),f,b
  2745  00153A  2BC1               	incf	(validateMessage@i+1)& (0+255),f,b
  2746  00153C                     l4510:
  2747                           
  2748                           ; BSR set to: 0
  2749  00153C  0EFF               	movlw	255
  2750  00153E  0100               	movlb	0	; () banked
  2751  001540  6FB6               	movwf	??_validateMessage& (0+255),b
  2752  001542  0EFF               	movlw	255
  2753  001544  6FB7               	movwf	(??_validateMessage+1)& (0+255),b
  2754  001546  0100               	movlb	0	; () banked
  2755  001548  0100               	movlb	0	; () banked
  2756  00154A  51C2               	movf	validateMessage@len& (0+255),w,b
  2757  00154C  0100               	movlb	0	; () banked
  2758  00154E  6FB8               	movwf	(??_validateMessage+2)& (0+255),b
  2759  001550  6BB9               	clrf	(??_validateMessage+3)& (0+255),b
  2760  001552  0100               	movlb	0	; () banked
  2761  001554  51B6               	movf	??_validateMessage& (0+255),w,b
  2762  001556  0100               	movlb	0	; () banked
  2763  001558  27B8               	addwf	(??_validateMessage+2)& (0+255),f,b
  2764  00155A  0100               	movlb	0	; () banked
  2765  00155C  51B7               	movf	(??_validateMessage+1)& (0+255),w,b
  2766  00155E  0100               	movlb	0	; () banked
  2767  001560  23B9               	addwfc	(??_validateMessage+3)& (0+255),f,b
  2768  001562  0100               	movlb	0	; () banked
  2769  001564  0100               	movlb	0	; () banked
  2770  001566  51C1               	movf	(validateMessage@i+1)& (0+255),w,b
  2771  001568  0A80               	xorlw	128
  2772  00156A  0100               	movlb	0	; () banked
  2773  00156C  6FBA               	movwf	(??_validateMessage+4)& (0+255),b
  2774  00156E  51B8               	movf	(??_validateMessage+2)& (0+255),w,b
  2775  001570  0100               	movlb	0	; () banked
  2776  001572  0100               	movlb	0	; () banked
  2777  001574  5DC0               	subwf	validateMessage@i& (0+255),w,b
  2778  001576  0100               	movlb	0	; () banked
  2779  001578  51B9               	movf	(??_validateMessage+3)& (0+255),w,b
  2780  00157A  0A80               	xorlw	128
  2781  00157C  0100               	movlb	0	; () banked
  2782  00157E  59BA               	subwfb	(??_validateMessage+4)& (0+255),w,b
  2783  001580  A0D8               	btfss	status,0,c
  2784  001582  D7C6               	goto	l4506
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;Parser_thread.c: 192: }
  2788                           ;Parser_thread.c: 194: return ( (rollingsum & 0xFF) == checksum ) ? 1 : 0;
  2789                           
  2790                           ; BSR set to: 0
  2791  001584  0100               	movlb	0	; () banked
  2792  001586  0100               	movlb	0	; () banked
  2793  001588  51BF               	movf	validateMessage@rollingsum& (0+255),w,b
  2794  00158A  0100               	movlb	0	; () banked
  2795  00158C  0100               	movlb	0	; () banked
  2796  00158E  19BE               	xorwf	validateMessage@checksum& (0+255),w,b
  2797  001590  A4D8               	btfss	status,2,c
  2798  001592  D002               	goto	u3130
  2799  001594  0E01               	movlw	1
  2800  001596  0012               	return	
  2801  001598                     u3130:
  2802  001598  0E00               	movlw	0
  2803  00159A  0012               	return	
  2804  00159C                     __end_of_validateMessage:
  2805                           	opt stack 0
  2806                           tblptru	equ	0xFF8
  2807                           tblptrh	equ	0xFF7
  2808                           tblptrl	equ	0xFF6
  2809                           tablat	equ	0xFF5
  2810                           postinc0	equ	0xFEE
  2811                           wreg	equ	0xFE8
  2812                           postdec1	equ	0xFE5
  2813                           fsr1l	equ	0xFE1
  2814                           indf2	equ	0xFDF
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           status	equ	0xFD8
  2818                           
  2819 ;; *************** function _uart_write *****************
  2820 ;; Defined at:
  2821 ;;		line 107 in file "source/my_uart.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  length          1    wreg     unsigned char 
  2824 ;;  msg             2   52[BANK0 ] PTR unsigned char 
  2825 ;;		 -> parser_lthread@data_1681(12), parser_lthread@reply_1679(6), parser_lthread@reply_1678(6), parser_lthread@reply(6
      +), 
  2826 ;;		 -> main@msgbuffer(11), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  length          1   55[BANK0 ] unsigned char 
  2829 ;;  i               1   56[BANK0 ] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;		None               void
  2832 ;; Registers used:
  2833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2839 ;;      Params:         0       2       0       0       0
  2840 ;;      Locals:         0       2       0       0       0
  2841 ;;      Temps:          0       1       0       0       0
  2842 ;;      Totals:         0       5       0       0       0
  2843 ;;Total ram usage:        5 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:   13
  2846 ;; This function calls:
  2847 ;;		_WriteUSART
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;;		_parser_lthread
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text5
  2855  002032                     __ptext5:
  2856                           	opt stack 0
  2857  002032                     _uart_write:
  2858                           	opt stack 17
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;incstack = 0
  2862                           ;uart_write@length stored from wreg
  2863  002032  CFE8 F0B7          	movff	wreg,uart_write@length
  2864                           
  2865                           ;my_uart.c: 109: unsigned char i = 0;
  2866  002036  0100               	movlb	0	; () banked
  2867  002038  6FB6               	movwf	??_uart_write& (0+255),b
  2868  00203A  0E00               	movlw	0
  2869  00203C  0100               	movlb	0	; () banked
  2870  00203E  0100               	movlb	0	; () banked
  2871  002040  6FB8               	movwf	uart_write@i& (0+255),b
  2872  002042  0100               	movlb	0	; () banked
  2873  002044  51B6               	movf	??_uart_write& (0+255),w,b
  2874                           
  2875                           ;my_uart.c: 110: for(i = 0; i < length; i++){
  2876  002046  0100               	movlb	0	; () banked
  2877  002048  6FB6               	movwf	??_uart_write& (0+255),b
  2878  00204A  0E00               	movlw	0
  2879  00204C  0100               	movlb	0	; () banked
  2880  00204E  0100               	movlb	0	; () banked
  2881  002050  6FB8               	movwf	uart_write@i& (0+255),b
  2882  002052  0100               	movlb	0	; () banked
  2883  002054  51B6               	movf	??_uart_write& (0+255),w,b
  2884  002056  D016               	goto	l3938
  2885  002058                     l463:
  2886  002058  A2AC               	btfss	4012,1,c	;volatile
  2887  00205A  D7FE               	goto	l463
  2888                           
  2889                           ;my_uart.c: 121: WriteUSART(msg[i]);
  2890  00205C  0100               	movlb	0	; () banked
  2891  00205E  0100               	movlb	0	; () banked
  2892  002060  51B8               	movf	uart_write@i& (0+255),w,b
  2893  002062  0D01               	mullw	1
  2894  002064  50F3               	movf	prodl,w,c
  2895  002066  0100               	movlb	0	; () banked
  2896  002068  0100               	movlb	0	; () banked
  2897  00206A  25B4               	addwf	uart_write@msg& (0+255),w,b
  2898  00206C  6ED9               	movwf	fsr2l,c
  2899  00206E  50F4               	movf	prodh,w,c
  2900  002070  0100               	movlb	0	; () banked
  2901  002072  0100               	movlb	0	; () banked
  2902  002074  21B5               	addwfc	(uart_write@msg+1)& (0+255),w,b
  2903  002076  6EDA               	movwf	fsr2h,c
  2904  002078  50DF               	movf	indf2,w,c
  2905  00207A  EC44  F013         	call	_WriteUSART
  2906  00207E  0100               	movlb	0	; () banked
  2907  002080  0100               	movlb	0	; () banked
  2908  002082  2BB8               	incf	uart_write@i& (0+255),f,b
  2909  002084                     l3938:
  2910                           
  2911                           ; BSR set to: 0
  2912  002084  0100               	movlb	0	; () banked
  2913  002086  0100               	movlb	0	; () banked
  2914  002088  51B7               	movf	uart_write@length& (0+255),w,b
  2915  00208A  0100               	movlb	0	; () banked
  2916  00208C  0100               	movlb	0	; () banked
  2917  00208E  5DB8               	subwf	uart_write@i& (0+255),w,b
  2918  002090  B0D8               	btfsc	status,0,c
  2919                           
  2920                           ; BSR set to: 0
  2921                           
  2922                           ; BSR set to: 0
  2923  002092  0012               	return	
  2924  002094  D7E1               	goto	l463
  2925  002096                     __end_of_uart_write:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           postdec1	equ	0xFE5
  2936                           fsr1l	equ	0xFE1
  2937                           indf2	equ	0xFDF
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function _WriteUSART *****************
  2943 ;; Defined at:
  2944 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  data            1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  data            1   51[BANK0 ] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		wreg
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       1       0       0       0
  2960 ;;      Temps:          0       0       0       0       0
  2961 ;;      Totals:         0       1       0       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:   12
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_uart_write
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text6
  2973  002688                     __ptext6:
  2974                           	opt stack 0
  2975  002688                     _WriteUSART:
  2976                           	opt stack 17
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;incstack = 0
  2980                           ;WriteUSART@data stored from wreg
  2981  002688  CFE8 F0B3          	movff	wreg,WriteUSART@data
  2982  00268C  ACAC               	btfss	4012,6,c	;volatile
  2983  00268E  D003               	goto	l4486
  2984  002690  90AC               	bcf	4012,0,c	;volatile
  2985  002692  B241               	btfsc	_USART_Status,1,c
  2986  002694  80AC               	bsf	4012,0,c	;volatile
  2987  002696                     l4486:
  2988  002696  C0B3  FFAD         	movff	WriteUSART@data,4013	;volatile
  2989  00269A  0012               	return	
  2990  00269C                     __end_of_WriteUSART:
  2991                           	opt stack 0
  2992                           tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           prodh	equ	0xFF4
  2997                           prodl	equ	0xFF3
  2998                           postinc0	equ	0xFEE
  2999                           wreg	equ	0xFE8
  3000                           postdec1	equ	0xFE5
  3001                           fsr1l	equ	0xFE1
  3002                           indf2	equ	0xFDF
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function _i2c_master_send *****************
  3008 ;; Defined at:
  3009 ;;		line 67 in file "source/my_i2c.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  length          1    wreg     unsigned char 
  3012 ;;  msg             2   51[BANK0 ] PTR unsigned char 
  3013 ;;		 -> parser_lthread@data(5), 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  length          1   55[BANK0 ] unsigned char 
  3016 ;;  currentLengt    2   56[BANK0 ] unsigned int 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      unsigned char 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3026 ;;      Params:         0       2       0       0       0
  3027 ;;      Locals:         0       3       0       0       0
  3028 ;;      Temps:          0       2       0       0       0
  3029 ;;      Totals:         0       7       0       0       0
  3030 ;;Total ram usage:        7 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:   12
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_parser_lthread
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text7
  3041  0019C2                     __ptext7:
  3042                           	opt stack 0
  3043  0019C2                     _i2c_master_send:
  3044                           	opt stack 17
  3045                           
  3046                           ;incstack = 0
  3047                           ;i2c_master_send@length stored from wreg
  3048  0019C2  CFE8 F0B7          	movff	wreg,i2c_master_send@length
  3049                           
  3050                           ;my_i2c.c: 70: if (SSPSTATbits.READ_WRITE == 1){
  3051  0019C6  B4C7               	btfsc	4039,2,c	;volatile
  3052  0019C8  0012               	return	
  3053                           
  3054                           ;my_i2c.c: 72: }
  3055                           ;my_i2c.c: 75: unsigned int currentLength;
  3056                           ;my_i2c.c: 76: for (currentLength = 0; currentLength < length; currentLength++){
  3057                           
  3058                           ;my_i2c.c: 71: return -1;
  3059                           ;	Return value of _i2c_master_send is never used
  3060  0019CA  0E00               	movlw	0
  3061  0019CC  0100               	movlb	0	; () banked
  3062  0019CE  0100               	movlb	0	; () banked
  3063  0019D0  6FB9               	movwf	(i2c_master_send@currentLength+1)& (0+255),b
  3064  0019D2  0E00               	movlw	0
  3065  0019D4  0100               	movlb	0	; () banked
  3066  0019D6  6FB8               	movwf	i2c_master_send@currentLength& (0+255),b
  3067  0019D8  D02C               	goto	l4190
  3068  0019DA                     l4186:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;my_i2c.c: 77: ic_ptr->outbuffer[currentLength] = msg[currentLength];
  3072  0019DA  0100               	movlb	0	; () banked
  3073  0019DC  0100               	movlb	0	; () banked
  3074  0019DE  51B8               	movf	i2c_master_send@currentLength& (0+255),w,b
  3075  0019E0  0100               	movlb	0	; () banked
  3076  0019E2  0100               	movlb	0	; () banked
  3077  0019E4  25B3               	addwf	i2c_master_send@msg& (0+255),w,b
  3078  0019E6  6ED9               	movwf	fsr2l,c
  3079  0019E8  0100               	movlb	0	; () banked
  3080  0019EA  0100               	movlb	0	; () banked
  3081  0019EC  51B9               	movf	(i2c_master_send@currentLength+1)& (0+255),w,b
  3082  0019EE  0100               	movlb	0	; () banked
  3083  0019F0  0100               	movlb	0	; () banked
  3084  0019F2  21B4               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3085  0019F4  6EDA               	movwf	fsr2h,c
  3086  0019F6  0E10               	movlw	16
  3087  0019F8  0100               	movlb	0	; () banked
  3088  0019FA  0100               	movlb	0	; () banked
  3089  0019FC  25B8               	addwf	i2c_master_send@currentLength& (0+255),w,b
  3090  0019FE  0100               	movlb	0	; () banked
  3091  001A00  6FB5               	movwf	??_i2c_master_send& (0+255),b
  3092  001A02  0E00               	movlw	0
  3093  001A04  0100               	movlb	0	; () banked
  3094  001A06  0100               	movlb	0	; () banked
  3095  001A08  21B9               	addwfc	(i2c_master_send@currentLength+1)& (0+255),w,b
  3096  001A0A  0100               	movlb	0	; () banked
  3097  001A0C  6FB6               	movwf	(??_i2c_master_send+1)& (0+255),b
  3098  001A0E  0100               	movlb	0	; () banked
  3099  001A10  51B5               	movf	??_i2c_master_send& (0+255),w,b
  3100  001A12  0100               	movlb	0	; () banked
  3101  001A14  0100               	movlb	0	; () banked
  3102  001A16  25C8               	addwf	_ic_ptr& (0+255),w,b
  3103  001A18  6EE1               	movwf	fsr1l,c
  3104  001A1A  0100               	movlb	0	; () banked
  3105  001A1C  51B6               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3106  001A1E  0100               	movlb	0	; () banked
  3107  001A20  0100               	movlb	0	; () banked
  3108  001A22  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3109  001A24  6EE2               	movwf	fsr1h,c
  3110  001A26  CFDF FFE7          	movff	indf2,indf1
  3111                           
  3112                           ; BSR set to: 0
  3113  001A2A  0100               	movlb	0	; () banked
  3114  001A2C  0100               	movlb	0	; () banked
  3115  001A2E  4BB8               	infsnz	i2c_master_send@currentLength& (0+255),f,b
  3116  001A30  2BB9               	incf	(i2c_master_send@currentLength+1)& (0+255),f,b
  3117  001A32                     l4190:
  3118                           
  3119                           ; BSR set to: 0
  3120  001A32  0100               	movlb	0	; () banked
  3121  001A34  0100               	movlb	0	; () banked
  3122  001A36  51B7               	movf	i2c_master_send@length& (0+255),w,b
  3123  001A38  0100               	movlb	0	; () banked
  3124  001A3A  6FB5               	movwf	??_i2c_master_send& (0+255),b
  3125  001A3C  6BB6               	clrf	(??_i2c_master_send+1)& (0+255),b
  3126  001A3E  0100               	movlb	0	; () banked
  3127  001A40  51B5               	movf	??_i2c_master_send& (0+255),w,b
  3128  001A42  0100               	movlb	0	; () banked
  3129  001A44  0100               	movlb	0	; () banked
  3130  001A46  5DB8               	subwf	i2c_master_send@currentLength& (0+255),w,b
  3131  001A48  0100               	movlb	0	; () banked
  3132  001A4A  51B6               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3133  001A4C  0100               	movlb	0	; () banked
  3134  001A4E  0100               	movlb	0	; () banked
  3135  001A50  59B9               	subwfb	(i2c_master_send@currentLength+1)& (0+255),w,b
  3136  001A52  A0D8               	btfss	status,0,c
  3137  001A54  D7C2               	goto	l4186
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;my_i2c.c: 78: }
  3141                           ;my_i2c.c: 80: ic_ptr->outbuflen = length;
  3142                           
  3143                           ; BSR set to: 0
  3144  001A56  0100               	movlb	0	; () banked
  3145  001A58  EE20 F01A          	lfsr	2,26
  3146  001A5C  0100               	movlb	0	; () banked
  3147  001A5E  51C8               	movf	_ic_ptr& (0+255),w,b
  3148  001A60  26D9               	addwf	fsr2l,f,c
  3149  001A62  0100               	movlb	0	; () banked
  3150  001A64  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3151  001A66  22DA               	addwfc	fsr2h,f,c
  3152  001A68  0100               	movlb	0	; () banked
  3153  001A6A  C0B7  FFDF         	movff	i2c_master_send@length,indf2
  3154                           
  3155                           ;my_i2c.c: 81: ic_ptr->outbufind = 0;
  3156  001A6E  0100               	movlb	0	; () banked
  3157  001A70  EE20 F01B          	lfsr	2,27
  3158  001A74  0100               	movlb	0	; () banked
  3159  001A76  51C8               	movf	_ic_ptr& (0+255),w,b
  3160  001A78  26D9               	addwf	fsr2l,f,c
  3161  001A7A  0100               	movlb	0	; () banked
  3162  001A7C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3163  001A7E  22DA               	addwfc	fsr2h,f,c
  3164  001A80  0E00               	movlw	0
  3165  001A82  6EDF               	movwf	indf2,c
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;my_i2c.c: 85: SSPCON2bits.RCEN = 0;
  3169  001A84  96C5               	bcf	4037,3,c	;volatile
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;my_i2c.c: 86: SSPCON2bits.SEN = 1;
  3173  001A86  80C5               	bsf	4037,0,c	;volatile
  3174                           
  3175                           ;my_i2c.c: 88: ic_ptr->status = 0x9;
  3176  001A88  0100               	movlb	0	; () banked
  3177  001A8A  EE20 F00D          	lfsr	2,13
  3178  001A8E  0100               	movlb	0	; () banked
  3179  001A90  51C8               	movf	_ic_ptr& (0+255),w,b
  3180  001A92  26D9               	addwf	fsr2l,f,c
  3181  001A94  0100               	movlb	0	; () banked
  3182  001A96  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3183  001A98  22DA               	addwfc	fsr2h,f,c
  3184  001A9A  0E09               	movlw	9
  3185  001A9C  6EDF               	movwf	indf2,c
  3186  001A9E  0012               	return	
  3187  001AA0                     __end_of_i2c_master_send:
  3188                           	opt stack 0
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           prodh	equ	0xFF4
  3194                           prodl	equ	0xFF3
  3195                           postinc0	equ	0xFEE
  3196                           wreg	equ	0xFE8
  3197                           indf1	equ	0xFE7
  3198                           postdec1	equ	0xFE5
  3199                           fsr1h	equ	0xFE2
  3200                           fsr1l	equ	0xFE1
  3201                           indf2	equ	0xFDF
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _i2c_master_recv *****************
  3207 ;; Defined at:
  3208 ;;		line 106 in file "source/my_i2c.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  length          1    wreg     unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  length          1   51[BANK0 ] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      unsigned char 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         0       1       0       0       0
  3224 ;;      Temps:          0       0       0       0       0
  3225 ;;      Totals:         0       1       0       0       0
  3226 ;;Total ram usage:        1 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:   12
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_parser_lthread
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text8
  3237  0021A6                     __ptext8:
  3238                           	opt stack 0
  3239  0021A6                     _i2c_master_recv:
  3240                           	opt stack 17
  3241                           
  3242                           ;incstack = 0
  3243                           ;i2c_master_recv@length stored from wreg
  3244  0021A6  CFE8 F0B3          	movff	wreg,i2c_master_recv@length
  3245                           
  3246                           ;my_i2c.c: 108: if (SSPSTATbits.READ_WRITE == 1){
  3247  0021AA  B4C7               	btfsc	4039,2,c	;volatile
  3248  0021AC  0012               	return	
  3249                           
  3250                           ;my_i2c.c: 110: }
  3251                           ;my_i2c.c: 112: ic_ptr->buflen = length;
  3252                           
  3253                           ;my_i2c.c: 109: return -1;
  3254                           ;	Return value of _i2c_master_recv is never used
  3255  0021AE  0100               	movlb	0	; () banked
  3256  0021B0  EE20 F00A          	lfsr	2,10
  3257  0021B4  0100               	movlb	0	; () banked
  3258  0021B6  51C8               	movf	_ic_ptr& (0+255),w,b
  3259  0021B8  26D9               	addwf	fsr2l,f,c
  3260  0021BA  0100               	movlb	0	; () banked
  3261  0021BC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3262  0021BE  22DA               	addwfc	fsr2h,f,c
  3263  0021C0  0100               	movlb	0	; () banked
  3264  0021C2  C0B3  FFDF         	movff	i2c_master_recv@length,indf2
  3265                           
  3266                           ;my_i2c.c: 113: ic_ptr->bufind = 0;
  3267  0021C6  0100               	movlb	0	; () banked
  3268  0021C8  EE20 F00B          	lfsr	2,11
  3269  0021CC  0100               	movlb	0	; () banked
  3270  0021CE  51C8               	movf	_ic_ptr& (0+255),w,b
  3271  0021D0  26D9               	addwf	fsr2l,f,c
  3272  0021D2  0100               	movlb	0	; () banked
  3273  0021D4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3274  0021D6  22DA               	addwfc	fsr2h,f,c
  3275  0021D8  0E00               	movlw	0
  3276  0021DA  6EDF               	movwf	indf2,c
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;my_i2c.c: 116: SSPCON2bits.SEN = 1;
  3280  0021DC  80C5               	bsf	4037,0,c	;volatile
  3281                           
  3282                           ;my_i2c.c: 118: ic_ptr->status = 0x10;
  3283  0021DE  0100               	movlb	0	; () banked
  3284  0021E0  EE20 F00D          	lfsr	2,13
  3285  0021E4  0100               	movlb	0	; () banked
  3286  0021E6  51C8               	movf	_ic_ptr& (0+255),w,b
  3287  0021E8  26D9               	addwf	fsr2l,f,c
  3288  0021EA  0100               	movlb	0	; () banked
  3289  0021EC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3290  0021EE  22DA               	addwfc	fsr2h,f,c
  3291  0021F0  0E10               	movlw	16
  3292  0021F2  6EDF               	movwf	indf2,c
  3293  0021F4  0012               	return	
  3294  0021F6                     __end_of_i2c_master_recv:
  3295                           	opt stack 0
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           prodh	equ	0xFF4
  3301                           prodl	equ	0xFF3
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           indf1	equ	0xFE7
  3305                           postdec1	equ	0xFE5
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           indf2	equ	0xFDF
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _i2c_configure_master *****************
  3314 ;; Defined at:
  3315 ;;		line 24 in file "source/my_i2c.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  slave_addr      1    wreg     unsigned char 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  slave_addr      1   52[BANK0 ] unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;		None               void
  3322 ;; Registers used:
  3323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3329 ;;      Params:         0       0       0       0       0
  3330 ;;      Locals:         0       1       0       0       0
  3331 ;;      Temps:          0       1       0       0       0
  3332 ;;      Totals:         0       2       0       0       0
  3333 ;;Total ram usage:        2 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:   12
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_parser_lthread
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text9
  3344  002152                     __ptext9:
  3345                           	opt stack 0
  3346  002152                     _i2c_configure_master:
  3347                           	opt stack 17
  3348                           
  3349                           ;incstack = 0
  3350                           ;i2c_configure_master@slave_addr stored from wreg
  3351  002152  CFE8 F0B4          	movff	wreg,i2c_configure_master@slave_addr
  3352                           
  3353                           ;my_i2c.c: 25: i2c_mode = 1;
  3354  002156  0100               	movlb	0	; () banked
  3355  002158  6FB3               	movwf	??_i2c_configure_master& (0+255),b
  3356  00215A  0E01               	movlw	1
  3357  00215C  0100               	movlb	0	; () banked
  3358  00215E  0100               	movlb	0	; () banked
  3359  002160  6FCC               	movwf	_i2c_mode& (0+255),b
  3360  002162  0100               	movlb	0	; () banked
  3361  002164  51B3               	movf	??_i2c_configure_master& (0+255),w,b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;my_i2c.c: 27: ic_ptr->slave_addr = slave_addr;
  3365  002166  0100               	movlb	0	; () banked
  3366  002168  EE20 F01C          	lfsr	2,28
  3367  00216C  0100               	movlb	0	; () banked
  3368  00216E  51C8               	movf	_ic_ptr& (0+255),w,b
  3369  002170  26D9               	addwf	fsr2l,f,c
  3370  002172  0100               	movlb	0	; () banked
  3371  002174  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3372  002176  22DA               	addwfc	fsr2h,f,c
  3373  002178  0100               	movlb	0	; () banked
  3374  00217A  C0B4  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;my_i2c.c: 30: SSPCON1 = 0x0;
  3378  00217E  0E00               	movlw	0
  3379  002180  6EC6               	movwf	4038,c	;volatile
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;my_i2c.c: 31: SSPCON2 = 0x0;
  3383  002182  0E00               	movlw	0
  3384  002184  6EC5               	movwf	4037,c	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;my_i2c.c: 32: SSPSTAT = 0x0;
  3388  002186  0E00               	movlw	0
  3389  002188  6EC7               	movwf	4039,c	;volatile
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;my_i2c.c: 35: SSPADD = 0x63;
  3393  00218A  0E63               	movlw	99
  3394  00218C  6EC8               	movwf	4040,c	;volatile
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;my_i2c.c: 38: SSPCON1bits.SSPM = 0x08;
  3398  00218E  50C6               	movf	4038,w,c	;volatile
  3399  002190  0BF0               	andlw	-16
  3400  002192  0908               	iorlw	8
  3401  002194  6EC6               	movwf	4038,c	;volatile
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;my_i2c.c: 39: SSPCON1bits.SSPEN = 1;
  3405  002196  8AC6               	bsf	4038,5,c	;volatile
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;my_i2c.c: 42: SSPSTAT = 0b10000000;
  3409  002198  0E80               	movlw	128
  3410  00219A  6EC7               	movwf	4039,c	;volatile
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;my_i2c.c: 45: LATCbits.LATC3 = 1;
  3414  00219C  868B               	bsf	3979,3,c	;volatile
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;my_i2c.c: 46: LATCbits.LATC4 = 1;
  3418  00219E  888B               	bsf	3979,4,c	;volatile
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;my_i2c.c: 47: TRISCbits.TRISC3 = 1;
  3422  0021A0  8694               	bsf	3988,3,c	;volatile
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;my_i2c.c: 48: TRISCbits.TRISC4 = 1;
  3426  0021A2  8894               	bsf	3988,4,c	;volatile
  3427                           
  3428                           ; BSR set to: 0
  3429  0021A4  0012               	return	
  3430  0021A6                     __end_of_i2c_configure_master:
  3431                           	opt stack 0
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           postinc0	equ	0xFEE
  3439                           wreg	equ	0xFE8
  3440                           indf1	equ	0xFE7
  3441                           postdec1	equ	0xFE5
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           indf2	equ	0xFDF
  3445                           fsr2h	equ	0xFDA
  3446                           fsr2l	equ	0xFD9
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _getMessageId *****************
  3450 ;; Defined at:
  3451 ;;		line 208 in file "source/Parser_thread.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  buffer          2   51[BANK0 ] PTR unsigned char 
  3454 ;;		 -> main@msgbuffer(11), 
  3455 ;;  length          1   53[BANK0 ] unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      unsigned char 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3467 ;;      Params:         0       3       0       0       0
  3468 ;;      Locals:         0       0       0       0       0
  3469 ;;      Temps:          0       1       0       0       0
  3470 ;;      Totals:         0       4       0       0       0
  3471 ;;Total ram usage:        4 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:   12
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_parser_lthread
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text10
  3482  0025CC                     __ptext10:
  3483                           	opt stack 0
  3484  0025CC                     _getMessageId:
  3485                           	opt stack 17
  3486                           
  3487                           ;Parser_thread.c: 210: if (length > 0) {
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;incstack = 0
  3491  0025CC  0100               	movlb	0	; () banked
  3492  0025CE  0100               	movlb	0	; () banked
  3493  0025D0  51B5               	movf	getMessageId@length& (0+255),w,b
  3494  0025D2  B4D8               	btfsc	status,2,c
  3495  0025D4  D00C               	goto	l4524
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;Parser_thread.c: 211: return (buffer[0] & 0xF0) >> 4;
  3499  0025D6  C0B3  FFD9         	movff	getMessageId@buffer,fsr2l
  3500  0025DA  C0B4  FFDA         	movff	getMessageId@buffer+1,fsr2h
  3501  0025DE  50DF               	movf	indf2,w,c
  3502  0025E0  0100               	movlb	0	; () banked
  3503  0025E2  6FB6               	movwf	??_getMessageId& (0+255),b
  3504  0025E4  0100               	movlb	0	; () banked
  3505  0025E6  39B6               	swapf	??_getMessageId& (0+255),w,b
  3506  0025E8  0B0F               	andlw	15
  3507  0025EA  0B0F               	andlw	15
  3508  0025EC  0012               	return	
  3509  0025EE                     l4524:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;Parser_thread.c: 214: else return 0xFF;
  3513  0025EE  0EFF               	movlw	255
  3514  0025F0  0012               	return	
  3515  0025F2                     __end_of_getMessageId:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           prodh	equ	0xFF4
  3522                           prodl	equ	0xFF3
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           indf1	equ	0xFE7
  3526                           postdec1	equ	0xFE5
  3527                           fsr1h	equ	0xFE2
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _init_uart_recv *****************
  3535 ;; Defined at:
  3536 ;;		line 52 in file "source/my_uart.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  uc              2   51[BANK0 ] PTR struct __uart_comm
  3539 ;;		 -> main@uc(5), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;		None               void
  3544 ;; Registers used:
  3545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3551 ;;      Params:         0       2       0       0       0
  3552 ;;      Locals:         0       0       0       0       0
  3553 ;;      Temps:          0       1       0       0       0
  3554 ;;      Totals:         0       3       0       0       0
  3555 ;;Total ram usage:        3 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:   12
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_main
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text11
  3566  0021F6                     __ptext11:
  3567                           	opt stack 0
  3568  0021F6                     _init_uart_recv:
  3569                           	opt stack 18
  3570                           
  3571                           ;my_uart.c: 53: uc_ptr = uc;
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;incstack = 0
  3575  0021F6  0100               	movlb	0	; () banked
  3576  0021F8  C0B4  F052         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3577  0021FC  0100               	movlb	0	; () banked
  3578  0021FE  C0B3  F051         	movff	init_uart_recv@uc,_uc_ptr
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;my_uart.c: 54: uc_ptr->buflen = 0;
  3582  002202  EE20 F004          	lfsr	2,4
  3583  002206  5051               	movf	_uc_ptr,w,c
  3584  002208  26D9               	addwf	fsr2l,f,c
  3585  00220A  5052               	movf	_uc_ptr+1,w,c
  3586  00220C  22DA               	addwfc	fsr2h,f,c
  3587  00220E  0E00               	movlw	0
  3588  002210  6EDF               	movwf	indf2,c
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;my_uart.c: 55: buf_len = 0;
  3592  002212  0100               	movlb	0	; () banked
  3593  002214  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3594  002216  0E00               	movlw	0
  3595  002218  6E42               	movwf	_buf_len,c
  3596  00221A  0100               	movlb	0	; () banked
  3597  00221C  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;my_uart.c: 56: command_length = 0;
  3601  00221E  0100               	movlb	0	; () banked
  3602  002220  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3603  002222  0E00               	movlw	0
  3604  002224  6E44               	movwf	_command_length,c
  3605  002226  0100               	movlb	0	; () banked
  3606  002228  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;my_uart.c: 57: command_count = 0;
  3610  00222A  0100               	movlb	0	; () banked
  3611  00222C  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3612  00222E  0E00               	movlw	0
  3613  002230  6E43               	movwf	_command_count,c
  3614  002232  0100               	movlb	0	; () banked
  3615  002234  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;my_uart.c: 58: State = GET_MSGID;
  3619  002236  0100               	movlb	0	; () banked
  3620  002238  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3621  00223A  0E00               	movlw	0
  3622  00223C  6E40               	movwf	_State,c
  3623  00223E  0100               	movlb	0	; () banked
  3624  002240  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3625                           
  3626                           ; BSR set to: 0
  3627  002242  0012               	return	
  3628  002244                     __end_of_init_uart_recv:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           prodh	equ	0xFF4
  3635                           prodl	equ	0xFF3
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           indf1	equ	0xFE7
  3639                           postdec1	equ	0xFE5
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           indf2	equ	0xFDF
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _init_timer1_lthread *****************
  3648 ;; Defined at:
  3649 ;;		line 6 in file "source/timer1_thread.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  tptr            2   51[BANK0 ] PTR struct __timer1_thre
  3652 ;;		 -> main@t1thread_data(2), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;		None               void
  3657 ;; Registers used:
  3658 ;;		wreg, fsr2l, fsr2h
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3664 ;;      Params:         0       2       0       0       0
  3665 ;;      Locals:         0       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0
  3667 ;;      Totals:         0       2       0       0       0
  3668 ;;Total ram usage:        2 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   12
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_main
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text12
  3679  00269C                     __ptext12:
  3680                           	opt stack 0
  3681  00269C                     _init_timer1_lthread:
  3682                           	opt stack 18
  3683                           
  3684                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;incstack = 0
  3688  00269C  C0B3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3689  0026A0  C0B4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3690  0026A4  0E00               	movlw	0
  3691  0026A6  6EDE               	movwf	postinc2,c
  3692  0026A8  0E00               	movlw	0
  3693  0026AA  6EDD               	movwf	postdec2,c
  3694  0026AC  0012               	return	
  3695  0026AE                     __end_of_init_timer1_lthread:
  3696                           	opt stack 0
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           postinc0	equ	0xFEE
  3704                           wreg	equ	0xFE8
  3705                           indf1	equ	0xFE7
  3706                           postdec1	equ	0xFE5
  3707                           fsr1h	equ	0xFE2
  3708                           fsr1l	equ	0xFE1
  3709                           indf2	equ	0xFDF
  3710                           postinc2	equ	0xFDE
  3711                           postdec2	equ	0xFDD
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           
  3716 ;; *************** function _init_queues *****************
  3717 ;; Defined at:
  3718 ;;		line 194 in file "source/messages.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;		None               void
  3725 ;; Registers used:
  3726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3732 ;;      Params:         0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0
  3734 ;;      Temps:          0       1       0       0       0
  3735 ;;      Totals:         0       1       0       0       0
  3736 ;;Total ram usage:        1 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:   13
  3739 ;; This function calls:
  3740 ;;		_init_queue
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text13
  3747  001EF0                     __ptext13:
  3748                           	opt stack 0
  3749  001EF0                     _init_queues:
  3750                           	opt stack 17
  3751                           
  3752                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3753                           
  3754                           ;incstack = 0
  3755  001EF0  0100               	movlb	0	; () banked
  3756  001EF2  6FB7               	movwf	??_init_queues& (0+255),b
  3757  001EF4  0E00               	movlw	0
  3758  001EF6  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  3759  001EF8  0100               	movlb	0	; () banked
  3760  001EFA  51B7               	movf	??_init_queues& (0+255),w,b
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3764  001EFC  0101               	movlb	1	; () banked
  3765  001EFE  0E01               	movlw	high _ToMainLow_MQ
  3766  001F00  0100               	movlb	0	; () banked
  3767  001F02  0100               	movlb	0	; () banked
  3768  001F04  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3769  001F06  0101               	movlb	1	; () banked
  3770  001F08  0E6C               	movlw	low _ToMainLow_MQ
  3771  001F0A  0100               	movlb	0	; () banked
  3772  001F0C  0100               	movlb	0	; () banked
  3773  001F0E  6FB3               	movwf	init_queue@qptr& (0+255),b
  3774  001F10  EC3B  F00F         	call	_init_queue	;wreg free
  3775                           
  3776                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3777  001F14  0101               	movlb	1	; () banked
  3778  001F16  0E01               	movlw	high _ToMainHigh_MQ
  3779  001F18  0100               	movlb	0	; () banked
  3780  001F1A  0100               	movlb	0	; () banked
  3781  001F1C  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3782  001F1E  0101               	movlb	1	; () banked
  3783  001F20  0E36               	movlw	low _ToMainHigh_MQ
  3784  001F22  0100               	movlb	0	; () banked
  3785  001F24  0100               	movlb	0	; () banked
  3786  001F26  6FB3               	movwf	init_queue@qptr& (0+255),b
  3787  001F28  EC3B  F00F         	call	_init_queue	;wreg free
  3788                           
  3789                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3790  001F2C  0101               	movlb	1	; () banked
  3791  001F2E  0E01               	movlw	high _FromMainLow_MQ
  3792  001F30  0100               	movlb	0	; () banked
  3793  001F32  0100               	movlb	0	; () banked
  3794  001F34  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3795  001F36  0101               	movlb	1	; () banked
  3796  001F38  0E00               	movlw	low _FromMainLow_MQ
  3797  001F3A  0100               	movlb	0	; () banked
  3798  001F3C  0100               	movlb	0	; () banked
  3799  001F3E  6FB3               	movwf	init_queue@qptr& (0+255),b
  3800  001F40  EC3B  F00F         	call	_init_queue	;wreg free
  3801                           
  3802                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3803  001F44  0102               	movlb	2	; () banked
  3804  001F46  0E02               	movlw	high _FromMainHigh_MQ
  3805  001F48  0100               	movlb	0	; () banked
  3806  001F4A  0100               	movlb	0	; () banked
  3807  001F4C  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3808  001F4E  0102               	movlb	2	; () banked
  3809  001F50  0E4B               	movlw	low _FromMainHigh_MQ
  3810  001F52  0100               	movlb	0	; () banked
  3811  001F54  0100               	movlb	0	; () banked
  3812  001F56  6FB3               	movwf	init_queue@qptr& (0+255),b
  3813  001F58  EC3B  F00F         	call	_init_queue	;wreg free
  3814  001F5C  0012               	return	
  3815  001F5E                     __end_of_init_queues:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           prodh	equ	0xFF4
  3822                           prodl	equ	0xFF3
  3823                           postinc0	equ	0xFEE
  3824                           wreg	equ	0xFE8
  3825                           indf1	equ	0xFE7
  3826                           postdec1	equ	0xFE5
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           indf2	equ	0xFDF
  3830                           postinc2	equ	0xFDE
  3831                           postdec2	equ	0xFDD
  3832                           fsr2h	equ	0xFDA
  3833                           fsr2l	equ	0xFD9
  3834                           status	equ	0xFD8
  3835                           
  3836 ;; *************** function _init_queue *****************
  3837 ;; Defined at:
  3838 ;;		line 14 in file "source/messages.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  qptr            2   51[BANK0 ] PTR struct __msg_queue
  3841 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  i               1   54[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;		None               void
  3846 ;; Registers used:
  3847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3853 ;;      Params:         0       2       0       0       0
  3854 ;;      Locals:         0       1       0       0       0
  3855 ;;      Temps:          0       1       0       0       0
  3856 ;;      Totals:         0       4       0       0       0
  3857 ;;Total ram usage:        4 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:   12
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_init_queues
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text14
  3868  001E76                     __ptext14:
  3869                           	opt stack 0
  3870  001E76                     _init_queue:
  3871                           	opt stack 17
  3872                           
  3873                           ;messages.c: 15: unsigned char i;
  3874                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3875                           
  3876                           ;incstack = 0
  3877  001E76  0100               	movlb	0	; () banked
  3878  001E78  EE20 F034          	lfsr	2,52
  3879  001E7C  0100               	movlb	0	; () banked
  3880  001E7E  51B3               	movf	init_queue@qptr& (0+255),w,b
  3881  001E80  26D9               	addwf	fsr2l,f,c
  3882  001E82  0100               	movlb	0	; () banked
  3883  001E84  51B4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3884  001E86  22DA               	addwfc	fsr2h,f,c
  3885  001E88  0E00               	movlw	0
  3886  001E8A  6EDF               	movwf	indf2,c
  3887                           
  3888                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3889  001E8C  0100               	movlb	0	; () banked
  3890  001E8E  EE20 F035          	lfsr	2,53
  3891  001E92  0100               	movlb	0	; () banked
  3892  001E94  51B3               	movf	init_queue@qptr& (0+255),w,b
  3893  001E96  26D9               	addwf	fsr2l,f,c
  3894  001E98  0100               	movlb	0	; () banked
  3895  001E9A  51B4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3896  001E9C  22DA               	addwfc	fsr2h,f,c
  3897  001E9E  0E00               	movlw	0
  3898  001EA0  6EDF               	movwf	indf2,c
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3902  001EA2  0100               	movlb	0	; () banked
  3903  001EA4  6FB5               	movwf	??_init_queue& (0+255),b
  3904  001EA6  0E00               	movlw	0
  3905  001EA8  0100               	movlb	0	; () banked
  3906  001EAA  0100               	movlb	0	; () banked
  3907  001EAC  6FB6               	movwf	init_queue@i& (0+255),b
  3908  001EAE  0100               	movlb	0	; () banked
  3909  001EB0  51B5               	movf	??_init_queue& (0+255),w,b
  3910                           
  3911                           ; BSR set to: 0
  3912  001EB2  0E03               	movlw	3
  3913  001EB4  0100               	movlb	0	; () banked
  3914  001EB6  0100               	movlb	0	; () banked
  3915  001EB8  65B6               	cpfsgt	init_queue@i& (0+255),b
  3916  001EBA  D001               	goto	l4052
  3917  001EBC  0012               	return	
  3918  001EBE                     l4052:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;messages.c: 20: qptr->queue[i].full = 0;
  3922  001EBE  0100               	movlb	0	; () banked
  3923  001EC0  0100               	movlb	0	; () banked
  3924  001EC2  51B6               	movf	init_queue@i& (0+255),w,b
  3925  001EC4  0D0D               	mullw	13
  3926  001EC6  50F3               	movf	prodl,w,c
  3927  001EC8  0100               	movlb	0	; () banked
  3928  001ECA  0100               	movlb	0	; () banked
  3929  001ECC  25B3               	addwf	init_queue@qptr& (0+255),w,b
  3930  001ECE  6ED9               	movwf	fsr2l,c
  3931  001ED0  50F4               	movf	prodh,w,c
  3932  001ED2  0100               	movlb	0	; () banked
  3933  001ED4  0100               	movlb	0	; () banked
  3934  001ED6  21B4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3935  001ED8  6EDA               	movwf	fsr2h,c
  3936  001EDA  0E00               	movlw	0
  3937  001EDC  6EDF               	movwf	indf2,c
  3938                           
  3939                           ; BSR set to: 0
  3940  001EDE  0100               	movlb	0	; () banked
  3941  001EE0  0100               	movlb	0	; () banked
  3942  001EE2  2BB6               	incf	init_queue@i& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 0
  3945  001EE4  0E03               	movlw	3
  3946  001EE6  0100               	movlb	0	; () banked
  3947  001EE8  0100               	movlb	0	; () banked
  3948  001EEA  65B6               	cpfsgt	init_queue@i& (0+255),b
  3949  001EEC  D7E8               	goto	l4052
  3950  001EEE  0012               	return	
  3951  001EF0                     __end_of_init_queue:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           postinc0	equ	0xFEE
  3960                           wreg	equ	0xFE8
  3961                           indf1	equ	0xFE7
  3962                           postdec1	equ	0xFE5
  3963                           fsr1h	equ	0xFE2
  3964                           fsr1l	equ	0xFE1
  3965                           indf2	equ	0xFDF
  3966                           postinc2	equ	0xFDE
  3967                           postdec2	equ	0xFDD
  3968                           fsr2h	equ	0xFDA
  3969                           fsr2l	equ	0xFD9
  3970                           status	equ	0xFD8
  3971                           
  3972 ;; *************** function _init_i2c *****************
  3973 ;; Defined at:
  3974 ;;		line 382 in file "source/my_i2c.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  ic              2   51[BANK0 ] PTR struct __i2c_comm
  3977 ;;		 -> main@ic(53), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;		None               void
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3989 ;;      Params:         0       2       0       0       0
  3990 ;;      Locals:         0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0       2       0       0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:   12
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text15
  4004  001AA0                     __ptext15:
  4005                           	opt stack 0
  4006  001AA0                     _init_i2c:
  4007                           	opt stack 18
  4008                           
  4009                           ;my_i2c.c: 383: ic_ptr = ic;
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;incstack = 0
  4013  001AA0  0100               	movlb	0	; () banked
  4014  001AA2  0100               	movlb	0	; () banked
  4015  001AA4  C0B4  F0C9         	movff	init_i2c@ic+1,_ic_ptr+1
  4016  001AA8  0100               	movlb	0	; () banked
  4017  001AAA  0100               	movlb	0	; () banked
  4018  001AAC  C0B3  F0C8         	movff	init_i2c@ic,_ic_ptr
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;my_i2c.c: 384: ic_ptr->buffer[0] = 0;
  4022  001AB0  C0C8  FFD9         	movff	_ic_ptr,fsr2l
  4023  001AB4  C0C9  FFDA         	movff	_ic_ptr+1,fsr2h
  4024  001AB8  0E00               	movlw	0
  4025  001ABA  6EDF               	movwf	indf2,c
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;my_i2c.c: 385: ic_ptr->buffer[1] = 0;
  4029  001ABC  0100               	movlb	0	; () banked
  4030  001ABE  EE20 F001          	lfsr	2,1
  4031  001AC2  0100               	movlb	0	; () banked
  4032  001AC4  51C8               	movf	_ic_ptr& (0+255),w,b
  4033  001AC6  26D9               	addwf	fsr2l,f,c
  4034  001AC8  0100               	movlb	0	; () banked
  4035  001ACA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4036  001ACC  22DA               	addwfc	fsr2h,f,c
  4037  001ACE  0E00               	movlw	0
  4038  001AD0  6EDF               	movwf	indf2,c
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;my_i2c.c: 386: ic_ptr->buffer[2] = 0;
  4042  001AD2  0100               	movlb	0	; () banked
  4043  001AD4  EE20 F002          	lfsr	2,2
  4044  001AD8  0100               	movlb	0	; () banked
  4045  001ADA  51C8               	movf	_ic_ptr& (0+255),w,b
  4046  001ADC  26D9               	addwf	fsr2l,f,c
  4047  001ADE  0100               	movlb	0	; () banked
  4048  001AE0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4049  001AE2  22DA               	addwfc	fsr2h,f,c
  4050  001AE4  0E00               	movlw	0
  4051  001AE6  6EDF               	movwf	indf2,c
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;my_i2c.c: 387: ic_ptr->buflen = 0;
  4055  001AE8  0100               	movlb	0	; () banked
  4056  001AEA  EE20 F00A          	lfsr	2,10
  4057  001AEE  0100               	movlb	0	; () banked
  4058  001AF0  51C8               	movf	_ic_ptr& (0+255),w,b
  4059  001AF2  26D9               	addwf	fsr2l,f,c
  4060  001AF4  0100               	movlb	0	; () banked
  4061  001AF6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4062  001AF8  22DA               	addwfc	fsr2h,f,c
  4063  001AFA  0E00               	movlw	0
  4064  001AFC  6EDF               	movwf	indf2,c
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;my_i2c.c: 388: ic_ptr->event_count = 0;
  4068  001AFE  0100               	movlb	0	; () banked
  4069  001B00  EE20 F00C          	lfsr	2,12
  4070  001B04  0100               	movlb	0	; () banked
  4071  001B06  51C8               	movf	_ic_ptr& (0+255),w,b
  4072  001B08  26D9               	addwf	fsr2l,f,c
  4073  001B0A  0100               	movlb	0	; () banked
  4074  001B0C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4075  001B0E  22DA               	addwfc	fsr2h,f,c
  4076  001B10  0E00               	movlw	0
  4077  001B12  6EDF               	movwf	indf2,c
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;my_i2c.c: 389: ic_ptr->status = 0x5;
  4081  001B14  0100               	movlb	0	; () banked
  4082  001B16  EE20 F00D          	lfsr	2,13
  4083  001B1A  0100               	movlb	0	; () banked
  4084  001B1C  51C8               	movf	_ic_ptr& (0+255),w,b
  4085  001B1E  26D9               	addwf	fsr2l,f,c
  4086  001B20  0100               	movlb	0	; () banked
  4087  001B22  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4088  001B24  22DA               	addwfc	fsr2h,f,c
  4089  001B26  0E05               	movlw	5
  4090  001B28  6EDF               	movwf	indf2,c
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;my_i2c.c: 390: ic_ptr->error_count = 0;
  4094  001B2A  0100               	movlb	0	; () banked
  4095  001B2C  EE20 F00F          	lfsr	2,15
  4096  001B30  0100               	movlb	0	; () banked
  4097  001B32  51C8               	movf	_ic_ptr& (0+255),w,b
  4098  001B34  26D9               	addwf	fsr2l,f,c
  4099  001B36  0100               	movlb	0	; () banked
  4100  001B38  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4101  001B3A  22DA               	addwfc	fsr2h,f,c
  4102  001B3C  0E00               	movlw	0
  4103  001B3E  6EDF               	movwf	indf2,c
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;my_i2c.c: 391: ic_ptr->sendBufInd = 0;
  4107  001B40  0100               	movlb	0	; () banked
  4108  001B42  EE20 F028          	lfsr	2,40
  4109  001B46  0100               	movlb	0	; () banked
  4110  001B48  51C8               	movf	_ic_ptr& (0+255),w,b
  4111  001B4A  26D9               	addwf	fsr2l,f,c
  4112  001B4C  0100               	movlb	0	; () banked
  4113  001B4E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4114  001B50  22DA               	addwfc	fsr2h,f,c
  4115  001B52  0E00               	movlw	0
  4116  001B54  6EDF               	movwf	indf2,c
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;my_i2c.c: 392: ic_ptr->sendBufLen = 0;
  4120  001B56  0100               	movlb	0	; () banked
  4121  001B58  EE20 F027          	lfsr	2,39
  4122  001B5C  0100               	movlb	0	; () banked
  4123  001B5E  51C8               	movf	_ic_ptr& (0+255),w,b
  4124  001B60  26D9               	addwf	fsr2l,f,c
  4125  001B62  0100               	movlb	0	; () banked
  4126  001B64  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  4127  001B66  22DA               	addwfc	fsr2h,f,c
  4128  001B68  0E00               	movlw	0
  4129  001B6A  6EDF               	movwf	indf2,c
  4130                           
  4131                           ; BSR set to: 0
  4132  001B6C  0012               	return	
  4133  001B6E                     __end_of_init_i2c:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           indf1	equ	0xFE7
  4144                           postdec1	equ	0xFE5
  4145                           fsr1h	equ	0xFE2
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _i2c_configure_slave *****************
  4155 ;; Defined at:
  4156 ;;		line 398 in file "source/my_i2c.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  addr            1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  addr            1   52[BANK0 ] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4170 ;;      Params:         0       0       0       0       0
  4171 ;;      Locals:         0       1       0       0       0
  4172 ;;      Temps:          0       1       0       0       0
  4173 ;;      Totals:         0       2       0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:   12
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text16
  4185  002426                     __ptext16:
  4186                           	opt stack 0
  4187  002426                     _i2c_configure_slave:
  4188                           	opt stack 18
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;incstack = 0
  4192                           ;i2c_configure_slave@addr stored from wreg
  4193  002426  CFE8 F0B4          	movff	wreg,i2c_configure_slave@addr
  4194                           
  4195                           ;my_i2c.c: 410: TRISCbits.TRISC3 = 1;
  4196  00242A  8694               	bsf	3988,3,c	;volatile
  4197                           
  4198                           ;my_i2c.c: 411: TRISCbits.TRISC4 = 1;
  4199  00242C  8894               	bsf	3988,4,c	;volatile
  4200                           
  4201                           ;my_i2c.c: 416: SSPADD = addr;
  4202  00242E  C0B4  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4203                           
  4204                           ;my_i2c.c: 418: SSPSTAT = 0x0;
  4205  002432  0E00               	movlw	0
  4206  002434  6EC7               	movwf	4039,c	;volatile
  4207                           
  4208                           ;my_i2c.c: 419: SSPCON1 = 0x0;
  4209  002436  0E00               	movlw	0
  4210  002438  6EC6               	movwf	4038,c	;volatile
  4211                           
  4212                           ;my_i2c.c: 420: SSPCON2 = 0x0;
  4213  00243A  0E00               	movlw	0
  4214  00243C  6EC5               	movwf	4037,c	;volatile
  4215                           
  4216                           ;my_i2c.c: 421: SSPCON1 |= 0x0E;
  4217  00243E  0E0E               	movlw	14
  4218  002440  12C6               	iorwf	4038,f,c	;volatile
  4219                           
  4220                           ;my_i2c.c: 422: SSPSTAT |= 0b10000000;
  4221  002442  8EC7               	bsf	4039,7,c	;volatile
  4222                           
  4223                           ;my_i2c.c: 425: TRISCbits.TRISC3 = 1;
  4224  002444  8694               	bsf	3988,3,c	;volatile
  4225                           
  4226                           ;my_i2c.c: 426: TRISCbits.TRISC4 = 1;
  4227  002446  8894               	bsf	3988,4,c	;volatile
  4228                           
  4229                           ;my_i2c.c: 445: i2c_mode = 2;
  4230  002448  0100               	movlb	0	; () banked
  4231  00244A  6FB3               	movwf	??_i2c_configure_slave& (0+255),b
  4232  00244C  0E02               	movlw	2
  4233  00244E  0100               	movlb	0	; () banked
  4234  002450  0100               	movlb	0	; () banked
  4235  002452  6FCC               	movwf	_i2c_mode& (0+255),b
  4236  002454  0100               	movlb	0	; () banked
  4237  002456  51B3               	movf	??_i2c_configure_slave& (0+255),w,b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;my_i2c.c: 447: SSPCON2bits.SEN = 1;
  4241  002458  80C5               	bsf	4037,0,c	;volatile
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;my_i2c.c: 448: SSPCON1 |= 0b00100000;
  4245  00245A  8AC6               	bsf	4038,5,c	;volatile
  4246                           
  4247                           ; BSR set to: 0
  4248  00245C  0012               	return	
  4249  00245E                     __end_of_i2c_configure_slave:
  4250                           	opt stack 0
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           prodh	equ	0xFF4
  4256                           prodl	equ	0xFF3
  4257                           postinc0	equ	0xFEE
  4258                           wreg	equ	0xFE8
  4259                           indf1	equ	0xFE7
  4260                           postdec1	equ	0xFE5
  4261                           fsr1h	equ	0xFE2
  4262                           fsr1l	equ	0xFE1
  4263                           indf2	equ	0xFDF
  4264                           postinc2	equ	0xFDE
  4265                           postdec2	equ	0xFDD
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _enable_interrupts *****************
  4271 ;; Defined at:
  4272 ;;		line 14 in file "source/interrupts.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		None
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4286 ;;      Params:         0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:   12
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_main
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text17
  4301  002710                     __ptext17:
  4302                           	opt stack 0
  4303  002710                     _enable_interrupts:
  4304                           	opt stack 18
  4305                           
  4306                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;incstack = 0
  4310  002710  8ED0               	bsf	4048,7,c	;volatile
  4311                           
  4312                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  4313  002712  8EF2               	bsf	intcon,7,c	;volatile
  4314                           
  4315                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  4316  002714  8CF2               	bsf	intcon,6,c	;volatile
  4317  002716  0012               	return	
  4318  002718                     __end_of_enable_interrupts:
  4319                           	opt stack 0
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           prodh	equ	0xFF4
  4325                           prodl	equ	0xFF3
  4326                           intcon	equ	0xFF2
  4327                           postinc0	equ	0xFEE
  4328                           wreg	equ	0xFE8
  4329                           indf1	equ	0xFE7
  4330                           postdec1	equ	0xFE5
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           indf2	equ	0xFDF
  4334                           postinc2	equ	0xFDE
  4335                           postdec2	equ	0xFDD
  4336                           fsr2h	equ	0xFDA
  4337                           fsr2l	equ	0xFD9
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function _block_on_To_msgqueues *****************
  4341 ;; Defined at:
  4342 ;;		line 258 in file "source/messages.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;		None               void
  4349 ;; Registers used:
  4350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4356 ;;      Params:         0       0       0       0       0
  4357 ;;      Locals:         0       0       0       0       0
  4358 ;;      Temps:          0       1       0       0       0
  4359 ;;      Totals:         0       1       0       0       0
  4360 ;;Total ram usage:        1 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:   15
  4363 ;; This function calls:
  4364 ;;		_Delay1KTCYx
  4365 ;;		_check_msg
  4366 ;;		_in_main
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text18
  4373  001DF8                     __ptext18:
  4374                           	opt stack 0
  4375  001DF8                     _block_on_To_msgqueues:
  4376                           	opt stack 15
  4377                           
  4378                           ;messages.c: 259: if (!in_main()) {
  4379                           
  4380                           ;incstack = 0
  4381  001DF8  EC8F  F011         	call	_in_main	;wreg free
  4382  001DFC  0100               	movlb	0	; () banked
  4383  001DFE  0100               	movlb	0	; () banked
  4384  001E00  51B8               	movf	(?_in_main+1)& (0+255),w,b
  4385  001E02  0100               	movlb	0	; () banked
  4386  001E04  11B7               	iorwf	?_in_main& (0+255),w,b
  4387  001E06  B4D8               	btfsc	status,2,c
  4388  001E08  0012               	return	
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;messages.c: 261: }
  4392                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4393                           
  4394                           ; BSR set to: 0
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;messages.c: 260: return;
  4398  001E0A  0100               	movlb	0	; () banked
  4399  001E0C  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  4400  001E0E  0E01               	movlw	1
  4401  001E10  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  4402  001E12  0100               	movlb	0	; () banked
  4403  001E14  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4404  001E16                     l3910:
  4405                           
  4406                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4407  001E16  0101               	movlb	1	; () banked
  4408  001E18  0E01               	movlw	high _ToMainHigh_MQ
  4409  001E1A  0100               	movlb	0	; () banked
  4410  001E1C  0100               	movlb	0	; () banked
  4411  001E1E  6FB4               	movwf	(check_msg@qptr+1)& (0+255),b
  4412  001E20  0101               	movlb	1	; () banked
  4413  001E22  0E36               	movlw	low _ToMainHigh_MQ
  4414  001E24  0100               	movlb	0	; () banked
  4415  001E26  0100               	movlb	0	; () banked
  4416  001E28  6FB3               	movwf	check_msg@qptr& (0+255),b
  4417  001E2A  EC4B  F012         	call	_check_msg	;wreg free
  4418  001E2E  0900               	iorlw	0
  4419  001E30  B4D8               	btfsc	status,2,c
  4420  001E32  D007               	goto	l3916
  4421                           
  4422                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4423  001E34  0100               	movlb	0	; () banked
  4424  001E36  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  4425  001E38  0E00               	movlw	0
  4426  001E3A  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  4427  001E3C  0100               	movlb	0	; () banked
  4428  001E3E  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4429  001E40  0012               	return	
  4430  001E42                     l3916:
  4431                           
  4432                           ;messages.c: 271: }
  4433                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4434  001E42  0101               	movlb	1	; () banked
  4435  001E44  0E01               	movlw	high _ToMainLow_MQ
  4436  001E46  0100               	movlb	0	; () banked
  4437  001E48  0100               	movlb	0	; () banked
  4438  001E4A  6FB4               	movwf	(check_msg@qptr+1)& (0+255),b
  4439  001E4C  0101               	movlb	1	; () banked
  4440  001E4E  0E6C               	movlw	low _ToMainLow_MQ
  4441  001E50  0100               	movlb	0	; () banked
  4442  001E52  0100               	movlb	0	; () banked
  4443  001E54  6FB3               	movwf	check_msg@qptr& (0+255),b
  4444  001E56  EC4B  F012         	call	_check_msg	;wreg free
  4445  001E5A  0900               	iorlw	0
  4446  001E5C  B4D8               	btfsc	status,2,c
  4447  001E5E  D007               	goto	l3922
  4448                           
  4449                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4450  001E60  0100               	movlb	0	; () banked
  4451  001E62  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  4452  001E64  0E00               	movlw	0
  4453  001E66  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  4454  001E68  0100               	movlb	0	; () banked
  4455  001E6A  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4456  001E6C  0012               	return	
  4457  001E6E                     l3922:
  4458                           
  4459                           ;messages.c: 278: }
  4460                           ;messages.c: 279: Delay1KTCYx(10);
  4461  001E6E  0E0A               	movlw	10
  4462  001E70  EC39  F013         	call	_Delay1KTCYx
  4463  001E74  D7D0               	goto	l3910
  4464  001E76                     __end_of_block_on_To_msgqueues:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           tblptrh	equ	0xFF7
  4468                           tblptrl	equ	0xFF6
  4469                           tablat	equ	0xFF5
  4470                           prodh	equ	0xFF4
  4471                           prodl	equ	0xFF3
  4472                           intcon	equ	0xFF2
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           indf1	equ	0xFE7
  4476                           postdec1	equ	0xFE5
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           indf2	equ	0xFDF
  4480                           postinc2	equ	0xFDE
  4481                           postdec2	equ	0xFDD
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _in_main *****************
  4487 ;; Defined at:
  4488 ;;		line 40 in file "source/interrupts.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  2   55[BANK0 ] int 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4502 ;;      Params:         0       2       0       0       0
  4503 ;;      Locals:         0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0
  4505 ;;      Totals:         0       2       0       0       0
  4506 ;;Total ram usage:        2 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:   14
  4509 ;; This function calls:
  4510 ;;		_in_high_int
  4511 ;;		_in_low_int
  4512 ;; This function is called by:
  4513 ;;		_block_on_To_msgqueues
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text19
  4518  00231E                     __ptext19:
  4519                           	opt stack 0
  4520  00231E                     _in_main:
  4521                           	opt stack 15
  4522                           
  4523                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  4524                           
  4525                           ;incstack = 0
  4526  00231E  EC49  F011         	call	_in_low_int	;wreg free
  4527  002322  0100               	movlb	0	; () banked
  4528  002324  0100               	movlb	0	; () banked
  4529  002326  51B6               	movf	(?_in_low_int+1)& (0+255),w,b
  4530  002328  0100               	movlb	0	; () banked
  4531  00232A  11B5               	iorwf	?_in_low_int& (0+255),w,b
  4532  00232C  A4D8               	btfss	status,2,c
  4533  00232E  D011               	goto	l3636
  4534                           
  4535                           ; BSR set to: 0
  4536  002330  EC57  F013         	call	_in_high_int	;wreg free
  4537  002334  0100               	movlb	0	; () banked
  4538  002336  0100               	movlb	0	; () banked
  4539  002338  51B4               	movf	(?_in_high_int+1)& (0+255),w,b
  4540  00233A  0100               	movlb	0	; () banked
  4541  00233C  11B3               	iorwf	?_in_high_int& (0+255),w,b
  4542  00233E  A4D8               	btfss	status,2,c
  4543  002340  D008               	goto	l3636
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;interrupts.c: 42: return (1);
  4547  002342  0E00               	movlw	0
  4548  002344  0100               	movlb	0	; () banked
  4549  002346  0100               	movlb	0	; () banked
  4550  002348  6FB8               	movwf	(?_in_main+1)& (0+255),b
  4551  00234A  0E01               	movlw	1
  4552  00234C  0100               	movlb	0	; () banked
  4553  00234E  6FB7               	movwf	?_in_main& (0+255),b
  4554  002350  0012               	return	
  4555  002352                     l3636:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;interrupts.c: 44: return (0);
  4559  002352  0E00               	movlw	0
  4560  002354  0100               	movlb	0	; () banked
  4561  002356  0100               	movlb	0	; () banked
  4562  002358  6FB8               	movwf	(?_in_main+1)& (0+255),b
  4563  00235A  0E00               	movlw	0
  4564  00235C  0100               	movlb	0	; () banked
  4565  00235E  6FB7               	movwf	?_in_main& (0+255),b
  4566  002360  0012               	return	
  4567  002362                     __end_of_in_main:
  4568                           	opt stack 0
  4569                           tblptru	equ	0xFF8
  4570                           tblptrh	equ	0xFF7
  4571                           tblptrl	equ	0xFF6
  4572                           tablat	equ	0xFF5
  4573                           prodh	equ	0xFF4
  4574                           prodl	equ	0xFF3
  4575                           intcon	equ	0xFF2
  4576                           postinc0	equ	0xFEE
  4577                           wreg	equ	0xFE8
  4578                           indf1	equ	0xFE7
  4579                           postdec1	equ	0xFE5
  4580                           fsr1h	equ	0xFE2
  4581                           fsr1l	equ	0xFE1
  4582                           indf2	equ	0xFDF
  4583                           postinc2	equ	0xFDE
  4584                           postdec2	equ	0xFDD
  4585                           fsr2h	equ	0xFDA
  4586                           fsr2l	equ	0xFD9
  4587                           status	equ	0xFD8
  4588                           
  4589 ;; *************** function _in_low_int *****************
  4590 ;; Defined at:
  4591 ;;		line 30 in file "source/interrupts.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2   53[BANK0 ] int 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4605 ;;      Params:         0       2       0       0       0
  4606 ;;      Locals:         0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0
  4608 ;;      Totals:         0       2       0       0       0
  4609 ;;Total ram usage:        2 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:   13
  4612 ;; This function calls:
  4613 ;;		_in_high_int
  4614 ;; This function is called by:
  4615 ;;		_in_main
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text20
  4620  002292                     __ptext20:
  4621                           	opt stack 0
  4622  002292                     _in_low_int:
  4623                           	opt stack 15
  4624                           
  4625                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;incstack = 0
  4629  002292  ACF2               	btfss	intcon,6,c	;volatile
  4630  002294  D008               	goto	l3614
  4631                           
  4632                           ;interrupts.c: 32: return (0);
  4633  002296  0E00               	movlw	0
  4634  002298  0100               	movlb	0	; () banked
  4635  00229A  0100               	movlb	0	; () banked
  4636  00229C  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  4637  00229E  0E00               	movlw	0
  4638  0022A0  0100               	movlb	0	; () banked
  4639  0022A2  6FB5               	movwf	?_in_low_int& (0+255),b
  4640  0022A4  0012               	return	
  4641  0022A6                     l3614:
  4642  0022A6  EC57  F013         	call	_in_high_int	;wreg free
  4643  0022AA  0100               	movlb	0	; () banked
  4644  0022AC  0100               	movlb	0	; () banked
  4645  0022AE  51B4               	movf	(?_in_high_int+1)& (0+255),w,b
  4646  0022B0  0100               	movlb	0	; () banked
  4647  0022B2  11B3               	iorwf	?_in_high_int& (0+255),w,b
  4648  0022B4  B4D8               	btfsc	status,2,c
  4649  0022B6  D008               	goto	l3622
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;interrupts.c: 34: return (0);
  4653  0022B8  0E00               	movlw	0
  4654  0022BA  0100               	movlb	0	; () banked
  4655  0022BC  0100               	movlb	0	; () banked
  4656  0022BE  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  4657  0022C0  0E00               	movlw	0
  4658  0022C2  0100               	movlb	0	; () banked
  4659  0022C4  6FB5               	movwf	?_in_low_int& (0+255),b
  4660  0022C6  0012               	return	
  4661  0022C8                     l3622:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;interrupts.c: 36: return (1);
  4665  0022C8  0E00               	movlw	0
  4666  0022CA  0100               	movlb	0	; () banked
  4667  0022CC  0100               	movlb	0	; () banked
  4668  0022CE  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  4669  0022D0  0E01               	movlw	1
  4670  0022D2  0100               	movlb	0	; () banked
  4671  0022D4  6FB5               	movwf	?_in_low_int& (0+255),b
  4672  0022D6  0012               	return	
  4673  0022D8                     __end_of_in_low_int:
  4674                           	opt stack 0
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           prodh	equ	0xFF4
  4680                           prodl	equ	0xFF3
  4681                           intcon	equ	0xFF2
  4682                           postinc0	equ	0xFEE
  4683                           wreg	equ	0xFE8
  4684                           indf1	equ	0xFE7
  4685                           postdec1	equ	0xFE5
  4686                           fsr1h	equ	0xFE2
  4687                           fsr1l	equ	0xFE1
  4688                           indf2	equ	0xFDF
  4689                           postinc2	equ	0xFDE
  4690                           postdec2	equ	0xFDD
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8
  4694                           
  4695 ;; *************** function _in_high_int *****************
  4696 ;; Defined at:
  4697 ;;		line 22 in file "source/interrupts.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2   51[BANK0 ] int 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4711 ;;      Params:         0       2       0       0       0
  4712 ;;      Locals:         0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0
  4714 ;;      Totals:         0       2       0       0       0
  4715 ;;Total ram usage:        2 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:   12
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_in_low_int
  4722 ;;		_in_main
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text21
  4727  0026AE                     __ptext21:
  4728                           	opt stack 0
  4729  0026AE                     _in_high_int:
  4730                           	opt stack 15
  4731                           
  4732                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;incstack = 0
  4736  0026AE  0E00               	movlw	0
  4737  0026B0  AEF2               	btfss	intcon,7,c	;volatile
  4738  0026B2  0E01               	movlw	1
  4739  0026B4  0100               	movlb	0	; () banked
  4740  0026B6  0100               	movlb	0	; () banked
  4741  0026B8  6FB3               	movwf	?_in_high_int& (0+255),b
  4742  0026BA  0100               	movlb	0	; () banked
  4743  0026BC  6BB4               	clrf	(?_in_high_int+1)& (0+255),b
  4744  0026BE  0012               	return	
  4745  0026C0                     __end_of_in_high_int:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           prodh	equ	0xFF4
  4752                           prodl	equ	0xFF3
  4753                           intcon	equ	0xFF2
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           indf1	equ	0xFE7
  4757                           postdec1	equ	0xFE5
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           postinc2	equ	0xFDE
  4762                           postdec2	equ	0xFDD
  4763                           fsr2h	equ	0xFDA
  4764                           fsr2l	equ	0xFD9
  4765                           status	equ	0xFD8
  4766                           
  4767 ;; *************** function _check_msg *****************
  4768 ;; Defined at:
  4769 ;;		line 222 in file "source/messages.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  qptr            2   51[BANK0 ] PTR struct __msg_queue
  4772 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      unsigned char 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4784 ;;      Params:         0       2       0       0       0
  4785 ;;      Locals:         0       0       0       0       0
  4786 ;;      Temps:          0       1       0       0       0
  4787 ;;      Totals:         0       3       0       0       0
  4788 ;;Total ram usage:        3 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:   12
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_block_on_To_msgqueues
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text22
  4799  002496                     __ptext22:
  4800                           	opt stack 0
  4801  002496                     _check_msg:
  4802                           	opt stack 17
  4803                           
  4804                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;incstack = 0
  4808  002496  0100               	movlb	0	; () banked
  4809  002498  EE20 F035          	lfsr	2,53
  4810  00249C  0100               	movlb	0	; () banked
  4811  00249E  51B3               	movf	check_msg@qptr& (0+255),w,b
  4812  0024A0  26D9               	addwf	fsr2l,f,c
  4813  0024A2  0100               	movlb	0	; () banked
  4814  0024A4  51B4               	movf	(check_msg@qptr+1)& (0+255),w,b
  4815  0024A6  22DA               	addwfc	fsr2h,f,c
  4816  0024A8  50DF               	movf	indf2,w,c
  4817  0024AA  0100               	movlb	0	; () banked
  4818  0024AC  6FB5               	movwf	??_check_msg& (0+255),b
  4819  0024AE  0100               	movlb	0	; () banked
  4820  0024B0  51B5               	movf	??_check_msg& (0+255),w,b
  4821  0024B2  0D0D               	mullw	13
  4822  0024B4  50F3               	movf	prodl,w,c
  4823  0024B6  0100               	movlb	0	; () banked
  4824  0024B8  0100               	movlb	0	; () banked
  4825  0024BA  25B3               	addwf	check_msg@qptr& (0+255),w,b
  4826  0024BC  6ED9               	movwf	fsr2l,c
  4827  0024BE  50F4               	movf	prodh,w,c
  4828  0024C0  0100               	movlb	0	; () banked
  4829  0024C2  0100               	movlb	0	; () banked
  4830  0024C4  21B4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4831  0024C6  6EDA               	movwf	fsr2h,c
  4832  0024C8  50DF               	movf	indf2,w,c
  4833  0024CA  0012               	return	
  4834  0024CC                     __end_of_check_msg:
  4835                           	opt stack 0
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodh	equ	0xFF4
  4841                           prodl	equ	0xFF3
  4842                           intcon	equ	0xFF2
  4843                           postinc0	equ	0xFEE
  4844                           wreg	equ	0xFE8
  4845                           indf1	equ	0xFE7
  4846                           postdec1	equ	0xFE5
  4847                           fsr1h	equ	0xFE2
  4848                           fsr1l	equ	0xFE1
  4849                           indf2	equ	0xFDF
  4850                           postinc2	equ	0xFDE
  4851                           postdec2	equ	0xFDD
  4852                           fsr2h	equ	0xFDA
  4853                           fsr2l	equ	0xFD9
  4854                           status	equ	0xFD8
  4855                           
  4856 ;; *************** function _Delay1KTCYx *****************
  4857 ;; Defined at:
  4858 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  unit            1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  unit            1   51[BANK0 ] unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;		None               void
  4865 ;; Registers used:
  4866 ;;		wreg
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4872 ;;      Params:         0       0       0       0       0
  4873 ;;      Locals:         0       1       0       0       0
  4874 ;;      Temps:          0       0       0       0       0
  4875 ;;      Totals:         0       1       0       0       0
  4876 ;;Total ram usage:        1 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:   12
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_block_on_To_msgqueues
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text23
  4887  002672                     __ptext23:
  4888                           	opt stack 0
  4889  002672                     _Delay1KTCYx:
  4890                           	opt stack 17
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;incstack = 0
  4894                           ;Delay1KTCYx@unit stored from wreg
  4895  002672  CFE8 F0B3          	movff	wreg,Delay1KTCYx@unit
  4896  002676                     l898:
  4897  002676  0EFA               	movlw	250
  4898  002678                     u3277:
  4899  002678  F000               	nop	
  4900  00267A  2EE8               	decfsz	wreg,f,c
  4901  00267C  D7FD               	goto	u3277
  4902  00267E  0100               	movlb	0	; () banked
  4903  002680  0100               	movlb	0	; () banked
  4904  002682  2FB3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4905  002684  D7F8               	goto	l898
  4906  002686  0012               	return	
  4907  002688                     __end_of_Delay1KTCYx:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           indf1	equ	0xFE7
  4919                           postdec1	equ	0xFE5
  4920                           fsr1h	equ	0xFE2
  4921                           fsr1l	equ	0xFE1
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _ToMainLow_sendmsg *****************
  4930 ;; Defined at:
  4931 ;;		line 103 in file "source/messages.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  length          1    wreg     unsigned char 
  4934 ;;  msgtype         1   68[BANK0 ] unsigned char 
  4935 ;;  data            2   69[BANK0 ] PTR void 
  4936 ;;		 -> buffer_temp(4), NULL(0), main@msgbuffer(11), 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  length          1   71[BANK0 ] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      char 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4948 ;;      Params:         0       3       0       0       0
  4949 ;;      Locals:         0       1       0       0       0
  4950 ;;      Temps:          0       0       0       0       0
  4951 ;;      Totals:         0       4       0       0       0
  4952 ;;Total ram usage:        4 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:   14
  4955 ;; This function calls:
  4956 ;;		_send_msg
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text24
  4963  0024CC                     __ptext24:
  4964                           	opt stack 0
  4965  0024CC                     _ToMainLow_sendmsg:
  4966                           	opt stack 16
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;incstack = 0
  4970                           ;ToMainLow_sendmsg@length stored from wreg
  4971  0024CC  CFE8 F0C7          	movff	wreg,ToMainLow_sendmsg@length
  4972                           
  4973                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4974                           ;	Return value of _ToMainLow_sendmsg is never used
  4975  0024D0  0101               	movlb	1	; () banked
  4976  0024D2  0E01               	movlw	high _ToMainLow_MQ
  4977  0024D4  0100               	movlb	0	; () banked
  4978  0024D6  0100               	movlb	0	; () banked
  4979  0024D8  6FBE               	movwf	(send_msg@qptr+1)& (0+255),b
  4980  0024DA  0101               	movlb	1	; () banked
  4981  0024DC  0E6C               	movlw	low _ToMainLow_MQ
  4982  0024DE  0100               	movlb	0	; () banked
  4983  0024E0  0100               	movlb	0	; () banked
  4984  0024E2  6FBD               	movwf	send_msg@qptr& (0+255),b
  4985  0024E4  C0C7  F0BF         	movff	ToMainLow_sendmsg@length,send_msg@length
  4986  0024E8  C0C4  F0C0         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  4987  0024EC  0100               	movlb	0	; () banked
  4988  0024EE  0100               	movlb	0	; () banked
  4989  0024F0  C0C6  F0C2         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  4990  0024F4  0100               	movlb	0	; () banked
  4991  0024F6  0100               	movlb	0	; () banked
  4992  0024F8  C0C5  F0C1         	movff	ToMainLow_sendmsg@data,send_msg@data
  4993  0024FC  EC69  F00B         	call	_send_msg	;wreg free
  4994  002500  0012               	return	
  4995  002502                     __end_of_ToMainLow_sendmsg:
  4996                           	opt stack 0
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           postinc0	equ	0xFEE
  5005                           wreg	equ	0xFE8
  5006                           indf1	equ	0xFE7
  5007                           postdec1	equ	0xFE5
  5008                           fsr1h	equ	0xFE2
  5009                           fsr1l	equ	0xFE1
  5010                           indf2	equ	0xFDF
  5011                           postinc2	equ	0xFDE
  5012                           postdec2	equ	0xFDD
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function _send_msg *****************
  5018 ;; Defined at:
  5019 ;;		line 24 in file "source/messages.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  qptr            2   61[BANK0 ] PTR struct __msg_queue
  5022 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5023 ;;  length          1   63[BANK0 ] unsigned char 
  5024 ;;  msgtype         1   64[BANK0 ] unsigned char 
  5025 ;;  data            2   65[BANK0 ] PTR void 
  5026 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  5027 ;;		 -> main@ic(53), 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  qmsg            2    3[BANK1 ] PTR struct __msg
  5030 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5031 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5032 ;;  tlength         2    0[BANK1 ] unsigned int 
  5033 ;;  slot            1    2[BANK1 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      char 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5043 ;;      Params:         0       6       0       0       0
  5044 ;;      Locals:         0       0       5       0       0
  5045 ;;      Temps:          0       1       0       0       0
  5046 ;;      Totals:         0       7       5       0       0
  5047 ;;Total ram usage:       12 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:   13
  5050 ;; This function calls:
  5051 ;;		_memcpy
  5052 ;; This function is called by:
  5053 ;;		_ToMainLow_sendmsg
  5054 ;;		_FromMainLow_sendmsg
  5055 ;;		_FromMainHigh_sendmsg
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text25
  5060  0016D2                     __ptext25:
  5061                           	opt stack 0
  5062  0016D2                     _send_msg:
  5063                           	opt stack 16
  5064                           
  5065                           ;messages.c: 25: unsigned char slot;
  5066                           ;messages.c: 27: msg *qmsg;
  5067                           ;messages.c: 28: size_t tlength = length;
  5068                           
  5069                           ;incstack = 0
  5070  0016D2  0100               	movlb	0	; () banked
  5071  0016D4  0101               	movlb	1	; () banked
  5072  0016D6  C0BF  F1A2         	movff	send_msg@length,send_msg@tlength
  5073  0016DA  0101               	movlb	1	; () banked
  5074  0016DC  0101               	movlb	1	; () banked
  5075  0016DE  6BA3               	clrf	(send_msg@tlength+1)& (0+255),b
  5076                           
  5077                           ; BSR set to: 1
  5078                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5079  0016E0  0100               	movlb	0	; () banked
  5080  0016E2  EE20 F034          	lfsr	2,52
  5081  0016E6  0100               	movlb	0	; () banked
  5082  0016E8  51BD               	movf	send_msg@qptr& (0+255),w,b
  5083  0016EA  26D9               	addwf	fsr2l,f,c
  5084  0016EC  0100               	movlb	0	; () banked
  5085  0016EE  51BE               	movf	(send_msg@qptr+1)& (0+255),w,b
  5086  0016F0  22DA               	addwfc	fsr2h,f,c
  5087  0016F2  50DF               	movf	indf2,w,c
  5088  0016F4  0101               	movlb	1	; () banked
  5089  0016F6  0101               	movlb	1	; () banked
  5090  0016F8  6FA4               	movwf	send_msg@slot& (0+255),b
  5091                           
  5092                           ; BSR set to: 1
  5093                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5094  0016FA  0101               	movlb	1	; () banked
  5095  0016FC  0101               	movlb	1	; () banked
  5096  0016FE  51A4               	movf	send_msg@slot& (0+255),w,b
  5097  001700  0D0D               	mullw	13
  5098  001702  50F3               	movf	prodl,w,c
  5099  001704  0100               	movlb	0	; () banked
  5100  001706  0100               	movlb	0	; () banked
  5101  001708  25BD               	addwf	send_msg@qptr& (0+255),w,b
  5102  00170A  0101               	movlb	1	; () banked
  5103  00170C  0101               	movlb	1	; () banked
  5104  00170E  6FA5               	movwf	send_msg@qmsg& (0+255),b
  5105  001710  50F4               	movf	prodh,w,c
  5106  001712  0100               	movlb	0	; () banked
  5107  001714  0100               	movlb	0	; () banked
  5108  001716  21BE               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  5109  001718  0101               	movlb	1	; () banked
  5110  00171A  6FA6               	movwf	(send_msg@qmsg+1)& (0+255),b
  5111                           
  5112                           ; BSR set to: 1
  5113                           ;messages.c: 41: if (qmsg->full != 0) {
  5114  00171C  C1A5  FFD9         	movff	send_msg@qmsg,fsr2l
  5115  001720  C1A6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5116  001724  50DF               	movf	indf2,w,c
  5117  001726  B4D8               	btfsc	status,2,c
  5118  001728  D002               	goto	l4070
  5119                           
  5120                           ; BSR set to: 1
  5121                           ;messages.c: 42: return (-1);
  5122  00172A  0EFF               	movlw	255
  5123  00172C  0012               	return	
  5124  00172E                     l4070:
  5125                           
  5126                           ; BSR set to: 1
  5127                           ;messages.c: 43: }
  5128                           ;messages.c: 46: qmsg->length = length;
  5129  00172E  0101               	movlb	1	; () banked
  5130  001730  EE20 F001          	lfsr	2,1
  5131  001734  0101               	movlb	1	; () banked
  5132  001736  51A5               	movf	send_msg@qmsg& (0+255),w,b
  5133  001738  26D9               	addwf	fsr2l,f,c
  5134  00173A  0101               	movlb	1	; () banked
  5135  00173C  51A6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  5136  00173E  22DA               	addwfc	fsr2h,f,c
  5137  001740  0100               	movlb	0	; () banked
  5138  001742  C0BF  FFDF         	movff	send_msg@length,indf2
  5139                           
  5140                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5141  001746  0101               	movlb	1	; () banked
  5142  001748  EE20 F002          	lfsr	2,2
  5143  00174C  0101               	movlb	1	; () banked
  5144  00174E  51A5               	movf	send_msg@qmsg& (0+255),w,b
  5145  001750  26D9               	addwf	fsr2l,f,c
  5146  001752  0101               	movlb	1	; () banked
  5147  001754  51A6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  5148  001756  22DA               	addwfc	fsr2h,f,c
  5149  001758  0100               	movlb	0	; () banked
  5150  00175A  C0C0  FFDF         	movff	send_msg@msgtype,indf2
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5154  00175E  0E03               	movlw	3
  5155  001760  0101               	movlb	1	; () banked
  5156  001762  0101               	movlb	1	; () banked
  5157  001764  25A5               	addwf	send_msg@qmsg& (0+255),w,b
  5158  001766  0100               	movlb	0	; () banked
  5159  001768  0100               	movlb	0	; () banked
  5160  00176A  6FB3               	movwf	memcpy@d1& (0+255),b
  5161  00176C  0E00               	movlw	0
  5162  00176E  0101               	movlb	1	; () banked
  5163  001770  0101               	movlb	1	; () banked
  5164  001772  21A6               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  5165  001774  0100               	movlb	0	; () banked
  5166  001776  6FB4               	movwf	(memcpy@d1+1)& (0+255),b
  5167  001778  0100               	movlb	0	; () banked
  5168  00177A  0100               	movlb	0	; () banked
  5169  00177C  C0C2  F0B6         	movff	send_msg@data+1,memcpy@s1+1
  5170  001780  0100               	movlb	0	; () banked
  5171  001782  0100               	movlb	0	; () banked
  5172  001784  C0C1  F0B5         	movff	send_msg@data,memcpy@s1
  5173  001788  C1A2  F0B7         	movff	send_msg@tlength,memcpy@n
  5174  00178C  C1A3  F0B8         	movff	send_msg@tlength+1,memcpy@n+1
  5175  001790  EC4B  F010         	call	_memcpy	;wreg free
  5176                           
  5177                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5178  001794  0100               	movlb	0	; () banked
  5179  001796  EE20 F034          	lfsr	2,52
  5180  00179A  0100               	movlb	0	; () banked
  5181  00179C  51BD               	movf	send_msg@qptr& (0+255),w,b
  5182  00179E  26D9               	addwf	fsr2l,f,c
  5183  0017A0  0100               	movlb	0	; () banked
  5184  0017A2  51BE               	movf	(send_msg@qptr+1)& (0+255),w,b
  5185  0017A4  22DA               	addwfc	fsr2h,f,c
  5186  0017A6  0100               	movlb	0	; () banked
  5187  0017A8  EE10 F034          	lfsr	1,52
  5188  0017AC  0100               	movlb	0	; () banked
  5189  0017AE  51BD               	movf	send_msg@qptr& (0+255),w,b
  5190  0017B0  26E1               	addwf	fsr1l,f,c
  5191  0017B2  0100               	movlb	0	; () banked
  5192  0017B4  51BE               	movf	(send_msg@qptr+1)& (0+255),w,b
  5193  0017B6  22E2               	addwfc	fsr1h,f,c
  5194  0017B8  50E7               	movf	indf1,w,c
  5195  0017BA  0100               	movlb	0	; () banked
  5196  0017BC  6FC3               	movwf	??_send_msg& (0+255),b
  5197  0017BE  0100               	movlb	0	; () banked
  5198  0017C0  29C3               	incf	??_send_msg& (0+255),w,b
  5199  0017C2  0B03               	andlw	3
  5200  0017C4  6EDF               	movwf	indf2,c
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;messages.c: 59: qmsg->full = 1;
  5204  0017C6  C1A5  FFD9         	movff	send_msg@qmsg,fsr2l
  5205  0017CA  C1A6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5206  0017CE  0E01               	movlw	1
  5207  0017D0  6EDF               	movwf	indf2,c
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;messages.c: 60: return (1);
  5211  0017D2  0E01               	movlw	1
  5212  0017D4  0012               	return	
  5213  0017D6                     __end_of_send_msg:
  5214                           	opt stack 0
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           intcon	equ	0xFF2
  5222                           postinc0	equ	0xFEE
  5223                           wreg	equ	0xFE8
  5224                           indf1	equ	0xFE7
  5225                           postdec1	equ	0xFE5
  5226                           fsr1h	equ	0xFE2
  5227                           fsr1l	equ	0xFE1
  5228                           indf2	equ	0xFDF
  5229                           postinc2	equ	0xFDE
  5230                           postdec2	equ	0xFDD
  5231                           fsr2h	equ	0xFDA
  5232                           fsr2l	equ	0xFD9
  5233                           status	equ	0xFD8
  5234                           
  5235 ;; *************** function _ToMainLow_recvmsg *****************
  5236 ;; Defined at:
  5237 ;;		line 112 in file "source/messages.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  maxlength       1    wreg     unsigned char 
  5240 ;;  msgtype         2    5[BANK1 ] PTR unsigned char 
  5241 ;;		 -> main@msgtype(1), 
  5242 ;;  data            2    7[BANK1 ] PTR void 
  5243 ;;		 -> main@msgbuffer(11), 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  maxlength       1   70[BANK0 ] unsigned char 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      char 
  5248 ;; Registers used:
  5249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5255 ;;      Params:         0       0       4       0       0
  5256 ;;      Locals:         0       1       0       0       0
  5257 ;;      Temps:          0       0       0       0       0
  5258 ;;      Totals:         0       1       4       0       0
  5259 ;;Total ram usage:        5 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:   14
  5262 ;; This function calls:
  5263 ;;		_recv_msg
  5264 ;; This function is called by:
  5265 ;;		_main
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text26
  5270  002362                     __ptext26:
  5271                           	opt stack 0
  5272  002362                     _ToMainLow_recvmsg:
  5273                           	opt stack 16
  5274                           
  5275                           ;incstack = 0
  5276                           ;ToMainLow_recvmsg@maxlength stored from wreg
  5277  002362  CFE8 F0C6          	movff	wreg,ToMainLow_recvmsg@maxlength
  5278                           
  5279                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  5280  002366  0101               	movlb	1	; () banked
  5281  002368  0E01               	movlw	high _ToMainLow_MQ
  5282  00236A  0100               	movlb	0	; () banked
  5283  00236C  0100               	movlb	0	; () banked
  5284  00236E  6FBE               	movwf	(recv_msg@qptr+1)& (0+255),b
  5285  002370  0101               	movlb	1	; () banked
  5286  002372  0E6C               	movlw	low _ToMainLow_MQ
  5287  002374  0100               	movlb	0	; () banked
  5288  002376  0100               	movlb	0	; () banked
  5289  002378  6FBD               	movwf	recv_msg@qptr& (0+255),b
  5290  00237A  C0C6  F0BF         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  5291  00237E  0101               	movlb	1	; () banked
  5292  002380  0100               	movlb	0	; () banked
  5293  002382  C1A8  F0C1         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  5294  002386  0101               	movlb	1	; () banked
  5295  002388  0100               	movlb	0	; () banked
  5296  00238A  C1A7  F0C0         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  5297  00238E  0101               	movlb	1	; () banked
  5298  002390  0100               	movlb	0	; () banked
  5299  002392  C1AA  F0C3         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  5300  002396  0101               	movlb	1	; () banked
  5301  002398  0100               	movlb	0	; () banked
  5302  00239A  C1A9  F0C2         	movff	ToMainLow_recvmsg@data,recv_msg@data
  5303  00239E  ECCE  F00A         	call	_recv_msg	;wreg free
  5304  0023A2  0012               	return	
  5305  0023A4                     __end_of_ToMainLow_recvmsg:
  5306                           	opt stack 0
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           prodh	equ	0xFF4
  5312                           prodl	equ	0xFF3
  5313                           intcon	equ	0xFF2
  5314                           postinc0	equ	0xFEE
  5315                           wreg	equ	0xFE8
  5316                           indf1	equ	0xFE7
  5317                           postdec1	equ	0xFE5
  5318                           fsr1h	equ	0xFE2
  5319                           fsr1l	equ	0xFE1
  5320                           indf2	equ	0xFDF
  5321                           postinc2	equ	0xFDE
  5322                           postdec2	equ	0xFDD
  5323                           fsr2h	equ	0xFDA
  5324                           fsr2l	equ	0xFD9
  5325                           status	equ	0xFD8
  5326                           
  5327 ;; *************** function _ToMainHigh_recvmsg *****************
  5328 ;; Defined at:
  5329 ;;		line 135 in file "source/messages.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  maxlength       1    wreg     unsigned char 
  5332 ;;  msgtype         2    5[BANK1 ] PTR unsigned char 
  5333 ;;		 -> main@msgtype(1), 
  5334 ;;  data            2    7[BANK1 ] PTR void 
  5335 ;;		 -> main@msgbuffer(11), 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  maxlength       1   70[BANK0 ] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      char 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5347 ;;      Params:         0       0       4       0       0
  5348 ;;      Locals:         0       1       0       0       0
  5349 ;;      Temps:          0       0       0       0       0
  5350 ;;      Totals:         0       1       4       0       0
  5351 ;;Total ram usage:        5 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:   14
  5354 ;; This function calls:
  5355 ;;		_recv_msg
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text27
  5362  0023A4                     __ptext27:
  5363                           	opt stack 0
  5364  0023A4                     _ToMainHigh_recvmsg:
  5365                           	opt stack 16
  5366                           
  5367                           ;incstack = 0
  5368                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5369  0023A4  CFE8 F0C6          	movff	wreg,ToMainHigh_recvmsg@maxlength
  5370                           
  5371                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5372  0023A8  0101               	movlb	1	; () banked
  5373  0023AA  0E01               	movlw	high _ToMainHigh_MQ
  5374  0023AC  0100               	movlb	0	; () banked
  5375  0023AE  0100               	movlb	0	; () banked
  5376  0023B0  6FBE               	movwf	(recv_msg@qptr+1)& (0+255),b
  5377  0023B2  0101               	movlb	1	; () banked
  5378  0023B4  0E36               	movlw	low _ToMainHigh_MQ
  5379  0023B6  0100               	movlb	0	; () banked
  5380  0023B8  0100               	movlb	0	; () banked
  5381  0023BA  6FBD               	movwf	recv_msg@qptr& (0+255),b
  5382  0023BC  C0C6  F0BF         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5383  0023C0  0101               	movlb	1	; () banked
  5384  0023C2  0100               	movlb	0	; () banked
  5385  0023C4  C1A8  F0C1         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5386  0023C8  0101               	movlb	1	; () banked
  5387  0023CA  0100               	movlb	0	; () banked
  5388  0023CC  C1A7  F0C0         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5389  0023D0  0101               	movlb	1	; () banked
  5390  0023D2  0100               	movlb	0	; () banked
  5391  0023D4  C1AA  F0C3         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5392  0023D8  0101               	movlb	1	; () banked
  5393  0023DA  0100               	movlb	0	; () banked
  5394  0023DC  C1A9  F0C2         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5395  0023E0  ECCE  F00A         	call	_recv_msg	;wreg free
  5396  0023E4  0012               	return	
  5397  0023E6                     __end_of_ToMainHigh_recvmsg:
  5398                           	opt stack 0
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           postinc0	equ	0xFEE
  5407                           wreg	equ	0xFE8
  5408                           indf1	equ	0xFE7
  5409                           postdec1	equ	0xFE5
  5410                           fsr1h	equ	0xFE2
  5411                           fsr1l	equ	0xFE1
  5412                           indf2	equ	0xFDF
  5413                           postinc2	equ	0xFDE
  5414                           postdec2	equ	0xFDD
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function _recv_msg *****************
  5420 ;; Defined at:
  5421 ;;		line 63 in file "source/messages.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  qptr            2   61[BANK0 ] PTR struct __msg_queue
  5424 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5425 ;;  maxlength       1   63[BANK0 ] unsigned char 
  5426 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  5427 ;;		 -> main@msgtype(1), 
  5428 ;;  data            2   66[BANK0 ] PTR void 
  5429 ;;		 -> main@msgbuffer(11), 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  qmsg            2    3[BANK1 ] PTR struct __msg
  5432 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5433 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5434 ;;  tlength         2    1[BANK1 ] unsigned int 
  5435 ;;  slot            1    0[BANK1 ] unsigned char 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      char 
  5438 ;; Registers used:
  5439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5445 ;;      Params:         0       7       0       0       0
  5446 ;;      Locals:         0       0       5       0       0
  5447 ;;      Temps:          0       2       0       0       0
  5448 ;;      Totals:         0       9       5       0       0
  5449 ;;Total ram usage:       14 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:   13
  5452 ;; This function calls:
  5453 ;;		_memcpy
  5454 ;; This function is called by:
  5455 ;;		_ToMainLow_recvmsg
  5456 ;;		_ToMainHigh_recvmsg
  5457 ;;		_FromMainLow_recvmsg
  5458 ;;		_FromMainHigh_recvmsg
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text28
  5463  00159C                     __ptext28:
  5464                           	opt stack 0
  5465  00159C                     _recv_msg:
  5466                           	opt stack 16
  5467                           
  5468                           ;messages.c: 64: unsigned char slot;
  5469                           ;messages.c: 68: msg *qmsg;
  5470                           ;messages.c: 69: size_t tlength;
  5471                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5472                           
  5473                           ;incstack = 0
  5474  00159C  0100               	movlb	0	; () banked
  5475  00159E  EE20 F035          	lfsr	2,53
  5476  0015A2  0100               	movlb	0	; () banked
  5477  0015A4  51BD               	movf	recv_msg@qptr& (0+255),w,b
  5478  0015A6  26D9               	addwf	fsr2l,f,c
  5479  0015A8  0100               	movlb	0	; () banked
  5480  0015AA  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5481  0015AC  22DA               	addwfc	fsr2h,f,c
  5482  0015AE  50DF               	movf	indf2,w,c
  5483  0015B0  0101               	movlb	1	; () banked
  5484  0015B2  0101               	movlb	1	; () banked
  5485  0015B4  6FA2               	movwf	recv_msg@slot& (0+255),b
  5486                           
  5487                           ; BSR set to: 1
  5488                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5489  0015B6  0101               	movlb	1	; () banked
  5490  0015B8  0101               	movlb	1	; () banked
  5491  0015BA  51A2               	movf	recv_msg@slot& (0+255),w,b
  5492  0015BC  0D0D               	mullw	13
  5493  0015BE  50F3               	movf	prodl,w,c
  5494  0015C0  0100               	movlb	0	; () banked
  5495  0015C2  0100               	movlb	0	; () banked
  5496  0015C4  25BD               	addwf	recv_msg@qptr& (0+255),w,b
  5497  0015C6  0101               	movlb	1	; () banked
  5498  0015C8  0101               	movlb	1	; () banked
  5499  0015CA  6FA5               	movwf	recv_msg@qmsg& (0+255),b
  5500  0015CC  50F4               	movf	prodh,w,c
  5501  0015CE  0100               	movlb	0	; () banked
  5502  0015D0  0100               	movlb	0	; () banked
  5503  0015D2  21BE               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5504  0015D4  0101               	movlb	1	; () banked
  5505  0015D6  6FA6               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;messages.c: 74: if (qmsg->full == 1) {
  5509  0015D8  0E01               	movlw	1
  5510  0015DA  C1A5  FFD9         	movff	recv_msg@qmsg,fsr2l
  5511  0015DE  C1A6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5512  0015E2  62DF               	cpfseq	indf2,c
  5513  0015E4  D074               	goto	l4120
  5514                           
  5515                           ; BSR set to: 1
  5516                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5517  0015E6  0101               	movlb	1	; () banked
  5518  0015E8  EE20 F001          	lfsr	2,1
  5519  0015EC  0101               	movlb	1	; () banked
  5520  0015EE  51A5               	movf	recv_msg@qmsg& (0+255),w,b
  5521  0015F0  26D9               	addwf	fsr2l,f,c
  5522  0015F2  0101               	movlb	1	; () banked
  5523  0015F4  51A6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5524  0015F6  22DA               	addwfc	fsr2h,f,c
  5525  0015F8  50DF               	movf	indf2,w,c
  5526  0015FA  0100               	movlb	0	; () banked
  5527  0015FC  0100               	movlb	0	; () banked
  5528  0015FE  5DBF               	subwf	recv_msg@maxlength& (0+255),w,b
  5529  001600  B0D8               	btfsc	status,0,c
  5530  001602  D002               	goto	l4104
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;messages.c: 77: return (-3);
  5534  001604  0EFD               	movlw	253
  5535  001606  0012               	return	
  5536  001608                     l4104:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;messages.c: 78: }
  5540                           ;messages.c: 80: tlength = qmsg->length;
  5541  001608  0101               	movlb	1	; () banked
  5542  00160A  EE20 F001          	lfsr	2,1
  5543  00160E  0101               	movlb	1	; () banked
  5544  001610  51A5               	movf	recv_msg@qmsg& (0+255),w,b
  5545  001612  26D9               	addwf	fsr2l,f,c
  5546  001614  0101               	movlb	1	; () banked
  5547  001616  51A6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5548  001618  22DA               	addwfc	fsr2h,f,c
  5549  00161A  50DF               	movf	indf2,w,c
  5550  00161C  0100               	movlb	0	; () banked
  5551  00161E  6FC4               	movwf	??_recv_msg& (0+255),b
  5552  001620  0100               	movlb	0	; () banked
  5553  001622  51C4               	movf	??_recv_msg& (0+255),w,b
  5554  001624  0101               	movlb	1	; () banked
  5555  001626  0101               	movlb	1	; () banked
  5556  001628  6FA3               	movwf	recv_msg@tlength& (0+255),b
  5557  00162A  0101               	movlb	1	; () banked
  5558  00162C  6BA4               	clrf	(recv_msg@tlength+1)& (0+255),b
  5559                           
  5560                           ; BSR set to: 1
  5561                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5562  00162E  0100               	movlb	0	; () banked
  5563  001630  0100               	movlb	0	; () banked
  5564  001632  C0C3  F0B4         	movff	recv_msg@data+1,memcpy@d1+1
  5565  001636  0100               	movlb	0	; () banked
  5566  001638  0100               	movlb	0	; () banked
  5567  00163A  C0C2  F0B3         	movff	recv_msg@data,memcpy@d1
  5568  00163E  0E03               	movlw	3
  5569  001640  0101               	movlb	1	; () banked
  5570  001642  0101               	movlb	1	; () banked
  5571  001644  25A5               	addwf	recv_msg@qmsg& (0+255),w,b
  5572  001646  0100               	movlb	0	; () banked
  5573  001648  6FC4               	movwf	??_recv_msg& (0+255),b
  5574  00164A  0E00               	movlw	0
  5575  00164C  0101               	movlb	1	; () banked
  5576  00164E  0101               	movlb	1	; () banked
  5577  001650  21A6               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5578  001652  0100               	movlb	0	; () banked
  5579  001654  6FC5               	movwf	(??_recv_msg+1)& (0+255),b
  5580  001656  C0C4  F0B5         	movff	??_recv_msg,memcpy@s1
  5581  00165A  C0C5  F0B6         	movff	??_recv_msg+1,memcpy@s1+1
  5582  00165E  C1A3  F0B7         	movff	recv_msg@tlength,memcpy@n
  5583  001662  C1A4  F0B8         	movff	recv_msg@tlength+1,memcpy@n+1
  5584  001666  EC4B  F010         	call	_memcpy	;wreg free
  5585                           
  5586                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5587  00166A  0100               	movlb	0	; () banked
  5588  00166C  EE20 F035          	lfsr	2,53
  5589  001670  0100               	movlb	0	; () banked
  5590  001672  51BD               	movf	recv_msg@qptr& (0+255),w,b
  5591  001674  26D9               	addwf	fsr2l,f,c
  5592  001676  0100               	movlb	0	; () banked
  5593  001678  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5594  00167A  22DA               	addwfc	fsr2h,f,c
  5595  00167C  0100               	movlb	0	; () banked
  5596  00167E  EE10 F035          	lfsr	1,53
  5597  001682  0100               	movlb	0	; () banked
  5598  001684  51BD               	movf	recv_msg@qptr& (0+255),w,b
  5599  001686  26E1               	addwf	fsr1l,f,c
  5600  001688  0100               	movlb	0	; () banked
  5601  00168A  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5602  00168C  22E2               	addwfc	fsr1h,f,c
  5603  00168E  50E7               	movf	indf1,w,c
  5604  001690  0100               	movlb	0	; () banked
  5605  001692  6FC4               	movwf	??_recv_msg& (0+255),b
  5606  001694  0100               	movlb	0	; () banked
  5607  001696  29C4               	incf	??_recv_msg& (0+255),w,b
  5608  001698  0B03               	andlw	3
  5609  00169A  6EDF               	movwf	indf2,c
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5613  00169C  0101               	movlb	1	; () banked
  5614  00169E  EE20 F002          	lfsr	2,2
  5615  0016A2  0101               	movlb	1	; () banked
  5616  0016A4  51A5               	movf	recv_msg@qmsg& (0+255),w,b
  5617  0016A6  26D9               	addwf	fsr2l,f,c
  5618  0016A8  0101               	movlb	1	; () banked
  5619  0016AA  51A6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5620  0016AC  22DA               	addwfc	fsr2h,f,c
  5621  0016AE  C0C0  FFE1         	movff	recv_msg@msgtype,fsr1l
  5622  0016B2  C0C1  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5623  0016B6  CFDF FFE7          	movff	indf2,indf1
  5624                           
  5625                           ; BSR set to: 1
  5626                           ;messages.c: 91: qmsg->full = 0;
  5627  0016BA  C1A5  FFD9         	movff	recv_msg@qmsg,fsr2l
  5628  0016BE  C1A6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5629  0016C2  0E00               	movlw	0
  5630  0016C4  6EDF               	movwf	indf2,c
  5631                           
  5632                           ; BSR set to: 1
  5633                           ;messages.c: 92: return (tlength);
  5634  0016C6  0101               	movlb	1	; () banked
  5635  0016C8  0101               	movlb	1	; () banked
  5636  0016CA  51A3               	movf	recv_msg@tlength& (0+255),w,b
  5637  0016CC  0012               	return	
  5638  0016CE                     l4120:
  5639                           
  5640                           ; BSR set to: 1
  5641                           ;messages.c: 94: return (-4);
  5642  0016CE  0EFC               	movlw	252
  5643  0016D0  0012               	return	
  5644  0016D2                     __end_of_recv_msg:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           postinc0	equ	0xFEE
  5654                           wreg	equ	0xFE8
  5655                           indf1	equ	0xFE7
  5656                           postdec1	equ	0xFE5
  5657                           fsr1h	equ	0xFE2
  5658                           fsr1l	equ	0xFE1
  5659                           indf2	equ	0xFDF
  5660                           postinc2	equ	0xFDE
  5661                           postdec2	equ	0xFDD
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function _memcpy *****************
  5667 ;; Defined at:
  5668 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  d1              2   51[BANK0 ] PTR void 
  5671 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5672 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5673 ;;		 -> main@msgbuffer(11), 
  5674 ;;  s1              2   53[BANK0 ] PTR const void 
  5675 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5676 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5677 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5678 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5679 ;;		 -> main@ic(53), 
  5680 ;;  n               2   55[BANK0 ] unsigned int 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  s               2   59[BANK0 ] PTR const unsigned char 
  5683 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5684 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5685 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5686 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  5687 ;;		 -> main@ic(53), 
  5688 ;;  d               2   57[BANK0 ] PTR unsigned char 
  5689 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5690 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5691 ;;		 -> main@msgbuffer(11), 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  2   51[BANK0 ] PTR void 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5701 ;;      Params:         0       6       0       0       0
  5702 ;;      Locals:         0       4       0       0       0
  5703 ;;      Temps:          0       0       0       0       0
  5704 ;;      Totals:         0      10       0       0       0
  5705 ;;Total ram usage:       10 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:   12
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_send_msg
  5712 ;;		_recv_msg
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text29
  5717  002096                     __ptext29:
  5718                           	opt stack 0
  5719  002096                     _memcpy:
  5720                           	opt stack 16
  5721                           
  5722                           ;incstack = 0
  5723  002096  0100               	movlb	0	; () banked
  5724  002098  0100               	movlb	0	; () banked
  5725  00209A  C0B6  F0BC         	movff	memcpy@s1+1,memcpy@s+1
  5726  00209E  0100               	movlb	0	; () banked
  5727  0020A0  0100               	movlb	0	; () banked
  5728  0020A2  C0B5  F0BB         	movff	memcpy@s1,memcpy@s
  5729  0020A6  0100               	movlb	0	; () banked
  5730  0020A8  0100               	movlb	0	; () banked
  5731  0020AA  C0B4  F0BA         	movff	memcpy@d1+1,memcpy@d+1
  5732  0020AE  0100               	movlb	0	; () banked
  5733  0020B0  0100               	movlb	0	; () banked
  5734  0020B2  C0B3  F0B9         	movff	memcpy@d1,memcpy@d
  5735  0020B6  D012               	goto	l4090
  5736  0020B8                     l4084:
  5737                           
  5738                           ; BSR set to: 0
  5739  0020B8  C0BB  FFD9         	movff	memcpy@s,fsr2l
  5740  0020BC  C0BC  FFDA         	movff	memcpy@s+1,fsr2h
  5741  0020C0  C0B9  FFE1         	movff	memcpy@d,fsr1l
  5742  0020C4  C0BA  FFE2         	movff	memcpy@d+1,fsr1h
  5743  0020C8  CFDF FFE7          	movff	indf2,indf1
  5744                           
  5745                           ; BSR set to: 0
  5746  0020CC  0100               	movlb	0	; () banked
  5747  0020CE  0100               	movlb	0	; () banked
  5748  0020D0  4BBB               	infsnz	memcpy@s& (0+255),f,b
  5749  0020D2  2BBC               	incf	(memcpy@s+1)& (0+255),f,b
  5750                           
  5751                           ; BSR set to: 0
  5752  0020D4  0100               	movlb	0	; () banked
  5753  0020D6  0100               	movlb	0	; () banked
  5754  0020D8  4BB9               	infsnz	memcpy@d& (0+255),f,b
  5755  0020DA  2BBA               	incf	(memcpy@d+1)& (0+255),f,b
  5756  0020DC                     l4090:
  5757                           
  5758                           ; BSR set to: 0
  5759  0020DC  0100               	movlb	0	; () banked
  5760  0020DE  0100               	movlb	0	; () banked
  5761  0020E0  07B7               	decf	memcpy@n& (0+255),f,b
  5762  0020E2  A0D8               	btfss	status,0,c
  5763  0020E4  07B8               	decf	(memcpy@n+1)& (0+255),f,b
  5764  0020E6  0100               	movlb	0	; () banked
  5765  0020E8  29B7               	incf	memcpy@n& (0+255),w,b
  5766  0020EA  B4D8               	btfsc	status,2,c
  5767  0020EC  29B8               	incf	(memcpy@n+1)& (0+255),w,b
  5768  0020EE  B4D8               	btfsc	status,2,c
  5769                           
  5770                           ; BSR set to: 0
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;	Return value of _memcpy is never used
  5774  0020F0  0012               	return	
  5775  0020F2  D7E2               	goto	l4084
  5776  0020F4                     __end_of_memcpy:
  5777                           	opt stack 0
  5778                           tblptru	equ	0xFF8
  5779                           tblptrh	equ	0xFF7
  5780                           tblptrl	equ	0xFF6
  5781                           tablat	equ	0xFF5
  5782                           prodh	equ	0xFF4
  5783                           prodl	equ	0xFF3
  5784                           intcon	equ	0xFF2
  5785                           postinc0	equ	0xFEE
  5786                           wreg	equ	0xFE8
  5787                           indf1	equ	0xFE7
  5788                           postdec1	equ	0xFE5
  5789                           fsr1h	equ	0xFE2
  5790                           fsr1l	equ	0xFE1
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798 ;; *************** function _OpenUSART *****************
  5799 ;; Defined at:
  5800 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  config          1    wreg     unsigned char 
  5803 ;;  spbrg           2   51[BANK0 ] unsigned int 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  config          1   56[BANK0 ] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;		None               void
  5808 ;; Registers used:
  5809 ;;		wreg, status,2
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5815 ;;      Params:         0       2       0       0       0
  5816 ;;      Locals:         0       1       0       0       0
  5817 ;;      Temps:          0       3       0       0       0
  5818 ;;      Totals:         0       6       0       0       0
  5819 ;;Total ram usage:        6 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:   12
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_main
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text30
  5830  001CE4                     __ptext30:
  5831                           	opt stack 0
  5832  001CE4                     _OpenUSART:
  5833                           	opt stack 18
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;incstack = 0
  5837                           ;OpenUSART@config stored from wreg
  5838  001CE4  CFE8 F0B8          	movff	wreg,OpenUSART@config
  5839  001CE8  0E00               	movlw	0
  5840  001CEA  6EAC               	movwf	4012,c	;volatile
  5841  001CEC  0E00               	movlw	0
  5842  001CEE  6EAB               	movwf	4011,c	;volatile
  5843  001CF0  0100               	movlb	0	; () banked
  5844  001CF2  0100               	movlb	0	; () banked
  5845  001CF4  B1B8               	btfsc	OpenUSART@config& (0+255),0,b
  5846                           
  5847                           ; BSR set to: 0
  5848  001CF6  88AC               	bsf	4012,4,c	;volatile
  5849                           
  5850                           ; BSR set to: 0
  5851                           
  5852                           ; BSR set to: 0
  5853  001CF8  0100               	movlb	0	; () banked
  5854  001CFA  0100               	movlb	0	; () banked
  5855  001CFC  A3B8               	btfss	OpenUSART@config& (0+255),1,b
  5856  001CFE  D002               	goto	l3864
  5857                           
  5858                           ; BSR set to: 0
  5859  001D00  8CAC               	bsf	4012,6,c	;volatile
  5860  001D02  8CAB               	bsf	4011,6,c	;volatile
  5861  001D04                     l3864:
  5862                           
  5863                           ; BSR set to: 0
  5864  001D04  0100               	movlb	0	; () banked
  5865  001D06  0100               	movlb	0	; () banked
  5866  001D08  B5B8               	btfsc	OpenUSART@config& (0+255),2,b
  5867                           
  5868                           ; BSR set to: 0
  5869  001D0A  8EAC               	bsf	4012,7,c	;volatile
  5870                           
  5871                           ; BSR set to: 0
  5872                           
  5873                           ; BSR set to: 0
  5874  001D0C  0100               	movlb	0	; () banked
  5875  001D0E  0100               	movlb	0	; () banked
  5876  001D10  A7B8               	btfss	OpenUSART@config& (0+255),3,b
  5877  001D12  D002               	goto	l654
  5878                           
  5879                           ; BSR set to: 0
  5880  001D14  88AB               	bsf	4011,4,c	;volatile
  5881  001D16  D001               	goto	l3872
  5882  001D18                     l654:
  5883                           
  5884                           ; BSR set to: 0
  5885  001D18  8AAB               	bsf	4011,5,c	;volatile
  5886  001D1A                     l3872:
  5887                           
  5888                           ; BSR set to: 0
  5889  001D1A  0100               	movlb	0	; () banked
  5890  001D1C  0100               	movlb	0	; () banked
  5891  001D1E  B9B8               	btfsc	OpenUSART@config& (0+255),4,b
  5892                           
  5893                           ; BSR set to: 0
  5894  001D20  84AC               	bsf	4012,2,c	;volatile
  5895                           
  5896                           ; BSR set to: 0
  5897  001D22  989E               	bcf	3998,4,c	;volatile
  5898                           
  5899                           ; BSR set to: 0
  5900  001D24  0100               	movlb	0	; () banked
  5901  001D26  0100               	movlb	0	; () banked
  5902  001D28  BBB8               	btfsc	OpenUSART@config& (0+255),5,b
  5903                           
  5904                           ; BSR set to: 0
  5905  001D2A  86AB               	bsf	4011,3,c	;volatile
  5906                           
  5907                           ; BSR set to: 0
  5908                           
  5909                           ; BSR set to: 0
  5910  001D2C  0100               	movlb	0	; () banked
  5911  001D2E  0100               	movlb	0	; () banked
  5912  001D30  ADB8               	btfss	OpenUSART@config& (0+255),6,b
  5913  001D32  D002               	goto	l658
  5914                           
  5915                           ; BSR set to: 0
  5916  001D34  8A9D               	bsf	3997,5,c	;volatile
  5917  001D36  D001               	goto	l659
  5918  001D38                     l658:
  5919                           
  5920                           ; BSR set to: 0
  5921  001D38  9A9D               	bcf	3997,5,c	;volatile
  5922  001D3A                     l659:
  5923                           
  5924                           ; BSR set to: 0
  5925  001D3A  9A9E               	bcf	3998,5,c	;volatile
  5926                           
  5927                           ; BSR set to: 0
  5928  001D3C  0100               	movlb	0	; () banked
  5929  001D3E  0100               	movlb	0	; () banked
  5930  001D40  AFB8               	btfss	OpenUSART@config& (0+255),7,b
  5931  001D42  D002               	goto	l660
  5932                           
  5933                           ; BSR set to: 0
  5934  001D44  889D               	bsf	3997,4,c	;volatile
  5935  001D46  D001               	goto	l661
  5936  001D48                     l660:
  5937                           
  5938                           ; BSR set to: 0
  5939  001D48  989D               	bcf	3997,4,c	;volatile
  5940  001D4A                     l661:
  5941                           
  5942                           ; BSR set to: 0
  5943  001D4A  C0B3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5944                           
  5945                           ; BSR set to: 0
  5946  001D4E  0100               	movlb	0	; () banked
  5947  001D50  C0B4  F0B5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5948  001D54  C0B5  F0B6         	movff	??_OpenUSART,??_OpenUSART+1
  5949  001D58  0100               	movlb	0	; () banked
  5950  001D5A  6BB7               	clrf	(??_OpenUSART+2)& (0+255),b
  5951  001D5C  0100               	movlb	0	; () banked
  5952  001D5E  51B6               	movf	(??_OpenUSART+1)& (0+255),w,b
  5953  001D60  6EB0               	movwf	4016,c	;volatile
  5954                           
  5955                           ; BSR set to: 0
  5956  001D62  8AAC               	bsf	4012,5,c	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959  001D64  8EAB               	bsf	4011,7,c	;volatile
  5960                           
  5961                           ; BSR set to: 0
  5962  001D66  9C94               	bcf	3988,6,c	;volatile
  5963                           
  5964                           ; BSR set to: 0
  5965  001D68  8E94               	bsf	3988,7,c	;volatile
  5966                           
  5967                           ; BSR set to: 0
  5968  001D6A  A8AC               	btfss	4012,4,c	;volatile
  5969  001D6C  0012               	return	
  5970                           
  5971                           ; BSR set to: 0
  5972  001D6E  BEAC               	btfsc	4012,7,c	;volatile
  5973  001D70  0012               	return	
  5974                           
  5975                           ; BSR set to: 0
  5976  001D72  8C94               	bsf	3988,6,c	;volatile
  5977  001D74  0012               	return	
  5978  001D76                     __end_of_OpenUSART:
  5979                           	opt stack 0
  5980                           tblptru	equ	0xFF8
  5981                           tblptrh	equ	0xFF7
  5982                           tblptrl	equ	0xFF6
  5983                           tablat	equ	0xFF5
  5984                           prodh	equ	0xFF4
  5985                           prodl	equ	0xFF3
  5986                           intcon	equ	0xFF2
  5987                           postinc0	equ	0xFEE
  5988                           wreg	equ	0xFE8
  5989                           indf1	equ	0xFE7
  5990                           postdec1	equ	0xFE5
  5991                           fsr1h	equ	0xFE2
  5992                           fsr1l	equ	0xFE1
  5993                           indf2	equ	0xFDF
  5994                           postinc2	equ	0xFDE
  5995                           postdec2	equ	0xFDD
  5996                           fsr2h	equ	0xFDA
  5997                           fsr2l	equ	0xFD9
  5998                           status	equ	0xFD8
  5999                           
  6000 ;; *************** function _OpenTimer1 *****************
  6001 ;; Defined at:
  6002 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1open.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  config          1    wreg     unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  config          1   51[BANK0 ] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;		None               void
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6016 ;;      Params:         0       0       0       0       0
  6017 ;;      Locals:         0       1       0       0       0
  6018 ;;      Temps:          0       0       0       0       0
  6019 ;;      Totals:         0       1       0       0       0
  6020 ;;Total ram usage:        1 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:   12
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text31
  6031  00245E                     __ptext31:
  6032                           	opt stack 0
  6033  00245E                     _OpenTimer1:
  6034                           	opt stack 18
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;incstack = 0
  6038                           ;OpenTimer1@config stored from wreg
  6039  00245E  CFE8 F0B3          	movff	wreg,OpenTimer1@config
  6040  002462  0100               	movlb	0	; () banked
  6041  002464  0100               	movlb	0	; () banked
  6042  002466  51B3               	movf	OpenTimer1@config& (0+255),w,b
  6043  002468  0B7E               	andlw	126
  6044  00246A  6ECD               	movwf	4045,c	;volatile
  6045                           
  6046                           ; BSR set to: 0
  6047  00246C  0100               	movlb	0	; () banked
  6048  00246E  0100               	movlb	0	; () banked
  6049  002470  ADB3               	btfss	OpenTimer1@config& (0+255),6,b
  6050  002472  D002               	goto	l610
  6051                           
  6052                           ; BSR set to: 0
  6053  002474  8ECD               	bsf	4045,7,c	;volatile
  6054  002476  D001               	goto	l3824
  6055  002478                     l610:
  6056                           
  6057                           ; BSR set to: 0
  6058  002478  9ECD               	bcf	4045,7,c	;volatile
  6059  00247A                     l3824:
  6060                           
  6061                           ; BSR set to: 0
  6062  00247A  0E00               	movlw	0
  6063  00247C  6ECF               	movwf	4047,c	;volatile
  6064  00247E  0E00               	movlw	0
  6065  002480  6ECE               	movwf	4046,c	;volatile
  6066                           
  6067                           ; BSR set to: 0
  6068  002482  909E               	bcf	3998,0,c	;volatile
  6069                           
  6070                           ; BSR set to: 0
  6071  002484  0100               	movlb	0	; () banked
  6072  002486  0100               	movlb	0	; () banked
  6073  002488  AFB3               	btfss	OpenTimer1@config& (0+255),7,b
  6074  00248A  D002               	goto	l612
  6075                           
  6076                           ; BSR set to: 0
  6077  00248C  809D               	bsf	3997,0,c	;volatile
  6078  00248E  D001               	goto	l613
  6079  002490                     l612:
  6080                           
  6081                           ; BSR set to: 0
  6082  002490  909D               	bcf	3997,0,c	;volatile
  6083  002492                     l613:
  6084                           
  6085                           ; BSR set to: 0
  6086  002492  80CD               	bsf	4045,0,c	;volatile
  6087                           
  6088                           ; BSR set to: 0
  6089  002494  0012               	return	
  6090  002496                     __end_of_OpenTimer1:
  6091                           	opt stack 0
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           postinc0	equ	0xFEE
  6100                           wreg	equ	0xFE8
  6101                           indf1	equ	0xFE7
  6102                           postdec1	equ	0xFE5
  6103                           fsr1h	equ	0xFE2
  6104                           fsr1l	equ	0xFE1
  6105                           indf2	equ	0xFDF
  6106                           postinc2	equ	0xFDE
  6107                           postdec2	equ	0xFDD
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function _OpenTimer0 *****************
  6113 ;; Defined at:
  6114 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  config          1    wreg     unsigned char 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  config          1   51[BANK0 ] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;		None               void
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6128 ;;      Params:         0       0       0       0       0
  6129 ;;      Locals:         0       1       0       0       0
  6130 ;;      Temps:          0       0       0       0       0
  6131 ;;      Totals:         0       1       0       0       0
  6132 ;;Total ram usage:        1 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:   12
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text32
  6143  0025A2                     __ptext32:
  6144                           	opt stack 0
  6145  0025A2                     _OpenTimer0:
  6146                           	opt stack 18
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;incstack = 0
  6150                           ;OpenTimer0@config stored from wreg
  6151  0025A2  CFE8 F0B3          	movff	wreg,OpenTimer0@config
  6152  0025A6  0100               	movlb	0	; () banked
  6153  0025A8  0100               	movlb	0	; () banked
  6154  0025AA  51B3               	movf	OpenTimer0@config& (0+255),w,b
  6155  0025AC  0B7F               	andlw	127
  6156  0025AE  6ED5               	movwf	4053,c	;volatile
  6157                           
  6158                           ; BSR set to: 0
  6159  0025B0  0E00               	movlw	0
  6160  0025B2  6ED7               	movwf	4055,c	;volatile
  6161                           
  6162                           ; BSR set to: 0
  6163  0025B4  0E00               	movlw	0
  6164  0025B6  6ED6               	movwf	4054,c	;volatile
  6165                           
  6166                           ; BSR set to: 0
  6167  0025B8  94F2               	bcf	intcon,2,c	;volatile
  6168                           
  6169                           ; BSR set to: 0
  6170  0025BA  0100               	movlb	0	; () banked
  6171  0025BC  0100               	movlb	0	; () banked
  6172  0025BE  AFB3               	btfss	OpenTimer0@config& (0+255),7,b
  6173  0025C0  D002               	goto	l586
  6174                           
  6175                           ; BSR set to: 0
  6176  0025C2  8AF2               	bsf	intcon,5,c	;volatile
  6177  0025C4  D001               	goto	l587
  6178  0025C6                     l586:
  6179                           
  6180                           ; BSR set to: 0
  6181  0025C6  9AF2               	bcf	intcon,5,c	;volatile
  6182  0025C8                     l587:
  6183                           
  6184                           ; BSR set to: 0
  6185  0025C8  8ED5               	bsf	4053,7,c	;volatile
  6186                           
  6187                           ; BSR set to: 0
  6188  0025CA  0012               	return	
  6189  0025CC                     __end_of_OpenTimer0:
  6190                           	opt stack 0
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           postinc0	equ	0xFEE
  6199                           wreg	equ	0xFE8
  6200                           indf1	equ	0xFE7
  6201                           postdec1	equ	0xFE5
  6202                           fsr1h	equ	0xFE2
  6203                           fsr1l	equ	0xFE1
  6204                           indf2	equ	0xFDF
  6205                           postinc2	equ	0xFDE
  6206                           postdec2	equ	0xFDD
  6207                           fsr2h	equ	0xFDA
  6208                           fsr2l	equ	0xFD9
  6209                           status	equ	0xFD8
  6210                           
  6211 ;; *************** function _InterruptHandlerLow *****************
  6212 ;; Defined at:
  6213 ;;		line 122 in file "source/interrupts.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;		None               void
  6220 ;; Registers used:
  6221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6227 ;;      Params:         0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0
  6229 ;;      Temps:         17       0       0       0       0
  6230 ;;      Totals:        17       0       0       0       0
  6231 ;;Total ram usage:       17 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:   11
  6234 ;; This function calls:
  6235 ;;		_timer1_int_handler
  6236 ;;		_uart_recv_int_handler
  6237 ;; This function is called by:
  6238 ;;		Interrupt level 1
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	intcodelo
  6243  000018                     __pintcodelo:
  6244                           	opt stack 0
  6245  000018                     _InterruptHandlerLow:
  6246                           	opt stack 15
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;incstack = 0
  6250  000018  CFD8 F022          	movff	status,??_InterruptHandlerLow
  6251  00001C  CFE8 F023          	movff	wreg,??_InterruptHandlerLow+1
  6252  000020  CFE0 F024          	movff	bsr,??_InterruptHandlerLow+2
  6253  000024  CFFA F025          	movff	pclath,??_InterruptHandlerLow+3
  6254  000028  CFFB F026          	movff	pclatu,??_InterruptHandlerLow+4
  6255  00002C  CFE9 F027          	movff	fsr0l,??_InterruptHandlerLow+5
  6256  000030  CFEA F028          	movff	fsr0h,??_InterruptHandlerLow+6
  6257  000034  CFE1 F029          	movff	fsr1l,??_InterruptHandlerLow+7
  6258  000038  CFE2 F02A          	movff	fsr1h,??_InterruptHandlerLow+8
  6259  00003C  CFD9 F02B          	movff	fsr2l,??_InterruptHandlerLow+9
  6260  000040  CFDA F02C          	movff	fsr2h,??_InterruptHandlerLow+10
  6261  000044  CFF3 F02D          	movff	prodl,??_InterruptHandlerLow+11
  6262  000048  CFF4 F02E          	movff	prodh,??_InterruptHandlerLow+12
  6263  00004C  CFF6 F02F          	movff	tblptrl,??_InterruptHandlerLow+13
  6264  000050  CFF7 F030          	movff	tblptrh,??_InterruptHandlerLow+14
  6265  000054  CFF8 F031          	movff	tblptru,??_InterruptHandlerLow+15
  6266  000058  CFF5 F032          	movff	tablat,??_InterruptHandlerLow+16
  6267                           
  6268                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  6269  00005C  A09E               	btfss	3998,0,c	;volatile
  6270  00005E  D003               	goto	i1l4684
  6271                           
  6272                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  6273  000060  909E               	bcf	3998,0,c	;volatile
  6274                           
  6275                           ;interrupts.c: 126: timer1_int_handler();
  6276  000062  EC2C  F013         	call	_timer1_int_handler	;wreg free
  6277  000066                     i1l4684:
  6278                           
  6279                           ;interrupts.c: 127: }
  6280                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  6281  000066  AA9E               	btfss	3998,5,c	;volatile
  6282  000068  D003               	goto	i1l59
  6283                           
  6284                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  6285  00006A  9A9E               	bcf	3998,5,c	;volatile
  6286                           
  6287                           ;interrupts.c: 132: uart_recv_int_handler();
  6288  00006C  EC22  F011         	call	_uart_recv_int_handler	;wreg free
  6289  000070                     i1l59:
  6290  000070  C032  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  6291  000074  C031  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  6292  000078  C030  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  6293  00007C  C02F  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  6294  000080  C02E  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  6295  000084  C02D  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  6296  000088  C02C  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  6297  00008C  C02B  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  6298  000090  C02A  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  6299  000094  C029  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  6300  000098  C028  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  6301  00009C  C027  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  6302  0000A0  C026  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  6303  0000A4  C025  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  6304  0000A8  C024  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  6305  0000AC  C023  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  6306  0000B0  C022  FFD8         	movff	??_InterruptHandlerLow,status
  6307  0000B4  0010               	retfie	
  6308  0000B6                     __end_of_InterruptHandlerLow:
  6309                           	opt stack 0
  6310                           pclatu	equ	0xFFB
  6311                           pclath	equ	0xFFA
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           postinc0	equ	0xFEE
  6320                           fsr0h	equ	0xFEA
  6321                           fsr0l	equ	0xFE9
  6322                           wreg	equ	0xFE8
  6323                           indf1	equ	0xFE7
  6324                           postdec1	equ	0xFE5
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           bsr	equ	0xFE0
  6328                           indf2	equ	0xFDF
  6329                           postinc2	equ	0xFDE
  6330                           postdec2	equ	0xFDD
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _uart_recv_int_handler *****************
  6336 ;; Defined at:
  6337 ;;		line 15 in file "source/my_uart.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;		None               void
  6344 ;; Registers used:
  6345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6351 ;;      Params:         0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0
  6353 ;;      Temps:          1       0       0       0       0
  6354 ;;      Totals:         1       0       0       0       0
  6355 ;;Total ram usage:        1 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   10
  6358 ;; This function calls:
  6359 ;;		_ReadUSART
  6360 ;;		_parseUART
  6361 ;;		i1_ToMainLow_sendmsg
  6362 ;; This function is called by:
  6363 ;;		_InterruptHandlerLow
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text34
  6368  002244                     __ptext34:
  6369                           	opt stack 0
  6370  002244                     _uart_recv_int_handler:
  6371                           	opt stack 15
  6372                           
  6373                           ;my_uart.c: 24: if ((PIR1bits.RCIF)) {
  6374                           
  6375                           ;incstack = 0
  6376  002244  AA9E               	btfss	3998,5,c	;volatile
  6377  002246  D015               	goto	i1l4672
  6378                           
  6379                           ;my_uart.c: 25: buffer_temp[buf_len] = ReadUSART();
  6380  002248  5042               	movf	_buf_len,w,c
  6381  00224A  0D01               	mullw	1
  6382  00224C  0E45               	movlw	low _buffer_temp
  6383  00224E  24F3               	addwf	prodl,w,c
  6384  002250  6ED9               	movwf	fsr2l,c
  6385  002252  0E00               	movlw	high _buffer_temp
  6386  002254  20F4               	addwfc	prodh,w,c
  6387  002256  6EDA               	movwf	fsr2h,c
  6388  002258  EC1D  F013         	call	_ReadUSART	;wreg free
  6389  00225C  6EDF               	movwf	indf2,c
  6390                           
  6391                           ;my_uart.c: 28: uc_ptr->buflen++;
  6392  00225E  EE20 F004          	lfsr	2,4
  6393  002262  5051               	movf	_uc_ptr,w,c
  6394  002264  26D9               	addwf	fsr2l,f,c
  6395  002266  5052               	movf	_uc_ptr+1,w,c
  6396  002268  22DA               	addwfc	fsr2h,f,c
  6397  00226A  2ADF               	incf	indf2,f,c
  6398                           
  6399                           ;my_uart.c: 29: buf_len++;
  6400  00226C  2A42               	incf	_buf_len,f,c
  6401                           
  6402                           ;my_uart.c: 30: parseUART();
  6403  00226E  EC6D  F00C         	call	_parseUART	;wreg free
  6404  002272                     i1l4672:
  6405                           
  6406                           ;my_uart.c: 33: }
  6407                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  6408  002272  A641               	btfss	_USART_Status,3,c
  6409  002274  0012               	return	
  6410                           
  6411                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  6412  002276  98AB               	bcf	4011,4,c	;volatile
  6413                           
  6414                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  6415  002278  88AB               	bsf	4011,4,c	;volatile
  6416                           
  6417                           ;my_uart.c: 47: ToMainLow_sendmsg(0, 30, (void *) 0);
  6418  00227A  6E21               	movwf	??_uart_recv_int_handler& (0+255),c
  6419  00227C  0E1E               	movlw	30
  6420  00227E  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6421  002280  5021               	movf	??_uart_recv_int_handler& (0+255),w,c
  6422  002282  0E00               	movlw	0
  6423  002284  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6424  002286  0E00               	movlw	0
  6425  002288  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6426  00228A  0E00               	movlw	0
  6427  00228C  ECF9  F012         	call	i1_ToMainLow_sendmsg
  6428  002290  0012               	return	
  6429  002292                     __end_of_uart_recv_int_handler:
  6430                           	opt stack 0
  6431                           pclatu	equ	0xFFB
  6432                           pclath	equ	0xFFA
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           postinc0	equ	0xFEE
  6441                           fsr0h	equ	0xFEA
  6442                           fsr0l	equ	0xFE9
  6443                           wreg	equ	0xFE8
  6444                           indf1	equ	0xFE7
  6445                           postdec1	equ	0xFE5
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           bsr	equ	0xFE0
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function _parseUART *****************
  6457 ;; Defined at:
  6458 ;;		line 61 in file "source/my_uart.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  x               1   31[COMRAM] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6472 ;;      Params:         0       0       0       0       0
  6473 ;;      Locals:         1       0       0       0       0
  6474 ;;      Temps:          5       0       0       0       0
  6475 ;;      Totals:         6       0       0       0       0
  6476 ;;Total ram usage:        6 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    9
  6479 ;; This function calls:
  6480 ;;		i1_ToMainLow_sendmsg
  6481 ;; This function is called by:
  6482 ;;		_uart_recv_int_handler
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text35
  6487  0018DA                     __ptext35:
  6488                           	opt stack 0
  6489  0018DA                     _parseUART:
  6490                           	opt stack 15
  6491                           
  6492                           ;my_uart.c: 63: unsigned char x = uc_ptr->buflen;
  6493                           
  6494                           ;incstack = 0
  6495  0018DA  EE20 F004          	lfsr	2,4
  6496  0018DE  5051               	movf	_uc_ptr,w,c
  6497  0018E0  26D9               	addwf	fsr2l,f,c
  6498  0018E2  5052               	movf	_uc_ptr+1,w,c
  6499  0018E4  22DA               	addwfc	fsr2h,f,c
  6500  0018E6  50DF               	movf	indf2,w,c
  6501  0018E8  6E20               	movwf	parseUART@x,c
  6502                           
  6503                           ;my_uart.c: 65: switch(State)
  6504  0018EA  D060               	goto	i1l4660
  6505  0018EC                     i1l4632:
  6506                           
  6507                           ;my_uart.c: 68: {
  6508                           ;my_uart.c: 69: command_length = buffer_temp[buf_len -1] & 0xF;
  6509  0018EC  0EFF               	movlw	255
  6510  0018EE  6E1B               	movwf	??_parseUART& (0+255),c
  6511  0018F0  0EFF               	movlw	255
  6512  0018F2  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  6513  0018F4  5042               	movf	_buf_len,w,c
  6514  0018F6  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  6515  0018F8  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  6516  0018FA  501B               	movf	??_parseUART,w,c
  6517  0018FC  261D               	addwf	??_parseUART+2,f,c
  6518  0018FE  501C               	movf	??_parseUART+1,w,c
  6519  001900  221E               	addwfc	??_parseUART+3,f,c
  6520  001902  0E45               	movlw	low _buffer_temp
  6521  001904  241D               	addwf	??_parseUART+2,w,c
  6522  001906  6ED9               	movwf	fsr2l,c
  6523  001908  0E00               	movlw	high _buffer_temp
  6524  00190A  201E               	addwfc	??_parseUART+3,w,c
  6525  00190C  6EDA               	movwf	fsr2h,c
  6526  00190E  50DF               	movf	indf2,w,c
  6527  001910  0B0F               	andlw	15
  6528  001912  6E44               	movwf	_command_length,c
  6529                           
  6530                           ;my_uart.c: 71: if(command_length != 0)
  6531  001914  5044               	movf	_command_length,w,c
  6532  001916  B4D8               	btfsc	status,2,c
  6533  001918  D005               	goto	i1l4638
  6534                           
  6535                           ;my_uart.c: 72: {
  6536                           ;my_uart.c: 73: State = GET_COMMAND;
  6537  00191A  6E1B               	movwf	??_parseUART& (0+255),c
  6538  00191C  0E01               	movlw	1
  6539  00191E  6E40               	movwf	_State,c
  6540  001920  501B               	movf	??_parseUART& (0+255),w,c
  6541                           
  6542                           ;my_uart.c: 74: }
  6543  001922  0012               	return	
  6544  001924                     i1l4638:
  6545                           
  6546                           ;my_uart.c: 75: else
  6547                           ;my_uart.c: 76: {
  6548                           ;my_uart.c: 77: State = CHECKSUM;
  6549  001924  6E1B               	movwf	??_parseUART& (0+255),c
  6550  001926  0E02               	movlw	2
  6551  001928  6E40               	movwf	_State,c
  6552  00192A  501B               	movf	??_parseUART& (0+255),w,c
  6553  00192C  0012               	return	
  6554  00192E                     i1l4640:
  6555                           
  6556                           ;my_uart.c: 82: {
  6557                           ;my_uart.c: 83: if(command_count+1 < command_length)
  6558  00192E  5044               	movf	_command_length,w,c
  6559  001930  6E1B               	movwf	??_parseUART& (0+255),c
  6560  001932  6A1C               	clrf	(??_parseUART+1)& (0+255),c
  6561  001934  5043               	movf	_command_count,w,c
  6562  001936  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  6563  001938  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  6564  00193A  0E01               	movlw	1
  6565  00193C  261D               	addwf	??_parseUART+2,f,c
  6566  00193E  0E00               	movlw	0
  6567  001940  221E               	addwfc	??_parseUART+3,f,c
  6568  001942  501E               	movf	??_parseUART+3,w,c
  6569  001944  0A80               	xorlw	128
  6570  001946  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  6571  001948  501B               	movf	??_parseUART,w,c
  6572  00194A  5C1D               	subwf	??_parseUART+2,w,c
  6573  00194C  501C               	movf	??_parseUART+1,w,c
  6574  00194E  0A80               	xorlw	128
  6575  001950  581F               	subwfb	(??_parseUART+4)& (0+255),w,c
  6576  001952  B0D8               	btfsc	status,0,c
  6577  001954  D002               	goto	i1l4644
  6578                           
  6579                           ;my_uart.c: 84: {
  6580                           ;my_uart.c: 85: command_count++;
  6581  001956  2A43               	incf	_command_count,f,c
  6582                           
  6583                           ;my_uart.c: 86: }
  6584  001958  0012               	return	
  6585  00195A                     i1l4644:
  6586                           
  6587                           ;my_uart.c: 87: else
  6588                           ;my_uart.c: 88: {
  6589                           ;my_uart.c: 89: State = CHECKSUM;
  6590  00195A  6E1B               	movwf	??_parseUART& (0+255),c
  6591  00195C  0E02               	movlw	2
  6592  00195E  6E40               	movwf	_State,c
  6593  001960  501B               	movf	??_parseUART& (0+255),w,c
  6594  001962  0012               	return	
  6595  001964                     i1l4646:
  6596                           
  6597                           ;my_uart.c: 94: {
  6598                           ;my_uart.c: 95: ToMainLow_sendmsg(buf_len ,49, &buffer_temp[0]);
  6599  001964  6E1B               	movwf	??_parseUART& (0+255),c
  6600  001966  0E31               	movlw	49
  6601  001968  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6602  00196A  501B               	movf	??_parseUART& (0+255),w,c
  6603  00196C  0E00               	movlw	high _buffer_temp
  6604  00196E  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6605  001970  0E45               	movlw	low _buffer_temp
  6606  001972  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6607  001974  5042               	movf	_buf_len,w,c
  6608  001976  ECF9  F012         	call	i1_ToMainLow_sendmsg
  6609                           
  6610                           ;my_uart.c: 96: uc_ptr->buflen = 0;
  6611  00197A  EE20 F004          	lfsr	2,4
  6612  00197E  5051               	movf	_uc_ptr,w,c
  6613  001980  26D9               	addwf	fsr2l,f,c
  6614  001982  5052               	movf	_uc_ptr+1,w,c
  6615  001984  22DA               	addwfc	fsr2h,f,c
  6616  001986  0E00               	movlw	0
  6617  001988  6EDF               	movwf	indf2,c
  6618                           
  6619                           ;my_uart.c: 97: buf_len = 0;
  6620  00198A  6E1B               	movwf	??_parseUART& (0+255),c
  6621  00198C  0E00               	movlw	0
  6622  00198E  6E42               	movwf	_buf_len,c
  6623  001990  501B               	movf	??_parseUART& (0+255),w,c
  6624                           
  6625                           ;my_uart.c: 98: State = GET_MSGID;
  6626  001992  6E1B               	movwf	??_parseUART& (0+255),c
  6627  001994  0E00               	movlw	0
  6628  001996  6E40               	movwf	_State,c
  6629  001998  501B               	movf	??_parseUART& (0+255),w,c
  6630                           
  6631                           ;my_uart.c: 99: command_count = 0;
  6632  00199A  6E1B               	movwf	??_parseUART& (0+255),c
  6633  00199C  0E00               	movlw	0
  6634  00199E  6E43               	movwf	_command_count,c
  6635  0019A0  501B               	movf	??_parseUART& (0+255),w,c
  6636                           
  6637                           ;my_uart.c: 100: command_length = 0;
  6638  0019A2  6E1B               	movwf	??_parseUART& (0+255),c
  6639  0019A4  0E00               	movlw	0
  6640  0019A6  6E44               	movwf	_command_length,c
  6641  0019A8  501B               	movf	??_parseUART& (0+255),w,c
  6642                           
  6643                           ;my_uart.c: 101: break;
  6644  0019AA  0012               	return	
  6645  0019AC                     i1l4660:
  6646  0019AC  5040               	movf	_State,w,c
  6647                           
  6648                           ; Switch size 1, requested type "space"
  6649                           ; Number of cases is 3, Range of values is 0 to 2
  6650                           ; switch strategies available:
  6651                           ; Name         Instructions Cycles
  6652                           ; simple_byte           10     6 (average)
  6653                           ;	Chosen strategy is simple_byte
  6654  0019AE  0A00               	xorlw	0	; case 0
  6655  0019B0  B4D8               	btfsc	status,2,c
  6656  0019B2  D79C               	goto	i1l4632
  6657  0019B4  0A01               	xorlw	1	; case 1
  6658  0019B6  B4D8               	btfsc	status,2,c
  6659  0019B8  D7BA               	goto	i1l4640
  6660  0019BA  0A03               	xorlw	3	; case 2
  6661  0019BC  A4D8               	btfss	status,2,c
  6662  0019BE  0012               	return	
  6663  0019C0  D7D1               	goto	i1l4646
  6664  0019C2                     __end_of_parseUART:
  6665                           	opt stack 0
  6666                           pclatu	equ	0xFFB
  6667                           pclath	equ	0xFFA
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           prodh	equ	0xFF4
  6673                           prodl	equ	0xFF3
  6674                           intcon	equ	0xFF2
  6675                           postinc0	equ	0xFEE
  6676                           fsr0h	equ	0xFEA
  6677                           fsr0l	equ	0xFE9
  6678                           wreg	equ	0xFE8
  6679                           indf1	equ	0xFE7
  6680                           postdec1	equ	0xFE5
  6681                           fsr1h	equ	0xFE2
  6682                           fsr1l	equ	0xFE1
  6683                           bsr	equ	0xFE0
  6684                           indf2	equ	0xFDF
  6685                           postinc2	equ	0xFDE
  6686                           postdec2	equ	0xFDD
  6687                           fsr2h	equ	0xFDA
  6688                           fsr2l	equ	0xFD9
  6689                           status	equ	0xFD8
  6690                           
  6691 ;; *************** function i1_ToMainLow_sendmsg *****************
  6692 ;; Defined at:
  6693 ;;		line 103 in file "source/messages.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  length          1    wreg     unsigned char 
  6696 ;;  msgtype         1   22[COMRAM] unsigned char 
  6697 ;;  data            2   23[COMRAM] PTR void 
  6698 ;;		 -> buffer_temp(4), NULL(0), main@msgbuffer(11), 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;  length          1   25[COMRAM] unsigned char 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      char 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6710 ;;      Params:         3       0       0       0       0
  6711 ;;      Locals:         1       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0
  6713 ;;      Totals:         4       0       0       0       0
  6714 ;;Total ram usage:        4 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    8
  6717 ;; This function calls:
  6718 ;;		i1_send_msg
  6719 ;; This function is called by:
  6720 ;;		_uart_recv_int_handler
  6721 ;;		_parseUART
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text36
  6726  0025F2                     __ptext36:
  6727                           	opt stack 0
  6728  0025F2                     i1_ToMainLow_sendmsg:
  6729                           	opt stack 16
  6730                           
  6731                           ;incstack = 0
  6732                           ;i1ToMainLow_sendmsg@length stored from wreg
  6733  0025F2  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6734                           
  6735                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6736                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6737  0025F6  0101               	movlb	1	; () banked
  6738  0025F8  0E01               	movlw	high _ToMainLow_MQ
  6739  0025FA  6E0C               	movwf	i1send_msg@qptr+1,c
  6740  0025FC  0101               	movlb	1	; () banked
  6741  0025FE  0E6C               	movlw	low _ToMainLow_MQ
  6742  002600  6E0B               	movwf	i1send_msg@qptr,c
  6743  002602  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6744  002606  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6745  00260A  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6746  00260E  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6747  002612  EC1D  F00E         	call	i1_send_msg	;wreg free
  6748  002616  0012               	return	
  6749  002618                     __end_ofi1_ToMainLow_sendmsg:
  6750                           	opt stack 0
  6751                           pclatu	equ	0xFFB
  6752                           pclath	equ	0xFFA
  6753                           tblptru	equ	0xFF8
  6754                           tblptrh	equ	0xFF7
  6755                           tblptrl	equ	0xFF6
  6756                           tablat	equ	0xFF5
  6757                           prodh	equ	0xFF4
  6758                           prodl	equ	0xFF3
  6759                           intcon	equ	0xFF2
  6760                           postinc0	equ	0xFEE
  6761                           fsr0h	equ	0xFEA
  6762                           fsr0l	equ	0xFE9
  6763                           wreg	equ	0xFE8
  6764                           indf1	equ	0xFE7
  6765                           postdec1	equ	0xFE5
  6766                           fsr1h	equ	0xFE2
  6767                           fsr1l	equ	0xFE1
  6768                           bsr	equ	0xFE0
  6769                           indf2	equ	0xFDF
  6770                           postinc2	equ	0xFDE
  6771                           postdec2	equ	0xFDD
  6772                           fsr2h	equ	0xFDA
  6773                           fsr2l	equ	0xFD9
  6774                           status	equ	0xFD8
  6775                           
  6776 ;; *************** function i1_send_msg *****************
  6777 ;; Defined at:
  6778 ;;		line 24 in file "source/messages.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6781 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6782 ;;  length          1   12[COMRAM] unsigned char 
  6783 ;;  msgtype         1   13[COMRAM] unsigned char 
  6784 ;;  data            2   14[COMRAM] PTR void 
  6785 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  6786 ;;		 -> main@ic(53), 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6789 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6790 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6791 ;;  send_msg        2   17[COMRAM] unsigned int 
  6792 ;;  send_msg        1   19[COMRAM] unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      char 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6802 ;;      Params:         6       0       0       0       0
  6803 ;;      Locals:         5       0       0       0       0
  6804 ;;      Temps:          1       0       0       0       0
  6805 ;;      Totals:        12       0       0       0       0
  6806 ;;Total ram usage:       12 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    7
  6809 ;; This function calls:
  6810 ;;		i1_memcpy
  6811 ;; This function is called by:
  6812 ;;		i1_ToMainLow_sendmsg
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text37
  6817  001C3A                     __ptext37:
  6818                           	opt stack 0
  6819  001C3A                     i1_send_msg:
  6820                           	opt stack 16
  6821                           
  6822                           ;messages.c: 25: unsigned char slot;
  6823                           ;messages.c: 27: msg *qmsg;
  6824                           ;messages.c: 28: size_t tlength = length;
  6825                           
  6826                           ;incstack = 0
  6827  001C3A  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6828  001C3E  6A13               	clrf	i1send_msg@tlength+1,c
  6829                           
  6830                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6831  001C40  EE20 F034          	lfsr	2,52
  6832  001C44  500B               	movf	i1send_msg@qptr,w,c
  6833  001C46  26D9               	addwf	fsr2l,f,c
  6834  001C48  500C               	movf	i1send_msg@qptr+1,w,c
  6835  001C4A  22DA               	addwfc	fsr2h,f,c
  6836  001C4C  50DF               	movf	indf2,w,c
  6837  001C4E  6E14               	movwf	i1send_msg@slot,c
  6838                           
  6839                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6840  001C50  5014               	movf	i1send_msg@slot,w,c
  6841  001C52  0D0D               	mullw	13
  6842  001C54  50F3               	movf	prodl,w,c
  6843  001C56  240B               	addwf	i1send_msg@qptr,w,c
  6844  001C58  6E15               	movwf	i1send_msg@qmsg,c
  6845  001C5A  50F4               	movf	prodh,w,c
  6846  001C5C  200C               	addwfc	i1send_msg@qptr+1,w,c
  6847  001C5E  6E16               	movwf	i1send_msg@qmsg+1,c
  6848                           
  6849                           ;messages.c: 41: if (qmsg->full != 0) {
  6850  001C60  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6851  001C64  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6852  001C68  50DF               	movf	indf2,w,c
  6853  001C6A  B4D8               	btfsc	status,2,c
  6854  001C6C  D002               	goto	i1l4614
  6855                           
  6856                           ;messages.c: 42: return (-1);
  6857  001C6E  0EFF               	movlw	255
  6858  001C70  0012               	return	
  6859  001C72                     i1l4614:
  6860                           
  6861                           ;messages.c: 43: }
  6862                           ;messages.c: 46: qmsg->length = length;
  6863  001C72  EE20 F001          	lfsr	2,1
  6864  001C76  5015               	movf	i1send_msg@qmsg,w,c
  6865  001C78  26D9               	addwf	fsr2l,f,c
  6866  001C7A  5016               	movf	i1send_msg@qmsg+1,w,c
  6867  001C7C  22DA               	addwfc	fsr2h,f,c
  6868  001C7E  C00D  FFDF         	movff	i1send_msg@length,indf2
  6869                           
  6870                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6871  001C82  EE20 F002          	lfsr	2,2
  6872  001C86  5015               	movf	i1send_msg@qmsg,w,c
  6873  001C88  26D9               	addwf	fsr2l,f,c
  6874  001C8A  5016               	movf	i1send_msg@qmsg+1,w,c
  6875  001C8C  22DA               	addwfc	fsr2h,f,c
  6876  001C8E  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6877                           
  6878                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6879  001C92  0E03               	movlw	3
  6880  001C94  2415               	addwf	i1send_msg@qmsg,w,c
  6881  001C96  6E01               	movwf	i1memcpy@d1,c
  6882  001C98  0E00               	movlw	0
  6883  001C9A  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6884  001C9C  6E02               	movwf	i1memcpy@d1+1,c
  6885  001C9E  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6886  001CA2  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6887  001CA6  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6888  001CAA  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6889  001CAE  ECF3  F011         	call	i1_memcpy	;wreg free
  6890                           
  6891                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6892  001CB2  EE20 F034          	lfsr	2,52
  6893  001CB6  500B               	movf	i1send_msg@qptr,w,c
  6894  001CB8  26D9               	addwf	fsr2l,f,c
  6895  001CBA  500C               	movf	i1send_msg@qptr+1,w,c
  6896  001CBC  22DA               	addwfc	fsr2h,f,c
  6897  001CBE  EE10 F034          	lfsr	1,52
  6898  001CC2  500B               	movf	i1send_msg@qptr,w,c
  6899  001CC4  26E1               	addwf	fsr1l,f,c
  6900  001CC6  500C               	movf	i1send_msg@qptr+1,w,c
  6901  001CC8  22E2               	addwfc	fsr1h,f,c
  6902  001CCA  50E7               	movf	indf1,w,c
  6903  001CCC  6E11               	movwf	??i1_send_msg& (0+255),c
  6904  001CCE  2811               	incf	??i1_send_msg,w,c
  6905  001CD0  0B03               	andlw	3
  6906  001CD2  6EDF               	movwf	indf2,c
  6907                           
  6908                           ;messages.c: 59: qmsg->full = 1;
  6909  001CD4  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6910  001CD8  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6911  001CDC  0E01               	movlw	1
  6912  001CDE  6EDF               	movwf	indf2,c
  6913                           
  6914                           ;messages.c: 60: return (1);
  6915  001CE0  0E01               	movlw	1
  6916  001CE2  0012               	return	
  6917  001CE4                     __end_ofi1_send_msg:
  6918                           	opt stack 0
  6919                           pclatu	equ	0xFFB
  6920                           pclath	equ	0xFFA
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           postinc0	equ	0xFEE
  6929                           fsr0h	equ	0xFEA
  6930                           fsr0l	equ	0xFE9
  6931                           wreg	equ	0xFE8
  6932                           indf1	equ	0xFE7
  6933                           postdec1	equ	0xFE5
  6934                           fsr1h	equ	0xFE2
  6935                           fsr1l	equ	0xFE1
  6936                           bsr	equ	0xFE0
  6937                           indf2	equ	0xFDF
  6938                           postinc2	equ	0xFDE
  6939                           postdec2	equ	0xFDD
  6940                           fsr2h	equ	0xFDA
  6941                           fsr2l	equ	0xFD9
  6942                           status	equ	0xFD8
  6943                           
  6944 ;; *************** function i1_memcpy *****************
  6945 ;; Defined at:
  6946 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  d1              2    0[COMRAM] PTR void 
  6949 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6950 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6951 ;;		 -> main@msgbuffer(11), 
  6952 ;;  s1              2    2[COMRAM] PTR const void 
  6953 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6954 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6955 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6956 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6957 ;;		 -> main@ic(53), 
  6958 ;;  n               2    4[COMRAM] unsigned int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6961 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6962 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6963 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6964 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  6965 ;;		 -> main@ic(53), 
  6966 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6967 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6968 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6969 ;;		 -> main@msgbuffer(11), 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    0[COMRAM] PTR void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6979 ;;      Params:         6       0       0       0       0
  6980 ;;      Locals:         4       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0
  6982 ;;      Totals:        10       0       0       0       0
  6983 ;;Total ram usage:       10 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    6
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		i1_send_msg
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text38
  6994  0023E6                     __ptext38:
  6995                           	opt stack 0
  6996  0023E6                     i1_memcpy:
  6997                           	opt stack 16
  6998                           
  6999                           ;incstack = 0
  7000  0023E6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7001  0023EA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7002  0023EE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7003  0023F2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7004  0023F6  D00E               	goto	i1l4590
  7005  0023F8                     i1l4584:
  7006  0023F8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7007  0023FC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7008  002400  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7009  002404  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7010  002408  CFDF FFE7          	movff	indf2,indf1
  7011  00240C  4A09               	infsnz	i1memcpy@s,f,c
  7012  00240E  2A0A               	incf	i1memcpy@s+1,f,c
  7013  002410  4A07               	infsnz	i1memcpy@d,f,c
  7014  002412  2A08               	incf	i1memcpy@d+1,f,c
  7015  002414                     i1l4590:
  7016  002414  0605               	decf	i1memcpy@n,f,c
  7017  002416  A0D8               	btfss	status,0,c
  7018  002418  0606               	decf	i1memcpy@n+1,f,c
  7019  00241A  2805               	incf	i1memcpy@n& (0+255),w,c
  7020  00241C  B4D8               	btfsc	status,2,c
  7021  00241E  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7022  002420  B4D8               	btfsc	status,2,c
  7023                           
  7024                           ;	Return value of i1_memcpy is never used
  7025  002422  0012               	return	
  7026  002424  D7E9               	goto	i1l4584
  7027  002426                     __end_ofi1_memcpy:
  7028                           	opt stack 0
  7029                           pclatu	equ	0xFFB
  7030                           pclath	equ	0xFFA
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           intcon	equ	0xFF2
  7038                           postinc0	equ	0xFEE
  7039                           fsr0h	equ	0xFEA
  7040                           fsr0l	equ	0xFE9
  7041                           wreg	equ	0xFE8
  7042                           indf1	equ	0xFE7
  7043                           postdec1	equ	0xFE5
  7044                           fsr1h	equ	0xFE2
  7045                           fsr1l	equ	0xFE1
  7046                           bsr	equ	0xFE0
  7047                           indf2	equ	0xFDF
  7048                           postinc2	equ	0xFDE
  7049                           postdec2	equ	0xFDD
  7050                           fsr2h	equ	0xFDA
  7051                           fsr2l	equ	0xFD9
  7052                           status	equ	0xFD8
  7053                           
  7054 ;; *************** function _ReadUSART *****************
  7055 ;; Defined at:
  7056 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  data            1    0[COMRAM] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      unsigned char 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7070 ;;      Params:         0       0       0       0       0
  7071 ;;      Locals:         1       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0
  7073 ;;      Totals:         1       0       0       0       0
  7074 ;;Total ram usage:        1 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    6
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_uart_recv_int_handler
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text39
  7085  00263A                     __ptext39:
  7086                           	opt stack 0
  7087  00263A                     _ReadUSART:
  7088                           	opt stack 18
  7089                           
  7090                           ;incstack = 0
  7091  00263A  0EF2               	movlw	242
  7092  00263C  1641               	andwf	_USART_Status,f,c
  7093  00263E  ACAB               	btfss	4011,6,c	;volatile
  7094  002640  D003               	goto	i1l672
  7095  002642  9041               	bcf	_USART_Status,0,c
  7096  002644  B0AB               	btfsc	4011,0,c	;volatile
  7097  002646  8041               	bsf	_USART_Status,0,c
  7098  002648                     i1l672:
  7099  002648  B4AB               	btfsc	4011,2,c	;volatile
  7100  00264A  8441               	bsf	_USART_Status,2,c
  7101  00264C  B2AB               	btfsc	4011,1,c	;volatile
  7102  00264E  8641               	bsf	_USART_Status,3,c
  7103  002650  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7104  002654  5001               	movf	ReadUSART@data,w,c
  7105  002656  0012               	return	
  7106  002658                     __end_of_ReadUSART:
  7107                           	opt stack 0
  7108                           pclatu	equ	0xFFB
  7109                           pclath	equ	0xFFA
  7110                           tblptru	equ	0xFF8
  7111                           tblptrh	equ	0xFF7
  7112                           tblptrl	equ	0xFF6
  7113                           tablat	equ	0xFF5
  7114                           prodh	equ	0xFF4
  7115                           prodl	equ	0xFF3
  7116                           intcon	equ	0xFF2
  7117                           postinc0	equ	0xFEE
  7118                           fsr0h	equ	0xFEA
  7119                           fsr0l	equ	0xFE9
  7120                           wreg	equ	0xFE8
  7121                           indf1	equ	0xFE7
  7122                           postdec1	equ	0xFE5
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           bsr	equ	0xFE0
  7126                           indf2	equ	0xFDF
  7127                           postinc2	equ	0xFDE
  7128                           postdec2	equ	0xFDD
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function _timer1_int_handler *****************
  7134 ;; Defined at:
  7135 ;;		line 34 in file "source/user_interrupts.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  result          2    4[COMRAM] unsigned int 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;		None               void
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7149 ;;      Params:         0       0       0       0       0
  7150 ;;      Locals:         2       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0
  7152 ;;      Totals:         2       0       0       0       0
  7153 ;;Total ram usage:        2 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    7
  7156 ;; This function calls:
  7157 ;;		_ReadTimer1
  7158 ;;		_WriteTimer1
  7159 ;; This function is called by:
  7160 ;;		_InterruptHandlerLow
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text40
  7165  002658                     __ptext40:
  7166                           	opt stack 0
  7167  002658                     _timer1_int_handler:
  7168                           	opt stack 18
  7169                           
  7170                           ;user_interrupts.c: 35: unsigned int result;
  7171                           ;user_interrupts.c: 37: result = ReadTimer1();
  7172                           
  7173                           ;incstack = 0
  7174  002658  EC69  F013         	call	_ReadTimer1	;wreg free
  7175  00265C  C001  F005         	movff	?_ReadTimer1,timer1_int_handler@result
  7176  002660  C002  F006         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  7177                           
  7178                           ;user_interrupts.c: 42: WriteTimer1(0);
  7179  002664  0E00               	movlw	0
  7180  002666  6E02               	movwf	WriteTimer1@timer1+1,c
  7181  002668  0E00               	movlw	0
  7182  00266A  6E01               	movwf	WriteTimer1@timer1,c
  7183  00266C  EC60  F013         	call	_WriteTimer1	;wreg free
  7184  002670  0012               	return	
  7185  002672                     __end_of_timer1_int_handler:
  7186                           	opt stack 0
  7187                           pclatu	equ	0xFFB
  7188                           pclath	equ	0xFFA
  7189                           tblptru	equ	0xFF8
  7190                           tblptrh	equ	0xFF7
  7191                           tblptrl	equ	0xFF6
  7192                           tablat	equ	0xFF5
  7193                           prodh	equ	0xFF4
  7194                           prodl	equ	0xFF3
  7195                           intcon	equ	0xFF2
  7196                           postinc0	equ	0xFEE
  7197                           fsr0h	equ	0xFEA
  7198                           fsr0l	equ	0xFE9
  7199                           wreg	equ	0xFE8
  7200                           indf1	equ	0xFE7
  7201                           postdec1	equ	0xFE5
  7202                           fsr1h	equ	0xFE2
  7203                           fsr1l	equ	0xFE1
  7204                           bsr	equ	0xFE0
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function _WriteTimer1 *****************
  7213 ;; Defined at:
  7214 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  timer1          2    0[COMRAM] unsigned int 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  timer           2    2[COMRAM] struct Timers
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		None
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7228 ;;      Params:         2       0       0       0       0
  7229 ;;      Locals:         2       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0
  7231 ;;      Totals:         4       0       0       0       0
  7232 ;;Total ram usage:        4 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    6
  7235 ;; This function calls:
  7236 ;;		Nothing
  7237 ;; This function is called by:
  7238 ;;		_timer1_int_handler
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text41
  7243  0026C0                     __ptext41:
  7244                           	opt stack 0
  7245  0026C0                     _WriteTimer1:
  7246                           	opt stack 18
  7247                           
  7248                           ;incstack = 0
  7249  0026C0  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7250  0026C4  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7251  0026C8  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7252  0026CC  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7253  0026D0  0012               	return	
  7254  0026D2                     __end_of_WriteTimer1:
  7255                           	opt stack 0
  7256                           pclatu	equ	0xFFB
  7257                           pclath	equ	0xFFA
  7258                           tblptru	equ	0xFF8
  7259                           tblptrh	equ	0xFF7
  7260                           tblptrl	equ	0xFF6
  7261                           tablat	equ	0xFF5
  7262                           prodh	equ	0xFF4
  7263                           prodl	equ	0xFF3
  7264                           intcon	equ	0xFF2
  7265                           postinc0	equ	0xFEE
  7266                           fsr0h	equ	0xFEA
  7267                           fsr0l	equ	0xFE9
  7268                           wreg	equ	0xFE8
  7269                           indf1	equ	0xFE7
  7270                           postdec1	equ	0xFE5
  7271                           fsr1h	equ	0xFE2
  7272                           fsr1l	equ	0xFE1
  7273                           bsr	equ	0xFE0
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _ReadTimer1 *****************
  7282 ;; Defined at:
  7283 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  timer           2    2[COMRAM] struct Timers
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  2    0[COMRAM] unsigned int 
  7290 ;; Registers used:
  7291 ;;		None
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7297 ;;      Params:         2       0       0       0       0
  7298 ;;      Locals:         2       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0
  7300 ;;      Totals:         4       0       0       0       0
  7301 ;;Total ram usage:        4 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    6
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_timer1_int_handler
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text42
  7312  0026D2                     __ptext42:
  7313                           	opt stack 0
  7314  0026D2                     _ReadTimer1:
  7315                           	opt stack 18
  7316                           
  7317                           ;incstack = 0
  7318  0026D2  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  7319  0026D6  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  7320  0026DA  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  7321  0026DE  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  7322  0026E2  0012               	return	
  7323  0026E4                     __end_of_ReadTimer1:
  7324                           	opt stack 0
  7325                           pclatu	equ	0xFFB
  7326                           pclath	equ	0xFFA
  7327                           tblptru	equ	0xFF8
  7328                           tblptrh	equ	0xFF7
  7329                           tblptrl	equ	0xFF6
  7330                           tablat	equ	0xFF5
  7331                           prodh	equ	0xFF4
  7332                           prodl	equ	0xFF3
  7333                           intcon	equ	0xFF2
  7334                           postinc0	equ	0xFEE
  7335                           fsr0h	equ	0xFEA
  7336                           fsr0l	equ	0xFE9
  7337                           wreg	equ	0xFE8
  7338                           indf1	equ	0xFE7
  7339                           postdec1	equ	0xFE5
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           bsr	equ	0xFE0
  7343                           indf2	equ	0xFDF
  7344                           postinc2	equ	0xFDE
  7345                           postdec2	equ	0xFDD
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function _InterruptHandlerHigh *****************
  7351 ;; Defined at:
  7352 ;;		line 83 in file "source/interrupts.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;		None               void
  7359 ;; Registers used:
  7360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7366 ;;      Params:         0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0
  7368 ;;      Temps:          0      14       0       0       0
  7369 ;;      Totals:         0      14       0       0       0
  7370 ;;Total ram usage:       14 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    5
  7373 ;; This function calls:
  7374 ;;		_SleepIfOkay
  7375 ;;		_i2c_int_handler
  7376 ;;		_timer0_int_handler
  7377 ;; This function is called by:
  7378 ;;		Interrupt level 2
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	intcode
  7383  000008                     __pintcode:
  7384                           	opt stack 0
  7385  000008                     _InterruptHandlerHigh:
  7386                           	opt stack 15
  7387                           
  7388                           ;incstack = 0
  7389  000008  CFFA F0A5          	movff	pclath,??_InterruptHandlerHigh
  7390  00000C  CFFB F0A6          	movff	pclatu,??_InterruptHandlerHigh+1
  7391  000010  EFBB  F00E         	goto	int_func
  7392                           pclatu	equ	0xFFB
  7393                           pclath	equ	0xFFA
  7394                           tblptru	equ	0xFF8
  7395                           tblptrh	equ	0xFF7
  7396                           tblptrl	equ	0xFF6
  7397                           tablat	equ	0xFF5
  7398                           prodh	equ	0xFF4
  7399                           prodl	equ	0xFF3
  7400                           intcon	equ	0xFF2
  7401                           postinc0	equ	0xFEE
  7402                           fsr0h	equ	0xFEA
  7403                           fsr0l	equ	0xFE9
  7404                           wreg	equ	0xFE8
  7405                           indf1	equ	0xFE7
  7406                           postdec1	equ	0xFE5
  7407                           fsr1h	equ	0xFE2
  7408                           fsr1l	equ	0xFE1
  7409                           bsr	equ	0xFE0
  7410                           indf2	equ	0xFDF
  7411                           postinc2	equ	0xFDE
  7412                           postdec2	equ	0xFDD
  7413                           fsr2h	equ	0xFDA
  7414                           fsr2l	equ	0xFD9
  7415                           status	equ	0xFD8
  7416                           
  7417                           	psect	intcode_body
  7418  001D76                     __pintcode_body:
  7419                           	opt stack 15
  7420  001D76                     int_func:
  7421                           	opt stack 15
  7422  001D76  CFE9 F0A7          	movff	fsr0l,??_InterruptHandlerHigh+2
  7423  001D7A  CFEA F0A8          	movff	fsr0h,??_InterruptHandlerHigh+3
  7424  001D7E  CFE1 F0A9          	movff	fsr1l,??_InterruptHandlerHigh+4
  7425  001D82  CFE2 F0AA          	movff	fsr1h,??_InterruptHandlerHigh+5
  7426  001D86  CFD9 F0AB          	movff	fsr2l,??_InterruptHandlerHigh+6
  7427  001D8A  CFDA F0AC          	movff	fsr2h,??_InterruptHandlerHigh+7
  7428  001D8E  CFF3 F0AD          	movff	prodl,??_InterruptHandlerHigh+8
  7429  001D92  CFF4 F0AE          	movff	prodh,??_InterruptHandlerHigh+9
  7430  001D96  CFF6 F0AF          	movff	tblptrl,??_InterruptHandlerHigh+10
  7431  001D9A  CFF7 F0B0          	movff	tblptrh,??_InterruptHandlerHigh+11
  7432  001D9E  CFF8 F0B1          	movff	tblptru,??_InterruptHandlerHigh+12
  7433  001DA2  CFF5 F0B2          	movff	tablat,??_InterruptHandlerHigh+13
  7434                           
  7435                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  7436  001DA6  A69E               	btfss	3998,3,c	;volatile
  7437  001DA8  D003               	goto	i2l3646
  7438                           
  7439                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  7440  001DAA  969E               	bcf	3998,3,c	;volatile
  7441                           
  7442                           ;interrupts.c: 92: i2c_int_handler();
  7443  001DAC  EC0C  F013         	call	_i2c_int_handler	;wreg free
  7444  001DB0                     i2l3646:
  7445                           
  7446                           ;interrupts.c: 93: }
  7447                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  7448  001DB0  A4F2               	btfss	intcon,2,c	;volatile
  7449  001DB2  D003               	goto	i2l3652
  7450                           
  7451                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  7452  001DB4  94F2               	bcf	intcon,2,c	;volatile
  7453                           
  7454                           ;interrupts.c: 99: timer0_int_handler();
  7455  001DB6  ECB7  F012         	call	_timer0_int_handler	;wreg free
  7456  001DBA                     i2l3652:
  7457                           
  7458                           ;interrupts.c: 100: }
  7459                           ;interrupts.c: 109: SleepIfOkay();
  7460  001DBA  ECE4  F00F         	call	_SleepIfOkay	;wreg free
  7461  001DBE  C0B2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7462  001DC2  C0B1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7463  001DC6  C0B0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7464  001DCA  C0AF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7465  001DCE  C0AE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7466  001DD2  C0AD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7467  001DD6  C0AC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7468  001DDA  C0AB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7469  001DDE  C0AA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7470  001DE2  C0A9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7471  001DE6  C0A8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7472  001DEA  C0A7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7473  001DEE  C0A6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7474  001DF2  C0A5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7475  001DF6  0011               	retfie		f
  7476  001DF8                     __end_of_InterruptHandlerHigh:
  7477                           	opt stack 0
  7478                           pclatu	equ	0xFFB
  7479                           pclath	equ	0xFFA
  7480                           tblptru	equ	0xFF8
  7481                           tblptrh	equ	0xFF7
  7482                           tblptrl	equ	0xFF6
  7483                           tablat	equ	0xFF5
  7484                           prodh	equ	0xFF4
  7485                           prodl	equ	0xFF3
  7486                           intcon	equ	0xFF2
  7487                           postinc0	equ	0xFEE
  7488                           fsr0h	equ	0xFEA
  7489                           fsr0l	equ	0xFE9
  7490                           wreg	equ	0xFE8
  7491                           indf1	equ	0xFE7
  7492                           postdec1	equ	0xFE5
  7493                           fsr1h	equ	0xFE2
  7494                           fsr1l	equ	0xFE1
  7495                           bsr	equ	0xFE0
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           postdec2	equ	0xFDD
  7499                           fsr2h	equ	0xFDA
  7500                           fsr2l	equ	0xFD9
  7501                           status	equ	0xFD8
  7502                           
  7503 ;; *************** function _timer0_int_handler *****************
  7504 ;; Defined at:
  7505 ;;		line 16 in file "source/user_interrupts.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  msgtype         2    0        int 
  7510 ;;  length          2    0        int 
  7511 ;;  val             1    5[BANK0 ] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;		None               void
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7521 ;;      Params:         0       0       0       0       0
  7522 ;;      Locals:         0       1       0       0       0
  7523 ;;      Temps:          0       1       0       0       0
  7524 ;;      Totals:         0       2       0       0       0
  7525 ;;Total ram usage:        2 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    1
  7528 ;; This function calls:
  7529 ;;		_WriteTimer0
  7530 ;; This function is called by:
  7531 ;;		_InterruptHandlerHigh
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text44
  7536  00256E                     __ptext44:
  7537                           	opt stack 0
  7538  00256E                     _timer0_int_handler:
  7539                           	opt stack 18
  7540                           
  7541                           ;user_interrupts.c: 17: unsigned char val = 0x32;
  7542                           
  7543                           ;incstack = 0
  7544  00256E  0100               	movlb	0	; () banked
  7545  002570  6F84               	movwf	??_timer0_int_handler& (0+255),b
  7546  002572  0E32               	movlw	50
  7547  002574  0100               	movlb	0	; () banked
  7548  002576  0100               	movlb	0	; () banked
  7549  002578  6F85               	movwf	timer0_int_handler@val& (0+255),b
  7550  00257A  0100               	movlb	0	; () banked
  7551  00257C  5184               	movf	??_timer0_int_handler& (0+255),w,b
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;user_interrupts.c: 18: int length, msgtype;
  7555                           ;user_interrupts.c: 21: WriteTimer0(0);
  7556  00257E  0E00               	movlw	0
  7557  002580  0100               	movlb	0	; () banked
  7558  002582  0100               	movlb	0	; () banked
  7559  002584  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7560  002586  0E00               	movlw	0
  7561  002588  0100               	movlb	0	; () banked
  7562  00258A  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  7563  00258C  EC72  F013         	call	_WriteTimer0	;wreg free
  7564                           
  7565                           ;user_interrupts.c: 22: if(x == 0)
  7566  002590  503E               	movf	_x+1,w,c
  7567  002592  103D               	iorwf	_x,w,c
  7568  002594  A4D8               	btfss	status,2,c
  7569  002596  0012               	return	
  7570                           
  7571                           ;user_interrupts.c: 23: {
  7572                           ;user_interrupts.c: 24: x= 1;
  7573  002598  0E00               	movlw	0
  7574  00259A  6E3E               	movwf	_x+1,c
  7575  00259C  0E01               	movlw	1
  7576  00259E  6E3D               	movwf	_x,c
  7577  0025A0  0012               	return	
  7578  0025A2                     __end_of_timer0_int_handler:
  7579                           	opt stack 0
  7580                           pclatu	equ	0xFFB
  7581                           pclath	equ	0xFFA
  7582                           tblptru	equ	0xFF8
  7583                           tblptrh	equ	0xFF7
  7584                           tblptrl	equ	0xFF6
  7585                           tablat	equ	0xFF5
  7586                           prodh	equ	0xFF4
  7587                           prodl	equ	0xFF3
  7588                           intcon	equ	0xFF2
  7589                           postinc0	equ	0xFEE
  7590                           fsr0h	equ	0xFEA
  7591                           fsr0l	equ	0xFE9
  7592                           wreg	equ	0xFE8
  7593                           indf1	equ	0xFE7
  7594                           postdec1	equ	0xFE5
  7595                           fsr1h	equ	0xFE2
  7596                           fsr1l	equ	0xFE1
  7597                           bsr	equ	0xFE0
  7598                           indf2	equ	0xFDF
  7599                           postinc2	equ	0xFDE
  7600                           postdec2	equ	0xFDD
  7601                           fsr2h	equ	0xFDA
  7602                           fsr2l	equ	0xFD9
  7603                           status	equ	0xFD8
  7604                           
  7605 ;; *************** function _WriteTimer0 *****************
  7606 ;; Defined at:
  7607 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  timer0          2    0[BANK0 ] unsigned int 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  timer           2    2[BANK0 ] struct Timers
  7612 ;; Return value:  Size  Location     Type
  7613 ;;		None               void
  7614 ;; Registers used:
  7615 ;;		None
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7621 ;;      Params:         0       2       0       0       0
  7622 ;;      Locals:         0       2       0       0       0
  7623 ;;      Temps:          0       0       0       0       0
  7624 ;;      Totals:         0       4       0       0       0
  7625 ;;Total ram usage:        4 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_timer0_int_handler
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text45
  7635  0026E4                     __ptext45:
  7636                           	opt stack 0
  7637  0026E4                     _WriteTimer0:
  7638                           	opt stack 18
  7639                           
  7640                           ;incstack = 0
  7641  0026E4  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7642  0026E8  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7643  0026EC  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7644  0026F0  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7645  0026F4  0012               	return	
  7646  0026F6                     __end_of_WriteTimer0:
  7647                           	opt stack 0
  7648                           pclatu	equ	0xFFB
  7649                           pclath	equ	0xFFA
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           prodh	equ	0xFF4
  7655                           prodl	equ	0xFF3
  7656                           intcon	equ	0xFF2
  7657                           postinc0	equ	0xFEE
  7658                           fsr0h	equ	0xFEA
  7659                           fsr0l	equ	0xFE9
  7660                           wreg	equ	0xFE8
  7661                           indf1	equ	0xFE7
  7662                           postdec1	equ	0xFE5
  7663                           fsr1h	equ	0xFE2
  7664                           fsr1l	equ	0xFE1
  7665                           bsr	equ	0xFE0
  7666                           indf2	equ	0xFDF
  7667                           postinc2	equ	0xFDE
  7668                           postdec2	equ	0xFDD
  7669                           fsr2h	equ	0xFDA
  7670                           fsr2l	equ	0xFD9
  7671                           status	equ	0xFD8
  7672                           
  7673 ;; *************** function _i2c_int_handler *****************
  7674 ;; Defined at:
  7675 ;;		line 196 in file "source/my_i2c.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;		None               void
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7689 ;;      Params:         0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    4
  7696 ;; This function calls:
  7697 ;;		_i2c_master_int_handler
  7698 ;;		_i2c_slave_int_handler
  7699 ;; This function is called by:
  7700 ;;		_InterruptHandlerHigh
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text46
  7705  002618                     __ptext46:
  7706                           	opt stack 0
  7707  002618                     _i2c_int_handler:
  7708                           	opt stack 15
  7709                           
  7710                           ;my_i2c.c: 197: switch (i2c_mode){
  7711                           
  7712                           ;incstack = 0
  7713  002618  D006               	goto	i2l3662
  7714  00261A                     i2l3656:
  7715                           
  7716                           ;my_i2c.c: 199: i2c_master_int_handler();
  7717  00261A  ECDF  F005         	call	_i2c_master_int_handler	;wreg free
  7718                           
  7719                           ;my_i2c.c: 200: break;
  7720  00261E  0012               	return	
  7721  002620                     i2l3658:
  7722                           
  7723                           ;my_i2c.c: 203: i2c_slave_int_handler();
  7724  002620  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  7725                           
  7726                           ;my_i2c.c: 204: break;
  7727  002624  0012               	return	
  7728  002626                     i2l3662:
  7729  002626  0100               	movlb	0	; () banked
  7730  002628  0100               	movlb	0	; () banked
  7731  00262A  51CC               	movf	_i2c_mode& (0+255),w,b
  7732                           
  7733                           ; Switch size 1, requested type "space"
  7734                           ; Number of cases is 2, Range of values is 1 to 2
  7735                           ; switch strategies available:
  7736                           ; Name         Instructions Cycles
  7737                           ; simple_byte            7     4 (average)
  7738                           ;	Chosen strategy is simple_byte
  7739  00262C  0A01               	xorlw	1	; case 1
  7740  00262E  B4D8               	btfsc	status,2,c
  7741  002630  D7F4               	goto	i2l3656
  7742  002632  0A03               	xorlw	3	; case 2
  7743  002634  A4D8               	btfss	status,2,c
  7744  002636  0012               	return	
  7745  002638  D7F3               	goto	i2l3658
  7746  00263A                     __end_of_i2c_int_handler:
  7747                           	opt stack 0
  7748                           pclatu	equ	0xFFB
  7749                           pclath	equ	0xFFA
  7750                           tblptru	equ	0xFF8
  7751                           tblptrh	equ	0xFF7
  7752                           tblptrl	equ	0xFF6
  7753                           tablat	equ	0xFF5
  7754                           prodh	equ	0xFF4
  7755                           prodl	equ	0xFF3
  7756                           intcon	equ	0xFF2
  7757                           postinc0	equ	0xFEE
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           indf1	equ	0xFE7
  7762                           postdec1	equ	0xFE5
  7763                           fsr1h	equ	0xFE2
  7764                           fsr1l	equ	0xFE1
  7765                           bsr	equ	0xFE0
  7766                           indf2	equ	0xFDF
  7767                           postinc2	equ	0xFDE
  7768                           postdec2	equ	0xFDD
  7769                           fsr2h	equ	0xFDA
  7770                           fsr2l	equ	0xFD9
  7771                           status	equ	0xFD8
  7772                           
  7773 ;; *************** function _i2c_slave_int_handler *****************
  7774 ;; Defined at:
  7775 ;;		line 213 in file "source/my_i2c.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;		None
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  7780 ;;  data_read       1   36[BANK0 ] unsigned char 
  7781 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  7782 ;;  msg_to_send     1   34[BANK0 ] unsigned char 
  7783 ;;  i2c_data        1   33[BANK0 ] unsigned char 
  7784 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  7785 ;;  data_written    1   31[BANK0 ] unsigned char 
  7786 ;; Return value:  Size  Location     Type
  7787 ;;		None               void
  7788 ;; Registers used:
  7789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7795 ;;      Params:         0       0       0       0       0
  7796 ;;      Locals:         0       9       0       0       0
  7797 ;;      Temps:          0       2       0       0       0
  7798 ;;      Totals:         0      11       0       0       0
  7799 ;;Total ram usage:       11 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:    3
  7802 ;; This function calls:
  7803 ;;		_ToMainHigh_sendmsg
  7804 ;;		_handle_start
  7805 ;;		_start_i2c_slave_reply
  7806 ;; This function is called by:
  7807 ;;		_i2c_int_handler
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text47
  7812  0000BA                     __ptext47:
  7813                           	opt stack 0
  7814  0000BA                     _i2c_slave_int_handler:
  7815                           	opt stack 15
  7816                           
  7817                           ;my_i2c.c: 214: unsigned char i2c_data;
  7818                           ;my_i2c.c: 215: unsigned char data_read = 0;
  7819                           
  7820                           ;incstack = 0
  7821  0000BA  0100               	movlb	0	; () banked
  7822  0000BC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7823  0000BE  0E00               	movlw	0
  7824  0000C0  0100               	movlb	0	; () banked
  7825  0000C2  0100               	movlb	0	; () banked
  7826  0000C4  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7827  0000C6  0100               	movlb	0	; () banked
  7828  0000C8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7829                           
  7830                           ;my_i2c.c: 216: unsigned char data_written = 0;
  7831  0000CA  0100               	movlb	0	; () banked
  7832  0000CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7833  0000CE  0E00               	movlw	0
  7834  0000D0  0100               	movlb	0	; () banked
  7835  0000D2  0100               	movlb	0	; () banked
  7836  0000D4  6F9F               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7837  0000D6  0100               	movlb	0	; () banked
  7838  0000D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7839                           
  7840                           ;my_i2c.c: 217: unsigned char msg_ready = 0;
  7841  0000DA  0100               	movlb	0	; () banked
  7842  0000DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7843  0000DE  0E00               	movlw	0
  7844  0000E0  0100               	movlb	0	; () banked
  7845  0000E2  0100               	movlb	0	; () banked
  7846  0000E4  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7847  0000E6  0100               	movlb	0	; () banked
  7848  0000E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7849                           
  7850                           ;my_i2c.c: 218: unsigned char msg_to_send = 0;
  7851  0000EA  0100               	movlb	0	; () banked
  7852  0000EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7853  0000EE  0E00               	movlw	0
  7854  0000F0  0100               	movlb	0	; () banked
  7855  0000F2  0100               	movlb	0	; () banked
  7856  0000F4  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7857  0000F6  0100               	movlb	0	; () banked
  7858  0000F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7859                           
  7860                           ;my_i2c.c: 219: unsigned char overrun_error = 0;
  7861  0000FA  0100               	movlb	0	; () banked
  7862  0000FC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7863  0000FE  0E00               	movlw	0
  7864  000100  0100               	movlb	0	; () banked
  7865  000102  0100               	movlb	0	; () banked
  7866  000104  6FA0               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7867  000106  0100               	movlb	0	; () banked
  7868  000108  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;my_i2c.c: 220: unsigned char error_buf[3];
  7872                           ;my_i2c.c: 223: if (SSPCON1bits.SSPOV == 1) {
  7873  00010A  ACC6               	btfss	4038,6,c	;volatile
  7874  00010C  D029               	goto	i2l4336
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;my_i2c.c: 224: SSPCON1bits.SSPOV = 0;
  7878  00010E  9CC6               	bcf	4038,6,c	;volatile
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
  7882  000110  0100               	movlb	0	; () banked
  7883  000112  EE20 F00D          	lfsr	2,13
  7884  000116  0100               	movlb	0	; () banked
  7885  000118  51C8               	movf	_ic_ptr& (0+255),w,b
  7886  00011A  26D9               	addwf	fsr2l,f,c
  7887  00011C  0100               	movlb	0	; () banked
  7888  00011E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7889  000120  22DA               	addwfc	fsr2h,f,c
  7890  000122  0E05               	movlw	5
  7891  000124  6EDF               	movwf	indf2,c
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;my_i2c.c: 229: overrun_error = 1;
  7895  000126  0100               	movlb	0	; () banked
  7896  000128  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7897  00012A  0E01               	movlw	1
  7898  00012C  0100               	movlb	0	; () banked
  7899  00012E  0100               	movlb	0	; () banked
  7900  000130  6FA0               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7901  000132  0100               	movlb	0	; () banked
  7902  000134  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;my_i2c.c: 230: ic_ptr->error_count++;
  7906  000136  0100               	movlb	0	; () banked
  7907  000138  EE20 F00F          	lfsr	2,15
  7908  00013C  0100               	movlb	0	; () banked
  7909  00013E  51C8               	movf	_ic_ptr& (0+255),w,b
  7910  000140  26D9               	addwf	fsr2l,f,c
  7911  000142  0100               	movlb	0	; () banked
  7912  000144  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7913  000146  22DA               	addwfc	fsr2h,f,c
  7914  000148  2ADF               	incf	indf2,f,c
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;my_i2c.c: 231: ic_ptr->error_code = 0x4;
  7918  00014A  0100               	movlb	0	; () banked
  7919  00014C  EE20 F00E          	lfsr	2,14
  7920  000150  0100               	movlb	0	; () banked
  7921  000152  51C8               	movf	_ic_ptr& (0+255),w,b
  7922  000154  26D9               	addwf	fsr2l,f,c
  7923  000156  0100               	movlb	0	; () banked
  7924  000158  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7925  00015A  22DA               	addwfc	fsr2h,f,c
  7926  00015C  0E04               	movlw	4
  7927  00015E  6EDF               	movwf	indf2,c
  7928  000160                     i2l4336:
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;my_i2c.c: 232: }
  7932                           ;my_i2c.c: 234: if (SSPSTATbits.BF == 1) {
  7933  000160  A0C7               	btfss	4039,0,c	;volatile
  7934  000162  D00A               	goto	i2l4342
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;my_i2c.c: 235: i2c_data = SSPBUF;
  7938  000164  CFC9 F0A1          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;my_i2c.c: 236: data_read = 1;
  7942  000168  0100               	movlb	0	; () banked
  7943  00016A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7944  00016C  0E01               	movlw	1
  7945  00016E  0100               	movlb	0	; () banked
  7946  000170  0100               	movlb	0	; () banked
  7947  000172  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7948  000174  0100               	movlb	0	; () banked
  7949  000176  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7950  000178                     i2l4342:
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;my_i2c.c: 237: }
  7954                           ;my_i2c.c: 239: if (!overrun_error) {
  7955  000178  0100               	movlb	0	; () banked
  7956  00017A  0100               	movlb	0	; () banked
  7957  00017C  67A0               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7958  00017E  D1CE               	goto	i2l327
  7959  000180  D1B7               	goto	i2l4430
  7960  000182                     i2l329:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;my_i2c.c: 242: {
  7964                           ;my_i2c.c: 244: if (SSPSTATbits.S == 1) {
  7965  000182  A6C7               	btfss	4039,3,c	;volatile
  7966  000184  D1CB               	goto	i2l327
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;my_i2c.c: 245: handle_start(data_read);
  7970  000186  0100               	movlb	0	; () banked
  7971  000188  0100               	movlb	0	; () banked
  7972  00018A  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7973  00018C  ECB7  F00D         	call	_handle_start
  7974                           
  7975                           ;my_i2c.c: 247: if (ic_ptr->status == 0x8) {
  7976  000190  0100               	movlb	0	; () banked
  7977  000192  EE20 F00D          	lfsr	2,13
  7978  000196  0100               	movlb	0	; () banked
  7979  000198  51C8               	movf	_ic_ptr& (0+255),w,b
  7980  00019A  26D9               	addwf	fsr2l,f,c
  7981  00019C  0100               	movlb	0	; () banked
  7982  00019E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7983  0001A0  22DA               	addwfc	fsr2h,f,c
  7984  0001A2  0E08               	movlw	8
  7985  0001A4  62DF               	cpfseq	indf2,c
  7986  0001A6  D1BA               	goto	i2l327
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;my_i2c.c: 248: data_read = 0;
  7990  0001A8  0100               	movlb	0	; () banked
  7991  0001AA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7992  0001AC  0E00               	movlw	0
  7993  0001AE  0100               	movlb	0	; () banked
  7994  0001B0  0100               	movlb	0	; () banked
  7995  0001B2  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7996  0001B4  0100               	movlb	0	; () banked
  7997  0001B6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7998                           
  7999                           ;my_i2c.c: 249: msg_to_send = 1;
  8000  0001B8  0100               	movlb	0	; () banked
  8001  0001BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8002  0001BC  0E01               	movlw	1
  8003  0001BE  0100               	movlb	0	; () banked
  8004  0001C0  0100               	movlb	0	; () banked
  8005  0001C2  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8006  0001C4  D187               	goto	L8
  8007  0001C6                     i2l333:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;my_i2c.c: 255: {
  8011                           ;my_i2c.c: 257: if (SSPSTATbits.P == 1) {
  8012  0001C6  A8C7               	btfss	4039,4,c	;volatile
  8013  0001C8  D030               	goto	i2l4362
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;my_i2c.c: 260: ic_ptr->event_count++;
  8017  0001CA  0100               	movlb	0	; () banked
  8018  0001CC  EE20 F00C          	lfsr	2,12
  8019  0001D0  0100               	movlb	0	; () banked
  8020  0001D2  51C8               	movf	_ic_ptr& (0+255),w,b
  8021  0001D4  26D9               	addwf	fsr2l,f,c
  8022  0001D6  0100               	movlb	0	; () banked
  8023  0001D8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8024  0001DA  22DA               	addwfc	fsr2h,f,c
  8025  0001DC  2ADF               	incf	indf2,f,c
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;my_i2c.c: 261: if (data_read) {
  8029  0001DE  0100               	movlb	0	; () banked
  8030  0001E0  0100               	movlb	0	; () banked
  8031  0001E2  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  8032  0001E4  B4D8               	btfsc	status,2,c
  8033  0001E6  D179               	goto	L10
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;my_i2c.c: 262: if (SSPSTATbits.D_A == 0) {
  8037  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  8038  0001EA  D009               	goto	i2l4360
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;my_i2c.c: 263: msg_ready = 1;
  8042  0001EC  0100               	movlb	0	; () banked
  8043  0001EE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8044  0001F0  0E01               	movlw	1
  8045  0001F2  0100               	movlb	0	; () banked
  8046  0001F4  0100               	movlb	0	; () banked
  8047  0001F6  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  8048  0001F8  0100               	movlb	0	; () banked
  8049  0001FA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8050                           
  8051                           ;my_i2c.c: 264: } else {
  8052  0001FC  D16E               	goto	L10
  8053  0001FE                     i2l4360:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;my_i2c.c: 265: ic_ptr->error_count++;
  8057  0001FE  0100               	movlb	0	; () banked
  8058  000200  EE20 F00F          	lfsr	2,15
  8059  000204  0100               	movlb	0	; () banked
  8060  000206  51C8               	movf	_ic_ptr& (0+255),w,b
  8061  000208  26D9               	addwf	fsr2l,f,c
  8062  00020A  0100               	movlb	0	; () banked
  8063  00020C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8064  00020E  22DA               	addwfc	fsr2h,f,c
  8065  000210  2ADF               	incf	indf2,f,c
  8066                           
  8067                           ;my_i2c.c: 266: ic_ptr->error_code = 0x6;
  8068  000212  0100               	movlb	0	; () banked
  8069  000214  EE20 F00E          	lfsr	2,14
  8070  000218  0100               	movlb	0	; () banked
  8071  00021A  51C8               	movf	_ic_ptr& (0+255),w,b
  8072  00021C  26D9               	addwf	fsr2l,f,c
  8073  00021E  0100               	movlb	0	; () banked
  8074  000220  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8075  000222  22DA               	addwfc	fsr2h,f,c
  8076  000224  0E06               	movlw	6
  8077  000226  6EDF               	movwf	indf2,c
  8078                           
  8079                           ; BSR set to: 0
  8080  000228  D158               	goto	L10
  8081  00022A                     i2l4362:
  8082                           
  8083                           ; BSR set to: 0
  8084  00022A  0100               	movlb	0	; () banked
  8085  00022C  0100               	movlb	0	; () banked
  8086  00022E  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  8087  000230  B4D8               	btfsc	status,2,c
  8088  000232  D174               	goto	i2l327
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;my_i2c.c: 271: ic_ptr->event_count++;
  8092  000234  0100               	movlb	0	; () banked
  8093  000236  EE20 F00C          	lfsr	2,12
  8094  00023A  0100               	movlb	0	; () banked
  8095  00023C  51C8               	movf	_ic_ptr& (0+255),w,b
  8096  00023E  26D9               	addwf	fsr2l,f,c
  8097  000240  0100               	movlb	0	; () banked
  8098  000242  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8099  000244  22DA               	addwfc	fsr2h,f,c
  8100  000246  2ADF               	incf	indf2,f,c
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;my_i2c.c: 272: if (SSPSTATbits.D_A == 0) {
  8104  000248  BAC7               	btfsc	4039,5,c	;volatile
  8105  00024A  D019               	goto	i2l4378
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;my_i2c.c: 273: if (SSPSTATbits.R_W == 0) {
  8109  00024C  B4C7               	btfsc	4039,2,c	;volatile
  8110  00024E  D00B               	goto	i2l4372
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;my_i2c.c: 274: ic_ptr->status = 0x7;
  8114  000250  0100               	movlb	0	; () banked
  8115  000252  EE20 F00D          	lfsr	2,13
  8116  000256  0100               	movlb	0	; () banked
  8117  000258  51C8               	movf	_ic_ptr& (0+255),w,b
  8118  00025A  26D9               	addwf	fsr2l,f,c
  8119  00025C  0100               	movlb	0	; () banked
  8120  00025E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8121  000260  22DA               	addwfc	fsr2h,f,c
  8122  000262  0E07               	movlw	7
  8123  000264  D076               	goto	L7
  8124  000266                     i2l4372:
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;my_i2c.c: 276: ic_ptr->status = 0x8;
  8128  000266  0100               	movlb	0	; () banked
  8129  000268  EE20 F00D          	lfsr	2,13
  8130  00026C  0100               	movlb	0	; () banked
  8131  00026E  51C8               	movf	_ic_ptr& (0+255),w,b
  8132  000270  26D9               	addwf	fsr2l,f,c
  8133  000272  0100               	movlb	0	; () banked
  8134  000274  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8135  000276  22DA               	addwfc	fsr2h,f,c
  8136  000278  0E08               	movlw	8
  8137  00027A  6EDF               	movwf	indf2,c
  8138  00027C  D11D               	goto	L11
  8139  00027E                     i2l4378:
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;my_i2c.c: 282: ic_ptr->error_count++;
  8143  00027E  0100               	movlb	0	; () banked
  8144  000280  EE20 F00F          	lfsr	2,15
  8145  000284  0100               	movlb	0	; () banked
  8146  000286  51C8               	movf	_ic_ptr& (0+255),w,b
  8147  000288  26D9               	addwf	fsr2l,f,c
  8148  00028A  0100               	movlb	0	; () banked
  8149  00028C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8150  00028E  22DA               	addwfc	fsr2h,f,c
  8151  000290  2ADF               	incf	indf2,f,c
  8152                           
  8153                           ;my_i2c.c: 283: ic_ptr->status = 0x5;
  8154  000292  0100               	movlb	0	; () banked
  8155  000294  EE20 F00D          	lfsr	2,13
  8156  000298  0100               	movlb	0	; () banked
  8157  00029A  51C8               	movf	_ic_ptr& (0+255),w,b
  8158  00029C  26D9               	addwf	fsr2l,f,c
  8159  00029E  0100               	movlb	0	; () banked
  8160  0002A0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8161  0002A2  22DA               	addwfc	fsr2h,f,c
  8162  0002A4  0E05               	movlw	5
  8163  0002A6  6EDF               	movwf	indf2,c
  8164                           
  8165                           ;my_i2c.c: 284: ic_ptr->error_code = 0x6;
  8166  0002A8  0100               	movlb	0	; () banked
  8167  0002AA  EE20 F00E          	lfsr	2,14
  8168  0002AE  0100               	movlb	0	; () banked
  8169  0002B0  51C8               	movf	_ic_ptr& (0+255),w,b
  8170  0002B2  26D9               	addwf	fsr2l,f,c
  8171  0002B4  0100               	movlb	0	; () banked
  8172  0002B6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8173  0002B8  22DA               	addwfc	fsr2h,f,c
  8174  0002BA  0E06               	movlw	6
  8175  0002BC  D04A               	goto	L7
  8176  0002BE                     i2l4380:
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;my_i2c.c: 290: {
  8180                           ;my_i2c.c: 291: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8181  0002BE  0100               	movlb	0	; () banked
  8182  0002C0  EE20 F01B          	lfsr	2,27
  8183  0002C4  0100               	movlb	0	; () banked
  8184  0002C6  51C8               	movf	_ic_ptr& (0+255),w,b
  8185  0002C8  26D9               	addwf	fsr2l,f,c
  8186  0002CA  0100               	movlb	0	; () banked
  8187  0002CC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8188  0002CE  22DA               	addwfc	fsr2h,f,c
  8189  0002D0  50DF               	movf	indf2,w,c
  8190  0002D2  0100               	movlb	0	; () banked
  8191  0002D4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8192  0002D6  0100               	movlb	0	; () banked
  8193  0002D8  EE20 F01A          	lfsr	2,26
  8194  0002DC  0100               	movlb	0	; () banked
  8195  0002DE  51C8               	movf	_ic_ptr& (0+255),w,b
  8196  0002E0  26D9               	addwf	fsr2l,f,c
  8197  0002E2  0100               	movlb	0	; () banked
  8198  0002E4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8199  0002E6  22DA               	addwfc	fsr2h,f,c
  8200  0002E8  50DF               	movf	indf2,w,c
  8201  0002EA  0100               	movlb	0	; () banked
  8202  0002EC  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  8203  0002EE  B0D8               	btfsc	status,0,c
  8204  0002F0  D0F4               	goto	L10
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;my_i2c.c: 292: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8208  0002F2  0100               	movlb	0	; () banked
  8209  0002F4  EE20 F01B          	lfsr	2,27
  8210  0002F8  0100               	movlb	0	; () banked
  8211  0002FA  51C8               	movf	_ic_ptr& (0+255),w,b
  8212  0002FC  26D9               	addwf	fsr2l,f,c
  8213  0002FE  0100               	movlb	0	; () banked
  8214  000300  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8215  000302  22DA               	addwfc	fsr2h,f,c
  8216  000304  50DF               	movf	indf2,w,c
  8217  000306  0100               	movlb	0	; () banked
  8218  000308  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8219  00030A  0100               	movlb	0	; () banked
  8220  00030C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8221  00030E  0D01               	mullw	1
  8222  000310  0E10               	movlw	16
  8223  000312  26F3               	addwf	prodl,f,c
  8224  000314  0E00               	movlw	0
  8225  000316  22F4               	addwfc	prodh,f,c
  8226  000318  50F3               	movf	prodl,w,c
  8227  00031A  0100               	movlb	0	; () banked
  8228  00031C  0100               	movlb	0	; () banked
  8229  00031E  25C8               	addwf	_ic_ptr& (0+255),w,b
  8230  000320  6ED9               	movwf	fsr2l,c
  8231  000322  50F4               	movf	prodh,w,c
  8232  000324  0100               	movlb	0	; () banked
  8233  000326  0100               	movlb	0	; () banked
  8234  000328  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8235  00032A  6EDA               	movwf	fsr2h,c
  8236  00032C  50DF               	movf	indf2,w,c
  8237  00032E  6EC9               	movwf	4041,c	;volatile
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;my_i2c.c: 293: ic_ptr->outbufind++;
  8241  000330  0100               	movlb	0	; () banked
  8242  000332  EE20 F01B          	lfsr	2,27
  8243  000336  0100               	movlb	0	; () banked
  8244  000338  51C8               	movf	_ic_ptr& (0+255),w,b
  8245  00033A  26D9               	addwf	fsr2l,f,c
  8246  00033C  0100               	movlb	0	; () banked
  8247  00033E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8248  000340  22DA               	addwfc	fsr2h,f,c
  8249  000342  2ADF               	incf	indf2,f,c
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;my_i2c.c: 294: data_written = 1;
  8253  000344  0100               	movlb	0	; () banked
  8254  000346  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8255  000348  0E01               	movlw	1
  8256  00034A  0100               	movlb	0	; () banked
  8257  00034C  0100               	movlb	0	; () banked
  8258  00034E  6F9F               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  8259  000350  D0C1               	goto	L8
  8260  000352                     L7:
  8261  000352  6EDF               	movwf	indf2,c
  8262  000354  D0E3               	goto	i2l327
  8263  000356                     i2l347:
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;my_i2c.c: 302: {
  8267                           ;my_i2c.c: 304: if (SSPSTATbits.P == 1) {
  8268  000356  A8C7               	btfss	4039,4,c	;volatile
  8269  000358  D062               	goto	i2l4408
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;my_i2c.c: 306: ic_ptr->event_count++;
  8273  00035A  0100               	movlb	0	; () banked
  8274  00035C  EE20 F00C          	lfsr	2,12
  8275  000360  0100               	movlb	0	; () banked
  8276  000362  51C8               	movf	_ic_ptr& (0+255),w,b
  8277  000364  26D9               	addwf	fsr2l,f,c
  8278  000366  0100               	movlb	0	; () banked
  8279  000368  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8280  00036A  22DA               	addwfc	fsr2h,f,c
  8281  00036C  2ADF               	incf	indf2,f,c
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;my_i2c.c: 307: if (data_read) {
  8285  00036E  0100               	movlb	0	; () banked
  8286  000370  0100               	movlb	0	; () banked
  8287  000372  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  8288  000374  B4D8               	btfsc	status,2,c
  8289  000376  D04A               	goto	i2l4404
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;my_i2c.c: 308: if (SSPSTATbits.D_A == 1) {
  8293  000378  AAC7               	btfss	4039,5,c	;volatile
  8294  00037A  D027               	goto	i2l4402
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;my_i2c.c: 309: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8298  00037C  0100               	movlb	0	; () banked
  8299  00037E  EE20 F00A          	lfsr	2,10
  8300  000382  0100               	movlb	0	; () banked
  8301  000384  51C8               	movf	_ic_ptr& (0+255),w,b
  8302  000386  26D9               	addwf	fsr2l,f,c
  8303  000388  0100               	movlb	0	; () banked
  8304  00038A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8305  00038C  22DA               	addwfc	fsr2h,f,c
  8306  00038E  50DF               	movf	indf2,w,c
  8307  000390  0100               	movlb	0	; () banked
  8308  000392  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8309  000394  0100               	movlb	0	; () banked
  8310  000396  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8311  000398  0D01               	mullw	1
  8312  00039A  50F3               	movf	prodl,w,c
  8313  00039C  0100               	movlb	0	; () banked
  8314  00039E  0100               	movlb	0	; () banked
  8315  0003A0  25C8               	addwf	_ic_ptr& (0+255),w,b
  8316  0003A2  6ED9               	movwf	fsr2l,c
  8317  0003A4  50F4               	movf	prodh,w,c
  8318  0003A6  0100               	movlb	0	; () banked
  8319  0003A8  0100               	movlb	0	; () banked
  8320  0003AA  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8321  0003AC  6EDA               	movwf	fsr2h,c
  8322  0003AE  0100               	movlb	0	; () banked
  8323  0003B0  C0A1  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;my_i2c.c: 310: ic_ptr->buflen++;
  8327  0003B4  0100               	movlb	0	; () banked
  8328  0003B6  EE20 F00A          	lfsr	2,10
  8329  0003BA  0100               	movlb	0	; () banked
  8330  0003BC  51C8               	movf	_ic_ptr& (0+255),w,b
  8331  0003BE  26D9               	addwf	fsr2l,f,c
  8332  0003C0  0100               	movlb	0	; () banked
  8333  0003C2  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8334  0003C4  22DA               	addwfc	fsr2h,f,c
  8335  0003C6  2ADF               	incf	indf2,f,c
  8336  0003C8  D021               	goto	i2l4404
  8337  0003CA                     i2l4402:
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;my_i2c.c: 313: ic_ptr->error_count++;
  8341  0003CA  0100               	movlb	0	; () banked
  8342  0003CC  EE20 F00F          	lfsr	2,15
  8343  0003D0  0100               	movlb	0	; () banked
  8344  0003D2  51C8               	movf	_ic_ptr& (0+255),w,b
  8345  0003D4  26D9               	addwf	fsr2l,f,c
  8346  0003D6  0100               	movlb	0	; () banked
  8347  0003D8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8348  0003DA  22DA               	addwfc	fsr2h,f,c
  8349  0003DC  2ADF               	incf	indf2,f,c
  8350                           
  8351                           ;my_i2c.c: 314: ic_ptr->error_code = 0x6;
  8352  0003DE  0100               	movlb	0	; () banked
  8353  0003E0  EE20 F00E          	lfsr	2,14
  8354  0003E4  0100               	movlb	0	; () banked
  8355  0003E6  51C8               	movf	_ic_ptr& (0+255),w,b
  8356  0003E8  26D9               	addwf	fsr2l,f,c
  8357  0003EA  0100               	movlb	0	; () banked
  8358  0003EC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8359  0003EE  22DA               	addwfc	fsr2h,f,c
  8360  0003F0  0E06               	movlw	6
  8361  0003F2  6EDF               	movwf	indf2,c
  8362                           
  8363                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  8364  0003F4  0100               	movlb	0	; () banked
  8365  0003F6  EE20 F00D          	lfsr	2,13
  8366  0003FA  0100               	movlb	0	; () banked
  8367  0003FC  51C8               	movf	_ic_ptr& (0+255),w,b
  8368  0003FE  26D9               	addwf	fsr2l,f,c
  8369  000400  0100               	movlb	0	; () banked
  8370  000402  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8371  000404  22DA               	addwfc	fsr2h,f,c
  8372  000406  0E05               	movlw	5
  8373  000408  6EDF               	movwf	indf2,c
  8374  00040A  D067               	goto	L10
  8375  00040C                     i2l4404:
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;my_i2c.c: 318: msg_ready = 1;
  8379  00040C  0100               	movlb	0	; () banked
  8380  00040E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8381  000410  0E01               	movlw	1
  8382  000412  0100               	movlb	0	; () banked
  8383  000414  0100               	movlb	0	; () banked
  8384  000416  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  8385  000418  0100               	movlb	0	; () banked
  8386  00041A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8387                           
  8388                           ; BSR set to: 0
  8389  00041C  D05E               	goto	L10
  8390  00041E                     i2l4408:
  8391                           
  8392                           ; BSR set to: 0
  8393  00041E  0100               	movlb	0	; () banked
  8394  000420  0100               	movlb	0	; () banked
  8395  000422  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  8396  000424  B4D8               	btfsc	status,2,c
  8397  000426  D07A               	goto	i2l327
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;my_i2c.c: 322: ic_ptr->event_count++;
  8401  000428  0100               	movlb	0	; () banked
  8402  00042A  EE20 F00C          	lfsr	2,12
  8403  00042E  0100               	movlb	0	; () banked
  8404  000430  51C8               	movf	_ic_ptr& (0+255),w,b
  8405  000432  26D9               	addwf	fsr2l,f,c
  8406  000434  0100               	movlb	0	; () banked
  8407  000436  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8408  000438  22DA               	addwfc	fsr2h,f,c
  8409  00043A  2ADF               	incf	indf2,f,c
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;my_i2c.c: 323: if (SSPSTATbits.D_A == 1) {
  8413  00043C  AAC7               	btfss	4039,5,c	;volatile
  8414  00043E  D027               	goto	i2l355
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;my_i2c.c: 324: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8418  000440  0100               	movlb	0	; () banked
  8419  000442  EE20 F00A          	lfsr	2,10
  8420  000446  0100               	movlb	0	; () banked
  8421  000448  51C8               	movf	_ic_ptr& (0+255),w,b
  8422  00044A  26D9               	addwf	fsr2l,f,c
  8423  00044C  0100               	movlb	0	; () banked
  8424  00044E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8425  000450  22DA               	addwfc	fsr2h,f,c
  8426  000452  50DF               	movf	indf2,w,c
  8427  000454  0100               	movlb	0	; () banked
  8428  000456  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8429  000458  0100               	movlb	0	; () banked
  8430  00045A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8431  00045C  0D01               	mullw	1
  8432  00045E  50F3               	movf	prodl,w,c
  8433  000460  0100               	movlb	0	; () banked
  8434  000462  0100               	movlb	0	; () banked
  8435  000464  25C8               	addwf	_ic_ptr& (0+255),w,b
  8436  000466  6ED9               	movwf	fsr2l,c
  8437  000468  50F4               	movf	prodh,w,c
  8438  00046A  0100               	movlb	0	; () banked
  8439  00046C  0100               	movlb	0	; () banked
  8440  00046E  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8441  000470  6EDA               	movwf	fsr2h,c
  8442  000472  0100               	movlb	0	; () banked
  8443  000474  C0A1  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;my_i2c.c: 325: ic_ptr->buflen++;
  8447  000478  0100               	movlb	0	; () banked
  8448  00047A  EE20 F00A          	lfsr	2,10
  8449  00047E  0100               	movlb	0	; () banked
  8450  000480  51C8               	movf	_ic_ptr& (0+255),w,b
  8451  000482  26D9               	addwf	fsr2l,f,c
  8452  000484  0100               	movlb	0	; () banked
  8453  000486  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8454  000488  22DA               	addwfc	fsr2h,f,c
  8455  00048A  2ADF               	incf	indf2,f,c
  8456                           
  8457                           ;my_i2c.c: 326: } else {
  8458  00048C  D047               	goto	i2l327
  8459  00048E                     i2l355:
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;my_i2c.c: 327: if (SSPSTATbits.R_W == 1) {
  8463  00048E  A4C7               	btfss	4039,2,c	;volatile
  8464  000490  D6B6               	goto	i2l4360
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;my_i2c.c: 328: ic_ptr->status = 0x8;
  8468  000492  0100               	movlb	0	; () banked
  8469  000494  EE20 F00D          	lfsr	2,13
  8470  000498  0100               	movlb	0	; () banked
  8471  00049A  51C8               	movf	_ic_ptr& (0+255),w,b
  8472  00049C  26D9               	addwf	fsr2l,f,c
  8473  00049E  0100               	movlb	0	; () banked
  8474  0004A0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8475  0004A2  22DA               	addwfc	fsr2h,f,c
  8476  0004A4  0E08               	movlw	8
  8477  0004A6  6EDF               	movwf	indf2,c
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;my_i2c.c: 329: msg_ready = 1;
  8481  0004A8  0100               	movlb	0	; () banked
  8482  0004AA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8483  0004AC  0E01               	movlw	1
  8484  0004AE  0100               	movlb	0	; () banked
  8485  0004B0  0100               	movlb	0	; () banked
  8486  0004B2  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  8487  0004B4  0100               	movlb	0	; () banked
  8488  0004B6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8489  0004B8                     L11:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;my_i2c.c: 330: msg_to_send = 1;
  8493  0004B8  0100               	movlb	0	; () banked
  8494  0004BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8495  0004BC  0E01               	movlw	1
  8496  0004BE  0100               	movlb	0	; () banked
  8497  0004C0  0100               	movlb	0	; () banked
  8498  0004C2  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8499  0004C4  0100               	movlb	0	; () banked
  8500  0004C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;my_i2c.c: 332: data_read = 0;
  8504  0004C8  0100               	movlb	0	; () banked
  8505  0004CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8506  0004CC  0E00               	movlw	0
  8507  0004CE  0100               	movlb	0	; () banked
  8508  0004D0  0100               	movlb	0	; () banked
  8509  0004D2  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  8510  0004D4                     L8:
  8511  0004D4  0100               	movlb	0	; () banked
  8512  0004D6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8513                           
  8514                           ;my_i2c.c: 333: } else {
  8515  0004D8  D021               	goto	i2l327
  8516  0004DA                     L10:
  8517                           
  8518                           ;my_i2c.c: 336: ic_ptr->status = 0x5;
  8519  0004DA  0100               	movlb	0	; () banked
  8520  0004DC  EE20 F00D          	lfsr	2,13
  8521  0004E0  0100               	movlb	0	; () banked
  8522  0004E2  51C8               	movf	_ic_ptr& (0+255),w,b
  8523  0004E4  26D9               	addwf	fsr2l,f,c
  8524  0004E6  0100               	movlb	0	; () banked
  8525  0004E8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8526  0004EA  22DA               	addwfc	fsr2h,f,c
  8527  0004EC  0E05               	movlw	5
  8528  0004EE  D731               	goto	L7
  8529  0004F0                     i2l4430:
  8530                           
  8531                           ; BSR set to: 0
  8532  0004F0  0100               	movlb	0	; () banked
  8533  0004F2  EE20 F00D          	lfsr	2,13
  8534  0004F6  0100               	movlb	0	; () banked
  8535  0004F8  51C8               	movf	_ic_ptr& (0+255),w,b
  8536  0004FA  26D9               	addwf	fsr2l,f,c
  8537  0004FC  0100               	movlb	0	; () banked
  8538  0004FE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8539  000500  22DA               	addwfc	fsr2h,f,c
  8540  000502  50DF               	movf	indf2,w,c
  8541                           
  8542                           ; Switch size 1, requested type "space"
  8543                           ; Number of cases is 4, Range of values is 5 to 8
  8544                           ; switch strategies available:
  8545                           ; Name         Instructions Cycles
  8546                           ; simple_byte           13     7 (average)
  8547                           ;	Chosen strategy is simple_byte
  8548  000504  0A05               	xorlw	5	; case 5
  8549  000506  B4D8               	btfsc	status,2,c
  8550  000508  D63C               	goto	i2l329
  8551  00050A  0A03               	xorlw	3	; case 6
  8552  00050C  B4D8               	btfsc	status,2,c
  8553  00050E  D65B               	goto	i2l333
  8554  000510  0A01               	xorlw	1	; case 7
  8555  000512  B4D8               	btfsc	status,2,c
  8556  000514  D720               	goto	i2l347
  8557  000516  0A0F               	xorlw	15	; case 8
  8558  000518  B4D8               	btfsc	status,2,c
  8559  00051A  D6D1               	goto	i2l4380
  8560  00051C                     i2l327:
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;my_i2c.c: 343: }
  8564                           ;my_i2c.c: 346: if (data_read || data_written) {
  8565  00051C  0100               	movlb	0	; () banked
  8566  00051E  0100               	movlb	0	; () banked
  8567  000520  67A4               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  8568  000522  D005               	goto	i2l361
  8569                           
  8570                           ; BSR set to: 0
  8571  000524  0100               	movlb	0	; () banked
  8572  000526  0100               	movlb	0	; () banked
  8573  000528  519F               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  8574  00052A  B4D8               	btfsc	status,2,c
  8575  00052C  D002               	goto	i2l4436
  8576  00052E                     i2l361:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;my_i2c.c: 348: if (SSPCON1bits.CKP == 0) {
  8580  00052E  A8C6               	btfss	4038,4,c	;volatile
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;my_i2c.c: 349: SSPCON1bits.CKP = 1;
  8584  000530  88C6               	bsf	4038,4,c	;volatile
  8585  000532                     i2l4436:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;my_i2c.c: 350: }
  8589                           ;my_i2c.c: 351: }
  8590                           ;my_i2c.c: 354: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8591  000532  0100               	movlb	0	; () banked
  8592  000534  EE20 F00A          	lfsr	2,10
  8593  000538  0100               	movlb	0	; () banked
  8594  00053A  51C8               	movf	_ic_ptr& (0+255),w,b
  8595  00053C  26D9               	addwf	fsr2l,f,c
  8596  00053E  0100               	movlb	0	; () banked
  8597  000540  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8598  000542  22DA               	addwfc	fsr2h,f,c
  8599  000544  0E08               	movlw	8
  8600  000546  64DF               	cpfsgt	indf2,c
  8601  000548  D024               	goto	i2l4442
  8602                           
  8603                           ; BSR set to: 0
  8604  00054A  0100               	movlb	0	; () banked
  8605  00054C  0100               	movlb	0	; () banked
  8606  00054E  67A3               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  8607  000550  D020               	goto	i2l4442
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;my_i2c.c: 355: ic_ptr->status = 0x5;
  8611  000552  0100               	movlb	0	; () banked
  8612  000554  EE20 F00D          	lfsr	2,13
  8613  000558  0100               	movlb	0	; () banked
  8614  00055A  51C8               	movf	_ic_ptr& (0+255),w,b
  8615  00055C  26D9               	addwf	fsr2l,f,c
  8616  00055E  0100               	movlb	0	; () banked
  8617  000560  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8618  000562  22DA               	addwfc	fsr2h,f,c
  8619  000564  0E05               	movlw	5
  8620  000566  6EDF               	movwf	indf2,c
  8621                           
  8622                           ;my_i2c.c: 356: ic_ptr->error_count++;
  8623  000568  0100               	movlb	0	; () banked
  8624  00056A  EE20 F00F          	lfsr	2,15
  8625  00056E  0100               	movlb	0	; () banked
  8626  000570  51C8               	movf	_ic_ptr& (0+255),w,b
  8627  000572  26D9               	addwf	fsr2l,f,c
  8628  000574  0100               	movlb	0	; () banked
  8629  000576  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8630  000578  22DA               	addwfc	fsr2h,f,c
  8631  00057A  2ADF               	incf	indf2,f,c
  8632                           
  8633                           ;my_i2c.c: 357: ic_ptr->error_code = 0x7;
  8634  00057C  0100               	movlb	0	; () banked
  8635  00057E  EE20 F00E          	lfsr	2,14
  8636  000582  0100               	movlb	0	; () banked
  8637  000584  51C8               	movf	_ic_ptr& (0+255),w,b
  8638  000586  26D9               	addwf	fsr2l,f,c
  8639  000588  0100               	movlb	0	; () banked
  8640  00058A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8641  00058C  22DA               	addwfc	fsr2h,f,c
  8642  00058E  0E07               	movlw	7
  8643  000590  6EDF               	movwf	indf2,c
  8644  000592                     i2l4442:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;my_i2c.c: 358: }
  8648                           ;my_i2c.c: 360: if (msg_ready) {
  8649  000592  0100               	movlb	0	; () banked
  8650  000594  0100               	movlb	0	; () banked
  8651  000596  51A3               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  8652  000598  B4D8               	btfsc	status,2,c
  8653  00059A  D048               	goto	i2l4450
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;my_i2c.c: 361: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8657  00059C  0100               	movlb	0	; () banked
  8658  00059E  EE20 F00C          	lfsr	2,12
  8659  0005A2  0100               	movlb	0	; () banked
  8660  0005A4  51C8               	movf	_ic_ptr& (0+255),w,b
  8661  0005A6  26D9               	addwf	fsr2l,f,c
  8662  0005A8  0100               	movlb	0	; () banked
  8663  0005AA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8664  0005AC  22DA               	addwfc	fsr2h,f,c
  8665  0005AE  0100               	movlb	0	; () banked
  8666  0005B0  EE10 F00A          	lfsr	1,10
  8667  0005B4  0100               	movlb	0	; () banked
  8668  0005B6  51C8               	movf	_ic_ptr& (0+255),w,b
  8669  0005B8  26E1               	addwf	fsr1l,f,c
  8670  0005BA  0100               	movlb	0	; () banked
  8671  0005BC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8672  0005BE  22E2               	addwfc	fsr1h,f,c
  8673  0005C0  50E7               	movf	indf1,w,c
  8674  0005C2  0100               	movlb	0	; () banked
  8675  0005C4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8676  0005C6  0100               	movlb	0	; () banked
  8677  0005C8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8678  0005CA  0D01               	mullw	1
  8679  0005CC  50F3               	movf	prodl,w,c
  8680  0005CE  0100               	movlb	0	; () banked
  8681  0005D0  0100               	movlb	0	; () banked
  8682  0005D2  25C8               	addwf	_ic_ptr& (0+255),w,b
  8683  0005D4  6EE1               	movwf	fsr1l,c
  8684  0005D6  50F4               	movf	prodh,w,c
  8685  0005D8  0100               	movlb	0	; () banked
  8686  0005DA  0100               	movlb	0	; () banked
  8687  0005DC  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8688  0005DE  6EE2               	movwf	fsr1h,c
  8689  0005E0  CFDF FFE7          	movff	indf2,indf1
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;my_i2c.c: 362: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8693  0005E4  0100               	movlb	0	; () banked
  8694  0005E6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8695  0005E8  0E28               	movlw	40
  8696  0005EA  0100               	movlb	0	; () banked
  8697  0005EC  0100               	movlb	0	; () banked
  8698  0005EE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8699  0005F0  0100               	movlb	0	; () banked
  8700  0005F2  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8701  0005F4  0100               	movlb	0	; () banked
  8702  0005F6  0100               	movlb	0	; () banked
  8703  0005F8  C0C9  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8704  0005FC  0100               	movlb	0	; () banked
  8705  0005FE  0100               	movlb	0	; () banked
  8706  000600  C0C8  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8707  000604  0100               	movlb	0	; () banked
  8708  000606  EE20 F00A          	lfsr	2,10
  8709  00060A  0100               	movlb	0	; () banked
  8710  00060C  51C8               	movf	_ic_ptr& (0+255),w,b
  8711  00060E  26D9               	addwf	fsr2l,f,c
  8712  000610  0100               	movlb	0	; () banked
  8713  000612  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8714  000614  22DA               	addwfc	fsr2h,f,c
  8715  000616  50DF               	movf	indf2,w,c
  8716  000618  0100               	movlb	0	; () banked
  8717  00061A  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  8718  00061C  0100               	movlb	0	; () banked
  8719  00061E  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  8720  000620  EC81  F012         	call	_ToMainHigh_sendmsg
  8721                           
  8722                           ;my_i2c.c: 363: ic_ptr->buflen = 0;
  8723  000624  0100               	movlb	0	; () banked
  8724  000626  EE20 F00A          	lfsr	2,10
  8725  00062A  D04B               	goto	L9
  8726  00062C                     i2l4450:
  8727                           
  8728                           ; BSR set to: 0
  8729  00062C  0100               	movlb	0	; () banked
  8730  00062E  EE20 F00F          	lfsr	2,15
  8731  000632  0100               	movlb	0	; () banked
  8732  000634  51C8               	movf	_ic_ptr& (0+255),w,b
  8733  000636  26D9               	addwf	fsr2l,f,c
  8734  000638  0100               	movlb	0	; () banked
  8735  00063A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8736  00063C  22DA               	addwfc	fsr2h,f,c
  8737  00063E  50DF               	movf	indf2,w,c
  8738  000640  B4D8               	btfsc	status,2,c
  8739  000642  D047               	goto	i2l4458
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;my_i2c.c: 365: error_buf[0] = ic_ptr->error_count;
  8743  000644  0100               	movlb	0	; () banked
  8744  000646  EE20 F00F          	lfsr	2,15
  8745  00064A  0100               	movlb	0	; () banked
  8746  00064C  51C8               	movf	_ic_ptr& (0+255),w,b
  8747  00064E  26D9               	addwf	fsr2l,f,c
  8748  000650  0100               	movlb	0	; () banked
  8749  000652  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8750  000654  22DA               	addwfc	fsr2h,f,c
  8751  000656  50DF               	movf	indf2,w,c
  8752  000658  0100               	movlb	0	; () banked
  8753  00065A  0100               	movlb	0	; () banked
  8754  00065C  6F9C               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8755                           
  8756                           ;my_i2c.c: 366: error_buf[1] = ic_ptr->error_code;
  8757  00065E  0100               	movlb	0	; () banked
  8758  000660  EE20 F00E          	lfsr	2,14
  8759  000664  0100               	movlb	0	; () banked
  8760  000666  51C8               	movf	_ic_ptr& (0+255),w,b
  8761  000668  26D9               	addwf	fsr2l,f,c
  8762  00066A  0100               	movlb	0	; () banked
  8763  00066C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8764  00066E  22DA               	addwfc	fsr2h,f,c
  8765  000670  50DF               	movf	indf2,w,c
  8766  000672  0100               	movlb	0	; () banked
  8767  000674  0100               	movlb	0	; () banked
  8768  000676  6F9D               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8769                           
  8770                           ;my_i2c.c: 367: error_buf[2] = ic_ptr->event_count;
  8771  000678  0100               	movlb	0	; () banked
  8772  00067A  EE20 F00C          	lfsr	2,12
  8773  00067E  0100               	movlb	0	; () banked
  8774  000680  51C8               	movf	_ic_ptr& (0+255),w,b
  8775  000682  26D9               	addwf	fsr2l,f,c
  8776  000684  0100               	movlb	0	; () banked
  8777  000686  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8778  000688  22DA               	addwfc	fsr2h,f,c
  8779  00068A  50DF               	movf	indf2,w,c
  8780  00068C  0100               	movlb	0	; () banked
  8781  00068E  0100               	movlb	0	; () banked
  8782  000690  6F9E               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;my_i2c.c: 368: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8786  000692  0100               	movlb	0	; () banked
  8787  000694  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8788  000696  0E29               	movlw	41
  8789  000698  0100               	movlb	0	; () banked
  8790  00069A  0100               	movlb	0	; () banked
  8791  00069C  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8792  00069E  0100               	movlb	0	; () banked
  8793  0006A0  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8794  0006A2  0100               	movlb	0	; () banked
  8795  0006A4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8796  0006A6  0100               	movlb	0	; () banked
  8797  0006A8  0100               	movlb	0	; () banked
  8798  0006AA  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8799  0006AC  0100               	movlb	0	; () banked
  8800  0006AE  0E9C               	movlw	low i2c_slave_int_handler@error_buf
  8801  0006B0  0100               	movlb	0	; () banked
  8802  0006B2  0100               	movlb	0	; () banked
  8803  0006B4  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8804  0006B6  0E03               	movlw	3
  8805  0006B8  EC81  F012         	call	_ToMainHigh_sendmsg
  8806                           
  8807                           ;my_i2c.c: 369: ic_ptr->error_count = 0;
  8808  0006BC  0100               	movlb	0	; () banked
  8809  0006BE  EE20 F00F          	lfsr	2,15
  8810  0006C2                     L9:
  8811  0006C2  0100               	movlb	0	; () banked
  8812  0006C4  51C8               	movf	_ic_ptr& (0+255),w,b
  8813  0006C6  26D9               	addwf	fsr2l,f,c
  8814  0006C8  0100               	movlb	0	; () banked
  8815  0006CA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8816  0006CC  22DA               	addwfc	fsr2h,f,c
  8817  0006CE  0E00               	movlw	0
  8818  0006D0  6EDF               	movwf	indf2,c
  8819  0006D2                     i2l4458:
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;my_i2c.c: 370: }
  8823                           ;my_i2c.c: 371: if (msg_to_send) {
  8824  0006D2  0100               	movlb	0	; () banked
  8825  0006D4  0100               	movlb	0	; () banked
  8826  0006D6  51A2               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8827  0006D8  B4D8               	btfsc	status,2,c
  8828  0006DA  0012               	return	
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;my_i2c.c: 374: start_i2c_slave_reply(I2C_Buffer_Size, 0);
  8832  0006DC  0E00               	movlw	0
  8833  0006DE  0100               	movlb	0	; () banked
  8834  0006E0  0100               	movlb	0	; () banked
  8835  0006E2  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8836  0006E4  0E00               	movlw	0
  8837  0006E6  0100               	movlb	0	; () banked
  8838  0006E8  0100               	movlb	0	; () banked
  8839  0006EA  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8840  0006EC  0100               	movlb	0	; () banked
  8841  0006EE  0100               	movlb	0	; () banked
  8842  0006F0  51CA               	movf	_I2C_Buffer_Size& (0+255),w,b
  8843  0006F2  EC22  F009         	call	_start_i2c_slave_reply
  8844                           
  8845                           ;my_i2c.c: 375: msg_to_send = 0;
  8846  0006F6  0100               	movlb	0	; () banked
  8847  0006F8  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8848  0006FA  0E00               	movlw	0
  8849  0006FC  0100               	movlb	0	; () banked
  8850  0006FE  0100               	movlb	0	; () banked
  8851  000700  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8852  000702  0100               	movlb	0	; () banked
  8853  000704  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8854  000706  0012               	return	
  8855  000708                     __end_of_i2c_slave_int_handler:
  8856                           	opt stack 0
  8857                           pclatu	equ	0xFFB
  8858                           pclath	equ	0xFFA
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           intcon	equ	0xFF2
  8866                           postinc0	equ	0xFEE
  8867                           fsr0h	equ	0xFEA
  8868                           fsr0l	equ	0xFE9
  8869                           wreg	equ	0xFE8
  8870                           indf1	equ	0xFE7
  8871                           postdec1	equ	0xFE5
  8872                           fsr1h	equ	0xFE2
  8873                           fsr1l	equ	0xFE1
  8874                           bsr	equ	0xFE0
  8875                           indf2	equ	0xFDF
  8876                           postinc2	equ	0xFDE
  8877                           postdec2	equ	0xFDD
  8878                           fsr2h	equ	0xFDA
  8879                           fsr2l	equ	0xFD9
  8880                           status	equ	0xFD8
  8881                           
  8882 ;; *************** function _start_i2c_slave_reply *****************
  8883 ;; Defined at:
  8884 ;;		line 132 in file "source/my_i2c.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  length          1    wreg     unsigned char 
  8887 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8888 ;;		 -> NULL(0), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  length          1    5[BANK0 ] unsigned char 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;		None               void
  8893 ;; Registers used:
  8894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8900 ;;      Params:         0       2       0       0       0
  8901 ;;      Locals:         0       1       0       0       0
  8902 ;;      Temps:          0       3       0       0       0
  8903 ;;      Totals:         0       6       0       0       0
  8904 ;;Total ram usage:        6 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_i2c_slave_int_handler
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text48
  8914  001244                     __ptext48:
  8915                           	opt stack 0
  8916  001244                     _start_i2c_slave_reply:
  8917                           	opt stack 17
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;incstack = 0
  8921                           ;start_i2c_slave_reply@length stored from wreg
  8922  001244  CFE8 F085          	movff	wreg,start_i2c_slave_reply@length
  8923                           
  8924                           ;my_i2c.c: 136: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  8925  001248  0100               	movlb	0	; () banked
  8926  00124A  EE20 F01A          	lfsr	2,26
  8927  00124E  0100               	movlb	0	; () banked
  8928  001250  51C8               	movf	_ic_ptr& (0+255),w,b
  8929  001252  26D9               	addwf	fsr2l,f,c
  8930  001254  0100               	movlb	0	; () banked
  8931  001256  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8932  001258  22DA               	addwfc	fsr2h,f,c
  8933  00125A  0E00               	movlw	0
  8934  00125C  6EDF               	movwf	indf2,c
  8935  00125E  D09D               	goto	i2l4230
  8936  001260                     i2l4218:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;my_i2c.c: 139: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  8940  001260  0100               	movlb	0	; () banked
  8941  001262  EE20 F01A          	lfsr	2,26
  8942  001266  0100               	movlb	0	; () banked
  8943  001268  51C8               	movf	_ic_ptr& (0+255),w,b
  8944  00126A  26D9               	addwf	fsr2l,f,c
  8945  00126C  0100               	movlb	0	; () banked
  8946  00126E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8947  001270  22DA               	addwfc	fsr2h,f,c
  8948  001272  50DF               	movf	indf2,w,c
  8949  001274  0100               	movlb	0	; () banked
  8950  001276  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8951  001278  0100               	movlb	0	; () banked
  8952  00127A  EE20 F027          	lfsr	2,39
  8953  00127E  0100               	movlb	0	; () banked
  8954  001280  51C8               	movf	_ic_ptr& (0+255),w,b
  8955  001282  26D9               	addwf	fsr2l,f,c
  8956  001284  0100               	movlb	0	; () banked
  8957  001286  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8958  001288  22DA               	addwfc	fsr2h,f,c
  8959  00128A  50DF               	movf	indf2,w,c
  8960  00128C  0100               	movlb	0	; () banked
  8961  00128E  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8962  001290  B0D8               	btfsc	status,0,c
  8963  001292  D02C               	goto	i2l4222
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;my_i2c.c: 140: {
  8967                           ;my_i2c.c: 141: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  8968  001294  0100               	movlb	0	; () banked
  8969  001296  EE20 F01A          	lfsr	2,26
  8970  00129A  0100               	movlb	0	; () banked
  8971  00129C  51C8               	movf	_ic_ptr& (0+255),w,b
  8972  00129E  26D9               	addwf	fsr2l,f,c
  8973  0012A0  0100               	movlb	0	; () banked
  8974  0012A2  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8975  0012A4  22DA               	addwfc	fsr2h,f,c
  8976  0012A6  50DF               	movf	indf2,w,c
  8977  0012A8  0100               	movlb	0	; () banked
  8978  0012AA  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8979  0012AC  0100               	movlb	0	; () banked
  8980  0012AE  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8981  0012B0  0D01               	mullw	1
  8982  0012B2  0E1D               	movlw	29
  8983  0012B4  26F3               	addwf	prodl,f,c
  8984  0012B6  0E00               	movlw	0
  8985  0012B8  22F4               	addwfc	prodh,f,c
  8986  0012BA  50F3               	movf	prodl,w,c
  8987  0012BC  0100               	movlb	0	; () banked
  8988  0012BE  0100               	movlb	0	; () banked
  8989  0012C0  25C8               	addwf	_ic_ptr& (0+255),w,b
  8990  0012C2  6ED9               	movwf	fsr2l,c
  8991  0012C4  50F4               	movf	prodh,w,c
  8992  0012C6  0100               	movlb	0	; () banked
  8993  0012C8  0100               	movlb	0	; () banked
  8994  0012CA  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8995  0012CC  6EDA               	movwf	fsr2h,c
  8996  0012CE  0100               	movlb	0	; () banked
  8997  0012D0  EE10 F01A          	lfsr	1,26
  8998  0012D4  0100               	movlb	0	; () banked
  8999  0012D6  51C8               	movf	_ic_ptr& (0+255),w,b
  9000  0012D8  26E1               	addwf	fsr1l,f,c
  9001  0012DA  0100               	movlb	0	; () banked
  9002  0012DC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9003  0012DE  22E2               	addwfc	fsr1h,f,c
  9004  0012E0  50E7               	movf	indf1,w,c
  9005  0012E2  0100               	movlb	0	; () banked
  9006  0012E4  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  9007  0012E6  0100               	movlb	0	; () banked
  9008  0012E8  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  9009  0012EA  D03C               	goto	L14
  9010  0012EC                     i2l4222:
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;my_i2c.c: 143: else if(ic_ptr->sendBufLen != 0)
  9014  0012EC  0100               	movlb	0	; () banked
  9015  0012EE  EE20 F027          	lfsr	2,39
  9016  0012F2  0100               	movlb	0	; () banked
  9017  0012F4  51C8               	movf	_ic_ptr& (0+255),w,b
  9018  0012F6  26D9               	addwf	fsr2l,f,c
  9019  0012F8  0100               	movlb	0	; () banked
  9020  0012FA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9021  0012FC  22DA               	addwfc	fsr2h,f,c
  9022  0012FE  50DF               	movf	indf2,w,c
  9023  001300  B4D8               	btfsc	status,2,c
  9024  001302  D00B               	goto	i2l4226
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;my_i2c.c: 144: {
  9028                           ;my_i2c.c: 145: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  9029  001304  0100               	movlb	0	; () banked
  9030  001306  EE20 F027          	lfsr	2,39
  9031  00130A  0100               	movlb	0	; () banked
  9032  00130C  51C8               	movf	_ic_ptr& (0+255),w,b
  9033  00130E  26D9               	addwf	fsr2l,f,c
  9034  001310  0100               	movlb	0	; () banked
  9035  001312  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9036  001314  22DA               	addwfc	fsr2h,f,c
  9037  001316  50DF               	movf	indf2,w,c
  9038  001318  D003               	goto	L13
  9039  00131A                     i2l4226:
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;my_i2c.c: 147: else
  9043                           ;my_i2c.c: 148: {
  9044                           ;my_i2c.c: 149: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  9045  00131A  0100               	movlb	0	; () banked
  9046  00131C  0100               	movlb	0	; () banked
  9047  00131E  5185               	movf	start_i2c_slave_reply@length& (0+255),w,b
  9048  001320                     L13:
  9049  001320  0100               	movlb	0	; () banked
  9050  001322  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  9051  001324  6B83               	clrf	(??_start_i2c_slave_reply+1)& (0+255),b
  9052  001326  0E1C               	movlw	28
  9053  001328  0100               	movlb	0	; () banked
  9054  00132A  2782               	addwf	??_start_i2c_slave_reply& (0+255),f,b
  9055  00132C  0E00               	movlw	0
  9056  00132E  2383               	addwfc	(??_start_i2c_slave_reply+1)& (0+255),f,b
  9057  001330  0100               	movlb	0	; () banked
  9058  001332  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  9059  001334  0100               	movlb	0	; () banked
  9060  001336  0100               	movlb	0	; () banked
  9061  001338  25C8               	addwf	_ic_ptr& (0+255),w,b
  9062  00133A  6ED9               	movwf	fsr2l,c
  9063  00133C  0100               	movlb	0	; () banked
  9064  00133E  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  9065  001340  0100               	movlb	0	; () banked
  9066  001342  0100               	movlb	0	; () banked
  9067  001344  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9068  001346  6EDA               	movwf	fsr2h,c
  9069  001348  0100               	movlb	0	; () banked
  9070  00134A  EE10 F01A          	lfsr	1,26
  9071  00134E  0100               	movlb	0	; () banked
  9072  001350  51C8               	movf	_ic_ptr& (0+255),w,b
  9073  001352  26E1               	addwf	fsr1l,f,c
  9074  001354  0100               	movlb	0	; () banked
  9075  001356  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9076  001358  22E2               	addwfc	fsr1h,f,c
  9077  00135A  50E7               	movf	indf1,w,c
  9078  00135C  0100               	movlb	0	; () banked
  9079  00135E  6F84               	movwf	(??_start_i2c_slave_reply+2)& (0+255),b
  9080  001360  0100               	movlb	0	; () banked
  9081  001362  5184               	movf	(??_start_i2c_slave_reply+2)& (0+255),w,b
  9082  001364                     L14:
  9083  001364  0D01               	mullw	1
  9084  001366  0E10               	movlw	16
  9085  001368  26F3               	addwf	prodl,f,c
  9086  00136A  0E00               	movlw	0
  9087  00136C  22F4               	addwfc	prodh,f,c
  9088  00136E  50F3               	movf	prodl,w,c
  9089  001370  0100               	movlb	0	; () banked
  9090  001372  0100               	movlb	0	; () banked
  9091  001374  25C8               	addwf	_ic_ptr& (0+255),w,b
  9092  001376  6EE1               	movwf	fsr1l,c
  9093  001378  50F4               	movf	prodh,w,c
  9094  00137A  0100               	movlb	0	; () banked
  9095  00137C  0100               	movlb	0	; () banked
  9096  00137E  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9097  001380  6EE2               	movwf	fsr1h,c
  9098  001382  CFDF FFE7          	movff	indf2,indf1
  9099                           
  9100                           ; BSR set to: 0
  9101                           
  9102                           ; BSR set to: 0
  9103                           
  9104                           ; BSR set to: 0
  9105  001386  0100               	movlb	0	; () banked
  9106  001388  EE20 F01A          	lfsr	2,26
  9107  00138C  0100               	movlb	0	; () banked
  9108  00138E  51C8               	movf	_ic_ptr& (0+255),w,b
  9109  001390  26D9               	addwf	fsr2l,f,c
  9110  001392  0100               	movlb	0	; () banked
  9111  001394  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9112  001396  22DA               	addwfc	fsr2h,f,c
  9113  001398  2ADF               	incf	indf2,f,c
  9114  00139A                     i2l4230:
  9115                           
  9116                           ; BSR set to: 0
  9117  00139A  0100               	movlb	0	; () banked
  9118  00139C  EE20 F01A          	lfsr	2,26
  9119  0013A0  0100               	movlb	0	; () banked
  9120  0013A2  51C8               	movf	_ic_ptr& (0+255),w,b
  9121  0013A4  26D9               	addwf	fsr2l,f,c
  9122  0013A6  0100               	movlb	0	; () banked
  9123  0013A8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9124  0013AA  22DA               	addwfc	fsr2h,f,c
  9125  0013AC  50DF               	movf	indf2,w,c
  9126  0013AE  0100               	movlb	0	; () banked
  9127  0013B0  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  9128  0013B2  0100               	movlb	0	; () banked
  9129  0013B4  0100               	movlb	0	; () banked
  9130  0013B6  5185               	movf	start_i2c_slave_reply@length& (0+255),w,b
  9131  0013B8  0100               	movlb	0	; () banked
  9132  0013BA  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  9133  0013BC  A0D8               	btfss	status,0,c
  9134  0013BE  D750               	goto	i2l4218
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;my_i2c.c: 150: }
  9138                           ;my_i2c.c: 152: }
  9139                           ;my_i2c.c: 153: ic_ptr->sendBufLen =0;
  9140                           
  9141                           ; BSR set to: 0
  9142  0013C0  0100               	movlb	0	; () banked
  9143  0013C2  EE20 F027          	lfsr	2,39
  9144  0013C6  0100               	movlb	0	; () banked
  9145  0013C8  51C8               	movf	_ic_ptr& (0+255),w,b
  9146  0013CA  26D9               	addwf	fsr2l,f,c
  9147  0013CC  0100               	movlb	0	; () banked
  9148  0013CE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9149  0013D0  22DA               	addwfc	fsr2h,f,c
  9150  0013D2  0E00               	movlw	0
  9151  0013D4  6EDF               	movwf	indf2,c
  9152                           
  9153                           ;my_i2c.c: 154: ic_ptr->outbuflen = length;
  9154  0013D6  0100               	movlb	0	; () banked
  9155  0013D8  EE20 F01A          	lfsr	2,26
  9156  0013DC  0100               	movlb	0	; () banked
  9157  0013DE  51C8               	movf	_ic_ptr& (0+255),w,b
  9158  0013E0  26D9               	addwf	fsr2l,f,c
  9159  0013E2  0100               	movlb	0	; () banked
  9160  0013E4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9161  0013E6  22DA               	addwfc	fsr2h,f,c
  9162  0013E8  0100               	movlb	0	; () banked
  9163  0013EA  C085  FFDF         	movff	start_i2c_slave_reply@length,indf2
  9164                           
  9165                           ;my_i2c.c: 155: ic_ptr->outbufind = 1;
  9166  0013EE  0100               	movlb	0	; () banked
  9167  0013F0  EE20 F01B          	lfsr	2,27
  9168  0013F4  0100               	movlb	0	; () banked
  9169  0013F6  51C8               	movf	_ic_ptr& (0+255),w,b
  9170  0013F8  26D9               	addwf	fsr2l,f,c
  9171  0013FA  0100               	movlb	0	; () banked
  9172  0013FC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9173  0013FE  22DA               	addwfc	fsr2h,f,c
  9174  001400  0E01               	movlw	1
  9175  001402  6EDF               	movwf	indf2,c
  9176                           
  9177                           ;my_i2c.c: 158: SSPBUF = ic_ptr->outbuffer[0];
  9178  001404  0100               	movlb	0	; () banked
  9179  001406  EE20 F010          	lfsr	2,16
  9180  00140A  0100               	movlb	0	; () banked
  9181  00140C  51C8               	movf	_ic_ptr& (0+255),w,b
  9182  00140E  26D9               	addwf	fsr2l,f,c
  9183  001410  0100               	movlb	0	; () banked
  9184  001412  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9185  001414  22DA               	addwfc	fsr2h,f,c
  9186  001416  50DF               	movf	indf2,w,c
  9187  001418  6EC9               	movwf	4041,c	;volatile
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;my_i2c.c: 161: SSPCON1bits.CKP = 1;
  9191  00141A  88C6               	bsf	4038,4,c	;volatile
  9192                           
  9193                           ; BSR set to: 0
  9194  00141C  0012               	return	
  9195  00141E                     __end_of_start_i2c_slave_reply:
  9196                           	opt stack 0
  9197                           pclatu	equ	0xFFB
  9198                           pclath	equ	0xFFA
  9199                           tblptru	equ	0xFF8
  9200                           tblptrh	equ	0xFF7
  9201                           tblptrl	equ	0xFF6
  9202                           tablat	equ	0xFF5
  9203                           prodh	equ	0xFF4
  9204                           prodl	equ	0xFF3
  9205                           intcon	equ	0xFF2
  9206                           postinc0	equ	0xFEE
  9207                           fsr0h	equ	0xFEA
  9208                           fsr0l	equ	0xFE9
  9209                           wreg	equ	0xFE8
  9210                           indf1	equ	0xFE7
  9211                           postdec1	equ	0xFE5
  9212                           fsr1h	equ	0xFE2
  9213                           fsr1l	equ	0xFE1
  9214                           bsr	equ	0xFE0
  9215                           indf2	equ	0xFDF
  9216                           postinc2	equ	0xFDE
  9217                           postdec2	equ	0xFDD
  9218                           fsr2h	equ	0xFDA
  9219                           fsr2l	equ	0xFD9
  9220                           status	equ	0xFD8
  9221                           
  9222 ;; *************** function _handle_start *****************
  9223 ;; Defined at:
  9224 ;;		line 167 in file "source/my_i2c.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  data_read       1    wreg     unsigned char 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  data_read       1    0[BANK0 ] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;		None               void
  9231 ;; Registers used:
  9232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9238 ;;      Params:         0       0       0       0       0
  9239 ;;      Locals:         0       1       0       0       0
  9240 ;;      Temps:          0       0       0       0       0
  9241 ;;      Totals:         0       1       0       0       0
  9242 ;;Total ram usage:        1 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_i2c_slave_int_handler
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text49
  9252  001B6E                     __ptext49:
  9253                           	opt stack 0
  9254  001B6E                     _handle_start:
  9255                           	opt stack 17
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;incstack = 0
  9259                           ;handle_start@data_read stored from wreg
  9260  001B6E  CFE8 F080          	movff	wreg,handle_start@data_read
  9261                           
  9262                           ;my_i2c.c: 168: ic_ptr->event_count = 1;
  9263  001B72  0100               	movlb	0	; () banked
  9264  001B74  EE20 F00C          	lfsr	2,12
  9265  001B78  0100               	movlb	0	; () banked
  9266  001B7A  51C8               	movf	_ic_ptr& (0+255),w,b
  9267  001B7C  26D9               	addwf	fsr2l,f,c
  9268  001B7E  0100               	movlb	0	; () banked
  9269  001B80  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9270  001B82  22DA               	addwfc	fsr2h,f,c
  9271  001B84  0E01               	movlw	1
  9272  001B86  6EDF               	movwf	indf2,c
  9273                           
  9274                           ;my_i2c.c: 169: ic_ptr->buflen = 0;
  9275  001B88  0100               	movlb	0	; () banked
  9276  001B8A  EE20 F00A          	lfsr	2,10
  9277  001B8E  0100               	movlb	0	; () banked
  9278  001B90  51C8               	movf	_ic_ptr& (0+255),w,b
  9279  001B92  26D9               	addwf	fsr2l,f,c
  9280  001B94  0100               	movlb	0	; () banked
  9281  001B96  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9282  001B98  22DA               	addwfc	fsr2h,f,c
  9283  001B9A  0E00               	movlw	0
  9284  001B9C  6EDF               	movwf	indf2,c
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;my_i2c.c: 171: if (data_read) {
  9288  001B9E  0100               	movlb	0	; () banked
  9289  001BA0  0100               	movlb	0	; () banked
  9290  001BA2  5180               	movf	handle_start@data_read& (0+255),w,b
  9291  001BA4  B4D8               	btfsc	status,2,c
  9292  001BA6  D03D               	goto	i2l4248
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 1) {
  9296  001BA8  AAC7               	btfss	4039,5,c	;volatile
  9297  001BAA  D021               	goto	i2l309
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;my_i2c.c: 175: ic_ptr->status = 0x5;
  9301  001BAC  0100               	movlb	0	; () banked
  9302  001BAE  EE20 F00D          	lfsr	2,13
  9303  001BB2  0100               	movlb	0	; () banked
  9304  001BB4  51C8               	movf	_ic_ptr& (0+255),w,b
  9305  001BB6  26D9               	addwf	fsr2l,f,c
  9306  001BB8  0100               	movlb	0	; () banked
  9307  001BBA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9308  001BBC  22DA               	addwfc	fsr2h,f,c
  9309  001BBE  0E05               	movlw	5
  9310  001BC0  6EDF               	movwf	indf2,c
  9311                           
  9312                           ;my_i2c.c: 176: ic_ptr->error_count++;
  9313  001BC2  0100               	movlb	0	; () banked
  9314  001BC4  EE20 F00F          	lfsr	2,15
  9315  001BC8  0100               	movlb	0	; () banked
  9316  001BCA  51C8               	movf	_ic_ptr& (0+255),w,b
  9317  001BCC  26D9               	addwf	fsr2l,f,c
  9318  001BCE  0100               	movlb	0	; () banked
  9319  001BD0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9320  001BD2  22DA               	addwfc	fsr2h,f,c
  9321  001BD4  2ADF               	incf	indf2,f,c
  9322                           
  9323                           ;my_i2c.c: 177: ic_ptr->error_code = 0x5;
  9324  001BD6  0100               	movlb	0	; () banked
  9325  001BD8  EE20 F00E          	lfsr	2,14
  9326  001BDC  0100               	movlb	0	; () banked
  9327  001BDE  51C8               	movf	_ic_ptr& (0+255),w,b
  9328  001BE0  26D9               	addwf	fsr2l,f,c
  9329  001BE2  0100               	movlb	0	; () banked
  9330  001BE4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9331  001BE6  22DA               	addwfc	fsr2h,f,c
  9332  001BE8  0E05               	movlw	5
  9333  001BEA  6EDF               	movwf	indf2,c
  9334                           
  9335                           ;my_i2c.c: 178: } else {
  9336  001BEC  0012               	return	
  9337  001BEE                     i2l309:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;my_i2c.c: 179: if (SSPSTATbits.R_W == 1) {
  9341  001BEE  A4C7               	btfss	4039,2,c	;volatile
  9342  001BF0  D00C               	goto	i2l4246
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  9346  001BF2  0100               	movlb	0	; () banked
  9347  001BF4  EE20 F00D          	lfsr	2,13
  9348  001BF8  0100               	movlb	0	; () banked
  9349  001BFA  51C8               	movf	_ic_ptr& (0+255),w,b
  9350  001BFC  26D9               	addwf	fsr2l,f,c
  9351  001BFE  0100               	movlb	0	; () banked
  9352  001C00  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9353  001C02  22DA               	addwfc	fsr2h,f,c
  9354  001C04  0E08               	movlw	8
  9355  001C06  6EDF               	movwf	indf2,c
  9356                           
  9357                           ;my_i2c.c: 181: } else {
  9358  001C08  0012               	return	
  9359  001C0A                     i2l4246:
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;my_i2c.c: 182: ic_ptr->status = 0x7;
  9363  001C0A  0100               	movlb	0	; () banked
  9364  001C0C  EE20 F00D          	lfsr	2,13
  9365  001C10  0100               	movlb	0	; () banked
  9366  001C12  51C8               	movf	_ic_ptr& (0+255),w,b
  9367  001C14  26D9               	addwf	fsr2l,f,c
  9368  001C16  0100               	movlb	0	; () banked
  9369  001C18  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9370  001C1A  22DA               	addwfc	fsr2h,f,c
  9371  001C1C  0E07               	movlw	7
  9372  001C1E  6EDF               	movwf	indf2,c
  9373  001C20  0012               	return	
  9374  001C22                     i2l4248:
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;my_i2c.c: 186: ic_ptr->status = 0x6;
  9378  001C22  0100               	movlb	0	; () banked
  9379  001C24  EE20 F00D          	lfsr	2,13
  9380  001C28  0100               	movlb	0	; () banked
  9381  001C2A  51C8               	movf	_ic_ptr& (0+255),w,b
  9382  001C2C  26D9               	addwf	fsr2l,f,c
  9383  001C2E  0100               	movlb	0	; () banked
  9384  001C30  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9385  001C32  22DA               	addwfc	fsr2h,f,c
  9386  001C34  0E06               	movlw	6
  9387  001C36  6EDF               	movwf	indf2,c
  9388  001C38  0012               	return	
  9389  001C3A                     __end_of_handle_start:
  9390                           	opt stack 0
  9391                           pclatu	equ	0xFFB
  9392                           pclath	equ	0xFFA
  9393                           tblptru	equ	0xFF8
  9394                           tblptrh	equ	0xFF7
  9395                           tblptrl	equ	0xFF6
  9396                           tablat	equ	0xFF5
  9397                           prodh	equ	0xFF4
  9398                           prodl	equ	0xFF3
  9399                           intcon	equ	0xFF2
  9400                           postinc0	equ	0xFEE
  9401                           fsr0h	equ	0xFEA
  9402                           fsr0l	equ	0xFE9
  9403                           wreg	equ	0xFE8
  9404                           indf1	equ	0xFE7
  9405                           postdec1	equ	0xFE5
  9406                           fsr1h	equ	0xFE2
  9407                           fsr1l	equ	0xFE1
  9408                           bsr	equ	0xFE0
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           postdec2	equ	0xFDD
  9412                           fsr2h	equ	0xFDA
  9413                           fsr2l	equ	0xFD9
  9414                           status	equ	0xFD8
  9415                           
  9416 ;; *************** function _i2c_master_int_handler *****************
  9417 ;; Defined at:
  9418 ;;		line 452 in file "source/my_i2c.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;		None
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;		None               void
  9425 ;; Registers used:
  9426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9432 ;;      Params:         0       0       0       0       0
  9433 ;;      Locals:         0       0       0       0       0
  9434 ;;      Temps:          0       1       0       0       0
  9435 ;;      Totals:         0       1       0       0       0
  9436 ;;Total ram usage:        1 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    3
  9439 ;; This function calls:
  9440 ;;		_ToMainHigh_sendmsg
  9441 ;; This function is called by:
  9442 ;;		_i2c_int_handler
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text50
  9447  000BBE                     __ptext50:
  9448                           	opt stack 0
  9449  000BBE                     _i2c_master_int_handler:
  9450                           	opt stack 15
  9451                           
  9452                           ;my_i2c.c: 453: switch (ic_ptr->status){
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;incstack = 0
  9456  000BBE  D1C5               	goto	i2l4320
  9457  000BC0                     i2l4252:
  9458                           
  9459                           ;my_i2c.c: 456: ic_ptr->status = 0x24;
  9460  000BC0  0100               	movlb	0	; () banked
  9461  000BC2  EE20 F00D          	lfsr	2,13
  9462  000BC6  0100               	movlb	0	; () banked
  9463  000BC8  51C8               	movf	_ic_ptr& (0+255),w,b
  9464  000BCA  26D9               	addwf	fsr2l,f,c
  9465  000BCC  0100               	movlb	0	; () banked
  9466  000BCE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9467  000BD0  22DA               	addwfc	fsr2h,f,c
  9468  000BD2  0E24               	movlw	36
  9469  000BD4  6EDF               	movwf	indf2,c
  9470                           
  9471                           ;my_i2c.c: 457: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  9472  000BD6  0100               	movlb	0	; () banked
  9473  000BD8  EE20 F01C          	lfsr	2,28
  9474  000BDC  0100               	movlb	0	; () banked
  9475  000BDE  51C8               	movf	_ic_ptr& (0+255),w,b
  9476  000BE0  26D9               	addwf	fsr2l,f,c
  9477  000BE2  0100               	movlb	0	; () banked
  9478  000BE4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9479  000BE6  22DA               	addwfc	fsr2h,f,c
  9480  000BE8  50DF               	movf	indf2,w,c
  9481  000BEA  0100               	movlb	0	; () banked
  9482  000BEC  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9483  000BEE  0100               	movlb	0	; () banked
  9484  000BF0  90D8               	bcf	status,0,c
  9485  000BF2  359A               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  9486  000BF4  0BFE               	andlw	254
  9487  000BF6  6EC9               	movwf	4041,c	;volatile
  9488                           
  9489                           ;my_i2c.c: 458: break;
  9490  000BF8  0012               	return	
  9491  000BFA                     i2l380:
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;my_i2c.c: 461: if (SSPCON2bits.ACKSTAT == 0) {
  9495  000BFA  BCC5               	btfsc	4037,6,c	;volatile
  9496  000BFC  D07A               	goto	i2l4270
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;my_i2c.c: 462: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  9500  000BFE  0100               	movlb	0	; () banked
  9501  000C00  EE20 F01B          	lfsr	2,27
  9502  000C04  0100               	movlb	0	; () banked
  9503  000C06  51C8               	movf	_ic_ptr& (0+255),w,b
  9504  000C08  26D9               	addwf	fsr2l,f,c
  9505  000C0A  0100               	movlb	0	; () banked
  9506  000C0C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9507  000C0E  22DA               	addwfc	fsr2h,f,c
  9508  000C10  50DF               	movf	indf2,w,c
  9509  000C12  0100               	movlb	0	; () banked
  9510  000C14  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9511  000C16  0100               	movlb	0	; () banked
  9512  000C18  EE20 F01A          	lfsr	2,26
  9513  000C1C  0100               	movlb	0	; () banked
  9514  000C1E  51C8               	movf	_ic_ptr& (0+255),w,b
  9515  000C20  26D9               	addwf	fsr2l,f,c
  9516  000C22  0100               	movlb	0	; () banked
  9517  000C24  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9518  000C26  22DA               	addwfc	fsr2h,f,c
  9519  000C28  50DF               	movf	indf2,w,c
  9520  000C2A  0100               	movlb	0	; () banked
  9521  000C2C  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9522  000C2E  B0D8               	btfsc	status,0,c
  9523  000C30  D035               	goto	i2l4262
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;my_i2c.c: 463: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  9527  000C32  0100               	movlb	0	; () banked
  9528  000C34  EE20 F01B          	lfsr	2,27
  9529  000C38  0100               	movlb	0	; () banked
  9530  000C3A  51C8               	movf	_ic_ptr& (0+255),w,b
  9531  000C3C  26D9               	addwf	fsr2l,f,c
  9532  000C3E  0100               	movlb	0	; () banked
  9533  000C40  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9534  000C42  22DA               	addwfc	fsr2h,f,c
  9535  000C44  50DF               	movf	indf2,w,c
  9536  000C46  0100               	movlb	0	; () banked
  9537  000C48  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9538  000C4A  0100               	movlb	0	; () banked
  9539  000C4C  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9540  000C4E  0D01               	mullw	1
  9541  000C50  0E10               	movlw	16
  9542  000C52  26F3               	addwf	prodl,f,c
  9543  000C54  0E00               	movlw	0
  9544  000C56  22F4               	addwfc	prodh,f,c
  9545  000C58  50F3               	movf	prodl,w,c
  9546  000C5A  0100               	movlb	0	; () banked
  9547  000C5C  0100               	movlb	0	; () banked
  9548  000C5E  25C8               	addwf	_ic_ptr& (0+255),w,b
  9549  000C60  6ED9               	movwf	fsr2l,c
  9550  000C62  50F4               	movf	prodh,w,c
  9551  000C64  0100               	movlb	0	; () banked
  9552  000C66  0100               	movlb	0	; () banked
  9553  000C68  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9554  000C6A  6EDA               	movwf	fsr2h,c
  9555  000C6C  50DF               	movf	indf2,w,c
  9556  000C6E  6EC9               	movwf	4041,c	;volatile
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;my_i2c.c: 464: ic_ptr->outbufind++;
  9560  000C70  0100               	movlb	0	; () banked
  9561  000C72  EE20 F01B          	lfsr	2,27
  9562  000C76  0100               	movlb	0	; () banked
  9563  000C78  51C8               	movf	_ic_ptr& (0+255),w,b
  9564  000C7A  26D9               	addwf	fsr2l,f,c
  9565  000C7C  0100               	movlb	0	; () banked
  9566  000C7E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9567  000C80  22DA               	addwfc	fsr2h,f,c
  9568  000C82  2ADF               	incf	indf2,f,c
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;my_i2c.c: 465: ic_ptr->status = 0x24;
  9572  000C84  0100               	movlb	0	; () banked
  9573  000C86  EE20 F00D          	lfsr	2,13
  9574  000C8A  0100               	movlb	0	; () banked
  9575  000C8C  51C8               	movf	_ic_ptr& (0+255),w,b
  9576  000C8E  26D9               	addwf	fsr2l,f,c
  9577  000C90  0100               	movlb	0	; () banked
  9578  000C92  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9579  000C94  22DA               	addwfc	fsr2h,f,c
  9580  000C96  0E24               	movlw	36
  9581  000C98  6EDF               	movwf	indf2,c
  9582                           
  9583                           ;my_i2c.c: 466: }
  9584  000C9A  0012               	return	
  9585  000C9C                     i2l4262:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;my_i2c.c: 467: else {
  9589                           ;my_i2c.c: 468: ToMainHigh_sendmsg(0, 43, 0);
  9590  000C9C  0100               	movlb	0	; () banked
  9591  000C9E  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9592  000CA0  0E2B               	movlw	43
  9593  000CA2  0100               	movlb	0	; () banked
  9594  000CA4  0100               	movlb	0	; () banked
  9595  000CA6  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  9596  000CA8  0100               	movlb	0	; () banked
  9597  000CAA  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9598  000CAC  0E00               	movlw	0
  9599  000CAE  0100               	movlb	0	; () banked
  9600  000CB0  0100               	movlb	0	; () banked
  9601  000CB2  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  9602  000CB4  0E00               	movlw	0
  9603  000CB6  0100               	movlb	0	; () banked
  9604  000CB8  0100               	movlb	0	; () banked
  9605  000CBA  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  9606  000CBC  0E00               	movlw	0
  9607  000CBE  EC81  F012         	call	_ToMainHigh_sendmsg
  9608                           
  9609                           ;my_i2c.c: 469: ic_ptr->outbuflen = 0;
  9610  000CC2  0100               	movlb	0	; () banked
  9611  000CC4  EE20 F01A          	lfsr	2,26
  9612  000CC8  0100               	movlb	0	; () banked
  9613  000CCA  51C8               	movf	_ic_ptr& (0+255),w,b
  9614  000CCC  26D9               	addwf	fsr2l,f,c
  9615  000CCE  0100               	movlb	0	; () banked
  9616  000CD0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9617  000CD2  22DA               	addwfc	fsr2h,f,c
  9618  000CD4  0E00               	movlw	0
  9619  000CD6  6EDF               	movwf	indf2,c
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;my_i2c.c: 470: ic_ptr->status = 0x5;
  9623  000CD8  0100               	movlb	0	; () banked
  9624  000CDA  EE20 F00D          	lfsr	2,13
  9625  000CDE  0100               	movlb	0	; () banked
  9626  000CE0  51C8               	movf	_ic_ptr& (0+255),w,b
  9627  000CE2  26D9               	addwf	fsr2l,f,c
  9628  000CE4  0100               	movlb	0	; () banked
  9629  000CE6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9630  000CE8  22DA               	addwfc	fsr2h,f,c
  9631  000CEA  0E05               	movlw	5
  9632  000CEC  6EDF               	movwf	indf2,c
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;my_i2c.c: 471: SSPCON2bits.PEN = 1;
  9636  000CEE  84C5               	bsf	4037,2,c	;volatile
  9637  000CF0  0012               	return	
  9638  000CF2                     i2l4270:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;my_i2c.c: 474: else {
  9642                           ;my_i2c.c: 475: ToMainHigh_sendmsg(0, 44, 0);
  9643  000CF2  0100               	movlb	0	; () banked
  9644  000CF4  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9645  000CF6  0E2C               	movlw	44
  9646  000CF8  0100               	movlb	0	; () banked
  9647  000CFA  0100               	movlb	0	; () banked
  9648  000CFC  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  9649  000CFE  0100               	movlb	0	; () banked
  9650  000D00  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9651  000D02  0E00               	movlw	0
  9652  000D04  0100               	movlb	0	; () banked
  9653  000D06  0100               	movlb	0	; () banked
  9654  000D08  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  9655  000D0A  0E00               	movlw	0
  9656  000D0C  0100               	movlb	0	; () banked
  9657  000D0E  0100               	movlb	0	; () banked
  9658  000D10  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  9659  000D12  0E00               	movlw	0
  9660  000D14  EC81  F012         	call	_ToMainHigh_sendmsg
  9661                           
  9662                           ;my_i2c.c: 476: ic_ptr->status = 0x5;
  9663  000D18  0100               	movlb	0	; () banked
  9664  000D1A  EE20 F00D          	lfsr	2,13
  9665  000D1E  0100               	movlb	0	; () banked
  9666  000D20  51C8               	movf	_ic_ptr& (0+255),w,b
  9667  000D22  26D9               	addwf	fsr2l,f,c
  9668  000D24  0100               	movlb	0	; () banked
  9669  000D26  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9670  000D28  22DA               	addwfc	fsr2h,f,c
  9671  000D2A  0E05               	movlw	5
  9672  000D2C  6EDF               	movwf	indf2,c
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;my_i2c.c: 477: SSPCON2bits.PEN = 1;
  9676  000D2E  84C5               	bsf	4037,2,c	;volatile
  9677  000D30  0012               	return	
  9678  000D32                     i2l4276:
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;my_i2c.c: 482: ToMainHigh_sendmsg(0, 43, 0);
  9682  000D32  0100               	movlb	0	; () banked
  9683  000D34  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9684  000D36  0E2B               	movlw	43
  9685  000D38  0100               	movlb	0	; () banked
  9686  000D3A  0100               	movlb	0	; () banked
  9687  000D3C  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  9688  000D3E  0100               	movlb	0	; () banked
  9689  000D40  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9690  000D42  0E00               	movlw	0
  9691  000D44  0100               	movlb	0	; () banked
  9692  000D46  0100               	movlb	0	; () banked
  9693  000D48  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  9694  000D4A  0E00               	movlw	0
  9695  000D4C  0100               	movlb	0	; () banked
  9696  000D4E  0100               	movlb	0	; () banked
  9697  000D50  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  9698  000D52  0E00               	movlw	0
  9699  000D54  EC81  F012         	call	_ToMainHigh_sendmsg
  9700                           
  9701                           ;my_i2c.c: 483: ic_ptr->status = 0x5;
  9702  000D58  0100               	movlb	0	; () banked
  9703  000D5A  EE20 F00D          	lfsr	2,13
  9704  000D5E  0100               	movlb	0	; () banked
  9705  000D60  51C8               	movf	_ic_ptr& (0+255),w,b
  9706  000D62  26D9               	addwf	fsr2l,f,c
  9707  000D64  0100               	movlb	0	; () banked
  9708  000D66  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9709  000D68  22DA               	addwfc	fsr2h,f,c
  9710  000D6A  0E05               	movlw	5
  9711  000D6C  6EDF               	movwf	indf2,c
  9712                           
  9713                           ;my_i2c.c: 484: break;
  9714  000D6E  0012               	return	
  9715  000D70                     i2l4280:
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;my_i2c.c: 491: ic_ptr->status = 0x27;
  9719  000D70  0100               	movlb	0	; () banked
  9720  000D72  EE20 F00D          	lfsr	2,13
  9721  000D76  0100               	movlb	0	; () banked
  9722  000D78  51C8               	movf	_ic_ptr& (0+255),w,b
  9723  000D7A  26D9               	addwf	fsr2l,f,c
  9724  000D7C  0100               	movlb	0	; () banked
  9725  000D7E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9726  000D80  22DA               	addwfc	fsr2h,f,c
  9727  000D82  0E27               	movlw	39
  9728  000D84  6EDF               	movwf	indf2,c
  9729                           
  9730                           ;my_i2c.c: 492: SSPBUF = ((ic_ptr->slave_addr << 1) | 0x01) & 0xFF;
  9731  000D86  0100               	movlb	0	; () banked
  9732  000D88  EE20 F01C          	lfsr	2,28
  9733  000D8C  0100               	movlb	0	; () banked
  9734  000D8E  51C8               	movf	_ic_ptr& (0+255),w,b
  9735  000D90  26D9               	addwf	fsr2l,f,c
  9736  000D92  0100               	movlb	0	; () banked
  9737  000D94  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9738  000D96  22DA               	addwfc	fsr2h,f,c
  9739  000D98  50DF               	movf	indf2,w,c
  9740  000D9A  0100               	movlb	0	; () banked
  9741  000D9C  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9742  000D9E  0100               	movlb	0	; () banked
  9743  000DA0  80D8               	bsf	status,0,c
  9744  000DA2  359A               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  9745  000DA4  6EC9               	movwf	4041,c	;volatile
  9746                           
  9747                           ;my_i2c.c: 493: break;
  9748  000DA6  0012               	return	
  9749  000DA8                     i2l387:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;my_i2c.c: 496: if (SSPCON2bits.ACKSTAT == 0) {
  9753  000DA8  BCC5               	btfsc	4037,6,c	;volatile
  9754  000DAA  D00D               	goto	i2l4286
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;my_i2c.c: 498: ic_ptr->status = 0x15;
  9758  000DAC  0100               	movlb	0	; () banked
  9759  000DAE  EE20 F00D          	lfsr	2,13
  9760  000DB2  0100               	movlb	0	; () banked
  9761  000DB4  51C8               	movf	_ic_ptr& (0+255),w,b
  9762  000DB6  26D9               	addwf	fsr2l,f,c
  9763  000DB8  0100               	movlb	0	; () banked
  9764  000DBA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9765  000DBC  22DA               	addwfc	fsr2h,f,c
  9766  000DBE  0E15               	movlw	21
  9767  000DC0  6EDF               	movwf	indf2,c
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;my_i2c.c: 499: SSPCON2bits.RCEN = 1;
  9771  000DC2  86C5               	bsf	4037,3,c	;volatile
  9772                           
  9773                           ;my_i2c.c: 500: }
  9774  000DC4  0012               	return	
  9775  000DC6                     i2l4286:
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;my_i2c.c: 501: else {
  9779                           ;my_i2c.c: 502: ToMainHigh_sendmsg(0, 46, 0);
  9780  000DC6  0100               	movlb	0	; () banked
  9781  000DC8  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9782  000DCA  0E2E               	movlw	46
  9783  000DCC  0100               	movlb	0	; () banked
  9784  000DCE  0100               	movlb	0	; () banked
  9785  000DD0  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  9786  000DD2  0100               	movlb	0	; () banked
  9787  000DD4  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9788  000DD6  0E00               	movlw	0
  9789  000DD8  0100               	movlb	0	; () banked
  9790  000DDA  0100               	movlb	0	; () banked
  9791  000DDC  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  9792  000DDE  0E00               	movlw	0
  9793  000DE0  0100               	movlb	0	; () banked
  9794  000DE2  0100               	movlb	0	; () banked
  9795  000DE4  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  9796  000DE6  0E00               	movlw	0
  9797  000DE8  EC81  F012         	call	_ToMainHigh_sendmsg
  9798                           
  9799                           ;my_i2c.c: 503: ic_ptr->status = 0x5;
  9800  000DEC  0100               	movlb	0	; () banked
  9801  000DEE  EE20 F00D          	lfsr	2,13
  9802  000DF2  0100               	movlb	0	; () banked
  9803  000DF4  51C8               	movf	_ic_ptr& (0+255),w,b
  9804  000DF6  26D9               	addwf	fsr2l,f,c
  9805  000DF8  0100               	movlb	0	; () banked
  9806  000DFA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9807  000DFC  22DA               	addwfc	fsr2h,f,c
  9808  000DFE  0E05               	movlw	5
  9809  000E00  6EDF               	movwf	indf2,c
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;my_i2c.c: 504: SSPCON2bits.PEN = 1;
  9813  000E02  84C5               	bsf	4037,2,c	;volatile
  9814  000E04  0012               	return	
  9815  000E06                     i2l4292:
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;my_i2c.c: 511: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  9819  000E06  0100               	movlb	0	; () banked
  9820  000E08  EE20 F00B          	lfsr	2,11
  9821  000E0C  0100               	movlb	0	; () banked
  9822  000E0E  51C8               	movf	_ic_ptr& (0+255),w,b
  9823  000E10  26D9               	addwf	fsr2l,f,c
  9824  000E12  0100               	movlb	0	; () banked
  9825  000E14  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9826  000E16  22DA               	addwfc	fsr2h,f,c
  9827  000E18  50DF               	movf	indf2,w,c
  9828  000E1A  0100               	movlb	0	; () banked
  9829  000E1C  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9830  000E1E  0100               	movlb	0	; () banked
  9831  000E20  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9832  000E22  0D01               	mullw	1
  9833  000E24  50F3               	movf	prodl,w,c
  9834  000E26  0100               	movlb	0	; () banked
  9835  000E28  0100               	movlb	0	; () banked
  9836  000E2A  25C8               	addwf	_ic_ptr& (0+255),w,b
  9837  000E2C  6ED9               	movwf	fsr2l,c
  9838  000E2E  50F4               	movf	prodh,w,c
  9839  000E30  0100               	movlb	0	; () banked
  9840  000E32  0100               	movlb	0	; () banked
  9841  000E34  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9842  000E36  6EDA               	movwf	fsr2h,c
  9843  000E38  CFC9 FFDF          	movff	4041,indf2	;volatile
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;my_i2c.c: 512: ic_ptr->bufind++;
  9847  000E3C  0100               	movlb	0	; () banked
  9848  000E3E  EE20 F00B          	lfsr	2,11
  9849  000E42  0100               	movlb	0	; () banked
  9850  000E44  51C8               	movf	_ic_ptr& (0+255),w,b
  9851  000E46  26D9               	addwf	fsr2l,f,c
  9852  000E48  0100               	movlb	0	; () banked
  9853  000E4A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9854  000E4C  22DA               	addwfc	fsr2h,f,c
  9855  000E4E  2ADF               	incf	indf2,f,c
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;my_i2c.c: 513: ic_ptr->status = 0x14;
  9859  000E50  0100               	movlb	0	; () banked
  9860  000E52  EE20 F00D          	lfsr	2,13
  9861  000E56  0100               	movlb	0	; () banked
  9862  000E58  51C8               	movf	_ic_ptr& (0+255),w,b
  9863  000E5A  26D9               	addwf	fsr2l,f,c
  9864  000E5C  0100               	movlb	0	; () banked
  9865  000E5E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9866  000E60  22DA               	addwfc	fsr2h,f,c
  9867  000E62  0E14               	movlw	20
  9868  000E64  6EDF               	movwf	indf2,c
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;my_i2c.c: 515: if (ic_ptr->bufind < ic_ptr->buflen) {
  9872  000E66  0100               	movlb	0	; () banked
  9873  000E68  EE20 F00B          	lfsr	2,11
  9874  000E6C  0100               	movlb	0	; () banked
  9875  000E6E  51C8               	movf	_ic_ptr& (0+255),w,b
  9876  000E70  26D9               	addwf	fsr2l,f,c
  9877  000E72  0100               	movlb	0	; () banked
  9878  000E74  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9879  000E76  22DA               	addwfc	fsr2h,f,c
  9880  000E78  50DF               	movf	indf2,w,c
  9881  000E7A  0100               	movlb	0	; () banked
  9882  000E7C  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9883  000E7E  0100               	movlb	0	; () banked
  9884  000E80  EE20 F00A          	lfsr	2,10
  9885  000E84  0100               	movlb	0	; () banked
  9886  000E86  51C8               	movf	_ic_ptr& (0+255),w,b
  9887  000E88  26D9               	addwf	fsr2l,f,c
  9888  000E8A  0100               	movlb	0	; () banked
  9889  000E8C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9890  000E8E  22DA               	addwfc	fsr2h,f,c
  9891  000E90  50DF               	movf	indf2,w,c
  9892  000E92  0100               	movlb	0	; () banked
  9893  000E94  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9894  000E96  B0D8               	btfsc	status,0,c
  9895  000E98  D003               	goto	i2l391
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;my_i2c.c: 516: SSPCON2bits.ACKDT = 0;
  9899  000E9A  9AC5               	bcf	4037,5,c	;volatile
  9900                           
  9901                           ;my_i2c.c: 517: SSPCON2bits.ACKEN = 1;
  9902  000E9C  88C5               	bsf	4037,4,c	;volatile
  9903                           
  9904                           ;my_i2c.c: 518: }
  9905  000E9E  0012               	return	
  9906  000EA0                     i2l391:
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;my_i2c.c: 519: else {
  9910                           ;my_i2c.c: 520: SSPCON2bits.ACKDT = 1;
  9911  000EA0  8AC5               	bsf	4037,5,c	;volatile
  9912                           
  9913                           ;my_i2c.c: 521: SSPCON2bits.ACKEN = 1;
  9914  000EA2  88C5               	bsf	4037,4,c	;volatile
  9915  000EA4  0012               	return	
  9916  000EA6                     i2l4302:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;my_i2c.c: 526: if (ic_ptr->bufind < ic_ptr->buflen) {
  9920  000EA6  0100               	movlb	0	; () banked
  9921  000EA8  EE20 F00B          	lfsr	2,11
  9922  000EAC  0100               	movlb	0	; () banked
  9923  000EAE  51C8               	movf	_ic_ptr& (0+255),w,b
  9924  000EB0  26D9               	addwf	fsr2l,f,c
  9925  000EB2  0100               	movlb	0	; () banked
  9926  000EB4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9927  000EB6  22DA               	addwfc	fsr2h,f,c
  9928  000EB8  50DF               	movf	indf2,w,c
  9929  000EBA  0100               	movlb	0	; () banked
  9930  000EBC  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9931  000EBE  0100               	movlb	0	; () banked
  9932  000EC0  EE20 F00A          	lfsr	2,10
  9933  000EC4  0100               	movlb	0	; () banked
  9934  000EC6  51C8               	movf	_ic_ptr& (0+255),w,b
  9935  000EC8  26D9               	addwf	fsr2l,f,c
  9936  000ECA  0100               	movlb	0	; () banked
  9937  000ECC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9938  000ECE  22DA               	addwfc	fsr2h,f,c
  9939  000ED0  50DF               	movf	indf2,w,c
  9940  000ED2  0100               	movlb	0	; () banked
  9941  000ED4  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9942  000ED6  B0D8               	btfsc	status,0,c
  9943  000ED8  D00D               	goto	i2l4308
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;my_i2c.c: 527: ic_ptr->status = 0x15;
  9947  000EDA  0100               	movlb	0	; () banked
  9948  000EDC  EE20 F00D          	lfsr	2,13
  9949  000EE0  0100               	movlb	0	; () banked
  9950  000EE2  51C8               	movf	_ic_ptr& (0+255),w,b
  9951  000EE4  26D9               	addwf	fsr2l,f,c
  9952  000EE6  0100               	movlb	0	; () banked
  9953  000EE8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9954  000EEA  22DA               	addwfc	fsr2h,f,c
  9955  000EEC  0E15               	movlw	21
  9956  000EEE  6EDF               	movwf	indf2,c
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;my_i2c.c: 528: SSPCON2bits.RCEN = 1;
  9960  000EF0  86C5               	bsf	4037,3,c	;volatile
  9961                           
  9962                           ;my_i2c.c: 529: }
  9963  000EF2  0012               	return	
  9964  000EF4                     i2l4308:
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;my_i2c.c: 530: else {
  9968                           ;my_i2c.c: 531: ToMainHigh_sendmsg(ic_ptr->buflen, 45, (void *)(ic_ptr->buffer));
  9969  000EF4  0100               	movlb	0	; () banked
  9970  000EF6  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9971  000EF8  0E2D               	movlw	45
  9972  000EFA  0100               	movlb	0	; () banked
  9973  000EFC  0100               	movlb	0	; () banked
  9974  000EFE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  9975  000F00  0100               	movlb	0	; () banked
  9976  000F02  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9977  000F04  0100               	movlb	0	; () banked
  9978  000F06  0100               	movlb	0	; () banked
  9979  000F08  C0C9  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  9980  000F0C  0100               	movlb	0	; () banked
  9981  000F0E  0100               	movlb	0	; () banked
  9982  000F10  C0C8  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  9983  000F14  0100               	movlb	0	; () banked
  9984  000F16  EE20 F00A          	lfsr	2,10
  9985  000F1A  0100               	movlb	0	; () banked
  9986  000F1C  51C8               	movf	_ic_ptr& (0+255),w,b
  9987  000F1E  26D9               	addwf	fsr2l,f,c
  9988  000F20  0100               	movlb	0	; () banked
  9989  000F22  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  9990  000F24  22DA               	addwfc	fsr2h,f,c
  9991  000F26  50DF               	movf	indf2,w,c
  9992  000F28  EC81  F012         	call	_ToMainHigh_sendmsg
  9993                           
  9994                           ;my_i2c.c: 532: ic_ptr->status = 0x5;
  9995  000F2C  0100               	movlb	0	; () banked
  9996  000F2E  EE20 F00D          	lfsr	2,13
  9997  000F32  0100               	movlb	0	; () banked
  9998  000F34  51C8               	movf	_ic_ptr& (0+255),w,b
  9999  000F36  26D9               	addwf	fsr2l,f,c
 10000  000F38  0100               	movlb	0	; () banked
 10001  000F3A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
 10002  000F3C  22DA               	addwfc	fsr2h,f,c
 10003  000F3E  0E05               	movlw	5
 10004  000F40  6EDF               	movwf	indf2,c
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;my_i2c.c: 533: SSPCON2bits.PEN = 1;
 10008  000F42  84C5               	bsf	4037,2,c	;volatile
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;my_i2c.c: 534: SSPCON2bits.ACKDT = 0;
 10012  000F44  9AC5               	bcf	4037,5,c	;volatile
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;my_i2c.c: 535: SSPCON2bits.ACKEN = 1;
 10016  000F46  88C5               	bsf	4037,4,c	;volatile
 10017  000F48  0012               	return	
 10018  000F4A                     i2l4320:
 10019  000F4A  0100               	movlb	0	; () banked
 10020  000F4C  EE20 F00D          	lfsr	2,13
 10021  000F50  0100               	movlb	0	; () banked
 10022  000F52  51C8               	movf	_ic_ptr& (0+255),w,b
 10023  000F54  26D9               	addwf	fsr2l,f,c
 10024  000F56  0100               	movlb	0	; () banked
 10025  000F58  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
 10026  000F5A  22DA               	addwfc	fsr2h,f,c
 10027  000F5C  50DF               	movf	indf2,w,c
 10028                           
 10029                           ; Switch size 1, requested type "space"
 10030                           ; Number of cases is 7, Range of values is 9 to 39
 10031                           ; switch strategies available:
 10032                           ; Name         Instructions Cycles
 10033                           ; simple_byte           22    12 (average)
 10034                           ;	Chosen strategy is simple_byte
 10035  000F5E  0A09               	xorlw	9	; case 9
 10036  000F60  B4D8               	btfsc	status,2,c
 10037  000F62  D62E               	goto	i2l4252
 10038  000F64  0A19               	xorlw	25	; case 16
 10039  000F66  B4D8               	btfsc	status,2,c
 10040  000F68  D703               	goto	i2l4280
 10041  000F6A  0A03               	xorlw	3	; case 19
 10042  000F6C  B4D8               	btfsc	status,2,c
 10043  000F6E  D6E1               	goto	i2l4276
 10044  000F70  0A07               	xorlw	7	; case 20
 10045  000F72  B4D8               	btfsc	status,2,c
 10046  000F74  D798               	goto	i2l4302
 10047  000F76  0A01               	xorlw	1	; case 21
 10048  000F78  B4D8               	btfsc	status,2,c
 10049  000F7A  D745               	goto	i2l4292
 10050  000F7C  0A31               	xorlw	49	; case 36
 10051  000F7E  B4D8               	btfsc	status,2,c
 10052  000F80  D63C               	goto	i2l380
 10053  000F82  0A03               	xorlw	3	; case 39
 10054  000F84  A4D8               	btfss	status,2,c
 10055  000F86  0012               	return	
 10056  000F88  D70F               	goto	i2l387
 10057  000F8A                     __end_of_i2c_master_int_handler:
 10058                           	opt stack 0
 10059                           pclatu	equ	0xFFB
 10060                           pclath	equ	0xFFA
 10061                           tblptru	equ	0xFF8
 10062                           tblptrh	equ	0xFF7
 10063                           tblptrl	equ	0xFF6
 10064                           tablat	equ	0xFF5
 10065                           prodh	equ	0xFF4
 10066                           prodl	equ	0xFF3
 10067                           intcon	equ	0xFF2
 10068                           postinc0	equ	0xFEE
 10069                           fsr0h	equ	0xFEA
 10070                           fsr0l	equ	0xFE9
 10071                           wreg	equ	0xFE8
 10072                           indf1	equ	0xFE7
 10073                           postdec1	equ	0xFE5
 10074                           fsr1h	equ	0xFE2
 10075                           fsr1l	equ	0xFE1
 10076                           bsr	equ	0xFE0
 10077                           indf2	equ	0xFDF
 10078                           postinc2	equ	0xFDE
 10079                           postdec2	equ	0xFDD
 10080                           fsr2h	equ	0xFDA
 10081                           fsr2l	equ	0xFD9
 10082                           status	equ	0xFD8
 10083                           
 10084 ;; *************** function _ToMainHigh_sendmsg *****************
 10085 ;; Defined at:
 10086 ;;		line 126 in file "source/messages.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  length          1    wreg     unsigned char 
 10089 ;;  msgtype         1   22[BANK0 ] unsigned char 
 10090 ;;  data            2   23[BANK0 ] PTR void 
 10091 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;  length          1   25[BANK0 ] unsigned char 
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      char 
 10096 ;; Registers used:
 10097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10103 ;;      Params:         0       3       0       0       0
 10104 ;;      Locals:         0       1       0       0       0
 10105 ;;      Temps:          0       0       0       0       0
 10106 ;;      Totals:         0       4       0       0       0
 10107 ;;Total ram usage:        4 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    2
 10110 ;; This function calls:
 10111 ;;		i2_send_msg
 10112 ;; This function is called by:
 10113 ;;		_i2c_slave_int_handler
 10114 ;;		_i2c_master_int_handler
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text51
 10119  002502                     __ptext51:
 10120                           	opt stack 0
 10121  002502                     _ToMainHigh_sendmsg:
 10122                           	opt stack 15
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;incstack = 0
 10126                           ;ToMainHigh_sendmsg@length stored from wreg
 10127  002502  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
 10128                           
 10129                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 10130                           ;	Return value of _ToMainHigh_sendmsg is never used
 10131  002506  0101               	movlb	1	; () banked
 10132  002508  0E01               	movlw	high _ToMainHigh_MQ
 10133  00250A  0100               	movlb	0	; () banked
 10134  00250C  0100               	movlb	0	; () banked
 10135  00250E  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
 10136  002510  0101               	movlb	1	; () banked
 10137  002512  0E36               	movlw	low _ToMainHigh_MQ
 10138  002514  0100               	movlb	0	; () banked
 10139  002516  0100               	movlb	0	; () banked
 10140  002518  6F8A               	movwf	i2send_msg@qptr& (0+255),b
 10141  00251A  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
 10142  00251E  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
 10143  002522  0100               	movlb	0	; () banked
 10144  002524  0100               	movlb	0	; () banked
 10145  002526  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
 10146  00252A  0100               	movlb	0	; () banked
 10147  00252C  0100               	movlb	0	; () banked
 10148  00252E  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
 10149  002532  ECEB  F00B         	call	i2_send_msg	;wreg free
 10150  002536  0012               	return	
 10151  002538                     __end_of_ToMainHigh_sendmsg:
 10152                           	opt stack 0
 10153                           pclatu	equ	0xFFB
 10154                           pclath	equ	0xFFA
 10155                           tblptru	equ	0xFF8
 10156                           tblptrh	equ	0xFF7
 10157                           tblptrl	equ	0xFF6
 10158                           tablat	equ	0xFF5
 10159                           prodh	equ	0xFF4
 10160                           prodl	equ	0xFF3
 10161                           intcon	equ	0xFF2
 10162                           postinc0	equ	0xFEE
 10163                           fsr0h	equ	0xFEA
 10164                           fsr0l	equ	0xFE9
 10165                           wreg	equ	0xFE8
 10166                           indf1	equ	0xFE7
 10167                           postdec1	equ	0xFE5
 10168                           fsr1h	equ	0xFE2
 10169                           fsr1l	equ	0xFE1
 10170                           bsr	equ	0xFE0
 10171                           indf2	equ	0xFDF
 10172                           postinc2	equ	0xFDE
 10173                           postdec2	equ	0xFDD
 10174                           fsr2h	equ	0xFDA
 10175                           fsr2l	equ	0xFD9
 10176                           status	equ	0xFD8
 10177                           
 10178 ;; *************** function i2_send_msg *****************
 10179 ;; Defined at:
 10180 ;;		line 24 in file "source/messages.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
 10183 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10184 ;;  length          1   12[BANK0 ] unsigned char 
 10185 ;;  msgtype         1   13[BANK0 ] unsigned char 
 10186 ;;  data            2   14[BANK0 ] PTR void 
 10187 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
 10188 ;;		 -> main@ic(53), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
 10191 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
 10192 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10193 ;;  send_msg        2   17[BANK0 ] unsigned int 
 10194 ;;  send_msg        1   19[BANK0 ] unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      char 
 10197 ;; Registers used:
 10198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10204 ;;      Params:         0       6       0       0       0
 10205 ;;      Locals:         0       5       0       0       0
 10206 ;;      Temps:          0       1       0       0       0
 10207 ;;      Totals:         0      12       0       0       0
 10208 ;;Total ram usage:       12 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    1
 10211 ;; This function calls:
 10212 ;;		i2_memcpy
 10213 ;; This function is called by:
 10214 ;;		_ToMainHigh_sendmsg
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text52
 10219  0017D6                     __ptext52:
 10220                           	opt stack 0
 10221  0017D6                     i2_send_msg:
 10222                           	opt stack 15
 10223                           
 10224                           ;messages.c: 25: unsigned char slot;
 10225                           ;messages.c: 27: msg *qmsg;
 10226                           ;messages.c: 28: size_t tlength = length;
 10227                           
 10228                           ;incstack = 0
 10229  0017D6  0100               	movlb	0	; () banked
 10230  0017D8  0100               	movlb	0	; () banked
 10231  0017DA  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
 10232  0017DE  0100               	movlb	0	; () banked
 10233  0017E0  0100               	movlb	0	; () banked
 10234  0017E2  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10238  0017E4  0100               	movlb	0	; () banked
 10239  0017E6  EE20 F034          	lfsr	2,52
 10240  0017EA  0100               	movlb	0	; () banked
 10241  0017EC  518A               	movf	i2send_msg@qptr& (0+255),w,b
 10242  0017EE  26D9               	addwf	fsr2l,f,c
 10243  0017F0  0100               	movlb	0	; () banked
 10244  0017F2  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 10245  0017F4  22DA               	addwfc	fsr2h,f,c
 10246  0017F6  50DF               	movf	indf2,w,c
 10247  0017F8  0100               	movlb	0	; () banked
 10248  0017FA  0100               	movlb	0	; () banked
 10249  0017FC  6F93               	movwf	i2send_msg@slot& (0+255),b
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10253  0017FE  0100               	movlb	0	; () banked
 10254  001800  0100               	movlb	0	; () banked
 10255  001802  5193               	movf	i2send_msg@slot& (0+255),w,b
 10256  001804  0D0D               	mullw	13
 10257  001806  50F3               	movf	prodl,w,c
 10258  001808  0100               	movlb	0	; () banked
 10259  00180A  0100               	movlb	0	; () banked
 10260  00180C  258A               	addwf	i2send_msg@qptr& (0+255),w,b
 10261  00180E  0100               	movlb	0	; () banked
 10262  001810  0100               	movlb	0	; () banked
 10263  001812  6F94               	movwf	i2send_msg@qmsg& (0+255),b
 10264  001814  50F4               	movf	prodh,w,c
 10265  001816  0100               	movlb	0	; () banked
 10266  001818  0100               	movlb	0	; () banked
 10267  00181A  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
 10268  00181C  0100               	movlb	0	; () banked
 10269  00181E  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;messages.c: 41: if (qmsg->full != 0) {
 10273  001820  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 10274  001824  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 10275  001828  50DF               	movf	indf2,w,c
 10276  00182A  B4D8               	btfsc	status,2,c
 10277  00182C  D002               	goto	i2l4566
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;messages.c: 42: return (-1);
 10281  00182E  0EFF               	movlw	255
 10282  001830  0012               	return	
 10283  001832                     i2l4566:
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;messages.c: 43: }
 10287                           ;messages.c: 46: qmsg->length = length;
 10288  001832  0100               	movlb	0	; () banked
 10289  001834  EE20 F001          	lfsr	2,1
 10290  001838  0100               	movlb	0	; () banked
 10291  00183A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 10292  00183C  26D9               	addwf	fsr2l,f,c
 10293  00183E  0100               	movlb	0	; () banked
 10294  001840  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 10295  001842  22DA               	addwfc	fsr2h,f,c
 10296  001844  0100               	movlb	0	; () banked
 10297  001846  C08C  FFDF         	movff	i2send_msg@length,indf2
 10298                           
 10299                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10300  00184A  0100               	movlb	0	; () banked
 10301  00184C  EE20 F002          	lfsr	2,2
 10302  001850  0100               	movlb	0	; () banked
 10303  001852  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 10304  001854  26D9               	addwf	fsr2l,f,c
 10305  001856  0100               	movlb	0	; () banked
 10306  001858  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 10307  00185A  22DA               	addwfc	fsr2h,f,c
 10308  00185C  0100               	movlb	0	; () banked
 10309  00185E  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10313  001862  0E03               	movlw	3
 10314  001864  0100               	movlb	0	; () banked
 10315  001866  0100               	movlb	0	; () banked
 10316  001868  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
 10317  00186A  0100               	movlb	0	; () banked
 10318  00186C  0100               	movlb	0	; () banked
 10319  00186E  6F80               	movwf	i2memcpy@d1& (0+255),b
 10320  001870  0E00               	movlw	0
 10321  001872  0100               	movlb	0	; () banked
 10322  001874  0100               	movlb	0	; () banked
 10323  001876  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
 10324  001878  0100               	movlb	0	; () banked
 10325  00187A  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
 10326  00187C  0100               	movlb	0	; () banked
 10327  00187E  0100               	movlb	0	; () banked
 10328  001880  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
 10329  001884  0100               	movlb	0	; () banked
 10330  001886  0100               	movlb	0	; () banked
 10331  001888  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
 10332  00188C  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
 10333  001890  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
 10334  001894  EC7A  F010         	call	i2_memcpy	;wreg free
 10335                           
 10336                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10337  001898  0100               	movlb	0	; () banked
 10338  00189A  EE20 F034          	lfsr	2,52
 10339  00189E  0100               	movlb	0	; () banked
 10340  0018A0  518A               	movf	i2send_msg@qptr& (0+255),w,b
 10341  0018A2  26D9               	addwf	fsr2l,f,c
 10342  0018A4  0100               	movlb	0	; () banked
 10343  0018A6  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 10344  0018A8  22DA               	addwfc	fsr2h,f,c
 10345  0018AA  0100               	movlb	0	; () banked
 10346  0018AC  EE10 F034          	lfsr	1,52
 10347  0018B0  0100               	movlb	0	; () banked
 10348  0018B2  518A               	movf	i2send_msg@qptr& (0+255),w,b
 10349  0018B4  26E1               	addwf	fsr1l,f,c
 10350  0018B6  0100               	movlb	0	; () banked
 10351  0018B8  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 10352  0018BA  22E2               	addwfc	fsr1h,f,c
 10353  0018BC  50E7               	movf	indf1,w,c
 10354  0018BE  0100               	movlb	0	; () banked
 10355  0018C0  6F90               	movwf	??i2_send_msg& (0+255),b
 10356  0018C2  0100               	movlb	0	; () banked
 10357  0018C4  2990               	incf	??i2_send_msg& (0+255),w,b
 10358  0018C6  0B03               	andlw	3
 10359  0018C8  6EDF               	movwf	indf2,c
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;messages.c: 59: qmsg->full = 1;
 10363  0018CA  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 10364  0018CE  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 10365  0018D2  0E01               	movlw	1
 10366  0018D4  6EDF               	movwf	indf2,c
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;messages.c: 60: return (1);
 10370  0018D6  0E01               	movlw	1
 10371  0018D8  0012               	return	
 10372  0018DA                     __end_ofi2_send_msg:
 10373                           	opt stack 0
 10374                           pclatu	equ	0xFFB
 10375                           pclath	equ	0xFFA
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           postinc0	equ	0xFEE
 10384                           fsr0h	equ	0xFEA
 10385                           fsr0l	equ	0xFE9
 10386                           wreg	equ	0xFE8
 10387                           indf1	equ	0xFE7
 10388                           postdec1	equ	0xFE5
 10389                           fsr1h	equ	0xFE2
 10390                           fsr1l	equ	0xFE1
 10391                           bsr	equ	0xFE0
 10392                           indf2	equ	0xFDF
 10393                           postinc2	equ	0xFDE
 10394                           postdec2	equ	0xFDD
 10395                           fsr2h	equ	0xFDA
 10396                           fsr2l	equ	0xFD9
 10397                           status	equ	0xFD8
 10398                           
 10399 ;; *************** function i2_memcpy *****************
 10400 ;; Defined at:
 10401 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  d1              2    0[BANK0 ] PTR void 
 10404 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
 10405 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10406 ;;		 -> main@msgbuffer(11), 
 10407 ;;  s1              2    2[BANK0 ] PTR const void 
 10408 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 10409 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 10410 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
 10411 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 10412 ;;		 -> main@ic(53), 
 10413 ;;  n               2    4[BANK0 ] unsigned int 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
 10416 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 10417 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 10418 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
 10419 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 10420 ;;		 -> main@ic(53), 
 10421 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
 10422 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
 10423 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10424 ;;		 -> main@msgbuffer(11), 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  2    0[BANK0 ] PTR void 
 10427 ;; Registers used:
 10428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10434 ;;      Params:         0       6       0       0       0
 10435 ;;      Locals:         0       4       0       0       0
 10436 ;;      Temps:          0       0       0       0       0
 10437 ;;      Totals:         0      10       0       0       0
 10438 ;;Total ram usage:       10 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; This function calls:
 10441 ;;		Nothing
 10442 ;; This function is called by:
 10443 ;;		i2_send_msg
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text53
 10448  0020F4                     __ptext53:
 10449                           	opt stack 0
 10450  0020F4                     i2_memcpy:
 10451                           	opt stack 15
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;incstack = 0
 10455  0020F4  0100               	movlb	0	; () banked
 10456  0020F6  0100               	movlb	0	; () banked
 10457  0020F8  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
 10458  0020FC  0100               	movlb	0	; () banked
 10459  0020FE  0100               	movlb	0	; () banked
 10460  002100  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
 10461  002104  0100               	movlb	0	; () banked
 10462  002106  0100               	movlb	0	; () banked
 10463  002108  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
 10464  00210C  0100               	movlb	0	; () banked
 10465  00210E  0100               	movlb	0	; () banked
 10466  002110  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
 10467  002114  D012               	goto	i2l4600
 10468  002116                     i2l4594:
 10469                           
 10470                           ; BSR set to: 0
 10471  002116  C088  FFD9         	movff	i2memcpy@s,fsr2l
 10472  00211A  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
 10473  00211E  C086  FFE1         	movff	i2memcpy@d,fsr1l
 10474  002122  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
 10475  002126  CFDF FFE7          	movff	indf2,indf1
 10476                           
 10477                           ; BSR set to: 0
 10478  00212A  0100               	movlb	0	; () banked
 10479  00212C  0100               	movlb	0	; () banked
 10480  00212E  4B88               	infsnz	i2memcpy@s& (0+255),f,b
 10481  002130  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
 10482                           
 10483                           ; BSR set to: 0
 10484  002132  0100               	movlb	0	; () banked
 10485  002134  0100               	movlb	0	; () banked
 10486  002136  4B86               	infsnz	i2memcpy@d& (0+255),f,b
 10487  002138  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
 10488  00213A                     i2l4600:
 10489                           
 10490                           ; BSR set to: 0
 10491  00213A  0100               	movlb	0	; () banked
 10492  00213C  0100               	movlb	0	; () banked
 10493  00213E  0784               	decf	i2memcpy@n& (0+255),f,b
 10494  002140  A0D8               	btfss	status,0,c
 10495  002142  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
 10496  002144  0100               	movlb	0	; () banked
 10497  002146  2984               	incf	i2memcpy@n& (0+255),w,b
 10498  002148  B4D8               	btfsc	status,2,c
 10499  00214A  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
 10500  00214C  B4D8               	btfsc	status,2,c
 10501                           
 10502                           ; BSR set to: 0
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;	Return value of i2_memcpy is never used
 10506  00214E  0012               	return	
 10507  002150  D7E2               	goto	i2l4594
 10508  002152                     __end_ofi2_memcpy:
 10509                           	opt stack 0
 10510                           pclatu	equ	0xFFB
 10511                           pclath	equ	0xFFA
 10512                           tblptru	equ	0xFF8
 10513                           tblptrh	equ	0xFF7
 10514                           tblptrl	equ	0xFF6
 10515                           tablat	equ	0xFF5
 10516                           prodh	equ	0xFF4
 10517                           prodl	equ	0xFF3
 10518                           intcon	equ	0xFF2
 10519                           postinc0	equ	0xFEE
 10520                           fsr0h	equ	0xFEA
 10521                           fsr0l	equ	0xFE9
 10522                           wreg	equ	0xFE8
 10523                           indf1	equ	0xFE7
 10524                           postdec1	equ	0xFE5
 10525                           fsr1h	equ	0xFE2
 10526                           fsr1l	equ	0xFE1
 10527                           bsr	equ	0xFE0
 10528                           indf2	equ	0xFDF
 10529                           postinc2	equ	0xFDE
 10530                           postdec2	equ	0xFDD
 10531                           fsr2h	equ	0xFDA
 10532                           fsr2l	equ	0xFD9
 10533                           status	equ	0xFD8
 10534                           
 10535 ;; *************** function _SleepIfOkay *****************
 10536 ;; Defined at:
 10537 ;;		line 228 in file "source/messages.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;		None               void
 10544 ;; Registers used:
 10545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10551 ;;      Params:         0       0       0       0       0
 10552 ;;      Locals:         0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0
 10554 ;;      Totals:         0       0       0       0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    2
 10558 ;; This function calls:
 10559 ;;		_enter_sleep_mode
 10560 ;;		i2_check_msg
 10561 ;;		i2_in_high_int
 10562 ;;		i2_in_low_int
 10563 ;; This function is called by:
 10564 ;;		_InterruptHandlerHigh
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text54
 10569  001FC8                     __ptext54:
 10570                           	opt stack 0
 10571  001FC8                     _SleepIfOkay:
 10572                           	opt stack 17
 10573                           
 10574                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;incstack = 0
 10578  001FC8  663F               	tstfsz	_MQ_Main_Willing_to_block,c
 10579  001FCA  D001               	goto	i2l3676
 10580  001FCC  0012               	return	
 10581  001FCE                     i2l3676:
 10582                           
 10583                           ;messages.c: 232: }
 10584                           ;messages.c: 235: if (in_low_int()) {
 10585  001FCE  EC6C  F011         	call	i2_in_low_int	;wreg free
 10586  001FD2  0100               	movlb	0	; () banked
 10587  001FD4  0100               	movlb	0	; () banked
 10588  001FD6  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
 10589  001FD8  0100               	movlb	0	; () banked
 10590  001FDA  1182               	iorwf	?i2_in_low_int& (0+255),w,b
 10591  001FDC  A4D8               	btfss	status,2,c
 10592  001FDE  0012               	return	
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;messages.c: 237: }
 10596                           ;messages.c: 240: if (!in_high_int()) {
 10597                           
 10598                           ; BSR set to: 0
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;messages.c: 236: return;
 10602  001FE0  EC7B  F013         	call	i2_in_high_int	;wreg free
 10603  001FE4  0100               	movlb	0	; () banked
 10604  001FE6  0100               	movlb	0	; () banked
 10605  001FE8  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10606  001FEA  0100               	movlb	0	; () banked
 10607  001FEC  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10608  001FEE  B4D8               	btfsc	status,2,c
 10609  001FF0  0012               	return	
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;messages.c: 242: }
 10613                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 10614                           
 10615                           ; BSR set to: 0
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;messages.c: 241: return;
 10619  001FF2  0101               	movlb	1	; () banked
 10620  001FF4  0E01               	movlw	high _ToMainHigh_MQ
 10621  001FF6  0100               	movlb	0	; () banked
 10622  001FF8  0100               	movlb	0	; () banked
 10623  001FFA  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 10624  001FFC  0101               	movlb	1	; () banked
 10625  001FFE  0E36               	movlw	low _ToMainHigh_MQ
 10626  002000  0100               	movlb	0	; () banked
 10627  002002  0100               	movlb	0	; () banked
 10628  002004  6F80               	movwf	i2check_msg@qptr& (0+255),b
 10629  002006  EC9C  F012         	call	i2_check_msg	;wreg free
 10630  00200A  0900               	iorlw	0
 10631  00200C  A4D8               	btfss	status,2,c
 10632  00200E  0012               	return	
 10633                           
 10634                           ;messages.c: 249: }
 10635                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 10636                           
 10637                           ;messages.c: 248: return;
 10638  002010  0101               	movlb	1	; () banked
 10639  002012  0E01               	movlw	high _ToMainLow_MQ
 10640  002014  0100               	movlb	0	; () banked
 10641  002016  0100               	movlb	0	; () banked
 10642  002018  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 10643  00201A  0101               	movlb	1	; () banked
 10644  00201C  0E6C               	movlw	low _ToMainLow_MQ
 10645  00201E  0100               	movlb	0	; () banked
 10646  002020  0100               	movlb	0	; () banked
 10647  002022  6F80               	movwf	i2check_msg@qptr& (0+255),b
 10648  002024  EC9C  F012         	call	i2_check_msg	;wreg free
 10649  002028  0900               	iorlw	0
 10650  00202A  B4D8               	btfsc	status,2,c
 10651                           
 10652                           ;messages.c: 252: }
 10653                           ;messages.c: 253: enter_sleep_mode();
 10654                           
 10655                           ;messages.c: 251: return;
 10656  00202C  EC8C  F013         	call	_enter_sleep_mode	;wreg free
 10657  002030  0012               	return	
 10658  002032                     __end_of_SleepIfOkay:
 10659                           	opt stack 0
 10660                           pclatu	equ	0xFFB
 10661                           pclath	equ	0xFFA
 10662                           tblptru	equ	0xFF8
 10663                           tblptrh	equ	0xFF7
 10664                           tblptrl	equ	0xFF6
 10665                           tablat	equ	0xFF5
 10666                           prodh	equ	0xFF4
 10667                           prodl	equ	0xFF3
 10668                           intcon	equ	0xFF2
 10669                           postinc0	equ	0xFEE
 10670                           fsr0h	equ	0xFEA
 10671                           fsr0l	equ	0xFE9
 10672                           wreg	equ	0xFE8
 10673                           indf1	equ	0xFE7
 10674                           postdec1	equ	0xFE5
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           bsr	equ	0xFE0
 10678                           indf2	equ	0xFDF
 10679                           postinc2	equ	0xFDE
 10680                           postdec2	equ	0xFDD
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function i2_in_low_int *****************
 10686 ;; Defined at:
 10687 ;;		line 30 in file "source/interrupts.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  2    2[BANK0 ] int 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10701 ;;      Params:         0       2       0       0       0
 10702 ;;      Locals:         0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0
 10704 ;;      Totals:         0       2       0       0       0
 10705 ;;Total ram usage:        2 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    1
 10708 ;; This function calls:
 10709 ;;		i2_in_high_int
 10710 ;; This function is called by:
 10711 ;;		_SleepIfOkay
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text55
 10716  0022D8                     __ptext55:
 10717                           	opt stack 0
 10718  0022D8                     i2_in_low_int:
 10719                           	opt stack 17
 10720                           
 10721                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 10722                           
 10723                           ;incstack = 0
 10724  0022D8  ACF2               	btfss	intcon,6,c	;volatile
 10725  0022DA  D008               	goto	i2l4542
 10726                           
 10727                           ;interrupts.c: 32: return (0);
 10728  0022DC  0E00               	movlw	0
 10729  0022DE  0100               	movlb	0	; () banked
 10730  0022E0  0100               	movlb	0	; () banked
 10731  0022E2  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10732  0022E4  0E00               	movlw	0
 10733  0022E6  0100               	movlb	0	; () banked
 10734  0022E8  6F82               	movwf	?i2_in_low_int& (0+255),b
 10735  0022EA  0012               	return	
 10736  0022EC                     i2l4542:
 10737  0022EC  EC7B  F013         	call	i2_in_high_int	;wreg free
 10738  0022F0  0100               	movlb	0	; () banked
 10739  0022F2  0100               	movlb	0	; () banked
 10740  0022F4  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10741  0022F6  0100               	movlb	0	; () banked
 10742  0022F8  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10743  0022FA  B4D8               	btfsc	status,2,c
 10744  0022FC  D008               	goto	i2l4550
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;interrupts.c: 34: return (0);
 10748  0022FE  0E00               	movlw	0
 10749  002300  0100               	movlb	0	; () banked
 10750  002302  0100               	movlb	0	; () banked
 10751  002304  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10752  002306  0E00               	movlw	0
 10753  002308  0100               	movlb	0	; () banked
 10754  00230A  6F82               	movwf	?i2_in_low_int& (0+255),b
 10755  00230C  0012               	return	
 10756  00230E                     i2l4550:
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;interrupts.c: 36: return (1);
 10760  00230E  0E00               	movlw	0
 10761  002310  0100               	movlb	0	; () banked
 10762  002312  0100               	movlb	0	; () banked
 10763  002314  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10764  002316  0E01               	movlw	1
 10765  002318  0100               	movlb	0	; () banked
 10766  00231A  6F82               	movwf	?i2_in_low_int& (0+255),b
 10767  00231C  0012               	return	
 10768  00231E                     __end_ofi2_in_low_int:
 10769                           	opt stack 0
 10770                           pclatu	equ	0xFFB
 10771                           pclath	equ	0xFFA
 10772                           tblptru	equ	0xFF8
 10773                           tblptrh	equ	0xFF7
 10774                           tblptrl	equ	0xFF6
 10775                           tablat	equ	0xFF5
 10776                           prodh	equ	0xFF4
 10777                           prodl	equ	0xFF3
 10778                           intcon	equ	0xFF2
 10779                           postinc0	equ	0xFEE
 10780                           fsr0h	equ	0xFEA
 10781                           fsr0l	equ	0xFE9
 10782                           wreg	equ	0xFE8
 10783                           indf1	equ	0xFE7
 10784                           postdec1	equ	0xFE5
 10785                           fsr1h	equ	0xFE2
 10786                           fsr1l	equ	0xFE1
 10787                           bsr	equ	0xFE0
 10788                           indf2	equ	0xFDF
 10789                           postinc2	equ	0xFDE
 10790                           postdec2	equ	0xFDD
 10791                           fsr2h	equ	0xFDA
 10792                           fsr2l	equ	0xFD9
 10793                           status	equ	0xFD8
 10794                           
 10795 ;; *************** function i2_in_high_int *****************
 10796 ;; Defined at:
 10797 ;;		line 22 in file "source/interrupts.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;		None
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  2    0[BANK0 ] int 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10811 ;;      Params:         0       2       0       0       0
 10812 ;;      Locals:         0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0
 10814 ;;      Totals:         0       2       0       0       0
 10815 ;;Total ram usage:        2 bytes
 10816 ;; Hardware stack levels used:    1
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_SleepIfOkay
 10821 ;;		i2_in_low_int
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text56
 10826  0026F6                     __ptext56:
 10827                           	opt stack 0
 10828  0026F6                     i2_in_high_int:
 10829                           	opt stack 17
 10830                           
 10831                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;incstack = 0
 10835  0026F6  0E00               	movlw	0
 10836  0026F8  AEF2               	btfss	intcon,7,c	;volatile
 10837  0026FA  0E01               	movlw	1
 10838  0026FC  0100               	movlb	0	; () banked
 10839  0026FE  0100               	movlb	0	; () banked
 10840  002700  6F80               	movwf	?i2_in_high_int& (0+255),b
 10841  002702  0100               	movlb	0	; () banked
 10842  002704  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 10843  002706  0012               	return	
 10844  002708                     __end_ofi2_in_high_int:
 10845                           	opt stack 0
 10846                           pclatu	equ	0xFFB
 10847                           pclath	equ	0xFFA
 10848                           tblptru	equ	0xFF8
 10849                           tblptrh	equ	0xFF7
 10850                           tblptrl	equ	0xFF6
 10851                           tablat	equ	0xFF5
 10852                           prodh	equ	0xFF4
 10853                           prodl	equ	0xFF3
 10854                           intcon	equ	0xFF2
 10855                           postinc0	equ	0xFEE
 10856                           fsr0h	equ	0xFEA
 10857                           fsr0l	equ	0xFE9
 10858                           wreg	equ	0xFE8
 10859                           indf1	equ	0xFE7
 10860                           postdec1	equ	0xFE5
 10861                           fsr1h	equ	0xFE2
 10862                           fsr1l	equ	0xFE1
 10863                           bsr	equ	0xFE0
 10864                           indf2	equ	0xFDF
 10865                           postinc2	equ	0xFDE
 10866                           postdec2	equ	0xFDD
 10867                           fsr2h	equ	0xFDA
 10868                           fsr2l	equ	0xFD9
 10869                           status	equ	0xFD8
 10870                           
 10871 ;; *************** function i2_check_msg *****************
 10872 ;; Defined at:
 10873 ;;		line 222 in file "source/messages.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10876 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;		None
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      unsigned char 
 10881 ;; Registers used:
 10882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10888 ;;      Params:         0       2       0       0       0
 10889 ;;      Locals:         0       0       0       0       0
 10890 ;;      Temps:          0       1       0       0       0
 10891 ;;      Totals:         0       3       0       0       0
 10892 ;;Total ram usage:        3 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_SleepIfOkay
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text57
 10902  002538                     __ptext57:
 10903                           	opt stack 0
 10904  002538                     i2_check_msg:
 10905                           	opt stack 18
 10906                           
 10907                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;incstack = 0
 10911  002538  0100               	movlb	0	; () banked
 10912  00253A  EE20 F035          	lfsr	2,53
 10913  00253E  0100               	movlb	0	; () banked
 10914  002540  5180               	movf	i2check_msg@qptr& (0+255),w,b
 10915  002542  26D9               	addwf	fsr2l,f,c
 10916  002544  0100               	movlb	0	; () banked
 10917  002546  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 10918  002548  22DA               	addwfc	fsr2h,f,c
 10919  00254A  50DF               	movf	indf2,w,c
 10920  00254C  0100               	movlb	0	; () banked
 10921  00254E  6F82               	movwf	??i2_check_msg& (0+255),b
 10922  002550  0100               	movlb	0	; () banked
 10923  002552  5182               	movf	??i2_check_msg& (0+255),w,b
 10924  002554  0D0D               	mullw	13
 10925  002556  50F3               	movf	prodl,w,c
 10926  002558  0100               	movlb	0	; () banked
 10927  00255A  0100               	movlb	0	; () banked
 10928  00255C  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 10929  00255E  6ED9               	movwf	fsr2l,c
 10930  002560  50F4               	movf	prodh,w,c
 10931  002562  0100               	movlb	0	; () banked
 10932  002564  0100               	movlb	0	; () banked
 10933  002566  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 10934  002568  6EDA               	movwf	fsr2h,c
 10935  00256A  50DF               	movf	indf2,w,c
 10936  00256C  0012               	return	
 10937  00256E                     __end_ofi2_check_msg:
 10938                           	opt stack 0
 10939                           pclatu	equ	0xFFB
 10940                           pclath	equ	0xFFA
 10941                           tblptru	equ	0xFF8
 10942                           tblptrh	equ	0xFF7
 10943                           tblptrl	equ	0xFF6
 10944                           tablat	equ	0xFF5
 10945                           prodh	equ	0xFF4
 10946                           prodl	equ	0xFF3
 10947                           intcon	equ	0xFF2
 10948                           postinc0	equ	0xFEE
 10949                           fsr0h	equ	0xFEA
 10950                           fsr0l	equ	0xFE9
 10951                           wreg	equ	0xFE8
 10952                           indf1	equ	0xFE7
 10953                           postdec1	equ	0xFE5
 10954                           fsr1h	equ	0xFE2
 10955                           fsr1l	equ	0xFE1
 10956                           bsr	equ	0xFE0
 10957                           indf2	equ	0xFDF
 10958                           postinc2	equ	0xFDE
 10959                           postdec2	equ	0xFDD
 10960                           fsr2h	equ	0xFDA
 10961                           fsr2l	equ	0xFD9
 10962                           status	equ	0xFD8
 10963                           
 10964 ;; *************** function _enter_sleep_mode *****************
 10965 ;; Defined at:
 10966 ;;		line 202 in file "source/messages.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;		None               void
 10973 ;; Registers used:
 10974 ;;		None
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10980 ;;      Params:         0       0       0       0       0
 10981 ;;      Locals:         0       0       0       0       0
 10982 ;;      Temps:          0       0       0       0       0
 10983 ;;      Totals:         0       0       0       0       0
 10984 ;;Total ram usage:        0 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; This function calls:
 10987 ;;		Nothing
 10988 ;; This function is called by:
 10989 ;;		_SleepIfOkay
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	text58
 10994  002718                     __ptext58:
 10995                           	opt stack 0
 10996  002718                     _enter_sleep_mode:
 10997                           	opt stack 18
 10998                           
 10999                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;incstack = 0
 11003  002718  8ED3               	bsf	4051,7,c	;volatile
 11004  00271A  0003               	sleep		;# 
 11005  00271C  0012               	return	
 11006  00271E                     __end_of_enter_sleep_mode:
 11007                           	opt stack 0
 11008  0000                     pclatu	equ	0xFFB
 11009                           pclath	equ	0xFFA
 11010                           tblptru	equ	0xFF8
 11011                           tblptrh	equ	0xFF7
 11012                           tblptrl	equ	0xFF6
 11013                           tablat	equ	0xFF5
 11014                           prodh	equ	0xFF4
 11015                           prodl	equ	0xFF3
 11016                           intcon	equ	0xFF2
 11017                           postinc0	equ	0xFEE
 11018                           fsr0h	equ	0xFEA
 11019                           fsr0l	equ	0xFE9
 11020                           wreg	equ	0xFE8
 11021                           indf1	equ	0xFE7
 11022                           postdec1	equ	0xFE5
 11023                           fsr1h	equ	0xFE2
 11024                           fsr1l	equ	0xFE1
 11025                           bsr	equ	0xFE0
 11026                           indf2	equ	0xFDF
 11027                           postinc2	equ	0xFDE
 11028                           postdec2	equ	0xFDD
 11029                           fsr2h	equ	0xFDA
 11030                           fsr2l	equ	0xFD9
 11031                           status	equ	0xFD8
 11032                           pclatu	equ	0xFFB
 11033                           pclath	equ	0xFFA
 11034                           tblptru	equ	0xFF8
 11035                           tblptrh	equ	0xFF7
 11036                           tblptrl	equ	0xFF6
 11037                           tablat	equ	0xFF5
 11038                           prodh	equ	0xFF4
 11039                           prodl	equ	0xFF3
 11040                           intcon	equ	0xFF2
 11041                           postinc0	equ	0xFEE
 11042                           fsr0h	equ	0xFEA
 11043                           fsr0l	equ	0xFE9
 11044                           wreg	equ	0xFE8
 11045                           indf1	equ	0xFE7
 11046                           postdec1	equ	0xFE5
 11047                           fsr1h	equ	0xFE2
 11048                           fsr1l	equ	0xFE1
 11049                           bsr	equ	0xFE0
 11050                           indf2	equ	0xFDF
 11051                           postinc2	equ	0xFDE
 11052                           postdec2	equ	0xFDD
 11053                           fsr2h	equ	0xFDA
 11054                           fsr2l	equ	0xFD9
 11055                           status	equ	0xFD8
 11056                           
 11057                           	psect	param0
 11058  0000                     pclatu	equ	0xFFB
 11059                           pclath	equ	0xFFA
 11060                           tblptru	equ	0xFF8
 11061                           tblptrh	equ	0xFF7
 11062                           tblptrl	equ	0xFF6
 11063                           tablat	equ	0xFF5
 11064                           prodh	equ	0xFF4
 11065                           prodl	equ	0xFF3
 11066                           intcon	equ	0xFF2
 11067                           postinc0	equ	0xFEE
 11068                           fsr0h	equ	0xFEA
 11069                           fsr0l	equ	0xFE9
 11070                           wreg	equ	0xFE8
 11071                           indf1	equ	0xFE7
 11072                           postdec1	equ	0xFE5
 11073                           fsr1h	equ	0xFE2
 11074                           fsr1l	equ	0xFE1
 11075                           bsr	equ	0xFE0
 11076                           indf2	equ	0xFDF
 11077                           postinc2	equ	0xFDE
 11078                           postdec2	equ	0xFDD
 11079                           fsr2h	equ	0xFDA
 11080                           fsr2l	equ	0xFD9
 11081                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         239
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     50      82
    BANK0           128     72      77
    BANK1           256     51     213
    BANK2           256     75     129
    BANK3           256      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 
		 -> main@ic(BANK2[53]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 
		 -> main@ic(BANK2[53]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    getMessageId@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    validateMessage@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    parser_lthread@msgbuf	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_write@msg	PTR unsigned char  size(2) Largest target is 12
		 -> parser_lthread@data_1681(BANK1[12]), parser_lthread@reply_1679(BANK1[6]), parser_lthread@reply_1678(BANK1[6]), parser_lthread@reply(BANK1[6]), 
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 53
		 -> main@ic(BANK2[53]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 5
		 -> parser_lthread@data(BANK1[5]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 53
		 -> NULL(NULL[0]), main@ic(BANK2[53]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 53
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK2[53]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 53
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK2[11]), 
		 -> main@ic(BANK2[53]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_ToMainLow_sendmsg
    _parser_lthread->_validateMessage
    _uart_write->_WriteUSART
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_parser_lthread
    _ToMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0   15447
                                             50 BANK1      1     1      0
                                              0 BANK2     75    75      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                  _ToMainLow_sendmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _parser_lthread
                     _timer0_lthread
                     _timer1_lthread
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     0      8     260
                                             51 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                       8     0      8     260
                                             51 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _parser_lthread                                      54    48      6    4167
                                             67 BANK0      2     2      0
                                              0 BANK1     50    44      6
                       _getMessageId
               _i2c_configure_master
                    _i2c_master_recv
                    _i2c_master_send
                         _uart_write
                    _validateMessage
 ---------------------------------------------------------------------------------
 (2) _validateMessage                                     16    13      3     597
                                             51 BANK0     16    13      3
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           5     3      2     489
                                             52 BANK0      5     3      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                      7     5      2     257
                                             51 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_configure_master                                 2     2      0      31
                                             51 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _getMessageId                                         4     1      3     192
                                             51 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      96
                                             51 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                             55 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                             51 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     2      0      31
                                             51 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                             57 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             55 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             53 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                             51 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_sendmsg                                    4     1      3    2281
                                             68 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6    1938
                                             61 BANK0      7     1      6
                                              0 BANK1      5     5      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                             70 BANK0      1     1      0
                                              5 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                             70 BANK0      1     1      0
                                              5 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             61 BANK0      9     2      7
                                              0 BANK1      5     5      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     564
                                             51 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                             51 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    6209
                                             33 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    6091
                                             32 COMRAM     1     1      0
                          _ReadUSART
                          _parseUART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            6     6      0    3030
                                             26 COMRAM     6     6      0
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    3027
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2547
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0     118
                                              4 COMRAM     2     2      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    7879
                                             37 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  6     6      0     122
                                              4 BANK0      2     2      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0    7473
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    4123
                                             26 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (14) _start_i2c_slave_reply                               6     4      2     158
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    3350
                                             26 BANK0      1     1      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (14) _ToMainHigh_sendmsg                                  4     1      3    3350
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (15) i2_send_msg                                         12     6      6    2347
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_sendmsg
     _send_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _parser_lthread
     _getMessageId
     _i2c_configure_master
     _i2c_master_recv
     _i2c_master_send
     _uart_write
       _WriteUSART
     _validateMessage
   _timer0_lthread
   _timer1_lthread
   _uart_write
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _parseUART
       i1_ToMainLow_sendmsg
         i1_send_msg
           i1_memcpy
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     4B      81       8       50.4%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      D5       6       83.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     48      4D       4       60.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     32      52       1       64.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F5      11        0.0%
DATA                 0      0     1F5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat May  3 19:21:58 2014

                     uart_write@msg 00B4                                   _x 003D  
          _MQ_Main_Willing_to_block 003F                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 23A4                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 2502             parser_lthread@data_1681 01BF  
            parser_lthread@checksum 01CB                        __CFG_CP0$OFF 000000  
                               l610 2478                                 l515 082C  
                               l612 2490                                 l613 2492  
                               l525 0B9E                                 l463 2058  
                               l660 1D48                                 l661 1D4A  
                               l654 1D18                                 l586 25C6  
                               l658 1D38                                 l587 25C8  
                               l659 1D3A                                 l898 2676  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                    _FromMainLow_MQ 0100                                 prod 000FF3  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 00B3                    ??_init_uart_recv 00B5  
                   ReadTimer1@timer 0003                      _parser_lthread 0708  
                              l4002 0A56                                l4104 1608  
                              l4120 16CE                                l4052 1EBE  
                              l4070 172E                                l4090 20DC  
                              l4084 20B8                                l3622 22C8  
                              l3614 22A6                                l4190 1A32  
                              l4510 153C                                l4186 19DA  
                              l4506 1510                                l3636 2352  
                              l4524 25EE                                l3740 10DA  
                              l3910 1E16                                l3824 247A  
                              l3752 1150                                l3760 121E  
                              l3736 1058                                l3744 10FA  
                              l3728 1016                                l3922 1E6E  
                              l3754 11A2                                l3738 10AA  
                              l3746 1112                                l3916 1E42  
                              l3756 11E0                                l4486 2696  
                              l4494 142E                                l3950 0736  
                              l3872 1D1A                                l3864 1D04  
                              l3952 0744                                l3938 2084  
                              l3962 07AA                                l3954 0776  
                              l3970 07F0                                l3980 08D8  
                              l3958 077E                                l3990 09D0  
                              l3984 0954                                l3992 0A02  
                              _LATB 000F8A                                _INCH 004B  
                              u3130 1598                                _FOOT 0049  
                              u3277 2678                                i1l59 0070  
                  uart_write@length 00B7                     _FromMainHigh_MQ 024B  
                              _Send 0033                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 0F8A  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 0214                          i1_send_msg 1C3A  
                              pclat 000FFA                         i2_check_msg 2538  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0080                                start 00B6  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 17D6  
     __size_of_i2c_configure_master 0054           ToMainHigh_recvmsg@msgtype 01A7  
                    send_msg@length 00BF         __size_of_timer0_int_handler 0034  
           ??_i2c_slave_int_handler 009A                         _Delay1KTCYx 2672  
                             ?_main 0001                    ?_validateMessage 00B3  
      __size_ofi1_ToMainLow_sendmsg 0026                               _T0CON 000FD5  
                             _T1CON 000FCD                          i1memcpy@d1 0001  
                             i2l309 1BEE                               i2l333 01C6  
                             i2l327 051C                               i1l672 2648  
                             i2l361 052E                               i2l329 0182  
                             i2l355 048E                               i2l347 0356  
                             i2l380 0BFA                               i2l391 0EA0  
                             i2l387 0DA8                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080              __end_of_parser_lthread 0BBE  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
                             _State 0040           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 2362          ToMainLow_recvmsg@maxlength 00C6  
           timer0_lthread@msgbuffer 00B9             i2c_configure_slave@addr 00B4  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 2426                    __end_ofi2_memcpy 2152  
                    WriteUSART@data 00B3                     __initialization 1F5E  
                      __end_of_main 1244                          _ReadTimer1 26D2  
       __size_of_timer1_int_handler 001A          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0036               __size_ofi2_in_low_int 0046  
              __end_of_getMessageId 25F2                              ??_main 01D4  
                   send_msg@msgtype 00C0                       __activetblptr 000002  
                   send_msg@tlength 01A2                __end_of_handle_start 1C3A  
                   ?_parser_lthread 01A2             ??_uart_recv_int_handler 0021  
                            i1l4614 1C72                              i1l4640 192E  
                            i1l4632 18EC                              i1l4644 195A  
                            i1l4660 19AC                              i1l4590 2414  
                            i1l4646 1964                              i1l4638 1924  
                            i1l4584 23F8                              i1l4672 2272  
                        _OpenTimer0 25A2                          _OpenTimer1 245E  
                            i1l4684 0066                              i2l4302 0EA6  
                            i2l4222 12EC                              i2l4230 139A  
                    __CFG_WDTEN$OFF 000000                              i2l4320 0F4A  
                            i2l4226 131A                              i2l4218 1260  
                            i2l4402 03CA                              i2l4308 0EF4  
                            i2l4252 0BC0                              i2l4404 040C  
                            i2l4262 0C9C                              i2l4270 0CF2  
                            i2l4246 1C0A                              i2l4430 04F0  
                            i2l4342 0178                              i2l4600 213A  
                            i2l4280 0D70                              i2l4248 1C22  
                            i2l4408 041E                              i2l4360 01FE  
                            i2l4336 0160                              i2l4450 062C  
                            i2l4442 0592                              i2l4362 022A  
                            i2l4292 0E06                              i2l4276 0D32  
                            i2l4436 0532                              i2l4380 02BE  
                            i2l4372 0266                              i2l3652 1DBA  
                            i2l4550 230E                              i2l4542 22EC  
                            i2l4286 0DC6                              i2l3662 2626  
                            i2l3646 1DB0                              i2l3656 261A  
                            i2l4458 06D2                              i2l4378 027E  
                            i2l3658 2620                              i2l3676 1FCE  
                            i2l4566 1832                              i2l4594 2116  
       __end_of_i2c_configure_slave 245E                       ??_SleepIfOkay 0084  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 01DA  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 141E  
          parser_lthread@reply_1678 01B3            parser_lthread@reply_1679 01B9  
                timer0_lthread@tptr 00B3                        i2_in_low_int 22D8  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 2618  
 i2c_slave_int_handler@data_written 009F                     _i2c_master_recv 21A6  
                   _i2c_master_send 19C2                    OpenTimer0@config 00B3  
                            _ic_ptr 00C8                       main@msgbuffer 0202  
                  __end_of_init_i2c 1B6E                    OpenTimer1@config 00B3  
                            _memcpy 2096                       _NINETYDEGREES 004D  
                            clear_0 1F64                              clear_1 1F70  
                            clear_2 1F80                              _uc_ptr 0051  
                            main@ic 0216                              main@uc 020F  
                  __end_of_recv_msg 16D2         start_i2c_slave_reply@length 0085  
                         ??_in_main 00B9                    __end_of_send_msg 17D6  
                      __pdataCOMRAM 0049               timer0_int_handler@val 0085  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00B6  
          ToMainLow_recvmsg@msgtype 01A7                __size_of_in_high_int 0012  
                   parser_lthread@x 01D2                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1FBE  
        __end_of_ToMainHigh_recvmsg 23E6          __end_of_ToMainHigh_sendmsg 2538  
       __end_of_init_timer1_lthread 26AE                 __end_of_SleepIfOkay 2032  
                        _WriteUSART 2688                      __pcstackCOMRAM 0001  
                      __pidataBANK0 271E              __size_ofi2_in_high_int 0012  
                       ?_ReadTimer1 0001                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 2658                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1DF0  
       __end_of_InterruptHandlerLow 00B6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0136                    _enter_sleep_mode 2718  
               __size_ofi2_send_msg 0104                timer1_lthread@length 00B7  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1D76  
                     check_msg@qptr 00B3             ??_block_on_To_msgqueues 00B9  
              __size_of_init_queues 006E                          __pbssBANK0 00CC  
                        __pbssBANK1 0100                          __pbssBANK2 024B  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0051                 i1_ToMainLow_sendmsg 25F2  
           __end_of_i2c_int_handler 263A                        ?i2_check_msg 0080  
           __end_of_i2c_master_recv 21F6             __end_of_i2c_master_send 1AA0  
                timer1_lthread@tptr 00B3            ??_i2c_master_int_handler 009A  
                __size_of_parseUART 00E8               __size_of_getMessageId 0026  
         validateMessage@rollingsum 00BF                   recv_msg@maxlength 00BF  
                   recv_msg@msgtype 00C0                     recv_msg@tlength 01A3  
             __size_of_handle_start 00CC                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0082                             ?_memcpy 00B3  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0082  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 064E  
           __size_of_timer0_lthread 0002       __end_of_i2c_slave_int_handler 0708  
              ?i1_ToMainLow_sendmsg 0017             __size_of_timer1_lthread 0002  
      __end_of_i2c_configure_master 21A6                          ??i1_memcpy 0007  
                        ??i2_memcpy 0086                    i1send_msg@length 000D  
                     i2_in_high_int 26F6                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 24CC  
                         ?_init_i2c 00B3                        _getMessageId 25CC  
                       _SleepIfOkay 1FC8                           ?_recv_msg 00BD  
                        _in_low_int 2292                        _handle_start 1B6E  
                           __Hparam 0000                           ?_send_msg 00BD  
                           __Lparam 0000          __end_of_timer0_int_handler 25A2  
                       ?_WriteUSART 0001                    init_uart_recv@uc 00B3  
                           _Started 0035                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00A0                             __pcinit 1F5E  
                   __size_of_memcpy 005E                          _init_queue 1E76  
                           __ramtop 0400               ??i1_ToMainLow_sendmsg 001A  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                  ??_parser_lthread 00C3                             __ptext0 0F8A  
                           __ptext1 2720                             __ptext2 2722  
                           __ptext3 0708                             __ptext4 141E  
                           __ptext5 2032                             __ptext6 2688  
                           __ptext7 19C2                             __ptext8 21A6  
                           __ptext9 2152                             _buf_len 0042  
                         _T0CONbits 000FD5                             _in_main 231E  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 26F6  
               __end_of_WriteTimer1 26D2                   __end_of_parseUART 19C2  
                    ?i2_in_high_int 0080            __size_of_validateMessage 017E  
                    __pintcode_body 1D76                end_of_initialization 1FBE  
           timer1_lthread@msgbuffer 00B9      __size_of_uart_recv_int_handler 004E  
                           memcpy@d 00B9                             memcpy@n 00B7  
                           memcpy@s 00BB       __end_of_uart_recv_int_handler 2292  
                        ??_init_i2c 00B5                       __Lmediumconst 0000  
                           int_func 1D76                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 004E                    ?_i2c_int_handler 0001  
                  ?_i2c_master_recv 0001                    ?_i2c_master_send 00B3  
                        ??_recv_msg 00C4                        ??i2_send_msg 0090  
                        ??_send_msg 00C3     __size_of_i2c_master_int_handler 03CC  
        __end_of_timer1_int_handler 2672                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 0096                          _uart_write 2032  
                __end_ofi1_send_msg 1CE4                    validateMessage@i 00C0  
                         _TRISCbits 000F94                         uart_write@i 00B8  
                __end_ofi2_send_msg 18DA                 __size_of_WriteUSART 0014  
             parser_lthread@degrees 01D1               parser_lthread@command 01D0  
          timer1_int_handler@result 0005                           _TXSTAbits 000FAC  
                        main@length 0215               parser_lthread@msgtype 01A2  
                       ?_in_low_int 00B5               timer0_lthread@msgtype 00B5  
              _i2c_configure_master 2152               _start_i2c_slave_reply 1244  
      __size_of_i2c_configure_slave 0038                __size_ofi2_check_msg 0036  
          __end_of_enter_sleep_mode 271E                        ??_ReadTimer1 0003  
                _ToMainHigh_recvmsg 23A4                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 2502                           i1memcpy@n 0005  
                         i1memcpy@s 0009                       __pidataCOMRAM 2708  
                    _timer0_lthread 2722                         ?_init_queue 00B3  
                         i2memcpy@d 0086                         _WriteTimer0 26E4  
                       _WriteTimer1 26C0                           i2memcpy@n 0084  
                         i2memcpy@s 0088                      _timer1_lthread 2720  
                    __end_of_memcpy 20F4                   _enable_interrupts 2710  
              __size_of_Delay1KTCYx 0016                 ?_ToMainHigh_recvmsg 01A7  
                   ??i2_in_high_int 0082                 ?_ToMainHigh_sendmsg 0096  
           i1ToMainLow_sendmsg@data 0018                  ?_enable_interrupts 0001  
               start_initialization 1F5E              _i2c_master_int_handler 0BBE  
                     ??_in_high_int 00B5                           _ReadUSART 263A  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
               ??_enable_interrupts 00B3                        ??_OpenTimer0 00B3  
                      ??_OpenTimer1 00B3      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 26E4       __end_of_block_on_To_msgqueues 1E76  
                         _OpenUSART 1CE4                   ??_validateMessage 00B6  
      __end_of_InterruptHandlerHigh 1DF8                          init_i2c@ic 00B3  
              ??_ToMainHigh_recvmsg 00C6                ??_ToMainHigh_sendmsg 0099  
             ?_i2c_configure_master 0001              __end_of_timer0_lthread 2724  
                       __pdataBANK0 00CA              __end_of_timer1_lthread 2722  
         __end_of_enable_interrupts 2718                            ??_memcpy 00B9  
             timer1_lthread@msgtype 00B5                         ?_uart_write 00B4  
      __size_of_init_timer1_lthread 0012                  __end_of_OpenTimer0 25CC  
                __end_of_OpenTimer1 2496                         __pbssCOMRAM 0033  
                        ?_ReadUSART 0001                       ??_init_queues 00B7  
                     __pcstackBANK0 0080                       __pcstackBANK1 01A2  
                     __pcstackBANK2 0200                 __size_of_in_low_int 0046  
                        parseUART@x 0020            start_i2c_slave_reply@msg 0080  
           validateMessage@checksum 00BE                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00B3            ToMainLow_sendmsg@msgtype 00C4  
      __size_of_InterruptHandlerLow 009E      i2c_slave_int_handler@data_read 00A4  
               __end_of_in_high_int 26C0                          ?_OpenUSART 00B3  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01A9  
                      _ToMainLow_MQ 016C                 __size_of_init_queue 007A  
                    _init_uart_recv 21F6                           _check_msg 2496  
                         __pnvBANK0 00C8              ?_start_i2c_slave_reply 0080  
                 __size_of_init_i2c 00CE                        recv_msg@data 00C2  
                      ??_WriteUSART 00B3                        recv_msg@qmsg 01A5  
                      recv_msg@slot 01A2                        recv_msg@qptr 00BD  
                 __size_of_recv_msg 0136                           __pintcode 0008  
                 __size_of_send_msg 0104                     ?_timer0_lthread 00B3  
                   ?_timer1_lthread 00B3                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 01A9                            ?_in_main 00B7  
                 WriteTimer0@timer0 0080                  _timer0_int_handler 256E  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00BA  
        i1ToMainLow_sendmsg@msgtype 0017      i2c_slave_int_handler@error_buf 009C  
             ToMainLow_sendmsg@data 00C5                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 269C                           _parseUART 18DA  
    i2c_slave_int_handler@msg_ready 00A3              __end_of_init_uart_recv 2244  
               __end_of_init_queues 1F5E               i2c_master_recv@length 00B3  
                          _LATCbits 000F8B                 __size_of_uart_write 0064  
            ??_i2c_configure_master 00B3                     i2check_msg@qptr 0080  
                        ?_check_msg 00B3                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                     _I2C_Buffer_Size 00CA  
                     ?i2_in_low_int 0082                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 0097                         _buffer_temp 0045  
       __end_ofi1_ToMainLow_sendmsg 2618                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                parser_lthread@Inches 01CE  
              ??_timer0_int_handler 0084               i2c_master_send@length 00B7  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                parser_lthread@length 01A4  
              timer0_lthread@length 00B7                  _timer1_int_handler 2658  
                          i1_memcpy 23E6                _InterruptHandlerHigh 0008  
              parser_lthread@msgbuf 01A6                         ??_ReadUSART 0001  
                          i2_memcpy 20F4                parser_lthread@status 01CF  
                       _in_high_int 26AE                        send_msg@data 00C1  
               _i2c_configure_slave 2426                        send_msg@qmsg 01A5  
                      send_msg@slot 01A4                        send_msg@qptr 00BD  
                         copy_data0 1FB2                 ?_timer1_int_handler 0001  
                        ?_parseUART 0001                     ?_init_uart_recv 00B3  
                          _i2c_mode 00CC                         ??_OpenUSART 00B5  
                   OpenUSART@config 00B8                      ??i2_in_low_int 0084  
                          __Hparam0 0000               _uart_recv_int_handler 2244  
                      ??_in_low_int 00B7                            __Lparam0 0000  
              ?_i2c_configure_slave 0001                   ?_enter_sleep_mode 0001  
              ??_timer1_int_handler 0005            __size_of_i2c_int_handler 0022  
                ??_enter_sleep_mode 0080            __size_of_i2c_master_recv 0050  
          __size_of_i2c_master_send 00DE                        ??_init_queue 00B5  
                      ?_WriteTimer0 0080                        ?_WriteTimer1 0001  
           ToMainLow_sendmsg@length 00C7             ?_i2c_master_int_handler 0001  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 0200  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 008D         ToMainHigh_recvmsg@maxlength 00C6  
                 i2send_msg@tlength 0091             init_timer1_lthread@tptr 00B3  
                       _init_queues 1EF0                     _validateMessage 141E  
                __end_of_in_low_int 22D8                            __ptext10 25CC  
                          __ptext11 21F6                            __ptext20 2292  
                          __ptext12 269C                            __ptext21 26AE  
                          __ptext13 1EF0                            __ptext30 1CE4  
                          __ptext22 2496                            __ptext14 1E76  
                          __ptext31 245E                            __ptext23 2672  
                          __ptext15 1AA0                            __ptext40 2658  
                          __ptext32 25A2                            __ptext24 24CC  
                          __ptext16 2426                            __ptext41 26C0  
                          __ptext25 16D2                            __ptext17 2710  
                          __ptext50 0BBE                            __ptext42 26D2  
                          __ptext34 2244                            __ptext26 2362  
                          __ptext18 1DF8                            __ptext51 2502  
                          __ptext35 18DA                            __ptext27 23A4  
                          __ptext19 231E                            __ptext52 17D6  
                          __ptext44 256E                            __ptext36 25F2  
                          __ptext28 159C                            __ptext53 20F4  
                          __ptext45 26E4                            __ptext37 1C3A  
                          __ptext29 2096                            __ptext54 1FC8  
                          __ptext46 2618                            __ptext38 23E6  
                          __ptext55 22D8                            __ptext47 00BA  
                          __ptext39 263A                            __ptext56 26F6  
                          __ptext48 1244                            __ptext57 2538  
                          __ptext49 1B6E                            __ptext58 2718  
                    i1send_msg@data 000F      i2c_configure_master@slave_addr 00B4  
         i1ToMainLow_sendmsg@length 001A             __size_of_parser_lthread 04B6  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                            _init_i2c 1AA0  
               _init_timer1_lthread 269C                       __size_of_main 02BA  
                     ??i2_check_msg 0082                   main@t1thread_data 020D  
                       ??_check_msg 00B5                  __end_of_init_queue 1EF0  
              __size_of_SleepIfOkay 006A                            _recv_msg 159C  
                getMessageId@buffer 00B3    i2c_slave_int_handler@msg_to_send 00A2  
             ??_i2c_configure_slave 00B3                            _send_msg 16D2  
                getMessageId@length 00B5                      init_queue@qptr 00B3  
      i2c_master_send@currentLength 00B8                       ??_Delay1KTCYx 00B3  
    __end_of_i2c_master_int_handler 0F8A                 parser_lthread@reply 01AD  
               _InterruptHandlerLow 0018                        ??_uart_write 00B6  
              ?_init_timer1_lthread 00B3                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                      OpenUSART@spbrg 00B3  
                          memcpy@d1 00B3                      _command_length 0044  
                          memcpy@s1 00B5               __end_ofi2_in_high_int 2708  
                      _motor_length 003B                    i2send_msg@length 008C  
                          intlevel1 0000                            intlevel2 0000  
                       ??_parseUART 001B               validateMessage@buffer 00B3  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0082  
             validateMessage@length 00B5                       ?_getMessageId 00B3  
            ?_uart_recv_int_handler 0001                          _TENDEGREES 004F  
                __end_of_uart_write 2096               _block_on_To_msgqueues 1DF8  
                     ?_handle_start 0001                    ??_timer0_lthread 00BB  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 00BB  
                parser_lthread@Feet 01CD            ToMainHigh_sendmsg@length 0099  
                parser_lthread@data 01A8                 __end_ofi2_check_msg 256E  
             ??_init_timer1_lthread 00B5                       _command_count 0043  
                       _motorStatus 0037             __end_of_validateMessage 159C  
                       _motor_count 0039              ??_InterruptHandlerHigh 00A5  
                 _ToMainLow_recvmsg 2362                   _ToMainLow_sendmsg 24CC  
              __end_ofi2_in_low_int 231E                  ?_ToMainLow_recvmsg 01A7  
               __end_of_Delay1KTCYx 2688                   ??_i2c_int_handler 00A5  
                ?_ToMainLow_sendmsg 00C4                   ??_i2c_master_recv 00B3  
                 ??_i2c_master_send 00B5                  i2c_master_send@msg 00B3  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 0022  
               validateMessage@buf2 00BC                 validateMessage@buf3 00BD  
               ??_ToMainLow_recvmsg 00C6                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      ??_getMessageId 00B6  
                    i2send_msg@qptr 008A                 ??_ToMainLow_sendmsg 00C7  
     i2c_slave_int_handler@i2c_data 00A1                  validateMessage@buf 00BB  
                    ??_handle_start 0080                  validateMessage@len 00C2  
                      _USART_Status 0041  
