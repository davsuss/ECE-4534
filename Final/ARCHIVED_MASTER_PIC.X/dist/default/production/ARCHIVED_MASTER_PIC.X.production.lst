

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat May  3 21:07:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    78                           	psect	param0,global,class=BANK0,space=1,delta=1
    79  0000                     
    80                           	psect	idataCOMRAM
    81  0025E4                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _FOOT
    85  0025E4  0058               	dw	88
    86                           
    87                           ;initializer for _INCH
    88  0025E6  0003               	dw	3
    89                           
    90                           ;initializer for _NINETYDEGREES
    91  0025E8  0060               	dw	96
    92                           
    93                           ;initializer for _TENDEGREES
    94  0025EA  000A               	dw	10
    95                           
    96                           	psect	idataBANK0
    97  0025FA                     __pidataBANK0:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _I2C_Buffer_Size
   101  0025FA  0017               	dw	23
   102  0000                     _INTCONbits	set	4082
   103  0000                     _IPR1bits	set	3999
   104  0000                     _LATB	set	3978
   105  0000                     _LATCbits	set	3979
   106  0000                     _OSCCON	set	4051
   107  0000                     _OSCCONbits	set	4051
   108  0000                     _OSCTUNEbits	set	3995
   109  0000                     _PIE1bits	set	3997
   110  0000                     _PIR1bits	set	3998
   111  0000                     _RCONbits	set	4048
   112  0000                     _RCREG	set	4014
   113  0000                     _RCSTA	set	4011
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _SPBRG	set	4015
   116  0000                     _SPBRGH	set	4016
   117  0000                     _SSPADD	set	4040
   118  0000                     _SSPBUF	set	4041
   119  0000                     _SSPCON1	set	4038
   120  0000                     _SSPCON1bits	set	4038
   121  0000                     _SSPCON2	set	4037
   122  0000                     _SSPCON2bits	set	4037
   123  0000                     _SSPSTAT	set	4039
   124  0000                     _SSPSTATbits	set	4039
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _TMR0H	set	4055
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR1H	set	4047
   130  0000                     _TMR1L	set	4046
   131  0000                     _TRISB	set	3987
   132  0000                     _TRISCbits	set	3988
   133  0000                     _TXREG	set	4013
   134  0000                     _TXSTA	set	4012
   135  0000                     _TXSTAbits	set	4012
   136                           
   137                           	psect	nvCOMRAM
   138  000051                     __pnvCOMRAM:
   139                           	opt stack 0
   140  000051                     _uc_ptr:
   141                           	opt stack 0
   142  000051                     	ds	2
   143                           
   144                           	psect	nvBANK0
   145  0000C9                     __pnvBANK0:
   146                           	opt stack 0
   147  0000C9                     _ic_ptr:
   148                           	opt stack 0
   149  0000C9                     	ds	2
   150                           
   151                           ; #config settings
   152  0000                     
   153                           	psect	cinit
   154  001DF6                     __pcinit:
   155                           	opt stack 0
   156  001DF6                     start_initialization:
   157                           	opt stack 0
   158  001DF6                     __initialization:
   159                           	opt stack 0
   160                           
   161                           ; Clear objects allocated to BANK2 (54 bytes)
   162  001DF6  EE02  F049         	lfsr	0,__pbssBANK2
   163  001DFA  0E36               	movlw	54
   164  001DFC                     clear_0:
   165  001DFC  6AEE               	clrf	postinc0,c
   166  001DFE  06E8               	decf	wreg,f,c
   167  001E00  E1FD               	bnz	clear_0
   168                           
   169                           ; Clear objects allocated to BANK1 (162 bytes)
   170  001E02  EE01  F000         	lfsr	0,__pbssBANK1
   171  001E06  0EA2               	movlw	162
   172  001E08                     clear_1:
   173  001E08  6AEE               	clrf	postinc0,c
   174  001E0A  06E8               	decf	wreg,f,c
   175  001E0C  E1FD               	bnz	clear_1
   176                           
   177                           ; Clear objects allocated to BANK0 (5 bytes)
   178  001E0E  0100               	movlb	0
   179  001E10  6BC8               	clrf	(__pbssBANK0+4)& (0+255),b
   180  001E12  6BC7               	clrf	(__pbssBANK0+3)& (0+255),b
   181  001E14  6BC6               	clrf	(__pbssBANK0+2)& (0+255),b
   182  001E16  6BC5               	clrf	(__pbssBANK0+1)& (0+255),b
   183  001E18  6BC4               	clrf	__pbssBANK0& (0+255),b
   184                           
   185                           ; Clear objects allocated to COMRAM (22 bytes)
   186  001E1A  EE00  F033         	lfsr	0,__pbssCOMRAM
   187  001E1E  0E16               	movlw	22
   188  001E20                     clear_2:
   189  001E20  6AEE               	clrf	postinc0,c
   190  001E22  06E8               	decf	wreg,f,c
   191  001E24  E1FD               	bnz	clear_2
   192                           
   193                           ; Initialize objects allocated to BANK0 (2 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195  001E26  0EFA               	movlw	low __pidataBANK0
   196  001E28  6EF6               	movwf	tblptrl,c
   197  001E2A  0E25               	movlw	high __pidataBANK0
   198  001E2C  6EF7               	movwf	tblptrh,c
   199  001E2E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200  001E30  6EF8               	movwf	tblptru,c
   201  001E32  0009               	tblrd		*+	;fetch initializer
   202  001E34  CFF5 F0CB          	movff	tablat,__pdataBANK0
   203  001E38  0009               	tblrd		*+	;fetch initializer
   204  001E3A  CFF5 F0CC          	movff	tablat,__pdataBANK0+1
   205                           
   206                           ; Initialize objects allocated to COMRAM (8 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208  001E3E  0EE4               	movlw	low __pidataCOMRAM
   209  001E40  6EF6               	movwf	tblptrl,c
   210  001E42  0E25               	movlw	high __pidataCOMRAM
   211  001E44  6EF7               	movwf	tblptrh,c
   212  001E46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213  001E48  6EF8               	movwf	tblptru,c
   214  001E4A  EE00  F049         	lfsr	0,__pdataCOMRAM
   215  001E4E  EE10 F008          	lfsr	1,8
   216  001E52                     copy_data0:
   217  001E52  0009               	tblrd		*+
   218  001E54  CFF5 FFEE          	movff	tablat,postinc0
   219  001E58  50E5               	movf	postdec1,w,c
   220  001E5A  50E1               	movf	fsr1l,w,c
   221  001E5C  E1FA               	bnz	copy_data0
   222  001E5E                     end_of_initialization:
   223                           	opt stack 0
   224  001E5E                     __end_of__initialization:
   225                           	opt stack 0
   226  001E5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227  001E60  6EF8               	movwf	tblptru,c
   228  001E62  0100               	movlb	0
   229  001E64  EF03  F008         	goto	_main	;jump to C main() function
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           postdec1	equ	0xFE5
   237                           fsr1l	equ	0xFE1
   238                           
   239                           	psect	bssCOMRAM
   240  000033                     __pbssCOMRAM:
   241                           	opt stack 0
   242  000033                     _Send:
   243                           	opt stack 0
   244  000033                     	ds	2
   245  000035                     _Started:
   246                           	opt stack 0
   247  000035                     	ds	2
   248  000037                     _motorStatus:
   249                           	opt stack 0
   250  000037                     	ds	2
   251  000039                     _motor_count:
   252                           	opt stack 0
   253  000039                     	ds	2
   254  00003B                     _motor_length:
   255                           	opt stack 0
   256  00003B                     	ds	2
   257  00003D                     _x:
   258                           	opt stack 0
   259  00003D                     	ds	2
   260  00003F                     _MQ_Main_Willing_to_block:
   261                           	opt stack 0
   262  00003F                     	ds	1
   263  000040                     _State:
   264                           	opt stack 0
   265  000040                     	ds	1
   266  000041                     _USART_Status:
   267                           	opt stack 0
   268  000041                     	ds	1
   269  000042                     _buf_len:
   270                           	opt stack 0
   271  000042                     	ds	1
   272  000043                     _command_count:
   273                           	opt stack 0
   274  000043                     	ds	1
   275  000044                     _command_length:
   276                           	opt stack 0
   277  000044                     	ds	1
   278  000045                     _buffer_temp:
   279                           	opt stack 0
   280  000045                     	ds	4
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	dataCOMRAM
   291  000049                     __pdataCOMRAM:
   292                           	opt stack 0
   293  000049                     _FOOT:
   294                           	opt stack 0
   295  000049                     	ds	2
   296  00004B                     _INCH:
   297                           	opt stack 0
   298  00004B                     	ds	2
   299  00004D                     _NINETYDEGREES:
   300                           	opt stack 0
   301  00004D                     	ds	2
   302  00004F                     _TENDEGREES:
   303                           	opt stack 0
   304  00004F                     	ds	2
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssBANK0
   315  0000C4                     __pbssBANK0:
   316                           	opt stack 0
   317  0000C4                     _foot:
   318                           	opt stack 0
   319  0000C4                     	ds	2
   320  0000C6                     _inch:
   321                           	opt stack 0
   322  0000C6                     	ds	2
   323  0000C8                     _i2c_mode:
   324                           	opt stack 0
   325  0000C8                     	ds	1
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           postdec1	equ	0xFE5
   333                           fsr1l	equ	0xFE1
   334                           
   335                           	psect	dataBANK0
   336  0000CB                     __pdataBANK0:
   337                           	opt stack 0
   338  0000CB                     _I2C_Buffer_Size:
   339                           	opt stack 0
   340  0000CB                     	ds	2
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssBANK1
   351  000100                     __pbssBANK1:
   352                           	opt stack 0
   353  000100                     _FromMainLow_MQ:
   354                           	opt stack 0
   355  000100                     	ds	54
   356  000136                     _ToMainHigh_MQ:
   357                           	opt stack 0
   358  000136                     	ds	54
   359  00016C                     _ToMainLow_MQ:
   360                           	opt stack 0
   361  00016C                     	ds	54
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371                           	psect	bssBANK2
   372  000249                     __pbssBANK2:
   373                           	opt stack 0
   374  000249                     _FromMainHigh_MQ:
   375                           	opt stack 0
   376  000249                     	ds	54
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	cstackBANK2
   387  000200                     __pcstackBANK2:
   388                           	opt stack 0
   389  000200                     main@msgbuffer:
   390                           	opt stack 0
   391                           
   392                           ; 11 bytes @ 0x0
   393  000200                     	ds	11
   394  00020B                     main@t1thread_data:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0xB
   398  00020B                     	ds	2
   399  00020D                     main@uc:
   400                           	opt stack 0
   401                           
   402                           ; 5 bytes @ 0xD
   403  00020D                     	ds	5
   404  000212                     main@msgtype:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x12
   408  000212                     	ds	1
   409  000213                     main@length:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x13
   413  000213                     	ds	1
   414  000214                     main@ic:
   415                           	opt stack 0
   416                           
   417                           ; 53 bytes @ 0x14
   418  000214                     	ds	53
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	cstackBANK1
   429  0001A2                     __pcstackBANK1:
   430                           	opt stack 0
   431  0001A2                     ??_recv_msg:
   432  0001A2                     parser_lthread@msgtype:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x0
   436  0001A2                     	ds	2
   437  0001A4                     recv_msg@slot:
   438                           	opt stack 0
   439  0001A4                     parser_lthread@length:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x2
   443  0001A4                     	ds	1
   444  0001A5                     recv_msg@tlength:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x3
   448  0001A5                     	ds	1
   449  0001A6                     parser_lthread@msgbuf:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453  0001A6                     	ds	1
   454  0001A7                     recv_msg@qmsg:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x5
   458  0001A7                     	ds	1
   459  0001A8                     ??_parser_lthread:
   460                           
   461                           ; 0 bytes @ 0x6
   462  0001A8                     	ds	1
   463  0001A9                     ToMainLow_recvmsg@msgtype:
   464                           	opt stack 0
   465  0001A9                     ToMainHigh_recvmsg@msgtype:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x7
   469  0001A9                     	ds	1
   470  0001AA                     parser_lthread@data:
   471                           	opt stack 0
   472                           
   473                           ; 5 bytes @ 0x8
   474  0001AA                     	ds	1
   475  0001AB                     ToMainLow_recvmsg@data:
   476                           	opt stack 0
   477  0001AB                     ToMainHigh_recvmsg@data:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x9
   481  0001AB                     	ds	2
   482  0001AD                     ToMainLow_recvmsg@maxlength:
   483                           	opt stack 0
   484  0001AD                     ToMainHigh_recvmsg@maxlength:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0xB
   488  0001AD                     	ds	2
   489  0001AF                     parser_lthread@reply:
   490                           	opt stack 0
   491                           
   492                           ; 6 bytes @ 0xD
   493  0001AF                     	ds	6
   494  0001B5                     parser_lthread@reply_1664:
   495                           	opt stack 0
   496                           
   497                           ; 6 bytes @ 0x13
   498  0001B5                     	ds	6
   499  0001BB                     parser_lthread@reply_1665:
   500                           	opt stack 0
   501                           
   502                           ; 6 bytes @ 0x19
   503  0001BB                     	ds	6
   504  0001C1                     parser_lthread@data_1667:
   505                           	opt stack 0
   506                           
   507                           ; 12 bytes @ 0x1F
   508  0001C1                     	ds	12
   509  0001CD                     parser_lthread@checksum:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x2B
   513  0001CD                     	ds	2
   514  0001CF                     parser_lthread@Feet:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2D
   518  0001CF                     	ds	1
   519  0001D0                     parser_lthread@Inches:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x2E
   523  0001D0                     	ds	1
   524  0001D1                     parser_lthread@status:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x2F
   528  0001D1                     	ds	1
   529  0001D2                     parser_lthread@command:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x30
   533  0001D2                     	ds	1
   534  0001D3                     parser_lthread@degrees:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x31
   538  0001D3                     	ds	1
   539  0001D4                     parser_lthread@x:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x32
   543  0001D4                     	ds	2
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	cstackBANK0
   554  000080                     __pcstackBANK0:
   555                           	opt stack 0
   556  000080                     ?i2_in_high_int:
   557                           	opt stack 0
   558  000080                     handle_start@data_read:
   559                           	opt stack 0
   560  000080                     start_i2c_slave_reply@msg:
   561                           	opt stack 0
   562  000080                     WriteTimer0@timer0:
   563                           	opt stack 0
   564  000080                     i2check_msg@qptr:
   565                           	opt stack 0
   566  000080                     i2memcpy@d1:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x0
   570  000080                     	ds	2
   571  000082                     ??_start_i2c_slave_reply:
   572  000082                     ??i2_check_msg:
   573  000082                     ?i2_in_low_int:
   574                           	opt stack 0
   575  000082                     WriteTimer0@timer:
   576                           	opt stack 0
   577  000082                     i2memcpy@s1:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x2
   581  000082                     	ds	2
   582  000084                     i2memcpy@n:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x4
   586  000084                     	ds	1
   587  000085                     start_i2c_slave_reply@length:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x5
   591  000085                     	ds	1
   592  000086                     i2memcpy@d:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x6
   596  000086                     	ds	2
   597  000088                     i2memcpy@s:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x8
   601  000088                     	ds	2
   602  00008A                     i2send_msg@qptr:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0xA
   606  00008A                     	ds	2
   607  00008C                     i2send_msg@length:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0xC
   611  00008C                     	ds	1
   612  00008D                     i2send_msg@msgtype:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0xD
   616  00008D                     	ds	1
   617  00008E                     i2send_msg@data:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0xE
   621  00008E                     	ds	2
   622  000090                     ??i2_send_msg:
   623                           
   624                           ; 0 bytes @ 0x10
   625  000090                     	ds	1
   626  000091                     i2send_msg@tlength:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x11
   630  000091                     	ds	2
   631  000093                     i2send_msg@slot:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x13
   635  000093                     	ds	1
   636  000094                     i2send_msg@qmsg:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x14
   640  000094                     	ds	2
   641  000096                     i2ToMainLow_sendmsg@msgtype:
   642                           	opt stack 0
   643  000096                     i2ToMainHigh_sendmsg@msgtype:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x16
   647  000096                     	ds	1
   648  000097                     i2ToMainLow_sendmsg@data:
   649                           	opt stack 0
   650  000097                     i2ToMainHigh_sendmsg@data:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x17
   654  000097                     	ds	2
   655  000099                     i2ToMainLow_sendmsg@length:
   656                           	opt stack 0
   657  000099                     i2ToMainHigh_sendmsg@length:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x19
   661  000099                     	ds	1
   662  00009A                     ??_i2c_master_int_handler:
   663  00009A                     ??_i2c_slave_int_handler:
   664                           
   665                           ; 0 bytes @ 0x1A
   666  00009A                     	ds	2
   667  00009C                     i2c_slave_int_handler@error_buf:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x1C
   671  00009C                     	ds	3
   672  00009F                     i2c_slave_int_handler@data_written:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  00009F                     	ds	1
   677  0000A0                     i2c_slave_int_handler@overrun_error:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x20
   681  0000A0                     	ds	1
   682  0000A1                     i2c_slave_int_handler@i2c_data:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x21
   686  0000A1                     	ds	1
   687  0000A2                     i2c_slave_int_handler@msg_to_send:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x22
   691  0000A2                     	ds	1
   692  0000A3                     i2c_slave_int_handler@msg_ready:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x23
   696  0000A3                     	ds	1
   697  0000A4                     i2c_slave_int_handler@data_read:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x24
   701  0000A4                     	ds	1
   702  0000A5                     ??_InterruptHandlerHigh:
   703                           
   704                           ; 0 bytes @ 0x25
   705  0000A5                     	ds	14
   706  0000B3                     ??_i2c_configure_slave:
   707  0000B3                     ??_i2c_configure_master:
   708  0000B3                     ?_in_high_int:
   709                           	opt stack 0
   710  0000B3                     i2c_master_recv@length:
   711                           	opt stack 0
   712  0000B3                     OpenTimer0@config:
   713                           	opt stack 0
   714  0000B3                     WriteUSART@data:
   715                           	opt stack 0
   716  0000B3                     Delay1KTCYx@unit:
   717                           	opt stack 0
   718  0000B3                     init_queue@qptr:
   719                           	opt stack 0
   720  0000B3                     check_msg@qptr:
   721                           	opt stack 0
   722  0000B3                     i2c_master_send@msg:
   723                           	opt stack 0
   724  0000B3                     init_i2c@ic:
   725                           	opt stack 0
   726  0000B3                     init_uart_recv@uc:
   727                           	opt stack 0
   728  0000B3                     validateMessage@buffer:
   729                           	opt stack 0
   730  0000B3                     getMessageId@buffer:
   731                           	opt stack 0
   732  0000B3                     init_timer1_lthread@tptr:
   733                           	opt stack 0
   734  0000B3                     OpenUSART@spbrg:
   735                           	opt stack 0
   736  0000B3                     memcpy@d1:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x33
   740  0000B3                     	ds	1
   741  0000B4                     i2c_configure_master@slave_addr:
   742                           	opt stack 0
   743  0000B4                     i2c_configure_slave@addr:
   744                           	opt stack 0
   745  0000B4                     uart_write@msg:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x34
   749  0000B4                     	ds	1
   750  0000B5                     ??_init_uart_recv:
   751  0000B5                     ??_OpenUSART:
   752  0000B5                     ??_init_queue:
   753  0000B5                     ??_check_msg:
   754  0000B5                     ??_i2c_master_send:
   755  0000B5                     ?_in_low_int:
   756                           	opt stack 0
   757  0000B5                     validateMessage@length:
   758                           	opt stack 0
   759  0000B5                     getMessageId@length:
   760                           	opt stack 0
   761  0000B5                     memcpy@s1:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x35
   765  0000B5                     	ds	1
   766  0000B6                     ??_uart_write:
   767  0000B6                     ??_validateMessage:
   768  0000B6                     ??_getMessageId:
   769  0000B6                     init_queue@i:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x36
   773  0000B6                     	ds	1
   774  0000B7                     ??_init_queues:
   775  0000B7                     ?_in_main:
   776                           	opt stack 0
   777  0000B7                     i2c_master_send@length:
   778                           	opt stack 0
   779  0000B7                     uart_write@length:
   780                           	opt stack 0
   781  0000B7                     memcpy@n:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x37
   785  0000B7                     	ds	1
   786  0000B8                     uart_write@i:
   787                           	opt stack 0
   788  0000B8                     OpenUSART@config:
   789                           	opt stack 0
   790  0000B8                     i2c_master_send@currentLength:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x38
   794  0000B8                     	ds	1
   795  0000B9                     ??_block_on_To_msgqueues:
   796  0000B9                     memcpy@d:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x39
   800  0000B9                     	ds	2
   801  0000BB                     validateMessage@buf:
   802                           	opt stack 0
   803  0000BB                     memcpy@s:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x3B
   807  0000BB                     	ds	1
   808  0000BC                     validateMessage@buf2:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x3C
   812  0000BC                     	ds	1
   813  0000BD                     validateMessage@buf3:
   814                           	opt stack 0
   815  0000BD                     recv_msg@qptr:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x3D
   819  0000BD                     	ds	1
   820  0000BE                     validateMessage@checksum:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x3E
   824  0000BE                     	ds	1
   825  0000BF                     recv_msg@maxlength:
   826                           	opt stack 0
   827  0000BF                     validateMessage@rollingsum:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x3F
   831  0000BF                     	ds	1
   832  0000C0                     recv_msg@msgtype:
   833                           	opt stack 0
   834  0000C0                     validateMessage@i:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x40
   838  0000C0                     	ds	2
   839  0000C2                     validateMessage@len:
   840                           	opt stack 0
   841  0000C2                     recv_msg@data:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x42
   845  0000C2                     	ds	2
   846  0000C4                     tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1l	equ	0xFE1
   854                           
   855                           ; 0 bytes @ 0x44
   856                           
   857                           	psect	cstackCOMRAM
   858  000001                     __pcstackCOMRAM:
   859                           	opt stack 0
   860  000001                     ?_ReadTimer1:
   861                           	opt stack 0
   862  000001                     ReadUSART@data:
   863                           	opt stack 0
   864  000001                     WriteTimer1@timer1:
   865                           	opt stack 0
   866  000001                     i1memcpy@d1:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000001                     	ds	2
   871  000003                     ReadTimer1@timer:
   872                           	opt stack 0
   873  000003                     WriteTimer1@timer:
   874                           	opt stack 0
   875  000003                     i1memcpy@s1:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x2
   879  000003                     	ds	2
   880  000005                     timer1_int_handler@result:
   881                           	opt stack 0
   882  000005                     i1memcpy@n:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x4
   886  000005                     	ds	2
   887  000007                     i1memcpy@d:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x6
   891  000007                     	ds	2
   892  000009                     i1memcpy@s:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x8
   896  000009                     	ds	2
   897  00000B                     send_msg@qptr:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0xA
   901  00000B                     	ds	2
   902  00000D                     send_msg@length:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0xC
   906  00000D                     	ds	1
   907  00000E                     send_msg@msgtype:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0xD
   911  00000E                     	ds	1
   912  00000F                     send_msg@data:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0xE
   916  00000F                     	ds	2
   917  000011                     ??_send_msg:
   918                           
   919                           ; 0 bytes @ 0x10
   920  000011                     	ds	1
   921  000012                     send_msg@tlength:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x11
   925  000012                     	ds	2
   926  000014                     send_msg@slot:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x13
   930  000014                     	ds	1
   931  000015                     send_msg@qmsg:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x14
   935  000015                     	ds	2
   936  000017                     ToMainLow_sendmsg@msgtype:
   937                           	opt stack 0
   938  000017                     ToMainHigh_sendmsg@msgtype:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x16
   942  000017                     	ds	1
   943  000018                     ToMainLow_sendmsg@data:
   944                           	opt stack 0
   945  000018                     ToMainHigh_sendmsg@data:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x17
   949  000018                     	ds	2
   950  00001A                     ToMainLow_sendmsg@length:
   951                           	opt stack 0
   952  00001A                     ToMainHigh_sendmsg@length:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x19
   956  00001A                     	ds	1
   957  00001B                     ??_parseUART:
   958                           
   959                           ; 0 bytes @ 0x1A
   960  00001B                     	ds	5
   961  000020                     parseUART@x:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x1F
   965  000020                     	ds	1
   966  000021                     ??_uart_recv_int_handler:
   967                           
   968                           ; 0 bytes @ 0x20
   969  000021                     	ds	1
   970  000022                     ??_InterruptHandlerLow:
   971                           
   972                           ; 0 bytes @ 0x21
   973  000022                     	ds	17
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           
   983 ;;
   984 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   985 ;;
   986 ;; *************** function _main *****************
   987 ;; Defined at:
   988 ;;		line 187 in file "source/main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  ic             53   20[BANK2 ] struct __i2c_comm
   993 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   994 ;;  uc              5   13[BANK2 ] struct __uart_comm
   995 ;;  t1thread_dat    2   11[BANK2 ] struct __timer1_thread_s
   996 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   997 ;;  length          1   19[BANK2 ] char 
   998 ;;  msgtype         1   18[BANK2 ] unsigned char 
   999 ;;  i               1    0        unsigned char 
  1000 ;;  last_reg_rec    1    0        unsigned char 
  1001 ;;  c               1    0        unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;		None               void
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0      73       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0      73       0
  1015 ;;Total ram usage:       73 bytes
  1016 ;; Hardware stack levels required when called:   16
  1017 ;; This function calls:
  1018 ;;		_OpenTimer0
  1019 ;;		_OpenUSART
  1020 ;;		_ToMainHigh_recvmsg
  1021 ;;		_ToMainLow_recvmsg
  1022 ;;		_block_on_To_msgqueues
  1023 ;;		_enable_interrupts
  1024 ;;		_i2c_configure_master
  1025 ;;		_i2c_configure_slave
  1026 ;;		_i2c_master_recv
  1027 ;;		_init_i2c
  1028 ;;		_init_queues
  1029 ;;		_init_timer1_lthread
  1030 ;;		_init_uart_recv
  1031 ;;		_parser_lthread
  1032 ;;		_uart_write
  1033 ;; This function is called by:
  1034 ;;		Startup code after reset
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text0
  1039  001006                     __ptext0:
  1040                           	opt stack 0
  1041  001006                     _main:
  1042                           	opt stack 15
  1043                           
  1044                           ;main.c: 188: char c;
  1045                           ;main.c: 189: signed char length;
  1046                           ;main.c: 190: unsigned char msgtype;
  1047                           ;main.c: 191: unsigned char last_reg_recvd;
  1048                           ;main.c: 192: uart_comm uc;
  1049                           ;main.c: 193: i2c_comm ic;
  1050                           ;main.c: 194: unsigned char msgbuffer[10 + 1];
  1051                           ;main.c: 195: unsigned char i;
  1052                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1053                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1054                           ;main.c: 205: OSCCON = 0x82;
  1055                           
  1056                           ;incstack = 0
  1057  001006  0E82               	movlw	130
  1058  001008  6ED3               	movwf	4051,c	;volatile
  1059                           
  1060                           ;main.c: 206: OSCTUNEbits.PLLEN = 1;
  1061  00100A  8C9B               	bsf	3995,6,c	;volatile
  1062                           
  1063                           ;main.c: 224: init_uart_recv(&uc);
  1064  00100C  0102               	movlb	2	; () banked
  1065  00100E  0E02               	movlw	high main@uc
  1066  001010  0100               	movlb	0	; () banked
  1067  001012  0100               	movlb	0	; () banked
  1068  001014  6FB4               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1069  001016  0102               	movlb	2	; () banked
  1070  001018  0E0D               	movlw	low main@uc
  1071  00101A  0100               	movlb	0	; () banked
  1072  00101C  0100               	movlb	0	; () banked
  1073  00101E  6FB3               	movwf	init_uart_recv@uc& (0+255),b
  1074  001020  EC82  F010         	call	_init_uart_recv	;wreg free
  1075                           
  1076                           ;main.c: 227: init_i2c(&ic);
  1077  001024  0102               	movlb	2	; () banked
  1078  001026  0E02               	movlw	high main@ic
  1079  001028  0100               	movlb	0	; () banked
  1080  00102A  0100               	movlb	0	; () banked
  1081  00102C  6FB4               	movwf	(init_i2c@ic+1)& (0+255),b
  1082  00102E  0102               	movlb	2	; () banked
  1083  001030  0E14               	movlw	low main@ic
  1084  001032  0100               	movlb	0	; () banked
  1085  001034  0100               	movlb	0	; () banked
  1086  001036  6FB3               	movwf	init_i2c@ic& (0+255),b
  1087  001038  ECD3  F00C         	call	_init_i2c	;wreg free
  1088                           
  1089                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1090  00103C  0102               	movlb	2	; () banked
  1091  00103E  0E02               	movlw	high main@t1thread_data
  1092  001040  0100               	movlb	0	; () banked
  1093  001042  0100               	movlb	0	; () banked
  1094  001044  6FB4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1095  001046  0102               	movlb	2	; () banked
  1096  001048  0E0B               	movlw	low main@t1thread_data
  1097  00104A  0100               	movlb	0	; () banked
  1098  00104C  0100               	movlb	0	; () banked
  1099  00104E  6FB3               	movwf	init_timer1_lthread@tptr& (0+255),b
  1100  001050  ECBC  F012         	call	_init_timer1_lthread	;wreg free
  1101                           
  1102                           ;main.c: 233: init_queues();
  1103  001054  EC34  F00F         	call	_init_queues	;wreg free
  1104                           
  1105                           ;main.c: 237: TRISB = 0x0;
  1106  001058  0E00               	movlw	0
  1107  00105A  6E93               	movwf	3987,c	;volatile
  1108                           
  1109                           ;main.c: 238: LATB = 0x0;
  1110  00105C  0E00               	movlw	0
  1111  00105E  6E8A               	movwf	3978,c	;volatile
  1112                           
  1113                           ;main.c: 251: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110101);
  1114  001060  0E95               	movlw	149
  1115  001062  EC22  F012         	call	_OpenTimer0
  1116                           
  1117                           ;main.c: 267: IPR1bits.TMR1IP = 0;
  1118  001066  909F               	bcf	3999,0,c	;volatile
  1119                           
  1120                           ;main.c: 269: IPR1bits.RCIP = 0;
  1121  001068  9A9F               	bcf	3999,5,c	;volatile
  1122                           
  1123                           ;main.c: 271: IPR1bits.SSPIP = 1;
  1124  00106A  869F               	bsf	3999,3,c	;volatile
  1125                           
  1126                           ;main.c: 280: i2c_configure_slave(0x9E);
  1127  00106C  0E9E               	movlw	158
  1128  00106E  EC9A  F011         	call	_i2c_configure_slave
  1129                           
  1130                           ;main.c: 295: PIE1bits.SSPIE = 1;
  1131  001072  869D               	bsf	3997,3,c	;volatile
  1132                           
  1133                           ;main.c: 306: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1134                           ;main.c: 307: 0b11111111 & 0b11101111, 0x26);
  1135  001074  0E00               	movlw	0
  1136  001076  0100               	movlb	0	; () banked
  1137  001078  0100               	movlb	0	; () banked
  1138  00107A  6FB4               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1139  00107C  0E26               	movlw	38
  1140  00107E  0100               	movlb	0	; () banked
  1141  001080  6FB3               	movwf	OpenUSART@spbrg& (0+255),b
  1142  001082  0E6C               	movlw	108
  1143  001084  ECF5  F00D         	call	_OpenUSART
  1144                           
  1145                           ;main.c: 313: enable_interrupts();
  1146  001088  ECF6  F012         	call	_enable_interrupts	;wreg free
  1147  00108C                     l3632:
  1148                           
  1149                           ;main.c: 339: block_on_To_msgqueues();
  1150  00108C  EC7F  F00E         	call	_block_on_To_msgqueues	;wreg free
  1151                           
  1152                           ;main.c: 346: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1153  001090  0102               	movlb	2	; () banked
  1154  001092  0E02               	movlw	high main@msgtype
  1155  001094  0101               	movlb	1	; () banked
  1156  001096  0101               	movlb	1	; () banked
  1157  001098  6FAA               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1158  00109A  0102               	movlb	2	; () banked
  1159  00109C  0E12               	movlw	low main@msgtype
  1160  00109E  0101               	movlb	1	; () banked
  1161  0010A0  0101               	movlb	1	; () banked
  1162  0010A2  6FA9               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1163  0010A4  0102               	movlb	2	; () banked
  1164  0010A6  0E02               	movlw	high main@msgbuffer
  1165  0010A8  0101               	movlb	1	; () banked
  1166  0010AA  0101               	movlb	1	; () banked
  1167  0010AC  6FAC               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1168  0010AE  0102               	movlb	2	; () banked
  1169  0010B0  0E00               	movlw	low main@msgbuffer
  1170  0010B2  0101               	movlb	1	; () banked
  1171  0010B4  0101               	movlb	1	; () banked
  1172  0010B6  6FAB               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1173  0010B8  0E0A               	movlw	10
  1174  0010BA  EC59  F011         	call	_ToMainHigh_recvmsg
  1175  0010BE  0102               	movlb	2	; () banked
  1176  0010C0  0102               	movlb	2	; () banked
  1177  0010C2  6F13               	movwf	main@length& (0+255),b
  1178                           
  1179                           ; BSR set to: 2
  1180                           ;main.c: 347: if (length < 0) {
  1181  0010C4  0102               	movlb	2	; () banked
  1182  0010C6  0102               	movlb	2	; () banked
  1183  0010C8  AF13               	btfss	main@length& (0+255),7,b
  1184  0010CA  D044               	goto	l3652
  1185                           
  1186                           ; BSR set to: 2
  1187                           ;main.c: 349: if (length != -4) {
  1188  0010CC  0102               	movlb	2	; () banked
  1189  0010CE  0102               	movlb	2	; () banked
  1190  0010D0  5113               	movf	main@length& (0+255),w,b
  1191  0010D2  0AFC               	xorlw	252
  1192  0010D4  B4D8               	btfsc	status,2,c
  1193  0010D6  D04A               	goto	l3654
  1194                           
  1195                           ; BSR set to: 2
  1196  0010D8  00FF               	reset		;# 
  1197  0010DA  D048               	goto	l3654
  1198  0010DC                     l3642:
  1199                           
  1200                           ;main.c: 356: {
  1201                           ;main.c: 357: if(ic.status == 0x5)
  1202  0010DC  0102               	movlb	2	; () banked
  1203  0010DE  0102               	movlb	2	; () banked
  1204  0010E0  5121               	movf	(main@ic+13)& (0+255),w,b
  1205  0010E2  0A05               	xorlw	5
  1206  0010E4  A4D8               	btfss	status,2,c
  1207  0010E6  D042               	goto	l3654
  1208                           
  1209                           ; BSR set to: 2
  1210                           ;main.c: 358: {
  1211                           ;main.c: 359: i2c_configure_master(0x4F);
  1212  0010E8  0E4F               	movlw	79
  1213  0010EA  EC30  F010         	call	_i2c_configure_master
  1214                           
  1215                           ;main.c: 360: i2c_master_recv(0x5);
  1216  0010EE  0E05               	movlw	5
  1217  0010F0  EC5A  F010         	call	_i2c_master_recv
  1218  0010F4  D03B               	goto	l3654
  1219  0010F6                     l3646:
  1220                           
  1221                           ;main.c: 365: {
  1222                           ;main.c: 366: parser_lthread(msgtype,length,msgbuffer);
  1223  0010F6  0102               	movlb	2	; () banked
  1224  0010F8  0101               	movlb	1	; () banked
  1225  0010FA  C212  F1A2         	movff	main@msgtype,parser_lthread@msgtype
  1226  0010FE  0101               	movlb	1	; () banked
  1227  001100  0101               	movlb	1	; () banked
  1228  001102  6BA3               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1229  001104  0102               	movlb	2	; () banked
  1230  001106  0102               	movlb	2	; () banked
  1231  001108  5113               	movf	main@length& (0+255),w,b
  1232  00110A  0101               	movlb	1	; () banked
  1233  00110C  0101               	movlb	1	; () banked
  1234  00110E  6FA4               	movwf	parser_lthread@length& (0+255),b
  1235  001110  0101               	movlb	1	; () banked
  1236  001112  6BA5               	clrf	(parser_lthread@length+1)& (0+255),b
  1237  001114  0101               	movlb	1	; () banked
  1238  001116  BFA4               	btfsc	parser_lthread@length& (0+255),7,b
  1239  001118  07A5               	decf	(parser_lthread@length+1)& (0+255),f,b
  1240  00111A  0102               	movlb	2	; () banked
  1241  00111C  0E02               	movlw	high main@msgbuffer
  1242  00111E  0101               	movlb	1	; () banked
  1243  001120  0101               	movlb	1	; () banked
  1244  001122  6FA7               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1245  001124  0102               	movlb	2	; () banked
  1246  001126  0E00               	movlw	low main@msgbuffer
  1247  001128  0101               	movlb	1	; () banked
  1248  00112A  0101               	movlb	1	; () banked
  1249  00112C  6FA6               	movwf	parser_lthread@msgbuf& (0+255),b
  1250  00112E  EC84  F003         	call	_parser_lthread	;wreg free
  1251                           
  1252                           ;main.c: 367: break;
  1253  001132  D01C               	goto	l3654
  1254  001134                     l3648:
  1255                           
  1256                           ;main.c: 370: {
  1257                           ;main.c: 371: uart_write(length,msgbuffer);
  1258  001134  0102               	movlb	2	; () banked
  1259  001136  0E02               	movlw	high main@msgbuffer
  1260  001138  0100               	movlb	0	; () banked
  1261  00113A  0100               	movlb	0	; () banked
  1262  00113C  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  1263  00113E  0102               	movlb	2	; () banked
  1264  001140  0E00               	movlw	low main@msgbuffer
  1265  001142  0100               	movlb	0	; () banked
  1266  001144  0100               	movlb	0	; () banked
  1267  001146  6FB4               	movwf	uart_write@msg& (0+255),b
  1268  001148  0102               	movlb	2	; () banked
  1269  00114A  0102               	movlb	2	; () banked
  1270  00114C  5113               	movf	main@length& (0+255),w,b
  1271  00114E  ECA0  F00F         	call	_uart_write
  1272                           
  1273                           ;main.c: 372: break;
  1274  001152  D00C               	goto	l3654
  1275  001154                     l3652:
  1276  001154  0102               	movlb	2	; () banked
  1277  001156  0102               	movlb	2	; () banked
  1278  001158  5112               	movf	main@msgtype& (0+255),w,b
  1279                           
  1280                           ; Switch size 1, requested type "space"
  1281                           ; Number of cases is 3, Range of values is 10 to 49
  1282                           ; switch strategies available:
  1283                           ; Name         Instructions Cycles
  1284                           ; simple_byte           10     6 (average)
  1285                           ;	Chosen strategy is simple_byte
  1286  00115A  0A0A               	xorlw	10	; case 10
  1287  00115C  B4D8               	btfsc	status,2,c
  1288  00115E  D7BE               	goto	l3642
  1289  001160  0A25               	xorlw	37	; case 47
  1290  001162  B4D8               	btfsc	status,2,c
  1291  001164  D7E7               	goto	l3648
  1292  001166  0A1E               	xorlw	30	; case 49
  1293  001168  B4D8               	btfsc	status,2,c
  1294  00116A  D7C5               	goto	l3646
  1295  00116C                     l3654:
  1296                           
  1297                           ;main.c: 381: }
  1298                           ;main.c: 384: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1299  00116C  0102               	movlb	2	; () banked
  1300  00116E  0E02               	movlw	high main@msgtype
  1301  001170  0101               	movlb	1	; () banked
  1302  001172  0101               	movlb	1	; () banked
  1303  001174  6FAA               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1304  001176  0102               	movlb	2	; () banked
  1305  001178  0E12               	movlw	low main@msgtype
  1306  00117A  0101               	movlb	1	; () banked
  1307  00117C  0101               	movlb	1	; () banked
  1308  00117E  6FA9               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1309  001180  0102               	movlb	2	; () banked
  1310  001182  0E02               	movlw	high main@msgbuffer
  1311  001184  0101               	movlb	1	; () banked
  1312  001186  0101               	movlb	1	; () banked
  1313  001188  6FAC               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1314  00118A  0102               	movlb	2	; () banked
  1315  00118C  0E00               	movlw	low main@msgbuffer
  1316  00118E  0101               	movlb	1	; () banked
  1317  001190  0101               	movlb	1	; () banked
  1318  001192  6FAB               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1319  001194  0E0A               	movlw	10
  1320  001196  EC38  F011         	call	_ToMainLow_recvmsg
  1321  00119A  0102               	movlb	2	; () banked
  1322  00119C  0102               	movlb	2	; () banked
  1323  00119E  6F13               	movwf	main@length& (0+255),b
  1324                           
  1325                           ; BSR set to: 2
  1326                           ;main.c: 385: if (length < 0) {
  1327  0011A0  0102               	movlb	2	; () banked
  1328  0011A2  0102               	movlb	2	; () banked
  1329  0011A4  AF13               	btfss	main@length& (0+255),7,b
  1330  0011A6  D046               	goto	l3668
  1331                           
  1332                           ; BSR set to: 2
  1333                           ;main.c: 387: if (length != -4) {
  1334  0011A8  0102               	movlb	2	; () banked
  1335  0011AA  0102               	movlb	2	; () banked
  1336  0011AC  5113               	movf	main@length& (0+255),w,b
  1337  0011AE  0AFC               	xorlw	252
  1338  0011B0  B4D8               	btfsc	status,2,c
  1339  0011B2  D76C               	goto	l3632
  1340                           
  1341                           ; BSR set to: 2
  1342  0011B4  00FF               	reset		;# 
  1343  0011B6  D76A               	goto	l3632
  1344  0011B8                     l3662:
  1345                           
  1346                           ;main.c: 398: {
  1347                           ;main.c: 399: parser_lthread(msgtype,length,msgbuffer);
  1348  0011B8  0102               	movlb	2	; () banked
  1349  0011BA  0101               	movlb	1	; () banked
  1350  0011BC  C212  F1A2         	movff	main@msgtype,parser_lthread@msgtype
  1351  0011C0  0101               	movlb	1	; () banked
  1352  0011C2  0101               	movlb	1	; () banked
  1353  0011C4  6BA3               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1354  0011C6  0102               	movlb	2	; () banked
  1355  0011C8  0102               	movlb	2	; () banked
  1356  0011CA  5113               	movf	main@length& (0+255),w,b
  1357  0011CC  0101               	movlb	1	; () banked
  1358  0011CE  0101               	movlb	1	; () banked
  1359  0011D0  6FA4               	movwf	parser_lthread@length& (0+255),b
  1360  0011D2  0101               	movlb	1	; () banked
  1361  0011D4  6BA5               	clrf	(parser_lthread@length+1)& (0+255),b
  1362  0011D6  0101               	movlb	1	; () banked
  1363  0011D8  BFA4               	btfsc	parser_lthread@length& (0+255),7,b
  1364  0011DA  07A5               	decf	(parser_lthread@length+1)& (0+255),f,b
  1365  0011DC  0102               	movlb	2	; () banked
  1366  0011DE  0E02               	movlw	high main@msgbuffer
  1367  0011E0  0101               	movlb	1	; () banked
  1368  0011E2  0101               	movlb	1	; () banked
  1369  0011E4  6FA7               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1370  0011E6  0102               	movlb	2	; () banked
  1371  0011E8  0E00               	movlw	low main@msgbuffer
  1372  0011EA  0101               	movlb	1	; () banked
  1373  0011EC  0101               	movlb	1	; () banked
  1374  0011EE  6FA6               	movwf	parser_lthread@msgbuf& (0+255),b
  1375  0011F0  EC84  F003         	call	_parser_lthread	;wreg free
  1376                           
  1377                           ;main.c: 400: break;
  1378  0011F4  D74B               	goto	l3632
  1379  0011F6                     l3664:
  1380                           
  1381                           ;main.c: 403: {
  1382                           ;main.c: 404: parser_lthread(msgtype,length,msgbuffer);
  1383  0011F6  0102               	movlb	2	; () banked
  1384  0011F8  0101               	movlb	1	; () banked
  1385  0011FA  C212  F1A2         	movff	main@msgtype,parser_lthread@msgtype
  1386  0011FE  0101               	movlb	1	; () banked
  1387  001200  0101               	movlb	1	; () banked
  1388  001202  6BA3               	clrf	(parser_lthread@msgtype+1)& (0+255),b
  1389  001204  0102               	movlb	2	; () banked
  1390  001206  0102               	movlb	2	; () banked
  1391  001208  5113               	movf	main@length& (0+255),w,b
  1392  00120A  0101               	movlb	1	; () banked
  1393  00120C  0101               	movlb	1	; () banked
  1394  00120E  6FA4               	movwf	parser_lthread@length& (0+255),b
  1395  001210  0101               	movlb	1	; () banked
  1396  001212  6BA5               	clrf	(parser_lthread@length+1)& (0+255),b
  1397  001214  0101               	movlb	1	; () banked
  1398  001216  BFA4               	btfsc	parser_lthread@length& (0+255),7,b
  1399  001218  07A5               	decf	(parser_lthread@length+1)& (0+255),f,b
  1400  00121A  0102               	movlb	2	; () banked
  1401  00121C  0E02               	movlw	high main@msgbuffer
  1402  00121E  0101               	movlb	1	; () banked
  1403  001220  0101               	movlb	1	; () banked
  1404  001222  6FA7               	movwf	(parser_lthread@msgbuf+1)& (0+255),b
  1405  001224  0102               	movlb	2	; () banked
  1406  001226  0E00               	movlw	low main@msgbuffer
  1407  001228  0101               	movlb	1	; () banked
  1408  00122A  0101               	movlb	1	; () banked
  1409  00122C  6FA6               	movwf	parser_lthread@msgbuf& (0+255),b
  1410  00122E  EC84  F003         	call	_parser_lthread	;wreg free
  1411                           
  1412                           ;main.c: 405: break;
  1413  001232  D72C               	goto	l3632
  1414  001234                     l3668:
  1415  001234  0102               	movlb	2	; () banked
  1416  001236  0102               	movlb	2	; () banked
  1417  001238  5112               	movf	main@msgtype& (0+255),w,b
  1418                           
  1419                           ; Switch size 1, requested type "space"
  1420                           ; Number of cases is 3, Range of values is 30 to 51
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte           10     6 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425  00123A  0A1E               	xorlw	30	; case 30
  1426  00123C  B4D8               	btfsc	status,2,c
  1427  00123E  D726               	goto	l3632
  1428  001240  0A2C               	xorlw	44	; case 50
  1429  001242  B4D8               	btfsc	status,2,c
  1430  001244  D7B9               	goto	l3662
  1431  001246  0A01               	xorlw	1	; case 51
  1432  001248  B4D8               	btfsc	status,2,c
  1433  00124A  D7D5               	goto	l3664
  1434  00124C  D71F               	goto	l3632
  1435  00124E                     __end_of_main:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1l	equ	0xFE1
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _parser_lthread *****************
  1448 ;; Defined at:
  1449 ;;		line 10 in file "source/Parser_thread.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  msgtype         2    0[BANK1 ] int 
  1452 ;;  length          2    2[BANK1 ] int 
  1453 ;;  msgbuf          2    4[BANK1 ] PTR unsigned char 
  1454 ;;		 -> main@msgbuffer(11), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  reply           6   25[BANK1 ] unsigned char [6]
  1457 ;;  reply           6   19[BANK1 ] unsigned char [6]
  1458 ;;  reply           6   13[BANK1 ] unsigned char [6]
  1459 ;;  data            5    8[BANK1 ] unsigned char [5]
  1460 ;;  ticks           2    0        unsigned int 
  1461 ;;  degrees         1   49[BANK1 ] unsigned char 
  1462 ;;  command         1   48[BANK1 ] unsigned char 
  1463 ;;  Inches          1   46[BANK1 ] unsigned char 
  1464 ;;  Feet            1   45[BANK1 ] unsigned char 
  1465 ;;  data           12   31[BANK1 ] unsigned char [12]
  1466 ;;  x               2   50[BANK1 ] int 
  1467 ;;  checksum        2   43[BANK1 ] unsigned int 
  1468 ;;  status          1   47[BANK1 ] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    0[BANK1 ] int 
  1471 ;; Registers used:
  1472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1478 ;;      Params:         0       0       6       0       0
  1479 ;;      Locals:         0       0      44       0       0
  1480 ;;      Temps:          0       0       2       0       0
  1481 ;;      Totals:         0       0      52       0       0
  1482 ;;Total ram usage:       52 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:   14
  1485 ;; This function calls:
  1486 ;;		_getMessageId
  1487 ;;		_i2c_configure_master
  1488 ;;		_i2c_master_recv
  1489 ;;		_i2c_master_send
  1490 ;;		_uart_write
  1491 ;;		_validateMessage
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text1
  1498  000708                     __ptext1:
  1499                           	opt stack 0
  1500  000708                     _parser_lthread:
  1501                           	opt stack 16
  1502                           
  1503                           ;Parser_thread.c: 12: if(msgtype == 49) {
  1504                           
  1505                           ; BSR set to: 2
  1506                           ;incstack = 0
  1507  000708  0101               	movlb	1	; () banked
  1508  00070A  0101               	movlb	1	; () banked
  1509  00070C  51A2               	movf	parser_lthread@msgtype& (0+255),w,b
  1510  00070E  0A31               	xorlw	49
  1511  000710  11A3               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  1512  000712  A4D8               	btfss	status,2,c
  1513  000714  D176               	goto	l3906
  1514                           
  1515                           ; BSR set to: 1
  1516                           ;Parser_thread.c: 14: if ( !validateMessage(msgbuf, (unsigned char) length) )
  1517  000716  0101               	movlb	1	; () banked
  1518  000718  0100               	movlb	0	; () banked
  1519  00071A  C1A7  F0B4         	movff	parser_lthread@msgbuf+1,validateMessage@buffer+1
  1520  00071E  0101               	movlb	1	; () banked
  1521  000720  0100               	movlb	0	; () banked
  1522  000722  C1A6  F0B3         	movff	parser_lthread@msgbuf,validateMessage@buffer
  1523  000726  C1A4  F0B5         	movff	parser_lthread@length,validateMessage@length
  1524  00072A  EC14  F00A         	call	_validateMessage	;wreg free
  1525  00072E  0900               	iorlw	0
  1526  000730  B4D8               	btfsc	status,2,c
  1527  000732  0012               	return	
  1528  000734  D14D               	goto	l3904
  1529  000736                     l3864:
  1530                           
  1531                           ;Parser_thread.c: 20: {
  1532                           ;Parser_thread.c: 21: i2c_configure_master(0x4D);
  1533  000736  0E4D               	movlw	77
  1534  000738  EC30  F010         	call	_i2c_configure_master
  1535                           
  1536                           ;Parser_thread.c: 22: i2c_master_recv(0x07);
  1537  00073C  0E07               	movlw	7
  1538  00073E  EC5A  F010         	call	_i2c_master_recv
  1539                           
  1540                           ;Parser_thread.c: 23: break;
  1541  000742  D15F               	goto	l3906
  1542  000744                     l3866:
  1543                           
  1544                           ;Parser_thread.c: 27: {
  1545                           ;Parser_thread.c: 28: unsigned char data[5];
  1546                           ;Parser_thread.c: 29: unsigned char command;
  1547                           ;Parser_thread.c: 30: unsigned int ticks;
  1548                           ;Parser_thread.c: 31: unsigned char Feet = 0;
  1549  000744  0101               	movlb	1	; () banked
  1550  000746  6FA8               	movwf	??_parser_lthread& (0+255),b
  1551  000748  0E00               	movlw	0
  1552  00074A  0101               	movlb	1	; () banked
  1553  00074C  0101               	movlb	1	; () banked
  1554  00074E  6FCF               	movwf	parser_lthread@Feet& (0+255),b
  1555  000750  0101               	movlb	1	; () banked
  1556  000752  51A8               	movf	??_parser_lthread& (0+255),w,b
  1557                           
  1558                           ;Parser_thread.c: 32: unsigned char Inches = 0;
  1559  000754  0101               	movlb	1	; () banked
  1560  000756  6FA8               	movwf	??_parser_lthread& (0+255),b
  1561  000758  0E00               	movlw	0
  1562  00075A  0101               	movlb	1	; () banked
  1563  00075C  0101               	movlb	1	; () banked
  1564  00075E  6FD0               	movwf	parser_lthread@Inches& (0+255),b
  1565  000760  0101               	movlb	1	; () banked
  1566  000762  51A8               	movf	??_parser_lthread& (0+255),w,b
  1567                           
  1568                           ;Parser_thread.c: 33: unsigned char degrees = 0;
  1569  000764  0101               	movlb	1	; () banked
  1570  000766  6FA8               	movwf	??_parser_lthread& (0+255),b
  1571  000768  0E00               	movlw	0
  1572  00076A  0101               	movlb	1	; () banked
  1573  00076C  0101               	movlb	1	; () banked
  1574  00076E  6FD3               	movwf	parser_lthread@degrees& (0+255),b
  1575  000770  0101               	movlb	1	; () banked
  1576  000772  51A8               	movf	??_parser_lthread& (0+255),w,b
  1577                           
  1578                           ;Parser_thread.c: 35: switch(msgbuf[1] & 0x0F)
  1579  000774  D03D               	goto	l3884
  1580  000776                     l3868:
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;Parser_thread.c: 38: {
  1584                           ;Parser_thread.c: 40: command = 0x01;
  1585  000776  0101               	movlb	1	; () banked
  1586  000778  6FA8               	movwf	??_parser_lthread& (0+255),b
  1587  00077A  0E01               	movlw	1
  1588  00077C  D003               	goto	L1
  1589  00077E                     l3872:
  1590                           
  1591                           ; BSR set to: 1
  1592                           ;Parser_thread.c: 45: {
  1593                           ;Parser_thread.c: 47: command = 0x02;
  1594  00077E  0101               	movlb	1	; () banked
  1595  000780  6FA8               	movwf	??_parser_lthread& (0+255),b
  1596  000782  0E02               	movlw	2
  1597  000784                     L1:
  1598  000784  0101               	movlb	1	; () banked
  1599  000786  0101               	movlb	1	; () banked
  1600  000788  6FD2               	movwf	parser_lthread@command& (0+255),b
  1601  00078A  0101               	movlb	1	; () banked
  1602  00078C  51A8               	movf	??_parser_lthread& (0+255),w,b
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;Parser_thread.c: 48: degrees = msgbuf[2];
  1606  00078E  0101               	movlb	1	; () banked
  1607  000790  EE20 F002          	lfsr	2,2
  1608  000794  0101               	movlb	1	; () banked
  1609  000796  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1610  000798  26D9               	addwf	fsr2l,f,c
  1611  00079A  0101               	movlb	1	; () banked
  1612  00079C  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1613  00079E  22DA               	addwfc	fsr2h,f,c
  1614  0007A0  50DF               	movf	indf2,w,c
  1615  0007A2  0101               	movlb	1	; () banked
  1616  0007A4  0101               	movlb	1	; () banked
  1617  0007A6  6FD3               	movwf	parser_lthread@degrees& (0+255),b
  1618                           
  1619                           ;Parser_thread.c: 49: break;
  1620  0007A8  D041               	goto	l520
  1621  0007AA                     l3876:
  1622                           
  1623                           ; BSR set to: 1
  1624                           ;Parser_thread.c: 52: {
  1625                           ;Parser_thread.c: 54: command = 0x03;
  1626  0007AA  0101               	movlb	1	; () banked
  1627  0007AC  6FA8               	movwf	??_parser_lthread& (0+255),b
  1628  0007AE  0E03               	movlw	3
  1629  0007B0  0101               	movlb	1	; () banked
  1630  0007B2  0101               	movlb	1	; () banked
  1631  0007B4  6FD2               	movwf	parser_lthread@command& (0+255),b
  1632  0007B6  0101               	movlb	1	; () banked
  1633  0007B8  51A8               	movf	??_parser_lthread& (0+255),w,b
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;Parser_thread.c: 55: Feet = msgbuf[3];
  1637  0007BA  0101               	movlb	1	; () banked
  1638  0007BC  EE20 F003          	lfsr	2,3
  1639  0007C0  0101               	movlb	1	; () banked
  1640  0007C2  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1641  0007C4  26D9               	addwf	fsr2l,f,c
  1642  0007C6  0101               	movlb	1	; () banked
  1643  0007C8  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1644  0007CA  22DA               	addwfc	fsr2h,f,c
  1645  0007CC  50DF               	movf	indf2,w,c
  1646  0007CE  0101               	movlb	1	; () banked
  1647  0007D0  0101               	movlb	1	; () banked
  1648  0007D2  6FCF               	movwf	parser_lthread@Feet& (0+255),b
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;Parser_thread.c: 56: Inches = msgbuf[4];
  1652  0007D4  0101               	movlb	1	; () banked
  1653  0007D6  EE20 F004          	lfsr	2,4
  1654  0007DA  0101               	movlb	1	; () banked
  1655  0007DC  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1656  0007DE  26D9               	addwf	fsr2l,f,c
  1657  0007E0  0101               	movlb	1	; () banked
  1658  0007E2  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1659  0007E4  22DA               	addwfc	fsr2h,f,c
  1660  0007E6  50DF               	movf	indf2,w,c
  1661  0007E8  0101               	movlb	1	; () banked
  1662  0007EA  0101               	movlb	1	; () banked
  1663  0007EC  6FD0               	movwf	parser_lthread@Inches& (0+255),b
  1664                           
  1665                           ;Parser_thread.c: 58: break;
  1666  0007EE  D01E               	goto	l520
  1667  0007F0                     l3884:
  1668                           
  1669                           ; BSR set to: 1
  1670  0007F0  0101               	movlb	1	; () banked
  1671  0007F2  EE20 F001          	lfsr	2,1
  1672  0007F6  0101               	movlb	1	; () banked
  1673  0007F8  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  1674  0007FA  26D9               	addwf	fsr2l,f,c
  1675  0007FC  0101               	movlb	1	; () banked
  1676  0007FE  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  1677  000800  22DA               	addwfc	fsr2h,f,c
  1678  000802  50DF               	movf	indf2,w,c
  1679  000804  0B0F               	andlw	15
  1680  000806  0101               	movlb	1	; () banked
  1681  000808  6FA8               	movwf	??_parser_lthread& (0+255),b
  1682  00080A  6BA9               	clrf	(??_parser_lthread+1)& (0+255),b
  1683                           
  1684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1685                           ; Switch size 1, requested type "space"
  1686                           ; Number of cases is 1, Range of values is 0 to 0
  1687                           ; switch strategies available:
  1688                           ; Name         Instructions Cycles
  1689                           ; simple_byte            4     3 (average)
  1690                           ;	Chosen strategy is simple_byte
  1691  00080C  0101               	movlb	1	; () banked
  1692  00080E  51A9               	movf	(??_parser_lthread+1)& (0+255),w,b
  1693  000810  0A00               	xorlw	0	; case 0
  1694  000812  A4D8               	btfss	status,2,c
  1695  000814  D00B               	goto	l520
  1696                           
  1697                           ; BSR set to: 1
  1698                           ; Switch size 1, requested type "space"
  1699                           ; Number of cases is 3, Range of values is 0 to 2
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte           10     6 (average)
  1703                           ;	Chosen strategy is simple_byte
  1704  000816  0101               	movlb	1	; () banked
  1705  000818  51A8               	movf	??_parser_lthread& (0+255),w,b
  1706  00081A  0A00               	xorlw	0	; case 0
  1707  00081C  B4D8               	btfsc	status,2,c
  1708  00081E  D7C5               	goto	l3876
  1709  000820  0A01               	xorlw	1	; case 1
  1710  000822  B4D8               	btfsc	status,2,c
  1711  000824  D7A8               	goto	l3868
  1712  000826  0A03               	xorlw	3	; case 2
  1713  000828  B4D8               	btfsc	status,2,c
  1714  00082A  D7A9               	goto	l3872
  1715  00082C                     l520:
  1716                           
  1717                           ; BSR set to: 1
  1718                           ;Parser_thread.c: 62: data[0] = command;
  1719  00082C  C1D2  F1AA         	movff	parser_lthread@command,parser_lthread@data
  1720                           
  1721                           ;Parser_thread.c: 63: data[1] = degrees;
  1722  000830  C1D3  F1AB         	movff	parser_lthread@degrees,parser_lthread@data+1
  1723                           
  1724                           ;Parser_thread.c: 64: data[2] = Feet;
  1725  000834  C1CF  F1AC         	movff	parser_lthread@Feet,parser_lthread@data+2
  1726                           
  1727                           ;Parser_thread.c: 65: data[3] = Inches;
  1728  000838  C1D0  F1AD         	movff	parser_lthread@Inches,parser_lthread@data+3
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;Parser_thread.c: 67: unsigned char reply[6];
  1732                           ;Parser_thread.c: 68: reply[0] = 0x30;
  1733  00083C  0101               	movlb	1	; () banked
  1734  00083E  6FA8               	movwf	??_parser_lthread& (0+255),b
  1735  000840  0E30               	movlw	48
  1736  000842  0101               	movlb	1	; () banked
  1737  000844  0101               	movlb	1	; () banked
  1738  000846  6FAF               	movwf	parser_lthread@reply& (0+255),b
  1739  000848  0101               	movlb	1	; () banked
  1740  00084A  51A8               	movf	??_parser_lthread& (0+255),w,b
  1741                           
  1742                           ;Parser_thread.c: 69: reply[1] = 0x00;
  1743  00084C  0101               	movlb	1	; () banked
  1744  00084E  6FA8               	movwf	??_parser_lthread& (0+255),b
  1745  000850  0E00               	movlw	0
  1746  000852  0101               	movlb	1	; () banked
  1747  000854  0101               	movlb	1	; () banked
  1748  000856  6FB0               	movwf	(parser_lthread@reply+1)& (0+255),b
  1749  000858  0101               	movlb	1	; () banked
  1750  00085A  51A8               	movf	??_parser_lthread& (0+255),w,b
  1751                           
  1752                           ;Parser_thread.c: 70: reply[2] = 0x00;
  1753  00085C  0101               	movlb	1	; () banked
  1754  00085E  6FA8               	movwf	??_parser_lthread& (0+255),b
  1755  000860  0E00               	movlw	0
  1756  000862  0101               	movlb	1	; () banked
  1757  000864  0101               	movlb	1	; () banked
  1758  000866  6FB1               	movwf	(parser_lthread@reply+2)& (0+255),b
  1759  000868  0101               	movlb	1	; () banked
  1760  00086A  51A8               	movf	??_parser_lthread& (0+255),w,b
  1761                           
  1762                           ;Parser_thread.c: 71: reply[3] = 0x00;
  1763  00086C  0101               	movlb	1	; () banked
  1764  00086E  6FA8               	movwf	??_parser_lthread& (0+255),b
  1765  000870  0E00               	movlw	0
  1766  000872  0101               	movlb	1	; () banked
  1767  000874  0101               	movlb	1	; () banked
  1768  000876  6FB2               	movwf	(parser_lthread@reply+3)& (0+255),b
  1769  000878  0101               	movlb	1	; () banked
  1770  00087A  51A8               	movf	??_parser_lthread& (0+255),w,b
  1771                           
  1772                           ;Parser_thread.c: 72: reply[4] = 0x00;
  1773  00087C  0101               	movlb	1	; () banked
  1774  00087E  6FA8               	movwf	??_parser_lthread& (0+255),b
  1775  000880  0E00               	movlw	0
  1776  000882  0101               	movlb	1	; () banked
  1777  000884  0101               	movlb	1	; () banked
  1778  000886  6FB3               	movwf	(parser_lthread@reply+4)& (0+255),b
  1779  000888  0101               	movlb	1	; () banked
  1780  00088A  51A8               	movf	??_parser_lthread& (0+255),w,b
  1781                           
  1782                           ;Parser_thread.c: 73: reply[5] = 0x30;
  1783  00088C  0101               	movlb	1	; () banked
  1784  00088E  6FA8               	movwf	??_parser_lthread& (0+255),b
  1785  000890  0E30               	movlw	48
  1786  000892  0101               	movlb	1	; () banked
  1787  000894  0101               	movlb	1	; () banked
  1788  000896  6FB4               	movwf	(parser_lthread@reply+5)& (0+255),b
  1789  000898  0101               	movlb	1	; () banked
  1790  00089A  51A8               	movf	??_parser_lthread& (0+255),w,b
  1791                           
  1792                           ; BSR set to: 1
  1793                           ;Parser_thread.c: 75: uart_write(6,reply);
  1794  00089C  0101               	movlb	1	; () banked
  1795  00089E  0E01               	movlw	high parser_lthread@reply
  1796  0008A0  0100               	movlb	0	; () banked
  1797  0008A2  0100               	movlb	0	; () banked
  1798  0008A4  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  1799  0008A6  0101               	movlb	1	; () banked
  1800  0008A8  0EAF               	movlw	low parser_lthread@reply
  1801  0008AA  0100               	movlb	0	; () banked
  1802  0008AC  0100               	movlb	0	; () banked
  1803  0008AE  6FB4               	movwf	uart_write@msg& (0+255),b
  1804  0008B0  0E06               	movlw	6
  1805  0008B2  ECA0  F00F         	call	_uart_write
  1806                           
  1807                           ;Parser_thread.c: 77: i2c_configure_master(0x4F);
  1808  0008B6  0E4F               	movlw	79
  1809  0008B8  EC30  F010         	call	_i2c_configure_master
  1810                           
  1811                           ;Parser_thread.c: 78: i2c_master_send(5,data);
  1812  0008BC  0101               	movlb	1	; () banked
  1813  0008BE  0E01               	movlw	high parser_lthread@data
  1814  0008C0  0100               	movlb	0	; () banked
  1815  0008C2  0100               	movlb	0	; () banked
  1816  0008C4  6FB4               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1817  0008C6  0101               	movlb	1	; () banked
  1818  0008C8  0EAA               	movlw	low parser_lthread@data
  1819  0008CA  0100               	movlb	0	; () banked
  1820  0008CC  0100               	movlb	0	; () banked
  1821  0008CE  6FB3               	movwf	i2c_master_send@msg& (0+255),b
  1822  0008D0  0E05               	movlw	5
  1823  0008D2  EC64  F00C         	call	_i2c_master_send
  1824                           
  1825                           ;Parser_thread.c: 80: break;
  1826  0008D6  D095               	goto	l3906
  1827  0008D8                     l3894:
  1828                           
  1829                           ;Parser_thread.c: 84: {
  1830                           ;Parser_thread.c: 85: unsigned char reply[6];
  1831                           ;Parser_thread.c: 86: reply[0] = 0x30;
  1832  0008D8  0101               	movlb	1	; () banked
  1833  0008DA  6FA8               	movwf	??_parser_lthread& (0+255),b
  1834  0008DC  0E30               	movlw	48
  1835  0008DE  0101               	movlb	1	; () banked
  1836  0008E0  0101               	movlb	1	; () banked
  1837  0008E2  6FB5               	movwf	parser_lthread@reply_1664& (0+255),b
  1838  0008E4  0101               	movlb	1	; () banked
  1839  0008E6  51A8               	movf	??_parser_lthread& (0+255),w,b
  1840                           
  1841                           ;Parser_thread.c: 87: reply[1] = 0x00;
  1842  0008E8  0101               	movlb	1	; () banked
  1843  0008EA  6FA8               	movwf	??_parser_lthread& (0+255),b
  1844  0008EC  0E00               	movlw	0
  1845  0008EE  0101               	movlb	1	; () banked
  1846  0008F0  0101               	movlb	1	; () banked
  1847  0008F2  6FB6               	movwf	(parser_lthread@reply_1664+1)& (0+255),b
  1848  0008F4  0101               	movlb	1	; () banked
  1849  0008F6  51A8               	movf	??_parser_lthread& (0+255),w,b
  1850                           
  1851                           ;Parser_thread.c: 88: reply[2] = 0x00;
  1852  0008F8  0101               	movlb	1	; () banked
  1853  0008FA  6FA8               	movwf	??_parser_lthread& (0+255),b
  1854  0008FC  0E00               	movlw	0
  1855  0008FE  0101               	movlb	1	; () banked
  1856  000900  0101               	movlb	1	; () banked
  1857  000902  6FB7               	movwf	(parser_lthread@reply_1664+2)& (0+255),b
  1858  000904  0101               	movlb	1	; () banked
  1859  000906  51A8               	movf	??_parser_lthread& (0+255),w,b
  1860                           
  1861                           ;Parser_thread.c: 89: reply[3] = 0x00;
  1862  000908  0101               	movlb	1	; () banked
  1863  00090A  6FA8               	movwf	??_parser_lthread& (0+255),b
  1864  00090C  0E00               	movlw	0
  1865  00090E  0101               	movlb	1	; () banked
  1866  000910  0101               	movlb	1	; () banked
  1867  000912  6FB8               	movwf	(parser_lthread@reply_1664+3)& (0+255),b
  1868  000914  0101               	movlb	1	; () banked
  1869  000916  51A8               	movf	??_parser_lthread& (0+255),w,b
  1870                           
  1871                           ;Parser_thread.c: 90: reply[4] = 0x00;
  1872  000918  0101               	movlb	1	; () banked
  1873  00091A  6FA8               	movwf	??_parser_lthread& (0+255),b
  1874  00091C  0E00               	movlw	0
  1875  00091E  0101               	movlb	1	; () banked
  1876  000920  0101               	movlb	1	; () banked
  1877  000922  6FB9               	movwf	(parser_lthread@reply_1664+4)& (0+255),b
  1878  000924  0101               	movlb	1	; () banked
  1879  000926  51A8               	movf	??_parser_lthread& (0+255),w,b
  1880                           
  1881                           ;Parser_thread.c: 91: reply[5] = 0x30;
  1882  000928  0101               	movlb	1	; () banked
  1883  00092A  6FA8               	movwf	??_parser_lthread& (0+255),b
  1884  00092C  0E30               	movlw	48
  1885  00092E  0101               	movlb	1	; () banked
  1886  000930  0101               	movlb	1	; () banked
  1887  000932  6FBA               	movwf	(parser_lthread@reply_1664+5)& (0+255),b
  1888  000934  0101               	movlb	1	; () banked
  1889  000936  51A8               	movf	??_parser_lthread& (0+255),w,b
  1890                           
  1891                           ; BSR set to: 1
  1892                           ;Parser_thread.c: 93: uart_write(6,reply);
  1893  000938  0101               	movlb	1	; () banked
  1894  00093A  0E01               	movlw	high parser_lthread@reply_1664
  1895  00093C  0100               	movlb	0	; () banked
  1896  00093E  0100               	movlb	0	; () banked
  1897  000940  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  1898  000942  0101               	movlb	1	; () banked
  1899  000944  0EB5               	movlw	low parser_lthread@reply_1664
  1900  000946  0100               	movlb	0	; () banked
  1901  000948  0100               	movlb	0	; () banked
  1902  00094A  6FB4               	movwf	uart_write@msg& (0+255),b
  1903  00094C  0E06               	movlw	6
  1904  00094E  ECA0  F00F         	call	_uart_write
  1905                           
  1906                           ;Parser_thread.c: 94: break;
  1907  000952  D057               	goto	l3906
  1908  000954                     l3898:
  1909                           
  1910                           ;Parser_thread.c: 98: {
  1911                           ;Parser_thread.c: 99: unsigned char reply[6];
  1912                           ;Parser_thread.c: 100: reply[0] = 0x30;
  1913  000954  0101               	movlb	1	; () banked
  1914  000956  6FA8               	movwf	??_parser_lthread& (0+255),b
  1915  000958  0E30               	movlw	48
  1916  00095A  0101               	movlb	1	; () banked
  1917  00095C  0101               	movlb	1	; () banked
  1918  00095E  6FBB               	movwf	parser_lthread@reply_1665& (0+255),b
  1919  000960  0101               	movlb	1	; () banked
  1920  000962  51A8               	movf	??_parser_lthread& (0+255),w,b
  1921                           
  1922                           ;Parser_thread.c: 101: reply[1] = 0x00;
  1923  000964  0101               	movlb	1	; () banked
  1924  000966  6FA8               	movwf	??_parser_lthread& (0+255),b
  1925  000968  0E00               	movlw	0
  1926  00096A  0101               	movlb	1	; () banked
  1927  00096C  0101               	movlb	1	; () banked
  1928  00096E  6FBC               	movwf	(parser_lthread@reply_1665+1)& (0+255),b
  1929  000970  0101               	movlb	1	; () banked
  1930  000972  51A8               	movf	??_parser_lthread& (0+255),w,b
  1931                           
  1932                           ;Parser_thread.c: 102: reply[2] = 0x00;
  1933  000974  0101               	movlb	1	; () banked
  1934  000976  6FA8               	movwf	??_parser_lthread& (0+255),b
  1935  000978  0E00               	movlw	0
  1936  00097A  0101               	movlb	1	; () banked
  1937  00097C  0101               	movlb	1	; () banked
  1938  00097E  6FBD               	movwf	(parser_lthread@reply_1665+2)& (0+255),b
  1939  000980  0101               	movlb	1	; () banked
  1940  000982  51A8               	movf	??_parser_lthread& (0+255),w,b
  1941                           
  1942                           ;Parser_thread.c: 103: reply[3] = 0x00;
  1943  000984  0101               	movlb	1	; () banked
  1944  000986  6FA8               	movwf	??_parser_lthread& (0+255),b
  1945  000988  0E00               	movlw	0
  1946  00098A  0101               	movlb	1	; () banked
  1947  00098C  0101               	movlb	1	; () banked
  1948  00098E  6FBE               	movwf	(parser_lthread@reply_1665+3)& (0+255),b
  1949  000990  0101               	movlb	1	; () banked
  1950  000992  51A8               	movf	??_parser_lthread& (0+255),w,b
  1951                           
  1952                           ;Parser_thread.c: 104: reply[4] = 0x00;
  1953  000994  0101               	movlb	1	; () banked
  1954  000996  6FA8               	movwf	??_parser_lthread& (0+255),b
  1955  000998  0E00               	movlw	0
  1956  00099A  0101               	movlb	1	; () banked
  1957  00099C  0101               	movlb	1	; () banked
  1958  00099E  6FBF               	movwf	(parser_lthread@reply_1665+4)& (0+255),b
  1959  0009A0  0101               	movlb	1	; () banked
  1960  0009A2  51A8               	movf	??_parser_lthread& (0+255),w,b
  1961                           
  1962                           ;Parser_thread.c: 105: reply[5] = 0x30;
  1963  0009A4  0101               	movlb	1	; () banked
  1964  0009A6  6FA8               	movwf	??_parser_lthread& (0+255),b
  1965  0009A8  0E30               	movlw	48
  1966  0009AA  0101               	movlb	1	; () banked
  1967  0009AC  0101               	movlb	1	; () banked
  1968  0009AE  6FC0               	movwf	(parser_lthread@reply_1665+5)& (0+255),b
  1969  0009B0  0101               	movlb	1	; () banked
  1970  0009B2  51A8               	movf	??_parser_lthread& (0+255),w,b
  1971                           
  1972                           ; BSR set to: 1
  1973                           ;Parser_thread.c: 107: uart_write(6,reply);
  1974  0009B4  0101               	movlb	1	; () banked
  1975  0009B6  0E01               	movlw	high parser_lthread@reply_1665
  1976  0009B8  0100               	movlb	0	; () banked
  1977  0009BA  0100               	movlb	0	; () banked
  1978  0009BC  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  1979  0009BE  0101               	movlb	1	; () banked
  1980  0009C0  0EBB               	movlw	low parser_lthread@reply_1665
  1981  0009C2  0100               	movlb	0	; () banked
  1982  0009C4  0100               	movlb	0	; () banked
  1983  0009C6  6FB4               	movwf	uart_write@msg& (0+255),b
  1984  0009C8  0E06               	movlw	6
  1985  0009CA  ECA0  F00F         	call	_uart_write
  1986                           
  1987                           ;Parser_thread.c: 108: break;
  1988  0009CE  D019               	goto	l3906
  1989  0009D0                     l3904:
  1990  0009D0  0101               	movlb	1	; () banked
  1991  0009D2  0100               	movlb	0	; () banked
  1992  0009D4  C1A7  F0B4         	movff	parser_lthread@msgbuf+1,getMessageId@buffer+1
  1993  0009D8  0101               	movlb	1	; () banked
  1994  0009DA  0100               	movlb	0	; () banked
  1995  0009DC  C1A6  F0B3         	movff	parser_lthread@msgbuf,getMessageId@buffer
  1996  0009E0  C1A4  F0B5         	movff	parser_lthread@length,getMessageId@length
  1997  0009E4  EC37  F012         	call	_getMessageId	;wreg free
  1998                           
  1999                           ; Switch size 1, requested type "space"
  2000                           ; Number of cases is 5, Range of values is 0 to 255
  2001                           ; switch strategies available:
  2002                           ; Name         Instructions Cycles
  2003                           ; simple_byte           16     9 (average)
  2004                           ;	Chosen strategy is simple_byte
  2005  0009E8  0A00               	xorlw	0	; case 0
  2006  0009EA  B4D8               	btfsc	status,2,c
  2007  0009EC  D6A4               	goto	l3864
  2008  0009EE  0A02               	xorlw	2	; case 2
  2009  0009F0  B4D8               	btfsc	status,2,c
  2010  0009F2  D6A8               	goto	l3866
  2011  0009F4  0A01               	xorlw	1	; case 3
  2012  0009F6  B4D8               	btfsc	status,2,c
  2013  0009F8  D7AD               	goto	l3898
  2014  0009FA  0A07               	xorlw	7	; case 4
  2015  0009FC  B4D8               	btfsc	status,2,c
  2016  0009FE  D76C               	goto	l3894
  2017  000A00  0AFB               	xorlw	251	; case 255
  2018  000A02                     l3906:
  2019                           
  2020                           ;Parser_thread.c: 120: }
  2021                           ;Parser_thread.c: 121: if(msgtype == 50)
  2022  000A02  0101               	movlb	1	; () banked
  2023  000A04  0101               	movlb	1	; () banked
  2024  000A06  51A2               	movf	parser_lthread@msgtype& (0+255),w,b
  2025  000A08  0A32               	xorlw	50
  2026  000A0A  11A3               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  2027  000A0C  A4D8               	btfss	status,2,c
  2028  000A0E  D0BE               	goto	l3954
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;Parser_thread.c: 122: {
  2032                           ;Parser_thread.c: 123: unsigned int checksum = 0;
  2033  000A10  0E00               	movlw	0
  2034  000A12  0101               	movlb	1	; () banked
  2035  000A14  0101               	movlb	1	; () banked
  2036  000A16  6FCE               	movwf	(parser_lthread@checksum+1)& (0+255),b
  2037  000A18  0E00               	movlw	0
  2038  000A1A  0101               	movlb	1	; () banked
  2039  000A1C  6FCD               	movwf	parser_lthread@checksum& (0+255),b
  2040                           
  2041                           ; BSR set to: 1
  2042                           ;Parser_thread.c: 124: unsigned char data[12];
  2043                           ;Parser_thread.c: 125: unsigned char status = 0;
  2044  000A1E  0101               	movlb	1	; () banked
  2045  000A20  6FA8               	movwf	??_parser_lthread& (0+255),b
  2046  000A22  0E00               	movlw	0
  2047  000A24  0101               	movlb	1	; () banked
  2048  000A26  0101               	movlb	1	; () banked
  2049  000A28  6FD1               	movwf	parser_lthread@status& (0+255),b
  2050  000A2A  0101               	movlb	1	; () banked
  2051  000A2C  51A8               	movf	??_parser_lthread& (0+255),w,b
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;Parser_thread.c: 127: if(msgbuf[6] == 0x01)
  2055  000A2E  0101               	movlb	1	; () banked
  2056  000A30  EE20 F006          	lfsr	2,6
  2057  000A34  0101               	movlb	1	; () banked
  2058  000A36  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2059  000A38  26D9               	addwf	fsr2l,f,c
  2060  000A3A  0101               	movlb	1	; () banked
  2061  000A3C  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2062  000A3E  22DA               	addwfc	fsr2h,f,c
  2063  000A40  0E01               	movlw	1
  2064  000A42  62DF               	cpfseq	indf2,c
  2065  000A44  D008               	goto	l3916
  2066                           
  2067                           ; BSR set to: 1
  2068                           ;Parser_thread.c: 128: {
  2069                           ;Parser_thread.c: 129: status = 0x20;
  2070  000A46  0101               	movlb	1	; () banked
  2071  000A48  6FA8               	movwf	??_parser_lthread& (0+255),b
  2072  000A4A  0E20               	movlw	32
  2073  000A4C  0101               	movlb	1	; () banked
  2074  000A4E  0101               	movlb	1	; () banked
  2075  000A50  6FD1               	movwf	parser_lthread@status& (0+255),b
  2076  000A52  0101               	movlb	1	; () banked
  2077  000A54  51A8               	movf	??_parser_lthread& (0+255),w,b
  2078  000A56                     l3916:
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;Parser_thread.c: 130: }
  2082                           ;Parser_thread.c: 131: data[0] = status | 0x06;
  2083  000A56  0101               	movlb	1	; () banked
  2084  000A58  0101               	movlb	1	; () banked
  2085  000A5A  51D1               	movf	parser_lthread@status& (0+255),w,b
  2086  000A5C  0906               	iorlw	6
  2087  000A5E  0101               	movlb	1	; () banked
  2088  000A60  0101               	movlb	1	; () banked
  2089  000A62  6FC1               	movwf	parser_lthread@data_1667& (0+255),b
  2090                           
  2091                           ; BSR set to: 1
  2092                           ;Parser_thread.c: 132: data[1] = msgbuf[0];
  2093  000A64  C1A6  FFD9         	movff	parser_lthread@msgbuf,fsr2l
  2094  000A68  C1A7  FFDA         	movff	parser_lthread@msgbuf+1,fsr2h
  2095  000A6C  50DF               	movf	indf2,w,c
  2096  000A6E  0101               	movlb	1	; () banked
  2097  000A70  0101               	movlb	1	; () banked
  2098  000A72  6FC2               	movwf	(parser_lthread@data_1667+1)& (0+255),b
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;Parser_thread.c: 133: data[2] = msgbuf[1];
  2102  000A74  0101               	movlb	1	; () banked
  2103  000A76  EE20 F001          	lfsr	2,1
  2104  000A7A  0101               	movlb	1	; () banked
  2105  000A7C  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2106  000A7E  26D9               	addwf	fsr2l,f,c
  2107  000A80  0101               	movlb	1	; () banked
  2108  000A82  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2109  000A84  22DA               	addwfc	fsr2h,f,c
  2110  000A86  50DF               	movf	indf2,w,c
  2111  000A88  0101               	movlb	1	; () banked
  2112  000A8A  0101               	movlb	1	; () banked
  2113  000A8C  6FC3               	movwf	(parser_lthread@data_1667+2)& (0+255),b
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;Parser_thread.c: 134: data[3] = msgbuf[2];
  2117  000A8E  0101               	movlb	1	; () banked
  2118  000A90  EE20 F002          	lfsr	2,2
  2119  000A94  0101               	movlb	1	; () banked
  2120  000A96  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2121  000A98  26D9               	addwf	fsr2l,f,c
  2122  000A9A  0101               	movlb	1	; () banked
  2123  000A9C  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2124  000A9E  22DA               	addwfc	fsr2h,f,c
  2125  000AA0  50DF               	movf	indf2,w,c
  2126  000AA2  0101               	movlb	1	; () banked
  2127  000AA4  0101               	movlb	1	; () banked
  2128  000AA6  6FC4               	movwf	(parser_lthread@data_1667+3)& (0+255),b
  2129                           
  2130                           ; BSR set to: 1
  2131                           ;Parser_thread.c: 135: data[4] = msgbuf[3];
  2132  000AA8  0101               	movlb	1	; () banked
  2133  000AAA  EE20 F003          	lfsr	2,3
  2134  000AAE  0101               	movlb	1	; () banked
  2135  000AB0  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2136  000AB2  26D9               	addwf	fsr2l,f,c
  2137  000AB4  0101               	movlb	1	; () banked
  2138  000AB6  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2139  000AB8  22DA               	addwfc	fsr2h,f,c
  2140  000ABA  50DF               	movf	indf2,w,c
  2141  000ABC  0101               	movlb	1	; () banked
  2142  000ABE  0101               	movlb	1	; () banked
  2143  000AC0  6FC5               	movwf	(parser_lthread@data_1667+4)& (0+255),b
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;Parser_thread.c: 136: data[5] = msgbuf[4];
  2147  000AC2  0101               	movlb	1	; () banked
  2148  000AC4  EE20 F004          	lfsr	2,4
  2149  000AC8  0101               	movlb	1	; () banked
  2150  000ACA  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2151  000ACC  26D9               	addwf	fsr2l,f,c
  2152  000ACE  0101               	movlb	1	; () banked
  2153  000AD0  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2154  000AD2  22DA               	addwfc	fsr2h,f,c
  2155  000AD4  50DF               	movf	indf2,w,c
  2156  000AD6  0101               	movlb	1	; () banked
  2157  000AD8  0101               	movlb	1	; () banked
  2158  000ADA  6FC6               	movwf	(parser_lthread@data_1667+5)& (0+255),b
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;Parser_thread.c: 137: data[6] = msgbuf[5];
  2162  000ADC  0101               	movlb	1	; () banked
  2163  000ADE  EE20 F005          	lfsr	2,5
  2164  000AE2  0101               	movlb	1	; () banked
  2165  000AE4  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2166  000AE6  26D9               	addwf	fsr2l,f,c
  2167  000AE8  0101               	movlb	1	; () banked
  2168  000AEA  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2169  000AEC  22DA               	addwfc	fsr2h,f,c
  2170  000AEE  50DF               	movf	indf2,w,c
  2171  000AF0  0101               	movlb	1	; () banked
  2172  000AF2  0101               	movlb	1	; () banked
  2173  000AF4  6FC7               	movwf	(parser_lthread@data_1667+6)& (0+255),b
  2174                           
  2175                           ; BSR set to: 1
  2176                           ;Parser_thread.c: 138: data[7] = foot;
  2177  000AF6  C0C4  F1C8         	movff	_foot,parser_lthread@data_1667+7
  2178                           
  2179                           ; BSR set to: 1
  2180                           ;Parser_thread.c: 139: data[8] = inch;
  2181  000AFA  C0C6  F1C9         	movff	_inch,parser_lthread@data_1667+8
  2182                           
  2183                           ; BSR set to: 1
  2184                           ;Parser_thread.c: 140: data[9] = foot;
  2185  000AFE  C0C4  F1CA         	movff	_foot,parser_lthread@data_1667+9
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;Parser_thread.c: 141: data[10] = inch;
  2189  000B02  C0C6  F1CB         	movff	_inch,parser_lthread@data_1667+10
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;Parser_thread.c: 142: int x = 0;
  2193  000B06  0E00               	movlw	0
  2194  000B08  0101               	movlb	1	; () banked
  2195  000B0A  0101               	movlb	1	; () banked
  2196  000B0C  6FD5               	movwf	(parser_lthread@x+1)& (0+255),b
  2197  000B0E  0E00               	movlw	0
  2198  000B10  0101               	movlb	1	; () banked
  2199  000B12  6FD4               	movwf	parser_lthread@x& (0+255),b
  2200                           
  2201                           ; BSR set to: 1
  2202                           ;Parser_thread.c: 143: for(x = 0; x < 11;x++)
  2203  000B14  0E00               	movlw	0
  2204  000B16  0101               	movlb	1	; () banked
  2205  000B18  0101               	movlb	1	; () banked
  2206  000B1A  6FD5               	movwf	(parser_lthread@x+1)& (0+255),b
  2207  000B1C  0E00               	movlw	0
  2208  000B1E  0101               	movlb	1	; () banked
  2209  000B20  6FD4               	movwf	parser_lthread@x& (0+255),b
  2210  000B22                     
  2211                           ; BSR set to: 1
  2212  000B22  0101               	movlb	1	; () banked
  2213  000B24  0101               	movlb	1	; () banked
  2214  000B26  51D5               	movf	(parser_lthread@x+1)& (0+255),w,b
  2215  000B28  0A80               	xorlw	128
  2216  000B2A  0F80               	addlw	-128
  2217  000B2C  0E0B               	movlw	11
  2218  000B2E  B4D8               	btfsc	status,2,c
  2219  000B30  5DD4               	subwf	parser_lthread@x& (0+255),w,b
  2220  000B32  B0D8               	btfsc	status,0,c
  2221  000B34  D01C               	goto	l530
  2222                           
  2223                           ; BSR set to: 1
  2224                           ;Parser_thread.c: 144: {
  2225                           ;Parser_thread.c: 145: checksum += data[x];
  2226                           
  2227                           ; BSR set to: 1
  2228                           
  2229                           ; BSR set to: 1
  2230  000B36  0101               	movlb	1	; () banked
  2231  000B38  0EC1               	movlw	low parser_lthread@data_1667
  2232  000B3A  0101               	movlb	1	; () banked
  2233  000B3C  0101               	movlb	1	; () banked
  2234  000B3E  25D4               	addwf	parser_lthread@x& (0+255),w,b
  2235  000B40  6ED9               	movwf	fsr2l,c
  2236  000B42  0101               	movlb	1	; () banked
  2237  000B44  0E01               	movlw	high parser_lthread@data_1667
  2238  000B46  0101               	movlb	1	; () banked
  2239  000B48  0101               	movlb	1	; () banked
  2240  000B4A  21D5               	addwfc	(parser_lthread@x+1)& (0+255),w,b
  2241  000B4C  6EDA               	movwf	fsr2h,c
  2242  000B4E  50DF               	movf	indf2,w,c
  2243  000B50  0101               	movlb	1	; () banked
  2244  000B52  6FA8               	movwf	??_parser_lthread& (0+255),b
  2245  000B54  0101               	movlb	1	; () banked
  2246  000B56  51A8               	movf	??_parser_lthread& (0+255),w,b
  2247  000B58  0101               	movlb	1	; () banked
  2248  000B5A  0101               	movlb	1	; () banked
  2249  000B5C  27CD               	addwf	parser_lthread@checksum& (0+255),f,b
  2250  000B5E  0E00               	movlw	0
  2251  000B60  0101               	movlb	1	; () banked
  2252  000B62  23CE               	addwfc	(parser_lthread@checksum+1)& (0+255),f,b
  2253                           
  2254                           ; BSR set to: 1
  2255  000B64  0101               	movlb	1	; () banked
  2256  000B66  0101               	movlb	1	; () banked
  2257  000B68  4BD4               	infsnz	parser_lthread@x& (0+255),f,b
  2258  000B6A  2BD5               	incf	(parser_lthread@x+1)& (0+255),f,b
  2259  000B6C  D7DA               	goto	L2
  2260  000B6E                     l530:
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;Parser_thread.c: 146: }
  2264                           ;Parser_thread.c: 147: data[11] = checksum & 0x0FF;
  2265  000B6E  C1CD  F1CC         	movff	parser_lthread@checksum,parser_lthread@data_1667+11
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;Parser_thread.c: 148: uart_write(12,data);
  2269  000B72  0101               	movlb	1	; () banked
  2270  000B74  0E01               	movlw	high parser_lthread@data_1667
  2271  000B76  0100               	movlb	0	; () banked
  2272  000B78  0100               	movlb	0	; () banked
  2273  000B7A  6FB5               	movwf	(uart_write@msg+1)& (0+255),b
  2274  000B7C  0101               	movlb	1	; () banked
  2275  000B7E  0EC1               	movlw	low parser_lthread@data_1667
  2276  000B80  0100               	movlb	0	; () banked
  2277  000B82  0100               	movlb	0	; () banked
  2278  000B84  6FB4               	movwf	uart_write@msg& (0+255),b
  2279  000B86  0E0C               	movlw	12
  2280  000B88  ECA0  F00F         	call	_uart_write
  2281  000B8C                     l3954:
  2282                           
  2283                           ;Parser_thread.c: 149: }
  2284                           ;Parser_thread.c: 150: if(msgtype == 51)
  2285  000B8C  0101               	movlb	1	; () banked
  2286  000B8E  0101               	movlb	1	; () banked
  2287  000B90  51A2               	movf	parser_lthread@msgtype& (0+255),w,b
  2288  000B92  0A33               	xorlw	51
  2289  000B94  11A3               	iorwf	(parser_lthread@msgtype+1)& (0+255),w,b
  2290  000B96  A4D8               	btfss	status,2,c
  2291  000B98  0012               	return	
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;Parser_thread.c: 151: {
  2295                           ;Parser_thread.c: 152: foot = msgbuf[1];
  2296  000B9A  0101               	movlb	1	; () banked
  2297  000B9C  EE20 F001          	lfsr	2,1
  2298  000BA0  0101               	movlb	1	; () banked
  2299  000BA2  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2300  000BA4  26D9               	addwf	fsr2l,f,c
  2301  000BA6  0101               	movlb	1	; () banked
  2302  000BA8  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2303  000BAA  22DA               	addwfc	fsr2h,f,c
  2304  000BAC  50DF               	movf	indf2,w,c
  2305  000BAE  0101               	movlb	1	; () banked
  2306  000BB0  6FA8               	movwf	??_parser_lthread& (0+255),b
  2307  000BB2  0101               	movlb	1	; () banked
  2308  000BB4  51A8               	movf	??_parser_lthread& (0+255),w,b
  2309  000BB6  0100               	movlb	0	; () banked
  2310  000BB8  0100               	movlb	0	; () banked
  2311  000BBA  6FC4               	movwf	_foot& (0+255),b
  2312  000BBC  0100               	movlb	0	; () banked
  2313  000BBE  6BC5               	clrf	(_foot+1)& (0+255),b
  2314                           
  2315                           ;Parser_thread.c: 153: inch = msgbuf[2];
  2316  000BC0  0101               	movlb	1	; () banked
  2317  000BC2  EE20 F002          	lfsr	2,2
  2318  000BC6  0101               	movlb	1	; () banked
  2319  000BC8  51A6               	movf	parser_lthread@msgbuf& (0+255),w,b
  2320  000BCA  26D9               	addwf	fsr2l,f,c
  2321  000BCC  0101               	movlb	1	; () banked
  2322  000BCE  51A7               	movf	(parser_lthread@msgbuf+1)& (0+255),w,b
  2323  000BD0  22DA               	addwfc	fsr2h,f,c
  2324  000BD2  50DF               	movf	indf2,w,c
  2325  000BD4  0101               	movlb	1	; () banked
  2326  000BD6  6FA8               	movwf	??_parser_lthread& (0+255),b
  2327  000BD8  0101               	movlb	1	; () banked
  2328  000BDA  51A8               	movf	??_parser_lthread& (0+255),w,b
  2329  000BDC  0100               	movlb	0	; () banked
  2330  000BDE  0100               	movlb	0	; () banked
  2331  000BE0  6FC6               	movwf	_inch& (0+255),b
  2332  000BE2  0100               	movlb	0	; () banked
  2333  000BE4  6BC7               	clrf	(_inch+1)& (0+255),b
  2334  000BE6  0012               	return	
  2335  000BE8                     __end_of_parser_lthread:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           tblptrh	equ	0xFF7
  2339                           tblptrl	equ	0xFF6
  2340                           tablat	equ	0xFF5
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           postdec1	equ	0xFE5
  2344                           fsr1l	equ	0xFE1
  2345                           indf2	equ	0xFDF
  2346                           fsr2h	equ	0xFDA
  2347                           fsr2l	equ	0xFD9
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function _validateMessage *****************
  2351 ;; Defined at:
  2352 ;;		line 173 in file "source/Parser_thread.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  buffer          2   51[BANK0 ] PTR unsigned char 
  2355 ;;		 -> main@msgbuffer(11), 
  2356 ;;  length          1   53[BANK0 ] unsigned char 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  i               2   64[BANK0 ] int 
  2359 ;;  len             1   66[BANK0 ] unsigned char 
  2360 ;;  rollingsum      1   63[BANK0 ] unsigned char 
  2361 ;;  checksum        1   62[BANK0 ] unsigned char 
  2362 ;;  buf3            1   61[BANK0 ] unsigned char 
  2363 ;;  buf2            1   60[BANK0 ] unsigned char 
  2364 ;;  buf             1   59[BANK0 ] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      unsigned char 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2374 ;;      Params:         0       3       0       0       0
  2375 ;;      Locals:         0       8       0       0       0
  2376 ;;      Temps:          0       5       0       0       0
  2377 ;;      Totals:         0      16       0       0       0
  2378 ;;Total ram usage:       16 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:   12
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_parser_lthread
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text2
  2389  001428                     __ptext2:
  2390                           	opt stack 0
  2391  001428                     _validateMessage:
  2392                           	opt stack 17
  2393                           
  2394                           ;Parser_thread.c: 178: if (length < 2) {
  2395                           
  2396                           ;incstack = 0
  2397  001428  0E02               	movlw	2
  2398  00142A  0100               	movlb	0	; () banked
  2399  00142C  0100               	movlb	0	; () banked
  2400  00142E  5DB5               	subwf	validateMessage@length& (0+255),w,b
  2401  001430  B0D8               	btfsc	status,0,c
  2402  001432  D002               	goto	l4364
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;Parser_thread.c: 179: return 0;
  2406  001434  0E00               	movlw	0
  2407  001436  0012               	return	
  2408  001438                     l4364:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;Parser_thread.c: 180: }
  2412                           ;Parser_thread.c: 182: unsigned char len = buffer[0] & 0xF;
  2413  001438  C0B3  FFD9         	movff	validateMessage@buffer,fsr2l
  2414  00143C  C0B4  FFDA         	movff	validateMessage@buffer+1,fsr2h
  2415  001440  50DF               	movf	indf2,w,c
  2416  001442  0B0F               	andlw	15
  2417  001444  0100               	movlb	0	; () banked
  2418  001446  0100               	movlb	0	; () banked
  2419  001448  6FC2               	movwf	validateMessage@len& (0+255),b
  2420                           
  2421                           ;Parser_thread.c: 183: unsigned char buf = buffer[5];
  2422  00144A  0100               	movlb	0	; () banked
  2423  00144C  EE20 F005          	lfsr	2,5
  2424  001450  0100               	movlb	0	; () banked
  2425  001452  51B3               	movf	validateMessage@buffer& (0+255),w,b
  2426  001454  26D9               	addwf	fsr2l,f,c
  2427  001456  0100               	movlb	0	; () banked
  2428  001458  51B4               	movf	(validateMessage@buffer+1)& (0+255),w,b
  2429  00145A  22DA               	addwfc	fsr2h,f,c
  2430  00145C  50DF               	movf	indf2,w,c
  2431  00145E  0100               	movlb	0	; () banked
  2432  001460  0100               	movlb	0	; () banked
  2433  001462  6FBB               	movwf	validateMessage@buf& (0+255),b
  2434                           
  2435                           ;Parser_thread.c: 184: unsigned char buf2 = buffer[4];
  2436  001464  0100               	movlb	0	; () banked
  2437  001466  EE20 F004          	lfsr	2,4
  2438  00146A  0100               	movlb	0	; () banked
  2439  00146C  51B3               	movf	validateMessage@buffer& (0+255),w,b
  2440  00146E  26D9               	addwf	fsr2l,f,c
  2441  001470  0100               	movlb	0	; () banked
  2442  001472  51B4               	movf	(validateMessage@buffer+1)& (0+255),w,b
  2443  001474  22DA               	addwfc	fsr2h,f,c
  2444  001476  50DF               	movf	indf2,w,c
  2445  001478  0100               	movlb	0	; () banked
  2446  00147A  0100               	movlb	0	; () banked
  2447  00147C  6FBC               	movwf	validateMessage@buf2& (0+255),b
  2448                           
  2449                           ;Parser_thread.c: 185: unsigned char buf3 = buffer[3];
  2450  00147E  0100               	movlb	0	; () banked
  2451  001480  EE20 F003          	lfsr	2,3
  2452  001484  0100               	movlb	0	; () banked
  2453  001486  51B3               	movf	validateMessage@buffer& (0+255),w,b
  2454  001488  26D9               	addwf	fsr2l,f,c
  2455  00148A  0100               	movlb	0	; () banked
  2456  00148C  51B4               	movf	(validateMessage@buffer+1)& (0+255),w,b
  2457  00148E  22DA               	addwfc	fsr2h,f,c
  2458  001490  50DF               	movf	indf2,w,c
  2459  001492  0100               	movlb	0	; () banked
  2460  001494  0100               	movlb	0	; () banked
  2461  001496  6FBD               	movwf	validateMessage@buf3& (0+255),b
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;Parser_thread.c: 191: len = 1 + len + 1;
  2465  001498  0100               	movlb	0	; () banked
  2466  00149A  0100               	movlb	0	; () banked
  2467  00149C  51C2               	movf	validateMessage@len& (0+255),w,b
  2468  00149E  0F02               	addlw	2
  2469  0014A0  0100               	movlb	0	; () banked
  2470  0014A2  0100               	movlb	0	; () banked
  2471  0014A4  6FC2               	movwf	validateMessage@len& (0+255),b
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;Parser_thread.c: 192: int i = 0;
  2475  0014A6  0E00               	movlw	0
  2476  0014A8  0100               	movlb	0	; () banked
  2477  0014AA  0100               	movlb	0	; () banked
  2478  0014AC  6FC1               	movwf	(validateMessage@i+1)& (0+255),b
  2479  0014AE  0E00               	movlw	0
  2480  0014B0  0100               	movlb	0	; () banked
  2481  0014B2  6FC0               	movwf	validateMessage@i& (0+255),b
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;Parser_thread.c: 193: unsigned char checksum= buffer[len - 1];
  2485  0014B4  0EFF               	movlw	255
  2486  0014B6  0100               	movlb	0	; () banked
  2487  0014B8  6FB6               	movwf	??_validateMessage& (0+255),b
  2488  0014BA  0EFF               	movlw	255
  2489  0014BC  6FB7               	movwf	(??_validateMessage+1)& (0+255),b
  2490  0014BE  0100               	movlb	0	; () banked
  2491  0014C0  0100               	movlb	0	; () banked
  2492  0014C2  51C2               	movf	validateMessage@len& (0+255),w,b
  2493  0014C4  0100               	movlb	0	; () banked
  2494  0014C6  6FB8               	movwf	(??_validateMessage+2)& (0+255),b
  2495  0014C8  6BB9               	clrf	(??_validateMessage+3)& (0+255),b
  2496  0014CA  0100               	movlb	0	; () banked
  2497  0014CC  51B6               	movf	??_validateMessage& (0+255),w,b
  2498  0014CE  0100               	movlb	0	; () banked
  2499  0014D0  27B8               	addwf	(??_validateMessage+2)& (0+255),f,b
  2500  0014D2  0100               	movlb	0	; () banked
  2501  0014D4  51B7               	movf	(??_validateMessage+1)& (0+255),w,b
  2502  0014D6  0100               	movlb	0	; () banked
  2503  0014D8  23B9               	addwfc	(??_validateMessage+3)& (0+255),f,b
  2504  0014DA  0100               	movlb	0	; () banked
  2505  0014DC  51B8               	movf	(??_validateMessage+2)& (0+255),w,b
  2506  0014DE  0100               	movlb	0	; () banked
  2507  0014E0  0100               	movlb	0	; () banked
  2508  0014E2  25B3               	addwf	validateMessage@buffer& (0+255),w,b
  2509  0014E4  6ED9               	movwf	fsr2l,c
  2510  0014E6  0100               	movlb	0	; () banked
  2511  0014E8  51B9               	movf	(??_validateMessage+3)& (0+255),w,b
  2512  0014EA  0100               	movlb	0	; () banked
  2513  0014EC  0100               	movlb	0	; () banked
  2514  0014EE  21B4               	addwfc	(validateMessage@buffer+1)& (0+255),w,b
  2515  0014F0  6EDA               	movwf	fsr2h,c
  2516  0014F2  50DF               	movf	indf2,w,c
  2517  0014F4  0100               	movlb	0	; () banked
  2518  0014F6  0100               	movlb	0	; () banked
  2519  0014F8  6FBE               	movwf	validateMessage@checksum& (0+255),b
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;Parser_thread.c: 194: unsigned char rollingsum = 0x00;
  2523  0014FA  0100               	movlb	0	; () banked
  2524  0014FC  6FB6               	movwf	??_validateMessage& (0+255),b
  2525  0014FE  0E00               	movlw	0
  2526  001500  0100               	movlb	0	; () banked
  2527  001502  0100               	movlb	0	; () banked
  2528  001504  6FBF               	movwf	validateMessage@rollingsum& (0+255),b
  2529  001506  0100               	movlb	0	; () banked
  2530  001508  51B6               	movf	??_validateMessage& (0+255),w,b
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;Parser_thread.c: 196: for(i = 0; i < len - 1; i++)
  2534  00150A  0E00               	movlw	0
  2535  00150C  0100               	movlb	0	; () banked
  2536  00150E  0100               	movlb	0	; () banked
  2537  001510  6FC1               	movwf	(validateMessage@i+1)& (0+255),b
  2538  001512  0E00               	movlw	0
  2539  001514  0100               	movlb	0	; () banked
  2540  001516  6FC0               	movwf	validateMessage@i& (0+255),b
  2541  001518  D016               	goto	l4380
  2542  00151A                     l4376:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;Parser_thread.c: 197: {
  2546                           ;Parser_thread.c: 198: rollingsum += buffer[i];
  2547  00151A  0100               	movlb	0	; () banked
  2548  00151C  0100               	movlb	0	; () banked
  2549  00151E  51C0               	movf	validateMessage@i& (0+255),w,b
  2550  001520  0100               	movlb	0	; () banked
  2551  001522  0100               	movlb	0	; () banked
  2552  001524  25B3               	addwf	validateMessage@buffer& (0+255),w,b
  2553  001526  6ED9               	movwf	fsr2l,c
  2554  001528  0100               	movlb	0	; () banked
  2555  00152A  0100               	movlb	0	; () banked
  2556  00152C  51C1               	movf	(validateMessage@i+1)& (0+255),w,b
  2557  00152E  0100               	movlb	0	; () banked
  2558  001530  0100               	movlb	0	; () banked
  2559  001532  21B4               	addwfc	(validateMessage@buffer+1)& (0+255),w,b
  2560  001534  6EDA               	movwf	fsr2h,c
  2561  001536  50DF               	movf	indf2,w,c
  2562  001538  0100               	movlb	0	; () banked
  2563  00153A  0100               	movlb	0	; () banked
  2564  00153C  27BF               	addwf	validateMessage@rollingsum& (0+255),f,b
  2565                           
  2566                           ; BSR set to: 0
  2567  00153E  0100               	movlb	0	; () banked
  2568  001540  0100               	movlb	0	; () banked
  2569  001542  4BC0               	infsnz	validateMessage@i& (0+255),f,b
  2570  001544  2BC1               	incf	(validateMessage@i+1)& (0+255),f,b
  2571  001546                     l4380:
  2572                           
  2573                           ; BSR set to: 0
  2574  001546  0EFF               	movlw	255
  2575  001548  0100               	movlb	0	; () banked
  2576  00154A  6FB6               	movwf	??_validateMessage& (0+255),b
  2577  00154C  0EFF               	movlw	255
  2578  00154E  6FB7               	movwf	(??_validateMessage+1)& (0+255),b
  2579  001550  0100               	movlb	0	; () banked
  2580  001552  0100               	movlb	0	; () banked
  2581  001554  51C2               	movf	validateMessage@len& (0+255),w,b
  2582  001556  0100               	movlb	0	; () banked
  2583  001558  6FB8               	movwf	(??_validateMessage+2)& (0+255),b
  2584  00155A  6BB9               	clrf	(??_validateMessage+3)& (0+255),b
  2585  00155C  0100               	movlb	0	; () banked
  2586  00155E  51B6               	movf	??_validateMessage& (0+255),w,b
  2587  001560  0100               	movlb	0	; () banked
  2588  001562  27B8               	addwf	(??_validateMessage+2)& (0+255),f,b
  2589  001564  0100               	movlb	0	; () banked
  2590  001566  51B7               	movf	(??_validateMessage+1)& (0+255),w,b
  2591  001568  0100               	movlb	0	; () banked
  2592  00156A  23B9               	addwfc	(??_validateMessage+3)& (0+255),f,b
  2593  00156C  0100               	movlb	0	; () banked
  2594  00156E  0100               	movlb	0	; () banked
  2595  001570  51C1               	movf	(validateMessage@i+1)& (0+255),w,b
  2596  001572  0A80               	xorlw	128
  2597  001574  0100               	movlb	0	; () banked
  2598  001576  6FBA               	movwf	(??_validateMessage+4)& (0+255),b
  2599  001578  51B8               	movf	(??_validateMessage+2)& (0+255),w,b
  2600  00157A  0100               	movlb	0	; () banked
  2601  00157C  0100               	movlb	0	; () banked
  2602  00157E  5DC0               	subwf	validateMessage@i& (0+255),w,b
  2603  001580  0100               	movlb	0	; () banked
  2604  001582  51B9               	movf	(??_validateMessage+3)& (0+255),w,b
  2605  001584  0A80               	xorlw	128
  2606  001586  0100               	movlb	0	; () banked
  2607  001588  59BA               	subwfb	(??_validateMessage+4)& (0+255),w,b
  2608  00158A  A0D8               	btfss	status,0,c
  2609  00158C  D7C6               	goto	l4376
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;Parser_thread.c: 199: }
  2613                           ;Parser_thread.c: 201: return ( (rollingsum & 0xFF) == checksum ) ? 1 : 0;
  2614                           
  2615                           ; BSR set to: 0
  2616  00158E  0100               	movlb	0	; () banked
  2617  001590  0100               	movlb	0	; () banked
  2618  001592  51BF               	movf	validateMessage@rollingsum& (0+255),w,b
  2619  001594  0100               	movlb	0	; () banked
  2620  001596  0100               	movlb	0	; () banked
  2621  001598  19BE               	xorwf	validateMessage@checksum& (0+255),w,b
  2622  00159A  A4D8               	btfss	status,2,c
  2623  00159C  D002               	goto	u3160
  2624  00159E  0E01               	movlw	1
  2625  0015A0  0012               	return	
  2626  0015A2                     u3160:
  2627  0015A2  0E00               	movlw	0
  2628  0015A4  0012               	return	
  2629  0015A6                     __end_of_validateMessage:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           postdec1	equ	0xFE5
  2638                           fsr1l	equ	0xFE1
  2639                           indf2	equ	0xFDF
  2640                           fsr2h	equ	0xFDA
  2641                           fsr2l	equ	0xFD9
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _uart_write *****************
  2645 ;; Defined at:
  2646 ;;		line 107 in file "source/my_uart.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  length          1    wreg     unsigned char 
  2649 ;;  msg             2   52[BANK0 ] PTR unsigned char 
  2650 ;;		 -> parser_lthread@data_1667(12), parser_lthread@reply_1665(6), parser_lthread@reply_1664(6), parser_lthread@reply(6
      +), 
  2651 ;;		 -> main@msgbuffer(11), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  length          1   55[BANK0 ] unsigned char 
  2654 ;;  i               1   56[BANK0 ] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2664 ;;      Params:         0       2       0       0       0
  2665 ;;      Locals:         0       2       0       0       0
  2666 ;;      Temps:          0       1       0       0       0
  2667 ;;      Totals:         0       5       0       0       0
  2668 ;;Total ram usage:        5 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:   13
  2671 ;; This function calls:
  2672 ;;		_WriteUSART
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;;		_parser_lthread
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text3
  2680  001F40                     __ptext3:
  2681                           	opt stack 0
  2682  001F40                     _uart_write:
  2683                           	opt stack 17
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;incstack = 0
  2687                           ;uart_write@length stored from wreg
  2688  001F40  CFE8 F0B7          	movff	wreg,uart_write@length
  2689                           
  2690                           ;my_uart.c: 109: unsigned char i = 0;
  2691  001F44  0100               	movlb	0	; () banked
  2692  001F46  6FB6               	movwf	??_uart_write& (0+255),b
  2693  001F48  0E00               	movlw	0
  2694  001F4A  0100               	movlb	0	; () banked
  2695  001F4C  0100               	movlb	0	; () banked
  2696  001F4E  6FB8               	movwf	uart_write@i& (0+255),b
  2697  001F50  0100               	movlb	0	; () banked
  2698  001F52  51B6               	movf	??_uart_write& (0+255),w,b
  2699                           
  2700                           ;my_uart.c: 110: for(i = 0; i < length; i++){
  2701  001F54  0100               	movlb	0	; () banked
  2702  001F56  6FB6               	movwf	??_uart_write& (0+255),b
  2703  001F58  0E00               	movlw	0
  2704  001F5A  0100               	movlb	0	; () banked
  2705  001F5C  0100               	movlb	0	; () banked
  2706  001F5E  6FB8               	movwf	uart_write@i& (0+255),b
  2707  001F60  0100               	movlb	0	; () banked
  2708  001F62  51B6               	movf	??_uart_write& (0+255),w,b
  2709  001F64  D016               	goto	l3968
  2710  001F66                     l464:
  2711  001F66  A2AC               	btfss	4012,1,c	;volatile
  2712  001F68  D7FE               	goto	l464
  2713                           
  2714                           ;my_uart.c: 121: WriteUSART(msg[i]);
  2715  001F6A  0100               	movlb	0	; () banked
  2716  001F6C  0100               	movlb	0	; () banked
  2717  001F6E  51B8               	movf	uart_write@i& (0+255),w,b
  2718  001F70  0D01               	mullw	1
  2719  001F72  50F3               	movf	prodl,w,c
  2720  001F74  0100               	movlb	0	; () banked
  2721  001F76  0100               	movlb	0	; () banked
  2722  001F78  25B4               	addwf	uart_write@msg& (0+255),w,b
  2723  001F7A  6ED9               	movwf	fsr2l,c
  2724  001F7C  50F4               	movf	prodh,w,c
  2725  001F7E  0100               	movlb	0	; () banked
  2726  001F80  0100               	movlb	0	; () banked
  2727  001F82  21B5               	addwfc	(uart_write@msg+1)& (0+255),w,b
  2728  001F84  6EDA               	movwf	fsr2h,c
  2729  001F86  50DF               	movf	indf2,w,c
  2730  001F88  ECA8  F012         	call	_WriteUSART
  2731  001F8C  0100               	movlb	0	; () banked
  2732  001F8E  0100               	movlb	0	; () banked
  2733  001F90  2BB8               	incf	uart_write@i& (0+255),f,b
  2734  001F92                     l3968:
  2735                           
  2736                           ; BSR set to: 0
  2737  001F92  0100               	movlb	0	; () banked
  2738  001F94  0100               	movlb	0	; () banked
  2739  001F96  51B7               	movf	uart_write@length& (0+255),w,b
  2740  001F98  0100               	movlb	0	; () banked
  2741  001F9A  0100               	movlb	0	; () banked
  2742  001F9C  5DB8               	subwf	uart_write@i& (0+255),w,b
  2743  001F9E  B0D8               	btfsc	status,0,c
  2744                           
  2745                           ; BSR set to: 0
  2746                           
  2747                           ; BSR set to: 0
  2748  001FA0  0012               	return	
  2749  001FA2  D7E1               	goto	l464
  2750  001FA4                     __end_of_uart_write:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postdec1	equ	0xFE5
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767 ;; *************** function _WriteUSART *****************
  2768 ;; Defined at:
  2769 ;;		line 13 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  data            1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  data            1   51[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;		None               void
  2776 ;; Registers used:
  2777 ;;		wreg
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       1       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         0       1       0       0       0
  2787 ;;Total ram usage:        1 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:   12
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_uart_write
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text4
  2798  002550                     __ptext4:
  2799                           	opt stack 0
  2800  002550                     _WriteUSART:
  2801                           	opt stack 17
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;incstack = 0
  2805                           ;WriteUSART@data stored from wreg
  2806  002550  CFE8 F0B3          	movff	wreg,WriteUSART@data
  2807  002554  ACAC               	btfss	4012,6,c	;volatile
  2808  002556  D003               	goto	l4356
  2809  002558  90AC               	bcf	4012,0,c	;volatile
  2810  00255A  B241               	btfsc	_USART_Status,1,c
  2811  00255C  80AC               	bsf	4012,0,c	;volatile
  2812  00255E                     l4356:
  2813  00255E  C0B3  FFAD         	movff	WriteUSART@data,4013	;volatile
  2814  002562  0012               	return	
  2815  002564                     __end_of_WriteUSART:
  2816                           	opt stack 0
  2817                           tblptru	equ	0xFF8
  2818                           tblptrh	equ	0xFF7
  2819                           tblptrl	equ	0xFF6
  2820                           tablat	equ	0xFF5
  2821                           prodh	equ	0xFF4
  2822                           prodl	equ	0xFF3
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           postdec1	equ	0xFE5
  2826                           fsr1l	equ	0xFE1
  2827                           indf2	equ	0xFDF
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function _i2c_master_send *****************
  2833 ;; Defined at:
  2834 ;;		line 67 in file "source/my_i2c.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  length          1    wreg     unsigned char 
  2837 ;;  msg             2   51[BANK0 ] PTR unsigned char 
  2838 ;;		 -> parser_lthread@data(5), 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  length          1   55[BANK0 ] unsigned char 
  2841 ;;  currentLengt    2   56[BANK0 ] unsigned int 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2851 ;;      Params:         0       2       0       0       0
  2852 ;;      Locals:         0       3       0       0       0
  2853 ;;      Temps:          0       2       0       0       0
  2854 ;;      Totals:         0       7       0       0       0
  2855 ;;Total ram usage:        7 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:   12
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_parser_lthread
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text5
  2866  0018C8                     __ptext5:
  2867                           	opt stack 0
  2868  0018C8                     _i2c_master_send:
  2869                           	opt stack 17
  2870                           
  2871                           ;incstack = 0
  2872                           ;i2c_master_send@length stored from wreg
  2873  0018C8  CFE8 F0B7          	movff	wreg,i2c_master_send@length
  2874                           
  2875                           ;my_i2c.c: 70: if (SSPSTATbits.READ_WRITE == 1){
  2876  0018CC  B4C7               	btfsc	4039,2,c	;volatile
  2877  0018CE  0012               	return	
  2878                           
  2879                           ;my_i2c.c: 72: }
  2880                           ;my_i2c.c: 75: unsigned int currentLength;
  2881                           ;my_i2c.c: 76: for (currentLength = 0; currentLength < length; currentLength++){
  2882                           
  2883                           ;my_i2c.c: 71: return -1;
  2884                           ;	Return value of _i2c_master_send is never used
  2885  0018D0  0E00               	movlw	0
  2886  0018D2  0100               	movlb	0	; () banked
  2887  0018D4  0100               	movlb	0	; () banked
  2888  0018D6  6FB9               	movwf	(i2c_master_send@currentLength+1)& (0+255),b
  2889  0018D8  0E00               	movlw	0
  2890  0018DA  0100               	movlb	0	; () banked
  2891  0018DC  6FB8               	movwf	i2c_master_send@currentLength& (0+255),b
  2892  0018DE  D02C               	goto	l4066
  2893  0018E0                     l4062:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;my_i2c.c: 77: ic_ptr->outbuffer[currentLength] = msg[currentLength];
  2897  0018E0  0100               	movlb	0	; () banked
  2898  0018E2  0100               	movlb	0	; () banked
  2899  0018E4  51B8               	movf	i2c_master_send@currentLength& (0+255),w,b
  2900  0018E6  0100               	movlb	0	; () banked
  2901  0018E8  0100               	movlb	0	; () banked
  2902  0018EA  25B3               	addwf	i2c_master_send@msg& (0+255),w,b
  2903  0018EC  6ED9               	movwf	fsr2l,c
  2904  0018EE  0100               	movlb	0	; () banked
  2905  0018F0  0100               	movlb	0	; () banked
  2906  0018F2  51B9               	movf	(i2c_master_send@currentLength+1)& (0+255),w,b
  2907  0018F4  0100               	movlb	0	; () banked
  2908  0018F6  0100               	movlb	0	; () banked
  2909  0018F8  21B4               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2910  0018FA  6EDA               	movwf	fsr2h,c
  2911  0018FC  0E10               	movlw	16
  2912  0018FE  0100               	movlb	0	; () banked
  2913  001900  0100               	movlb	0	; () banked
  2914  001902  25B8               	addwf	i2c_master_send@currentLength& (0+255),w,b
  2915  001904  0100               	movlb	0	; () banked
  2916  001906  6FB5               	movwf	??_i2c_master_send& (0+255),b
  2917  001908  0E00               	movlw	0
  2918  00190A  0100               	movlb	0	; () banked
  2919  00190C  0100               	movlb	0	; () banked
  2920  00190E  21B9               	addwfc	(i2c_master_send@currentLength+1)& (0+255),w,b
  2921  001910  0100               	movlb	0	; () banked
  2922  001912  6FB6               	movwf	(??_i2c_master_send+1)& (0+255),b
  2923  001914  0100               	movlb	0	; () banked
  2924  001916  51B5               	movf	??_i2c_master_send& (0+255),w,b
  2925  001918  0100               	movlb	0	; () banked
  2926  00191A  0100               	movlb	0	; () banked
  2927  00191C  25C9               	addwf	_ic_ptr& (0+255),w,b
  2928  00191E  6EE1               	movwf	fsr1l,c
  2929  001920  0100               	movlb	0	; () banked
  2930  001922  51B6               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2931  001924  0100               	movlb	0	; () banked
  2932  001926  0100               	movlb	0	; () banked
  2933  001928  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2934  00192A  6EE2               	movwf	fsr1h,c
  2935  00192C  CFDF FFE7          	movff	indf2,indf1
  2936                           
  2937                           ; BSR set to: 0
  2938  001930  0100               	movlb	0	; () banked
  2939  001932  0100               	movlb	0	; () banked
  2940  001934  4BB8               	infsnz	i2c_master_send@currentLength& (0+255),f,b
  2941  001936  2BB9               	incf	(i2c_master_send@currentLength+1)& (0+255),f,b
  2942  001938                     l4066:
  2943                           
  2944                           ; BSR set to: 0
  2945  001938  0100               	movlb	0	; () banked
  2946  00193A  0100               	movlb	0	; () banked
  2947  00193C  51B7               	movf	i2c_master_send@length& (0+255),w,b
  2948  00193E  0100               	movlb	0	; () banked
  2949  001940  6FB5               	movwf	??_i2c_master_send& (0+255),b
  2950  001942  6BB6               	clrf	(??_i2c_master_send+1)& (0+255),b
  2951  001944  0100               	movlb	0	; () banked
  2952  001946  51B5               	movf	??_i2c_master_send& (0+255),w,b
  2953  001948  0100               	movlb	0	; () banked
  2954  00194A  0100               	movlb	0	; () banked
  2955  00194C  5DB8               	subwf	i2c_master_send@currentLength& (0+255),w,b
  2956  00194E  0100               	movlb	0	; () banked
  2957  001950  51B6               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2958  001952  0100               	movlb	0	; () banked
  2959  001954  0100               	movlb	0	; () banked
  2960  001956  59B9               	subwfb	(i2c_master_send@currentLength+1)& (0+255),w,b
  2961  001958  A0D8               	btfss	status,0,c
  2962  00195A  D7C2               	goto	l4062
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;my_i2c.c: 78: }
  2966                           ;my_i2c.c: 80: ic_ptr->outbuflen = length;
  2967                           
  2968                           ; BSR set to: 0
  2969  00195C  0100               	movlb	0	; () banked
  2970  00195E  EE20 F01A          	lfsr	2,26
  2971  001962  0100               	movlb	0	; () banked
  2972  001964  51C9               	movf	_ic_ptr& (0+255),w,b
  2973  001966  26D9               	addwf	fsr2l,f,c
  2974  001968  0100               	movlb	0	; () banked
  2975  00196A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2976  00196C  22DA               	addwfc	fsr2h,f,c
  2977  00196E  0100               	movlb	0	; () banked
  2978  001970  C0B7  FFDF         	movff	i2c_master_send@length,indf2
  2979                           
  2980                           ;my_i2c.c: 81: ic_ptr->outbufind = 0;
  2981  001974  0100               	movlb	0	; () banked
  2982  001976  EE20 F01B          	lfsr	2,27
  2983  00197A  0100               	movlb	0	; () banked
  2984  00197C  51C9               	movf	_ic_ptr& (0+255),w,b
  2985  00197E  26D9               	addwf	fsr2l,f,c
  2986  001980  0100               	movlb	0	; () banked
  2987  001982  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  2988  001984  22DA               	addwfc	fsr2h,f,c
  2989  001986  0E00               	movlw	0
  2990  001988  6EDF               	movwf	indf2,c
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;my_i2c.c: 85: SSPCON2bits.RCEN = 0;
  2994  00198A  96C5               	bcf	4037,3,c	;volatile
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;my_i2c.c: 86: SSPCON2bits.SEN = 1;
  2998  00198C  80C5               	bsf	4037,0,c	;volatile
  2999                           
  3000                           ;my_i2c.c: 88: ic_ptr->status = 0x9;
  3001  00198E  0100               	movlb	0	; () banked
  3002  001990  EE20 F00D          	lfsr	2,13
  3003  001994  0100               	movlb	0	; () banked
  3004  001996  51C9               	movf	_ic_ptr& (0+255),w,b
  3005  001998  26D9               	addwf	fsr2l,f,c
  3006  00199A  0100               	movlb	0	; () banked
  3007  00199C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3008  00199E  22DA               	addwfc	fsr2h,f,c
  3009  0019A0  0E09               	movlw	9
  3010  0019A2  6EDF               	movwf	indf2,c
  3011  0019A4  0012               	return	
  3012  0019A6                     __end_of_i2c_master_send:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           postinc0	equ	0xFEE
  3021                           wreg	equ	0xFE8
  3022                           indf1	equ	0xFE7
  3023                           postdec1	equ	0xFE5
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           indf2	equ	0xFDF
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _i2c_master_recv *****************
  3032 ;; Defined at:
  3033 ;;		line 106 in file "source/my_i2c.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  length          1    wreg     unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  length          1   51[BANK0 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      unsigned char 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       1       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       1       0       0       0
  3051 ;;Total ram usage:        1 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:   12
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;;		_parser_lthread
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text6
  3063  0020B4                     __ptext6:
  3064                           	opt stack 0
  3065  0020B4                     _i2c_master_recv:
  3066                           	opt stack 17
  3067                           
  3068                           ;incstack = 0
  3069                           ;i2c_master_recv@length stored from wreg
  3070  0020B4  CFE8 F0B3          	movff	wreg,i2c_master_recv@length
  3071                           
  3072                           ;my_i2c.c: 108: if (SSPSTATbits.READ_WRITE == 1){
  3073  0020B8  B4C7               	btfsc	4039,2,c	;volatile
  3074  0020BA  0012               	return	
  3075                           
  3076                           ;my_i2c.c: 110: }
  3077                           ;my_i2c.c: 112: ic_ptr->buflen = length;
  3078                           
  3079                           ;my_i2c.c: 109: return -1;
  3080                           ;	Return value of _i2c_master_recv is never used
  3081  0020BC  0100               	movlb	0	; () banked
  3082  0020BE  EE20 F00A          	lfsr	2,10
  3083  0020C2  0100               	movlb	0	; () banked
  3084  0020C4  51C9               	movf	_ic_ptr& (0+255),w,b
  3085  0020C6  26D9               	addwf	fsr2l,f,c
  3086  0020C8  0100               	movlb	0	; () banked
  3087  0020CA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3088  0020CC  22DA               	addwfc	fsr2h,f,c
  3089  0020CE  0100               	movlb	0	; () banked
  3090  0020D0  C0B3  FFDF         	movff	i2c_master_recv@length,indf2
  3091                           
  3092                           ;my_i2c.c: 113: ic_ptr->bufind = 0;
  3093  0020D4  0100               	movlb	0	; () banked
  3094  0020D6  EE20 F00B          	lfsr	2,11
  3095  0020DA  0100               	movlb	0	; () banked
  3096  0020DC  51C9               	movf	_ic_ptr& (0+255),w,b
  3097  0020DE  26D9               	addwf	fsr2l,f,c
  3098  0020E0  0100               	movlb	0	; () banked
  3099  0020E2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3100  0020E4  22DA               	addwfc	fsr2h,f,c
  3101  0020E6  0E00               	movlw	0
  3102  0020E8  6EDF               	movwf	indf2,c
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;my_i2c.c: 116: SSPCON2bits.SEN = 1;
  3106  0020EA  80C5               	bsf	4037,0,c	;volatile
  3107                           
  3108                           ;my_i2c.c: 118: ic_ptr->status = 0x10;
  3109  0020EC  0100               	movlb	0	; () banked
  3110  0020EE  EE20 F00D          	lfsr	2,13
  3111  0020F2  0100               	movlb	0	; () banked
  3112  0020F4  51C9               	movf	_ic_ptr& (0+255),w,b
  3113  0020F6  26D9               	addwf	fsr2l,f,c
  3114  0020F8  0100               	movlb	0	; () banked
  3115  0020FA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3116  0020FC  22DA               	addwfc	fsr2h,f,c
  3117  0020FE  0E10               	movlw	16
  3118  002100  6EDF               	movwf	indf2,c
  3119  002102  0012               	return	
  3120  002104                     __end_of_i2c_master_recv:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           postinc0	equ	0xFEE
  3129                           wreg	equ	0xFE8
  3130                           indf1	equ	0xFE7
  3131                           postdec1	equ	0xFE5
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           
  3139 ;; *************** function _i2c_configure_master *****************
  3140 ;; Defined at:
  3141 ;;		line 24 in file "source/my_i2c.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  slave_addr      1    wreg     unsigned char 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  slave_addr      1   52[BANK0 ] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;		None               void
  3148 ;; Registers used:
  3149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3155 ;;      Params:         0       0       0       0       0
  3156 ;;      Locals:         0       1       0       0       0
  3157 ;;      Temps:          0       1       0       0       0
  3158 ;;      Totals:         0       2       0       0       0
  3159 ;;Total ram usage:        2 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:   12
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;;		_parser_lthread
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text7
  3171  002060                     __ptext7:
  3172                           	opt stack 0
  3173  002060                     _i2c_configure_master:
  3174                           	opt stack 17
  3175                           
  3176                           ;incstack = 0
  3177                           ;i2c_configure_master@slave_addr stored from wreg
  3178  002060  CFE8 F0B4          	movff	wreg,i2c_configure_master@slave_addr
  3179                           
  3180                           ;my_i2c.c: 25: i2c_mode = 1;
  3181  002064  0100               	movlb	0	; () banked
  3182  002066  6FB3               	movwf	??_i2c_configure_master& (0+255),b
  3183  002068  0E01               	movlw	1
  3184  00206A  0100               	movlb	0	; () banked
  3185  00206C  0100               	movlb	0	; () banked
  3186  00206E  6FC8               	movwf	_i2c_mode& (0+255),b
  3187  002070  0100               	movlb	0	; () banked
  3188  002072  51B3               	movf	??_i2c_configure_master& (0+255),w,b
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;my_i2c.c: 27: ic_ptr->slave_addr = slave_addr;
  3192  002074  0100               	movlb	0	; () banked
  3193  002076  EE20 F01C          	lfsr	2,28
  3194  00207A  0100               	movlb	0	; () banked
  3195  00207C  51C9               	movf	_ic_ptr& (0+255),w,b
  3196  00207E  26D9               	addwf	fsr2l,f,c
  3197  002080  0100               	movlb	0	; () banked
  3198  002082  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3199  002084  22DA               	addwfc	fsr2h,f,c
  3200  002086  0100               	movlb	0	; () banked
  3201  002088  C0B4  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;my_i2c.c: 30: SSPCON1 = 0x0;
  3205  00208C  0E00               	movlw	0
  3206  00208E  6EC6               	movwf	4038,c	;volatile
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;my_i2c.c: 31: SSPCON2 = 0x0;
  3210  002090  0E00               	movlw	0
  3211  002092  6EC5               	movwf	4037,c	;volatile
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;my_i2c.c: 32: SSPSTAT = 0x0;
  3215  002094  0E00               	movlw	0
  3216  002096  6EC7               	movwf	4039,c	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;my_i2c.c: 35: SSPADD = 0x63;
  3220  002098  0E63               	movlw	99
  3221  00209A  6EC8               	movwf	4040,c	;volatile
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;my_i2c.c: 38: SSPCON1bits.SSPM = 0x08;
  3225  00209C  50C6               	movf	4038,w,c	;volatile
  3226  00209E  0BF0               	andlw	-16
  3227  0020A0  0908               	iorlw	8
  3228  0020A2  6EC6               	movwf	4038,c	;volatile
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;my_i2c.c: 39: SSPCON1bits.SSPEN = 1;
  3232  0020A4  8AC6               	bsf	4038,5,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;my_i2c.c: 42: SSPSTAT = 0b10000000;
  3236  0020A6  0E80               	movlw	128
  3237  0020A8  6EC7               	movwf	4039,c	;volatile
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;my_i2c.c: 45: LATCbits.LATC3 = 1;
  3241  0020AA  868B               	bsf	3979,3,c	;volatile
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;my_i2c.c: 46: LATCbits.LATC4 = 1;
  3245  0020AC  888B               	bsf	3979,4,c	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;my_i2c.c: 47: TRISCbits.TRISC3 = 1;
  3249  0020AE  8694               	bsf	3988,3,c	;volatile
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;my_i2c.c: 48: TRISCbits.TRISC4 = 1;
  3253  0020B0  8894               	bsf	3988,4,c	;volatile
  3254                           
  3255                           ; BSR set to: 0
  3256  0020B2  0012               	return	
  3257  0020B4                     __end_of_i2c_configure_master:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           indf1	equ	0xFE7
  3268                           postdec1	equ	0xFE5
  3269                           fsr1h	equ	0xFE2
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _getMessageId *****************
  3277 ;; Defined at:
  3278 ;;		line 215 in file "source/Parser_thread.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  buffer          2   51[BANK0 ] PTR unsigned char 
  3281 ;;		 -> main@msgbuffer(11), 
  3282 ;;  length          1   53[BANK0 ] unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3294 ;;      Params:         0       3       0       0       0
  3295 ;;      Locals:         0       0       0       0       0
  3296 ;;      Temps:          0       1       0       0       0
  3297 ;;      Totals:         0       4       0       0       0
  3298 ;;Total ram usage:        4 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:   12
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_parser_lthread
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text8
  3309  00246E                     __ptext8:
  3310                           	opt stack 0
  3311  00246E                     _getMessageId:
  3312                           	opt stack 17
  3313                           
  3314                           ;Parser_thread.c: 217: if (length > 0) {
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;incstack = 0
  3318  00246E  0100               	movlb	0	; () banked
  3319  002470  0100               	movlb	0	; () banked
  3320  002472  51B5               	movf	getMessageId@length& (0+255),w,b
  3321  002474  B4D8               	btfsc	status,2,c
  3322  002476  D00C               	goto	l4394
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;Parser_thread.c: 218: return (buffer[0] & 0xF0) >> 4;
  3326  002478  C0B3  FFD9         	movff	getMessageId@buffer,fsr2l
  3327  00247C  C0B4  FFDA         	movff	getMessageId@buffer+1,fsr2h
  3328  002480  50DF               	movf	indf2,w,c
  3329  002482  0100               	movlb	0	; () banked
  3330  002484  6FB6               	movwf	??_getMessageId& (0+255),b
  3331  002486  0100               	movlb	0	; () banked
  3332  002488  39B6               	swapf	??_getMessageId& (0+255),w,b
  3333  00248A  0B0F               	andlw	15
  3334  00248C  0B0F               	andlw	15
  3335  00248E  0012               	return	
  3336  002490                     l4394:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;Parser_thread.c: 221: else return 0xFF;
  3340  002490  0EFF               	movlw	255
  3341  002492  0012               	return	
  3342  002494                     __end_of_getMessageId:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           postinc0	equ	0xFEE
  3351                           wreg	equ	0xFE8
  3352                           indf1	equ	0xFE7
  3353                           postdec1	equ	0xFE5
  3354                           fsr1h	equ	0xFE2
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _init_uart_recv *****************
  3362 ;; Defined at:
  3363 ;;		line 52 in file "source/my_uart.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  uc              2   51[BANK0 ] PTR struct __uart_comm
  3366 ;;		 -> main@uc(5), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;		None               void
  3371 ;; Registers used:
  3372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3378 ;;      Params:         0       2       0       0       0
  3379 ;;      Locals:         0       0       0       0       0
  3380 ;;      Temps:          0       1       0       0       0
  3381 ;;      Totals:         0       3       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   12
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text9
  3393  002104                     __ptext9:
  3394                           	opt stack 0
  3395  002104                     _init_uart_recv:
  3396                           	opt stack 18
  3397                           
  3398                           ;my_uart.c: 53: uc_ptr = uc;
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;incstack = 0
  3402  002104  0100               	movlb	0	; () banked
  3403  002106  C0B4  F052         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3404  00210A  0100               	movlb	0	; () banked
  3405  00210C  C0B3  F051         	movff	init_uart_recv@uc,_uc_ptr
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;my_uart.c: 54: uc_ptr->buflen = 0;
  3409  002110  EE20 F004          	lfsr	2,4
  3410  002114  5051               	movf	_uc_ptr,w,c
  3411  002116  26D9               	addwf	fsr2l,f,c
  3412  002118  5052               	movf	_uc_ptr+1,w,c
  3413  00211A  22DA               	addwfc	fsr2h,f,c
  3414  00211C  0E00               	movlw	0
  3415  00211E  6EDF               	movwf	indf2,c
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;my_uart.c: 55: buf_len = 0;
  3419  002120  0100               	movlb	0	; () banked
  3420  002122  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3421  002124  0E00               	movlw	0
  3422  002126  6E42               	movwf	_buf_len,c
  3423  002128  0100               	movlb	0	; () banked
  3424  00212A  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;my_uart.c: 56: command_length = 0;
  3428  00212C  0100               	movlb	0	; () banked
  3429  00212E  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3430  002130  0E00               	movlw	0
  3431  002132  6E44               	movwf	_command_length,c
  3432  002134  0100               	movlb	0	; () banked
  3433  002136  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;my_uart.c: 57: command_count = 0;
  3437  002138  0100               	movlb	0	; () banked
  3438  00213A  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3439  00213C  0E00               	movlw	0
  3440  00213E  6E43               	movwf	_command_count,c
  3441  002140  0100               	movlb	0	; () banked
  3442  002142  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;my_uart.c: 58: State = GET_MSGID;
  3446  002144  0100               	movlb	0	; () banked
  3447  002146  6FB5               	movwf	??_init_uart_recv& (0+255),b
  3448  002148  0E00               	movlw	0
  3449  00214A  6E40               	movwf	_State,c
  3450  00214C  0100               	movlb	0	; () banked
  3451  00214E  51B5               	movf	??_init_uart_recv& (0+255),w,b
  3452                           
  3453                           ; BSR set to: 0
  3454  002150  0012               	return	
  3455  002152                     __end_of_init_uart_recv:
  3456                           	opt stack 0
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           prodh	equ	0xFF4
  3462                           prodl	equ	0xFF3
  3463                           postinc0	equ	0xFEE
  3464                           wreg	equ	0xFE8
  3465                           indf1	equ	0xFE7
  3466                           postdec1	equ	0xFE5
  3467                           fsr1h	equ	0xFE2
  3468                           fsr1l	equ	0xFE1
  3469                           indf2	equ	0xFDF
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _init_timer1_lthread *****************
  3475 ;; Defined at:
  3476 ;;		line 6 in file "source/timer1_thread.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  tptr            2   51[BANK0 ] PTR struct __timer1_thre
  3479 ;;		 -> main@t1thread_data(2), 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, fsr2l, fsr2h
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3491 ;;      Params:         0       2       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         0       2       0       0       0
  3495 ;;Total ram usage:        2 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:   12
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text10
  3506  002578                     __ptext10:
  3507                           	opt stack 0
  3508  002578                     _init_timer1_lthread:
  3509                           	opt stack 18
  3510                           
  3511                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;incstack = 0
  3515  002578  C0B3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3516  00257C  C0B4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3517  002580  0E00               	movlw	0
  3518  002582  6EDE               	movwf	postinc2,c
  3519  002584  0E00               	movlw	0
  3520  002586  6EDD               	movwf	postdec2,c
  3521  002588  0012               	return	
  3522  00258A                     __end_of_init_timer1_lthread:
  3523                           	opt stack 0
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           prodh	equ	0xFF4
  3529                           prodl	equ	0xFF3
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           indf1	equ	0xFE7
  3533                           postdec1	equ	0xFE5
  3534                           fsr1h	equ	0xFE2
  3535                           fsr1l	equ	0xFE1
  3536                           indf2	equ	0xFDF
  3537                           postinc2	equ	0xFDE
  3538                           postdec2	equ	0xFDD
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _init_queues *****************
  3544 ;; Defined at:
  3545 ;;		line 194 in file "source/messages.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;		None               void
  3552 ;; Registers used:
  3553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0
  3561 ;;      Temps:          0       1       0       0       0
  3562 ;;      Totals:         0       1       0       0       0
  3563 ;;Total ram usage:        1 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:   13
  3566 ;; This function calls:
  3567 ;;		_init_queue
  3568 ;; This function is called by:
  3569 ;;		_main
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text11
  3574  001E68                     __ptext11:
  3575                           	opt stack 0
  3576  001E68                     _init_queues:
  3577                           	opt stack 17
  3578                           
  3579                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3580                           
  3581                           ;incstack = 0
  3582  001E68  0100               	movlb	0	; () banked
  3583  001E6A  6FB7               	movwf	??_init_queues& (0+255),b
  3584  001E6C  0E00               	movlw	0
  3585  001E6E  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  3586  001E70  0100               	movlb	0	; () banked
  3587  001E72  51B7               	movf	??_init_queues& (0+255),w,b
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3591  001E74  0101               	movlb	1	; () banked
  3592  001E76  0E01               	movlw	high _ToMainLow_MQ
  3593  001E78  0100               	movlb	0	; () banked
  3594  001E7A  0100               	movlb	0	; () banked
  3595  001E7C  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3596  001E7E  0101               	movlb	1	; () banked
  3597  001E80  0E6C               	movlw	low _ToMainLow_MQ
  3598  001E82  0100               	movlb	0	; () banked
  3599  001E84  0100               	movlb	0	; () banked
  3600  001E86  6FB3               	movwf	init_queue@qptr& (0+255),b
  3601  001E88  ECBE  F00E         	call	_init_queue	;wreg free
  3602                           
  3603                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3604  001E8C  0101               	movlb	1	; () banked
  3605  001E8E  0E01               	movlw	high _ToMainHigh_MQ
  3606  001E90  0100               	movlb	0	; () banked
  3607  001E92  0100               	movlb	0	; () banked
  3608  001E94  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3609  001E96  0101               	movlb	1	; () banked
  3610  001E98  0E36               	movlw	low _ToMainHigh_MQ
  3611  001E9A  0100               	movlb	0	; () banked
  3612  001E9C  0100               	movlb	0	; () banked
  3613  001E9E  6FB3               	movwf	init_queue@qptr& (0+255),b
  3614  001EA0  ECBE  F00E         	call	_init_queue	;wreg free
  3615                           
  3616                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3617  001EA4  0101               	movlb	1	; () banked
  3618  001EA6  0E01               	movlw	high _FromMainLow_MQ
  3619  001EA8  0100               	movlb	0	; () banked
  3620  001EAA  0100               	movlb	0	; () banked
  3621  001EAC  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3622  001EAE  0101               	movlb	1	; () banked
  3623  001EB0  0E00               	movlw	low _FromMainLow_MQ
  3624  001EB2  0100               	movlb	0	; () banked
  3625  001EB4  0100               	movlb	0	; () banked
  3626  001EB6  6FB3               	movwf	init_queue@qptr& (0+255),b
  3627  001EB8  ECBE  F00E         	call	_init_queue	;wreg free
  3628                           
  3629                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3630  001EBC  0102               	movlb	2	; () banked
  3631  001EBE  0E02               	movlw	high _FromMainHigh_MQ
  3632  001EC0  0100               	movlb	0	; () banked
  3633  001EC2  0100               	movlb	0	; () banked
  3634  001EC4  6FB4               	movwf	(init_queue@qptr+1)& (0+255),b
  3635  001EC6  0102               	movlb	2	; () banked
  3636  001EC8  0E49               	movlw	low _FromMainHigh_MQ
  3637  001ECA  0100               	movlb	0	; () banked
  3638  001ECC  0100               	movlb	0	; () banked
  3639  001ECE  6FB3               	movwf	init_queue@qptr& (0+255),b
  3640  001ED0  ECBE  F00E         	call	_init_queue	;wreg free
  3641  001ED4  0012               	return	
  3642  001ED6                     __end_of_init_queues:
  3643                           	opt stack 0
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           postinc0	equ	0xFEE
  3651                           wreg	equ	0xFE8
  3652                           indf1	equ	0xFE7
  3653                           postdec1	equ	0xFE5
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           indf2	equ	0xFDF
  3657                           postinc2	equ	0xFDE
  3658                           postdec2	equ	0xFDD
  3659                           fsr2h	equ	0xFDA
  3660                           fsr2l	equ	0xFD9
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function _init_queue *****************
  3664 ;; Defined at:
  3665 ;;		line 14 in file "source/messages.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  qptr            2   51[BANK0 ] PTR struct __msg_queue
  3668 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  i               1   54[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;		None               void
  3673 ;; Registers used:
  3674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3680 ;;      Params:         0       2       0       0       0
  3681 ;;      Locals:         0       1       0       0       0
  3682 ;;      Temps:          0       1       0       0       0
  3683 ;;      Totals:         0       4       0       0       0
  3684 ;;Total ram usage:        4 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:   12
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_init_queues
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text12
  3695  001D7C                     __ptext12:
  3696                           	opt stack 0
  3697  001D7C                     _init_queue:
  3698                           	opt stack 17
  3699                           
  3700                           ;messages.c: 15: unsigned char i;
  3701                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3702                           
  3703                           ;incstack = 0
  3704  001D7C  0100               	movlb	0	; () banked
  3705  001D7E  EE20 F034          	lfsr	2,52
  3706  001D82  0100               	movlb	0	; () banked
  3707  001D84  51B3               	movf	init_queue@qptr& (0+255),w,b
  3708  001D86  26D9               	addwf	fsr2l,f,c
  3709  001D88  0100               	movlb	0	; () banked
  3710  001D8A  51B4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3711  001D8C  22DA               	addwfc	fsr2h,f,c
  3712  001D8E  0E00               	movlw	0
  3713  001D90  6EDF               	movwf	indf2,c
  3714                           
  3715                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3716  001D92  0100               	movlb	0	; () banked
  3717  001D94  EE20 F035          	lfsr	2,53
  3718  001D98  0100               	movlb	0	; () banked
  3719  001D9A  51B3               	movf	init_queue@qptr& (0+255),w,b
  3720  001D9C  26D9               	addwf	fsr2l,f,c
  3721  001D9E  0100               	movlb	0	; () banked
  3722  001DA0  51B4               	movf	(init_queue@qptr+1)& (0+255),w,b
  3723  001DA2  22DA               	addwfc	fsr2h,f,c
  3724  001DA4  0E00               	movlw	0
  3725  001DA6  6EDF               	movwf	indf2,c
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3729  001DA8  0100               	movlb	0	; () banked
  3730  001DAA  6FB5               	movwf	??_init_queue& (0+255),b
  3731  001DAC  0E00               	movlw	0
  3732  001DAE  0100               	movlb	0	; () banked
  3733  001DB0  0100               	movlb	0	; () banked
  3734  001DB2  6FB6               	movwf	init_queue@i& (0+255),b
  3735  001DB4  0100               	movlb	0	; () banked
  3736  001DB6  51B5               	movf	??_init_queue& (0+255),w,b
  3737                           
  3738                           ; BSR set to: 0
  3739  001DB8  0E03               	movlw	3
  3740  001DBA  0100               	movlb	0	; () banked
  3741  001DBC  0100               	movlb	0	; () banked
  3742  001DBE  65B6               	cpfsgt	init_queue@i& (0+255),b
  3743  001DC0  D001               	goto	l3982
  3744  001DC2  0012               	return	
  3745  001DC4                     l3982:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;messages.c: 20: qptr->queue[i].full = 0;
  3749  001DC4  0100               	movlb	0	; () banked
  3750  001DC6  0100               	movlb	0	; () banked
  3751  001DC8  51B6               	movf	init_queue@i& (0+255),w,b
  3752  001DCA  0D0D               	mullw	13
  3753  001DCC  50F3               	movf	prodl,w,c
  3754  001DCE  0100               	movlb	0	; () banked
  3755  001DD0  0100               	movlb	0	; () banked
  3756  001DD2  25B3               	addwf	init_queue@qptr& (0+255),w,b
  3757  001DD4  6ED9               	movwf	fsr2l,c
  3758  001DD6  50F4               	movf	prodh,w,c
  3759  001DD8  0100               	movlb	0	; () banked
  3760  001DDA  0100               	movlb	0	; () banked
  3761  001DDC  21B4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3762  001DDE  6EDA               	movwf	fsr2h,c
  3763  001DE0  0E00               	movlw	0
  3764  001DE2  6EDF               	movwf	indf2,c
  3765                           
  3766                           ; BSR set to: 0
  3767  001DE4  0100               	movlb	0	; () banked
  3768  001DE6  0100               	movlb	0	; () banked
  3769  001DE8  2BB6               	incf	init_queue@i& (0+255),f,b
  3770                           
  3771                           ; BSR set to: 0
  3772  001DEA  0E03               	movlw	3
  3773  001DEC  0100               	movlb	0	; () banked
  3774  001DEE  0100               	movlb	0	; () banked
  3775  001DF0  65B6               	cpfsgt	init_queue@i& (0+255),b
  3776  001DF2  D7E8               	goto	l3982
  3777  001DF4  0012               	return	
  3778  001DF6                     __end_of_init_queue:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           indf1	equ	0xFE7
  3789                           postdec1	equ	0xFE5
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           indf2	equ	0xFDF
  3793                           postinc2	equ	0xFDE
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function _init_i2c *****************
  3800 ;; Defined at:
  3801 ;;		line 382 in file "source/my_i2c.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  ic              2   51[BANK0 ] PTR struct __i2c_comm
  3804 ;;		 -> main@ic(53), 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;		None               void
  3809 ;; Registers used:
  3810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3816 ;;      Params:         0       2       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       2       0       0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:   12
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text13
  3831  0019A6                     __ptext13:
  3832                           	opt stack 0
  3833  0019A6                     _init_i2c:
  3834                           	opt stack 18
  3835                           
  3836                           ;my_i2c.c: 383: ic_ptr = ic;
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;incstack = 0
  3840  0019A6  0100               	movlb	0	; () banked
  3841  0019A8  0100               	movlb	0	; () banked
  3842  0019AA  C0B4  F0CA         	movff	init_i2c@ic+1,_ic_ptr+1
  3843  0019AE  0100               	movlb	0	; () banked
  3844  0019B0  0100               	movlb	0	; () banked
  3845  0019B2  C0B3  F0C9         	movff	init_i2c@ic,_ic_ptr
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;my_i2c.c: 384: ic_ptr->buffer[0] = 0;
  3849  0019B6  C0C9  FFD9         	movff	_ic_ptr,fsr2l
  3850  0019BA  C0CA  FFDA         	movff	_ic_ptr+1,fsr2h
  3851  0019BE  0E00               	movlw	0
  3852  0019C0  6EDF               	movwf	indf2,c
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;my_i2c.c: 385: ic_ptr->buffer[1] = 0;
  3856  0019C2  0100               	movlb	0	; () banked
  3857  0019C4  EE20 F001          	lfsr	2,1
  3858  0019C8  0100               	movlb	0	; () banked
  3859  0019CA  51C9               	movf	_ic_ptr& (0+255),w,b
  3860  0019CC  26D9               	addwf	fsr2l,f,c
  3861  0019CE  0100               	movlb	0	; () banked
  3862  0019D0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3863  0019D2  22DA               	addwfc	fsr2h,f,c
  3864  0019D4  0E00               	movlw	0
  3865  0019D6  6EDF               	movwf	indf2,c
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;my_i2c.c: 386: ic_ptr->buffer[2] = 0;
  3869  0019D8  0100               	movlb	0	; () banked
  3870  0019DA  EE20 F002          	lfsr	2,2
  3871  0019DE  0100               	movlb	0	; () banked
  3872  0019E0  51C9               	movf	_ic_ptr& (0+255),w,b
  3873  0019E2  26D9               	addwf	fsr2l,f,c
  3874  0019E4  0100               	movlb	0	; () banked
  3875  0019E6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3876  0019E8  22DA               	addwfc	fsr2h,f,c
  3877  0019EA  0E00               	movlw	0
  3878  0019EC  6EDF               	movwf	indf2,c
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;my_i2c.c: 387: ic_ptr->buflen = 0;
  3882  0019EE  0100               	movlb	0	; () banked
  3883  0019F0  EE20 F00A          	lfsr	2,10
  3884  0019F4  0100               	movlb	0	; () banked
  3885  0019F6  51C9               	movf	_ic_ptr& (0+255),w,b
  3886  0019F8  26D9               	addwf	fsr2l,f,c
  3887  0019FA  0100               	movlb	0	; () banked
  3888  0019FC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3889  0019FE  22DA               	addwfc	fsr2h,f,c
  3890  001A00  0E00               	movlw	0
  3891  001A02  6EDF               	movwf	indf2,c
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;my_i2c.c: 388: ic_ptr->event_count = 0;
  3895  001A04  0100               	movlb	0	; () banked
  3896  001A06  EE20 F00C          	lfsr	2,12
  3897  001A0A  0100               	movlb	0	; () banked
  3898  001A0C  51C9               	movf	_ic_ptr& (0+255),w,b
  3899  001A0E  26D9               	addwf	fsr2l,f,c
  3900  001A10  0100               	movlb	0	; () banked
  3901  001A12  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3902  001A14  22DA               	addwfc	fsr2h,f,c
  3903  001A16  0E00               	movlw	0
  3904  001A18  6EDF               	movwf	indf2,c
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;my_i2c.c: 389: ic_ptr->status = 0x5;
  3908  001A1A  0100               	movlb	0	; () banked
  3909  001A1C  EE20 F00D          	lfsr	2,13
  3910  001A20  0100               	movlb	0	; () banked
  3911  001A22  51C9               	movf	_ic_ptr& (0+255),w,b
  3912  001A24  26D9               	addwf	fsr2l,f,c
  3913  001A26  0100               	movlb	0	; () banked
  3914  001A28  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3915  001A2A  22DA               	addwfc	fsr2h,f,c
  3916  001A2C  0E05               	movlw	5
  3917  001A2E  6EDF               	movwf	indf2,c
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;my_i2c.c: 390: ic_ptr->error_count = 0;
  3921  001A30  0100               	movlb	0	; () banked
  3922  001A32  EE20 F00F          	lfsr	2,15
  3923  001A36  0100               	movlb	0	; () banked
  3924  001A38  51C9               	movf	_ic_ptr& (0+255),w,b
  3925  001A3A  26D9               	addwf	fsr2l,f,c
  3926  001A3C  0100               	movlb	0	; () banked
  3927  001A3E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3928  001A40  22DA               	addwfc	fsr2h,f,c
  3929  001A42  0E00               	movlw	0
  3930  001A44  6EDF               	movwf	indf2,c
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;my_i2c.c: 391: ic_ptr->sendBufInd = 0;
  3934  001A46  0100               	movlb	0	; () banked
  3935  001A48  EE20 F028          	lfsr	2,40
  3936  001A4C  0100               	movlb	0	; () banked
  3937  001A4E  51C9               	movf	_ic_ptr& (0+255),w,b
  3938  001A50  26D9               	addwf	fsr2l,f,c
  3939  001A52  0100               	movlb	0	; () banked
  3940  001A54  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3941  001A56  22DA               	addwfc	fsr2h,f,c
  3942  001A58  0E00               	movlw	0
  3943  001A5A  6EDF               	movwf	indf2,c
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;my_i2c.c: 392: ic_ptr->sendBufLen = 0;
  3947  001A5C  0100               	movlb	0	; () banked
  3948  001A5E  EE20 F027          	lfsr	2,39
  3949  001A62  0100               	movlb	0	; () banked
  3950  001A64  51C9               	movf	_ic_ptr& (0+255),w,b
  3951  001A66  26D9               	addwf	fsr2l,f,c
  3952  001A68  0100               	movlb	0	; () banked
  3953  001A6A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  3954  001A6C  22DA               	addwfc	fsr2h,f,c
  3955  001A6E  0E00               	movlw	0
  3956  001A70  6EDF               	movwf	indf2,c
  3957                           
  3958                           ; BSR set to: 0
  3959  001A72  0012               	return	
  3960  001A74                     __end_of_init_i2c:
  3961                           	opt stack 0
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           postinc0	equ	0xFEE
  3969                           wreg	equ	0xFE8
  3970                           indf1	equ	0xFE7
  3971                           postdec1	equ	0xFE5
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           postinc2	equ	0xFDE
  3976                           postdec2	equ	0xFDD
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _i2c_configure_slave *****************
  3982 ;; Defined at:
  3983 ;;		line 398 in file "source/my_i2c.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  addr            1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  addr            1   52[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;		None               void
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3997 ;;      Params:         0       0       0       0       0
  3998 ;;      Locals:         0       1       0       0       0
  3999 ;;      Temps:          0       1       0       0       0
  4000 ;;      Totals:         0       2       0       0       0
  4001 ;;Total ram usage:        2 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:   12
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text14
  4012  002334                     __ptext14:
  4013                           	opt stack 0
  4014  002334                     _i2c_configure_slave:
  4015                           	opt stack 18
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;incstack = 0
  4019                           ;i2c_configure_slave@addr stored from wreg
  4020  002334  CFE8 F0B4          	movff	wreg,i2c_configure_slave@addr
  4021                           
  4022                           ;my_i2c.c: 410: TRISCbits.TRISC3 = 1;
  4023  002338  8694               	bsf	3988,3,c	;volatile
  4024                           
  4025                           ;my_i2c.c: 411: TRISCbits.TRISC4 = 1;
  4026  00233A  8894               	bsf	3988,4,c	;volatile
  4027                           
  4028                           ;my_i2c.c: 416: SSPADD = addr;
  4029  00233C  C0B4  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4030                           
  4031                           ;my_i2c.c: 418: SSPSTAT = 0x0;
  4032  002340  0E00               	movlw	0
  4033  002342  6EC7               	movwf	4039,c	;volatile
  4034                           
  4035                           ;my_i2c.c: 419: SSPCON1 = 0x0;
  4036  002344  0E00               	movlw	0
  4037  002346  6EC6               	movwf	4038,c	;volatile
  4038                           
  4039                           ;my_i2c.c: 420: SSPCON2 = 0x0;
  4040  002348  0E00               	movlw	0
  4041  00234A  6EC5               	movwf	4037,c	;volatile
  4042                           
  4043                           ;my_i2c.c: 421: SSPCON1 |= 0x0E;
  4044  00234C  0E0E               	movlw	14
  4045  00234E  12C6               	iorwf	4038,f,c	;volatile
  4046                           
  4047                           ;my_i2c.c: 422: SSPSTAT |= 0b10000000;
  4048  002350  8EC7               	bsf	4039,7,c	;volatile
  4049                           
  4050                           ;my_i2c.c: 425: TRISCbits.TRISC3 = 1;
  4051  002352  8694               	bsf	3988,3,c	;volatile
  4052                           
  4053                           ;my_i2c.c: 426: TRISCbits.TRISC4 = 1;
  4054  002354  8894               	bsf	3988,4,c	;volatile
  4055                           
  4056                           ;my_i2c.c: 445: i2c_mode = 2;
  4057  002356  0100               	movlb	0	; () banked
  4058  002358  6FB3               	movwf	??_i2c_configure_slave& (0+255),b
  4059  00235A  0E02               	movlw	2
  4060  00235C  0100               	movlb	0	; () banked
  4061  00235E  0100               	movlb	0	; () banked
  4062  002360  6FC8               	movwf	_i2c_mode& (0+255),b
  4063  002362  0100               	movlb	0	; () banked
  4064  002364  51B3               	movf	??_i2c_configure_slave& (0+255),w,b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;my_i2c.c: 447: SSPCON2bits.SEN = 1;
  4068  002366  80C5               	bsf	4037,0,c	;volatile
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;my_i2c.c: 448: SSPCON1 |= 0b00100000;
  4072  002368  8AC6               	bsf	4038,5,c	;volatile
  4073                           
  4074                           ; BSR set to: 0
  4075  00236A  0012               	return	
  4076  00236C                     __end_of_i2c_configure_slave:
  4077                           	opt stack 0
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           indf1	equ	0xFE7
  4087                           postdec1	equ	0xFE5
  4088                           fsr1h	equ	0xFE2
  4089                           fsr1l	equ	0xFE1
  4090                           indf2	equ	0xFDF
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _enable_interrupts *****************
  4098 ;; Defined at:
  4099 ;;		line 14 in file "source/interrupts.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		None
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4113 ;;      Params:         0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0
  4116 ;;      Totals:         0       0       0       0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   12
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text15
  4128  0025EC                     __ptext15:
  4129                           	opt stack 0
  4130  0025EC                     _enable_interrupts:
  4131                           	opt stack 18
  4132                           
  4133                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;incstack = 0
  4137  0025EC  8ED0               	bsf	4048,7,c	;volatile
  4138                           
  4139                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  4140  0025EE  8EF2               	bsf	intcon,7,c	;volatile
  4141                           
  4142                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  4143  0025F0  8CF2               	bsf	intcon,6,c	;volatile
  4144  0025F2  0012               	return	
  4145  0025F4                     __end_of_enable_interrupts:
  4146                           	opt stack 0
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           indf1	equ	0xFE7
  4157                           postdec1	equ	0xFE5
  4158                           fsr1h	equ	0xFE2
  4159                           fsr1l	equ	0xFE1
  4160                           indf2	equ	0xFDF
  4161                           postinc2	equ	0xFDE
  4162                           postdec2	equ	0xFDD
  4163                           fsr2h	equ	0xFDA
  4164                           fsr2l	equ	0xFD9
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _block_on_To_msgqueues *****************
  4168 ;; Defined at:
  4169 ;;		line 258 in file "source/messages.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;		None               void
  4176 ;; Registers used:
  4177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4183 ;;      Params:         0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0
  4185 ;;      Temps:          0       1       0       0       0
  4186 ;;      Totals:         0       1       0       0       0
  4187 ;;Total ram usage:        1 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:   15
  4190 ;; This function calls:
  4191 ;;		_Delay1KTCYx
  4192 ;;		_check_msg
  4193 ;;		_in_main
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text16
  4200  001CFE                     __ptext16:
  4201                           	opt stack 0
  4202  001CFE                     _block_on_To_msgqueues:
  4203                           	opt stack 15
  4204                           
  4205                           ;messages.c: 259: if (!in_main()) {
  4206                           
  4207                           ;incstack = 0
  4208  001CFE  EC16  F011         	call	_in_main	;wreg free
  4209  001D02  0100               	movlb	0	; () banked
  4210  001D04  0100               	movlb	0	; () banked
  4211  001D06  51B8               	movf	(?_in_main+1)& (0+255),w,b
  4212  001D08  0100               	movlb	0	; () banked
  4213  001D0A  11B7               	iorwf	?_in_main& (0+255),w,b
  4214  001D0C  B4D8               	btfsc	status,2,c
  4215  001D0E  0012               	return	
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;messages.c: 261: }
  4219                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4220                           
  4221                           ; BSR set to: 0
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;messages.c: 260: return;
  4225  001D10  0100               	movlb	0	; () banked
  4226  001D12  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  4227  001D14  0E01               	movlw	1
  4228  001D16  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  4229  001D18  0100               	movlb	0	; () banked
  4230  001D1A  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4231  001D1C                     l3804:
  4232                           
  4233                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4234  001D1C  0101               	movlb	1	; () banked
  4235  001D1E  0E01               	movlw	high _ToMainHigh_MQ
  4236  001D20  0100               	movlb	0	; () banked
  4237  001D22  0100               	movlb	0	; () banked
  4238  001D24  6FB4               	movwf	(check_msg@qptr+1)& (0+255),b
  4239  001D26  0101               	movlb	1	; () banked
  4240  001D28  0E36               	movlw	low _ToMainHigh_MQ
  4241  001D2A  0100               	movlb	0	; () banked
  4242  001D2C  0100               	movlb	0	; () banked
  4243  001D2E  6FB3               	movwf	check_msg@qptr& (0+255),b
  4244  001D30  ECB6  F011         	call	_check_msg	;wreg free
  4245  001D34  0900               	iorlw	0
  4246  001D36  B4D8               	btfsc	status,2,c
  4247  001D38  D007               	goto	l3810
  4248                           
  4249                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4250  001D3A  0100               	movlb	0	; () banked
  4251  001D3C  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  4252  001D3E  0E00               	movlw	0
  4253  001D40  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  4254  001D42  0100               	movlb	0	; () banked
  4255  001D44  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4256  001D46  0012               	return	
  4257  001D48                     l3810:
  4258                           
  4259                           ;messages.c: 271: }
  4260                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4261  001D48  0101               	movlb	1	; () banked
  4262  001D4A  0E01               	movlw	high _ToMainLow_MQ
  4263  001D4C  0100               	movlb	0	; () banked
  4264  001D4E  0100               	movlb	0	; () banked
  4265  001D50  6FB4               	movwf	(check_msg@qptr+1)& (0+255),b
  4266  001D52  0101               	movlb	1	; () banked
  4267  001D54  0E6C               	movlw	low _ToMainLow_MQ
  4268  001D56  0100               	movlb	0	; () banked
  4269  001D58  0100               	movlb	0	; () banked
  4270  001D5A  6FB3               	movwf	check_msg@qptr& (0+255),b
  4271  001D5C  ECB6  F011         	call	_check_msg	;wreg free
  4272  001D60  0900               	iorlw	0
  4273  001D62  B4D8               	btfsc	status,2,c
  4274  001D64  D007               	goto	l3816
  4275                           
  4276                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4277  001D66  0100               	movlb	0	; () banked
  4278  001D68  6FB9               	movwf	??_block_on_To_msgqueues& (0+255),b
  4279  001D6A  0E00               	movlw	0
  4280  001D6C  6E3F               	movwf	_MQ_Main_Willing_to_block,c
  4281  001D6E  0100               	movlb	0	; () banked
  4282  001D70  51B9               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4283  001D72  0012               	return	
  4284  001D74                     l3816:
  4285                           
  4286                           ;messages.c: 278: }
  4287                           ;messages.c: 279: Delay1KTCYx(10);
  4288  001D74  0E0A               	movlw	10
  4289  001D76  EC9D  F012         	call	_Delay1KTCYx
  4290  001D7A  D7D0               	goto	l3804
  4291  001D7C                     __end_of_block_on_To_msgqueues:
  4292                           	opt stack 0
  4293                           tblptru	equ	0xFF8
  4294                           tblptrh	equ	0xFF7
  4295                           tblptrl	equ	0xFF6
  4296                           tablat	equ	0xFF5
  4297                           prodh	equ	0xFF4
  4298                           prodl	equ	0xFF3
  4299                           intcon	equ	0xFF2
  4300                           postinc0	equ	0xFEE
  4301                           wreg	equ	0xFE8
  4302                           indf1	equ	0xFE7
  4303                           postdec1	equ	0xFE5
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           indf2	equ	0xFDF
  4307                           postinc2	equ	0xFDE
  4308                           postdec2	equ	0xFDD
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _in_main *****************
  4314 ;; Defined at:
  4315 ;;		line 40 in file "source/interrupts.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2   55[BANK0 ] int 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4329 ;;      Params:         0       2       0       0       0
  4330 ;;      Locals:         0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0
  4332 ;;      Totals:         0       2       0       0       0
  4333 ;;Total ram usage:        2 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:   14
  4336 ;; This function calls:
  4337 ;;		_in_high_int
  4338 ;;		_in_low_int
  4339 ;; This function is called by:
  4340 ;;		_block_on_To_msgqueues
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text17
  4345  00222C                     __ptext17:
  4346                           	opt stack 0
  4347  00222C                     _in_main:
  4348                           	opt stack 15
  4349                           
  4350                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  4351                           
  4352                           ;incstack = 0
  4353  00222C  ECD0  F010         	call	_in_low_int	;wreg free
  4354  002230  0100               	movlb	0	; () banked
  4355  002232  0100               	movlb	0	; () banked
  4356  002234  51B6               	movf	(?_in_low_int+1)& (0+255),w,b
  4357  002236  0100               	movlb	0	; () banked
  4358  002238  11B5               	iorwf	?_in_low_int& (0+255),w,b
  4359  00223A  A4D8               	btfss	status,2,c
  4360  00223C  D011               	goto	l3548
  4361                           
  4362                           ; BSR set to: 0
  4363  00223E  ECC5  F012         	call	_in_high_int	;wreg free
  4364  002242  0100               	movlb	0	; () banked
  4365  002244  0100               	movlb	0	; () banked
  4366  002246  51B4               	movf	(?_in_high_int+1)& (0+255),w,b
  4367  002248  0100               	movlb	0	; () banked
  4368  00224A  11B3               	iorwf	?_in_high_int& (0+255),w,b
  4369  00224C  A4D8               	btfss	status,2,c
  4370  00224E  D008               	goto	l3548
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;interrupts.c: 42: return (1);
  4374  002250  0E00               	movlw	0
  4375  002252  0100               	movlb	0	; () banked
  4376  002254  0100               	movlb	0	; () banked
  4377  002256  6FB8               	movwf	(?_in_main+1)& (0+255),b
  4378  002258  0E01               	movlw	1
  4379  00225A  0100               	movlb	0	; () banked
  4380  00225C  6FB7               	movwf	?_in_main& (0+255),b
  4381  00225E  0012               	return	
  4382  002260                     l3548:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;interrupts.c: 44: return (0);
  4386  002260  0E00               	movlw	0
  4387  002262  0100               	movlb	0	; () banked
  4388  002264  0100               	movlb	0	; () banked
  4389  002266  6FB8               	movwf	(?_in_main+1)& (0+255),b
  4390  002268  0E00               	movlw	0
  4391  00226A  0100               	movlb	0	; () banked
  4392  00226C  6FB7               	movwf	?_in_main& (0+255),b
  4393  00226E  0012               	return	
  4394  002270                     __end_of_in_main:
  4395                           	opt stack 0
  4396                           tblptru	equ	0xFF8
  4397                           tblptrh	equ	0xFF7
  4398                           tblptrl	equ	0xFF6
  4399                           tablat	equ	0xFF5
  4400                           prodh	equ	0xFF4
  4401                           prodl	equ	0xFF3
  4402                           intcon	equ	0xFF2
  4403                           postinc0	equ	0xFEE
  4404                           wreg	equ	0xFE8
  4405                           indf1	equ	0xFE7
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           indf2	equ	0xFDF
  4410                           postinc2	equ	0xFDE
  4411                           postdec2	equ	0xFDD
  4412                           fsr2h	equ	0xFDA
  4413                           fsr2l	equ	0xFD9
  4414                           status	equ	0xFD8
  4415                           
  4416 ;; *************** function _in_low_int *****************
  4417 ;; Defined at:
  4418 ;;		line 30 in file "source/interrupts.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;		None
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  2   53[BANK0 ] int 
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4432 ;;      Params:         0       2       0       0       0
  4433 ;;      Locals:         0       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0
  4435 ;;      Totals:         0       2       0       0       0
  4436 ;;Total ram usage:        2 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:   13
  4439 ;; This function calls:
  4440 ;;		_in_high_int
  4441 ;; This function is called by:
  4442 ;;		_in_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text18
  4447  0021A0                     __ptext18:
  4448                           	opt stack 0
  4449  0021A0                     _in_low_int:
  4450                           	opt stack 15
  4451                           
  4452                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;incstack = 0
  4456  0021A0  ACF2               	btfss	intcon,6,c	;volatile
  4457  0021A2  D008               	goto	l3526
  4458                           
  4459                           ;interrupts.c: 32: return (0);
  4460  0021A4  0E00               	movlw	0
  4461  0021A6  0100               	movlb	0	; () banked
  4462  0021A8  0100               	movlb	0	; () banked
  4463  0021AA  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  4464  0021AC  0E00               	movlw	0
  4465  0021AE  0100               	movlb	0	; () banked
  4466  0021B0  6FB5               	movwf	?_in_low_int& (0+255),b
  4467  0021B2  0012               	return	
  4468  0021B4                     l3526:
  4469  0021B4  ECC5  F012         	call	_in_high_int	;wreg free
  4470  0021B8  0100               	movlb	0	; () banked
  4471  0021BA  0100               	movlb	0	; () banked
  4472  0021BC  51B4               	movf	(?_in_high_int+1)& (0+255),w,b
  4473  0021BE  0100               	movlb	0	; () banked
  4474  0021C0  11B3               	iorwf	?_in_high_int& (0+255),w,b
  4475  0021C2  B4D8               	btfsc	status,2,c
  4476  0021C4  D008               	goto	l3534
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;interrupts.c: 34: return (0);
  4480  0021C6  0E00               	movlw	0
  4481  0021C8  0100               	movlb	0	; () banked
  4482  0021CA  0100               	movlb	0	; () banked
  4483  0021CC  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  4484  0021CE  0E00               	movlw	0
  4485  0021D0  0100               	movlb	0	; () banked
  4486  0021D2  6FB5               	movwf	?_in_low_int& (0+255),b
  4487  0021D4  0012               	return	
  4488  0021D6                     l3534:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;interrupts.c: 36: return (1);
  4492  0021D6  0E00               	movlw	0
  4493  0021D8  0100               	movlb	0	; () banked
  4494  0021DA  0100               	movlb	0	; () banked
  4495  0021DC  6FB6               	movwf	(?_in_low_int+1)& (0+255),b
  4496  0021DE  0E01               	movlw	1
  4497  0021E0  0100               	movlb	0	; () banked
  4498  0021E2  6FB5               	movwf	?_in_low_int& (0+255),b
  4499  0021E4  0012               	return	
  4500  0021E6                     __end_of_in_low_int:
  4501                           	opt stack 0
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           indf1	equ	0xFE7
  4512                           postdec1	equ	0xFE5
  4513                           fsr1h	equ	0xFE2
  4514                           fsr1l	equ	0xFE1
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           postdec2	equ	0xFDD
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8
  4521                           
  4522 ;; *************** function _in_high_int *****************
  4523 ;; Defined at:
  4524 ;;		line 22 in file "source/interrupts.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2   51[BANK0 ] int 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4538 ;;      Params:         0       2       0       0       0
  4539 ;;      Locals:         0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0
  4541 ;;      Totals:         0       2       0       0       0
  4542 ;;Total ram usage:        2 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:   12
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_in_low_int
  4549 ;;		_in_main
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text19
  4554  00258A                     __ptext19:
  4555                           	opt stack 0
  4556  00258A                     _in_high_int:
  4557                           	opt stack 15
  4558                           
  4559                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;incstack = 0
  4563  00258A  0E00               	movlw	0
  4564  00258C  AEF2               	btfss	intcon,7,c	;volatile
  4565  00258E  0E01               	movlw	1
  4566  002590  0100               	movlb	0	; () banked
  4567  002592  0100               	movlb	0	; () banked
  4568  002594  6FB3               	movwf	?_in_high_int& (0+255),b
  4569  002596  0100               	movlb	0	; () banked
  4570  002598  6BB4               	clrf	(?_in_high_int+1)& (0+255),b
  4571  00259A  0012               	return	
  4572  00259C                     __end_of_in_high_int:
  4573                           	opt stack 0
  4574                           tblptru	equ	0xFF8
  4575                           tblptrh	equ	0xFF7
  4576                           tblptrl	equ	0xFF6
  4577                           tablat	equ	0xFF5
  4578                           prodh	equ	0xFF4
  4579                           prodl	equ	0xFF3
  4580                           intcon	equ	0xFF2
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           indf1	equ	0xFE7
  4584                           postdec1	equ	0xFE5
  4585                           fsr1h	equ	0xFE2
  4586                           fsr1l	equ	0xFE1
  4587                           indf2	equ	0xFDF
  4588                           postinc2	equ	0xFDE
  4589                           postdec2	equ	0xFDD
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _check_msg *****************
  4595 ;; Defined at:
  4596 ;;		line 222 in file "source/messages.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  qptr            2   51[BANK0 ] PTR struct __msg_queue
  4599 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      unsigned char 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4611 ;;      Params:         0       2       0       0       0
  4612 ;;      Locals:         0       0       0       0       0
  4613 ;;      Temps:          0       1       0       0       0
  4614 ;;      Totals:         0       3       0       0       0
  4615 ;;Total ram usage:        3 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:   12
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_block_on_To_msgqueues
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text20
  4626  00236C                     __ptext20:
  4627                           	opt stack 0
  4628  00236C                     _check_msg:
  4629                           	opt stack 17
  4630                           
  4631                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;incstack = 0
  4635  00236C  0100               	movlb	0	; () banked
  4636  00236E  EE20 F035          	lfsr	2,53
  4637  002372  0100               	movlb	0	; () banked
  4638  002374  51B3               	movf	check_msg@qptr& (0+255),w,b
  4639  002376  26D9               	addwf	fsr2l,f,c
  4640  002378  0100               	movlb	0	; () banked
  4641  00237A  51B4               	movf	(check_msg@qptr+1)& (0+255),w,b
  4642  00237C  22DA               	addwfc	fsr2h,f,c
  4643  00237E  50DF               	movf	indf2,w,c
  4644  002380  0100               	movlb	0	; () banked
  4645  002382  6FB5               	movwf	??_check_msg& (0+255),b
  4646  002384  0100               	movlb	0	; () banked
  4647  002386  51B5               	movf	??_check_msg& (0+255),w,b
  4648  002388  0D0D               	mullw	13
  4649  00238A  50F3               	movf	prodl,w,c
  4650  00238C  0100               	movlb	0	; () banked
  4651  00238E  0100               	movlb	0	; () banked
  4652  002390  25B3               	addwf	check_msg@qptr& (0+255),w,b
  4653  002392  6ED9               	movwf	fsr2l,c
  4654  002394  50F4               	movf	prodh,w,c
  4655  002396  0100               	movlb	0	; () banked
  4656  002398  0100               	movlb	0	; () banked
  4657  00239A  21B4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4658  00239C  6EDA               	movwf	fsr2h,c
  4659  00239E  50DF               	movf	indf2,w,c
  4660  0023A0  0012               	return	
  4661  0023A2                     __end_of_check_msg:
  4662                           	opt stack 0
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           postinc0	equ	0xFEE
  4671                           wreg	equ	0xFE8
  4672                           indf1	equ	0xFE7
  4673                           postdec1	equ	0xFE5
  4674                           fsr1h	equ	0xFE2
  4675                           fsr1l	equ	0xFE1
  4676                           indf2	equ	0xFDF
  4677                           postinc2	equ	0xFDE
  4678                           postdec2	equ	0xFDD
  4679                           fsr2h	equ	0xFDA
  4680                           fsr2l	equ	0xFD9
  4681                           status	equ	0xFD8
  4682                           
  4683 ;; *************** function _Delay1KTCYx *****************
  4684 ;; Defined at:
  4685 ;;		line 8 in file "/Applications/microchip/xc8/v1.30/sources/pic18/d1ktcyx.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  unit            1    wreg     unsigned char 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  unit            1   51[BANK0 ] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;		None               void
  4692 ;; Registers used:
  4693 ;;		wreg
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4699 ;;      Params:         0       0       0       0       0
  4700 ;;      Locals:         0       1       0       0       0
  4701 ;;      Temps:          0       0       0       0       0
  4702 ;;      Totals:         0       1       0       0       0
  4703 ;;Total ram usage:        1 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:   12
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_block_on_To_msgqueues
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text21
  4714  00253A                     __ptext21:
  4715                           	opt stack 0
  4716  00253A                     _Delay1KTCYx:
  4717                           	opt stack 17
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;incstack = 0
  4721                           ;Delay1KTCYx@unit stored from wreg
  4722  00253A  CFE8 F0B3          	movff	wreg,Delay1KTCYx@unit
  4723  00253E                     l884:
  4724  00253E  0EFA               	movlw	250
  4725  002540                     u3307:
  4726  002540  F000               	nop	
  4727  002542  2EE8               	decfsz	wreg,f,c
  4728  002544  D7FD               	goto	u3307
  4729  002546  0100               	movlb	0	; () banked
  4730  002548  0100               	movlb	0	; () banked
  4731  00254A  2FB3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4732  00254C  D7F8               	goto	l884
  4733  00254E  0012               	return	
  4734  002550                     __end_of_Delay1KTCYx:
  4735                           	opt stack 0
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           indf1	equ	0xFE7
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           postinc2	equ	0xFDE
  4751                           postdec2	equ	0xFDD
  4752                           fsr2h	equ	0xFDA
  4753                           fsr2l	equ	0xFD9
  4754                           status	equ	0xFD8
  4755                           
  4756 ;; *************** function _ToMainLow_recvmsg *****************
  4757 ;; Defined at:
  4758 ;;		line 112 in file "source/messages.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  maxlength       1    wreg     unsigned char 
  4761 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4762 ;;		 -> main@msgtype(1), 
  4763 ;;  data            2    9[BANK1 ] PTR void 
  4764 ;;		 -> main@msgbuffer(11), 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  maxlength       1   11[BANK1 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      char 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4776 ;;      Params:         0       0       4       0       0
  4777 ;;      Locals:         0       0       1       0       0
  4778 ;;      Temps:          0       0       0       0       0
  4779 ;;      Totals:         0       0       5       0       0
  4780 ;;Total ram usage:        5 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:   14
  4783 ;; This function calls:
  4784 ;;		_recv_msg
  4785 ;; This function is called by:
  4786 ;;		_main
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text22
  4791  002270                     __ptext22:
  4792                           	opt stack 0
  4793  002270                     _ToMainLow_recvmsg:
  4794                           	opt stack 16
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;incstack = 0
  4798                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4799  002270  CFE8 F1AD          	movff	wreg,ToMainLow_recvmsg@maxlength
  4800                           
  4801                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4802  002274  0101               	movlb	1	; () banked
  4803  002276  0E01               	movlw	high _ToMainLow_MQ
  4804  002278  0100               	movlb	0	; () banked
  4805  00227A  0100               	movlb	0	; () banked
  4806  00227C  6FBE               	movwf	(recv_msg@qptr+1)& (0+255),b
  4807  00227E  0101               	movlb	1	; () banked
  4808  002280  0E6C               	movlw	low _ToMainLow_MQ
  4809  002282  0100               	movlb	0	; () banked
  4810  002284  0100               	movlb	0	; () banked
  4811  002286  6FBD               	movwf	recv_msg@qptr& (0+255),b
  4812  002288  C1AD  F0BF         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4813  00228C  0101               	movlb	1	; () banked
  4814  00228E  0100               	movlb	0	; () banked
  4815  002290  C1AA  F0C1         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4816  002294  0101               	movlb	1	; () banked
  4817  002296  0100               	movlb	0	; () banked
  4818  002298  C1A9  F0C0         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4819  00229C  0101               	movlb	1	; () banked
  4820  00229E  0100               	movlb	0	; () banked
  4821  0022A0  C1AC  F0C3         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4822  0022A4  0101               	movlb	1	; () banked
  4823  0022A6  0100               	movlb	0	; () banked
  4824  0022A8  C1AB  F0C2         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4825  0022AC  ECD3  F00A         	call	_recv_msg	;wreg free
  4826  0022B0  0012               	return	
  4827  0022B2                     __end_of_ToMainLow_recvmsg:
  4828                           	opt stack 0
  4829                           tblptru	equ	0xFF8
  4830                           tblptrh	equ	0xFF7
  4831                           tblptrl	equ	0xFF6
  4832                           tablat	equ	0xFF5
  4833                           prodh	equ	0xFF4
  4834                           prodl	equ	0xFF3
  4835                           intcon	equ	0xFF2
  4836                           postinc0	equ	0xFEE
  4837                           wreg	equ	0xFE8
  4838                           indf1	equ	0xFE7
  4839                           postdec1	equ	0xFE5
  4840                           fsr1h	equ	0xFE2
  4841                           fsr1l	equ	0xFE1
  4842                           indf2	equ	0xFDF
  4843                           postinc2	equ	0xFDE
  4844                           postdec2	equ	0xFDD
  4845                           fsr2h	equ	0xFDA
  4846                           fsr2l	equ	0xFD9
  4847                           status	equ	0xFD8
  4848                           
  4849 ;; *************** function _ToMainHigh_recvmsg *****************
  4850 ;; Defined at:
  4851 ;;		line 135 in file "source/messages.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  maxlength       1    wreg     unsigned char 
  4854 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4855 ;;		 -> main@msgtype(1), 
  4856 ;;  data            2    9[BANK1 ] PTR void 
  4857 ;;		 -> main@msgbuffer(11), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  maxlength       1   11[BANK1 ] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      char 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4869 ;;      Params:         0       0       4       0       0
  4870 ;;      Locals:         0       0       1       0       0
  4871 ;;      Temps:          0       0       0       0       0
  4872 ;;      Totals:         0       0       5       0       0
  4873 ;;Total ram usage:        5 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:   14
  4876 ;; This function calls:
  4877 ;;		_recv_msg
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text23
  4884  0022B2                     __ptext23:
  4885                           	opt stack 0
  4886  0022B2                     _ToMainHigh_recvmsg:
  4887                           	opt stack 16
  4888                           
  4889                           ;incstack = 0
  4890                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4891  0022B2  CFE8 F1AD          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4892                           
  4893                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4894  0022B6  0101               	movlb	1	; () banked
  4895  0022B8  0E01               	movlw	high _ToMainHigh_MQ
  4896  0022BA  0100               	movlb	0	; () banked
  4897  0022BC  0100               	movlb	0	; () banked
  4898  0022BE  6FBE               	movwf	(recv_msg@qptr+1)& (0+255),b
  4899  0022C0  0101               	movlb	1	; () banked
  4900  0022C2  0E36               	movlw	low _ToMainHigh_MQ
  4901  0022C4  0100               	movlb	0	; () banked
  4902  0022C6  0100               	movlb	0	; () banked
  4903  0022C8  6FBD               	movwf	recv_msg@qptr& (0+255),b
  4904  0022CA  C1AD  F0BF         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4905  0022CE  0101               	movlb	1	; () banked
  4906  0022D0  0100               	movlb	0	; () banked
  4907  0022D2  C1AA  F0C1         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4908  0022D6  0101               	movlb	1	; () banked
  4909  0022D8  0100               	movlb	0	; () banked
  4910  0022DA  C1A9  F0C0         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4911  0022DE  0101               	movlb	1	; () banked
  4912  0022E0  0100               	movlb	0	; () banked
  4913  0022E2  C1AC  F0C3         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4914  0022E6  0101               	movlb	1	; () banked
  4915  0022E8  0100               	movlb	0	; () banked
  4916  0022EA  C1AB  F0C2         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4917  0022EE  ECD3  F00A         	call	_recv_msg	;wreg free
  4918  0022F2  0012               	return	
  4919  0022F4                     __end_of_ToMainHigh_recvmsg:
  4920                           	opt stack 0
  4921                           tblptru	equ	0xFF8
  4922                           tblptrh	equ	0xFF7
  4923                           tblptrl	equ	0xFF6
  4924                           tablat	equ	0xFF5
  4925                           prodh	equ	0xFF4
  4926                           prodl	equ	0xFF3
  4927                           intcon	equ	0xFF2
  4928                           postinc0	equ	0xFEE
  4929                           wreg	equ	0xFE8
  4930                           indf1	equ	0xFE7
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           indf2	equ	0xFDF
  4935                           postinc2	equ	0xFDE
  4936                           postdec2	equ	0xFDD
  4937                           fsr2h	equ	0xFDA
  4938                           fsr2l	equ	0xFD9
  4939                           status	equ	0xFD8
  4940                           
  4941 ;; *************** function _recv_msg *****************
  4942 ;; Defined at:
  4943 ;;		line 63 in file "source/messages.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  qptr            2   61[BANK0 ] PTR struct __msg_queue
  4946 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4947 ;;  maxlength       1   63[BANK0 ] unsigned char 
  4948 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  4949 ;;		 -> main@msgtype(1), 
  4950 ;;  data            2   66[BANK0 ] PTR void 
  4951 ;;		 -> main@msgbuffer(11), 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  qmsg            2    5[BANK1 ] PTR struct __msg
  4954 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4955 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4956 ;;  tlength         2    3[BANK1 ] unsigned int 
  4957 ;;  slot            1    2[BANK1 ] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      char 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4967 ;;      Params:         0       7       0       0       0
  4968 ;;      Locals:         0       0       5       0       0
  4969 ;;      Temps:          0       0       2       0       0
  4970 ;;      Totals:         0       7       7       0       0
  4971 ;;Total ram usage:       14 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:   13
  4974 ;; This function calls:
  4975 ;;		_memcpy
  4976 ;; This function is called by:
  4977 ;;		_ToMainLow_recvmsg
  4978 ;;		_ToMainHigh_recvmsg
  4979 ;;		_FromMainLow_recvmsg
  4980 ;;		_FromMainHigh_recvmsg
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text24
  4985  0015A6                     __ptext24:
  4986                           	opt stack 0
  4987  0015A6                     _recv_msg:
  4988                           	opt stack 16
  4989                           
  4990                           ;messages.c: 64: unsigned char slot;
  4991                           ;messages.c: 68: msg *qmsg;
  4992                           ;messages.c: 69: size_t tlength;
  4993                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4994                           
  4995                           ;incstack = 0
  4996  0015A6  0100               	movlb	0	; () banked
  4997  0015A8  EE20 F035          	lfsr	2,53
  4998  0015AC  0100               	movlb	0	; () banked
  4999  0015AE  51BD               	movf	recv_msg@qptr& (0+255),w,b
  5000  0015B0  26D9               	addwf	fsr2l,f,c
  5001  0015B2  0100               	movlb	0	; () banked
  5002  0015B4  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5003  0015B6  22DA               	addwfc	fsr2h,f,c
  5004  0015B8  50DF               	movf	indf2,w,c
  5005  0015BA  0101               	movlb	1	; () banked
  5006  0015BC  0101               	movlb	1	; () banked
  5007  0015BE  6FA4               	movwf	recv_msg@slot& (0+255),b
  5008                           
  5009                           ; BSR set to: 1
  5010                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5011  0015C0  0101               	movlb	1	; () banked
  5012  0015C2  0101               	movlb	1	; () banked
  5013  0015C4  51A4               	movf	recv_msg@slot& (0+255),w,b
  5014  0015C6  0D0D               	mullw	13
  5015  0015C8  50F3               	movf	prodl,w,c
  5016  0015CA  0100               	movlb	0	; () banked
  5017  0015CC  0100               	movlb	0	; () banked
  5018  0015CE  25BD               	addwf	recv_msg@qptr& (0+255),w,b
  5019  0015D0  0101               	movlb	1	; () banked
  5020  0015D2  0101               	movlb	1	; () banked
  5021  0015D4  6FA7               	movwf	recv_msg@qmsg& (0+255),b
  5022  0015D6  50F4               	movf	prodh,w,c
  5023  0015D8  0100               	movlb	0	; () banked
  5024  0015DA  0100               	movlb	0	; () banked
  5025  0015DC  21BE               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5026  0015DE  0101               	movlb	1	; () banked
  5027  0015E0  6FA8               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5028                           
  5029                           ; BSR set to: 1
  5030                           ;messages.c: 74: if (qmsg->full == 1) {
  5031  0015E2  0E01               	movlw	1
  5032  0015E4  C1A7  FFD9         	movff	recv_msg@qmsg,fsr2l
  5033  0015E8  C1A8  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5034  0015EC  62DF               	cpfseq	indf2,c
  5035  0015EE  D074               	goto	l4026
  5036                           
  5037                           ; BSR set to: 1
  5038                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5039  0015F0  0101               	movlb	1	; () banked
  5040  0015F2  EE20 F001          	lfsr	2,1
  5041  0015F6  0101               	movlb	1	; () banked
  5042  0015F8  51A7               	movf	recv_msg@qmsg& (0+255),w,b
  5043  0015FA  26D9               	addwf	fsr2l,f,c
  5044  0015FC  0101               	movlb	1	; () banked
  5045  0015FE  51A8               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5046  001600  22DA               	addwfc	fsr2h,f,c
  5047  001602  50DF               	movf	indf2,w,c
  5048  001604  0100               	movlb	0	; () banked
  5049  001606  0100               	movlb	0	; () banked
  5050  001608  5DBF               	subwf	recv_msg@maxlength& (0+255),w,b
  5051  00160A  B0D8               	btfsc	status,0,c
  5052  00160C  D002               	goto	l4010
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;messages.c: 77: return (-3);
  5056  00160E  0EFD               	movlw	253
  5057  001610  0012               	return	
  5058  001612                     l4010:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;messages.c: 78: }
  5062                           ;messages.c: 80: tlength = qmsg->length;
  5063  001612  0101               	movlb	1	; () banked
  5064  001614  EE20 F001          	lfsr	2,1
  5065  001618  0101               	movlb	1	; () banked
  5066  00161A  51A7               	movf	recv_msg@qmsg& (0+255),w,b
  5067  00161C  26D9               	addwf	fsr2l,f,c
  5068  00161E  0101               	movlb	1	; () banked
  5069  001620  51A8               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5070  001622  22DA               	addwfc	fsr2h,f,c
  5071  001624  50DF               	movf	indf2,w,c
  5072  001626  0101               	movlb	1	; () banked
  5073  001628  6FA2               	movwf	??_recv_msg& (0+255),b
  5074  00162A  0101               	movlb	1	; () banked
  5075  00162C  51A2               	movf	??_recv_msg& (0+255),w,b
  5076  00162E  0101               	movlb	1	; () banked
  5077  001630  0101               	movlb	1	; () banked
  5078  001632  6FA5               	movwf	recv_msg@tlength& (0+255),b
  5079  001634  0101               	movlb	1	; () banked
  5080  001636  6BA6               	clrf	(recv_msg@tlength+1)& (0+255),b
  5081                           
  5082                           ; BSR set to: 1
  5083                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5084  001638  0100               	movlb	0	; () banked
  5085  00163A  0100               	movlb	0	; () banked
  5086  00163C  C0C3  F0B4         	movff	recv_msg@data+1,memcpy@d1+1
  5087  001640  0100               	movlb	0	; () banked
  5088  001642  0100               	movlb	0	; () banked
  5089  001644  C0C2  F0B3         	movff	recv_msg@data,memcpy@d1
  5090  001648  0E03               	movlw	3
  5091  00164A  0101               	movlb	1	; () banked
  5092  00164C  0101               	movlb	1	; () banked
  5093  00164E  25A7               	addwf	recv_msg@qmsg& (0+255),w,b
  5094  001650  0101               	movlb	1	; () banked
  5095  001652  6FA2               	movwf	??_recv_msg& (0+255),b
  5096  001654  0E00               	movlw	0
  5097  001656  0101               	movlb	1	; () banked
  5098  001658  0101               	movlb	1	; () banked
  5099  00165A  21A8               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5100  00165C  0101               	movlb	1	; () banked
  5101  00165E  6FA3               	movwf	(??_recv_msg+1)& (0+255),b
  5102  001660  C1A2  F0B5         	movff	??_recv_msg,memcpy@s1
  5103  001664  C1A3  F0B6         	movff	??_recv_msg+1,memcpy@s1+1
  5104  001668  C1A5  F0B7         	movff	recv_msg@tlength,memcpy@n
  5105  00166C  C1A6  F0B8         	movff	recv_msg@tlength+1,memcpy@n+1
  5106  001670  ECD2  F00F         	call	_memcpy	;wreg free
  5107                           
  5108                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5109  001674  0100               	movlb	0	; () banked
  5110  001676  EE20 F035          	lfsr	2,53
  5111  00167A  0100               	movlb	0	; () banked
  5112  00167C  51BD               	movf	recv_msg@qptr& (0+255),w,b
  5113  00167E  26D9               	addwf	fsr2l,f,c
  5114  001680  0100               	movlb	0	; () banked
  5115  001682  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5116  001684  22DA               	addwfc	fsr2h,f,c
  5117  001686  0100               	movlb	0	; () banked
  5118  001688  EE10 F035          	lfsr	1,53
  5119  00168C  0100               	movlb	0	; () banked
  5120  00168E  51BD               	movf	recv_msg@qptr& (0+255),w,b
  5121  001690  26E1               	addwf	fsr1l,f,c
  5122  001692  0100               	movlb	0	; () banked
  5123  001694  51BE               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5124  001696  22E2               	addwfc	fsr1h,f,c
  5125  001698  50E7               	movf	indf1,w,c
  5126  00169A  0101               	movlb	1	; () banked
  5127  00169C  6FA2               	movwf	??_recv_msg& (0+255),b
  5128  00169E  0101               	movlb	1	; () banked
  5129  0016A0  29A2               	incf	??_recv_msg& (0+255),w,b
  5130  0016A2  0B03               	andlw	3
  5131  0016A4  6EDF               	movwf	indf2,c
  5132                           
  5133                           ; BSR set to: 1
  5134                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5135  0016A6  0101               	movlb	1	; () banked
  5136  0016A8  EE20 F002          	lfsr	2,2
  5137  0016AC  0101               	movlb	1	; () banked
  5138  0016AE  51A7               	movf	recv_msg@qmsg& (0+255),w,b
  5139  0016B0  26D9               	addwf	fsr2l,f,c
  5140  0016B2  0101               	movlb	1	; () banked
  5141  0016B4  51A8               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5142  0016B6  22DA               	addwfc	fsr2h,f,c
  5143  0016B8  C0C0  FFE1         	movff	recv_msg@msgtype,fsr1l
  5144  0016BC  C0C1  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5145  0016C0  CFDF FFE7          	movff	indf2,indf1
  5146                           
  5147                           ; BSR set to: 1
  5148                           ;messages.c: 91: qmsg->full = 0;
  5149  0016C4  C1A7  FFD9         	movff	recv_msg@qmsg,fsr2l
  5150  0016C8  C1A8  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5151  0016CC  0E00               	movlw	0
  5152  0016CE  6EDF               	movwf	indf2,c
  5153                           
  5154                           ; BSR set to: 1
  5155                           ;messages.c: 92: return (tlength);
  5156  0016D0  0101               	movlb	1	; () banked
  5157  0016D2  0101               	movlb	1	; () banked
  5158  0016D4  51A5               	movf	recv_msg@tlength& (0+255),w,b
  5159  0016D6  0012               	return	
  5160  0016D8                     l4026:
  5161                           
  5162                           ; BSR set to: 1
  5163                           ;messages.c: 94: return (-4);
  5164  0016D8  0EFC               	movlw	252
  5165  0016DA  0012               	return	
  5166  0016DC                     __end_of_recv_msg:
  5167                           	opt stack 0
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           intcon	equ	0xFF2
  5175                           postinc0	equ	0xFEE
  5176                           wreg	equ	0xFE8
  5177                           indf1	equ	0xFE7
  5178                           postdec1	equ	0xFE5
  5179                           fsr1h	equ	0xFE2
  5180                           fsr1l	equ	0xFE1
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188 ;; *************** function _memcpy *****************
  5189 ;; Defined at:
  5190 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  d1              2   51[BANK0 ] PTR void 
  5193 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5194 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5195 ;;		 -> main@msgbuffer(11), 
  5196 ;;  s1              2   53[BANK0 ] PTR const void 
  5197 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5198 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5199 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5200 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(53), 
  5201 ;;  n               2   55[BANK0 ] unsigned int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  s               2   59[BANK0 ] PTR const unsigned char 
  5204 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5205 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5206 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5207 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(53), 
  5208 ;;  d               2   57[BANK0 ] PTR unsigned char 
  5209 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5210 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5211 ;;		 -> main@msgbuffer(11), 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  2   51[BANK0 ] PTR void 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5221 ;;      Params:         0       6       0       0       0
  5222 ;;      Locals:         0       4       0       0       0
  5223 ;;      Temps:          0       0       0       0       0
  5224 ;;      Totals:         0      10       0       0       0
  5225 ;;Total ram usage:       10 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:   12
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_recv_msg
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text25
  5236  001FA4                     __ptext25:
  5237                           	opt stack 0
  5238  001FA4                     _memcpy:
  5239                           	opt stack 16
  5240                           
  5241                           ;incstack = 0
  5242  001FA4  0100               	movlb	0	; () banked
  5243  001FA6  0100               	movlb	0	; () banked
  5244  001FA8  C0B6  F0BC         	movff	memcpy@s1+1,memcpy@s+1
  5245  001FAC  0100               	movlb	0	; () banked
  5246  001FAE  0100               	movlb	0	; () banked
  5247  001FB0  C0B5  F0BB         	movff	memcpy@s1,memcpy@s
  5248  001FB4  0100               	movlb	0	; () banked
  5249  001FB6  0100               	movlb	0	; () banked
  5250  001FB8  C0B4  F0BA         	movff	memcpy@d1+1,memcpy@d+1
  5251  001FBC  0100               	movlb	0	; () banked
  5252  001FBE  0100               	movlb	0	; () banked
  5253  001FC0  C0B3  F0B9         	movff	memcpy@d1,memcpy@d
  5254  001FC4  D012               	goto	l3996
  5255  001FC6                     l3990:
  5256                           
  5257                           ; BSR set to: 0
  5258  001FC6  C0BB  FFD9         	movff	memcpy@s,fsr2l
  5259  001FCA  C0BC  FFDA         	movff	memcpy@s+1,fsr2h
  5260  001FCE  C0B9  FFE1         	movff	memcpy@d,fsr1l
  5261  001FD2  C0BA  FFE2         	movff	memcpy@d+1,fsr1h
  5262  001FD6  CFDF FFE7          	movff	indf2,indf1
  5263                           
  5264                           ; BSR set to: 0
  5265  001FDA  0100               	movlb	0	; () banked
  5266  001FDC  0100               	movlb	0	; () banked
  5267  001FDE  4BBB               	infsnz	memcpy@s& (0+255),f,b
  5268  001FE0  2BBC               	incf	(memcpy@s+1)& (0+255),f,b
  5269                           
  5270                           ; BSR set to: 0
  5271  001FE2  0100               	movlb	0	; () banked
  5272  001FE4  0100               	movlb	0	; () banked
  5273  001FE6  4BB9               	infsnz	memcpy@d& (0+255),f,b
  5274  001FE8  2BBA               	incf	(memcpy@d+1)& (0+255),f,b
  5275  001FEA                     l3996:
  5276                           
  5277                           ; BSR set to: 0
  5278  001FEA  0100               	movlb	0	; () banked
  5279  001FEC  0100               	movlb	0	; () banked
  5280  001FEE  07B7               	decf	memcpy@n& (0+255),f,b
  5281  001FF0  A0D8               	btfss	status,0,c
  5282  001FF2  07B8               	decf	(memcpy@n+1)& (0+255),f,b
  5283  001FF4  0100               	movlb	0	; () banked
  5284  001FF6  29B7               	incf	memcpy@n& (0+255),w,b
  5285  001FF8  B4D8               	btfsc	status,2,c
  5286  001FFA  29B8               	incf	(memcpy@n+1)& (0+255),w,b
  5287  001FFC  B4D8               	btfsc	status,2,c
  5288                           
  5289                           ; BSR set to: 0
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;	Return value of _memcpy is never used
  5293  001FFE  0012               	return	
  5294  002000  D7E2               	goto	l3990
  5295  002002                     __end_of_memcpy:
  5296                           	opt stack 0
  5297                           tblptru	equ	0xFF8
  5298                           tblptrh	equ	0xFF7
  5299                           tblptrl	equ	0xFF6
  5300                           tablat	equ	0xFF5
  5301                           prodh	equ	0xFF4
  5302                           prodl	equ	0xFF3
  5303                           intcon	equ	0xFF2
  5304                           postinc0	equ	0xFEE
  5305                           wreg	equ	0xFE8
  5306                           indf1	equ	0xFE7
  5307                           postdec1	equ	0xFE5
  5308                           fsr1h	equ	0xFE2
  5309                           fsr1l	equ	0xFE1
  5310                           indf2	equ	0xFDF
  5311                           postinc2	equ	0xFDE
  5312                           postdec2	equ	0xFDD
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _OpenUSART *****************
  5318 ;; Defined at:
  5319 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  config          1    wreg     unsigned char 
  5322 ;;  spbrg           2   51[BANK0 ] unsigned int 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  config          1   56[BANK0 ] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;		None               void
  5327 ;; Registers used:
  5328 ;;		wreg, status,2
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5334 ;;      Params:         0       2       0       0       0
  5335 ;;      Locals:         0       1       0       0       0
  5336 ;;      Temps:          0       3       0       0       0
  5337 ;;      Totals:         0       6       0       0       0
  5338 ;;Total ram usage:        6 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:   12
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_main
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text26
  5349  001BEA                     __ptext26:
  5350                           	opt stack 0
  5351  001BEA                     _OpenUSART:
  5352                           	opt stack 18
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;incstack = 0
  5356                           ;OpenUSART@config stored from wreg
  5357  001BEA  CFE8 F0B8          	movff	wreg,OpenUSART@config
  5358  001BEE  0E00               	movlw	0
  5359  001BF0  6EAC               	movwf	4012,c	;volatile
  5360  001BF2  0E00               	movlw	0
  5361  001BF4  6EAB               	movwf	4011,c	;volatile
  5362  001BF6  0100               	movlb	0	; () banked
  5363  001BF8  0100               	movlb	0	; () banked
  5364  001BFA  B1B8               	btfsc	OpenUSART@config& (0+255),0,b
  5365                           
  5366                           ; BSR set to: 0
  5367  001BFC  88AC               	bsf	4012,4,c	;volatile
  5368                           
  5369                           ; BSR set to: 0
  5370                           
  5371                           ; BSR set to: 0
  5372  001BFE  0100               	movlb	0	; () banked
  5373  001C00  0100               	movlb	0	; () banked
  5374  001C02  A3B8               	btfss	OpenUSART@config& (0+255),1,b
  5375  001C04  D002               	goto	l3758
  5376                           
  5377                           ; BSR set to: 0
  5378  001C06  8CAC               	bsf	4012,6,c	;volatile
  5379  001C08  8CAB               	bsf	4011,6,c	;volatile
  5380  001C0A                     l3758:
  5381                           
  5382                           ; BSR set to: 0
  5383  001C0A  0100               	movlb	0	; () banked
  5384  001C0C  0100               	movlb	0	; () banked
  5385  001C0E  B5B8               	btfsc	OpenUSART@config& (0+255),2,b
  5386                           
  5387                           ; BSR set to: 0
  5388  001C10  8EAC               	bsf	4012,7,c	;volatile
  5389                           
  5390                           ; BSR set to: 0
  5391                           
  5392                           ; BSR set to: 0
  5393  001C12  0100               	movlb	0	; () banked
  5394  001C14  0100               	movlb	0	; () banked
  5395  001C16  A7B8               	btfss	OpenUSART@config& (0+255),3,b
  5396  001C18  D002               	goto	l640
  5397                           
  5398                           ; BSR set to: 0
  5399  001C1A  88AB               	bsf	4011,4,c	;volatile
  5400  001C1C  D001               	goto	l3766
  5401  001C1E                     l640:
  5402                           
  5403                           ; BSR set to: 0
  5404  001C1E  8AAB               	bsf	4011,5,c	;volatile
  5405  001C20                     l3766:
  5406                           
  5407                           ; BSR set to: 0
  5408  001C20  0100               	movlb	0	; () banked
  5409  001C22  0100               	movlb	0	; () banked
  5410  001C24  B9B8               	btfsc	OpenUSART@config& (0+255),4,b
  5411                           
  5412                           ; BSR set to: 0
  5413  001C26  84AC               	bsf	4012,2,c	;volatile
  5414                           
  5415                           ; BSR set to: 0
  5416  001C28  989E               	bcf	3998,4,c	;volatile
  5417                           
  5418                           ; BSR set to: 0
  5419  001C2A  0100               	movlb	0	; () banked
  5420  001C2C  0100               	movlb	0	; () banked
  5421  001C2E  BBB8               	btfsc	OpenUSART@config& (0+255),5,b
  5422                           
  5423                           ; BSR set to: 0
  5424  001C30  86AB               	bsf	4011,3,c	;volatile
  5425                           
  5426                           ; BSR set to: 0
  5427                           
  5428                           ; BSR set to: 0
  5429  001C32  0100               	movlb	0	; () banked
  5430  001C34  0100               	movlb	0	; () banked
  5431  001C36  ADB8               	btfss	OpenUSART@config& (0+255),6,b
  5432  001C38  D002               	goto	l644
  5433                           
  5434                           ; BSR set to: 0
  5435  001C3A  8A9D               	bsf	3997,5,c	;volatile
  5436  001C3C  D001               	goto	l645
  5437  001C3E                     l644:
  5438                           
  5439                           ; BSR set to: 0
  5440  001C3E  9A9D               	bcf	3997,5,c	;volatile
  5441  001C40                     l645:
  5442                           
  5443                           ; BSR set to: 0
  5444  001C40  9A9E               	bcf	3998,5,c	;volatile
  5445                           
  5446                           ; BSR set to: 0
  5447  001C42  0100               	movlb	0	; () banked
  5448  001C44  0100               	movlb	0	; () banked
  5449  001C46  AFB8               	btfss	OpenUSART@config& (0+255),7,b
  5450  001C48  D002               	goto	l646
  5451                           
  5452                           ; BSR set to: 0
  5453  001C4A  889D               	bsf	3997,4,c	;volatile
  5454  001C4C  D001               	goto	l647
  5455  001C4E                     l646:
  5456                           
  5457                           ; BSR set to: 0
  5458  001C4E  989D               	bcf	3997,4,c	;volatile
  5459  001C50                     l647:
  5460                           
  5461                           ; BSR set to: 0
  5462  001C50  C0B3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5463                           
  5464                           ; BSR set to: 0
  5465  001C54  0100               	movlb	0	; () banked
  5466  001C56  C0B4  F0B5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5467  001C5A  C0B5  F0B6         	movff	??_OpenUSART,??_OpenUSART+1
  5468  001C5E  0100               	movlb	0	; () banked
  5469  001C60  6BB7               	clrf	(??_OpenUSART+2)& (0+255),b
  5470  001C62  0100               	movlb	0	; () banked
  5471  001C64  51B6               	movf	(??_OpenUSART+1)& (0+255),w,b
  5472  001C66  6EB0               	movwf	4016,c	;volatile
  5473                           
  5474                           ; BSR set to: 0
  5475  001C68  8AAC               	bsf	4012,5,c	;volatile
  5476                           
  5477                           ; BSR set to: 0
  5478  001C6A  8EAB               	bsf	4011,7,c	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481  001C6C  9C94               	bcf	3988,6,c	;volatile
  5482                           
  5483                           ; BSR set to: 0
  5484  001C6E  8E94               	bsf	3988,7,c	;volatile
  5485                           
  5486                           ; BSR set to: 0
  5487  001C70  A8AC               	btfss	4012,4,c	;volatile
  5488  001C72  0012               	return	
  5489                           
  5490                           ; BSR set to: 0
  5491  001C74  BEAC               	btfsc	4012,7,c	;volatile
  5492  001C76  0012               	return	
  5493                           
  5494                           ; BSR set to: 0
  5495  001C78  8C94               	bsf	3988,6,c	;volatile
  5496  001C7A  0012               	return	
  5497  001C7C                     __end_of_OpenUSART:
  5498                           	opt stack 0
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           intcon	equ	0xFF2
  5506                           postinc0	equ	0xFEE
  5507                           wreg	equ	0xFE8
  5508                           indf1	equ	0xFE7
  5509                           postdec1	equ	0xFE5
  5510                           fsr1h	equ	0xFE2
  5511                           fsr1l	equ	0xFE1
  5512                           indf2	equ	0xFDF
  5513                           postinc2	equ	0xFDE
  5514                           postdec2	equ	0xFDD
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _OpenTimer0 *****************
  5520 ;; Defined at:
  5521 ;;		line 18 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0open.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  config          1    wreg     unsigned char 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  config          1   51[BANK0 ] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5535 ;;      Params:         0       0       0       0       0
  5536 ;;      Locals:         0       1       0       0       0
  5537 ;;      Temps:          0       0       0       0       0
  5538 ;;      Totals:         0       1       0       0       0
  5539 ;;Total ram usage:        1 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:   12
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_main
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text27
  5550  002444                     __ptext27:
  5551                           	opt stack 0
  5552  002444                     _OpenTimer0:
  5553                           	opt stack 18
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;incstack = 0
  5557                           ;OpenTimer0@config stored from wreg
  5558  002444  CFE8 F0B3          	movff	wreg,OpenTimer0@config
  5559  002448  0100               	movlb	0	; () banked
  5560  00244A  0100               	movlb	0	; () banked
  5561  00244C  51B3               	movf	OpenTimer0@config& (0+255),w,b
  5562  00244E  0B7F               	andlw	127
  5563  002450  6ED5               	movwf	4053,c	;volatile
  5564                           
  5565                           ; BSR set to: 0
  5566  002452  0E00               	movlw	0
  5567  002454  6ED7               	movwf	4055,c	;volatile
  5568                           
  5569                           ; BSR set to: 0
  5570  002456  0E00               	movlw	0
  5571  002458  6ED6               	movwf	4054,c	;volatile
  5572                           
  5573                           ; BSR set to: 0
  5574  00245A  94F2               	bcf	intcon,2,c	;volatile
  5575                           
  5576                           ; BSR set to: 0
  5577  00245C  0100               	movlb	0	; () banked
  5578  00245E  0100               	movlb	0	; () banked
  5579  002460  AFB3               	btfss	OpenTimer0@config& (0+255),7,b
  5580  002462  D002               	goto	l591
  5581                           
  5582                           ; BSR set to: 0
  5583  002464  8AF2               	bsf	intcon,5,c	;volatile
  5584  002466  D001               	goto	l592
  5585  002468                     l591:
  5586                           
  5587                           ; BSR set to: 0
  5588  002468  9AF2               	bcf	intcon,5,c	;volatile
  5589  00246A                     l592:
  5590                           
  5591                           ; BSR set to: 0
  5592  00246A  8ED5               	bsf	4053,7,c	;volatile
  5593                           
  5594                           ; BSR set to: 0
  5595  00246C  0012               	return	
  5596  00246E                     __end_of_OpenTimer0:
  5597                           	opt stack 0
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           intcon	equ	0xFF2
  5605                           postinc0	equ	0xFEE
  5606                           wreg	equ	0xFE8
  5607                           indf1	equ	0xFE7
  5608                           postdec1	equ	0xFE5
  5609                           fsr1h	equ	0xFE2
  5610                           fsr1l	equ	0xFE1
  5611                           indf2	equ	0xFDF
  5612                           postinc2	equ	0xFDE
  5613                           postdec2	equ	0xFDD
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _InterruptHandlerLow *****************
  5619 ;; Defined at:
  5620 ;;		line 122 in file "source/interrupts.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;		None               void
  5627 ;; Registers used:
  5628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5634 ;;      Params:         0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0
  5636 ;;      Temps:         17       0       0       0       0
  5637 ;;      Totals:        17       0       0       0       0
  5638 ;;Total ram usage:       17 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:   11
  5641 ;; This function calls:
  5642 ;;		_timer1_int_handler
  5643 ;;		_uart_recv_int_handler
  5644 ;; This function is called by:
  5645 ;;		Interrupt level 1
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	intcodelo
  5650  000018                     __pintcodelo:
  5651                           	opt stack 0
  5652  000018                     _InterruptHandlerLow:
  5653                           	opt stack 15
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;incstack = 0
  5657  000018  CFD8 F022          	movff	status,??_InterruptHandlerLow
  5658  00001C  CFE8 F023          	movff	wreg,??_InterruptHandlerLow+1
  5659  000020  CFE0 F024          	movff	bsr,??_InterruptHandlerLow+2
  5660  000024  CFFA F025          	movff	pclath,??_InterruptHandlerLow+3
  5661  000028  CFFB F026          	movff	pclatu,??_InterruptHandlerLow+4
  5662  00002C  CFE9 F027          	movff	fsr0l,??_InterruptHandlerLow+5
  5663  000030  CFEA F028          	movff	fsr0h,??_InterruptHandlerLow+6
  5664  000034  CFE1 F029          	movff	fsr1l,??_InterruptHandlerLow+7
  5665  000038  CFE2 F02A          	movff	fsr1h,??_InterruptHandlerLow+8
  5666  00003C  CFD9 F02B          	movff	fsr2l,??_InterruptHandlerLow+9
  5667  000040  CFDA F02C          	movff	fsr2h,??_InterruptHandlerLow+10
  5668  000044  CFF3 F02D          	movff	prodl,??_InterruptHandlerLow+11
  5669  000048  CFF4 F02E          	movff	prodh,??_InterruptHandlerLow+12
  5670  00004C  CFF6 F02F          	movff	tblptrl,??_InterruptHandlerLow+13
  5671  000050  CFF7 F030          	movff	tblptrh,??_InterruptHandlerLow+14
  5672  000054  CFF8 F031          	movff	tblptru,??_InterruptHandlerLow+15
  5673  000058  CFF5 F032          	movff	tablat,??_InterruptHandlerLow+16
  5674                           
  5675                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  5676  00005C  A09E               	btfss	3998,0,c	;volatile
  5677  00005E  D003               	goto	i1l4566
  5678                           
  5679                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  5680  000060  909E               	bcf	3998,0,c	;volatile
  5681                           
  5682                           ;interrupts.c: 126: timer1_int_handler();
  5683  000062  EC90  F012         	call	_timer1_int_handler	;wreg free
  5684  000066                     i1l4566:
  5685                           
  5686                           ;interrupts.c: 127: }
  5687                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  5688  000066  AA9E               	btfss	3998,5,c	;volatile
  5689  000068  D003               	goto	i1l59
  5690                           
  5691                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  5692  00006A  9A9E               	bcf	3998,5,c	;volatile
  5693                           
  5694                           ;interrupts.c: 132: uart_recv_int_handler();
  5695  00006C  ECA9  F010         	call	_uart_recv_int_handler	;wreg free
  5696  000070                     i1l59:
  5697  000070  C032  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5698  000074  C031  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5699  000078  C030  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5700  00007C  C02F  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5701  000080  C02E  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5702  000084  C02D  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5703  000088  C02C  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5704  00008C  C02B  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5705  000090  C02A  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5706  000094  C029  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5707  000098  C028  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5708  00009C  C027  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5709  0000A0  C026  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5710  0000A4  C025  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5711  0000A8  C024  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5712  0000AC  C023  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5713  0000B0  C022  FFD8         	movff	??_InterruptHandlerLow,status
  5714  0000B4  0010               	retfie	
  5715  0000B6                     __end_of_InterruptHandlerLow:
  5716                           	opt stack 0
  5717                           pclatu	equ	0xFFB
  5718                           pclath	equ	0xFFA
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           postinc0	equ	0xFEE
  5727                           fsr0h	equ	0xFEA
  5728                           fsr0l	equ	0xFE9
  5729                           wreg	equ	0xFE8
  5730                           indf1	equ	0xFE7
  5731                           postdec1	equ	0xFE5
  5732                           fsr1h	equ	0xFE2
  5733                           fsr1l	equ	0xFE1
  5734                           bsr	equ	0xFE0
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           fsr2h	equ	0xFDA
  5739                           fsr2l	equ	0xFD9
  5740                           status	equ	0xFD8
  5741                           
  5742 ;; *************** function _uart_recv_int_handler *****************
  5743 ;; Defined at:
  5744 ;;		line 15 in file "source/my_uart.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;		None               void
  5751 ;; Registers used:
  5752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5758 ;;      Params:         0       0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0
  5760 ;;      Temps:          1       0       0       0       0
  5761 ;;      Totals:         1       0       0       0       0
  5762 ;;Total ram usage:        1 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:   10
  5765 ;; This function calls:
  5766 ;;		_ReadUSART
  5767 ;;		_ToMainHigh_sendmsg
  5768 ;;		_parseUART
  5769 ;; This function is called by:
  5770 ;;		_InterruptHandlerLow
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text29
  5775  002152                     __ptext29:
  5776                           	opt stack 0
  5777  002152                     _uart_recv_int_handler:
  5778                           	opt stack 15
  5779                           
  5780                           ;my_uart.c: 24: if ((PIR1bits.RCIF)) {
  5781                           
  5782                           ;incstack = 0
  5783  002152  AA9E               	btfss	3998,5,c	;volatile
  5784  002154  D015               	goto	i1l4554
  5785                           
  5786                           ;my_uart.c: 25: buffer_temp[buf_len] = ReadUSART();
  5787  002156  5042               	movf	_buf_len,w,c
  5788  002158  0D01               	mullw	1
  5789  00215A  0E45               	movlw	low _buffer_temp
  5790  00215C  24F3               	addwf	prodl,w,c
  5791  00215E  6ED9               	movwf	fsr2l,c
  5792  002160  0E00               	movlw	high _buffer_temp
  5793  002162  20F4               	addwfc	prodh,w,c
  5794  002164  6EDA               	movwf	fsr2h,c
  5795  002166  EC81  F012         	call	_ReadUSART	;wreg free
  5796  00216A  6EDF               	movwf	indf2,c
  5797                           
  5798                           ;my_uart.c: 28: uc_ptr->buflen++;
  5799  00216C  EE20 F004          	lfsr	2,4
  5800  002170  5051               	movf	_uc_ptr,w,c
  5801  002172  26D9               	addwf	fsr2l,f,c
  5802  002174  5052               	movf	_uc_ptr+1,w,c
  5803  002176  22DA               	addwfc	fsr2h,f,c
  5804  002178  2ADF               	incf	indf2,f,c
  5805                           
  5806                           ;my_uart.c: 29: buf_len++;
  5807  00217A  2A42               	incf	_buf_len,f,c
  5808                           
  5809                           ;my_uart.c: 30: parseUART();
  5810  00217C  ECF0  F00B         	call	_parseUART	;wreg free
  5811  002180                     i1l4554:
  5812                           
  5813                           ;my_uart.c: 33: }
  5814                           ;my_uart.c: 40: if (USART_Status.OVERRUN_ERROR == 1) {
  5815  002180  A641               	btfss	_USART_Status,3,c
  5816  002182  0012               	return	
  5817                           
  5818                           ;my_uart.c: 45: RCSTAbits.CREN = 0;
  5819  002184  98AB               	bcf	4011,4,c	;volatile
  5820                           
  5821                           ;my_uart.c: 46: RCSTAbits.CREN = 1;
  5822  002186  88AB               	bsf	4011,4,c	;volatile
  5823                           
  5824                           ;my_uart.c: 47: ToMainHigh_sendmsg(0, 30, (void *) 0);
  5825  002188  6E21               	movwf	??_uart_recv_int_handler& (0+255),c
  5826  00218A  0E1E               	movlw	30
  5827  00218C  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  5828  00218E  5021               	movf	??_uart_recv_int_handler& (0+255),w,c
  5829  002190  0E00               	movlw	0
  5830  002192  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  5831  002194  0E00               	movlw	0
  5832  002196  6E18               	movwf	ToMainHigh_sendmsg@data,c
  5833  002198  0E00               	movlw	0
  5834  00219A  EC5D  F012         	call	_ToMainHigh_sendmsg
  5835  00219E  0012               	return	
  5836  0021A0                     __end_of_uart_recv_int_handler:
  5837                           	opt stack 0
  5838                           pclatu	equ	0xFFB
  5839                           pclath	equ	0xFFA
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           prodh	equ	0xFF4
  5845                           prodl	equ	0xFF3
  5846                           intcon	equ	0xFF2
  5847                           postinc0	equ	0xFEE
  5848                           fsr0h	equ	0xFEA
  5849                           fsr0l	equ	0xFE9
  5850                           wreg	equ	0xFE8
  5851                           indf1	equ	0xFE7
  5852                           postdec1	equ	0xFE5
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           bsr	equ	0xFE0
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _parseUART *****************
  5864 ;; Defined at:
  5865 ;;		line 61 in file "source/my_uart.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  x               1   31[COMRAM] unsigned char 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;		None               void
  5872 ;; Registers used:
  5873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5879 ;;      Params:         0       0       0       0       0
  5880 ;;      Locals:         1       0       0       0       0
  5881 ;;      Temps:          5       0       0       0       0
  5882 ;;      Totals:         6       0       0       0       0
  5883 ;;Total ram usage:        6 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    9
  5886 ;; This function calls:
  5887 ;;		_ToMainLow_sendmsg
  5888 ;; This function is called by:
  5889 ;;		_uart_recv_int_handler
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text30
  5894  0017E0                     __ptext30:
  5895                           	opt stack 0
  5896  0017E0                     _parseUART:
  5897                           	opt stack 15
  5898                           
  5899                           ;my_uart.c: 63: unsigned char x = uc_ptr->buflen;
  5900                           
  5901                           ;incstack = 0
  5902  0017E0  EE20 F004          	lfsr	2,4
  5903  0017E4  5051               	movf	_uc_ptr,w,c
  5904  0017E6  26D9               	addwf	fsr2l,f,c
  5905  0017E8  5052               	movf	_uc_ptr+1,w,c
  5906  0017EA  22DA               	addwfc	fsr2h,f,c
  5907  0017EC  50DF               	movf	indf2,w,c
  5908  0017EE  6E20               	movwf	parseUART@x,c
  5909                           
  5910                           ;my_uart.c: 65: switch(State)
  5911  0017F0  D060               	goto	i1l4542
  5912  0017F2                     i1l4514:
  5913                           
  5914                           ;my_uart.c: 68: {
  5915                           ;my_uart.c: 69: command_length = buffer_temp[buf_len -1] & 0xF;
  5916  0017F2  0EFF               	movlw	255
  5917  0017F4  6E1B               	movwf	??_parseUART& (0+255),c
  5918  0017F6  0EFF               	movlw	255
  5919  0017F8  6E1C               	movwf	(??_parseUART+1)& (0+255),c
  5920  0017FA  5042               	movf	_buf_len,w,c
  5921  0017FC  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5922  0017FE  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  5923  001800  501B               	movf	??_parseUART,w,c
  5924  001802  261D               	addwf	??_parseUART+2,f,c
  5925  001804  501C               	movf	??_parseUART+1,w,c
  5926  001806  221E               	addwfc	??_parseUART+3,f,c
  5927  001808  0E45               	movlw	low _buffer_temp
  5928  00180A  241D               	addwf	??_parseUART+2,w,c
  5929  00180C  6ED9               	movwf	fsr2l,c
  5930  00180E  0E00               	movlw	high _buffer_temp
  5931  001810  201E               	addwfc	??_parseUART+3,w,c
  5932  001812  6EDA               	movwf	fsr2h,c
  5933  001814  50DF               	movf	indf2,w,c
  5934  001816  0B0F               	andlw	15
  5935  001818  6E44               	movwf	_command_length,c
  5936                           
  5937                           ;my_uart.c: 71: if(command_length != 0)
  5938  00181A  5044               	movf	_command_length,w,c
  5939  00181C  B4D8               	btfsc	status,2,c
  5940  00181E  D005               	goto	i1l4520
  5941                           
  5942                           ;my_uart.c: 72: {
  5943                           ;my_uart.c: 73: State = GET_COMMAND;
  5944  001820  6E1B               	movwf	??_parseUART& (0+255),c
  5945  001822  0E01               	movlw	1
  5946  001824  6E40               	movwf	_State,c
  5947  001826  501B               	movf	??_parseUART& (0+255),w,c
  5948                           
  5949                           ;my_uart.c: 74: }
  5950  001828  0012               	return	
  5951  00182A                     i1l4520:
  5952                           
  5953                           ;my_uart.c: 75: else
  5954                           ;my_uart.c: 76: {
  5955                           ;my_uart.c: 77: State = CHECKSUM;
  5956  00182A  6E1B               	movwf	??_parseUART& (0+255),c
  5957  00182C  0E02               	movlw	2
  5958  00182E  6E40               	movwf	_State,c
  5959  001830  501B               	movf	??_parseUART& (0+255),w,c
  5960  001832  0012               	return	
  5961  001834                     i1l4522:
  5962                           
  5963                           ;my_uart.c: 82: {
  5964                           ;my_uart.c: 83: if(command_count+1 < command_length)
  5965  001834  5044               	movf	_command_length,w,c
  5966  001836  6E1B               	movwf	??_parseUART& (0+255),c
  5967  001838  6A1C               	clrf	(??_parseUART+1)& (0+255),c
  5968  00183A  5043               	movf	_command_count,w,c
  5969  00183C  6E1D               	movwf	(??_parseUART+2)& (0+255),c
  5970  00183E  6A1E               	clrf	(??_parseUART+3)& (0+255),c
  5971  001840  0E01               	movlw	1
  5972  001842  261D               	addwf	??_parseUART+2,f,c
  5973  001844  0E00               	movlw	0
  5974  001846  221E               	addwfc	??_parseUART+3,f,c
  5975  001848  501E               	movf	??_parseUART+3,w,c
  5976  00184A  0A80               	xorlw	128
  5977  00184C  6E1F               	movwf	(??_parseUART+4)& (0+255),c
  5978  00184E  501B               	movf	??_parseUART,w,c
  5979  001850  5C1D               	subwf	??_parseUART+2,w,c
  5980  001852  501C               	movf	??_parseUART+1,w,c
  5981  001854  0A80               	xorlw	128
  5982  001856  581F               	subwfb	(??_parseUART+4)& (0+255),w,c
  5983  001858  B0D8               	btfsc	status,0,c
  5984  00185A  D002               	goto	i1l4526
  5985                           
  5986                           ;my_uart.c: 84: {
  5987                           ;my_uart.c: 85: command_count++;
  5988  00185C  2A43               	incf	_command_count,f,c
  5989                           
  5990                           ;my_uart.c: 86: }
  5991  00185E  0012               	return	
  5992  001860                     i1l4526:
  5993                           
  5994                           ;my_uart.c: 87: else
  5995                           ;my_uart.c: 88: {
  5996                           ;my_uart.c: 89: State = CHECKSUM;
  5997  001860  6E1B               	movwf	??_parseUART& (0+255),c
  5998  001862  0E02               	movlw	2
  5999  001864  6E40               	movwf	_State,c
  6000  001866  501B               	movf	??_parseUART& (0+255),w,c
  6001  001868  0012               	return	
  6002  00186A                     i1l4528:
  6003                           
  6004                           ;my_uart.c: 94: {
  6005                           ;my_uart.c: 95: ToMainLow_sendmsg(buf_len ,49, &buffer_temp[0]);
  6006  00186A  6E1B               	movwf	??_parseUART& (0+255),c
  6007  00186C  0E31               	movlw	49
  6008  00186E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6009  001870  501B               	movf	??_parseUART& (0+255),w,c
  6010  001872  0E00               	movlw	high _buffer_temp
  6011  001874  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6012  001876  0E45               	movlw	low _buffer_temp
  6013  001878  6E18               	movwf	ToMainLow_sendmsg@data,c
  6014  00187A  5042               	movf	_buf_len,w,c
  6015  00187C  EC4A  F012         	call	_ToMainLow_sendmsg
  6016                           
  6017                           ;my_uart.c: 96: uc_ptr->buflen = 0;
  6018  001880  EE20 F004          	lfsr	2,4
  6019  001884  5051               	movf	_uc_ptr,w,c
  6020  001886  26D9               	addwf	fsr2l,f,c
  6021  001888  5052               	movf	_uc_ptr+1,w,c
  6022  00188A  22DA               	addwfc	fsr2h,f,c
  6023  00188C  0E00               	movlw	0
  6024  00188E  6EDF               	movwf	indf2,c
  6025                           
  6026                           ;my_uart.c: 97: buf_len = 0;
  6027  001890  6E1B               	movwf	??_parseUART& (0+255),c
  6028  001892  0E00               	movlw	0
  6029  001894  6E42               	movwf	_buf_len,c
  6030  001896  501B               	movf	??_parseUART& (0+255),w,c
  6031                           
  6032                           ;my_uart.c: 98: State = GET_MSGID;
  6033  001898  6E1B               	movwf	??_parseUART& (0+255),c
  6034  00189A  0E00               	movlw	0
  6035  00189C  6E40               	movwf	_State,c
  6036  00189E  501B               	movf	??_parseUART& (0+255),w,c
  6037                           
  6038                           ;my_uart.c: 99: command_count = 0;
  6039  0018A0  6E1B               	movwf	??_parseUART& (0+255),c
  6040  0018A2  0E00               	movlw	0
  6041  0018A4  6E43               	movwf	_command_count,c
  6042  0018A6  501B               	movf	??_parseUART& (0+255),w,c
  6043                           
  6044                           ;my_uart.c: 100: command_length = 0;
  6045  0018A8  6E1B               	movwf	??_parseUART& (0+255),c
  6046  0018AA  0E00               	movlw	0
  6047  0018AC  6E44               	movwf	_command_length,c
  6048  0018AE  501B               	movf	??_parseUART& (0+255),w,c
  6049                           
  6050                           ;my_uart.c: 101: break;
  6051  0018B0  0012               	return	
  6052  0018B2                     i1l4542:
  6053  0018B2  5040               	movf	_State,w,c
  6054                           
  6055                           ; Switch size 1, requested type "space"
  6056                           ; Number of cases is 3, Range of values is 0 to 2
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte           10     6 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  0018B4  0A00               	xorlw	0	; case 0
  6062  0018B6  B4D8               	btfsc	status,2,c
  6063  0018B8  D79C               	goto	i1l4514
  6064  0018BA  0A01               	xorlw	1	; case 1
  6065  0018BC  B4D8               	btfsc	status,2,c
  6066  0018BE  D7BA               	goto	i1l4522
  6067  0018C0  0A03               	xorlw	3	; case 2
  6068  0018C2  A4D8               	btfss	status,2,c
  6069  0018C4  0012               	return	
  6070  0018C6  D7D1               	goto	i1l4528
  6071  0018C8                     __end_of_parseUART:
  6072                           	opt stack 0
  6073                           pclatu	equ	0xFFB
  6074                           pclath	equ	0xFFA
  6075                           tblptru	equ	0xFF8
  6076                           tblptrh	equ	0xFF7
  6077                           tblptrl	equ	0xFF6
  6078                           tablat	equ	0xFF5
  6079                           prodh	equ	0xFF4
  6080                           prodl	equ	0xFF3
  6081                           intcon	equ	0xFF2
  6082                           postinc0	equ	0xFEE
  6083                           fsr0h	equ	0xFEA
  6084                           fsr0l	equ	0xFE9
  6085                           wreg	equ	0xFE8
  6086                           indf1	equ	0xFE7
  6087                           postdec1	equ	0xFE5
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           bsr	equ	0xFE0
  6091                           indf2	equ	0xFDF
  6092                           postinc2	equ	0xFDE
  6093                           postdec2	equ	0xFDD
  6094                           fsr2h	equ	0xFDA
  6095                           fsr2l	equ	0xFD9
  6096                           status	equ	0xFD8
  6097                           
  6098 ;; *************** function _ToMainLow_sendmsg *****************
  6099 ;; Defined at:
  6100 ;;		line 103 in file "source/messages.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  length          1    wreg     unsigned char 
  6103 ;;  msgtype         1   22[COMRAM] unsigned char 
  6104 ;;  data            2   23[COMRAM] PTR void 
  6105 ;;		 -> buffer_temp(4), NULL(0), main@ic(53), 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  length          1   25[COMRAM] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      char 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6117 ;;      Params:         3       0       0       0       0
  6118 ;;      Locals:         1       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0
  6120 ;;      Totals:         4       0       0       0       0
  6121 ;;Total ram usage:        4 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    8
  6124 ;; This function calls:
  6125 ;;		_send_msg
  6126 ;; This function is called by:
  6127 ;;		_parseUART
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text31
  6132  002494                     __ptext31:
  6133                           	opt stack 0
  6134  002494                     _ToMainLow_sendmsg:
  6135                           	opt stack 15
  6136                           
  6137                           ;incstack = 0
  6138                           ;ToMainLow_sendmsg@length stored from wreg
  6139  002494  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6140                           
  6141                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6142                           ;	Return value of _ToMainLow_sendmsg is never used
  6143  002498  0101               	movlb	1	; () banked
  6144  00249A  0E01               	movlw	high _ToMainLow_MQ
  6145  00249C  6E0C               	movwf	send_msg@qptr+1,c
  6146  00249E  0101               	movlb	1	; () banked
  6147  0024A0  0E6C               	movlw	low _ToMainLow_MQ
  6148  0024A2  6E0B               	movwf	send_msg@qptr,c
  6149  0024A4  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  6150  0024A8  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  6151  0024AC  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  6152  0024B0  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  6153  0024B4  ECA0  F00D         	call	_send_msg	;wreg free
  6154  0024B8  0012               	return	
  6155  0024BA                     __end_of_ToMainLow_sendmsg:
  6156                           	opt stack 0
  6157                           pclatu	equ	0xFFB
  6158                           pclath	equ	0xFFA
  6159                           tblptru	equ	0xFF8
  6160                           tblptrh	equ	0xFF7
  6161                           tblptrl	equ	0xFF6
  6162                           tablat	equ	0xFF5
  6163                           prodh	equ	0xFF4
  6164                           prodl	equ	0xFF3
  6165                           intcon	equ	0xFF2
  6166                           postinc0	equ	0xFEE
  6167                           fsr0h	equ	0xFEA
  6168                           fsr0l	equ	0xFE9
  6169                           wreg	equ	0xFE8
  6170                           indf1	equ	0xFE7
  6171                           postdec1	equ	0xFE5
  6172                           fsr1h	equ	0xFE2
  6173                           fsr1l	equ	0xFE1
  6174                           bsr	equ	0xFE0
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _ToMainHigh_sendmsg *****************
  6183 ;; Defined at:
  6184 ;;		line 126 in file "source/messages.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  length          1    wreg     unsigned char 
  6187 ;;  msgtype         1   22[COMRAM] unsigned char 
  6188 ;;  data            2   23[COMRAM] PTR void 
  6189 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  length          1   25[COMRAM] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      char 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6201 ;;      Params:         3       0       0       0       0
  6202 ;;      Locals:         1       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0
  6204 ;;      Totals:         4       0       0       0       0
  6205 ;;Total ram usage:        4 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    8
  6208 ;; This function calls:
  6209 ;;		_send_msg
  6210 ;; This function is called by:
  6211 ;;		_uart_recv_int_handler
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text32
  6216  0024BA                     __ptext32:
  6217                           	opt stack 0
  6218  0024BA                     _ToMainHigh_sendmsg:
  6219                           	opt stack 16
  6220                           
  6221                           ;incstack = 0
  6222                           ;ToMainHigh_sendmsg@length stored from wreg
  6223  0024BA  CFE8 F01A          	movff	wreg,ToMainHigh_sendmsg@length
  6224                           
  6225                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6226                           ;	Return value of _ToMainHigh_sendmsg is never used
  6227  0024BE  0101               	movlb	1	; () banked
  6228  0024C0  0E01               	movlw	high _ToMainHigh_MQ
  6229  0024C2  6E0C               	movwf	send_msg@qptr+1,c
  6230  0024C4  0101               	movlb	1	; () banked
  6231  0024C6  0E36               	movlw	low _ToMainHigh_MQ
  6232  0024C8  6E0B               	movwf	send_msg@qptr,c
  6233  0024CA  C01A  F00D         	movff	ToMainHigh_sendmsg@length,send_msg@length
  6234  0024CE  C017  F00E         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  6235  0024D2  C019  F010         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  6236  0024D6  C018  F00F         	movff	ToMainHigh_sendmsg@data,send_msg@data
  6237  0024DA  ECA0  F00D         	call	_send_msg	;wreg free
  6238  0024DE  0012               	return	
  6239  0024E0                     __end_of_ToMainHigh_sendmsg:
  6240                           	opt stack 0
  6241                           pclatu	equ	0xFFB
  6242                           pclath	equ	0xFFA
  6243                           tblptru	equ	0xFF8
  6244                           tblptrh	equ	0xFF7
  6245                           tblptrl	equ	0xFF6
  6246                           tablat	equ	0xFF5
  6247                           prodh	equ	0xFF4
  6248                           prodl	equ	0xFF3
  6249                           intcon	equ	0xFF2
  6250                           postinc0	equ	0xFEE
  6251                           fsr0h	equ	0xFEA
  6252                           fsr0l	equ	0xFE9
  6253                           wreg	equ	0xFE8
  6254                           indf1	equ	0xFE7
  6255                           postdec1	equ	0xFE5
  6256                           fsr1h	equ	0xFE2
  6257                           fsr1l	equ	0xFE1
  6258                           bsr	equ	0xFE0
  6259                           indf2	equ	0xFDF
  6260                           postinc2	equ	0xFDE
  6261                           postdec2	equ	0xFDD
  6262                           fsr2h	equ	0xFDA
  6263                           fsr2l	equ	0xFD9
  6264                           status	equ	0xFD8
  6265                           
  6266 ;; *************** function _send_msg *****************
  6267 ;; Defined at:
  6268 ;;		line 24 in file "source/messages.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6271 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6272 ;;  length          1   12[COMRAM] unsigned char 
  6273 ;;  msgtype         1   13[COMRAM] unsigned char 
  6274 ;;  data            2   14[COMRAM] PTR void 
  6275 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  6278 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6279 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6280 ;;  tlength         2   17[COMRAM] unsigned int 
  6281 ;;  slot            1   19[COMRAM] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      char 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6291 ;;      Params:         6       0       0       0       0
  6292 ;;      Locals:         5       0       0       0       0
  6293 ;;      Temps:          1       0       0       0       0
  6294 ;;      Totals:        12       0       0       0       0
  6295 ;;Total ram usage:       12 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    7
  6298 ;; This function calls:
  6299 ;;		i1_memcpy
  6300 ;; This function is called by:
  6301 ;;		_ToMainLow_sendmsg
  6302 ;;		_ToMainHigh_sendmsg
  6303 ;;		_FromMainLow_sendmsg
  6304 ;;		_FromMainHigh_sendmsg
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text33
  6309  001B40                     __ptext33:
  6310                           	opt stack 0
  6311  001B40                     _send_msg:
  6312                           	opt stack 15
  6313                           
  6314                           ;messages.c: 25: unsigned char slot;
  6315                           ;messages.c: 27: msg *qmsg;
  6316                           ;messages.c: 28: size_t tlength = length;
  6317                           
  6318                           ;incstack = 0
  6319  001B40  C00D  F012         	movff	send_msg@length,send_msg@tlength
  6320  001B44  6A13               	clrf	send_msg@tlength+1,c
  6321                           
  6322                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6323  001B46  EE20 F034          	lfsr	2,52
  6324  001B4A  500B               	movf	send_msg@qptr,w,c
  6325  001B4C  26D9               	addwf	fsr2l,f,c
  6326  001B4E  500C               	movf	send_msg@qptr+1,w,c
  6327  001B50  22DA               	addwfc	fsr2h,f,c
  6328  001B52  50DF               	movf	indf2,w,c
  6329  001B54  6E14               	movwf	send_msg@slot,c
  6330                           
  6331                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6332  001B56  5014               	movf	send_msg@slot,w,c
  6333  001B58  0D0D               	mullw	13
  6334  001B5A  50F3               	movf	prodl,w,c
  6335  001B5C  240B               	addwf	send_msg@qptr,w,c
  6336  001B5E  6E15               	movwf	send_msg@qmsg,c
  6337  001B60  50F4               	movf	prodh,w,c
  6338  001B62  200C               	addwfc	send_msg@qptr+1,w,c
  6339  001B64  6E16               	movwf	send_msg@qmsg+1,c
  6340                           
  6341                           ;messages.c: 41: if (qmsg->full != 0) {
  6342  001B66  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6343  001B6A  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6344  001B6E  50DF               	movf	indf2,w,c
  6345  001B70  B4D8               	btfsc	status,2,c
  6346  001B72  D002               	goto	i1l4492
  6347                           
  6348                           ;messages.c: 42: return (-1);
  6349  001B74  0EFF               	movlw	255
  6350  001B76  0012               	return	
  6351  001B78                     i1l4492:
  6352                           
  6353                           ;messages.c: 43: }
  6354                           ;messages.c: 46: qmsg->length = length;
  6355  001B78  EE20 F001          	lfsr	2,1
  6356  001B7C  5015               	movf	send_msg@qmsg,w,c
  6357  001B7E  26D9               	addwf	fsr2l,f,c
  6358  001B80  5016               	movf	send_msg@qmsg+1,w,c
  6359  001B82  22DA               	addwfc	fsr2h,f,c
  6360  001B84  C00D  FFDF         	movff	send_msg@length,indf2
  6361                           
  6362                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6363  001B88  EE20 F002          	lfsr	2,2
  6364  001B8C  5015               	movf	send_msg@qmsg,w,c
  6365  001B8E  26D9               	addwf	fsr2l,f,c
  6366  001B90  5016               	movf	send_msg@qmsg+1,w,c
  6367  001B92  22DA               	addwfc	fsr2h,f,c
  6368  001B94  C00E  FFDF         	movff	send_msg@msgtype,indf2
  6369                           
  6370                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6371  001B98  0E03               	movlw	3
  6372  001B9A  2415               	addwf	send_msg@qmsg,w,c
  6373  001B9C  6E01               	movwf	i1memcpy@d1,c
  6374  001B9E  0E00               	movlw	0
  6375  001BA0  2016               	addwfc	send_msg@qmsg+1,w,c
  6376  001BA2  6E02               	movwf	i1memcpy@d1+1,c
  6377  001BA4  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  6378  001BA8  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  6379  001BAC  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  6380  001BB0  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  6381  001BB4  EC7A  F011         	call	i1_memcpy	;wreg free
  6382                           
  6383                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6384  001BB8  EE20 F034          	lfsr	2,52
  6385  001BBC  500B               	movf	send_msg@qptr,w,c
  6386  001BBE  26D9               	addwf	fsr2l,f,c
  6387  001BC0  500C               	movf	send_msg@qptr+1,w,c
  6388  001BC2  22DA               	addwfc	fsr2h,f,c
  6389  001BC4  EE10 F034          	lfsr	1,52
  6390  001BC8  500B               	movf	send_msg@qptr,w,c
  6391  001BCA  26E1               	addwf	fsr1l,f,c
  6392  001BCC  500C               	movf	send_msg@qptr+1,w,c
  6393  001BCE  22E2               	addwfc	fsr1h,f,c
  6394  001BD0  50E7               	movf	indf1,w,c
  6395  001BD2  6E11               	movwf	??_send_msg& (0+255),c
  6396  001BD4  2811               	incf	??_send_msg,w,c
  6397  001BD6  0B03               	andlw	3
  6398  001BD8  6EDF               	movwf	indf2,c
  6399                           
  6400                           ;messages.c: 59: qmsg->full = 1;
  6401  001BDA  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6402  001BDE  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6403  001BE2  0E01               	movlw	1
  6404  001BE4  6EDF               	movwf	indf2,c
  6405                           
  6406                           ;messages.c: 60: return (1);
  6407  001BE6  0E01               	movlw	1
  6408  001BE8  0012               	return	
  6409  001BEA                     __end_of_send_msg:
  6410                           	opt stack 0
  6411                           pclatu	equ	0xFFB
  6412                           pclath	equ	0xFFA
  6413                           tblptru	equ	0xFF8
  6414                           tblptrh	equ	0xFF7
  6415                           tblptrl	equ	0xFF6
  6416                           tablat	equ	0xFF5
  6417                           prodh	equ	0xFF4
  6418                           prodl	equ	0xFF3
  6419                           intcon	equ	0xFF2
  6420                           postinc0	equ	0xFEE
  6421                           fsr0h	equ	0xFEA
  6422                           fsr0l	equ	0xFE9
  6423                           wreg	equ	0xFE8
  6424                           indf1	equ	0xFE7
  6425                           postdec1	equ	0xFE5
  6426                           fsr1h	equ	0xFE2
  6427                           fsr1l	equ	0xFE1
  6428                           bsr	equ	0xFE0
  6429                           indf2	equ	0xFDF
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function i1_memcpy *****************
  6437 ;; Defined at:
  6438 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  d1              2    0[COMRAM] PTR void 
  6441 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6442 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6443 ;;		 -> main@msgbuffer(11), 
  6444 ;;  s1              2    2[COMRAM] PTR const void 
  6445 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6446 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6447 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6448 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(53), 
  6449 ;;  n               2    4[COMRAM] unsigned int 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6452 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6453 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6454 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  6455 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(53), 
  6456 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6457 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6458 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6459 ;;		 -> main@msgbuffer(11), 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2    0[COMRAM] PTR void 
  6462 ;; Registers used:
  6463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6469 ;;      Params:         6       0       0       0       0
  6470 ;;      Locals:         4       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0
  6472 ;;      Totals:        10       0       0       0       0
  6473 ;;Total ram usage:       10 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    6
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_send_msg
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text34
  6484  0022F4                     __ptext34:
  6485                           	opt stack 0
  6486  0022F4                     i1_memcpy:
  6487                           	opt stack 15
  6488                           
  6489                           ;incstack = 0
  6490  0022F4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6491  0022F8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6492  0022FC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6493  002300  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6494  002304  D00E               	goto	i1l4468
  6495  002306                     i1l4462:
  6496  002306  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6497  00230A  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6498  00230E  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6499  002312  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6500  002316  CFDF FFE7          	movff	indf2,indf1
  6501  00231A  4A09               	infsnz	i1memcpy@s,f,c
  6502  00231C  2A0A               	incf	i1memcpy@s+1,f,c
  6503  00231E  4A07               	infsnz	i1memcpy@d,f,c
  6504  002320  2A08               	incf	i1memcpy@d+1,f,c
  6505  002322                     i1l4468:
  6506  002322  0605               	decf	i1memcpy@n,f,c
  6507  002324  A0D8               	btfss	status,0,c
  6508  002326  0606               	decf	i1memcpy@n+1,f,c
  6509  002328  2805               	incf	i1memcpy@n& (0+255),w,c
  6510  00232A  B4D8               	btfsc	status,2,c
  6511  00232C  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6512  00232E  B4D8               	btfsc	status,2,c
  6513                           
  6514                           ;	Return value of i1_memcpy is never used
  6515  002330  0012               	return	
  6516  002332  D7E9               	goto	i1l4462
  6517  002334                     __end_ofi1_memcpy:
  6518                           	opt stack 0
  6519                           pclatu	equ	0xFFB
  6520                           pclath	equ	0xFFA
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           intcon	equ	0xFF2
  6528                           postinc0	equ	0xFEE
  6529                           fsr0h	equ	0xFEA
  6530                           fsr0l	equ	0xFE9
  6531                           wreg	equ	0xFE8
  6532                           indf1	equ	0xFE7
  6533                           postdec1	equ	0xFE5
  6534                           fsr1h	equ	0xFE2
  6535                           fsr1l	equ	0xFE1
  6536                           bsr	equ	0xFE0
  6537                           indf2	equ	0xFDF
  6538                           postinc2	equ	0xFDE
  6539                           postdec2	equ	0xFDD
  6540                           fsr2h	equ	0xFDA
  6541                           fsr2l	equ	0xFD9
  6542                           status	equ	0xFD8
  6543                           
  6544 ;; *************** function _ReadUSART *****************
  6545 ;; Defined at:
  6546 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uread.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;		None
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  data            1    0[COMRAM] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      unsigned char 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6560 ;;      Params:         0       0       0       0       0
  6561 ;;      Locals:         1       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0
  6563 ;;      Totals:         1       0       0       0       0
  6564 ;;Total ram usage:        1 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    6
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_uart_recv_int_handler
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text35
  6575  002502                     __ptext35:
  6576                           	opt stack 0
  6577  002502                     _ReadUSART:
  6578                           	opt stack 18
  6579                           
  6580                           ;incstack = 0
  6581  002502  0EF2               	movlw	242
  6582  002504  1641               	andwf	_USART_Status,f,c
  6583  002506  ACAB               	btfss	4011,6,c	;volatile
  6584  002508  D003               	goto	i1l658
  6585  00250A  9041               	bcf	_USART_Status,0,c
  6586  00250C  B0AB               	btfsc	4011,0,c	;volatile
  6587  00250E  8041               	bsf	_USART_Status,0,c
  6588  002510                     i1l658:
  6589  002510  B4AB               	btfsc	4011,2,c	;volatile
  6590  002512  8441               	bsf	_USART_Status,2,c
  6591  002514  B2AB               	btfsc	4011,1,c	;volatile
  6592  002516  8641               	bsf	_USART_Status,3,c
  6593  002518  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6594  00251C  5001               	movf	ReadUSART@data,w,c
  6595  00251E  0012               	return	
  6596  002520                     __end_of_ReadUSART:
  6597                           	opt stack 0
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           fsr0h	equ	0xFEA
  6609                           fsr0l	equ	0xFE9
  6610                           wreg	equ	0xFE8
  6611                           indf1	equ	0xFE7
  6612                           postdec1	equ	0xFE5
  6613                           fsr1h	equ	0xFE2
  6614                           fsr1l	equ	0xFE1
  6615                           bsr	equ	0xFE0
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           fsr2h	equ	0xFDA
  6620                           fsr2l	equ	0xFD9
  6621                           status	equ	0xFD8
  6622                           
  6623 ;; *************** function _timer1_int_handler *****************
  6624 ;; Defined at:
  6625 ;;		line 27 in file "source/user_interrupts.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  result          2    4[COMRAM] unsigned int 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;		None               void
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6639 ;;      Params:         0       0       0       0       0
  6640 ;;      Locals:         2       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0
  6642 ;;      Totals:         2       0       0       0       0
  6643 ;;Total ram usage:        2 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    7
  6646 ;; This function calls:
  6647 ;;		_ReadTimer1
  6648 ;;		_WriteTimer1
  6649 ;; This function is called by:
  6650 ;;		_InterruptHandlerLow
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text36
  6655  002520                     __ptext36:
  6656                           	opt stack 0
  6657  002520                     _timer1_int_handler:
  6658                           	opt stack 18
  6659                           
  6660                           ;user_interrupts.c: 28: unsigned int result;
  6661                           ;user_interrupts.c: 30: result = ReadTimer1();
  6662                           
  6663                           ;incstack = 0
  6664  002520  ECD7  F012         	call	_ReadTimer1	;wreg free
  6665  002524  C001  F005         	movff	?_ReadTimer1,timer1_int_handler@result
  6666  002528  C002  F006         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6667                           
  6668                           ;user_interrupts.c: 35: WriteTimer1(0);
  6669  00252C  0E00               	movlw	0
  6670  00252E  6E02               	movwf	WriteTimer1@timer1+1,c
  6671  002530  0E00               	movlw	0
  6672  002532  6E01               	movwf	WriteTimer1@timer1,c
  6673  002534  ECCE  F012         	call	_WriteTimer1	;wreg free
  6674  002538  0012               	return	
  6675  00253A                     __end_of_timer1_int_handler:
  6676                           	opt stack 0
  6677                           pclatu	equ	0xFFB
  6678                           pclath	equ	0xFFA
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           intcon	equ	0xFF2
  6686                           postinc0	equ	0xFEE
  6687                           fsr0h	equ	0xFEA
  6688                           fsr0l	equ	0xFE9
  6689                           wreg	equ	0xFE8
  6690                           indf1	equ	0xFE7
  6691                           postdec1	equ	0xFE5
  6692                           fsr1h	equ	0xFE2
  6693                           fsr1l	equ	0xFE1
  6694                           bsr	equ	0xFE0
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _WriteTimer1 *****************
  6703 ;; Defined at:
  6704 ;;		line 14 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1write.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  timer1          2    0[COMRAM] unsigned int 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  timer           2    2[COMRAM] struct Timers
  6709 ;; Return value:  Size  Location     Type
  6710 ;;		None               void
  6711 ;; Registers used:
  6712 ;;		None
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6718 ;;      Params:         2       0       0       0       0
  6719 ;;      Locals:         2       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0
  6721 ;;      Totals:         4       0       0       0       0
  6722 ;;Total ram usage:        4 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    6
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_timer1_int_handler
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text37
  6733  00259C                     __ptext37:
  6734                           	opt stack 0
  6735  00259C                     _WriteTimer1:
  6736                           	opt stack 18
  6737                           
  6738                           ;incstack = 0
  6739  00259C  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6740  0025A0  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6741  0025A4  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6742  0025A8  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6743  0025AC  0012               	return	
  6744  0025AE                     __end_of_WriteTimer1:
  6745                           	opt stack 0
  6746                           pclatu	equ	0xFFB
  6747                           pclath	equ	0xFFA
  6748                           tblptru	equ	0xFF8
  6749                           tblptrh	equ	0xFF7
  6750                           tblptrl	equ	0xFF6
  6751                           tablat	equ	0xFF5
  6752                           prodh	equ	0xFF4
  6753                           prodl	equ	0xFF3
  6754                           intcon	equ	0xFF2
  6755                           postinc0	equ	0xFEE
  6756                           fsr0h	equ	0xFEA
  6757                           fsr0l	equ	0xFE9
  6758                           wreg	equ	0xFE8
  6759                           indf1	equ	0xFE7
  6760                           postdec1	equ	0xFE5
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           bsr	equ	0xFE0
  6764                           indf2	equ	0xFDF
  6765                           postinc2	equ	0xFDE
  6766                           postdec2	equ	0xFDD
  6767                           fsr2h	equ	0xFDA
  6768                           fsr2l	equ	0xFD9
  6769                           status	equ	0xFD8
  6770                           
  6771 ;; *************** function _ReadTimer1 *****************
  6772 ;; Defined at:
  6773 ;;		line 15 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t1read.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;		None
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  timer           2    2[COMRAM] struct Timers
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2    0[COMRAM] unsigned int 
  6780 ;; Registers used:
  6781 ;;		None
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6787 ;;      Params:         2       0       0       0       0
  6788 ;;      Locals:         2       0       0       0       0
  6789 ;;      Temps:          0       0       0       0       0
  6790 ;;      Totals:         4       0       0       0       0
  6791 ;;Total ram usage:        4 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    6
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_timer1_int_handler
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text38
  6802  0025AE                     __ptext38:
  6803                           	opt stack 0
  6804  0025AE                     _ReadTimer1:
  6805                           	opt stack 18
  6806                           
  6807                           ;incstack = 0
  6808  0025AE  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6809  0025B2  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6810  0025B6  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6811  0025BA  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6812  0025BE  0012               	return	
  6813  0025C0                     __end_of_ReadTimer1:
  6814                           	opt stack 0
  6815                           pclatu	equ	0xFFB
  6816                           pclath	equ	0xFFA
  6817                           tblptru	equ	0xFF8
  6818                           tblptrh	equ	0xFF7
  6819                           tblptrl	equ	0xFF6
  6820                           tablat	equ	0xFF5
  6821                           prodh	equ	0xFF4
  6822                           prodl	equ	0xFF3
  6823                           intcon	equ	0xFF2
  6824                           postinc0	equ	0xFEE
  6825                           fsr0h	equ	0xFEA
  6826                           fsr0l	equ	0xFE9
  6827                           wreg	equ	0xFE8
  6828                           indf1	equ	0xFE7
  6829                           postdec1	equ	0xFE5
  6830                           fsr1h	equ	0xFE2
  6831                           fsr1l	equ	0xFE1
  6832                           bsr	equ	0xFE0
  6833                           indf2	equ	0xFDF
  6834                           postinc2	equ	0xFDE
  6835                           postdec2	equ	0xFDD
  6836                           fsr2h	equ	0xFDA
  6837                           fsr2l	equ	0xFD9
  6838                           status	equ	0xFD8
  6839                           
  6840 ;; *************** function _InterruptHandlerHigh *****************
  6841 ;; Defined at:
  6842 ;;		line 83 in file "source/interrupts.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;		None
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;		None               void
  6849 ;; Registers used:
  6850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6856 ;;      Params:         0       0       0       0       0
  6857 ;;      Locals:         0       0       0       0       0
  6858 ;;      Temps:          0      14       0       0       0
  6859 ;;      Totals:         0      14       0       0       0
  6860 ;;Total ram usage:       14 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    5
  6863 ;; This function calls:
  6864 ;;		_SleepIfOkay
  6865 ;;		_i2c_int_handler
  6866 ;;		_timer0_int_handler
  6867 ;; This function is called by:
  6868 ;;		Interrupt level 2
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	intcode
  6873  000008                     __pintcode:
  6874                           	opt stack 0
  6875  000008                     _InterruptHandlerHigh:
  6876                           	opt stack 15
  6877                           
  6878                           ;incstack = 0
  6879  000008  CFFA F0A5          	movff	pclath,??_InterruptHandlerHigh
  6880  00000C  CFFB F0A6          	movff	pclatu,??_InterruptHandlerHigh+1
  6881  000010  EF3E  F00E         	goto	int_func
  6882                           pclatu	equ	0xFFB
  6883                           pclath	equ	0xFFA
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           prodh	equ	0xFF4
  6889                           prodl	equ	0xFF3
  6890                           intcon	equ	0xFF2
  6891                           postinc0	equ	0xFEE
  6892                           fsr0h	equ	0xFEA
  6893                           fsr0l	equ	0xFE9
  6894                           wreg	equ	0xFE8
  6895                           indf1	equ	0xFE7
  6896                           postdec1	equ	0xFE5
  6897                           fsr1h	equ	0xFE2
  6898                           fsr1l	equ	0xFE1
  6899                           bsr	equ	0xFE0
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           fsr2h	equ	0xFDA
  6904                           fsr2l	equ	0xFD9
  6905                           status	equ	0xFD8
  6906                           
  6907                           	psect	intcode_body
  6908  001C7C                     __pintcode_body:
  6909                           	opt stack 15
  6910  001C7C                     int_func:
  6911                           	opt stack 15
  6912  001C7C  CFE9 F0A7          	movff	fsr0l,??_InterruptHandlerHigh+2
  6913  001C80  CFEA F0A8          	movff	fsr0h,??_InterruptHandlerHigh+3
  6914  001C84  CFE1 F0A9          	movff	fsr1l,??_InterruptHandlerHigh+4
  6915  001C88  CFE2 F0AA          	movff	fsr1h,??_InterruptHandlerHigh+5
  6916  001C8C  CFD9 F0AB          	movff	fsr2l,??_InterruptHandlerHigh+6
  6917  001C90  CFDA F0AC          	movff	fsr2h,??_InterruptHandlerHigh+7
  6918  001C94  CFF3 F0AD          	movff	prodl,??_InterruptHandlerHigh+8
  6919  001C98  CFF4 F0AE          	movff	prodh,??_InterruptHandlerHigh+9
  6920  001C9C  CFF6 F0AF          	movff	tblptrl,??_InterruptHandlerHigh+10
  6921  001CA0  CFF7 F0B0          	movff	tblptrh,??_InterruptHandlerHigh+11
  6922  001CA4  CFF8 F0B1          	movff	tblptru,??_InterruptHandlerHigh+12
  6923  001CA8  CFF5 F0B2          	movff	tablat,??_InterruptHandlerHigh+13
  6924                           
  6925                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  6926  001CAC  A69E               	btfss	3998,3,c	;volatile
  6927  001CAE  D003               	goto	i2l3558
  6928                           
  6929                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  6930  001CB0  969E               	bcf	3998,3,c	;volatile
  6931                           
  6932                           ;interrupts.c: 92: i2c_int_handler();
  6933  001CB2  EC70  F012         	call	_i2c_int_handler	;wreg free
  6934  001CB6                     i2l3558:
  6935                           
  6936                           ;interrupts.c: 93: }
  6937                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  6938  001CB6  A4F2               	btfss	intcon,2,c	;volatile
  6939  001CB8  D003               	goto	i2l3564
  6940                           
  6941                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  6942  001CBA  94F2               	bcf	intcon,2,c	;volatile
  6943                           
  6944                           ;interrupts.c: 99: timer0_int_handler();
  6945  001CBC  ECB2  F012         	call	_timer0_int_handler	;wreg free
  6946  001CC0                     i2l3564:
  6947                           
  6948                           ;interrupts.c: 100: }
  6949                           ;interrupts.c: 109: SleepIfOkay();
  6950  001CC0  EC6B  F00F         	call	_SleepIfOkay	;wreg free
  6951  001CC4  C0B2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6952  001CC8  C0B1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6953  001CCC  C0B0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6954  001CD0  C0AF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6955  001CD4  C0AE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6956  001CD8  C0AD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6957  001CDC  C0AC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6958  001CE0  C0AB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6959  001CE4  C0AA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6960  001CE8  C0A9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6961  001CEC  C0A8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6962  001CF0  C0A7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6963  001CF4  C0A6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6964  001CF8  C0A5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6965  001CFC  0011               	retfie		f
  6966  001CFE                     __end_of_InterruptHandlerHigh:
  6967                           	opt stack 0
  6968                           pclatu	equ	0xFFB
  6969                           pclath	equ	0xFFA
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodh	equ	0xFF4
  6975                           prodl	equ	0xFF3
  6976                           intcon	equ	0xFF2
  6977                           postinc0	equ	0xFEE
  6978                           fsr0h	equ	0xFEA
  6979                           fsr0l	equ	0xFE9
  6980                           wreg	equ	0xFE8
  6981                           indf1	equ	0xFE7
  6982                           postdec1	equ	0xFE5
  6983                           fsr1h	equ	0xFE2
  6984                           fsr1l	equ	0xFE1
  6985                           bsr	equ	0xFE0
  6986                           indf2	equ	0xFDF
  6987                           postinc2	equ	0xFDE
  6988                           postdec2	equ	0xFDD
  6989                           fsr2h	equ	0xFDA
  6990                           fsr2l	equ	0xFD9
  6991                           status	equ	0xFD8
  6992                           
  6993 ;; *************** function _timer0_int_handler *****************
  6994 ;; Defined at:
  6995 ;;		line 16 in file "source/user_interrupts.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;		None
  7000 ;; Return value:  Size  Location     Type
  7001 ;;		None               void
  7002 ;; Registers used:
  7003 ;;		wreg, status,2, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7009 ;;      Params:         0       0       0       0       0
  7010 ;;      Locals:         0       0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0
  7012 ;;      Totals:         0       0       0       0       0
  7013 ;;Total ram usage:        0 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    1
  7016 ;; This function calls:
  7017 ;;		_WriteTimer0
  7018 ;; This function is called by:
  7019 ;;		_InterruptHandlerHigh
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text40
  7024  002564                     __ptext40:
  7025                           	opt stack 0
  7026  002564                     _timer0_int_handler:
  7027                           	opt stack 18
  7028                           
  7029                           ;user_interrupts.c: 19: WriteTimer0(0);
  7030                           
  7031                           ;incstack = 0
  7032  002564  0E00               	movlw	0
  7033  002566  0100               	movlb	0	; () banked
  7034  002568  0100               	movlb	0	; () banked
  7035  00256A  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7036  00256C  0E00               	movlw	0
  7037  00256E  0100               	movlb	0	; () banked
  7038  002570  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  7039  002572  ECE0  F012         	call	_WriteTimer0	;wreg free
  7040  002576  0012               	return	
  7041  002578                     __end_of_timer0_int_handler:
  7042                           	opt stack 0
  7043                           pclatu	equ	0xFFB
  7044                           pclath	equ	0xFFA
  7045                           tblptru	equ	0xFF8
  7046                           tblptrh	equ	0xFF7
  7047                           tblptrl	equ	0xFF6
  7048                           tablat	equ	0xFF5
  7049                           prodh	equ	0xFF4
  7050                           prodl	equ	0xFF3
  7051                           intcon	equ	0xFF2
  7052                           postinc0	equ	0xFEE
  7053                           fsr0h	equ	0xFEA
  7054                           fsr0l	equ	0xFE9
  7055                           wreg	equ	0xFE8
  7056                           indf1	equ	0xFE7
  7057                           postdec1	equ	0xFE5
  7058                           fsr1h	equ	0xFE2
  7059                           fsr1l	equ	0xFE1
  7060                           bsr	equ	0xFE0
  7061                           indf2	equ	0xFDF
  7062                           postinc2	equ	0xFDE
  7063                           postdec2	equ	0xFDD
  7064                           fsr2h	equ	0xFDA
  7065                           fsr2l	equ	0xFD9
  7066                           status	equ	0xFD8
  7067                           
  7068 ;; *************** function _WriteTimer0 *****************
  7069 ;; Defined at:
  7070 ;;		line 16 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/Timers/t0write.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  timer0          2    0[BANK0 ] unsigned int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  timer           2    2[BANK0 ] struct Timers
  7075 ;; Return value:  Size  Location     Type
  7076 ;;		None               void
  7077 ;; Registers used:
  7078 ;;		None
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7084 ;;      Params:         0       2       0       0       0
  7085 ;;      Locals:         0       2       0       0       0
  7086 ;;      Temps:          0       0       0       0       0
  7087 ;;      Totals:         0       4       0       0       0
  7088 ;;Total ram usage:        4 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_timer0_int_handler
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text41
  7098  0025C0                     __ptext41:
  7099                           	opt stack 0
  7100  0025C0                     _WriteTimer0:
  7101                           	opt stack 18
  7102                           
  7103                           ;incstack = 0
  7104  0025C0  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7105  0025C4  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7106  0025C8  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7107  0025CC  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7108  0025D0  0012               	return	
  7109  0025D2                     __end_of_WriteTimer0:
  7110                           	opt stack 0
  7111                           pclatu	equ	0xFFB
  7112                           pclath	equ	0xFFA
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           prodh	equ	0xFF4
  7118                           prodl	equ	0xFF3
  7119                           intcon	equ	0xFF2
  7120                           postinc0	equ	0xFEE
  7121                           fsr0h	equ	0xFEA
  7122                           fsr0l	equ	0xFE9
  7123                           wreg	equ	0xFE8
  7124                           indf1	equ	0xFE7
  7125                           postdec1	equ	0xFE5
  7126                           fsr1h	equ	0xFE2
  7127                           fsr1l	equ	0xFE1
  7128                           bsr	equ	0xFE0
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           fsr2h	equ	0xFDA
  7133                           fsr2l	equ	0xFD9
  7134                           status	equ	0xFD8
  7135                           
  7136 ;; *************** function _i2c_int_handler *****************
  7137 ;; Defined at:
  7138 ;;		line 196 in file "source/my_i2c.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;		None
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;		None               void
  7145 ;; Registers used:
  7146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7152 ;;      Params:         0       0       0       0       0
  7153 ;;      Locals:         0       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0
  7155 ;;      Totals:         0       0       0       0       0
  7156 ;;Total ram usage:        0 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    4
  7159 ;; This function calls:
  7160 ;;		_i2c_master_int_handler
  7161 ;;		_i2c_slave_int_handler
  7162 ;; This function is called by:
  7163 ;;		_InterruptHandlerHigh
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text42
  7168  0024E0                     __ptext42:
  7169                           	opt stack 0
  7170  0024E0                     _i2c_int_handler:
  7171                           	opt stack 15
  7172                           
  7173                           ;my_i2c.c: 197: switch (i2c_mode){
  7174                           
  7175                           ;incstack = 0
  7176  0024E0  D006               	goto	i2l3574
  7177  0024E2                     i2l3568:
  7178                           
  7179                           ;my_i2c.c: 199: i2c_master_int_handler();
  7180  0024E2  ECF4  F005         	call	_i2c_master_int_handler	;wreg free
  7181                           
  7182                           ;my_i2c.c: 200: break;
  7183  0024E6  0012               	return	
  7184  0024E8                     i2l3570:
  7185                           
  7186                           ;my_i2c.c: 203: i2c_slave_int_handler();
  7187  0024E8  EC5D  F000         	call	_i2c_slave_int_handler	;wreg free
  7188                           
  7189                           ;my_i2c.c: 204: break;
  7190  0024EC  0012               	return	
  7191  0024EE                     i2l3574:
  7192  0024EE  0100               	movlb	0	; () banked
  7193  0024F0  0100               	movlb	0	; () banked
  7194  0024F2  51C8               	movf	_i2c_mode& (0+255),w,b
  7195                           
  7196                           ; Switch size 1, requested type "space"
  7197                           ; Number of cases is 2, Range of values is 1 to 2
  7198                           ; switch strategies available:
  7199                           ; Name         Instructions Cycles
  7200                           ; simple_byte            7     4 (average)
  7201                           ;	Chosen strategy is simple_byte
  7202  0024F4  0A01               	xorlw	1	; case 1
  7203  0024F6  B4D8               	btfsc	status,2,c
  7204  0024F8  D7F4               	goto	i2l3568
  7205  0024FA  0A03               	xorlw	3	; case 2
  7206  0024FC  A4D8               	btfss	status,2,c
  7207  0024FE  0012               	return	
  7208  002500  D7F3               	goto	i2l3570
  7209  002502                     __end_of_i2c_int_handler:
  7210                           	opt stack 0
  7211                           pclatu	equ	0xFFB
  7212                           pclath	equ	0xFFA
  7213                           tblptru	equ	0xFF8
  7214                           tblptrh	equ	0xFF7
  7215                           tblptrl	equ	0xFF6
  7216                           tablat	equ	0xFF5
  7217                           prodh	equ	0xFF4
  7218                           prodl	equ	0xFF3
  7219                           intcon	equ	0xFF2
  7220                           postinc0	equ	0xFEE
  7221                           fsr0h	equ	0xFEA
  7222                           fsr0l	equ	0xFE9
  7223                           wreg	equ	0xFE8
  7224                           indf1	equ	0xFE7
  7225                           postdec1	equ	0xFE5
  7226                           fsr1h	equ	0xFE2
  7227                           fsr1l	equ	0xFE1
  7228                           bsr	equ	0xFE0
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           postdec2	equ	0xFDD
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _i2c_slave_int_handler *****************
  7237 ;; Defined at:
  7238 ;;		line 213 in file "source/my_i2c.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;		None
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  7243 ;;  data_read       1   36[BANK0 ] unsigned char 
  7244 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  7245 ;;  msg_to_send     1   34[BANK0 ] unsigned char 
  7246 ;;  i2c_data        1   33[BANK0 ] unsigned char 
  7247 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  7248 ;;  data_written    1   31[BANK0 ] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;		None               void
  7251 ;; Registers used:
  7252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7258 ;;      Params:         0       0       0       0       0
  7259 ;;      Locals:         0       9       0       0       0
  7260 ;;      Temps:          0       2       0       0       0
  7261 ;;      Totals:         0      11       0       0       0
  7262 ;;Total ram usage:       11 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    3
  7265 ;; This function calls:
  7266 ;;		_handle_start
  7267 ;;		_start_i2c_slave_reply
  7268 ;;		i2_ToMainHigh_sendmsg
  7269 ;; This function is called by:
  7270 ;;		_i2c_int_handler
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text43
  7275  0000BA                     __ptext43:
  7276                           	opt stack 0
  7277  0000BA                     _i2c_slave_int_handler:
  7278                           	opt stack 15
  7279                           
  7280                           ;my_i2c.c: 214: unsigned char i2c_data;
  7281                           ;my_i2c.c: 215: unsigned char data_read = 0;
  7282                           
  7283                           ;incstack = 0
  7284  0000BA  0100               	movlb	0	; () banked
  7285  0000BC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7286  0000BE  0E00               	movlw	0
  7287  0000C0  0100               	movlb	0	; () banked
  7288  0000C2  0100               	movlb	0	; () banked
  7289  0000C4  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7290  0000C6  0100               	movlb	0	; () banked
  7291  0000C8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7292                           
  7293                           ;my_i2c.c: 216: unsigned char data_written = 0;
  7294  0000CA  0100               	movlb	0	; () banked
  7295  0000CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7296  0000CE  0E00               	movlw	0
  7297  0000D0  0100               	movlb	0	; () banked
  7298  0000D2  0100               	movlb	0	; () banked
  7299  0000D4  6F9F               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7300  0000D6  0100               	movlb	0	; () banked
  7301  0000D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7302                           
  7303                           ;my_i2c.c: 217: unsigned char msg_ready = 0;
  7304  0000DA  0100               	movlb	0	; () banked
  7305  0000DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7306  0000DE  0E00               	movlw	0
  7307  0000E0  0100               	movlb	0	; () banked
  7308  0000E2  0100               	movlb	0	; () banked
  7309  0000E4  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7310  0000E6  0100               	movlb	0	; () banked
  7311  0000E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7312                           
  7313                           ;my_i2c.c: 218: unsigned char msg_to_send = 0;
  7314  0000EA  0100               	movlb	0	; () banked
  7315  0000EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7316  0000EE  0E00               	movlw	0
  7317  0000F0  0100               	movlb	0	; () banked
  7318  0000F2  0100               	movlb	0	; () banked
  7319  0000F4  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7320  0000F6  0100               	movlb	0	; () banked
  7321  0000F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7322                           
  7323                           ;my_i2c.c: 219: unsigned char overrun_error = 0;
  7324  0000FA  0100               	movlb	0	; () banked
  7325  0000FC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7326  0000FE  0E00               	movlw	0
  7327  000100  0100               	movlb	0	; () banked
  7328  000102  0100               	movlb	0	; () banked
  7329  000104  6FA0               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7330  000106  0100               	movlb	0	; () banked
  7331  000108  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;my_i2c.c: 220: unsigned char error_buf[3];
  7335                           ;my_i2c.c: 223: if (SSPCON1bits.SSPOV == 1) {
  7336  00010A  ACC6               	btfss	4038,6,c	;volatile
  7337  00010C  D029               	goto	i2l4206
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;my_i2c.c: 224: SSPCON1bits.SSPOV = 0;
  7341  00010E  9CC6               	bcf	4038,6,c	;volatile
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
  7345  000110  0100               	movlb	0	; () banked
  7346  000112  EE20 F00D          	lfsr	2,13
  7347  000116  0100               	movlb	0	; () banked
  7348  000118  51C9               	movf	_ic_ptr& (0+255),w,b
  7349  00011A  26D9               	addwf	fsr2l,f,c
  7350  00011C  0100               	movlb	0	; () banked
  7351  00011E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7352  000120  22DA               	addwfc	fsr2h,f,c
  7353  000122  0E05               	movlw	5
  7354  000124  6EDF               	movwf	indf2,c
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 229: overrun_error = 1;
  7358  000126  0100               	movlb	0	; () banked
  7359  000128  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7360  00012A  0E01               	movlw	1
  7361  00012C  0100               	movlb	0	; () banked
  7362  00012E  0100               	movlb	0	; () banked
  7363  000130  6FA0               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7364  000132  0100               	movlb	0	; () banked
  7365  000134  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;my_i2c.c: 230: ic_ptr->error_count++;
  7369  000136  0100               	movlb	0	; () banked
  7370  000138  EE20 F00F          	lfsr	2,15
  7371  00013C  0100               	movlb	0	; () banked
  7372  00013E  51C9               	movf	_ic_ptr& (0+255),w,b
  7373  000140  26D9               	addwf	fsr2l,f,c
  7374  000142  0100               	movlb	0	; () banked
  7375  000144  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7376  000146  22DA               	addwfc	fsr2h,f,c
  7377  000148  2ADF               	incf	indf2,f,c
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 231: ic_ptr->error_code = 0x4;
  7381  00014A  0100               	movlb	0	; () banked
  7382  00014C  EE20 F00E          	lfsr	2,14
  7383  000150  0100               	movlb	0	; () banked
  7384  000152  51C9               	movf	_ic_ptr& (0+255),w,b
  7385  000154  26D9               	addwf	fsr2l,f,c
  7386  000156  0100               	movlb	0	; () banked
  7387  000158  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7388  00015A  22DA               	addwfc	fsr2h,f,c
  7389  00015C  0E04               	movlw	4
  7390  00015E  6EDF               	movwf	indf2,c
  7391  000160                     i2l4206:
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;my_i2c.c: 232: }
  7395                           ;my_i2c.c: 234: if (SSPSTATbits.BF == 1) {
  7396  000160  A0C7               	btfss	4039,0,c	;volatile
  7397  000162  D00A               	goto	i2l4212
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;my_i2c.c: 235: i2c_data = SSPBUF;
  7401  000164  CFC9 F0A1          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;my_i2c.c: 236: data_read = 1;
  7405  000168  0100               	movlb	0	; () banked
  7406  00016A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7407  00016C  0E01               	movlw	1
  7408  00016E  0100               	movlb	0	; () banked
  7409  000170  0100               	movlb	0	; () banked
  7410  000172  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7411  000174  0100               	movlb	0	; () banked
  7412  000176  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7413  000178                     i2l4212:
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;my_i2c.c: 237: }
  7417                           ;my_i2c.c: 239: if (!overrun_error) {
  7418  000178  0100               	movlb	0	; () banked
  7419  00017A  0100               	movlb	0	; () banked
  7420  00017C  67A0               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7421  00017E  D1CE               	goto	i2l324
  7422  000180  D1B7               	goto	i2l4300
  7423  000182                     i2l326:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;my_i2c.c: 242: {
  7427                           ;my_i2c.c: 244: if (SSPSTATbits.S == 1) {
  7428  000182  A6C7               	btfss	4039,3,c	;volatile
  7429  000184  D1CB               	goto	i2l324
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;my_i2c.c: 245: handle_start(data_read);
  7433  000186  0100               	movlb	0	; () banked
  7434  000188  0100               	movlb	0	; () banked
  7435  00018A  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7436  00018C  EC3A  F00D         	call	_handle_start
  7437                           
  7438                           ;my_i2c.c: 247: if (ic_ptr->status == 0x8) {
  7439  000190  0100               	movlb	0	; () banked
  7440  000192  EE20 F00D          	lfsr	2,13
  7441  000196  0100               	movlb	0	; () banked
  7442  000198  51C9               	movf	_ic_ptr& (0+255),w,b
  7443  00019A  26D9               	addwf	fsr2l,f,c
  7444  00019C  0100               	movlb	0	; () banked
  7445  00019E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7446  0001A0  22DA               	addwfc	fsr2h,f,c
  7447  0001A2  0E08               	movlw	8
  7448  0001A4  62DF               	cpfseq	indf2,c
  7449  0001A6  D1BA               	goto	i2l324
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;my_i2c.c: 248: data_read = 0;
  7453  0001A8  0100               	movlb	0	; () banked
  7454  0001AA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7455  0001AC  0E00               	movlw	0
  7456  0001AE  0100               	movlb	0	; () banked
  7457  0001B0  0100               	movlb	0	; () banked
  7458  0001B2  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7459  0001B4  0100               	movlb	0	; () banked
  7460  0001B6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7461                           
  7462                           ;my_i2c.c: 249: msg_to_send = 1;
  7463  0001B8  0100               	movlb	0	; () banked
  7464  0001BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7465  0001BC  0E01               	movlw	1
  7466  0001BE  0100               	movlb	0	; () banked
  7467  0001C0  0100               	movlb	0	; () banked
  7468  0001C2  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7469  0001C4  D187               	goto	L8
  7470  0001C6                     i2l330:
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;my_i2c.c: 255: {
  7474                           ;my_i2c.c: 257: if (SSPSTATbits.P == 1) {
  7475  0001C6  A8C7               	btfss	4039,4,c	;volatile
  7476  0001C8  D030               	goto	i2l4232
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;my_i2c.c: 260: ic_ptr->event_count++;
  7480  0001CA  0100               	movlb	0	; () banked
  7481  0001CC  EE20 F00C          	lfsr	2,12
  7482  0001D0  0100               	movlb	0	; () banked
  7483  0001D2  51C9               	movf	_ic_ptr& (0+255),w,b
  7484  0001D4  26D9               	addwf	fsr2l,f,c
  7485  0001D6  0100               	movlb	0	; () banked
  7486  0001D8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7487  0001DA  22DA               	addwfc	fsr2h,f,c
  7488  0001DC  2ADF               	incf	indf2,f,c
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;my_i2c.c: 261: if (data_read) {
  7492  0001DE  0100               	movlb	0	; () banked
  7493  0001E0  0100               	movlb	0	; () banked
  7494  0001E2  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7495  0001E4  B4D8               	btfsc	status,2,c
  7496  0001E6  D179               	goto	L10
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;my_i2c.c: 262: if (SSPSTATbits.D_A == 0) {
  7500  0001E8  BAC7               	btfsc	4039,5,c	;volatile
  7501  0001EA  D009               	goto	i2l4230
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;my_i2c.c: 263: msg_ready = 1;
  7505  0001EC  0100               	movlb	0	; () banked
  7506  0001EE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7507  0001F0  0E01               	movlw	1
  7508  0001F2  0100               	movlb	0	; () banked
  7509  0001F4  0100               	movlb	0	; () banked
  7510  0001F6  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7511  0001F8  0100               	movlb	0	; () banked
  7512  0001FA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7513                           
  7514                           ;my_i2c.c: 264: } else {
  7515  0001FC  D16E               	goto	L10
  7516  0001FE                     i2l4230:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7520  0001FE  0100               	movlb	0	; () banked
  7521  000200  EE20 F00F          	lfsr	2,15
  7522  000204  0100               	movlb	0	; () banked
  7523  000206  51C9               	movf	_ic_ptr& (0+255),w,b
  7524  000208  26D9               	addwf	fsr2l,f,c
  7525  00020A  0100               	movlb	0	; () banked
  7526  00020C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7527  00020E  22DA               	addwfc	fsr2h,f,c
  7528  000210  2ADF               	incf	indf2,f,c
  7529                           
  7530                           ;my_i2c.c: 266: ic_ptr->error_code = 0x6;
  7531  000212  0100               	movlb	0	; () banked
  7532  000214  EE20 F00E          	lfsr	2,14
  7533  000218  0100               	movlb	0	; () banked
  7534  00021A  51C9               	movf	_ic_ptr& (0+255),w,b
  7535  00021C  26D9               	addwf	fsr2l,f,c
  7536  00021E  0100               	movlb	0	; () banked
  7537  000220  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7538  000222  22DA               	addwfc	fsr2h,f,c
  7539  000224  0E06               	movlw	6
  7540  000226  6EDF               	movwf	indf2,c
  7541                           
  7542                           ; BSR set to: 0
  7543  000228  D158               	goto	L10
  7544  00022A                     i2l4232:
  7545                           
  7546                           ; BSR set to: 0
  7547  00022A  0100               	movlb	0	; () banked
  7548  00022C  0100               	movlb	0	; () banked
  7549  00022E  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7550  000230  B4D8               	btfsc	status,2,c
  7551  000232  D174               	goto	i2l324
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;my_i2c.c: 271: ic_ptr->event_count++;
  7555  000234  0100               	movlb	0	; () banked
  7556  000236  EE20 F00C          	lfsr	2,12
  7557  00023A  0100               	movlb	0	; () banked
  7558  00023C  51C9               	movf	_ic_ptr& (0+255),w,b
  7559  00023E  26D9               	addwf	fsr2l,f,c
  7560  000240  0100               	movlb	0	; () banked
  7561  000242  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7562  000244  22DA               	addwfc	fsr2h,f,c
  7563  000246  2ADF               	incf	indf2,f,c
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;my_i2c.c: 272: if (SSPSTATbits.D_A == 0) {
  7567  000248  BAC7               	btfsc	4039,5,c	;volatile
  7568  00024A  D019               	goto	i2l4248
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;my_i2c.c: 273: if (SSPSTATbits.R_W == 0) {
  7572  00024C  B4C7               	btfsc	4039,2,c	;volatile
  7573  00024E  D00B               	goto	i2l4242
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;my_i2c.c: 274: ic_ptr->status = 0x7;
  7577  000250  0100               	movlb	0	; () banked
  7578  000252  EE20 F00D          	lfsr	2,13
  7579  000256  0100               	movlb	0	; () banked
  7580  000258  51C9               	movf	_ic_ptr& (0+255),w,b
  7581  00025A  26D9               	addwf	fsr2l,f,c
  7582  00025C  0100               	movlb	0	; () banked
  7583  00025E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7584  000260  22DA               	addwfc	fsr2h,f,c
  7585  000262  0E07               	movlw	7
  7586  000264  D076               	goto	L7
  7587  000266                     i2l4242:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;my_i2c.c: 276: ic_ptr->status = 0x8;
  7591  000266  0100               	movlb	0	; () banked
  7592  000268  EE20 F00D          	lfsr	2,13
  7593  00026C  0100               	movlb	0	; () banked
  7594  00026E  51C9               	movf	_ic_ptr& (0+255),w,b
  7595  000270  26D9               	addwf	fsr2l,f,c
  7596  000272  0100               	movlb	0	; () banked
  7597  000274  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7598  000276  22DA               	addwfc	fsr2h,f,c
  7599  000278  0E08               	movlw	8
  7600  00027A  6EDF               	movwf	indf2,c
  7601  00027C  D11D               	goto	L11
  7602  00027E                     i2l4248:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;my_i2c.c: 282: ic_ptr->error_count++;
  7606  00027E  0100               	movlb	0	; () banked
  7607  000280  EE20 F00F          	lfsr	2,15
  7608  000284  0100               	movlb	0	; () banked
  7609  000286  51C9               	movf	_ic_ptr& (0+255),w,b
  7610  000288  26D9               	addwf	fsr2l,f,c
  7611  00028A  0100               	movlb	0	; () banked
  7612  00028C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7613  00028E  22DA               	addwfc	fsr2h,f,c
  7614  000290  2ADF               	incf	indf2,f,c
  7615                           
  7616                           ;my_i2c.c: 283: ic_ptr->status = 0x5;
  7617  000292  0100               	movlb	0	; () banked
  7618  000294  EE20 F00D          	lfsr	2,13
  7619  000298  0100               	movlb	0	; () banked
  7620  00029A  51C9               	movf	_ic_ptr& (0+255),w,b
  7621  00029C  26D9               	addwf	fsr2l,f,c
  7622  00029E  0100               	movlb	0	; () banked
  7623  0002A0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7624  0002A2  22DA               	addwfc	fsr2h,f,c
  7625  0002A4  0E05               	movlw	5
  7626  0002A6  6EDF               	movwf	indf2,c
  7627                           
  7628                           ;my_i2c.c: 284: ic_ptr->error_code = 0x6;
  7629  0002A8  0100               	movlb	0	; () banked
  7630  0002AA  EE20 F00E          	lfsr	2,14
  7631  0002AE  0100               	movlb	0	; () banked
  7632  0002B0  51C9               	movf	_ic_ptr& (0+255),w,b
  7633  0002B2  26D9               	addwf	fsr2l,f,c
  7634  0002B4  0100               	movlb	0	; () banked
  7635  0002B6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7636  0002B8  22DA               	addwfc	fsr2h,f,c
  7637  0002BA  0E06               	movlw	6
  7638  0002BC  D04A               	goto	L7
  7639  0002BE                     i2l4250:
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;my_i2c.c: 290: {
  7643                           ;my_i2c.c: 291: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7644  0002BE  0100               	movlb	0	; () banked
  7645  0002C0  EE20 F01B          	lfsr	2,27
  7646  0002C4  0100               	movlb	0	; () banked
  7647  0002C6  51C9               	movf	_ic_ptr& (0+255),w,b
  7648  0002C8  26D9               	addwf	fsr2l,f,c
  7649  0002CA  0100               	movlb	0	; () banked
  7650  0002CC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7651  0002CE  22DA               	addwfc	fsr2h,f,c
  7652  0002D0  50DF               	movf	indf2,w,c
  7653  0002D2  0100               	movlb	0	; () banked
  7654  0002D4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7655  0002D6  0100               	movlb	0	; () banked
  7656  0002D8  EE20 F01A          	lfsr	2,26
  7657  0002DC  0100               	movlb	0	; () banked
  7658  0002DE  51C9               	movf	_ic_ptr& (0+255),w,b
  7659  0002E0  26D9               	addwf	fsr2l,f,c
  7660  0002E2  0100               	movlb	0	; () banked
  7661  0002E4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7662  0002E6  22DA               	addwfc	fsr2h,f,c
  7663  0002E8  50DF               	movf	indf2,w,c
  7664  0002EA  0100               	movlb	0	; () banked
  7665  0002EC  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7666  0002EE  B0D8               	btfsc	status,0,c
  7667  0002F0  D0F4               	goto	L10
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;my_i2c.c: 292: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7671  0002F2  0100               	movlb	0	; () banked
  7672  0002F4  EE20 F01B          	lfsr	2,27
  7673  0002F8  0100               	movlb	0	; () banked
  7674  0002FA  51C9               	movf	_ic_ptr& (0+255),w,b
  7675  0002FC  26D9               	addwf	fsr2l,f,c
  7676  0002FE  0100               	movlb	0	; () banked
  7677  000300  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7678  000302  22DA               	addwfc	fsr2h,f,c
  7679  000304  50DF               	movf	indf2,w,c
  7680  000306  0100               	movlb	0	; () banked
  7681  000308  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7682  00030A  0100               	movlb	0	; () banked
  7683  00030C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7684  00030E  0D01               	mullw	1
  7685  000310  0E10               	movlw	16
  7686  000312  26F3               	addwf	prodl,f,c
  7687  000314  0E00               	movlw	0
  7688  000316  22F4               	addwfc	prodh,f,c
  7689  000318  50F3               	movf	prodl,w,c
  7690  00031A  0100               	movlb	0	; () banked
  7691  00031C  0100               	movlb	0	; () banked
  7692  00031E  25C9               	addwf	_ic_ptr& (0+255),w,b
  7693  000320  6ED9               	movwf	fsr2l,c
  7694  000322  50F4               	movf	prodh,w,c
  7695  000324  0100               	movlb	0	; () banked
  7696  000326  0100               	movlb	0	; () banked
  7697  000328  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7698  00032A  6EDA               	movwf	fsr2h,c
  7699  00032C  50DF               	movf	indf2,w,c
  7700  00032E  6EC9               	movwf	4041,c	;volatile
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;my_i2c.c: 293: ic_ptr->outbufind++;
  7704  000330  0100               	movlb	0	; () banked
  7705  000332  EE20 F01B          	lfsr	2,27
  7706  000336  0100               	movlb	0	; () banked
  7707  000338  51C9               	movf	_ic_ptr& (0+255),w,b
  7708  00033A  26D9               	addwf	fsr2l,f,c
  7709  00033C  0100               	movlb	0	; () banked
  7710  00033E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  000340  22DA               	addwfc	fsr2h,f,c
  7712  000342  2ADF               	incf	indf2,f,c
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;my_i2c.c: 294: data_written = 1;
  7716  000344  0100               	movlb	0	; () banked
  7717  000346  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7718  000348  0E01               	movlw	1
  7719  00034A  0100               	movlb	0	; () banked
  7720  00034C  0100               	movlb	0	; () banked
  7721  00034E  6F9F               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7722  000350  D0C1               	goto	L8
  7723  000352                     L7:
  7724  000352  6EDF               	movwf	indf2,c
  7725  000354  D0E3               	goto	i2l324
  7726  000356                     i2l344:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;my_i2c.c: 302: {
  7730                           ;my_i2c.c: 304: if (SSPSTATbits.P == 1) {
  7731  000356  A8C7               	btfss	4039,4,c	;volatile
  7732  000358  D062               	goto	i2l4278
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7736  00035A  0100               	movlb	0	; () banked
  7737  00035C  EE20 F00C          	lfsr	2,12
  7738  000360  0100               	movlb	0	; () banked
  7739  000362  51C9               	movf	_ic_ptr& (0+255),w,b
  7740  000364  26D9               	addwf	fsr2l,f,c
  7741  000366  0100               	movlb	0	; () banked
  7742  000368  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7743  00036A  22DA               	addwfc	fsr2h,f,c
  7744  00036C  2ADF               	incf	indf2,f,c
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;my_i2c.c: 307: if (data_read) {
  7748  00036E  0100               	movlb	0	; () banked
  7749  000370  0100               	movlb	0	; () banked
  7750  000372  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7751  000374  B4D8               	btfsc	status,2,c
  7752  000376  D04A               	goto	i2l4274
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;my_i2c.c: 308: if (SSPSTATbits.D_A == 1) {
  7756  000378  AAC7               	btfss	4039,5,c	;volatile
  7757  00037A  D027               	goto	i2l4272
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;my_i2c.c: 309: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7761  00037C  0100               	movlb	0	; () banked
  7762  00037E  EE20 F00A          	lfsr	2,10
  7763  000382  0100               	movlb	0	; () banked
  7764  000384  51C9               	movf	_ic_ptr& (0+255),w,b
  7765  000386  26D9               	addwf	fsr2l,f,c
  7766  000388  0100               	movlb	0	; () banked
  7767  00038A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7768  00038C  22DA               	addwfc	fsr2h,f,c
  7769  00038E  50DF               	movf	indf2,w,c
  7770  000390  0100               	movlb	0	; () banked
  7771  000392  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7772  000394  0100               	movlb	0	; () banked
  7773  000396  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7774  000398  0D01               	mullw	1
  7775  00039A  50F3               	movf	prodl,w,c
  7776  00039C  0100               	movlb	0	; () banked
  7777  00039E  0100               	movlb	0	; () banked
  7778  0003A0  25C9               	addwf	_ic_ptr& (0+255),w,b
  7779  0003A2  6ED9               	movwf	fsr2l,c
  7780  0003A4  50F4               	movf	prodh,w,c
  7781  0003A6  0100               	movlb	0	; () banked
  7782  0003A8  0100               	movlb	0	; () banked
  7783  0003AA  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7784  0003AC  6EDA               	movwf	fsr2h,c
  7785  0003AE  0100               	movlb	0	; () banked
  7786  0003B0  C0A1  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;my_i2c.c: 310: ic_ptr->buflen++;
  7790  0003B4  0100               	movlb	0	; () banked
  7791  0003B6  EE20 F00A          	lfsr	2,10
  7792  0003BA  0100               	movlb	0	; () banked
  7793  0003BC  51C9               	movf	_ic_ptr& (0+255),w,b
  7794  0003BE  26D9               	addwf	fsr2l,f,c
  7795  0003C0  0100               	movlb	0	; () banked
  7796  0003C2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  0003C4  22DA               	addwfc	fsr2h,f,c
  7798  0003C6  2ADF               	incf	indf2,f,c
  7799  0003C8  D021               	goto	i2l4274
  7800  0003CA                     i2l4272:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;my_i2c.c: 313: ic_ptr->error_count++;
  7804  0003CA  0100               	movlb	0	; () banked
  7805  0003CC  EE20 F00F          	lfsr	2,15
  7806  0003D0  0100               	movlb	0	; () banked
  7807  0003D2  51C9               	movf	_ic_ptr& (0+255),w,b
  7808  0003D4  26D9               	addwf	fsr2l,f,c
  7809  0003D6  0100               	movlb	0	; () banked
  7810  0003D8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7811  0003DA  22DA               	addwfc	fsr2h,f,c
  7812  0003DC  2ADF               	incf	indf2,f,c
  7813                           
  7814                           ;my_i2c.c: 314: ic_ptr->error_code = 0x6;
  7815  0003DE  0100               	movlb	0	; () banked
  7816  0003E0  EE20 F00E          	lfsr	2,14
  7817  0003E4  0100               	movlb	0	; () banked
  7818  0003E6  51C9               	movf	_ic_ptr& (0+255),w,b
  7819  0003E8  26D9               	addwf	fsr2l,f,c
  7820  0003EA  0100               	movlb	0	; () banked
  7821  0003EC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7822  0003EE  22DA               	addwfc	fsr2h,f,c
  7823  0003F0  0E06               	movlw	6
  7824  0003F2  6EDF               	movwf	indf2,c
  7825                           
  7826                           ;my_i2c.c: 315: ic_ptr->status = 0x5;
  7827  0003F4  0100               	movlb	0	; () banked
  7828  0003F6  EE20 F00D          	lfsr	2,13
  7829  0003FA  0100               	movlb	0	; () banked
  7830  0003FC  51C9               	movf	_ic_ptr& (0+255),w,b
  7831  0003FE  26D9               	addwf	fsr2l,f,c
  7832  000400  0100               	movlb	0	; () banked
  7833  000402  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7834  000404  22DA               	addwfc	fsr2h,f,c
  7835  000406  0E05               	movlw	5
  7836  000408  6EDF               	movwf	indf2,c
  7837  00040A  D067               	goto	L10
  7838  00040C                     i2l4274:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;my_i2c.c: 318: msg_ready = 1;
  7842  00040C  0100               	movlb	0	; () banked
  7843  00040E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7844  000410  0E01               	movlw	1
  7845  000412  0100               	movlb	0	; () banked
  7846  000414  0100               	movlb	0	; () banked
  7847  000416  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7848  000418  0100               	movlb	0	; () banked
  7849  00041A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7850                           
  7851                           ; BSR set to: 0
  7852  00041C  D05E               	goto	L10
  7853  00041E                     i2l4278:
  7854                           
  7855                           ; BSR set to: 0
  7856  00041E  0100               	movlb	0	; () banked
  7857  000420  0100               	movlb	0	; () banked
  7858  000422  51A4               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7859  000424  B4D8               	btfsc	status,2,c
  7860  000426  D07A               	goto	i2l324
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;my_i2c.c: 322: ic_ptr->event_count++;
  7864  000428  0100               	movlb	0	; () banked
  7865  00042A  EE20 F00C          	lfsr	2,12
  7866  00042E  0100               	movlb	0	; () banked
  7867  000430  51C9               	movf	_ic_ptr& (0+255),w,b
  7868  000432  26D9               	addwf	fsr2l,f,c
  7869  000434  0100               	movlb	0	; () banked
  7870  000436  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7871  000438  22DA               	addwfc	fsr2h,f,c
  7872  00043A  2ADF               	incf	indf2,f,c
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;my_i2c.c: 323: if (SSPSTATbits.D_A == 1) {
  7876  00043C  AAC7               	btfss	4039,5,c	;volatile
  7877  00043E  D027               	goto	i2l352
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;my_i2c.c: 324: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7881  000440  0100               	movlb	0	; () banked
  7882  000442  EE20 F00A          	lfsr	2,10
  7883  000446  0100               	movlb	0	; () banked
  7884  000448  51C9               	movf	_ic_ptr& (0+255),w,b
  7885  00044A  26D9               	addwf	fsr2l,f,c
  7886  00044C  0100               	movlb	0	; () banked
  7887  00044E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7888  000450  22DA               	addwfc	fsr2h,f,c
  7889  000452  50DF               	movf	indf2,w,c
  7890  000454  0100               	movlb	0	; () banked
  7891  000456  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7892  000458  0100               	movlb	0	; () banked
  7893  00045A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7894  00045C  0D01               	mullw	1
  7895  00045E  50F3               	movf	prodl,w,c
  7896  000460  0100               	movlb	0	; () banked
  7897  000462  0100               	movlb	0	; () banked
  7898  000464  25C9               	addwf	_ic_ptr& (0+255),w,b
  7899  000466  6ED9               	movwf	fsr2l,c
  7900  000468  50F4               	movf	prodh,w,c
  7901  00046A  0100               	movlb	0	; () banked
  7902  00046C  0100               	movlb	0	; () banked
  7903  00046E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7904  000470  6EDA               	movwf	fsr2h,c
  7905  000472  0100               	movlb	0	; () banked
  7906  000474  C0A1  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;my_i2c.c: 325: ic_ptr->buflen++;
  7910  000478  0100               	movlb	0	; () banked
  7911  00047A  EE20 F00A          	lfsr	2,10
  7912  00047E  0100               	movlb	0	; () banked
  7913  000480  51C9               	movf	_ic_ptr& (0+255),w,b
  7914  000482  26D9               	addwf	fsr2l,f,c
  7915  000484  0100               	movlb	0	; () banked
  7916  000486  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7917  000488  22DA               	addwfc	fsr2h,f,c
  7918  00048A  2ADF               	incf	indf2,f,c
  7919                           
  7920                           ;my_i2c.c: 326: } else {
  7921  00048C  D047               	goto	i2l324
  7922  00048E                     i2l352:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;my_i2c.c: 327: if (SSPSTATbits.R_W == 1) {
  7926  00048E  A4C7               	btfss	4039,2,c	;volatile
  7927  000490  D6B6               	goto	i2l4230
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;my_i2c.c: 328: ic_ptr->status = 0x8;
  7931  000492  0100               	movlb	0	; () banked
  7932  000494  EE20 F00D          	lfsr	2,13
  7933  000498  0100               	movlb	0	; () banked
  7934  00049A  51C9               	movf	_ic_ptr& (0+255),w,b
  7935  00049C  26D9               	addwf	fsr2l,f,c
  7936  00049E  0100               	movlb	0	; () banked
  7937  0004A0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7938  0004A2  22DA               	addwfc	fsr2h,f,c
  7939  0004A4  0E08               	movlw	8
  7940  0004A6  6EDF               	movwf	indf2,c
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;my_i2c.c: 329: msg_ready = 1;
  7944  0004A8  0100               	movlb	0	; () banked
  7945  0004AA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7946  0004AC  0E01               	movlw	1
  7947  0004AE  0100               	movlb	0	; () banked
  7948  0004B0  0100               	movlb	0	; () banked
  7949  0004B2  6FA3               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7950  0004B4  0100               	movlb	0	; () banked
  7951  0004B6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7952  0004B8                     L11:
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;my_i2c.c: 330: msg_to_send = 1;
  7956  0004B8  0100               	movlb	0	; () banked
  7957  0004BA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7958  0004BC  0E01               	movlw	1
  7959  0004BE  0100               	movlb	0	; () banked
  7960  0004C0  0100               	movlb	0	; () banked
  7961  0004C2  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7962  0004C4  0100               	movlb	0	; () banked
  7963  0004C6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;my_i2c.c: 332: data_read = 0;
  7967  0004C8  0100               	movlb	0	; () banked
  7968  0004CA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  7969  0004CC  0E00               	movlw	0
  7970  0004CE  0100               	movlb	0	; () banked
  7971  0004D0  0100               	movlb	0	; () banked
  7972  0004D2  6FA4               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7973  0004D4                     L8:
  7974  0004D4  0100               	movlb	0	; () banked
  7975  0004D6  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7976                           
  7977                           ;my_i2c.c: 333: } else {
  7978  0004D8  D021               	goto	i2l324
  7979  0004DA                     L10:
  7980                           
  7981                           ;my_i2c.c: 336: ic_ptr->status = 0x5;
  7982  0004DA  0100               	movlb	0	; () banked
  7983  0004DC  EE20 F00D          	lfsr	2,13
  7984  0004E0  0100               	movlb	0	; () banked
  7985  0004E2  51C9               	movf	_ic_ptr& (0+255),w,b
  7986  0004E4  26D9               	addwf	fsr2l,f,c
  7987  0004E6  0100               	movlb	0	; () banked
  7988  0004E8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  7989  0004EA  22DA               	addwfc	fsr2h,f,c
  7990  0004EC  0E05               	movlw	5
  7991  0004EE  D731               	goto	L7
  7992  0004F0                     i2l4300:
  7993                           
  7994                           ; BSR set to: 0
  7995  0004F0  0100               	movlb	0	; () banked
  7996  0004F2  EE20 F00D          	lfsr	2,13
  7997  0004F6  0100               	movlb	0	; () banked
  7998  0004F8  51C9               	movf	_ic_ptr& (0+255),w,b
  7999  0004FA  26D9               	addwf	fsr2l,f,c
  8000  0004FC  0100               	movlb	0	; () banked
  8001  0004FE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8002  000500  22DA               	addwfc	fsr2h,f,c
  8003  000502  50DF               	movf	indf2,w,c
  8004                           
  8005                           ; Switch size 1, requested type "space"
  8006                           ; Number of cases is 4, Range of values is 5 to 8
  8007                           ; switch strategies available:
  8008                           ; Name         Instructions Cycles
  8009                           ; simple_byte           13     7 (average)
  8010                           ;	Chosen strategy is simple_byte
  8011  000504  0A05               	xorlw	5	; case 5
  8012  000506  B4D8               	btfsc	status,2,c
  8013  000508  D63C               	goto	i2l326
  8014  00050A  0A03               	xorlw	3	; case 6
  8015  00050C  B4D8               	btfsc	status,2,c
  8016  00050E  D65B               	goto	i2l330
  8017  000510  0A01               	xorlw	1	; case 7
  8018  000512  B4D8               	btfsc	status,2,c
  8019  000514  D720               	goto	i2l344
  8020  000516  0A0F               	xorlw	15	; case 8
  8021  000518  B4D8               	btfsc	status,2,c
  8022  00051A  D6D1               	goto	i2l4250
  8023  00051C                     i2l324:
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;my_i2c.c: 343: }
  8027                           ;my_i2c.c: 346: if (data_read || data_written) {
  8028  00051C  0100               	movlb	0	; () banked
  8029  00051E  0100               	movlb	0	; () banked
  8030  000520  67A4               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  8031  000522  D005               	goto	i2l358
  8032                           
  8033                           ; BSR set to: 0
  8034  000524  0100               	movlb	0	; () banked
  8035  000526  0100               	movlb	0	; () banked
  8036  000528  519F               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  8037  00052A  B4D8               	btfsc	status,2,c
  8038  00052C  D002               	goto	i2l4306
  8039  00052E                     i2l358:
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;my_i2c.c: 348: if (SSPCON1bits.CKP == 0) {
  8043  00052E  A8C6               	btfss	4038,4,c	;volatile
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;my_i2c.c: 349: SSPCON1bits.CKP = 1;
  8047  000530  88C6               	bsf	4038,4,c	;volatile
  8048  000532                     i2l4306:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;my_i2c.c: 350: }
  8052                           ;my_i2c.c: 351: }
  8053                           ;my_i2c.c: 354: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8054  000532  0100               	movlb	0	; () banked
  8055  000534  EE20 F00A          	lfsr	2,10
  8056  000538  0100               	movlb	0	; () banked
  8057  00053A  51C9               	movf	_ic_ptr& (0+255),w,b
  8058  00053C  26D9               	addwf	fsr2l,f,c
  8059  00053E  0100               	movlb	0	; () banked
  8060  000540  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8061  000542  22DA               	addwfc	fsr2h,f,c
  8062  000544  0E08               	movlw	8
  8063  000546  64DF               	cpfsgt	indf2,c
  8064  000548  D024               	goto	i2l4312
  8065                           
  8066                           ; BSR set to: 0
  8067  00054A  0100               	movlb	0	; () banked
  8068  00054C  0100               	movlb	0	; () banked
  8069  00054E  67A3               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  8070  000550  D020               	goto	i2l4312
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;my_i2c.c: 355: ic_ptr->status = 0x5;
  8074  000552  0100               	movlb	0	; () banked
  8075  000554  EE20 F00D          	lfsr	2,13
  8076  000558  0100               	movlb	0	; () banked
  8077  00055A  51C9               	movf	_ic_ptr& (0+255),w,b
  8078  00055C  26D9               	addwf	fsr2l,f,c
  8079  00055E  0100               	movlb	0	; () banked
  8080  000560  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8081  000562  22DA               	addwfc	fsr2h,f,c
  8082  000564  0E05               	movlw	5
  8083  000566  6EDF               	movwf	indf2,c
  8084                           
  8085                           ;my_i2c.c: 356: ic_ptr->error_count++;
  8086  000568  0100               	movlb	0	; () banked
  8087  00056A  EE20 F00F          	lfsr	2,15
  8088  00056E  0100               	movlb	0	; () banked
  8089  000570  51C9               	movf	_ic_ptr& (0+255),w,b
  8090  000572  26D9               	addwf	fsr2l,f,c
  8091  000574  0100               	movlb	0	; () banked
  8092  000576  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8093  000578  22DA               	addwfc	fsr2h,f,c
  8094  00057A  2ADF               	incf	indf2,f,c
  8095                           
  8096                           ;my_i2c.c: 357: ic_ptr->error_code = 0x7;
  8097  00057C  0100               	movlb	0	; () banked
  8098  00057E  EE20 F00E          	lfsr	2,14
  8099  000582  0100               	movlb	0	; () banked
  8100  000584  51C9               	movf	_ic_ptr& (0+255),w,b
  8101  000586  26D9               	addwf	fsr2l,f,c
  8102  000588  0100               	movlb	0	; () banked
  8103  00058A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8104  00058C  22DA               	addwfc	fsr2h,f,c
  8105  00058E  0E07               	movlw	7
  8106  000590  6EDF               	movwf	indf2,c
  8107  000592                     i2l4312:
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;my_i2c.c: 358: }
  8111                           ;my_i2c.c: 360: if (msg_ready) {
  8112  000592  0100               	movlb	0	; () banked
  8113  000594  0100               	movlb	0	; () banked
  8114  000596  51A3               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  8115  000598  B4D8               	btfsc	status,2,c
  8116  00059A  D048               	goto	i2l4320
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;my_i2c.c: 361: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8120  00059C  0100               	movlb	0	; () banked
  8121  00059E  EE20 F00C          	lfsr	2,12
  8122  0005A2  0100               	movlb	0	; () banked
  8123  0005A4  51C9               	movf	_ic_ptr& (0+255),w,b
  8124  0005A6  26D9               	addwf	fsr2l,f,c
  8125  0005A8  0100               	movlb	0	; () banked
  8126  0005AA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8127  0005AC  22DA               	addwfc	fsr2h,f,c
  8128  0005AE  0100               	movlb	0	; () banked
  8129  0005B0  EE10 F00A          	lfsr	1,10
  8130  0005B4  0100               	movlb	0	; () banked
  8131  0005B6  51C9               	movf	_ic_ptr& (0+255),w,b
  8132  0005B8  26E1               	addwf	fsr1l,f,c
  8133  0005BA  0100               	movlb	0	; () banked
  8134  0005BC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8135  0005BE  22E2               	addwfc	fsr1h,f,c
  8136  0005C0  50E7               	movf	indf1,w,c
  8137  0005C2  0100               	movlb	0	; () banked
  8138  0005C4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8139  0005C6  0100               	movlb	0	; () banked
  8140  0005C8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8141  0005CA  0D01               	mullw	1
  8142  0005CC  50F3               	movf	prodl,w,c
  8143  0005CE  0100               	movlb	0	; () banked
  8144  0005D0  0100               	movlb	0	; () banked
  8145  0005D2  25C9               	addwf	_ic_ptr& (0+255),w,b
  8146  0005D4  6EE1               	movwf	fsr1l,c
  8147  0005D6  50F4               	movf	prodh,w,c
  8148  0005D8  0100               	movlb	0	; () banked
  8149  0005DA  0100               	movlb	0	; () banked
  8150  0005DC  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8151  0005DE  6EE2               	movwf	fsr1h,c
  8152  0005E0  CFDF FFE7          	movff	indf2,indf1
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;my_i2c.c: 362: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8156  0005E4  0100               	movlb	0	; () banked
  8157  0005E6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8158  0005E8  0E28               	movlw	40
  8159  0005EA  0100               	movlb	0	; () banked
  8160  0005EC  0100               	movlb	0	; () banked
  8161  0005EE  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8162  0005F0  0100               	movlb	0	; () banked
  8163  0005F2  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8164  0005F4  0100               	movlb	0	; () banked
  8165  0005F6  0100               	movlb	0	; () banked
  8166  0005F8  C0CA  F098         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  8167  0005FC  0100               	movlb	0	; () banked
  8168  0005FE  0100               	movlb	0	; () banked
  8169  000600  C0C9  F097         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  8170  000604  0100               	movlb	0	; () banked
  8171  000606  EE20 F00A          	lfsr	2,10
  8172  00060A  0100               	movlb	0	; () banked
  8173  00060C  51C9               	movf	_ic_ptr& (0+255),w,b
  8174  00060E  26D9               	addwf	fsr2l,f,c
  8175  000610  0100               	movlb	0	; () banked
  8176  000612  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8177  000614  22DA               	addwfc	fsr2h,f,c
  8178  000616  50DF               	movf	indf2,w,c
  8179  000618  0100               	movlb	0	; () banked
  8180  00061A  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  8181  00061C  0100               	movlb	0	; () banked
  8182  00061E  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  8183  000620  ECEC  F011         	call	i2_ToMainHigh_sendmsg
  8184                           
  8185                           ;my_i2c.c: 363: ic_ptr->buflen = 0;
  8186  000624  0100               	movlb	0	; () banked
  8187  000626  EE20 F00A          	lfsr	2,10
  8188  00062A  D04B               	goto	L9
  8189  00062C                     i2l4320:
  8190                           
  8191                           ; BSR set to: 0
  8192  00062C  0100               	movlb	0	; () banked
  8193  00062E  EE20 F00F          	lfsr	2,15
  8194  000632  0100               	movlb	0	; () banked
  8195  000634  51C9               	movf	_ic_ptr& (0+255),w,b
  8196  000636  26D9               	addwf	fsr2l,f,c
  8197  000638  0100               	movlb	0	; () banked
  8198  00063A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8199  00063C  22DA               	addwfc	fsr2h,f,c
  8200  00063E  50DF               	movf	indf2,w,c
  8201  000640  B4D8               	btfsc	status,2,c
  8202  000642  D047               	goto	i2l4328
  8203                           
  8204                           ; BSR set to: 0
  8205                           ;my_i2c.c: 365: error_buf[0] = ic_ptr->error_count;
  8206  000644  0100               	movlb	0	; () banked
  8207  000646  EE20 F00F          	lfsr	2,15
  8208  00064A  0100               	movlb	0	; () banked
  8209  00064C  51C9               	movf	_ic_ptr& (0+255),w,b
  8210  00064E  26D9               	addwf	fsr2l,f,c
  8211  000650  0100               	movlb	0	; () banked
  8212  000652  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8213  000654  22DA               	addwfc	fsr2h,f,c
  8214  000656  50DF               	movf	indf2,w,c
  8215  000658  0100               	movlb	0	; () banked
  8216  00065A  0100               	movlb	0	; () banked
  8217  00065C  6F9C               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  8218                           
  8219                           ;my_i2c.c: 366: error_buf[1] = ic_ptr->error_code;
  8220  00065E  0100               	movlb	0	; () banked
  8221  000660  EE20 F00E          	lfsr	2,14
  8222  000664  0100               	movlb	0	; () banked
  8223  000666  51C9               	movf	_ic_ptr& (0+255),w,b
  8224  000668  26D9               	addwf	fsr2l,f,c
  8225  00066A  0100               	movlb	0	; () banked
  8226  00066C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8227  00066E  22DA               	addwfc	fsr2h,f,c
  8228  000670  50DF               	movf	indf2,w,c
  8229  000672  0100               	movlb	0	; () banked
  8230  000674  0100               	movlb	0	; () banked
  8231  000676  6F9D               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  8232                           
  8233                           ;my_i2c.c: 367: error_buf[2] = ic_ptr->event_count;
  8234  000678  0100               	movlb	0	; () banked
  8235  00067A  EE20 F00C          	lfsr	2,12
  8236  00067E  0100               	movlb	0	; () banked
  8237  000680  51C9               	movf	_ic_ptr& (0+255),w,b
  8238  000682  26D9               	addwf	fsr2l,f,c
  8239  000684  0100               	movlb	0	; () banked
  8240  000686  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8241  000688  22DA               	addwfc	fsr2h,f,c
  8242  00068A  50DF               	movf	indf2,w,c
  8243  00068C  0100               	movlb	0	; () banked
  8244  00068E  0100               	movlb	0	; () banked
  8245  000690  6F9E               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;my_i2c.c: 368: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8249  000692  0100               	movlb	0	; () banked
  8250  000694  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8251  000696  0E29               	movlw	41
  8252  000698  0100               	movlb	0	; () banked
  8253  00069A  0100               	movlb	0	; () banked
  8254  00069C  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8255  00069E  0100               	movlb	0	; () banked
  8256  0006A0  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8257  0006A2  0100               	movlb	0	; () banked
  8258  0006A4  0E00               	movlw	high i2c_slave_int_handler@error_buf
  8259  0006A6  0100               	movlb	0	; () banked
  8260  0006A8  0100               	movlb	0	; () banked
  8261  0006AA  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8262  0006AC  0100               	movlb	0	; () banked
  8263  0006AE  0E9C               	movlw	low i2c_slave_int_handler@error_buf
  8264  0006B0  0100               	movlb	0	; () banked
  8265  0006B2  0100               	movlb	0	; () banked
  8266  0006B4  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8267  0006B6  0E03               	movlw	3
  8268  0006B8  ECEC  F011         	call	i2_ToMainHigh_sendmsg
  8269                           
  8270                           ;my_i2c.c: 369: ic_ptr->error_count = 0;
  8271  0006BC  0100               	movlb	0	; () banked
  8272  0006BE  EE20 F00F          	lfsr	2,15
  8273  0006C2                     L9:
  8274  0006C2  0100               	movlb	0	; () banked
  8275  0006C4  51C9               	movf	_ic_ptr& (0+255),w,b
  8276  0006C6  26D9               	addwf	fsr2l,f,c
  8277  0006C8  0100               	movlb	0	; () banked
  8278  0006CA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8279  0006CC  22DA               	addwfc	fsr2h,f,c
  8280  0006CE  0E00               	movlw	0
  8281  0006D0  6EDF               	movwf	indf2,c
  8282  0006D2                     i2l4328:
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;my_i2c.c: 370: }
  8286                           ;my_i2c.c: 371: if (msg_to_send) {
  8287  0006D2  0100               	movlb	0	; () banked
  8288  0006D4  0100               	movlb	0	; () banked
  8289  0006D6  51A2               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  8290  0006D8  B4D8               	btfsc	status,2,c
  8291  0006DA  0012               	return	
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;my_i2c.c: 374: start_i2c_slave_reply(I2C_Buffer_Size, 0);
  8295  0006DC  0E00               	movlw	0
  8296  0006DE  0100               	movlb	0	; () banked
  8297  0006E0  0100               	movlb	0	; () banked
  8298  0006E2  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  8299  0006E4  0E00               	movlw	0
  8300  0006E6  0100               	movlb	0	; () banked
  8301  0006E8  0100               	movlb	0	; () banked
  8302  0006EA  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
  8303  0006EC  0100               	movlb	0	; () banked
  8304  0006EE  0100               	movlb	0	; () banked
  8305  0006F0  51CB               	movf	_I2C_Buffer_Size& (0+255),w,b
  8306  0006F2  EC27  F009         	call	_start_i2c_slave_reply
  8307                           
  8308                           ;my_i2c.c: 375: msg_to_send = 0;
  8309  0006F6  0100               	movlb	0	; () banked
  8310  0006F8  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  8311  0006FA  0E00               	movlw	0
  8312  0006FC  0100               	movlb	0	; () banked
  8313  0006FE  0100               	movlb	0	; () banked
  8314  000700  6FA2               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8315  000702  0100               	movlb	0	; () banked
  8316  000704  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8317  000706  0012               	return	
  8318  000708                     __end_of_i2c_slave_int_handler:
  8319                           	opt stack 0
  8320                           pclatu	equ	0xFFB
  8321                           pclath	equ	0xFFA
  8322                           tblptru	equ	0xFF8
  8323                           tblptrh	equ	0xFF7
  8324                           tblptrl	equ	0xFF6
  8325                           tablat	equ	0xFF5
  8326                           prodh	equ	0xFF4
  8327                           prodl	equ	0xFF3
  8328                           intcon	equ	0xFF2
  8329                           postinc0	equ	0xFEE
  8330                           fsr0h	equ	0xFEA
  8331                           fsr0l	equ	0xFE9
  8332                           wreg	equ	0xFE8
  8333                           indf1	equ	0xFE7
  8334                           postdec1	equ	0xFE5
  8335                           fsr1h	equ	0xFE2
  8336                           fsr1l	equ	0xFE1
  8337                           bsr	equ	0xFE0
  8338                           indf2	equ	0xFDF
  8339                           postinc2	equ	0xFDE
  8340                           postdec2	equ	0xFDD
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345 ;; *************** function _start_i2c_slave_reply *****************
  8346 ;; Defined at:
  8347 ;;		line 132 in file "source/my_i2c.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  length          1    wreg     unsigned char 
  8350 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  8351 ;;		 -> NULL(0), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  length          1    5[BANK0 ] unsigned char 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;		None               void
  8356 ;; Registers used:
  8357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8363 ;;      Params:         0       2       0       0       0
  8364 ;;      Locals:         0       1       0       0       0
  8365 ;;      Temps:          0       3       0       0       0
  8366 ;;      Totals:         0       6       0       0       0
  8367 ;;Total ram usage:        6 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_i2c_slave_int_handler
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text44
  8377  00124E                     __ptext44:
  8378                           	opt stack 0
  8379  00124E                     _start_i2c_slave_reply:
  8380                           	opt stack 17
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;incstack = 0
  8384                           ;start_i2c_slave_reply@length stored from wreg
  8385  00124E  CFE8 F085          	movff	wreg,start_i2c_slave_reply@length
  8386                           
  8387                           ;my_i2c.c: 136: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  8388  001252  0100               	movlb	0	; () banked
  8389  001254  EE20 F01A          	lfsr	2,26
  8390  001258  0100               	movlb	0	; () banked
  8391  00125A  51C9               	movf	_ic_ptr& (0+255),w,b
  8392  00125C  26D9               	addwf	fsr2l,f,c
  8393  00125E  0100               	movlb	0	; () banked
  8394  001260  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8395  001262  22DA               	addwfc	fsr2h,f,c
  8396  001264  0E00               	movlw	0
  8397  001266  6EDF               	movwf	indf2,c
  8398  001268  D09D               	goto	i2l4096
  8399  00126A                     i2l4084:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;my_i2c.c: 139: if(ic_ptr->outbuflen < ic_ptr->sendBufLen)
  8403  00126A  0100               	movlb	0	; () banked
  8404  00126C  EE20 F01A          	lfsr	2,26
  8405  001270  0100               	movlb	0	; () banked
  8406  001272  51C9               	movf	_ic_ptr& (0+255),w,b
  8407  001274  26D9               	addwf	fsr2l,f,c
  8408  001276  0100               	movlb	0	; () banked
  8409  001278  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8410  00127A  22DA               	addwfc	fsr2h,f,c
  8411  00127C  50DF               	movf	indf2,w,c
  8412  00127E  0100               	movlb	0	; () banked
  8413  001280  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8414  001282  0100               	movlb	0	; () banked
  8415  001284  EE20 F027          	lfsr	2,39
  8416  001288  0100               	movlb	0	; () banked
  8417  00128A  51C9               	movf	_ic_ptr& (0+255),w,b
  8418  00128C  26D9               	addwf	fsr2l,f,c
  8419  00128E  0100               	movlb	0	; () banked
  8420  001290  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8421  001292  22DA               	addwfc	fsr2h,f,c
  8422  001294  50DF               	movf	indf2,w,c
  8423  001296  0100               	movlb	0	; () banked
  8424  001298  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8425  00129A  B0D8               	btfsc	status,0,c
  8426  00129C  D02C               	goto	i2l4088
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;my_i2c.c: 140: {
  8430                           ;my_i2c.c: 141: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->outbuflen
      +                          ];
  8431  00129E  0100               	movlb	0	; () banked
  8432  0012A0  EE20 F01A          	lfsr	2,26
  8433  0012A4  0100               	movlb	0	; () banked
  8434  0012A6  51C9               	movf	_ic_ptr& (0+255),w,b
  8435  0012A8  26D9               	addwf	fsr2l,f,c
  8436  0012AA  0100               	movlb	0	; () banked
  8437  0012AC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8438  0012AE  22DA               	addwfc	fsr2h,f,c
  8439  0012B0  50DF               	movf	indf2,w,c
  8440  0012B2  0100               	movlb	0	; () banked
  8441  0012B4  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8442  0012B6  0100               	movlb	0	; () banked
  8443  0012B8  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8444  0012BA  0D01               	mullw	1
  8445  0012BC  0E1D               	movlw	29
  8446  0012BE  26F3               	addwf	prodl,f,c
  8447  0012C0  0E00               	movlw	0
  8448  0012C2  22F4               	addwfc	prodh,f,c
  8449  0012C4  50F3               	movf	prodl,w,c
  8450  0012C6  0100               	movlb	0	; () banked
  8451  0012C8  0100               	movlb	0	; () banked
  8452  0012CA  25C9               	addwf	_ic_ptr& (0+255),w,b
  8453  0012CC  6ED9               	movwf	fsr2l,c
  8454  0012CE  50F4               	movf	prodh,w,c
  8455  0012D0  0100               	movlb	0	; () banked
  8456  0012D2  0100               	movlb	0	; () banked
  8457  0012D4  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8458  0012D6  6EDA               	movwf	fsr2h,c
  8459  0012D8  0100               	movlb	0	; () banked
  8460  0012DA  EE10 F01A          	lfsr	1,26
  8461  0012DE  0100               	movlb	0	; () banked
  8462  0012E0  51C9               	movf	_ic_ptr& (0+255),w,b
  8463  0012E2  26E1               	addwf	fsr1l,f,c
  8464  0012E4  0100               	movlb	0	; () banked
  8465  0012E6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8466  0012E8  22E2               	addwfc	fsr1h,f,c
  8467  0012EA  50E7               	movf	indf1,w,c
  8468  0012EC  0100               	movlb	0	; () banked
  8469  0012EE  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8470  0012F0  0100               	movlb	0	; () banked
  8471  0012F2  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8472  0012F4  D03C               	goto	L14
  8473  0012F6                     i2l4088:
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;my_i2c.c: 143: else if(ic_ptr->sendBufLen != 0)
  8477  0012F6  0100               	movlb	0	; () banked
  8478  0012F8  EE20 F027          	lfsr	2,39
  8479  0012FC  0100               	movlb	0	; () banked
  8480  0012FE  51C9               	movf	_ic_ptr& (0+255),w,b
  8481  001300  26D9               	addwf	fsr2l,f,c
  8482  001302  0100               	movlb	0	; () banked
  8483  001304  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8484  001306  22DA               	addwfc	fsr2h,f,c
  8485  001308  50DF               	movf	indf2,w,c
  8486  00130A  B4D8               	btfsc	status,2,c
  8487  00130C  D00B               	goto	i2l4092
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;my_i2c.c: 144: {
  8491                           ;my_i2c.c: 145: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[ic_ptr->sendBufLe
      +                          n-1];
  8492  00130E  0100               	movlb	0	; () banked
  8493  001310  EE20 F027          	lfsr	2,39
  8494  001314  0100               	movlb	0	; () banked
  8495  001316  51C9               	movf	_ic_ptr& (0+255),w,b
  8496  001318  26D9               	addwf	fsr2l,f,c
  8497  00131A  0100               	movlb	0	; () banked
  8498  00131C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8499  00131E  22DA               	addwfc	fsr2h,f,c
  8500  001320  50DF               	movf	indf2,w,c
  8501  001322  D003               	goto	L13
  8502  001324                     i2l4092:
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;my_i2c.c: 147: else
  8506                           ;my_i2c.c: 148: {
  8507                           ;my_i2c.c: 149: ic_ptr->outbuffer[ic_ptr->outbuflen] = ic_ptr->sendBuf[length - 1];
  8508  001324  0100               	movlb	0	; () banked
  8509  001326  0100               	movlb	0	; () banked
  8510  001328  5185               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8511  00132A                     L13:
  8512  00132A  0100               	movlb	0	; () banked
  8513  00132C  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8514  00132E  6B83               	clrf	(??_start_i2c_slave_reply+1)& (0+255),b
  8515  001330  0E1C               	movlw	28
  8516  001332  0100               	movlb	0	; () banked
  8517  001334  2782               	addwf	??_start_i2c_slave_reply& (0+255),f,b
  8518  001336  0E00               	movlw	0
  8519  001338  2383               	addwfc	(??_start_i2c_slave_reply+1)& (0+255),f,b
  8520  00133A  0100               	movlb	0	; () banked
  8521  00133C  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8522  00133E  0100               	movlb	0	; () banked
  8523  001340  0100               	movlb	0	; () banked
  8524  001342  25C9               	addwf	_ic_ptr& (0+255),w,b
  8525  001344  6ED9               	movwf	fsr2l,c
  8526  001346  0100               	movlb	0	; () banked
  8527  001348  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8528  00134A  0100               	movlb	0	; () banked
  8529  00134C  0100               	movlb	0	; () banked
  8530  00134E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8531  001350  6EDA               	movwf	fsr2h,c
  8532  001352  0100               	movlb	0	; () banked
  8533  001354  EE10 F01A          	lfsr	1,26
  8534  001358  0100               	movlb	0	; () banked
  8535  00135A  51C9               	movf	_ic_ptr& (0+255),w,b
  8536  00135C  26E1               	addwf	fsr1l,f,c
  8537  00135E  0100               	movlb	0	; () banked
  8538  001360  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8539  001362  22E2               	addwfc	fsr1h,f,c
  8540  001364  50E7               	movf	indf1,w,c
  8541  001366  0100               	movlb	0	; () banked
  8542  001368  6F84               	movwf	(??_start_i2c_slave_reply+2)& (0+255),b
  8543  00136A  0100               	movlb	0	; () banked
  8544  00136C  5184               	movf	(??_start_i2c_slave_reply+2)& (0+255),w,b
  8545  00136E                     L14:
  8546  00136E  0D01               	mullw	1
  8547  001370  0E10               	movlw	16
  8548  001372  26F3               	addwf	prodl,f,c
  8549  001374  0E00               	movlw	0
  8550  001376  22F4               	addwfc	prodh,f,c
  8551  001378  50F3               	movf	prodl,w,c
  8552  00137A  0100               	movlb	0	; () banked
  8553  00137C  0100               	movlb	0	; () banked
  8554  00137E  25C9               	addwf	_ic_ptr& (0+255),w,b
  8555  001380  6EE1               	movwf	fsr1l,c
  8556  001382  50F4               	movf	prodh,w,c
  8557  001384  0100               	movlb	0	; () banked
  8558  001386  0100               	movlb	0	; () banked
  8559  001388  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8560  00138A  6EE2               	movwf	fsr1h,c
  8561  00138C  CFDF FFE7          	movff	indf2,indf1
  8562                           
  8563                           ; BSR set to: 0
  8564                           
  8565                           ; BSR set to: 0
  8566                           
  8567                           ; BSR set to: 0
  8568  001390  0100               	movlb	0	; () banked
  8569  001392  EE20 F01A          	lfsr	2,26
  8570  001396  0100               	movlb	0	; () banked
  8571  001398  51C9               	movf	_ic_ptr& (0+255),w,b
  8572  00139A  26D9               	addwf	fsr2l,f,c
  8573  00139C  0100               	movlb	0	; () banked
  8574  00139E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8575  0013A0  22DA               	addwfc	fsr2h,f,c
  8576  0013A2  2ADF               	incf	indf2,f,c
  8577  0013A4                     i2l4096:
  8578                           
  8579                           ; BSR set to: 0
  8580  0013A4  0100               	movlb	0	; () banked
  8581  0013A6  EE20 F01A          	lfsr	2,26
  8582  0013AA  0100               	movlb	0	; () banked
  8583  0013AC  51C9               	movf	_ic_ptr& (0+255),w,b
  8584  0013AE  26D9               	addwf	fsr2l,f,c
  8585  0013B0  0100               	movlb	0	; () banked
  8586  0013B2  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8587  0013B4  22DA               	addwfc	fsr2h,f,c
  8588  0013B6  50DF               	movf	indf2,w,c
  8589  0013B8  0100               	movlb	0	; () banked
  8590  0013BA  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
  8591  0013BC  0100               	movlb	0	; () banked
  8592  0013BE  0100               	movlb	0	; () banked
  8593  0013C0  5185               	movf	start_i2c_slave_reply@length& (0+255),w,b
  8594  0013C2  0100               	movlb	0	; () banked
  8595  0013C4  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8596  0013C6  A0D8               	btfss	status,0,c
  8597  0013C8  D750               	goto	i2l4084
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;my_i2c.c: 150: }
  8601                           ;my_i2c.c: 152: }
  8602                           ;my_i2c.c: 153: ic_ptr->sendBufLen =0;
  8603                           
  8604                           ; BSR set to: 0
  8605  0013CA  0100               	movlb	0	; () banked
  8606  0013CC  EE20 F027          	lfsr	2,39
  8607  0013D0  0100               	movlb	0	; () banked
  8608  0013D2  51C9               	movf	_ic_ptr& (0+255),w,b
  8609  0013D4  26D9               	addwf	fsr2l,f,c
  8610  0013D6  0100               	movlb	0	; () banked
  8611  0013D8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8612  0013DA  22DA               	addwfc	fsr2h,f,c
  8613  0013DC  0E00               	movlw	0
  8614  0013DE  6EDF               	movwf	indf2,c
  8615                           
  8616                           ;my_i2c.c: 154: ic_ptr->outbuflen = length;
  8617  0013E0  0100               	movlb	0	; () banked
  8618  0013E2  EE20 F01A          	lfsr	2,26
  8619  0013E6  0100               	movlb	0	; () banked
  8620  0013E8  51C9               	movf	_ic_ptr& (0+255),w,b
  8621  0013EA  26D9               	addwf	fsr2l,f,c
  8622  0013EC  0100               	movlb	0	; () banked
  8623  0013EE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8624  0013F0  22DA               	addwfc	fsr2h,f,c
  8625  0013F2  0100               	movlb	0	; () banked
  8626  0013F4  C085  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8627                           
  8628                           ;my_i2c.c: 155: ic_ptr->outbufind = 1;
  8629  0013F8  0100               	movlb	0	; () banked
  8630  0013FA  EE20 F01B          	lfsr	2,27
  8631  0013FE  0100               	movlb	0	; () banked
  8632  001400  51C9               	movf	_ic_ptr& (0+255),w,b
  8633  001402  26D9               	addwf	fsr2l,f,c
  8634  001404  0100               	movlb	0	; () banked
  8635  001406  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8636  001408  22DA               	addwfc	fsr2h,f,c
  8637  00140A  0E01               	movlw	1
  8638  00140C  6EDF               	movwf	indf2,c
  8639                           
  8640                           ;my_i2c.c: 158: SSPBUF = ic_ptr->outbuffer[0];
  8641  00140E  0100               	movlb	0	; () banked
  8642  001410  EE20 F010          	lfsr	2,16
  8643  001414  0100               	movlb	0	; () banked
  8644  001416  51C9               	movf	_ic_ptr& (0+255),w,b
  8645  001418  26D9               	addwf	fsr2l,f,c
  8646  00141A  0100               	movlb	0	; () banked
  8647  00141C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8648  00141E  22DA               	addwfc	fsr2h,f,c
  8649  001420  50DF               	movf	indf2,w,c
  8650  001422  6EC9               	movwf	4041,c	;volatile
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;my_i2c.c: 161: SSPCON1bits.CKP = 1;
  8654  001424  88C6               	bsf	4038,4,c	;volatile
  8655                           
  8656                           ; BSR set to: 0
  8657  001426  0012               	return	
  8658  001428                     __end_of_start_i2c_slave_reply:
  8659                           	opt stack 0
  8660                           pclatu	equ	0xFFB
  8661                           pclath	equ	0xFFA
  8662                           tblptru	equ	0xFF8
  8663                           tblptrh	equ	0xFF7
  8664                           tblptrl	equ	0xFF6
  8665                           tablat	equ	0xFF5
  8666                           prodh	equ	0xFF4
  8667                           prodl	equ	0xFF3
  8668                           intcon	equ	0xFF2
  8669                           postinc0	equ	0xFEE
  8670                           fsr0h	equ	0xFEA
  8671                           fsr0l	equ	0xFE9
  8672                           wreg	equ	0xFE8
  8673                           indf1	equ	0xFE7
  8674                           postdec1	equ	0xFE5
  8675                           fsr1h	equ	0xFE2
  8676                           fsr1l	equ	0xFE1
  8677                           bsr	equ	0xFE0
  8678                           indf2	equ	0xFDF
  8679                           postinc2	equ	0xFDE
  8680                           postdec2	equ	0xFDD
  8681                           fsr2h	equ	0xFDA
  8682                           fsr2l	equ	0xFD9
  8683                           status	equ	0xFD8
  8684                           
  8685 ;; *************** function _handle_start *****************
  8686 ;; Defined at:
  8687 ;;		line 167 in file "source/my_i2c.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  data_read       1    wreg     unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  data_read       1    0[BANK0 ] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;		None               void
  8694 ;; Registers used:
  8695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8701 ;;      Params:         0       0       0       0       0
  8702 ;;      Locals:         0       1       0       0       0
  8703 ;;      Temps:          0       0       0       0       0
  8704 ;;      Totals:         0       1       0       0       0
  8705 ;;Total ram usage:        1 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; This function calls:
  8708 ;;		Nothing
  8709 ;; This function is called by:
  8710 ;;		_i2c_slave_int_handler
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text45
  8715  001A74                     __ptext45:
  8716                           	opt stack 0
  8717  001A74                     _handle_start:
  8718                           	opt stack 17
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;incstack = 0
  8722                           ;handle_start@data_read stored from wreg
  8723  001A74  CFE8 F080          	movff	wreg,handle_start@data_read
  8724                           
  8725                           ;my_i2c.c: 168: ic_ptr->event_count = 1;
  8726  001A78  0100               	movlb	0	; () banked
  8727  001A7A  EE20 F00C          	lfsr	2,12
  8728  001A7E  0100               	movlb	0	; () banked
  8729  001A80  51C9               	movf	_ic_ptr& (0+255),w,b
  8730  001A82  26D9               	addwf	fsr2l,f,c
  8731  001A84  0100               	movlb	0	; () banked
  8732  001A86  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8733  001A88  22DA               	addwfc	fsr2h,f,c
  8734  001A8A  0E01               	movlw	1
  8735  001A8C  6EDF               	movwf	indf2,c
  8736                           
  8737                           ;my_i2c.c: 169: ic_ptr->buflen = 0;
  8738  001A8E  0100               	movlb	0	; () banked
  8739  001A90  EE20 F00A          	lfsr	2,10
  8740  001A94  0100               	movlb	0	; () banked
  8741  001A96  51C9               	movf	_ic_ptr& (0+255),w,b
  8742  001A98  26D9               	addwf	fsr2l,f,c
  8743  001A9A  0100               	movlb	0	; () banked
  8744  001A9C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8745  001A9E  22DA               	addwfc	fsr2h,f,c
  8746  001AA0  0E00               	movlw	0
  8747  001AA2  6EDF               	movwf	indf2,c
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;my_i2c.c: 171: if (data_read) {
  8751  001AA4  0100               	movlb	0	; () banked
  8752  001AA6  0100               	movlb	0	; () banked
  8753  001AA8  5180               	movf	handle_start@data_read& (0+255),w,b
  8754  001AAA  B4D8               	btfsc	status,2,c
  8755  001AAC  D03D               	goto	i2l4114
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 1) {
  8759  001AAE  AAC7               	btfss	4039,5,c	;volatile
  8760  001AB0  D021               	goto	i2l306
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;my_i2c.c: 175: ic_ptr->status = 0x5;
  8764  001AB2  0100               	movlb	0	; () banked
  8765  001AB4  EE20 F00D          	lfsr	2,13
  8766  001AB8  0100               	movlb	0	; () banked
  8767  001ABA  51C9               	movf	_ic_ptr& (0+255),w,b
  8768  001ABC  26D9               	addwf	fsr2l,f,c
  8769  001ABE  0100               	movlb	0	; () banked
  8770  001AC0  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8771  001AC2  22DA               	addwfc	fsr2h,f,c
  8772  001AC4  0E05               	movlw	5
  8773  001AC6  6EDF               	movwf	indf2,c
  8774                           
  8775                           ;my_i2c.c: 176: ic_ptr->error_count++;
  8776  001AC8  0100               	movlb	0	; () banked
  8777  001ACA  EE20 F00F          	lfsr	2,15
  8778  001ACE  0100               	movlb	0	; () banked
  8779  001AD0  51C9               	movf	_ic_ptr& (0+255),w,b
  8780  001AD2  26D9               	addwf	fsr2l,f,c
  8781  001AD4  0100               	movlb	0	; () banked
  8782  001AD6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8783  001AD8  22DA               	addwfc	fsr2h,f,c
  8784  001ADA  2ADF               	incf	indf2,f,c
  8785                           
  8786                           ;my_i2c.c: 177: ic_ptr->error_code = 0x5;
  8787  001ADC  0100               	movlb	0	; () banked
  8788  001ADE  EE20 F00E          	lfsr	2,14
  8789  001AE2  0100               	movlb	0	; () banked
  8790  001AE4  51C9               	movf	_ic_ptr& (0+255),w,b
  8791  001AE6  26D9               	addwf	fsr2l,f,c
  8792  001AE8  0100               	movlb	0	; () banked
  8793  001AEA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8794  001AEC  22DA               	addwfc	fsr2h,f,c
  8795  001AEE  0E05               	movlw	5
  8796  001AF0  6EDF               	movwf	indf2,c
  8797                           
  8798                           ;my_i2c.c: 178: } else {
  8799  001AF2  0012               	return	
  8800  001AF4                     i2l306:
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;my_i2c.c: 179: if (SSPSTATbits.R_W == 1) {
  8804  001AF4  A4C7               	btfss	4039,2,c	;volatile
  8805  001AF6  D00C               	goto	i2l4112
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;my_i2c.c: 180: ic_ptr->status = 0x8;
  8809  001AF8  0100               	movlb	0	; () banked
  8810  001AFA  EE20 F00D          	lfsr	2,13
  8811  001AFE  0100               	movlb	0	; () banked
  8812  001B00  51C9               	movf	_ic_ptr& (0+255),w,b
  8813  001B02  26D9               	addwf	fsr2l,f,c
  8814  001B04  0100               	movlb	0	; () banked
  8815  001B06  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8816  001B08  22DA               	addwfc	fsr2h,f,c
  8817  001B0A  0E08               	movlw	8
  8818  001B0C  6EDF               	movwf	indf2,c
  8819                           
  8820                           ;my_i2c.c: 181: } else {
  8821  001B0E  0012               	return	
  8822  001B10                     i2l4112:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;my_i2c.c: 182: ic_ptr->status = 0x7;
  8826  001B10  0100               	movlb	0	; () banked
  8827  001B12  EE20 F00D          	lfsr	2,13
  8828  001B16  0100               	movlb	0	; () banked
  8829  001B18  51C9               	movf	_ic_ptr& (0+255),w,b
  8830  001B1A  26D9               	addwf	fsr2l,f,c
  8831  001B1C  0100               	movlb	0	; () banked
  8832  001B1E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8833  001B20  22DA               	addwfc	fsr2h,f,c
  8834  001B22  0E07               	movlw	7
  8835  001B24  6EDF               	movwf	indf2,c
  8836  001B26  0012               	return	
  8837  001B28                     i2l4114:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;my_i2c.c: 186: ic_ptr->status = 0x6;
  8841  001B28  0100               	movlb	0	; () banked
  8842  001B2A  EE20 F00D          	lfsr	2,13
  8843  001B2E  0100               	movlb	0	; () banked
  8844  001B30  51C9               	movf	_ic_ptr& (0+255),w,b
  8845  001B32  26D9               	addwf	fsr2l,f,c
  8846  001B34  0100               	movlb	0	; () banked
  8847  001B36  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8848  001B38  22DA               	addwfc	fsr2h,f,c
  8849  001B3A  0E06               	movlw	6
  8850  001B3C  6EDF               	movwf	indf2,c
  8851  001B3E  0012               	return	
  8852  001B40                     __end_of_handle_start:
  8853                           	opt stack 0
  8854                           pclatu	equ	0xFFB
  8855                           pclath	equ	0xFFA
  8856                           tblptru	equ	0xFF8
  8857                           tblptrh	equ	0xFF7
  8858                           tblptrl	equ	0xFF6
  8859                           tablat	equ	0xFF5
  8860                           prodh	equ	0xFF4
  8861                           prodl	equ	0xFF3
  8862                           intcon	equ	0xFF2
  8863                           postinc0	equ	0xFEE
  8864                           fsr0h	equ	0xFEA
  8865                           fsr0l	equ	0xFE9
  8866                           wreg	equ	0xFE8
  8867                           indf1	equ	0xFE7
  8868                           postdec1	equ	0xFE5
  8869                           fsr1h	equ	0xFE2
  8870                           fsr1l	equ	0xFE1
  8871                           bsr	equ	0xFE0
  8872                           indf2	equ	0xFDF
  8873                           postinc2	equ	0xFDE
  8874                           postdec2	equ	0xFDD
  8875                           fsr2h	equ	0xFDA
  8876                           fsr2l	equ	0xFD9
  8877                           status	equ	0xFD8
  8878                           
  8879 ;; *************** function _i2c_master_int_handler *****************
  8880 ;; Defined at:
  8881 ;;		line 452 in file "source/my_i2c.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;		None               void
  8888 ;; Registers used:
  8889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8895 ;;      Params:         0       0       0       0       0
  8896 ;;      Locals:         0       0       0       0       0
  8897 ;;      Temps:          0       1       0       0       0
  8898 ;;      Totals:         0       1       0       0       0
  8899 ;;Total ram usage:        1 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    3
  8902 ;; This function calls:
  8903 ;;		i2_ToMainHigh_sendmsg
  8904 ;;		i2_ToMainLow_sendmsg
  8905 ;; This function is called by:
  8906 ;;		_i2c_int_handler
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910                           	psect	text46
  8911  000BE8                     __ptext46:
  8912                           	opt stack 0
  8913  000BE8                     _i2c_master_int_handler:
  8914                           	opt stack 15
  8915                           
  8916                           ;my_i2c.c: 453: switch (ic_ptr->status){
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;incstack = 0
  8920  000BE8  D1EE               	goto	i2l4190
  8921  000BEA                     i2l4118:
  8922                           
  8923                           ;my_i2c.c: 456: ic_ptr->status = 0x24;
  8924  000BEA  0100               	movlb	0	; () banked
  8925  000BEC  EE20 F00D          	lfsr	2,13
  8926  000BF0  0100               	movlb	0	; () banked
  8927  000BF2  51C9               	movf	_ic_ptr& (0+255),w,b
  8928  000BF4  26D9               	addwf	fsr2l,f,c
  8929  000BF6  0100               	movlb	0	; () banked
  8930  000BF8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8931  000BFA  22DA               	addwfc	fsr2h,f,c
  8932  000BFC  0E24               	movlw	36
  8933  000BFE  6EDF               	movwf	indf2,c
  8934                           
  8935                           ;my_i2c.c: 457: SSPBUF = ((ic_ptr->slave_addr << 1) & 0xFE);
  8936  000C00  0100               	movlb	0	; () banked
  8937  000C02  EE20 F01C          	lfsr	2,28
  8938  000C06  0100               	movlb	0	; () banked
  8939  000C08  51C9               	movf	_ic_ptr& (0+255),w,b
  8940  000C0A  26D9               	addwf	fsr2l,f,c
  8941  000C0C  0100               	movlb	0	; () banked
  8942  000C0E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8943  000C10  22DA               	addwfc	fsr2h,f,c
  8944  000C12  50DF               	movf	indf2,w,c
  8945  000C14  0100               	movlb	0	; () banked
  8946  000C16  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  8947  000C18  0100               	movlb	0	; () banked
  8948  000C1A  90D8               	bcf	status,0,c
  8949  000C1C  359A               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  8950  000C1E  0BFE               	andlw	254
  8951  000C20  6EC9               	movwf	4041,c	;volatile
  8952                           
  8953                           ;my_i2c.c: 458: break;
  8954  000C22  0012               	return	
  8955  000C24                     i2l377:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;my_i2c.c: 461: if (SSPCON2bits.ACKSTAT == 0) {
  8959  000C24  BCC5               	btfsc	4037,6,c	;volatile
  8960  000C26  D07A               	goto	i2l4136
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;my_i2c.c: 462: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8964  000C28  0100               	movlb	0	; () banked
  8965  000C2A  EE20 F01B          	lfsr	2,27
  8966  000C2E  0100               	movlb	0	; () banked
  8967  000C30  51C9               	movf	_ic_ptr& (0+255),w,b
  8968  000C32  26D9               	addwf	fsr2l,f,c
  8969  000C34  0100               	movlb	0	; () banked
  8970  000C36  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8971  000C38  22DA               	addwfc	fsr2h,f,c
  8972  000C3A  50DF               	movf	indf2,w,c
  8973  000C3C  0100               	movlb	0	; () banked
  8974  000C3E  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  8975  000C40  0100               	movlb	0	; () banked
  8976  000C42  EE20 F01A          	lfsr	2,26
  8977  000C46  0100               	movlb	0	; () banked
  8978  000C48  51C9               	movf	_ic_ptr& (0+255),w,b
  8979  000C4A  26D9               	addwf	fsr2l,f,c
  8980  000C4C  0100               	movlb	0	; () banked
  8981  000C4E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8982  000C50  22DA               	addwfc	fsr2h,f,c
  8983  000C52  50DF               	movf	indf2,w,c
  8984  000C54  0100               	movlb	0	; () banked
  8985  000C56  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  8986  000C58  B0D8               	btfsc	status,0,c
  8987  000C5A  D035               	goto	i2l4128
  8988                           
  8989                           ; BSR set to: 0
  8990                           ;my_i2c.c: 463: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8991  000C5C  0100               	movlb	0	; () banked
  8992  000C5E  EE20 F01B          	lfsr	2,27
  8993  000C62  0100               	movlb	0	; () banked
  8994  000C64  51C9               	movf	_ic_ptr& (0+255),w,b
  8995  000C66  26D9               	addwf	fsr2l,f,c
  8996  000C68  0100               	movlb	0	; () banked
  8997  000C6A  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  8998  000C6C  22DA               	addwfc	fsr2h,f,c
  8999  000C6E  50DF               	movf	indf2,w,c
  9000  000C70  0100               	movlb	0	; () banked
  9001  000C72  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9002  000C74  0100               	movlb	0	; () banked
  9003  000C76  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9004  000C78  0D01               	mullw	1
  9005  000C7A  0E10               	movlw	16
  9006  000C7C  26F3               	addwf	prodl,f,c
  9007  000C7E  0E00               	movlw	0
  9008  000C80  22F4               	addwfc	prodh,f,c
  9009  000C82  50F3               	movf	prodl,w,c
  9010  000C84  0100               	movlb	0	; () banked
  9011  000C86  0100               	movlb	0	; () banked
  9012  000C88  25C9               	addwf	_ic_ptr& (0+255),w,b
  9013  000C8A  6ED9               	movwf	fsr2l,c
  9014  000C8C  50F4               	movf	prodh,w,c
  9015  000C8E  0100               	movlb	0	; () banked
  9016  000C90  0100               	movlb	0	; () banked
  9017  000C92  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9018  000C94  6EDA               	movwf	fsr2h,c
  9019  000C96  50DF               	movf	indf2,w,c
  9020  000C98  6EC9               	movwf	4041,c	;volatile
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;my_i2c.c: 464: ic_ptr->outbufind++;
  9024  000C9A  0100               	movlb	0	; () banked
  9025  000C9C  EE20 F01B          	lfsr	2,27
  9026  000CA0  0100               	movlb	0	; () banked
  9027  000CA2  51C9               	movf	_ic_ptr& (0+255),w,b
  9028  000CA4  26D9               	addwf	fsr2l,f,c
  9029  000CA6  0100               	movlb	0	; () banked
  9030  000CA8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9031  000CAA  22DA               	addwfc	fsr2h,f,c
  9032  000CAC  2ADF               	incf	indf2,f,c
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;my_i2c.c: 465: ic_ptr->status = 0x24;
  9036  000CAE  0100               	movlb	0	; () banked
  9037  000CB0  EE20 F00D          	lfsr	2,13
  9038  000CB4  0100               	movlb	0	; () banked
  9039  000CB6  51C9               	movf	_ic_ptr& (0+255),w,b
  9040  000CB8  26D9               	addwf	fsr2l,f,c
  9041  000CBA  0100               	movlb	0	; () banked
  9042  000CBC  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9043  000CBE  22DA               	addwfc	fsr2h,f,c
  9044  000CC0  0E24               	movlw	36
  9045  000CC2  6EDF               	movwf	indf2,c
  9046                           
  9047                           ;my_i2c.c: 466: }
  9048  000CC4  0012               	return	
  9049  000CC6                     i2l4128:
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;my_i2c.c: 467: else {
  9053                           ;my_i2c.c: 468: ToMainHigh_sendmsg(0, 43, 0);
  9054  000CC6  0100               	movlb	0	; () banked
  9055  000CC8  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9056  000CCA  0E2B               	movlw	43
  9057  000CCC  0100               	movlb	0	; () banked
  9058  000CCE  0100               	movlb	0	; () banked
  9059  000CD0  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9060  000CD2  0100               	movlb	0	; () banked
  9061  000CD4  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9062  000CD6  0E00               	movlw	0
  9063  000CD8  0100               	movlb	0	; () banked
  9064  000CDA  0100               	movlb	0	; () banked
  9065  000CDC  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9066  000CDE  0E00               	movlw	0
  9067  000CE0  0100               	movlb	0	; () banked
  9068  000CE2  0100               	movlb	0	; () banked
  9069  000CE4  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9070  000CE6  0E00               	movlw	0
  9071  000CE8  ECEC  F011         	call	i2_ToMainHigh_sendmsg
  9072                           
  9073                           ;my_i2c.c: 469: ic_ptr->outbuflen = 0;
  9074  000CEC  0100               	movlb	0	; () banked
  9075  000CEE  EE20 F01A          	lfsr	2,26
  9076  000CF2  0100               	movlb	0	; () banked
  9077  000CF4  51C9               	movf	_ic_ptr& (0+255),w,b
  9078  000CF6  26D9               	addwf	fsr2l,f,c
  9079  000CF8  0100               	movlb	0	; () banked
  9080  000CFA  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9081  000CFC  22DA               	addwfc	fsr2h,f,c
  9082  000CFE  0E00               	movlw	0
  9083  000D00  6EDF               	movwf	indf2,c
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;my_i2c.c: 470: ic_ptr->status = 0x5;
  9087  000D02  0100               	movlb	0	; () banked
  9088  000D04  EE20 F00D          	lfsr	2,13
  9089  000D08  0100               	movlb	0	; () banked
  9090  000D0A  51C9               	movf	_ic_ptr& (0+255),w,b
  9091  000D0C  26D9               	addwf	fsr2l,f,c
  9092  000D0E  0100               	movlb	0	; () banked
  9093  000D10  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9094  000D12  22DA               	addwfc	fsr2h,f,c
  9095  000D14  0E05               	movlw	5
  9096  000D16  6EDF               	movwf	indf2,c
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;my_i2c.c: 471: SSPCON2bits.PEN = 1;
  9100  000D18  84C5               	bsf	4037,2,c	;volatile
  9101  000D1A  0012               	return	
  9102  000D1C                     i2l4136:
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;my_i2c.c: 474: else {
  9106                           ;my_i2c.c: 475: ToMainHigh_sendmsg(0, 44, 0);
  9107  000D1C  0100               	movlb	0	; () banked
  9108  000D1E  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9109  000D20  0E2C               	movlw	44
  9110  000D22  0100               	movlb	0	; () banked
  9111  000D24  0100               	movlb	0	; () banked
  9112  000D26  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9113  000D28  0100               	movlb	0	; () banked
  9114  000D2A  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9115  000D2C  0E00               	movlw	0
  9116  000D2E  0100               	movlb	0	; () banked
  9117  000D30  0100               	movlb	0	; () banked
  9118  000D32  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9119  000D34  0E00               	movlw	0
  9120  000D36  0100               	movlb	0	; () banked
  9121  000D38  0100               	movlb	0	; () banked
  9122  000D3A  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9123  000D3C  0E00               	movlw	0
  9124  000D3E  ECEC  F011         	call	i2_ToMainHigh_sendmsg
  9125                           
  9126                           ;my_i2c.c: 476: ic_ptr->status = 0x5;
  9127  000D42  0100               	movlb	0	; () banked
  9128  000D44  EE20 F00D          	lfsr	2,13
  9129  000D48  0100               	movlb	0	; () banked
  9130  000D4A  51C9               	movf	_ic_ptr& (0+255),w,b
  9131  000D4C  26D9               	addwf	fsr2l,f,c
  9132  000D4E  0100               	movlb	0	; () banked
  9133  000D50  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9134  000D52  22DA               	addwfc	fsr2h,f,c
  9135  000D54  0E05               	movlw	5
  9136  000D56  6EDF               	movwf	indf2,c
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;my_i2c.c: 477: SSPCON2bits.PEN = 1;
  9140  000D58  84C5               	bsf	4037,2,c	;volatile
  9141  000D5A  0012               	return	
  9142  000D5C                     i2l4142:
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;my_i2c.c: 482: ToMainHigh_sendmsg(0, 43, 0);
  9146  000D5C  0100               	movlb	0	; () banked
  9147  000D5E  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9148  000D60  0E2B               	movlw	43
  9149  000D62  0100               	movlb	0	; () banked
  9150  000D64  0100               	movlb	0	; () banked
  9151  000D66  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9152  000D68  0100               	movlb	0	; () banked
  9153  000D6A  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9154  000D6C  0E00               	movlw	0
  9155  000D6E  0100               	movlb	0	; () banked
  9156  000D70  0100               	movlb	0	; () banked
  9157  000D72  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9158  000D74  0E00               	movlw	0
  9159  000D76  0100               	movlb	0	; () banked
  9160  000D78  0100               	movlb	0	; () banked
  9161  000D7A  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9162  000D7C  0E00               	movlw	0
  9163  000D7E  ECEC  F011         	call	i2_ToMainHigh_sendmsg
  9164                           
  9165                           ;my_i2c.c: 483: ic_ptr->status = 0x5;
  9166  000D82  0100               	movlb	0	; () banked
  9167  000D84  EE20 F00D          	lfsr	2,13
  9168  000D88  0100               	movlb	0	; () banked
  9169  000D8A  51C9               	movf	_ic_ptr& (0+255),w,b
  9170  000D8C  26D9               	addwf	fsr2l,f,c
  9171  000D8E  0100               	movlb	0	; () banked
  9172  000D90  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9173  000D92  22DA               	addwfc	fsr2h,f,c
  9174  000D94  0E05               	movlw	5
  9175  000D96  6EDF               	movwf	indf2,c
  9176                           
  9177                           ;my_i2c.c: 484: break;
  9178  000D98  0012               	return	
  9179  000D9A                     i2l4146:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;my_i2c.c: 491: ic_ptr->status = 0x27;
  9183  000D9A  0100               	movlb	0	; () banked
  9184  000D9C  EE20 F00D          	lfsr	2,13
  9185  000DA0  0100               	movlb	0	; () banked
  9186  000DA2  51C9               	movf	_ic_ptr& (0+255),w,b
  9187  000DA4  26D9               	addwf	fsr2l,f,c
  9188  000DA6  0100               	movlb	0	; () banked
  9189  000DA8  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9190  000DAA  22DA               	addwfc	fsr2h,f,c
  9191  000DAC  0E27               	movlw	39
  9192  000DAE  6EDF               	movwf	indf2,c
  9193                           
  9194                           ;my_i2c.c: 492: SSPBUF = ((ic_ptr->slave_addr << 1) | 0x01) & 0xFF;
  9195  000DB0  0100               	movlb	0	; () banked
  9196  000DB2  EE20 F01C          	lfsr	2,28
  9197  000DB6  0100               	movlb	0	; () banked
  9198  000DB8  51C9               	movf	_ic_ptr& (0+255),w,b
  9199  000DBA  26D9               	addwf	fsr2l,f,c
  9200  000DBC  0100               	movlb	0	; () banked
  9201  000DBE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9202  000DC0  22DA               	addwfc	fsr2h,f,c
  9203  000DC2  50DF               	movf	indf2,w,c
  9204  000DC4  0100               	movlb	0	; () banked
  9205  000DC6  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9206  000DC8  0100               	movlb	0	; () banked
  9207  000DCA  80D8               	bsf	status,0,c
  9208  000DCC  359A               	rlcf	??_i2c_master_int_handler& (0+255),w,b
  9209  000DCE  6EC9               	movwf	4041,c	;volatile
  9210                           
  9211                           ;my_i2c.c: 493: break;
  9212  000DD0  0012               	return	
  9213  000DD2                     i2l384:
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;my_i2c.c: 496: if (SSPCON2bits.ACKSTAT == 0) {
  9217  000DD2  BCC5               	btfsc	4037,6,c	;volatile
  9218  000DD4  D00D               	goto	i2l4152
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;my_i2c.c: 498: ic_ptr->status = 0x15;
  9222  000DD6  0100               	movlb	0	; () banked
  9223  000DD8  EE20 F00D          	lfsr	2,13
  9224  000DDC  0100               	movlb	0	; () banked
  9225  000DDE  51C9               	movf	_ic_ptr& (0+255),w,b
  9226  000DE0  26D9               	addwf	fsr2l,f,c
  9227  000DE2  0100               	movlb	0	; () banked
  9228  000DE4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9229  000DE6  22DA               	addwfc	fsr2h,f,c
  9230  000DE8  0E15               	movlw	21
  9231  000DEA  6EDF               	movwf	indf2,c
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;my_i2c.c: 499: SSPCON2bits.RCEN = 1;
  9235  000DEC  86C5               	bsf	4037,3,c	;volatile
  9236                           
  9237                           ;my_i2c.c: 500: }
  9238  000DEE  0012               	return	
  9239  000DF0                     i2l4152:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;my_i2c.c: 501: else {
  9243                           ;my_i2c.c: 502: ToMainHigh_sendmsg(0, 46, 0);
  9244  000DF0  0100               	movlb	0	; () banked
  9245  000DF2  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9246  000DF4  0E2E               	movlw	46
  9247  000DF6  0100               	movlb	0	; () banked
  9248  000DF8  0100               	movlb	0	; () banked
  9249  000DFA  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  9250  000DFC  0100               	movlb	0	; () banked
  9251  000DFE  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9252  000E00  0E00               	movlw	0
  9253  000E02  0100               	movlb	0	; () banked
  9254  000E04  0100               	movlb	0	; () banked
  9255  000E06  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  9256  000E08  0E00               	movlw	0
  9257  000E0A  0100               	movlb	0	; () banked
  9258  000E0C  0100               	movlb	0	; () banked
  9259  000E0E  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  9260  000E10  0E00               	movlw	0
  9261  000E12  ECEC  F011         	call	i2_ToMainHigh_sendmsg
  9262                           
  9263                           ;my_i2c.c: 503: ic_ptr->status = 0x5;
  9264  000E16  0100               	movlb	0	; () banked
  9265  000E18  EE20 F00D          	lfsr	2,13
  9266  000E1C  0100               	movlb	0	; () banked
  9267  000E1E  51C9               	movf	_ic_ptr& (0+255),w,b
  9268  000E20  26D9               	addwf	fsr2l,f,c
  9269  000E22  0100               	movlb	0	; () banked
  9270  000E24  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9271  000E26  22DA               	addwfc	fsr2h,f,c
  9272  000E28  0E05               	movlw	5
  9273  000E2A  6EDF               	movwf	indf2,c
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;my_i2c.c: 504: SSPCON2bits.PEN = 1;
  9277  000E2C  84C5               	bsf	4037,2,c	;volatile
  9278  000E2E  0012               	return	
  9279  000E30                     i2l4158:
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;my_i2c.c: 511: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  9283  000E30  0100               	movlb	0	; () banked
  9284  000E32  EE20 F00B          	lfsr	2,11
  9285  000E36  0100               	movlb	0	; () banked
  9286  000E38  51C9               	movf	_ic_ptr& (0+255),w,b
  9287  000E3A  26D9               	addwf	fsr2l,f,c
  9288  000E3C  0100               	movlb	0	; () banked
  9289  000E3E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9290  000E40  22DA               	addwfc	fsr2h,f,c
  9291  000E42  50DF               	movf	indf2,w,c
  9292  000E44  0100               	movlb	0	; () banked
  9293  000E46  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9294  000E48  0100               	movlb	0	; () banked
  9295  000E4A  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9296  000E4C  0D01               	mullw	1
  9297  000E4E  50F3               	movf	prodl,w,c
  9298  000E50  0100               	movlb	0	; () banked
  9299  000E52  0100               	movlb	0	; () banked
  9300  000E54  25C9               	addwf	_ic_ptr& (0+255),w,b
  9301  000E56  6ED9               	movwf	fsr2l,c
  9302  000E58  50F4               	movf	prodh,w,c
  9303  000E5A  0100               	movlb	0	; () banked
  9304  000E5C  0100               	movlb	0	; () banked
  9305  000E5E  21CA               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9306  000E60  6EDA               	movwf	fsr2h,c
  9307  000E62  CFC9 FFDF          	movff	4041,indf2	;volatile
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;my_i2c.c: 512: ic_ptr->bufind++;
  9311  000E66  0100               	movlb	0	; () banked
  9312  000E68  EE20 F00B          	lfsr	2,11
  9313  000E6C  0100               	movlb	0	; () banked
  9314  000E6E  51C9               	movf	_ic_ptr& (0+255),w,b
  9315  000E70  26D9               	addwf	fsr2l,f,c
  9316  000E72  0100               	movlb	0	; () banked
  9317  000E74  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9318  000E76  22DA               	addwfc	fsr2h,f,c
  9319  000E78  2ADF               	incf	indf2,f,c
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;my_i2c.c: 513: ic_ptr->status = 0x14;
  9323  000E7A  0100               	movlb	0	; () banked
  9324  000E7C  EE20 F00D          	lfsr	2,13
  9325  000E80  0100               	movlb	0	; () banked
  9326  000E82  51C9               	movf	_ic_ptr& (0+255),w,b
  9327  000E84  26D9               	addwf	fsr2l,f,c
  9328  000E86  0100               	movlb	0	; () banked
  9329  000E88  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9330  000E8A  22DA               	addwfc	fsr2h,f,c
  9331  000E8C  0E14               	movlw	20
  9332  000E8E  6EDF               	movwf	indf2,c
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;my_i2c.c: 515: if (ic_ptr->bufind < ic_ptr->buflen) {
  9336  000E90  0100               	movlb	0	; () banked
  9337  000E92  EE20 F00B          	lfsr	2,11
  9338  000E96  0100               	movlb	0	; () banked
  9339  000E98  51C9               	movf	_ic_ptr& (0+255),w,b
  9340  000E9A  26D9               	addwf	fsr2l,f,c
  9341  000E9C  0100               	movlb	0	; () banked
  9342  000E9E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9343  000EA0  22DA               	addwfc	fsr2h,f,c
  9344  000EA2  50DF               	movf	indf2,w,c
  9345  000EA4  0100               	movlb	0	; () banked
  9346  000EA6  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9347  000EA8  0100               	movlb	0	; () banked
  9348  000EAA  EE20 F00A          	lfsr	2,10
  9349  000EAE  0100               	movlb	0	; () banked
  9350  000EB0  51C9               	movf	_ic_ptr& (0+255),w,b
  9351  000EB2  26D9               	addwf	fsr2l,f,c
  9352  000EB4  0100               	movlb	0	; () banked
  9353  000EB6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9354  000EB8  22DA               	addwfc	fsr2h,f,c
  9355  000EBA  50DF               	movf	indf2,w,c
  9356  000EBC  0100               	movlb	0	; () banked
  9357  000EBE  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9358  000EC0  B0D8               	btfsc	status,0,c
  9359  000EC2  D003               	goto	i2l388
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;my_i2c.c: 516: SSPCON2bits.ACKDT = 0;
  9363  000EC4  9AC5               	bcf	4037,5,c	;volatile
  9364                           
  9365                           ;my_i2c.c: 517: SSPCON2bits.ACKEN = 1;
  9366  000EC6  88C5               	bsf	4037,4,c	;volatile
  9367                           
  9368                           ;my_i2c.c: 518: }
  9369  000EC8  0012               	return	
  9370  000ECA                     i2l388:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;my_i2c.c: 519: else {
  9374                           ;my_i2c.c: 520: SSPCON2bits.ACKDT = 1;
  9375  000ECA  8AC5               	bsf	4037,5,c	;volatile
  9376                           
  9377                           ;my_i2c.c: 521: SSPCON2bits.ACKEN = 1;
  9378  000ECC  88C5               	bsf	4037,4,c	;volatile
  9379  000ECE  0012               	return	
  9380  000ED0                     i2l4168:
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;my_i2c.c: 526: if (ic_ptr->bufind < ic_ptr->buflen) {
  9384  000ED0  0100               	movlb	0	; () banked
  9385  000ED2  EE20 F00B          	lfsr	2,11
  9386  000ED6  0100               	movlb	0	; () banked
  9387  000ED8  51C9               	movf	_ic_ptr& (0+255),w,b
  9388  000EDA  26D9               	addwf	fsr2l,f,c
  9389  000EDC  0100               	movlb	0	; () banked
  9390  000EDE  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9391  000EE0  22DA               	addwfc	fsr2h,f,c
  9392  000EE2  50DF               	movf	indf2,w,c
  9393  000EE4  0100               	movlb	0	; () banked
  9394  000EE6  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9395  000EE8  0100               	movlb	0	; () banked
  9396  000EEA  EE20 F00A          	lfsr	2,10
  9397  000EEE  0100               	movlb	0	; () banked
  9398  000EF0  51C9               	movf	_ic_ptr& (0+255),w,b
  9399  000EF2  26D9               	addwf	fsr2l,f,c
  9400  000EF4  0100               	movlb	0	; () banked
  9401  000EF6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9402  000EF8  22DA               	addwfc	fsr2h,f,c
  9403  000EFA  50DF               	movf	indf2,w,c
  9404  000EFC  0100               	movlb	0	; () banked
  9405  000EFE  5D9A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  9406  000F00  B0D8               	btfsc	status,0,c
  9407  000F02  D00D               	goto	i2l4174
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;my_i2c.c: 527: ic_ptr->status = 0x15;
  9411  000F04  0100               	movlb	0	; () banked
  9412  000F06  EE20 F00D          	lfsr	2,13
  9413  000F0A  0100               	movlb	0	; () banked
  9414  000F0C  51C9               	movf	_ic_ptr& (0+255),w,b
  9415  000F0E  26D9               	addwf	fsr2l,f,c
  9416  000F10  0100               	movlb	0	; () banked
  9417  000F12  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9418  000F14  22DA               	addwfc	fsr2h,f,c
  9419  000F16  0E15               	movlw	21
  9420  000F18  6EDF               	movwf	indf2,c
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;my_i2c.c: 528: SSPCON2bits.RCEN = 1;
  9424  000F1A  86C5               	bsf	4037,3,c	;volatile
  9425                           
  9426                           ;my_i2c.c: 529: }
  9427  000F1C  0012               	return	
  9428  000F1E                     i2l4174:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;my_i2c.c: 530: else {
  9432                           ;my_i2c.c: 531: if(ic_ptr->slave_addr == 0x4F)
  9433  000F1E  0100               	movlb	0	; () banked
  9434  000F20  EE20 F01C          	lfsr	2,28
  9435  000F24  0100               	movlb	0	; () banked
  9436  000F26  51C9               	movf	_ic_ptr& (0+255),w,b
  9437  000F28  26D9               	addwf	fsr2l,f,c
  9438  000F2A  0100               	movlb	0	; () banked
  9439  000F2C  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9440  000F2E  22DA               	addwfc	fsr2h,f,c
  9441  000F30  0E4F               	movlw	79
  9442  000F32  62DF               	cpfseq	indf2,c
  9443  000F34  D01D               	goto	i2l4178
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;my_i2c.c: 532: {ToMainLow_sendmsg(ic_ptr->buflen, 51, (void *)(ic_ptr->buffer));}
  9447  000F36  0100               	movlb	0	; () banked
  9448  000F38  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9449  000F3A  0E33               	movlw	51
  9450  000F3C  0100               	movlb	0	; () banked
  9451  000F3E  0100               	movlb	0	; () banked
  9452  000F40  6F96               	movwf	i2ToMainLow_sendmsg@msgtype& (0+255),b
  9453  000F42  0100               	movlb	0	; () banked
  9454  000F44  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9455  000F46  0100               	movlb	0	; () banked
  9456  000F48  0100               	movlb	0	; () banked
  9457  000F4A  C0CA  F098         	movff	_ic_ptr+1,i2ToMainLow_sendmsg@data+1
  9458  000F4E  0100               	movlb	0	; () banked
  9459  000F50  0100               	movlb	0	; () banked
  9460  000F52  C0C9  F097         	movff	_ic_ptr,i2ToMainLow_sendmsg@data
  9461  000F56  0100               	movlb	0	; () banked
  9462  000F58  EE20 F00A          	lfsr	2,10
  9463  000F5C  0100               	movlb	0	; () banked
  9464  000F5E  51C9               	movf	_ic_ptr& (0+255),w,b
  9465  000F60  26D9               	addwf	fsr2l,f,c
  9466  000F62  0100               	movlb	0	; () banked
  9467  000F64  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9468  000F66  22DA               	addwfc	fsr2h,f,c
  9469  000F68  50DF               	movf	indf2,w,c
  9470  000F6A  ECD1  F011         	call	i2_ToMainLow_sendmsg
  9471  000F6E  D01C               	goto	i2l4180
  9472  000F70                     i2l4178:
  9473                           
  9474                           ;my_i2c.c: 533: else
  9475                           ;my_i2c.c: 534: {ToMainLow_sendmsg(ic_ptr->buflen, 50, (void *)(ic_ptr->buffer));}
  9476  000F70  0100               	movlb	0	; () banked
  9477  000F72  6F9A               	movwf	??_i2c_master_int_handler& (0+255),b
  9478  000F74  0E32               	movlw	50
  9479  000F76  0100               	movlb	0	; () banked
  9480  000F78  0100               	movlb	0	; () banked
  9481  000F7A  6F96               	movwf	i2ToMainLow_sendmsg@msgtype& (0+255),b
  9482  000F7C  0100               	movlb	0	; () banked
  9483  000F7E  519A               	movf	??_i2c_master_int_handler& (0+255),w,b
  9484  000F80  0100               	movlb	0	; () banked
  9485  000F82  0100               	movlb	0	; () banked
  9486  000F84  C0CA  F098         	movff	_ic_ptr+1,i2ToMainLow_sendmsg@data+1
  9487  000F88  0100               	movlb	0	; () banked
  9488  000F8A  0100               	movlb	0	; () banked
  9489  000F8C  C0C9  F097         	movff	_ic_ptr,i2ToMainLow_sendmsg@data
  9490  000F90  0100               	movlb	0	; () banked
  9491  000F92  EE20 F00A          	lfsr	2,10
  9492  000F96  0100               	movlb	0	; () banked
  9493  000F98  51C9               	movf	_ic_ptr& (0+255),w,b
  9494  000F9A  26D9               	addwf	fsr2l,f,c
  9495  000F9C  0100               	movlb	0	; () banked
  9496  000F9E  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9497  000FA0  22DA               	addwfc	fsr2h,f,c
  9498  000FA2  50DF               	movf	indf2,w,c
  9499  000FA4  ECD1  F011         	call	i2_ToMainLow_sendmsg
  9500  000FA8                     i2l4180:
  9501                           
  9502                           ;my_i2c.c: 536: ic_ptr->status = 0x5;
  9503  000FA8  0100               	movlb	0	; () banked
  9504  000FAA  EE20 F00D          	lfsr	2,13
  9505  000FAE  0100               	movlb	0	; () banked
  9506  000FB0  51C9               	movf	_ic_ptr& (0+255),w,b
  9507  000FB2  26D9               	addwf	fsr2l,f,c
  9508  000FB4  0100               	movlb	0	; () banked
  9509  000FB6  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9510  000FB8  22DA               	addwfc	fsr2h,f,c
  9511  000FBA  0E05               	movlw	5
  9512  000FBC  6EDF               	movwf	indf2,c
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;my_i2c.c: 537: SSPCON2bits.PEN = 1;
  9516  000FBE  84C5               	bsf	4037,2,c	;volatile
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;my_i2c.c: 538: SSPCON2bits.ACKDT = 0;
  9520  000FC0  9AC5               	bcf	4037,5,c	;volatile
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;my_i2c.c: 539: SSPCON2bits.ACKEN = 1;
  9524  000FC2  88C5               	bsf	4037,4,c	;volatile
  9525  000FC4  0012               	return	
  9526  000FC6                     i2l4190:
  9527  000FC6  0100               	movlb	0	; () banked
  9528  000FC8  EE20 F00D          	lfsr	2,13
  9529  000FCC  0100               	movlb	0	; () banked
  9530  000FCE  51C9               	movf	_ic_ptr& (0+255),w,b
  9531  000FD0  26D9               	addwf	fsr2l,f,c
  9532  000FD2  0100               	movlb	0	; () banked
  9533  000FD4  51CA               	movf	(_ic_ptr+1)& (0+255),w,b
  9534  000FD6  22DA               	addwfc	fsr2h,f,c
  9535  000FD8  50DF               	movf	indf2,w,c
  9536                           
  9537                           ; Switch size 1, requested type "space"
  9538                           ; Number of cases is 7, Range of values is 9 to 39
  9539                           ; switch strategies available:
  9540                           ; Name         Instructions Cycles
  9541                           ; simple_byte           22    12 (average)
  9542                           ;	Chosen strategy is simple_byte
  9543  000FDA  0A09               	xorlw	9	; case 9
  9544  000FDC  B4D8               	btfsc	status,2,c
  9545  000FDE  D605               	goto	i2l4118
  9546  000FE0  0A19               	xorlw	25	; case 16
  9547  000FE2  B4D8               	btfsc	status,2,c
  9548  000FE4  D6DA               	goto	i2l4146
  9549  000FE6  0A03               	xorlw	3	; case 19
  9550  000FE8  B4D8               	btfsc	status,2,c
  9551  000FEA  D6B8               	goto	i2l4142
  9552  000FEC  0A07               	xorlw	7	; case 20
  9553  000FEE  B4D8               	btfsc	status,2,c
  9554  000FF0  D76F               	goto	i2l4168
  9555  000FF2  0A01               	xorlw	1	; case 21
  9556  000FF4  B4D8               	btfsc	status,2,c
  9557  000FF6  D71C               	goto	i2l4158
  9558  000FF8  0A31               	xorlw	49	; case 36
  9559  000FFA  B4D8               	btfsc	status,2,c
  9560  000FFC  D613               	goto	i2l377
  9561  000FFE  0A03               	xorlw	3	; case 39
  9562  001000  A4D8               	btfss	status,2,c
  9563  001002  0012               	return	
  9564  001004  D6E6               	goto	i2l384
  9565  001006                     __end_of_i2c_master_int_handler:
  9566                           	opt stack 0
  9567                           pclatu	equ	0xFFB
  9568                           pclath	equ	0xFFA
  9569                           tblptru	equ	0xFF8
  9570                           tblptrh	equ	0xFF7
  9571                           tblptrl	equ	0xFF6
  9572                           tablat	equ	0xFF5
  9573                           prodh	equ	0xFF4
  9574                           prodl	equ	0xFF3
  9575                           intcon	equ	0xFF2
  9576                           postinc0	equ	0xFEE
  9577                           fsr0h	equ	0xFEA
  9578                           fsr0l	equ	0xFE9
  9579                           wreg	equ	0xFE8
  9580                           indf1	equ	0xFE7
  9581                           postdec1	equ	0xFE5
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           bsr	equ	0xFE0
  9585                           indf2	equ	0xFDF
  9586                           postinc2	equ	0xFDE
  9587                           postdec2	equ	0xFDD
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function i2_ToMainLow_sendmsg *****************
  9593 ;; Defined at:
  9594 ;;		line 103 in file "source/messages.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  length          1    wreg     unsigned char 
  9597 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9598 ;;  data            2   23[BANK0 ] PTR void 
  9599 ;;		 -> buffer_temp(4), NULL(0), main@ic(53), 
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;  length          1   25[BANK0 ] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      char 
  9604 ;; Registers used:
  9605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9611 ;;      Params:         0       3       0       0       0
  9612 ;;      Locals:         0       1       0       0       0
  9613 ;;      Temps:          0       0       0       0       0
  9614 ;;      Totals:         0       4       0       0       0
  9615 ;;Total ram usage:        4 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    2
  9618 ;; This function calls:
  9619 ;;		i2_send_msg
  9620 ;; This function is called by:
  9621 ;;		_i2c_master_int_handler
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text47
  9626  0023A2                     __ptext47:
  9627                           	opt stack 0
  9628  0023A2                     i2_ToMainLow_sendmsg:
  9629                           	opt stack 15
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;incstack = 0
  9633                           ;i2ToMainLow_sendmsg@length stored from wreg
  9634  0023A2  CFE8 F099          	movff	wreg,i2ToMainLow_sendmsg@length
  9635                           
  9636                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  9637                           ;	Return value of i2_ToMainLow_sendmsg is never used
  9638  0023A6  0101               	movlb	1	; () banked
  9639  0023A8  0E01               	movlw	high _ToMainLow_MQ
  9640  0023AA  0100               	movlb	0	; () banked
  9641  0023AC  0100               	movlb	0	; () banked
  9642  0023AE  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9643  0023B0  0101               	movlb	1	; () banked
  9644  0023B2  0E6C               	movlw	low _ToMainLow_MQ
  9645  0023B4  0100               	movlb	0	; () banked
  9646  0023B6  0100               	movlb	0	; () banked
  9647  0023B8  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  9648  0023BA  C099  F08C         	movff	i2ToMainLow_sendmsg@length,i2send_msg@length
  9649  0023BE  C096  F08D         	movff	i2ToMainLow_sendmsg@msgtype,i2send_msg@msgtype
  9650  0023C2  0100               	movlb	0	; () banked
  9651  0023C4  0100               	movlb	0	; () banked
  9652  0023C6  C098  F08F         	movff	i2ToMainLow_sendmsg@data+1,i2send_msg@data+1
  9653  0023CA  0100               	movlb	0	; () banked
  9654  0023CC  0100               	movlb	0	; () banked
  9655  0023CE  C097  F08E         	movff	i2ToMainLow_sendmsg@data,i2send_msg@data
  9656  0023D2  EC6E  F00B         	call	i2_send_msg	;wreg free
  9657  0023D6  0012               	return	
  9658  0023D8                     __end_ofi2_ToMainLow_sendmsg:
  9659                           	opt stack 0
  9660                           pclatu	equ	0xFFB
  9661                           pclath	equ	0xFFA
  9662                           tblptru	equ	0xFF8
  9663                           tblptrh	equ	0xFF7
  9664                           tblptrl	equ	0xFF6
  9665                           tablat	equ	0xFF5
  9666                           prodh	equ	0xFF4
  9667                           prodl	equ	0xFF3
  9668                           intcon	equ	0xFF2
  9669                           postinc0	equ	0xFEE
  9670                           fsr0h	equ	0xFEA
  9671                           fsr0l	equ	0xFE9
  9672                           wreg	equ	0xFE8
  9673                           indf1	equ	0xFE7
  9674                           postdec1	equ	0xFE5
  9675                           fsr1h	equ	0xFE2
  9676                           fsr1l	equ	0xFE1
  9677                           bsr	equ	0xFE0
  9678                           indf2	equ	0xFDF
  9679                           postinc2	equ	0xFDE
  9680                           postdec2	equ	0xFDD
  9681                           fsr2h	equ	0xFDA
  9682                           fsr2l	equ	0xFD9
  9683                           status	equ	0xFD8
  9684                           
  9685 ;; *************** function i2_ToMainHigh_sendmsg *****************
  9686 ;; Defined at:
  9687 ;;		line 126 in file "source/messages.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  length          1    wreg     unsigned char 
  9690 ;;  msgtype         1   22[BANK0 ] unsigned char 
  9691 ;;  data            2   23[BANK0 ] PTR void 
  9692 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;  length          1   25[BANK0 ] unsigned char 
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      char 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9704 ;;      Params:         0       3       0       0       0
  9705 ;;      Locals:         0       1       0       0       0
  9706 ;;      Temps:          0       0       0       0       0
  9707 ;;      Totals:         0       4       0       0       0
  9708 ;;Total ram usage:        4 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    2
  9711 ;; This function calls:
  9712 ;;		i2_send_msg
  9713 ;; This function is called by:
  9714 ;;		_i2c_slave_int_handler
  9715 ;;		_i2c_master_int_handler
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text48
  9720  0023D8                     __ptext48:
  9721                           	opt stack 0
  9722  0023D8                     i2_ToMainHigh_sendmsg:
  9723                           	opt stack 15
  9724                           
  9725                           ;incstack = 0
  9726                           ;i2ToMainHigh_sendmsg@length stored from wreg
  9727  0023D8  CFE8 F099          	movff	wreg,i2ToMainHigh_sendmsg@length
  9728                           
  9729                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9730                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  9731  0023DC  0101               	movlb	1	; () banked
  9732  0023DE  0E01               	movlw	high _ToMainHigh_MQ
  9733  0023E0  0100               	movlb	0	; () banked
  9734  0023E2  0100               	movlb	0	; () banked
  9735  0023E4  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9736  0023E6  0101               	movlb	1	; () banked
  9737  0023E8  0E36               	movlw	low _ToMainHigh_MQ
  9738  0023EA  0100               	movlb	0	; () banked
  9739  0023EC  0100               	movlb	0	; () banked
  9740  0023EE  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  9741  0023F0  C099  F08C         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  9742  0023F4  C096  F08D         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9743  0023F8  0100               	movlb	0	; () banked
  9744  0023FA  0100               	movlb	0	; () banked
  9745  0023FC  C098  F08F         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9746  002400  0100               	movlb	0	; () banked
  9747  002402  0100               	movlb	0	; () banked
  9748  002404  C097  F08E         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  9749  002408  EC6E  F00B         	call	i2_send_msg	;wreg free
  9750  00240C  0012               	return	
  9751  00240E                     __end_ofi2_ToMainHigh_sendmsg:
  9752                           	opt stack 0
  9753                           pclatu	equ	0xFFB
  9754                           pclath	equ	0xFFA
  9755                           tblptru	equ	0xFF8
  9756                           tblptrh	equ	0xFF7
  9757                           tblptrl	equ	0xFF6
  9758                           tablat	equ	0xFF5
  9759                           prodh	equ	0xFF4
  9760                           prodl	equ	0xFF3
  9761                           intcon	equ	0xFF2
  9762                           postinc0	equ	0xFEE
  9763                           fsr0h	equ	0xFEA
  9764                           fsr0l	equ	0xFE9
  9765                           wreg	equ	0xFE8
  9766                           indf1	equ	0xFE7
  9767                           postdec1	equ	0xFE5
  9768                           fsr1h	equ	0xFE2
  9769                           fsr1l	equ	0xFE1
  9770                           bsr	equ	0xFE0
  9771                           indf2	equ	0xFDF
  9772                           postinc2	equ	0xFDE
  9773                           postdec2	equ	0xFDD
  9774                           fsr2h	equ	0xFDA
  9775                           fsr2l	equ	0xFD9
  9776                           status	equ	0xFD8
  9777                           
  9778 ;; *************** function i2_send_msg *****************
  9779 ;; Defined at:
  9780 ;;		line 24 in file "source/messages.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9783 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9784 ;;  length          1   12[BANK0 ] unsigned char 
  9785 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9786 ;;  data            2   14[BANK0 ] PTR void 
  9787 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(53), 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9790 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9791 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9792 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9793 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      char 
  9796 ;; Registers used:
  9797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9803 ;;      Params:         0       6       0       0       0
  9804 ;;      Locals:         0       5       0       0       0
  9805 ;;      Temps:          0       1       0       0       0
  9806 ;;      Totals:         0      12       0       0       0
  9807 ;;Total ram usage:       12 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:    1
  9810 ;; This function calls:
  9811 ;;		i2_memcpy
  9812 ;; This function is called by:
  9813 ;;		i2_ToMainLow_sendmsg
  9814 ;;		i2_ToMainHigh_sendmsg
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text49
  9819  0016DC                     __ptext49:
  9820                           	opt stack 0
  9821  0016DC                     i2_send_msg:
  9822                           	opt stack 15
  9823                           
  9824                           ;messages.c: 25: unsigned char slot;
  9825                           ;messages.c: 27: msg *qmsg;
  9826                           ;messages.c: 28: size_t tlength = length;
  9827                           
  9828                           ;incstack = 0
  9829  0016DC  0100               	movlb	0	; () banked
  9830  0016DE  0100               	movlb	0	; () banked
  9831  0016E0  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  9832  0016E4  0100               	movlb	0	; () banked
  9833  0016E6  0100               	movlb	0	; () banked
  9834  0016E8  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9838  0016EA  0100               	movlb	0	; () banked
  9839  0016EC  EE20 F034          	lfsr	2,52
  9840  0016F0  0100               	movlb	0	; () banked
  9841  0016F2  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9842  0016F4  26D9               	addwf	fsr2l,f,c
  9843  0016F6  0100               	movlb	0	; () banked
  9844  0016F8  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9845  0016FA  22DA               	addwfc	fsr2h,f,c
  9846  0016FC  50DF               	movf	indf2,w,c
  9847  0016FE  0100               	movlb	0	; () banked
  9848  001700  0100               	movlb	0	; () banked
  9849  001702  6F93               	movwf	i2send_msg@slot& (0+255),b
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9853  001704  0100               	movlb	0	; () banked
  9854  001706  0100               	movlb	0	; () banked
  9855  001708  5193               	movf	i2send_msg@slot& (0+255),w,b
  9856  00170A  0D0D               	mullw	13
  9857  00170C  50F3               	movf	prodl,w,c
  9858  00170E  0100               	movlb	0	; () banked
  9859  001710  0100               	movlb	0	; () banked
  9860  001712  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9861  001714  0100               	movlb	0	; () banked
  9862  001716  0100               	movlb	0	; () banked
  9863  001718  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9864  00171A  50F4               	movf	prodh,w,c
  9865  00171C  0100               	movlb	0	; () banked
  9866  00171E  0100               	movlb	0	; () banked
  9867  001720  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9868  001722  0100               	movlb	0	; () banked
  9869  001724  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;messages.c: 41: if (qmsg->full != 0) {
  9873  001726  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9874  00172A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9875  00172E  50DF               	movf	indf2,w,c
  9876  001730  B4D8               	btfsc	status,2,c
  9877  001732  D002               	goto	i2l4436
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;messages.c: 42: return (-1);
  9881  001734  0EFF               	movlw	255
  9882  001736  0012               	return	
  9883  001738                     i2l4436:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;messages.c: 43: }
  9887                           ;messages.c: 46: qmsg->length = length;
  9888  001738  0100               	movlb	0	; () banked
  9889  00173A  EE20 F001          	lfsr	2,1
  9890  00173E  0100               	movlb	0	; () banked
  9891  001740  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9892  001742  26D9               	addwf	fsr2l,f,c
  9893  001744  0100               	movlb	0	; () banked
  9894  001746  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9895  001748  22DA               	addwfc	fsr2h,f,c
  9896  00174A  0100               	movlb	0	; () banked
  9897  00174C  C08C  FFDF         	movff	i2send_msg@length,indf2
  9898                           
  9899                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9900  001750  0100               	movlb	0	; () banked
  9901  001752  EE20 F002          	lfsr	2,2
  9902  001756  0100               	movlb	0	; () banked
  9903  001758  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9904  00175A  26D9               	addwf	fsr2l,f,c
  9905  00175C  0100               	movlb	0	; () banked
  9906  00175E  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9907  001760  22DA               	addwfc	fsr2h,f,c
  9908  001762  0100               	movlb	0	; () banked
  9909  001764  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9913  001768  0E03               	movlw	3
  9914  00176A  0100               	movlb	0	; () banked
  9915  00176C  0100               	movlb	0	; () banked
  9916  00176E  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9917  001770  0100               	movlb	0	; () banked
  9918  001772  0100               	movlb	0	; () banked
  9919  001774  6F80               	movwf	i2memcpy@d1& (0+255),b
  9920  001776  0E00               	movlw	0
  9921  001778  0100               	movlb	0	; () banked
  9922  00177A  0100               	movlb	0	; () banked
  9923  00177C  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9924  00177E  0100               	movlb	0	; () banked
  9925  001780  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9926  001782  0100               	movlb	0	; () banked
  9927  001784  0100               	movlb	0	; () banked
  9928  001786  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9929  00178A  0100               	movlb	0	; () banked
  9930  00178C  0100               	movlb	0	; () banked
  9931  00178E  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9932  001792  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9933  001796  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9934  00179A  EC01  F010         	call	i2_memcpy	;wreg free
  9935                           
  9936                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9937  00179E  0100               	movlb	0	; () banked
  9938  0017A0  EE20 F034          	lfsr	2,52
  9939  0017A4  0100               	movlb	0	; () banked
  9940  0017A6  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9941  0017A8  26D9               	addwf	fsr2l,f,c
  9942  0017AA  0100               	movlb	0	; () banked
  9943  0017AC  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9944  0017AE  22DA               	addwfc	fsr2h,f,c
  9945  0017B0  0100               	movlb	0	; () banked
  9946  0017B2  EE10 F034          	lfsr	1,52
  9947  0017B6  0100               	movlb	0	; () banked
  9948  0017B8  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9949  0017BA  26E1               	addwf	fsr1l,f,c
  9950  0017BC  0100               	movlb	0	; () banked
  9951  0017BE  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9952  0017C0  22E2               	addwfc	fsr1h,f,c
  9953  0017C2  50E7               	movf	indf1,w,c
  9954  0017C4  0100               	movlb	0	; () banked
  9955  0017C6  6F90               	movwf	??i2_send_msg& (0+255),b
  9956  0017C8  0100               	movlb	0	; () banked
  9957  0017CA  2990               	incf	??i2_send_msg& (0+255),w,b
  9958  0017CC  0B03               	andlw	3
  9959  0017CE  6EDF               	movwf	indf2,c
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;messages.c: 59: qmsg->full = 1;
  9963  0017D0  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9964  0017D4  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9965  0017D8  0E01               	movlw	1
  9966  0017DA  6EDF               	movwf	indf2,c
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;messages.c: 60: return (1);
  9970  0017DC  0E01               	movlw	1
  9971  0017DE  0012               	return	
  9972  0017E0                     __end_ofi2_send_msg:
  9973                           	opt stack 0
  9974                           pclatu	equ	0xFFB
  9975                           pclath	equ	0xFFA
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodh	equ	0xFF4
  9981                           prodl	equ	0xFF3
  9982                           intcon	equ	0xFF2
  9983                           postinc0	equ	0xFEE
  9984                           fsr0h	equ	0xFEA
  9985                           fsr0l	equ	0xFE9
  9986                           wreg	equ	0xFE8
  9987                           indf1	equ	0xFE7
  9988                           postdec1	equ	0xFE5
  9989                           fsr1h	equ	0xFE2
  9990                           fsr1l	equ	0xFE1
  9991                           bsr	equ	0xFE0
  9992                           indf2	equ	0xFDF
  9993                           postinc2	equ	0xFDE
  9994                           postdec2	equ	0xFDD
  9995                           fsr2h	equ	0xFDA
  9996                           fsr2l	equ	0xFD9
  9997                           status	equ	0xFD8
  9998                           
  9999 ;; *************** function i2_memcpy *****************
 10000 ;; Defined at:
 10001 ;;		line 11 in file "/Applications/microchip/xc8/v1.30/sources/common/memcpy.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;  d1              2    0[BANK0 ] PTR void 
 10004 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
 10005 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10006 ;;		 -> main@msgbuffer(11), 
 10007 ;;  s1              2    2[BANK0 ] PTR const void 
 10008 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 10009 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 10010 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
 10011 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(53), 
 10012 ;;  n               2    4[BANK0 ] unsigned int 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
 10015 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 10016 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 10017 ;;		 -> buffer_temp(4), NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), 
 10018 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(53), 
 10019 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
 10020 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
 10021 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10022 ;;		 -> main@msgbuffer(11), 
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  2    0[BANK0 ] PTR void 
 10025 ;; Registers used:
 10026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10032 ;;      Params:         0       6       0       0       0
 10033 ;;      Locals:         0       4       0       0       0
 10034 ;;      Temps:          0       0       0       0       0
 10035 ;;      Totals:         0      10       0       0       0
 10036 ;;Total ram usage:       10 bytes
 10037 ;; Hardware stack levels used:    1
 10038 ;; This function calls:
 10039 ;;		Nothing
 10040 ;; This function is called by:
 10041 ;;		i2_send_msg
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text50
 10046  002002                     __ptext50:
 10047                           	opt stack 0
 10048  002002                     i2_memcpy:
 10049                           	opt stack 15
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;incstack = 0
 10053  002002  0100               	movlb	0	; () banked
 10054  002004  0100               	movlb	0	; () banked
 10055  002006  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
 10056  00200A  0100               	movlb	0	; () banked
 10057  00200C  0100               	movlb	0	; () banked
 10058  00200E  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
 10059  002012  0100               	movlb	0	; () banked
 10060  002014  0100               	movlb	0	; () banked
 10061  002016  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
 10062  00201A  0100               	movlb	0	; () banked
 10063  00201C  0100               	movlb	0	; () banked
 10064  00201E  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
 10065  002022  D012               	goto	i2l4478
 10066  002024                     i2l4472:
 10067                           
 10068                           ; BSR set to: 0
 10069  002024  C088  FFD9         	movff	i2memcpy@s,fsr2l
 10070  002028  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
 10071  00202C  C086  FFE1         	movff	i2memcpy@d,fsr1l
 10072  002030  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
 10073  002034  CFDF FFE7          	movff	indf2,indf1
 10074                           
 10075                           ; BSR set to: 0
 10076  002038  0100               	movlb	0	; () banked
 10077  00203A  0100               	movlb	0	; () banked
 10078  00203C  4B88               	infsnz	i2memcpy@s& (0+255),f,b
 10079  00203E  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
 10080                           
 10081                           ; BSR set to: 0
 10082  002040  0100               	movlb	0	; () banked
 10083  002042  0100               	movlb	0	; () banked
 10084  002044  4B86               	infsnz	i2memcpy@d& (0+255),f,b
 10085  002046  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
 10086  002048                     i2l4478:
 10087                           
 10088                           ; BSR set to: 0
 10089  002048  0100               	movlb	0	; () banked
 10090  00204A  0100               	movlb	0	; () banked
 10091  00204C  0784               	decf	i2memcpy@n& (0+255),f,b
 10092  00204E  A0D8               	btfss	status,0,c
 10093  002050  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
 10094  002052  0100               	movlb	0	; () banked
 10095  002054  2984               	incf	i2memcpy@n& (0+255),w,b
 10096  002056  B4D8               	btfsc	status,2,c
 10097  002058  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
 10098  00205A  B4D8               	btfsc	status,2,c
 10099                           
 10100                           ; BSR set to: 0
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;	Return value of i2_memcpy is never used
 10104  00205C  0012               	return	
 10105  00205E  D7E2               	goto	i2l4472
 10106  002060                     __end_ofi2_memcpy:
 10107                           	opt stack 0
 10108                           pclatu	equ	0xFFB
 10109                           pclath	equ	0xFFA
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           postinc0	equ	0xFEE
 10118                           fsr0h	equ	0xFEA
 10119                           fsr0l	equ	0xFE9
 10120                           wreg	equ	0xFE8
 10121                           indf1	equ	0xFE7
 10122                           postdec1	equ	0xFE5
 10123                           fsr1h	equ	0xFE2
 10124                           fsr1l	equ	0xFE1
 10125                           bsr	equ	0xFE0
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           postdec2	equ	0xFDD
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8
 10132                           
 10133 ;; *************** function _SleepIfOkay *****************
 10134 ;; Defined at:
 10135 ;;		line 228 in file "source/messages.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;		None
 10140 ;; Return value:  Size  Location     Type
 10141 ;;		None               void
 10142 ;; Registers used:
 10143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10149 ;;      Params:         0       0       0       0       0
 10150 ;;      Locals:         0       0       0       0       0
 10151 ;;      Temps:          0       0       0       0       0
 10152 ;;      Totals:         0       0       0       0       0
 10153 ;;Total ram usage:        0 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    2
 10156 ;; This function calls:
 10157 ;;		_enter_sleep_mode
 10158 ;;		i2_check_msg
 10159 ;;		i2_in_high_int
 10160 ;;		i2_in_low_int
 10161 ;; This function is called by:
 10162 ;;		_InterruptHandlerHigh
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text51
 10167  001ED6                     __ptext51:
 10168                           	opt stack 0
 10169  001ED6                     _SleepIfOkay:
 10170                           	opt stack 17
 10171                           
 10172                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;incstack = 0
 10176  001ED6  663F               	tstfsz	_MQ_Main_Willing_to_block,c
 10177  001ED8  D001               	goto	i2l3582
 10178  001EDA  0012               	return	
 10179  001EDC                     i2l3582:
 10180                           
 10181                           ;messages.c: 232: }
 10182                           ;messages.c: 235: if (in_low_int()) {
 10183  001EDC  ECF3  F010         	call	i2_in_low_int	;wreg free
 10184  001EE0  0100               	movlb	0	; () banked
 10185  001EE2  0100               	movlb	0	; () banked
 10186  001EE4  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
 10187  001EE6  0100               	movlb	0	; () banked
 10188  001EE8  1182               	iorwf	?i2_in_low_int& (0+255),w,b
 10189  001EEA  A4D8               	btfss	status,2,c
 10190  001EEC  0012               	return	
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;messages.c: 237: }
 10194                           ;messages.c: 240: if (!in_high_int()) {
 10195                           
 10196                           ; BSR set to: 0
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;messages.c: 236: return;
 10200  001EEE  ECE9  F012         	call	i2_in_high_int	;wreg free
 10201  001EF2  0100               	movlb	0	; () banked
 10202  001EF4  0100               	movlb	0	; () banked
 10203  001EF6  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10204  001EF8  0100               	movlb	0	; () banked
 10205  001EFA  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10206  001EFC  B4D8               	btfsc	status,2,c
 10207  001EFE  0012               	return	
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;messages.c: 242: }
 10211                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 10212                           
 10213                           ; BSR set to: 0
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;messages.c: 241: return;
 10217  001F00  0101               	movlb	1	; () banked
 10218  001F02  0E01               	movlw	high _ToMainHigh_MQ
 10219  001F04  0100               	movlb	0	; () banked
 10220  001F06  0100               	movlb	0	; () banked
 10221  001F08  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 10222  001F0A  0101               	movlb	1	; () banked
 10223  001F0C  0E36               	movlw	low _ToMainHigh_MQ
 10224  001F0E  0100               	movlb	0	; () banked
 10225  001F10  0100               	movlb	0	; () banked
 10226  001F12  6F80               	movwf	i2check_msg@qptr& (0+255),b
 10227  001F14  EC07  F012         	call	i2_check_msg	;wreg free
 10228  001F18  0900               	iorlw	0
 10229  001F1A  A4D8               	btfss	status,2,c
 10230  001F1C  0012               	return	
 10231                           
 10232                           ;messages.c: 249: }
 10233                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 10234                           
 10235                           ;messages.c: 248: return;
 10236  001F1E  0101               	movlb	1	; () banked
 10237  001F20  0E01               	movlw	high _ToMainLow_MQ
 10238  001F22  0100               	movlb	0	; () banked
 10239  001F24  0100               	movlb	0	; () banked
 10240  001F26  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 10241  001F28  0101               	movlb	1	; () banked
 10242  001F2A  0E6C               	movlw	low _ToMainLow_MQ
 10243  001F2C  0100               	movlb	0	; () banked
 10244  001F2E  0100               	movlb	0	; () banked
 10245  001F30  6F80               	movwf	i2check_msg@qptr& (0+255),b
 10246  001F32  EC07  F012         	call	i2_check_msg	;wreg free
 10247  001F36  0900               	iorlw	0
 10248  001F38  B4D8               	btfsc	status,2,c
 10249                           
 10250                           ;messages.c: 252: }
 10251                           ;messages.c: 253: enter_sleep_mode();
 10252                           
 10253                           ;messages.c: 251: return;
 10254  001F3A  ECFA  F012         	call	_enter_sleep_mode	;wreg free
 10255  001F3E  0012               	return	
 10256  001F40                     __end_of_SleepIfOkay:
 10257                           	opt stack 0
 10258                           pclatu	equ	0xFFB
 10259                           pclath	equ	0xFFA
 10260                           tblptru	equ	0xFF8
 10261                           tblptrh	equ	0xFF7
 10262                           tblptrl	equ	0xFF6
 10263                           tablat	equ	0xFF5
 10264                           prodh	equ	0xFF4
 10265                           prodl	equ	0xFF3
 10266                           intcon	equ	0xFF2
 10267                           postinc0	equ	0xFEE
 10268                           fsr0h	equ	0xFEA
 10269                           fsr0l	equ	0xFE9
 10270                           wreg	equ	0xFE8
 10271                           indf1	equ	0xFE7
 10272                           postdec1	equ	0xFE5
 10273                           fsr1h	equ	0xFE2
 10274                           fsr1l	equ	0xFE1
 10275                           bsr	equ	0xFE0
 10276                           indf2	equ	0xFDF
 10277                           postinc2	equ	0xFDE
 10278                           postdec2	equ	0xFDD
 10279                           fsr2h	equ	0xFDA
 10280                           fsr2l	equ	0xFD9
 10281                           status	equ	0xFD8
 10282                           
 10283 ;; *************** function i2_in_low_int *****************
 10284 ;; Defined at:
 10285 ;;		line 30 in file "source/interrupts.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;		None
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  2    2[BANK0 ] int 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2, status,0, cstack
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10299 ;;      Params:         0       2       0       0       0
 10300 ;;      Locals:         0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0
 10302 ;;      Totals:         0       2       0       0       0
 10303 ;;Total ram usage:        2 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    1
 10306 ;; This function calls:
 10307 ;;		i2_in_high_int
 10308 ;; This function is called by:
 10309 ;;		_SleepIfOkay
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text52
 10314  0021E6                     __ptext52:
 10315                           	opt stack 0
 10316  0021E6                     i2_in_low_int:
 10317                           	opt stack 17
 10318                           
 10319                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 10320                           
 10321                           ;incstack = 0
 10322  0021E6  ACF2               	btfss	intcon,6,c	;volatile
 10323  0021E8  D008               	goto	i2l4412
 10324                           
 10325                           ;interrupts.c: 32: return (0);
 10326  0021EA  0E00               	movlw	0
 10327  0021EC  0100               	movlb	0	; () banked
 10328  0021EE  0100               	movlb	0	; () banked
 10329  0021F0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10330  0021F2  0E00               	movlw	0
 10331  0021F4  0100               	movlb	0	; () banked
 10332  0021F6  6F82               	movwf	?i2_in_low_int& (0+255),b
 10333  0021F8  0012               	return	
 10334  0021FA                     i2l4412:
 10335  0021FA  ECE9  F012         	call	i2_in_high_int	;wreg free
 10336  0021FE  0100               	movlb	0	; () banked
 10337  002200  0100               	movlb	0	; () banked
 10338  002202  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 10339  002204  0100               	movlb	0	; () banked
 10340  002206  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 10341  002208  B4D8               	btfsc	status,2,c
 10342  00220A  D008               	goto	i2l4420
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;interrupts.c: 34: return (0);
 10346  00220C  0E00               	movlw	0
 10347  00220E  0100               	movlb	0	; () banked
 10348  002210  0100               	movlb	0	; () banked
 10349  002212  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10350  002214  0E00               	movlw	0
 10351  002216  0100               	movlb	0	; () banked
 10352  002218  6F82               	movwf	?i2_in_low_int& (0+255),b
 10353  00221A  0012               	return	
 10354  00221C                     i2l4420:
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;interrupts.c: 36: return (1);
 10358  00221C  0E00               	movlw	0
 10359  00221E  0100               	movlb	0	; () banked
 10360  002220  0100               	movlb	0	; () banked
 10361  002222  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 10362  002224  0E01               	movlw	1
 10363  002226  0100               	movlb	0	; () banked
 10364  002228  6F82               	movwf	?i2_in_low_int& (0+255),b
 10365  00222A  0012               	return	
 10366  00222C                     __end_ofi2_in_low_int:
 10367                           	opt stack 0
 10368                           pclatu	equ	0xFFB
 10369                           pclath	equ	0xFFA
 10370                           tblptru	equ	0xFF8
 10371                           tblptrh	equ	0xFF7
 10372                           tblptrl	equ	0xFF6
 10373                           tablat	equ	0xFF5
 10374                           prodh	equ	0xFF4
 10375                           prodl	equ	0xFF3
 10376                           intcon	equ	0xFF2
 10377                           postinc0	equ	0xFEE
 10378                           fsr0h	equ	0xFEA
 10379                           fsr0l	equ	0xFE9
 10380                           wreg	equ	0xFE8
 10381                           indf1	equ	0xFE7
 10382                           postdec1	equ	0xFE5
 10383                           fsr1h	equ	0xFE2
 10384                           fsr1l	equ	0xFE1
 10385                           bsr	equ	0xFE0
 10386                           indf2	equ	0xFDF
 10387                           postinc2	equ	0xFDE
 10388                           postdec2	equ	0xFDD
 10389                           fsr2h	equ	0xFDA
 10390                           fsr2l	equ	0xFD9
 10391                           status	equ	0xFD8
 10392                           
 10393 ;; *************** function i2_in_high_int *****************
 10394 ;; Defined at:
 10395 ;;		line 22 in file "source/interrupts.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;		None
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;		None
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  2    0[BANK0 ] int 
 10402 ;; Registers used:
 10403 ;;		wreg, status,2
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10409 ;;      Params:         0       2       0       0       0
 10410 ;;      Locals:         0       0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0
 10412 ;;      Totals:         0       2       0       0       0
 10413 ;;Total ram usage:        2 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; This function calls:
 10416 ;;		Nothing
 10417 ;; This function is called by:
 10418 ;;		_SleepIfOkay
 10419 ;;		i2_in_low_int
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text53
 10424  0025D2                     __ptext53:
 10425                           	opt stack 0
 10426  0025D2                     i2_in_high_int:
 10427                           	opt stack 17
 10428                           
 10429                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;incstack = 0
 10433  0025D2  0E00               	movlw	0
 10434  0025D4  AEF2               	btfss	intcon,7,c	;volatile
 10435  0025D6  0E01               	movlw	1
 10436  0025D8  0100               	movlb	0	; () banked
 10437  0025DA  0100               	movlb	0	; () banked
 10438  0025DC  6F80               	movwf	?i2_in_high_int& (0+255),b
 10439  0025DE  0100               	movlb	0	; () banked
 10440  0025E0  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 10441  0025E2  0012               	return	
 10442  0025E4                     __end_ofi2_in_high_int:
 10443                           	opt stack 0
 10444                           pclatu	equ	0xFFB
 10445                           pclath	equ	0xFFA
 10446                           tblptru	equ	0xFF8
 10447                           tblptrh	equ	0xFF7
 10448                           tblptrl	equ	0xFF6
 10449                           tablat	equ	0xFF5
 10450                           prodh	equ	0xFF4
 10451                           prodl	equ	0xFF3
 10452                           intcon	equ	0xFF2
 10453                           postinc0	equ	0xFEE
 10454                           fsr0h	equ	0xFEA
 10455                           fsr0l	equ	0xFE9
 10456                           wreg	equ	0xFE8
 10457                           indf1	equ	0xFE7
 10458                           postdec1	equ	0xFE5
 10459                           fsr1h	equ	0xFE2
 10460                           fsr1l	equ	0xFE1
 10461                           bsr	equ	0xFE0
 10462                           indf2	equ	0xFDF
 10463                           postinc2	equ	0xFDE
 10464                           postdec2	equ	0xFDD
 10465                           fsr2h	equ	0xFDA
 10466                           fsr2l	equ	0xFD9
 10467                           status	equ	0xFD8
 10468                           
 10469 ;; *************** function i2_check_msg *****************
 10470 ;; Defined at:
 10471 ;;		line 222 in file "source/messages.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 10474 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      unsigned char 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10486 ;;      Params:         0       2       0       0       0
 10487 ;;      Locals:         0       0       0       0       0
 10488 ;;      Temps:          0       1       0       0       0
 10489 ;;      Totals:         0       3       0       0       0
 10490 ;;Total ram usage:        3 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_SleepIfOkay
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text54
 10500  00240E                     __ptext54:
 10501                           	opt stack 0
 10502  00240E                     i2_check_msg:
 10503                           	opt stack 18
 10504                           
 10505                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;incstack = 0
 10509  00240E  0100               	movlb	0	; () banked
 10510  002410  EE20 F035          	lfsr	2,53
 10511  002414  0100               	movlb	0	; () banked
 10512  002416  5180               	movf	i2check_msg@qptr& (0+255),w,b
 10513  002418  26D9               	addwf	fsr2l,f,c
 10514  00241A  0100               	movlb	0	; () banked
 10515  00241C  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 10516  00241E  22DA               	addwfc	fsr2h,f,c
 10517  002420  50DF               	movf	indf2,w,c
 10518  002422  0100               	movlb	0	; () banked
 10519  002424  6F82               	movwf	??i2_check_msg& (0+255),b
 10520  002426  0100               	movlb	0	; () banked
 10521  002428  5182               	movf	??i2_check_msg& (0+255),w,b
 10522  00242A  0D0D               	mullw	13
 10523  00242C  50F3               	movf	prodl,w,c
 10524  00242E  0100               	movlb	0	; () banked
 10525  002430  0100               	movlb	0	; () banked
 10526  002432  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 10527  002434  6ED9               	movwf	fsr2l,c
 10528  002436  50F4               	movf	prodh,w,c
 10529  002438  0100               	movlb	0	; () banked
 10530  00243A  0100               	movlb	0	; () banked
 10531  00243C  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 10532  00243E  6EDA               	movwf	fsr2h,c
 10533  002440  50DF               	movf	indf2,w,c
 10534  002442  0012               	return	
 10535  002444                     __end_ofi2_check_msg:
 10536                           	opt stack 0
 10537                           pclatu	equ	0xFFB
 10538                           pclath	equ	0xFFA
 10539                           tblptru	equ	0xFF8
 10540                           tblptrh	equ	0xFF7
 10541                           tblptrl	equ	0xFF6
 10542                           tablat	equ	0xFF5
 10543                           prodh	equ	0xFF4
 10544                           prodl	equ	0xFF3
 10545                           intcon	equ	0xFF2
 10546                           postinc0	equ	0xFEE
 10547                           fsr0h	equ	0xFEA
 10548                           fsr0l	equ	0xFE9
 10549                           wreg	equ	0xFE8
 10550                           indf1	equ	0xFE7
 10551                           postdec1	equ	0xFE5
 10552                           fsr1h	equ	0xFE2
 10553                           fsr1l	equ	0xFE1
 10554                           bsr	equ	0xFE0
 10555                           indf2	equ	0xFDF
 10556                           postinc2	equ	0xFDE
 10557                           postdec2	equ	0xFDD
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8
 10561                           
 10562 ;; *************** function _enter_sleep_mode *****************
 10563 ;; Defined at:
 10564 ;;		line 202 in file "source/messages.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;		None
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;		None               void
 10571 ;; Registers used:
 10572 ;;		None
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10578 ;;      Params:         0       0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0
 10580 ;;      Temps:          0       0       0       0       0
 10581 ;;      Totals:         0       0       0       0       0
 10582 ;;Total ram usage:        0 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_SleepIfOkay
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text55
 10592  0025F4                     __ptext55:
 10593                           	opt stack 0
 10594  0025F4                     _enter_sleep_mode:
 10595                           	opt stack 18
 10596                           
 10597                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;incstack = 0
 10601  0025F4  8ED3               	bsf	4051,7,c	;volatile
 10602  0025F6  0003               	sleep		;# 
 10603  0025F8  0012               	return	
 10604  0025FA                     __end_of_enter_sleep_mode:
 10605                           	opt stack 0
 10606  0000                     pclatu	equ	0xFFB
 10607                           pclath	equ	0xFFA
 10608                           tblptru	equ	0xFF8
 10609                           tblptrh	equ	0xFF7
 10610                           tblptrl	equ	0xFF6
 10611                           tablat	equ	0xFF5
 10612                           prodh	equ	0xFF4
 10613                           prodl	equ	0xFF3
 10614                           intcon	equ	0xFF2
 10615                           postinc0	equ	0xFEE
 10616                           fsr0h	equ	0xFEA
 10617                           fsr0l	equ	0xFE9
 10618                           wreg	equ	0xFE8
 10619                           indf1	equ	0xFE7
 10620                           postdec1	equ	0xFE5
 10621                           fsr1h	equ	0xFE2
 10622                           fsr1l	equ	0xFE1
 10623                           bsr	equ	0xFE0
 10624                           indf2	equ	0xFDF
 10625                           postinc2	equ	0xFDE
 10626                           postdec2	equ	0xFDD
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           pclatu	equ	0xFFB
 10631                           pclath	equ	0xFFA
 10632                           tblptru	equ	0xFF8
 10633                           tblptrh	equ	0xFF7
 10634                           tblptrl	equ	0xFF6
 10635                           tablat	equ	0xFF5
 10636                           prodh	equ	0xFF4
 10637                           prodl	equ	0xFF3
 10638                           intcon	equ	0xFF2
 10639                           postinc0	equ	0xFEE
 10640                           fsr0h	equ	0xFEA
 10641                           fsr0l	equ	0xFE9
 10642                           wreg	equ	0xFE8
 10643                           indf1	equ	0xFE7
 10644                           postdec1	equ	0xFE5
 10645                           fsr1h	equ	0xFE2
 10646                           fsr1l	equ	0xFE1
 10647                           bsr	equ	0xFE0
 10648                           indf2	equ	0xFDF
 10649                           postinc2	equ	0xFDE
 10650                           postdec2	equ	0xFDD
 10651                           fsr2h	equ	0xFDA
 10652                           fsr2l	equ	0xFD9
 10653                           status	equ	0xFD8
 10654                           
 10655                           	psect	param0
 10656  0000                     pclatu	equ	0xFFB
 10657                           pclath	equ	0xFFA
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           postinc0	equ	0xFEE
 10666                           fsr0h	equ	0xFEA
 10667                           fsr0l	equ	0xFE9
 10668                           wreg	equ	0xFE8
 10669                           indf1	equ	0xFE7
 10670                           postdec1	equ	0xFE5
 10671                           fsr1h	equ	0xFE2
 10672                           fsr1l	equ	0xFE1
 10673                           bsr	equ	0xFE0
 10674                           indf2	equ	0xFDF
 10675                           postinc2	equ	0xFDE
 10676                           postdec2	equ	0xFDD
 10677                           fsr2h	equ	0xFDA
 10678                           fsr2l	equ	0xFD9
 10679                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         243
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     50      82
    BANK0           128     68      77
    BANK1           256     52     214
    BANK2           256     73     127
    BANK3           256      0       0

Pointer List with Targets:

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[53]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[53]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    getMessageId@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    validateMessage@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    parser_lthread@msgbuf	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_write@msg	PTR unsigned char  size(2) Largest target is 12
		 -> parser_lthread@data_1667(BANK1[12]), parser_lthread@reply_1665(BANK1[6]), parser_lthread@reply_1664(BANK1[6]), parser_lthread@reply(BANK1[6]), 
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 53
		 -> main@ic(BANK2[53]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 5
		 -> parser_lthread@data(BANK1[5]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 53
		 -> NULL(NULL[0]), main@ic(BANK2[53]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 53
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK2[53]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 53
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), main@ic(BANK2[53]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 53
		 -> buffer_temp(COMRAM[4]), NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK2[53]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_parseUART
    _parseUART->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _parser_lthread->_validateMessage
    _uart_write->_WriteUSART
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainHigh_sendmsg
    _i2c_master_int_handler->i2_ToMainLow_sendmsg
    i2_ToMainLow_sendmsg->i2_send_msg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_parser_lthread
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   12509
                                              0 BANK2     73    73      0
                         _OpenTimer0
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                _i2c_configure_slave
                    _i2c_master_recv
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _parser_lthread
                         _uart_write
 ---------------------------------------------------------------------------------
 (1) _parser_lthread                                      54    48      6    4455
                                              0 BANK1     52    46      6
                       _getMessageId
               _i2c_configure_master
                    _i2c_master_recv
                    _i2c_master_send
                         _uart_write
                    _validateMessage
 ---------------------------------------------------------------------------------
 (2) _validateMessage                                     16    13      3     597
                                             51 BANK0     16    13      3
 ---------------------------------------------------------------------------------
 (1) _uart_write                                           5     3      2     489
                                             52 BANK0      5     3      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                      7     5      2     257
                                             51 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_configure_master                                 2     2      0      31
                                             51 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _getMessageId                                         4     1      3     192
                                             51 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       3     1      2      96
                                             51 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                             55 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                             51 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     2      0      31
                                             51 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                             57 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             55 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             53 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             51 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                             51 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2227
                                              7 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2227
                                              7 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2004
                                             61 BANK0      7     0      7
                                              0 BANK1      7     7      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     459
                                             51 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                             51 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             51 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5401
                                             33 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    5283
                                             32 COMRAM     1     1      0
                          _ReadUSART
                 _ToMainHigh_sendmsg
                          _parseUART
 ---------------------------------------------------------------------------------
 (7) _parseUART                                            6     6      0    2506
                                             26 COMRAM     6     6      0
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (8) _ToMainLow_sendmsg                                    4     1      3    2503
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (7) _ToMainHigh_sendmsg                                   4     1      3    2743
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _send_msg                                            12     6      6    2160
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (10) i1_memcpy                                           10     4      6     646
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0     118
                                              4 COMRAM     2     2      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0   12371
                                             37 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (12) _timer0_int_handler                                  0     0      0     121
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (13) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                     0     0      0   11966
             _i2c_master_int_handler
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (13) _i2c_slave_int_handler                              11    11      0    4648
                                             26 BANK0     11    11      0
                       _handle_start
              _start_i2c_slave_reply
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (14) _start_i2c_slave_reply                               6     4      2     158
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (14) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _i2c_master_int_handler                              1     1      0    7318
                                             26 BANK0      1     1      0
               i2_ToMainHigh_sendmsg
                i2_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (14) i2_ToMainLow_sendmsg                                 4     1      3    3443
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_ToMainHigh_sendmsg                                4     1      3    3875
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (15) i2_send_msg                                         12     6      6    2963
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_configure_slave
   _i2c_master_recv
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _parser_lthread
     _getMessageId
     _i2c_configure_master
     _i2c_master_recv
     _i2c_master_send
     _uart_write
       _WriteUSART
     _validateMessage
   _uart_write
     _WriteUSART

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainHigh_sendmsg
       _send_msg
         i1_memcpy
     _parseUART
       _ToMainLow_sendmsg
         _send_msg
           i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
       i2_ToMainLow_sendmsg
         i2_send_msg
           i2_memcpy
     _i2c_slave_int_handler
       _handle_start
       _start_i2c_slave_reply
       i2_ToMainHigh_sendmsg
         i2_send_msg
           i2_memcpy
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     49      7F       8       49.6%
BITBANK1           100      0       0       5        0.0%
BANK1              100     34      D6       6       83.6%
BITBANK0            80      0       0       3        0.0%
BANK0               80     44      4D       4       60.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     32      52       1       64.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F4      11        0.0%
DATA                 0      0     1F4      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat May  3 21:07:56 2014

                     uart_write@msg 00B4                                   _x 003D  
          _MQ_Main_Willing_to_block 003F               ?i2_ToMainHigh_sendmsg 0096  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 22B2  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 24BA  
           parser_lthread@data_1667 01C1              parser_lthread@checksum 01CD  
                      __CFG_CP0$OFF 000000                                 l520 082C  
                               l530 0B6E                                 l640 1C1E  
                               l464 1F66                                 l644 1C3E  
                               l645 1C40                                 l646 1C4E  
                               l591 2468                                 l647 1C50  
                               l592 246A                                 l884 253E  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                    _FromMainLow_MQ 0100                                 prod 000FF3  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 00B3                    ??_init_uart_recv 00B5  
                   ReadTimer1@timer 0003                      _parser_lthread 0708  
                              l4010 1612                                l4026 16D8  
                              l4062 18E0                                l4066 1938  
                              l3534 21D6                                l3526 21B4  
                              l3632 108C                                l3810 1D48  
                              l3642 10DC                                l3548 2260  
                              l3804 1D1C                                l4356 255E  
                              l4380 1546                                l4364 1438  
                              l3652 1154                                l3662 11B8  
                              l3646 10F6                                l3654 116C  
                              l3816 1D74                                l4376 151A  
                              l3904 09D0                                l3664 11F6  
                              l3648 1134                                l4394 2490  
                              l3906 0A02                                l3916 0A56  
                              l3668 1234                                l3766 1C20  
                              l3758 1C0A                                l3872 077E  
                              l3864 0736                                l3954 0B8C  
                              l3866 0744                                l3876 07AA  
                              l3868 0776                                l3884 07F0  
                              l3990 1FC6                                l3982 1DC4  
                              l3894 08D8                                l3968 1F92  
                              l3898 0954                                l3996 1FEA  
                              _LATB 000F8A                                _INCH 004B  
                              u3160 15A2                                u3307 2540  
                              _FOOT 0049                                i1l59 0070  
                  uart_write@length 00B7                     _FromMainHigh_MQ 0249  
                              _Send 0033                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 1006  
                              _inch 00C6                                _foot 00C4  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 0212                                pclat 000FFA  
                       i2_check_msg 240E                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0080  
                              start 00B6                       __CFG_FOSC2$ON 000000  
                        i2_send_msg 16DC       __size_of_i2c_configure_master 0054  
         ToMainHigh_recvmsg@msgtype 01A9         __end_ofi2_ToMainLow_sendmsg 23D8  
                    send_msg@length 000D         __size_of_timer0_int_handler 0014  
           ??_i2c_slave_int_handler 009A                         _Delay1KTCYx 253A  
                             ?_main 0001                    ?_validateMessage 00B3  
                             _T0CON 000FD5                          i1memcpy@d1 0001  
                             i2l306 1AF4                               i2l330 01C6  
                             i2l324 051C                               i2l326 0182  
                             i2l352 048E                               i2l344 0356  
                             i1l658 2510                               i2l358 052E  
                             i2l384 0DD2                               i2l377 0C24  
                             i2l388 0ECA                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080              __end_of_parser_lthread 0BE8  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
                             _State 0040           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 2270          ToMainLow_recvmsg@maxlength 01AD  
           i2c_configure_slave@addr 00B4                               tablat 000FF5  
                             status 000FD8            i2ToMainHigh_sendmsg@data 0097  
                  __end_ofi1_memcpy 2334                    __end_ofi2_memcpy 2060  
                    WriteUSART@data 00B3                     __initialization 1DF6  
            ??i2_ToMainHigh_sendmsg 0099                        __end_of_main 124E  
                        _ReadTimer1 25AE         __size_of_timer1_int_handler 001A  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 0046                __end_of_getMessageId 2494  
                            ??_main 00C4                     send_msg@msgtype 000E  
                     __activetblptr 000002                     send_msg@tlength 0012  
              __end_of_handle_start 1B40                     ?_parser_lthread 01A2  
           ??_uart_recv_int_handler 0021                              i1l4520 182A  
                            i1l4522 1834                              i1l4514 17F2  
                            i1l4462 2306                              i1l4526 1860  
                            i1l4542 18B2                              i1l4528 186A  
                            i1l4554 2180                              i1l4468 2322  
                            i1l4492 1B78                              i1l4566 0066  
                            i2l4112 1B10                          _OpenTimer0 2444  
                            i2l4114 1B28                              i2l4300 04F0  
                            i2l4212 0178                              i2l4142 0D5C  
                            i2l4118 0BEA                              i2l4230 01FE  
                            i2l4206 0160                      __CFG_WDTEN$OFF 000000  
                            i2l4152 0DF0                              i2l4128 0CC6  
                            i2l4136 0D1C                              i2l4320 062C  
                            i2l4312 0592                              i2l4232 022A  
                            i2l4146 0D9A                              i2l4306 0532  
                            i2l4250 02BE                              i2l4242 0266  
                            i2l4420 221C                              i2l4412 21FA  
                            i2l4180 0FA8                              i2l4092 1324  
                            i2l4084 126A                              i2l4174 0F1E  
                            i2l4158 0E30                              i2l4190 0FC6  
                            i2l4168 0ED0                              i2l4088 12F6  
                            i2l4096 13A4                              i2l4328 06D2  
                            i2l4272 03CA                              i2l4248 027E  
                            i2l4178 0F70                              i2l4274 040C  
                            i2l3570 24E8                              i2l4436 1738  
                            i2l3564 1CC0                              i2l3582 1EDC  
                            i2l4278 041E                              i2l3574 24EE  
                            i2l3558 1CB6                              i2l4472 2024  
                            i2l3568 24E2                              i2l4478 2048  
       __end_of_i2c_configure_slave 236C                       ??_SleepIfOkay 0084  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
         i2ToMainLow_sendmsg@length 0099                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 01DA       __end_of_start_i2c_slave_reply 1428  
          parser_lthread@reply_1664 01B5            parser_lthread@reply_1665 01BB  
                      i2_in_low_int 21E6                         ?i2_send_msg 008A  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 24E0   i2c_slave_int_handler@data_written 009F  
                   _i2c_master_recv 20B4                     _i2c_master_send 18C8  
                  OpenTimer0@config 00B3                              _ic_ptr 00C9  
                     main@msgbuffer 0200                    __end_of_init_i2c 1A74  
                            _memcpy 1FA4                       _NINETYDEGREES 004D  
                            clear_0 1DFC                              clear_1 1E08  
                            clear_2 1E20                              _uc_ptr 0051  
                            main@ic 0214                              main@uc 020D  
                  __end_of_recv_msg 16DC         start_i2c_slave_reply@length 0085  
                         ??_in_main 00B9                    __end_of_send_msg 1BEA  
                      __pdataCOMRAM 0049                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 00B6            ToMainLow_recvmsg@msgtype 01A9  
              __size_of_in_high_int 0012                     parser_lthread@x 01D4  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1E5E          __end_of_ToMainHigh_recvmsg 22F4  
        __end_of_ToMainHigh_sendmsg 24E0         __end_of_init_timer1_lthread 258A  
               __end_of_SleepIfOkay 1F40                          _WriteUSART 2550  
                    __pcstackCOMRAM 0001                        __pidataBANK0 25FA  
            __size_ofi2_in_high_int 0012                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                   __end_of_ReadUSART 2520  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1CF6  
       __end_of_InterruptHandlerLow 00B6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0136                    _enter_sleep_mode 25F4  
               __size_ofi2_send_msg 0104                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1C7C                       check_msg@qptr 00B3  
           ??_block_on_To_msgqueues 00B9                __size_of_init_queues 006E  
                        __pbssBANK0 00C4                          __pbssBANK1 0100  
                        __pbssBANK2 0249                         ?_OpenTimer0 0001  
                        __pnvCOMRAM 0051             __end_of_i2c_int_handler 2502  
                      ?i2_check_msg 0080             __end_of_i2c_master_recv 2104  
           __end_of_i2c_master_send 19A6            ??_i2c_master_int_handler 009A  
                __size_of_parseUART 00E8               __size_of_getMessageId 0026  
         validateMessage@rollingsum 00BF                   recv_msg@maxlength 00BF  
                   recv_msg@msgtype 00C0                     recv_msg@tlength 01A5  
             __size_of_handle_start 00CC                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0082                             ?_memcpy 00B3  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0082  
                     ??_WriteTimer1 0003      __size_of_i2c_slave_int_handler 064E  
     __end_of_i2c_slave_int_handler 0708        __end_of_i2c_configure_master 20B4  
                        ??i1_memcpy 0007                          ??i2_memcpy 0086  
                     i2_in_high_int 25D2                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
        i2ToMainLow_sendmsg@msgtype 0096                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 23A2                           ?_init_i2c 00B3  
                      _getMessageId 246E                         _SleepIfOkay 1ED6  
                         ?_recv_msg 00BD                          _in_low_int 21A0  
                      _handle_start 1A74                             __Hparam 0000  
                         ?_send_msg 000B                             __Lparam 0000  
        __end_of_timer0_int_handler 2578                         ?_WriteUSART 0001  
                  init_uart_recv@uc 00B3                             _Started 0035  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00A0  
                           __pcinit 1DF6                     __size_of_memcpy 005E  
                        _init_queue 1D7C                             __ramtop 0400  
               __size_of_OpenTimer0 002A                    ??_parser_lthread 01A8  
                           __ptext0 1006                             __ptext1 0708  
                           __ptext2 1428                             __ptext3 1F40  
                           __ptext4 2550                             __ptext5 18C8  
                           __ptext6 20B4                             __ptext7 2060  
                           __ptext8 246E                             __ptext9 2104  
                           _buf_len 0042        __size_ofi2_ToMainLow_sendmsg 0036  
                         _T0CONbits 000FD5                             _in_main 222C  
               __end_of_WriteTimer0 25D2                 __end_of_WriteTimer1 25AE  
                 __end_of_parseUART 18C8                      ?i2_in_high_int 0080  
          __size_of_validateMessage 017E                      __pintcode_body 1C7C  
              end_of_initialization 1E5E      __size_of_uart_recv_int_handler 004E  
                           memcpy@d 00B9                             memcpy@n 00B7  
                           memcpy@s 00BB       __end_of_uart_recv_int_handler 21A0  
                        ??_init_i2c 00B5                       __Lmediumconst 0000  
                           int_func 1C7C             __size_of_init_uart_recv 004E  
                  ?_i2c_int_handler 0001                    ?_i2c_master_recv 0001  
                  ?_i2c_master_send 00B3                          ??_recv_msg 01A2  
                      ??i2_send_msg 0090                          ??_send_msg 0011  
   __size_of_i2c_master_int_handler 041E          __end_of_timer1_int_handler 253A  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0017  
     __size_ofi2_ToMainHigh_sendmsg 0036                          _uart_write 1F40  
                  validateMessage@i 00C0                           _TRISCbits 000F94  
                       uart_write@i 00B8                  __end_ofi2_send_msg 17E0  
               __size_of_WriteUSART 0014               parser_lthread@degrees 01D3  
             parser_lthread@command 01D2            timer1_int_handler@result 0005  
                         _TXSTAbits 000FAC                          main@length 0213  
             parser_lthread@msgtype 01A2                         ?_in_low_int 00B5  
              _i2c_configure_master 2060               _start_i2c_slave_reply 124E  
      __size_of_i2c_configure_slave 0038                __size_ofi2_check_msg 0036  
          __end_of_enter_sleep_mode 25FA                        ??_ReadTimer1 0003  
                _ToMainHigh_recvmsg 22B2                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 24BA                           i1memcpy@n 0005  
                         i1memcpy@s 0009                       __pidataCOMRAM 25E4  
                       ?_init_queue 00B3                           i2memcpy@d 0086  
                       _WriteTimer0 25C0                         _WriteTimer1 259C  
                         i2memcpy@n 0084                           i2memcpy@s 0088  
                    __end_of_memcpy 2002                   _enable_interrupts 25EC  
              __size_of_Delay1KTCYx 0016                 ?_ToMainHigh_recvmsg 01A9  
                   ??i2_in_high_int 0082                 ?_ToMainHigh_sendmsg 0017  
                ?_enable_interrupts 0001                 start_initialization 1DF6  
            _i2c_master_int_handler 0BE8                       ??_in_high_int 00B5  
                         _ReadUSART 2502                   __size_ofi1_memcpy 0040  
                 __size_ofi2_memcpy 005E                 ??_enable_interrupts 00B3  
                      ??_OpenTimer0 00B3      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 25C0       __end_of_block_on_To_msgqueues 1D7C  
                         _OpenUSART 1BEA                   ??_validateMessage 00B6  
      __end_of_InterruptHandlerHigh 1CFE                          init_i2c@ic 00B3  
              ??_ToMainHigh_recvmsg 00C4                ??_ToMainHigh_sendmsg 001A  
             ?_i2c_configure_master 0001                         __pdataBANK0 00CB  
         __end_of_enable_interrupts 25F4                            ??_memcpy 00B9  
                       ?_uart_write 00B4        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 246E                         __pbssCOMRAM 0033  
                        ?_ReadUSART 0001                       ??_init_queues 00B7  
                     __pcstackBANK0 0080                       __pcstackBANK1 01A2  
                     __pcstackBANK2 0200                 __size_of_in_low_int 0046  
                        parseUART@x 0020            start_i2c_slave_reply@msg 0080  
           validateMessage@checksum 00BE                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00B3            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 009E      i2c_slave_int_handler@data_read 00A4  
               __end_of_in_high_int 259C                          ?_OpenUSART 00B3  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01AB  
                      _ToMainLow_MQ 016C                 __size_of_init_queue 007A  
               i2_ToMainLow_sendmsg 23A2                      _init_uart_recv 2104  
                         _check_msg 236C                           __pnvBANK0 00C9  
            ?_start_i2c_slave_reply 0080                   __size_of_init_i2c 00CE  
                      recv_msg@data 00C2                        ??_WriteUSART 00B3  
                      recv_msg@qmsg 01A7                        recv_msg@slot 01A4  
                      recv_msg@qptr 00BD          i2ToMainHigh_sendmsg@length 0099  
                 __size_of_recv_msg 0136                           __pintcode 0008  
                 __size_of_send_msg 00AA                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 01AB                ?i2_ToMainLow_sendmsg 0096  
                          ?_in_main 00B7                   WriteTimer0@timer0 0080  
                _timer0_int_handler 2564                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00BA      i2c_slave_int_handler@error_buf 009C  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 2564                           _parseUART 17E0  
    i2c_slave_int_handler@msg_ready 00A3              __end_of_init_uart_recv 2152  
               __end_of_init_queues 1ED6               i2c_master_recv@length 00B3  
                          _LATCbits 000F8B                 __size_of_uart_write 0064  
            ??_i2c_configure_master 00B3                     i2check_msg@qptr 0080  
                        ?_check_msg 00B3                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                     _I2C_Buffer_Size 00CB  
                     ?i2_in_low_int 0082                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 0018                         _buffer_temp 0045  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
              parser_lthread@Inches 01D0                ??_timer0_int_handler 0084  
             i2c_master_send@length 00B7          __size_of_enable_interrupts 0008  
             ??i2_ToMainLow_sendmsg 0099                parser_lthread@length 01A4  
                _timer1_int_handler 2520                            i1_memcpy 22F4  
              _InterruptHandlerHigh 0008                parser_lthread@msgbuf 01A6  
                       ??_ReadUSART 0001                            i2_memcpy 2002  
              parser_lthread@status 01D1                         _in_high_int 258A  
                      send_msg@data 000F                 _i2c_configure_slave 2334  
                      send_msg@qmsg 0015                        send_msg@slot 0014  
                      send_msg@qptr 000B        __end_ofi2_ToMainHigh_sendmsg 240E  
                         copy_data0 1E52                 ?_timer1_int_handler 0001  
                        ?_parseUART 0001                     ?_init_uart_recv 00B3  
                          _i2c_mode 00C8                         ??_OpenUSART 00B5  
                   OpenUSART@config 00B8                      ??i2_in_low_int 0084  
                          __Hparam0 0000               _uart_recv_int_handler 2152  
                      ??_in_low_int 00B7                            __Lparam0 0000  
              ?_i2c_configure_slave 0001                   ?_enter_sleep_mode 0001  
              ??_timer1_int_handler 0005            __size_of_i2c_int_handler 0022  
                ??_enter_sleep_mode 0080            __size_of_i2c_master_recv 0050  
          __size_of_i2c_master_send 00DE                        ??_init_queue 00B5  
                      ?_WriteTimer0 0080                        ?_WriteTimer1 0001  
           ToMainLow_sendmsg@length 001A             ?_i2c_master_int_handler 0001  
            ?_i2c_slave_int_handler 0001               ?_InterruptHandlerHigh 0001  
                  __size_of_in_main 0044                   i2send_msg@msgtype 008D  
       ToMainHigh_recvmsg@maxlength 01AD                   i2send_msg@tlength 0091  
           init_timer1_lthread@tptr 00B3                         _init_queues 1E68  
                   _validateMessage 1428                  __end_of_in_low_int 21E6  
                          __ptext10 2578                            __ptext11 1E68  
                          __ptext20 236C                            __ptext12 1D7C  
                          __ptext21 253A                            __ptext13 19A6  
                          __ptext30 17E0                            __ptext22 2270  
                          __ptext14 2334                            __ptext31 2494  
                          __ptext23 22B2                            __ptext15 25EC  
                          __ptext40 2564                            __ptext32 24BA  
                          __ptext24 15A6                            __ptext16 1CFE  
                          __ptext41 25C0                            __ptext33 1B40  
                          __ptext25 1FA4                            __ptext17 222C  
                          __ptext50 2002                            __ptext42 24E0  
                          __ptext34 22F4                            __ptext26 1BEA  
                          __ptext18 21A0                            __ptext51 1ED6  
                          __ptext43 00BA                            __ptext35 2502  
                          __ptext27 2444                            __ptext19 258A  
                          __ptext52 21E6                            __ptext44 124E  
                          __ptext36 2520                            __ptext53 25D2  
                          __ptext45 1A74                            __ptext37 259C  
                          __ptext29 2152                            __ptext54 240E  
                          __ptext46 0BE8                            __ptext38 25AE  
                          __ptext55 25F4                            __ptext47 23A2  
                          __ptext48 23D8                            __ptext49 16DC  
    i2c_configure_master@slave_addr 00B4             __size_of_parser_lthread 04E0  
                          _init_i2c 19A6                 _init_timer1_lthread 2578  
                     __size_of_main 0248                       ??i2_check_msg 0082  
                 main@t1thread_data 020B                         ??_check_msg 00B5  
                __end_of_init_queue 1DF6                __size_of_SleepIfOkay 006A  
                          _recv_msg 15A6                  getMessageId@buffer 00B3  
  i2c_slave_int_handler@msg_to_send 00A2               ??_i2c_configure_slave 00B3  
                          _send_msg 1B40                  getMessageId@length 00B5  
                    init_queue@qptr 00B3        i2c_master_send@currentLength 00B8  
                     ??_Delay1KTCYx 00B3      __end_of_i2c_master_int_handler 1006  
               parser_lthread@reply 01AF                 _InterruptHandlerLow 0018  
                      ??_uart_write 00B6                ?_init_timer1_lthread 00B3  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
           i2ToMainLow_sendmsg@data 0097                      OpenUSART@spbrg 00B3  
                          memcpy@d1 00B3                      _command_length 0044  
                          memcpy@s1 00B5               __end_ofi2_in_high_int 25E4  
                      _motor_length 003B                    i2send_msg@length 008C  
                          intlevel1 0000                            intlevel2 0000  
                       ??_parseUART 001B               validateMessage@buffer 00B3  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0082  
             validateMessage@length 00B5                       ?_getMessageId 00B3  
            ?_uart_recv_int_handler 0001                          _TENDEGREES 004F  
                __end_of_uart_write 1FA4               _block_on_To_msgqueues 1CFE  
                     ?_handle_start 0001         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0026                          _OSCCONbits 000FD3  
                parser_lthread@Feet 01CF         i2ToMainHigh_sendmsg@msgtype 0096  
          ToMainHigh_sendmsg@length 001A                  parser_lthread@data 01AA  
               __end_ofi2_check_msg 2444                i2_ToMainHigh_sendmsg 23D8  
             ??_init_timer1_lthread 00B5                       _command_count 0043  
                       _motorStatus 0037             __end_of_validateMessage 15A6  
                       _motor_count 0039              ??_InterruptHandlerHigh 00A5  
                 _ToMainLow_recvmsg 2270                   _ToMainLow_sendmsg 2494  
              __end_ofi2_in_low_int 222C                  ?_ToMainLow_recvmsg 01A9  
               __end_of_Delay1KTCYx 2550                   ??_i2c_int_handler 00A5  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_recv 00B3  
                 ??_i2c_master_send 00B5                  i2c_master_send@msg 00B3  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 0022  
               validateMessage@buf2 00BC                 validateMessage@buf3 00BD  
               ??_ToMainLow_recvmsg 00C4                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      ??_getMessageId 00B6  
                    i2send_msg@qptr 008A                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 00A1                  validateMessage@buf 00BB  
                    ??_handle_start 0080                  validateMessage@len 00C2  
                      _USART_Status 0041  
